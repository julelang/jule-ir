// Auto generated by JuleC.
// JuleC version: jule0.0.15 @master
// Date: 6/8/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1ab137256_comptimeRangeKind{};
struct _1ab181cc8_Importer{};
struct _1ab25a566_Kind{};
struct _1ab27a553_Lookup{};
struct _1ad4c30d4_CommonFlag{};
struct _2038cd7c9_Range16;
struct _2038cdd07_Range32;
struct _2038ce2ad_RangeTable;
struct _1d7a7bc6d_acceptRange;
struct _1d7ad2eb1_StrBuilder;
struct _1d7add917_lazyBuff;
struct _202527127_DirEntry;
struct _20252738b_Directory;
struct _202528d82_File;
struct _20252ae72_Status;
struct _1d7c90c73_cmdAttrs;
struct _1d7b81cb8_Log;
struct _1d8ba6a56_floatInfo;
struct _1d8ba76e4_decimalSlice;
struct _1d8bb9a36_leftCheat;
struct _1d8bba55e_decimal;
struct _1d8bd00bd_Const;
struct _1ab0c1e7c_Token;
struct _1ab0c7746_File;
struct _1ab0c9869_kindPair;
struct _1ab0d0980_lex;
struct _1ab0d55ab_Ast;
struct _1ab0d6447_Node;
struct _1ab0d6865_Directive;
struct _1ab0d7448_TypeDecl;
struct _1ab0d7a53_IdentTypeDecl;
struct _1ab0d7d50_SubIdentTypeDecl;
struct _1ab0d81e6_NamespaceTypeDecl;
struct _1ab0d84e3_SptrTypeDecl;
struct _1ab0d8878_SlcTypeDecl;
struct _1ab0d8b75_TupleTypeDecl;
struct _1ab0d8e72_PtrTypeDecl;
struct _1ab0d9714_ArrTypeDecl;
struct _1ab0d9e62_MapTypeDecl;
struct _1ab0da33b_RetTypeDecl;
struct _1ab0db77c_Expr;
struct _1ab0dba79_RangeExpr;
struct _1ab0dc151_UseExpr;
struct _1ab0dc44d_TupleExpr;
struct _1ab0dc827_LitExpr;
struct _1ab0dcc01_UnsafeExpr;
struct _1ab0dd1a7_IdentExpr;
struct _1ab0dd839_UnaryExpr;
struct _1ab0ddc13_VariadicExpr;
struct _1ab0de0dc_CastExpr;
struct _1ab0de4b6_NsSelectionExpr;
struct _1ab0de890_SubIdentExpr;
struct _1ab0ded46_BinopExpr;
struct _1ab0e04a6_FnCallExpr;
struct _1ab0e0e9b_FieldExprPair;
struct _1ab0e17c6_StructLit;
struct _1ab0e1c7c_BraceLit;
struct _1ab0e25a7_KeyValPair;
struct _1ab0e2ca0_SliceExpr;
struct _1ab0e3740_IndexingExpr;
struct _1ab0e3da0_SlicingExpr;
struct _1ab0e419c_Constraint;
struct _1ab0e4653_GenericDecl;
struct _1ab0e4a2c_LabelSt;
struct _1ab0e4e06_GotoSt;
struct _1ab0e5203_FallSt;
struct _1ab0e5863_AssignLeft;
struct _1ab0e5de6_AssignSt;
struct _1ab0e6d09_Stmt;
struct _1ab0e7469_ScopeTree;
struct _1ab0e7ba6_ParamDecl;
struct _1ab0e9108_FnDecl;
struct _1ab0ea1d6_VarDecl;
struct _1ab0ea5b0_RetSt;
struct _1ab0eac53_Iter;
struct _1ab0eb57d_WhileKind;
struct _1ab0ebe85_RangeKind;
struct _1ab0ec35e_BreakSt;
struct _1ab0ec738_ContSt;
struct _1ab0ecbde_If;
struct _1ab0ed0b8_Else;
struct _1ab0ed56e_Conditional;
struct _1ab0edcab_TypeAliasDecl;
struct _1ab0ee262_Case;
struct _1ab0ee99e_MatchCase;
struct _1ab1002b8_UseDecl;
struct _1ab10076e_EnumItemDecl;
struct _1ab101330_EnumDecl;
struct _1ab101b5a_TypeEnumItemDecl;
struct _1ab1022ba_TypeEnumDecl;
struct _1ab102584_FieldDecl;
struct _1ab102e7a_StructDecl;
struct _1ab1036b7_TraitDecl;
struct _1ab103d27_Impl;
struct _1ab105147_Field;
struct _1ab107127_Operators;
struct _1ab10803a_Struct;
struct _1ab10a218_FieldIns;
struct _1ab10ebac_OperandExprModel;
struct _1ab1101a7_BinopExprModel;
struct _1ab110581_UnaryExprModel;
struct _1ab110aae_StructArgExprModel;
struct _1ab110e55_StructLitExprModel;
struct _1ab111252_AllocStructLitExprModel;
struct _1ab1117d5_CastingExprModel;
struct _1ab112187_FnCallExprModel;
struct _1ab112561_SliceExprModel;
struct _1ab112a17_IndexingExprModel;
struct _1ab112de1_AnonFnExprModel;
struct _1ab1132ba_KeyValPairExprModel;
struct _1ab113771_MapExprModel;
struct _1ab113d04_SlicingExprModel;
struct _1ab114387_TraitSubIdentExprModel;
struct _1ab114c28_StructSubIdentExprModel;
struct _1ab1151ce_StructStaticIdentExprModel;
struct _1ab1155a8_ArrayExprModel;
struct _1ab1158a5_TupleExprModel;
struct _1ab115c7e_BuiltinOutCallExprModel;
struct _1ab116158_BuiltinOutlnCallExprModel;
struct _1ab116532_BuiltinNewCallExprModel;
struct _1ab11690b_BuiltinPanicCallExprModel;
struct _1ab116db2_BuiltinAssertCallExprModel;
struct _1ab117368_BuiltinMakeCallExprModel;
struct _1ab117742_BuiltinAppendCallExprModel;
struct _1ab117a3e_BuiltinLenCallExprModel;
struct _1ab117d3b_BuiltinCapCallExprModel;
struct _1ab118215_BuiltinDeleteCallExprModel;
struct _1ab1185de_BuiltinCopyCallExprModel;
struct _1ab1189b8_BuiltinErrorCallExprModel;
struct _1ab114574_SizeofExprModel;
struct _1ab1191e4_AlignofExprModel;
struct _1ab1194e1_RuneExprModel;
struct _1ab1197dd_IntegratedToStrExprModel;
struct _1ab119bb7_BackendEmitExprModel;
struct _1ab119eb4_FreeExprModel;
struct _1ab11ab96_RetType;
struct _1ab11b427_Param;
struct _1ab11cdeb_Fn;
struct _1ab11ed54_ParamIns;
struct _1ab120d00_FnIns;
struct _1ab123eac_ReferenceStack;
struct _1ab1254b9_Pass;
struct _1ab12a07e_symbolBuilder;
struct _1ab131195_Trait;
struct _1ab132d23_EnumItem;
struct _1ab133890_Enum;
struct _1ab1349c3_TypeEnumItem;
struct _1ab13509a_TypeEnum;
struct _1ab137443_comptimeRange;
struct _1ab137e9e_comptimeStructField;
struct _1ab139b4e_comptimeStructFields;
struct _1ab1410b7_comptimeStatic;
struct _1ab142c78_comptimeStatics;
struct _1ab144373_comptimeEnumField;
struct _1ab145682_comptimeEnumFields;
struct _1ab146d15_comptimeParam;
struct _1ab14907b_comptimeParams;
struct _1ab14a676_comptimeTypeInfos;
struct _1ab14bc71_comptimeTypeInfo;
struct _1ab153283_comptimeValue;
struct _1ab155ad2_comptimeFiles;
struct _1ab1571cc_comptimeFile;
struct _1ab15b346_constraintChecker;
struct _1ab15d37b_Impl;
struct _1ab1637b0_Scope;
struct _1ab163bcd_If;
struct _1ab163eca_Else;
struct _1ab1643e8_Conditional;
struct _1ab1646e5_InfIter;
struct _1ab164b9b_WhileIter;
struct _1ab1655e7_RangeIter;
struct _1ab16597c_ContSt;
struct _1ab165d56_BreakSt;
struct _1ab166153_Label;
struct _1ab16652c_GotoSt;
struct _1ab166906_Postfix;
struct _1ab166dac_Assign;
struct _1ab167286_MultiAssign;
struct _1ab1678e6_Match;
struct _1ab16852e_Case;
struct _1ab168b28_FallSt;
struct _1ab168ead_RetSt;
struct _1ab16961d_scopeLabel;
struct _1ab169ba1_scopeGoto;
struct _1ab16aab4_scopeChecker;
struct _1ab17d764_directiveChecker;
struct _1ab184bdd_ImportInfo;
struct _1ab187b14_Package;
struct _1ab1a4a54_commonSemaMeta;
struct _1ab1a567b_Sema;
struct _1ab1c44be_missingRetChecker;
struct _1ab1c68ab_IterRelation;
struct _1ab1c7a66_Var;
struct _1ab1c887a_FuncPattern;
struct _1ab211de1_typeCompatibilityChecker;
struct _1ab213b90_assignTypeChecker;
struct _1ab21580c_dynamicTypeAnnotation;
struct _1ab21a669_fnCallArgChecker;
struct _1ab21d5a1_structLitChecker;
struct _1ab220383_rangeChecker;
struct _1ab222ae4_retTypeChecker;
struct _1ab224d9e_SymbolTable;
struct _1ab22a228_Data;
struct _1ab22b36c_Value;
struct _1ab22be1c_Eval;
struct _1ab24a644_unaryEval;
struct _1ab24c5d0_binaryEval;
struct _1ab259136_InsGeneric;
struct _1ab259c2a_TypeAlias;
struct _1ab25aa1c_TypeKind;
struct _1ab262bde_TypeSymbol;
struct _1ab2635e6_Prim;
struct _1ab267122_Sptr;
struct _1ab267ae5_Slc;
struct _1ab2686d9_Tuple;
struct _1ab269289_Map;
struct _1ab269e16_Arr;
struct _1ab26a8d9_Ptr;
struct _1ab26b8da_referencer;
struct _1ab26c8ca_typeChecker;
struct _1ab27555e_identTypeLookup;
struct _1ac8b6451_FileInfo;
struct _1aa0d87be_stmt;
struct _1aa0d9160_scopeParser;
struct _1aa0e6788_exprBuilder;
struct _1aa103c7e_assignInfo;
struct _1aa10715b_parser;
struct _1ac9bd5e1_typeBuilder;
struct _1ab4645a5_CompileInfo;
struct _1ab465a5c_directiveEval;
struct _1ac9c2727_JuleImporter;
struct _1ac9c793b_OrderedDefines;
struct _1ac9c7ba0_defineOrderer;
struct _1acaedd81_liveTable;
struct _1acb3833d_scopeDeadCode;
struct _1acb3c595_exprDeadCode;
struct _1ab355551_SwapExprModel;
struct _1ab35596e_EmptyCompareExprModel;
struct _1ab355c6b_RefExprModel;
struct _1ab356299_StrCompExprModel;
struct _1ab35682c_MutSlicingExprModel;
struct _1ab356b29_UnsafeBinopExprModel;
struct _1ab356e26_UnsafeIndexingExprModel;
struct _1ab357355_PushToSliceExprModel;
struct _1ab35772e_AppendToSliceExprModel;
struct _1ab3588c8_scopeOptimizer;
struct _1ab35ea55_exprOptimizer;
struct _1acb44657_Optimizer;
struct _1acb6c77e_AnsiEscape;
struct _1acb6ddac_Logger;
struct _1ad2c4c3d_AbsTime;
struct _1ad2c5414_Time;
struct _1ad1ed53a_scopeCoder;
struct _1ad2076a9_exprCoder;
struct _1ad217d3a_TestCoder;
struct _1ad21aa1e_identCoder;
struct _1ad2ccd9a_SerializationInfo;
struct _1ad2cd472_traitHash;
struct _1ad2cd84b_traitCast;
struct _1ad2dda6a_customType;
struct _1ad2de670_typeCoder;
struct _1ad2e7447_resultCoder;
struct _1bd6ed211_Flag;
struct _1bd701a72_Flag;
struct _1bd70526d_Flag;
struct _1bd7089ad_Flag;
struct _1bd70c1a9_Flag;
struct _1ad4c4b85_FlagSet;
struct _1ad4c7616_argParser;
struct _1ad2ce8b3_ObjectCoder;
struct _1acaee26b_ObjectDeadCode;
struct _1ac9c51db_IR;
struct _1ab10acb8_StructIns;
struct _1d7c40e54_Cmd;
struct _2038cd7c9_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_2038cd7c9_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_2038cd7c9_Range16 _other) { return !this->operator==(_other); }


};
struct _2038cdd07_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_2038cdd07_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_2038cdd07_Range32 _other) { return !this->operator==(_other); }


};
struct _2038ce2ad_RangeTable {
	jule::Slice<_2038cd7c9_Range16> _field_R16;
	jule::Slice<_2038cdd07_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	


};
struct _1d7a7bc6d_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_1d7a7bc6d_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1d7a7bc6d_acceptRange _other) { return !this->operator==(_other); }


};
struct _1d7ad2eb1_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _1d7add917_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	


};
struct _202527127_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_20252ae72_Status> _field_Stat;
	

	inline bool operator==(_202527127_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_202527127_DirEntry _other) { return !this->operator==(_other); }


};
struct _20252738b_Directory {
	

	inline bool operator==(_20252738b_Directory _other) { return true; }

	inline bool operator!=(_20252738b_Directory _other) { return !this->operator==(_other); }


};
struct _202528d82_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_202528d82_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_202528d82_File _other) { return !this->operator==(_other); }


};
struct _20252ae72_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	inline bool operator==(_20252ae72_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_20252ae72_Status _other) { return !this->operator==(_other); }


};
struct _1d7c90c73_cmdAttrs {
	jule::I64 _field_pid = -1LL;
	

	inline bool operator==(_1d7c90c73_cmdAttrs _other) {
		return 
			this->_field_pid == _other._field_pid;
	}

	inline bool operator!=(_1d7c90c73_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _1d7b81cb8_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_1d7b81cb8_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1d7b81cb8_Log _other) { return !this->operator==(_other); }


};
struct _1d8ba6a56_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	inline bool operator==(_1d8ba6a56_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1d8ba6a56_floatInfo _other) { return !this->operator==(_other); }


};
struct _1d8ba76e4_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _1d8bb9a36_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_1d8bb9a36_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1d8bb9a36_leftCheat _other) { return !this->operator==(_other); }


};
struct _1d8bba55e_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_1d8bba55e_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1d8bba55e_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d8bd5b73_Eq(_1d8bd00bd_Const*, _1d8bd00bd_Const);
inline jule::Bool _1d8bd5eb4_Lt(_1d8bd00bd_Const*, _1d8bd00bd_Const);
inline jule::Bool _1d8bd6305_LtEq(_1d8bd00bd_Const*, _1d8bd00bd_Const);
inline jule::Bool _1d8bd6646_Gt(_1d8bd00bd_Const*, _1d8bd00bd_Const);
inline jule::Bool _1d8bd6987_GtEq(_1d8bd00bd_Const*, _1d8bd00bd_Const);
struct _1d8bd00bd_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_1d8bd00bd_Const _other) { return _1d8bd5b73_Eq(this, _other); }

	inline bool operator!=(_1d8bd00bd_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1d8bd00bd_Const _other) { return _1d8bd6646_Gt(this, _other); }

	inline jule::Bool operator>=(_1d8bd00bd_Const _other) { return _1d8bd6987_GtEq(this, _other); }

	inline jule::Bool operator<(_1d8bd00bd_Const _other) { return _1d8bd5eb4_Lt(this, _other); }

	inline jule::Bool operator<=(_1d8bd00bd_Const _other) { return _1d8bd6305_LtEq(this, _other); }


};
struct _1ab0c1e7c_Token {
	jule::Ptr<_1ab0c7746_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	inline bool operator==(_1ab0c1e7c_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1ab0c1e7c_Token _other) { return !this->operator==(_other); }


};
struct _1ab0c7746_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _field_Tokens;
	


};
struct _1ab0c9869_kindPair {
	jule::Str _field_kind = jule::Str::lit("::", 2);
	jule::U64 _field_id = 0LLU;
	

	inline bool operator==(_1ab0c9869_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1ab0c9869_kindPair _other) { return !this->operator==(_other); }


};
struct _1ab0d0980_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _field_tokens;
	jule::Ptr<_1ab0c7746_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_1d7b81cb8_Log> _field_errors;
	


};
struct _1ab0d55ab_Ast {
	jule::Ptr<_1ab0c7746_File> _field_File;
	jule::Slice<jule::Ptr<_1ab0d6865_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1ab1002b8_UseDecl>> _field_UseDecls;
	jule::Slice<_1ab0d6447_Node> _field_Nodes;
	


};
struct _1ab0d6447_Node {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1ab0d6447_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1ab0d6447_Node _other) { return !this->operator==(_other); }


};
struct _1ab0d6865_Directive {
	jule::Ptr<_1ab0c1e7c_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _field_Args;
	


};
struct _1ab0d7448_TypeDecl {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1ab0d7448_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab0d7448_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1ab0d7a53_IdentTypeDecl {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> _field_Generics;
	


};
struct _1ab0d7d50_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1ab0d7a53_IdentTypeDecl>> _field_Idents;
	


};
struct _1ab0d81e6_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _field_Idents;
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Kind;
	


};
struct _1ab0d84e3_SptrTypeDecl {
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Elem;
	

	inline bool operator==(_1ab0d84e3_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ab0d84e3_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ab0d8878_SlcTypeDecl {
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Elem;
	

	inline bool operator==(_1ab0d8878_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ab0d8878_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ab0d8b75_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> _field_Types;
	


};
struct _1ab0d8e72_PtrTypeDecl {
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Elem;
	

	inline bool operator==(_1ab0d8e72_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ab0d8e72_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ab0d9714_ArrTypeDecl {
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Elem;
	jule::Ptr<_1ab0db77c_Expr> _field_Size;
	

	inline bool operator==(_1ab0d9714_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1ab0d9714_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ab0d9e62_MapTypeDecl {
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Key;
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Val;
	

	inline bool operator==(_1ab0d9e62_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1ab0d9e62_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ab0da33b_RetTypeDecl {
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _field_Idents;
	


};
struct _1ab0db77c_Expr {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab0c1e7c_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1ab0db77c_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab0db77c_Expr _other) { return !this->operator==(_other); }


};
struct _1ab0dba79_RangeExpr {
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	

	inline bool operator==(_1ab0dba79_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab0dba79_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1ab0dc151_UseExpr {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	

	inline bool operator==(_1ab0dc151_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab0dc151_UseExpr _other) { return !this->operator==(_other); }


};
struct _1ab0dc44d_TupleExpr {
	jule::Slice<jule::Ptr<_1ab0db77c_Expr>> _field_Expr;
	


};
struct _1ab0dc827_LitExpr {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1ab0dc827_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1ab0dc827_LitExpr _other) { return !this->operator==(_other); }


};
struct _1ab0dcc01_UnsafeExpr {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	

	inline bool operator==(_1ab0dcc01_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab0dcc01_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1ab0dd1a7_IdentExpr {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1ab0dd1a7_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1ab0dd1a7_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1ab0dd839_UnaryExpr {
	jule::Ptr<_1ab0c1e7c_Token> _field_Op;
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	

	inline bool operator==(_1ab0dd839_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab0dd839_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1ab0ddc13_VariadicExpr {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	

	inline bool operator==(_1ab0ddc13_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab0ddc13_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1ab0de0dc_CastExpr {
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Kind;
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	

	inline bool operator==(_1ab0de0dc_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab0de0dc_CastExpr _other) { return !this->operator==(_other); }


};
struct _1ab0de4b6_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _field_Ns;
	jule::Ptr<_1ab0c1e7c_Token> _field_Ident;
	


};
struct _1ab0de890_SubIdentExpr {
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	jule::Ptr<_1ab0c1e7c_Token> _field_Ident;
	

	inline bool operator==(_1ab0de890_SubIdentExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ab0de890_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1ab0ded46_BinopExpr {
	jule::Ptr<_1ab0db77c_Expr> _field_Left;
	jule::Ptr<_1ab0db77c_Expr> _field_Right;
	jule::Ptr<_1ab0c1e7c_Token> _field_Op;
	

	inline bool operator==(_1ab0ded46_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ab0ded46_BinopExpr _other) { return !this->operator==(_other); }


};
struct _1ab0e04a6_FnCallExpr {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1ab0db77c_Expr>> _field_Args;
	jule::Ptr<_1ab0e7469_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1ab0e0e9b_FieldExprPair {
	jule::Ptr<_1ab0c1e7c_Token> _field_Field;
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	

	inline bool operator==(_1ab0e0e9b_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab0e0e9b_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1ab0e17c6_StructLit {
	jule::Ptr<_1ab0c1e7c_Token> _field_End;
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ab0db77c_Expr>> _field_Exprs;
	


};
struct _1ab0e1c7c_BraceLit {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab0c1e7c_Token> _field_End;
	jule::Slice<jule::Ptr<_1ab0db77c_Expr>> _field_Exprs;
	


};
struct _1ab0e25a7_KeyValPair {
	jule::Ptr<_1ab0db77c_Expr> _field_Key;
	jule::Ptr<_1ab0db77c_Expr> _field_Val;
	jule::Ptr<_1ab0c1e7c_Token> _field_Colon;
	

	inline bool operator==(_1ab0e25a7_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1ab0e25a7_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1ab0e2ca0_SliceExpr {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab0c1e7c_Token> _field_End;
	jule::Slice<jule::Ptr<_1ab0db77c_Expr>> _field_Exprs;
	


};
struct _1ab0e3740_IndexingExpr {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab0c1e7c_Token> _field_End;
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	jule::Ptr<_1ab0db77c_Expr> _field_Index;
	

	inline bool operator==(_1ab0e3740_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1ab0e3740_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1ab0e3da0_SlicingExpr {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab0c1e7c_Token> _field_End;
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	jule::Ptr<_1ab0db77c_Expr> _field_Start;
	jule::Ptr<_1ab0db77c_Expr> _field_To;
	

	inline bool operator==(_1ab0e3da0_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1ab0e3da0_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1ab0e419c_Constraint {
	jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> _field_Mask;
	


};
struct _1ab0e4653_GenericDecl {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab0e419c_Constraint> _field_Constraint;
	

	inline bool operator==(_1ab0e4653_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1ab0e4653_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1ab0e4a2c_LabelSt {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1ab0e4a2c_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ab0e4a2c_LabelSt _other) { return !this->operator==(_other); }


};
struct _1ab0e4e06_GotoSt {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab0c1e7c_Token> _field_Label;
	

	inline bool operator==(_1ab0e4e06_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ab0e4e06_GotoSt _other) { return !this->operator==(_other); }


};
struct _1ab0e5203_FallSt {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	

	inline bool operator==(_1ab0e5203_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1ab0e5203_FallSt _other) { return !this->operator==(_other); }


};
struct _1ab0e5863_AssignLeft {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	

	inline bool operator==(_1ab0e5863_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab0e5863_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1ab0e5de6_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1ab0c1e7c_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1ab0e5863_AssignLeft>> _field_Left;
	jule::Ptr<_1ab0db77c_Expr> _field_Right;
	


};
struct _1ab0e6d09_Stmt {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1ab0e6d09_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1ab0e6d09_Stmt _other) { return !this->operator==(_other); }


};
struct _1ab0e7469_ScopeTree {
	jule::Ptr<_1ab0e7469_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1ab0e6d09_Stmt> _field_Stmts;
	jule::Ptr<_1ab0c1e7c_Token> _field_End;
	


};
struct _1ab0e7ba6_ParamDecl {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1ab0e7ba6_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ab0e7ba6_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1ab0e9108_FnDecl {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab0d6865_Directive>> _field_Directives;
	jule::Ptr<_1ab0e7469_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>> _field_Generics;
	jule::Ptr<_1ab0da33b_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1ab0e7ba6_ParamDecl>> _field_Params;
	


};
struct _1ab0ea1d6_VarDecl {
	jule::Ptr<_1ab0e7469_ScopeTree> _field_Scope;
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1ab0d6865_Directive>> _field_Directives;
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Kind;
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	


};
struct _1ab0ea5b0_RetSt {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	

	inline bool operator==(_1ab0ea5b0_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab0ea5b0_RetSt _other) { return !this->operator==(_other); }


};
struct _1ab0eac53_Iter {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1ab0e7469_ScopeTree> _field_Scope;
	

	inline bool operator==(_1ab0eac53_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab0eac53_Iter _other) { return !this->operator==(_other); }


};
struct _1ab0eb57d_WhileKind {
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1ab0c1e7c_Token> _field_NextToken;
	

	inline bool operator==(_1ab0eb57d_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1ab0eb57d_WhileKind _other) { return !this->operator==(_other); }


};
struct _1ab0ebe85_RangeKind {
	jule::Ptr<_1ab0c1e7c_Token> _field_InToken;
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	jule::Ptr<_1ab0ea1d6_VarDecl> _field_KeyA;
	jule::Ptr<_1ab0ea1d6_VarDecl> _field_KeyB;
	

	inline bool operator==(_1ab0ebe85_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1ab0ebe85_RangeKind _other) { return !this->operator==(_other); }


};
struct _1ab0ec35e_BreakSt {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab0c1e7c_Token> _field_Label;
	

	inline bool operator==(_1ab0ec35e_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ab0ec35e_BreakSt _other) { return !this->operator==(_other); }


};
struct _1ab0ec738_ContSt {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab0c1e7c_Token> _field_Label;
	

	inline bool operator==(_1ab0ec738_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ab0ec738_ContSt _other) { return !this->operator==(_other); }


};
struct _1ab0ecbde_If {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	jule::Ptr<_1ab0e7469_ScopeTree> _field_Scope;
	

	inline bool operator==(_1ab0ecbde_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab0ecbde_If _other) { return !this->operator==(_other); }


};
struct _1ab0ed0b8_Else {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab0e7469_ScopeTree> _field_Scope;
	

	inline bool operator==(_1ab0ed0b8_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab0ed0b8_Else _other) { return !this->operator==(_other); }


};
struct _1ab0ed56e_Conditional {
	jule::Ptr<_1ab0ecbde_If> _field_Head;
	jule::Slice<jule::Ptr<_1ab0ecbde_If>> _field_Tail;
	jule::Ptr<_1ab0ed0b8_Else> _field_Default;
	


};
struct _1ab0edcab_TypeAliasDecl {
	jule::Ptr<_1ab0e7469_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Kind;
	

	inline bool operator==(_1ab0edcab_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab0edcab_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1ab0ee262_Case {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab0e7469_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ab0db77c_Expr>> _field_Exprs;
	


};
struct _1ab0ee99e_MatchCase {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab0c1e7c_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1ab0ee262_Case>> _field_Cases;
	jule::Ptr<_1ab0ed0b8_Else> _field_Default;
	


};
struct _1ab1002b8_UseDecl {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1ab10076e_EnumItemDecl {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	

	inline bool operator==(_1ab10076e_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab10076e_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1ab101330_EnumDecl {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ab10076e_EnumItemDecl>> _field_Items;
	jule::Ptr<_1ab0c1e7c_Token> _field_End;
	


};
struct _1ab101b5a_TypeEnumItemDecl {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Kind;
	

	inline bool operator==(_1ab101b5a_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab101b5a_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1ab1022ba_TypeEnumDecl {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab101b5a_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1ab0c1e7c_Token> _field_End;
	


};
struct _1ab102584_FieldDecl {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Kind;
	jule::Ptr<_1ab0db77c_Expr> _field_Default;
	

	inline bool operator==(_1ab102584_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ab102584_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1ab102e7a_StructDecl {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab0c1e7c_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab102584_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1ab0d6865_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>> _field_Generics;
	


};
struct _1ab1036b7_TraitDecl {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab0c1e7c_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1ab0e9108_FnDecl>> _field_Methods;
	


};
struct _1ab103d27_Impl {
	jule::Ptr<_1ab0c1e7c_Token> _field_End;
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Base;
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1ab0e9108_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1ab0ea1d6_VarDecl>> _field_Statics;
	


};
struct _1ab105147_Field {
	jule::Ptr<_1ab10803a_Struct> _field_Owner;
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ab262bde_TypeSymbol> _field_Kind;
	jule::Ptr<_1ab0db77c_Expr> _field_Default;
	

	inline bool operator==(_1ab105147_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ab105147_Field _other) { return !this->operator==(_other); }


};
struct _1ab107127_Operators {
	jule::Ptr<_1ab120d00_FnIns> _field_Eq;
	jule::Ptr<_1ab120d00_FnIns> _field_Gt;
	jule::Ptr<_1ab120d00_FnIns> _field_GtEq;
	jule::Ptr<_1ab120d00_FnIns> _field_Lt;
	jule::Ptr<_1ab120d00_FnIns> _field_LtEq;
	jule::Ptr<_1ab120d00_FnIns> _field_Shl;
	jule::Ptr<_1ab120d00_FnIns> _field_Shr;
	jule::Ptr<_1ab120d00_FnIns> _field_Add;
	jule::Ptr<_1ab120d00_FnIns> _field_Sub;
	jule::Ptr<_1ab120d00_FnIns> _field_Div;
	jule::Ptr<_1ab120d00_FnIns> _field_Mul;
	jule::Ptr<_1ab120d00_FnIns> _field_Mod;
	jule::Ptr<_1ab120d00_FnIns> _field_BitAnd;
	jule::Ptr<_1ab120d00_FnIns> _field_BitOr;
	jule::Ptr<_1ab120d00_FnIns> _field_BitXor;
	jule::Ptr<_1ab120d00_FnIns> _field_Neg;
	jule::Ptr<_1ab120d00_FnIns> _field_Pos;
	jule::Ptr<_1ab120d00_FnIns> _field_BitNot;
	jule::Ptr<_1ab120d00_FnIns> _field_AddAssign;
	jule::Ptr<_1ab120d00_FnIns> _field_SubAssign;
	jule::Ptr<_1ab120d00_FnIns> _field_DivAssign;
	jule::Ptr<_1ab120d00_FnIns> _field_MulAssign;
	jule::Ptr<_1ab120d00_FnIns> _field_ModAssign;
	jule::Ptr<_1ab120d00_FnIns> _field_ShlAssign;
	jule::Ptr<_1ab120d00_FnIns> _field_ShrAssign;
	jule::Ptr<_1ab120d00_FnIns> _field_BitOrAssign;
	jule::Ptr<_1ab120d00_FnIns> _field_BitAndAssign;
	jule::Ptr<_1ab120d00_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1ab107127_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1ab107127_Operators _other) { return !this->operator==(_other); }


};
struct _1ab10803a_Struct {
	jule::Ptr<_1ab1a567b_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1ab10803a_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1ab10803a_Struct>> _field_Uses;
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab105147_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1ab11cdeb_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ab1c7a66_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1ab0d6865_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1ab131195_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1ab10acb8_StructIns>> _field_Instances;
	


};
struct _1ab10a218_FieldIns {
	jule::Ptr<_1ab105147_Field> _field_Decl;
	jule::Ptr<_1ab25aa1c_TypeKind> _field_Kind;
	jule::Ptr<_1ab22a228_Data> _field_Default;
	

	inline bool operator==(_1ab10a218_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ab10a218_FieldIns _other) { return !this->operator==(_other); }


};
struct _1ab10ebac_OperandExprModel {
	jule::Ptr<_1ab25aa1c_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1ab10ebac_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1ab10ebac_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1101a7_BinopExprModel {
	jule::Ptr<_1ab10ebac_OperandExprModel> _field_Left;
	jule::Ptr<_1ab10ebac_OperandExprModel> _field_Right;
	jule::Ptr<_1ab0c1e7c_Token> _field_Op;
	

	inline bool operator==(_1ab1101a7_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ab1101a7_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1ab110581_UnaryExprModel {
	jule::Ptr<_1ab22a228_Data> _field_Expr;
	jule::Ptr<_1ab0c1e7c_Token> _field_Op;
	

	inline bool operator==(_1ab110581_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ab110581_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1ab110aae_StructArgExprModel {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab10a218_FieldIns> _field_Field;
	jule::Ptr<_1ab22a228_Data> _field_Expr;
	

	inline bool operator==(_1ab110aae_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab110aae_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1ab110e55_StructLitExprModel {
	jule::Ptr<_1ab10acb8_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1ab110aae_StructArgExprModel>> _field_Args;
	


};
struct _1ab111252_AllocStructLitExprModel {
	jule::Ptr<_1ab110e55_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1ab111252_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1ab111252_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1117d5_CastingExprModel {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ab25aa1c_TypeKind> _field_Kind;
	jule::Ptr<_1ab25aa1c_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1ab1117d5_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1ab1117d5_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1ab112187_FnCallExprModel {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab120d00_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1ab1637b0_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1ab112561_SliceExprModel {
	jule::Ptr<_1ab25aa1c_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1ab112a17_IndexingExprModel {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab22a228_Data> _field_Expr;
	jule::Ptr<_1ab22a228_Data> _field_Index;
	

	inline bool operator==(_1ab112a17_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1ab112a17_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1ab112de1_AnonFnExprModel {
	jule::Ptr<_1ab120d00_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_1ab112de1_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1ab112de1_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1132ba_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1ab1132ba_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1ab1132ba_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1ab113771_MapExprModel {
	jule::Ptr<_1ab25aa1c_TypeKind> _field_KeyKind;
	jule::Ptr<_1ab25aa1c_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1ab1132ba_KeyValPairExprModel>> _field_Entries;
	


};
struct _1ab113d04_SlicingExprModel {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1ab113d04_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1ab113d04_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1ab114387_TraitSubIdentExprModel {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ab11cdeb_Fn> _field_Method;
	jule::Ptr<_1ab131195_Trait> _field_Trt;
	

	inline bool operator==(_1ab114387_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1ab114387_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ab114c28_StructSubIdentExprModel {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Ptr<_1ab22a228_Data> _field_Expr;
	jule::Ptr<_1ab120d00_FnIns> _field_Method;
	jule::Ptr<_1ab10a218_FieldIns> _field_Field;
	jule::Ptr<_1ab10acb8_StructIns> _field_Owner;
	

	inline bool operator==(_1ab114c28_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1ab114c28_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1151ce_StructStaticIdentExprModel {
	jule::Ptr<_1ab10acb8_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ab120d00_FnIns> _field_Method;
	

	inline bool operator==(_1ab1151ce_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1ab1151ce_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1155a8_ArrayExprModel {
	jule::Ptr<_1ab269e16_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1ab1158a5_TupleExprModel {
	jule::Slice<jule::Ptr<_1ab22a228_Data>> _field_Datas;
	


};
struct _1ab115c7e_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1ab115c7e_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1ab115c7e_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab116158_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1ab116158_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1ab116158_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab116532_BuiltinNewCallExprModel {
	jule::Ptr<_1ab25aa1c_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1ab116532_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1ab116532_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab11690b_BuiltinPanicCallExprModel {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ab11690b_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab11690b_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab116db2_BuiltinAssertCallExprModel {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1ab116db2_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1ab116db2_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab117368_BuiltinMakeCallExprModel {
	jule::Ptr<_1ab25aa1c_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1ab117368_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1ab117368_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab117742_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1ab117742_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1ab117742_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab117a3e_BuiltinLenCallExprModel {
	jule::Ptr<_1ab22a228_Data> _field_Expr;
	

	inline bool operator==(_1ab117a3e_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab117a3e_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab117d3b_BuiltinCapCallExprModel {
	jule::Ptr<_1ab22a228_Data> _field_Expr;
	

	inline bool operator==(_1ab117d3b_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab117d3b_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab118215_BuiltinDeleteCallExprModel {
	jule::Ptr<_1ab22a228_Data> _field_Dest;
	jule::Ptr<_1ab22a228_Data> _field_Key;
	

	inline bool operator==(_1ab118215_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1ab118215_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1185de_BuiltinCopyCallExprModel {
	jule::Ptr<_1ab22a228_Data> _field_Dest;
	jule::Ptr<_1ab22a228_Data> _field_Src;
	

	inline bool operator==(_1ab1185de_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1ab1185de_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1189b8_BuiltinErrorCallExprModel {
	jule::Ptr<_1ab120d00_FnIns> _field_Func;
	jule::Ptr<_1ab22a228_Data> _field_Err;
	

	inline bool operator==(_1ab1189b8_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1ab1189b8_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab114574_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ab114574_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab114574_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1191e4_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ab1191e4_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab1191e4_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1194e1_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1ab1194e1_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1ab1194e1_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1197dd_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ab1197dd_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab1197dd_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1ab119bb7_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1ab119eb4_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ab119eb4_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab119eb4_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1ab11ab96_RetType {
	jule::Ptr<_1ab262bde_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _field_Idents;
	


};
struct _1ab11b427_Param {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1ab262bde_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1ab11b427_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ab11b427_Param _other) { return !this->operator==(_other); }


};
struct _1ab11cdeb_Fn {
	jule::Ptr<_1ab1a567b_Sema> _field_sema;
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab0d6865_Directive>> _field_Directives;
	jule::Ptr<_1ab0e7469_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>> _field_Generics;
	jule::Ptr<_1ab11ab96_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1ab11b427_Param>> _field_Params;
	jule::Ptr<_1ab10803a_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1ab120d00_FnIns>> _field_Instances;
	


};
struct _1ab11ed54_ParamIns {
	jule::Ptr<_1ab11b427_Param> _field_Decl;
	jule::Ptr<_1ab25aa1c_TypeKind> _field_Kind;
	

	inline bool operator==(_1ab11ed54_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab11ed54_ParamIns _other) { return !this->operator==(_other); }


};
struct _1ab120d00_FnIns {
	jule::Ptr<_1ab10acb8_StructIns> _field_Owner;
	jule::Ptr<_1ab11cdeb_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1ab259136_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1ab11ed54_ParamIns>> _field_Params;
	jule::Ptr<_1ab25aa1c_TypeKind> _field_Result;
	jule::Ptr<_1ab1637b0_Scope> _field_Scope;
	jule::Ptr<_1ab123eac_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1ab123eac_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1ab1254b9_Pass {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1ab1254b9_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1ab1254b9_Pass _other) { return !this->operator==(_other); }


};
struct _1ab12a07e_symbolBuilder {
	jule::Ptr<_1ab12a07e_symbolBuilder> _field_owner;
	jule::Trait<_1ab181cc8_Importer> _field_importer;
	jule::Slice<_1d7b81cb8_Log> _field_errors;
	jule::Ptr<_1ab0d55ab_Ast> _field_ast;
	jule::Ptr<_1ab224d9e_SymbolTable> _field_table;
	


};
struct _1ab131195_Trait {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1ab262bde_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1ab11cdeb_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ab10803a_Struct>> _field_Implemented;
	


};
struct _1ab132d23_EnumItem {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab22b36c_Value> _field_Value;
	

	inline bool operator==(_1ab132d23_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1ab132d23_EnumItem _other) { return !this->operator==(_other); }


};
struct _1ab133890_Enum {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ab262bde_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1ab132d23_EnumItem>> _field_Items;
	


};
struct _1ab1349c3_TypeEnumItem {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab262bde_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1ab1349c3_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab1349c3_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1ab13509a_TypeEnum {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab1349c3_TypeEnumItem>> _field_Items;
	


};
struct _1ab137443_comptimeRange {
	jule::Trait<_1ab137256_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_1ab137443_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ab137443_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1ab137e9e_comptimeStructField {
	jule::Ptr<_1ab10a218_FieldIns> _field_field;
	

	inline bool operator==(_1ab137e9e_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1ab137e9e_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1ab139b4e_comptimeStructFields {
	jule::Slice<jule::Ptr<_1ab10a218_FieldIns>> _field_fields;
	


};
struct _1ab1410b7_comptimeStatic {
	jule::Ptr<_1ab1c7a66_Var> _field_field;
	

	inline bool operator==(_1ab1410b7_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1ab1410b7_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1ab142c78_comptimeStatics {
	jule::Slice<jule::Ptr<_1ab1c7a66_Var>> _field_fields;
	


};
struct _1ab144373_comptimeEnumField {
	jule::Ptr<_1ab132d23_EnumItem> _field_field;
	

	inline bool operator==(_1ab144373_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1ab144373_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1ab145682_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1ab132d23_EnumItem>> _field_fields;
	


};
struct _1ab146d15_comptimeParam {
	jule::Ptr<_1ab11ed54_ParamIns> _field_param;
	

	inline bool operator==(_1ab146d15_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1ab146d15_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1ab14907b_comptimeParams {
	jule::Slice<jule::Ptr<_1ab11ed54_ParamIns>> _field_params;
	


};
struct _1ab14a676_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1ab14bc71_comptimeTypeInfo>> _field_types;
	


};
struct _1ab14bc71_comptimeTypeInfo {
	jule::Ptr<_1ab25aa1c_TypeKind> _field_base;
	

	inline bool operator==(_1ab14bc71_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1ab14bc71_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1ab153283_comptimeValue {
	jule::Ptr<_1ab22a228_Data> _field_data;
	

	inline bool operator==(_1ab153283_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ab153283_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1ab155ad2_comptimeFiles {
	jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>> _field_files;
	


};
struct _1ab1571cc_comptimeFile {
	jule::Ptr<_1ab224d9e_SymbolTable> _field_file;
	

	inline bool operator==(_1ab1571cc_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1ab1571cc_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1ab15b346_constraintChecker {
	jule::Ptr<_1ab1a567b_Sema> _field_s;
	jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1ab259136_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>> _field_genericsA;
	jule::Ptr<_1ab120d00_FnIns> _field_fi;
	jule::Ptr<_1ab10acb8_StructIns> _field_si;
	jule::Ptr<_1ab0c1e7c_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1ab15d37b_Impl {
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Base;
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1ab11cdeb_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ab1c7a66_Var>> _field_Statics;
	


};
struct _1ab1637b0_Scope {
	jule::Ptr<_1ab1637b0_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1ab163bcd_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ab1637b0_Scope> _field_Scope;
	

	inline bool operator==(_1ab163bcd_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab163bcd_If _other) { return !this->operator==(_other); }


};
struct _1ab163eca_Else {
	jule::Ptr<_1ab1637b0_Scope> _field_Scope;
	

	inline bool operator==(_1ab163eca_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab163eca_Else _other) { return !this->operator==(_other); }


};
struct _1ab1643e8_Conditional {
	jule::Slice<jule::Ptr<_1ab163bcd_If>> _field_Elifs;
	jule::Ptr<_1ab163eca_Else> _field_Default;
	


};
struct _1ab1646e5_InfIter {
	jule::Ptr<_1ab1637b0_Scope> _field_Scope;
	

	inline bool operator==(_1ab1646e5_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab1646e5_InfIter _other) { return !this->operator==(_other); }


};
struct _1ab164b9b_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1ab1637b0_Scope> _field_Scope;
	

	inline bool operator==(_1ab164b9b_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab164b9b_WhileIter _other) { return !this->operator==(_other); }


};
struct _1ab1655e7_RangeIter {
	jule::Ptr<_1ab22a228_Data> _field_Expr;
	jule::Ptr<_1ab1637b0_Scope> _field_Scope;
	jule::Ptr<_1ab1c7a66_Var> _field_KeyA;
	jule::Ptr<_1ab1c7a66_Var> _field_KeyB;
	

	inline bool operator==(_1ab1655e7_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1ab1655e7_RangeIter _other) { return !this->operator==(_other); }


};
struct _1ab16597c_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1ab16597c_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1ab16597c_ContSt _other) { return !this->operator==(_other); }


};
struct _1ab165d56_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1ab165d56_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1ab165d56_BreakSt _other) { return !this->operator==(_other); }


};
struct _1ab166153_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1ab166153_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ab166153_Label _other) { return !this->operator==(_other); }


};
struct _1ab16652c_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1ab166153_Label> _field_Label;
	

	inline bool operator==(_1ab16652c_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ab16652c_GotoSt _other) { return !this->operator==(_other); }


};
struct _1ab166906_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1ab166906_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ab166906_Postfix _other) { return !this->operator==(_other); }


};
struct _1ab166dac_Assign {
	jule::Ptr<_1ab10ebac_OperandExprModel> _field_L;
	jule::Ptr<_1ab10ebac_OperandExprModel> _field_R;
	jule::Ptr<_1ab0c1e7c_Token> _field_Op;
	

	inline bool operator==(_1ab166dac_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ab166dac_Assign _other) { return !this->operator==(_other); }


};
struct _1ab167286_MultiAssign {
	jule::Slice<jule::Ptr<_1ab22a228_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
struct _1ab1678e6_Match {
	jule::Ptr<_1ab22a228_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1ab16852e_Case>> _field_Cases;
	jule::Ptr<_1ab16852e_Case> _field_Default;
	


};
struct _1ab16852e_Case {
	jule::Ptr<_1ab1678e6_Match> _field_Owner;
	jule::Ptr<_1ab1637b0_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1ab22a228_Data>> _field_Exprs;
	jule::Ptr<_1ab16852e_Case> _field_Next;
	


};
struct _1ab168b28_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1ab168b28_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1ab168b28_FallSt _other) { return !this->operator==(_other); }


};
struct _1ab168ead_RetSt {
	jule::Ptr<_1ab120d00_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ab168ead_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab168ead_RetSt _other) { return !this->operator==(_other); }


};
struct _1ab16961d_scopeLabel {
	jule::Ptr<_1ab0c1e7c_Token> _field_token;
	jule::Ptr<_1ab166153_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1ab16aab4_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1ab16961d_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1ab16961d_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1ab169ba1_scopeGoto {
	jule::Ptr<_1ab16652c_GotoSt> _field_st;
	jule::Ptr<_1ab0e4e06_GotoSt> _field_gt;
	jule::Ptr<_1ab16aab4_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	inline bool operator==(_1ab169ba1_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1ab169ba1_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1ab16aab4_scopeChecker {
	jule::Ptr<_1ab0c1e7c_Token> _field_calledFrom;
	jule::Ptr<_1ab1a567b_Sema> _field_s;
	jule::Ptr<_1ab120d00_FnIns> _field_owner;
	jule::Ptr<_1ab16aab4_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1ab224d9e_SymbolTable> _field_table;
	jule::Ptr<_1ab1637b0_Scope> _field_scope;
	jule::Ptr<_1ab0e7469_ScopeTree> _field_tree;
	jule::Ptr<_1ab120d00_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab16961d_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab169ba1_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1ab16aab4_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1ab16aab4_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1ab17d764_directiveChecker {
	jule::Ptr<_1ab1a567b_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab0d6865_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1ab17d764_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1ab17d764_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1ab184bdd_ImportInfo {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _field_Selected;
	jule::Ptr<_1ab187b14_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	


};
struct _1ab187b14_Package {
	jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>> _field_Files;
	


};
struct _1ab1a4a54_commonSemaMeta {
	jule::Slice<jule::Ptr<_1ab14bc71_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1ab1a567b_Sema {
	jule::Slice<_1d7b81cb8_Log> _field_errors;
	jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>> _field_files;
	jule::Ptr<_1ab224d9e_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1ab1a4a54_commonSemaMeta> _field_meta;
	


};
struct _1ab1c44be_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1ab1c68ab_IterRelation {
	jule::Ptr<_1ab1c7a66_Var> _field_Range;
	

	inline bool operator==(_1ab1c68ab_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1ab1c68ab_IterRelation _other) { return !this->operator==(_other); }


};
struct _1ab1c7a66_Var {
	jule::Ptr<_1ab1637b0_Scope> _field_Scope;
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1ab262bde_TypeSymbol> _field_Kind;
	jule::Ptr<_1ab22b36c_Value> _field_Value;
	jule::Ptr<_1ab123eac_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1ab0d6865_Directive>> _field_Directives;
	jule::Ptr<_1ab1c68ab_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1ab1c7a66_Var>> _field_Depends;
	


};
struct _1ab1c887a_FuncPattern {
	


};
struct _1ab211de1_typeCompatibilityChecker {
	jule::Ptr<_1ab1a567b_Sema> _field_s;
	jule::Ptr<_1ab25aa1c_TypeKind> _field_dest;
	jule::Ptr<_1ab25aa1c_TypeKind> _field_src;
	jule::Ptr<_1ab0c1e7c_Token> _field_errorToken;
	

	inline bool operator==(_1ab211de1_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1ab211de1_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1ab213b90_assignTypeChecker {
	jule::Ptr<_1ab1a567b_Sema> _field_s;
	jule::Ptr<_1ab25aa1c_TypeKind> _field_dest;
	jule::Ptr<_1ab22a228_Data> _field_d;
	jule::Ptr<_1ab0c1e7c_Token> _field_errorToken;
	

	inline bool operator==(_1ab213b90_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1ab213b90_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1ab21580c_dynamicTypeAnnotation {
	jule::Ptr<_1ab22be1c_Eval> _field_e;
	jule::Ptr<_1ab120d00_FnIns> _field_f;
	jule::Ptr<_1ab11ed54_ParamIns> _field_p;
	jule::Ptr<_1ab22a228_Data> _field_a;
	jule::Ptr<_1ab0c1e7c_Token> _field_errorToken;
	jule::Ptr<_1ab25aa1c_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1ab0d7448_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>> _field_ignored;
	


};
struct _1ab21a669_fnCallArgChecker {
	jule::Ptr<_1ab22be1c_Eval> _field_e;
	jule::Slice<jule::Ptr<_1ab0db77c_Expr>> _field_args;
	jule::Ptr<_1ab0c1e7c_Token> _field_errorToken;
	jule::Ptr<_1ab120d00_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>> _field_ignored;
	


};
struct _1ab21d5a1_structLitChecker {
	jule::Ptr<_1ab22be1c_Eval> _field_e;
	jule::Ptr<_1ab0c1e7c_Token> _field_errorToken;
	jule::Ptr<_1ab10acb8_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1ab110aae_StructArgExprModel>> _field_args;
	


};
struct _1ab220383_rangeChecker {
	jule::Ptr<_1ab16aab4_scopeChecker> _field_sc;
	jule::Ptr<_1ab0ebe85_RangeKind> _field_rang;
	jule::Ptr<_1ab1655e7_RangeIter> _field_Kind;
	jule::Ptr<_1ab22a228_Data> _field_d;
	

	inline bool operator==(_1ab220383_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1ab220383_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1ab222ae4_retTypeChecker {
	jule::Ptr<_1ab16aab4_scopeChecker> _field_sc;
	jule::Ptr<_1ab120d00_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1ab0db77c_Expr>> _field_exprs;
	jule::Ptr<_1ab0c1e7c_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1ab224d9e_SymbolTable {
	jule::Ptr<_1ab0c7746_File> _field_File;
	jule::Slice<_1ab1254b9_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1ab184bdd_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1ab1c7a66_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1ab10803a_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1ab11cdeb_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1ab131195_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1ab133890_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1ab13509a_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1ab15d37b_Impl>> _field_Impls;
	


};
struct _1ab22a228_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1ab25aa1c_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1d8bd00bd_Const> _field_Constant;
	

	inline bool operator==(_1ab22a228_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1ab22a228_Data _other) { return !this->operator==(_other); }


};
struct _1ab22b36c_Value {
	jule::Ptr<_1ab0db77c_Expr> _field_Expr;
	jule::Ptr<_1ab22a228_Data> _field_Data;
	

	inline bool operator==(_1ab22b36c_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1ab22b36c_Value _other) { return !this->operator==(_other); }


};
struct _1ab22be1c_Eval {
	jule::Ptr<_1ab1a567b_Sema> _field_s;
	jule::Trait<_1ab27a553_Lookup> _field_lookup;
	jule::Ptr<_1ab25aa1c_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1ab1c7a66_Var> _field_owner;
	jule::Ptr<_1ab10a218_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1ab22be1c_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1ab22be1c_Eval _other) { return !this->operator==(_other); }


};
struct _1ab24a644_unaryEval {
	jule::Ptr<_1ab22be1c_Eval> _field_e;
	jule::Ptr<_1ab22a228_Data> _field_d;
	jule::Ptr<_1ab0dd839_UnaryExpr> _field_u;
	

	inline bool operator==(_1ab24a644_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1ab24a644_unaryEval _other) { return !this->operator==(_other); }


};
struct _1ab24c5d0_binaryEval {
	jule::Ptr<_1ab22be1c_Eval> _field_e;
	jule::Ptr<_1ab22a228_Data> _field_l;
	jule::Ptr<_1ab22a228_Data> _field_r;
	jule::Ptr<_1ab0c1e7c_Token> _field_op;
	

	inline bool operator==(_1ab24c5d0_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1ab24c5d0_binaryEval _other) { return !this->operator==(_other); }


};
struct _1ab259136_InsGeneric {
	jule::Ptr<_1ab25aa1c_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>> _field_Constraint;
	


};
struct _1ab259c2a_TypeAlias {
	jule::Ptr<_1ab0e7469_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab262bde_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>> _field_Generics;
	


};
struct _1ab25aa1c_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1ab25a566_Kind> _field_Kind;
	

	inline bool operator==(_1ab25aa1c_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab25aa1c_TypeKind _other) { return !this->operator==(_other); }


};
struct _1ab262bde_TypeSymbol {
	jule::Ptr<_1ab0d7448_TypeDecl> _field_Decl;
	jule::Ptr<_1ab25aa1c_TypeKind> _field_Kind;
	

	inline bool operator==(_1ab262bde_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab262bde_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1ab2635e6_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1ab2635e6_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab2635e6_Prim _other) { return !this->operator==(_other); }


};
struct _1ab267122_Sptr {
	jule::Ptr<_1ab25aa1c_TypeKind> _field_Elem;
	

	inline bool operator==(_1ab267122_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ab267122_Sptr _other) { return !this->operator==(_other); }


};
struct _1ab267ae5_Slc {
	jule::Ptr<_1ab25aa1c_TypeKind> _field_Elem;
	

	inline bool operator==(_1ab267ae5_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ab267ae5_Slc _other) { return !this->operator==(_other); }


};
struct _1ab2686d9_Tuple {
	jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>> _field_Types;
	


};
struct _1ab269289_Map {
	jule::Ptr<_1ab25aa1c_TypeKind> _field_Key;
	jule::Ptr<_1ab25aa1c_TypeKind> _field_Val;
	

	inline bool operator==(_1ab269289_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1ab269289_Map _other) { return !this->operator==(_other); }


};
struct _1ab269e16_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1ab25aa1c_TypeKind> _field_Elem;
	

	inline bool operator==(_1ab269e16_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ab269e16_Arr _other) { return !this->operator==(_other); }


};
struct _1ab26a8d9_Ptr {
	jule::Ptr<_1ab25aa1c_TypeKind> _field_Elem;
	

	inline bool operator==(_1ab26a8d9_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ab26a8d9_Ptr _other) { return !this->operator==(_other); }


};
struct _1ab26b8da_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1ab26b8da_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1ab26b8da_referencer _other) { return !this->operator==(_other); }


};
struct _1ab26c8ca_typeChecker {
	jule::Ptr<_1ab1a567b_Sema> _field_s;
	jule::Trait<_1ab27a553_Lookup> _field_rootLookup;
	jule::Trait<_1ab27a553_Lookup> _field_lookup;
	jule::Ptr<_1ab26b8da_referencer> _field_referencer;
	jule::Ptr<_1ab123eac_ReferenceStack> _field_refers;
	jule::Ptr<_1ab0c1e7c_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1ab259c2a_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1ab27555e_identTypeLookup {
	

	inline bool operator==(_1ab27555e_identTypeLookup _other) { return true; }

	inline bool operator!=(_1ab27555e_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1ac8b6451_FileInfo {
	jule::Ptr<_1ab0d55ab_Ast> _field_Ast;
	jule::Slice<_1d7b81cb8_Log> _field_Errors;
	


};
struct _1aa0d87be_stmt {
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1aa0d9160_scopeParser {
	jule::Ptr<_1aa10715b_parser> _field_p;
	jule::Ptr<_1ab0e7469_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1aa0d87be_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	


};
struct _1aa0e6788_exprBuilder {
	jule::Ptr<_1aa10715b_parser> _field_p;
	

	inline bool operator==(_1aa0e6788_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1aa0e6788_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1aa103c7e_assignInfo {
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _field_l;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _field_r;
	jule::Ptr<_1ab0c1e7c_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1aa10715b_parser {
	jule::Ptr<_1ab0d55ab_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1ab0d6865_Directive>> _field_directives;
	jule::Slice<_1d7b81cb8_Log> _field_errors;
	jule::Ptr<_1aa0e6788_exprBuilder> _field_ep;
	


};
struct _1ac9bd5e1_typeBuilder {
	jule::Ptr<_1aa10715b_parser> _field_p;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1ab4645a5_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str::lit("clang", 5);
	jule::Str _field_CppStd = jule::Str::lit("cpp14", 5);
	

	inline bool operator==(_1ab4645a5_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1ab4645a5_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1ab465a5c_directiveEval {
	jule::Slice<_1d7b81cb8_Log> _field_logs;
	jule::Ptr<_1ab0d6865_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1ac9c2727_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1ab184bdd_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1ac9c793b_OrderedDefines {
	jule::Slice<jule::Ptr<_1ab10803a_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1ab1c7a66_Var>> _field_Globals;
	


};
struct _1ac9c7ba0_defineOrderer {
	

	inline bool operator==(_1ac9c7ba0_defineOrderer _other) { return true; }

	inline bool operator!=(_1ac9c7ba0_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1acaedd81_liveTable {
	jule::Slice<jule::Ptr<_1ab1c7a66_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1ab120d00_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1ab10acb8_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1ab131195_Trait>> _field_traits;
	


};
struct _1acb3833d_scopeDeadCode {
	jule::Ptr<_1acb3833d_scopeDeadCode> _field_parent;
	jule::Ptr<_1ab1637b0_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab166153_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab16652c_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1acb3833d_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1acb3833d_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1acb3c595_exprDeadCode {
	jule::Ptr<_1acb3833d_scopeDeadCode> _field_s;
	

	inline bool operator==(_1acb3c595_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1acb3c595_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1ab355551_SwapExprModel {
	jule::Ptr<_1ab22a228_Data> _field_Left;
	jule::Ptr<_1ab22a228_Data> _field_Right;
	

	inline bool operator==(_1ab355551_SwapExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1ab355551_SwapExprModel _other) { return !this->operator==(_other); }


};
struct _1ab35596e_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

	inline bool operator==(_1ab35596e_EmptyCompareExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Neg == _other._field_Neg;
	}

	inline bool operator!=(_1ab35596e_EmptyCompareExprModel _other) { return !this->operator==(_other); }


};
struct _1ab355c6b_RefExprModel {
	jule::Ptr<_1ab1c7a66_Var> _field_Var;
	

	inline bool operator==(_1ab355c6b_RefExprModel _other) {
		return 
			this->_field_Var == _other._field_Var;
	}

	inline bool operator!=(_1ab355c6b_RefExprModel _other) { return !this->operator==(_other); }


};
struct _1ab356299_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1d8bd00bd_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1ab356299_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1ab356299_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1ab35682c_MutSlicingExprModel {
	jule::Ptr<_1ab0c1e7c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1ab35682c_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1ab35682c_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1ab356b29_UnsafeBinopExprModel {
	jule::Ptr<_1ab1101a7_BinopExprModel> _field_Node;
	

	inline bool operator==(_1ab356b29_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1ab356b29_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1ab356e26_UnsafeIndexingExprModel {
	jule::Ptr<_1ab112a17_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1ab356e26_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1ab356e26_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1ab357355_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1ab112561_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1ab357355_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1ab357355_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1ab35772e_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1ab35772e_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1ab35772e_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1ab3588c8_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_1ab1637b0_Scope> _field_scope;
	

	inline bool operator==(_1ab3588c8_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1ab3588c8_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1ab35ea55_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	inline bool operator==(_1ab35ea55_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1ab35ea55_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1acb44657_Optimizer {
	jule::Ptr<_1ac9c51db_IR> _field_ir;
	

	inline bool operator==(_1acb44657_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1acb44657_Optimizer _other) { return !this->operator==(_other); }


};
struct _1acb6c77e_AnsiEscape {
	

	inline bool operator==(_1acb6c77e_AnsiEscape _other) { return true; }

	inline bool operator!=(_1acb6c77e_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1acb6ddac_Logger {
	

	inline bool operator==(_1acb6ddac_Logger _other) { return true; }

	inline bool operator!=(_1acb6ddac_Logger _other) { return !this->operator==(_other); }


};
struct _1ad2c4c3d_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1ad2c4c3d_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1ad2c4c3d_AbsTime _other) { return !this->operator==(_other); }


};
struct _1ad2c5414_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1ad2c5414_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1ad2c5414_Time _other) { return !this->operator==(_other); }


};
struct _1ad1ed53a_scopeCoder {
	jule::Ptr<_1ad2ce8b3_ObjectCoder> _field_oc;
	

	inline bool operator==(_1ad1ed53a_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ad1ed53a_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1ad2076a9_exprCoder {
	jule::Ptr<_1ad2ce8b3_ObjectCoder> _field_oc;
	

	inline bool operator==(_1ad2076a9_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ad2076a9_exprCoder _other) { return !this->operator==(_other); }


};
struct _1ad217d3a_TestCoder {
	jule::Ptr<_1ab10acb8_StructIns> _field_t;
	jule::Ptr<_1ab11cdeb_Fn> _field_tmReset;
	jule::Ptr<_1ab11cdeb_Fn> _field_tmFailed;
	jule::Ptr<_1ab11cdeb_Fn> _field_tmSkipped;
	jule::Ptr<_1ad2ce8b3_ObjectCoder> _field_oc;
	

	inline bool operator==(_1ad217d3a_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ad217d3a_TestCoder _other) { return !this->operator==(_other); }


};
struct _1ad21aa1e_identCoder {
	

	inline bool operator==(_1ad21aa1e_identCoder _other) { return true; }

	inline bool operator!=(_1ad21aa1e_identCoder _other) { return !this->operator==(_other); }


};
struct _1ad2ccd9a_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1ad2ccd9a_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1ad2ccd9a_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1ad2cd472_traitHash {
	jule::Ptr<_1ab131195_Trait> _field_t;
	jule::Str _field_ti;
	jule::Ptr<_1ab10acb8_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1ad2cd472_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_ti == _other._field_ti &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1ad2cd472_traitHash _other) { return !this->operator==(_other); }


};
struct _1ad2cd84b_traitCast {
	jule::Ptr<_1ab131195_Trait> _field_t1;
	jule::Ptr<_1ab131195_Trait> _field_t2;
	

	inline bool operator==(_1ad2cd84b_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1ad2cd84b_traitCast _other) { return !this->operator==(_other); }


};
struct _1ad2dda6a_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1ad2dda6a_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ad2dda6a_customType _other) { return !this->operator==(_other); }


};
struct _1ad2de670_typeCoder {
	jule::Ptr<_1ad2ce8b3_ObjectCoder> _field_oc;
	jule::Ptr<_1ad2e7447_resultCoder> _field_rc;
	

	inline bool operator==(_1ad2de670_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1ad2de670_typeCoder _other) { return !this->operator==(_other); }


};
struct _1ad2e7447_resultCoder {
	jule::Ptr<_1ad2de670_typeCoder> _field_tc;
	

	inline bool operator==(_1ad2e7447_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1ad2e7447_resultCoder _other) { return !this->operator==(_other); }


};
struct _1bd6ed211_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1bd6ed211_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bd6ed211_Flag _other) { return !this->operator==(_other); }


};struct _1bd701a72_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1bd701a72_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bd701a72_Flag _other) { return !this->operator==(_other); }


};struct _1bd70526d_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1bd70526d_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bd70526d_Flag _other) { return !this->operator==(_other); }


};struct _1bd7089ad_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1bd7089ad_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bd7089ad_Flag _other) { return !this->operator==(_other); }


};struct _1bd70c1a9_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1bd70c1a9_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bd70c1a9_Flag _other) { return !this->operator==(_other); }


};
struct _1ad4c4b85_FlagSet {
	jule::Slice<jule::Trait<_1ad4c30d4_CommonFlag>> _field_flags;
	


};
struct _1ad4c7616_argParser {
	_1ad4c4b85_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	


};
struct _1ad2ce8b3_ObjectCoder {
	_1d7ad2eb1_StrBuilder _field_Obj;
	_1d7ad2eb1_StrBuilder _field_resultDecls;
	_1d7ad2eb1_StrBuilder _field_anyObj;
	jule::Ptr<_1ac9c51db_IR> _field_ir;
	_1ad2ccd9a_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1ad2cd472_traitHash>> _field_tmap;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1ad2cd84b_traitCast> _field_traitCastMap;
	jule::Ptr<_1ad2076a9_exprCoder> _field_ec;
	jule::Ptr<_1ad1ed53a_scopeCoder> _field_sc;
	jule::Ptr<_1ad2de670_typeCoder> _field_tc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	


};
struct _1acaee26b_ObjectDeadCode {
	_1acaedd81_liveTable _field_live;
	jule::Ptr<_1ac9c51db_IR> _field_ir;
	


};
struct _1ac9c51db_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1ab187b14_Package> _field_Main;
	jule::Slice<jule::Ptr<_1ab184bdd_ImportInfo>> _field_Used;
	_1ac9c793b_OrderedDefines _field_Ordered;
	


};
struct _1ab10acb8_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1ab10803a_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1ab259136_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1ab10a218_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1ab1c7a66_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1ab11cdeb_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1ab123eac_ReferenceStack> _field_Refers;
	_1ab107127_Operators _field_Operators;
	


};
struct _1d7c40e54_Cmd {
	_1d7c90c73_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab22a228_Data__jule_tuple_x_1ab22a228_Data {
	jule::Ptr<_1ab22a228_Data> __jule_result_arg0;
	jule::Ptr<_1ab22a228_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1ab22a228_Data__jule_tuple_bool {
	jule::Ptr<_1ab22a228_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab0ee262_Case__jule_tuple_bool {
	jule::Ptr<_1ab0ee262_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ab0ee262_Case__jule_tuple_x_1ab0ed0b8_Else {
	jule::Slice<jule::Ptr<_1ab0ee262_Case>> __jule_result_arg0;
	jule::Ptr<_1ab0ed0b8_Else> __jule_result_arg1;
};
struct __jule_tuple__1ab0e6aa6_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab0e5de6_AssignSt__jule_tuple_bool {
	jule::Ptr<_1ab0e5de6_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1ab0d7448_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab0da33b_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1ab0da33b_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ab0d55ab_Ast__jule_tuple_s_1d7b81cb8_Log {
	jule::Slice<jule::Ptr<_1ab0d55ab_Ast>> __jule_result_arg0;
	jule::Slice<_1d7b81cb8_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1d7b81cb8_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1d7b81cb8_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ac9c51db_IR__jule_tuple_s_1d7b81cb8_Log {
	jule::Ptr<_1ac9c51db_IR> __jule_result_arg0;
	jule::Slice<_1d7b81cb8_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1d8106391_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1d8106391_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1d8106391_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1d8106391_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab224d9e_SymbolTable__jule_tuple_s_1d7b81cb8_Log {
	jule::Ptr<_1ab224d9e_SymbolTable> __jule_result_arg0;
	jule::Slice<_1d7b81cb8_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ab187b14_Package__jule_tuple_s_1d7b81cb8_Log {
	jule::Ptr<_1ab187b14_Package> __jule_result_arg0;
	jule::Slice<_1d7b81cb8_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ab0d55ab_Ast__jule_tuple_s_1d7b81cb8_Log {
	jule::Ptr<_1ab0d55ab_Ast> __jule_result_arg0;
	jule::Slice<_1d7b81cb8_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_sx_1ab0c1e7c_Token {
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1ab0c1e7c_Token__jule_tuple_s_1d7b81cb8_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> __jule_result_arg0;
	jule::Slice<_1d7b81cb8_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _1d7ad2eb1_StrBuilder static__1d7ad327a_New(jule::I64);
inline void _1d7adb7d3_Write(_1d7ad2eb1_StrBuilder*, jule::Slice<jule::U8>);
inline void _1d7adba8b_WriteStr(_1d7ad2eb1_StrBuilder*, jule::Str);
inline void _1d7adbd44_WriteByte(_1d7ad2eb1_StrBuilder*, jule::U8);
inline jule::Str _1d7adc383_Str(_1d7ad2eb1_StrBuilder*);
inline void _1d7adc581_Clear(_1d7ad2eb1_StrBuilder*);
inline jule::I64 _1d7adc817_Len(_1d7ad2eb1_StrBuilder*);
inline jule::Slice<jule::U8> _1d7adcd34_Buf(_1d7ad2eb1_StrBuilder*);
inline void _1d7add0dc_SetBuf(_1d7ad2eb1_StrBuilder*, jule::Slice<jule::U8>);
inline jule::U8 _1d7addd9b_index(_1d7add917_lazyBuff*, jule::I64);
inline void _1d7ade154_append(_1d7add917_lazyBuff*, jule::U8);
inline jule::Str _1d7ade3da_string(_1d7add917_lazyBuff*);
inline jule::Exceptional<jule::Slice<jule::Ptr<_202527127_DirEntry>>> static__1d7ae328a_Read(jule::Str);
inline jule::VoidExceptional static__1d7ae34bb_Create(jule::Str);
inline jule::VoidExceptional static__1d7ae36ec_Remove(jule::Str);
inline jule::Exceptional<jule::Ptr<_202528d82_File>> static__202526049_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__20252627a_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _20252670e_Write(_202528d82_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _202526a50_Read(_202528d82_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_202528d82_File> static__2025292a0_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_202528d82_File>> static__202529569_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__202529833_Read(jule::Str);
inline jule::VoidExceptional static__202529bc9_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::VoidExceptional _20252a416_Close(_202528d82_File*);
inline jule::Exceptional<jule::Ptr<_20252ae72_Status>> static__202527b0b_Of(jule::Str);
inline jule::Bool _20252b34b_IsDir(_20252ae72_Status*);
inline jule::Bool _20252b5d2_IsReg(_20252ae72_Status*);
inline jule::U64 _20252b868_Size(_20252ae72_Status*);
inline jule::Bool _1d8bb1e29_set(_1d8bba55e_decimal*, jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_bool _1d8bb226a_floatBits(_1d8bba55e_decimal*, _1d8ba6a56_floatInfo*);
inline void _1d8bba916_assign(_1d8bba55e_decimal*, jule::U64);
inline void _1d8bbabbe_shift(_1d8bba55e_decimal*, jule::I64);
inline void _1d8bbae77_roundDown(_1d8bba55e_decimal*, jule::I64);
inline void _1d8bbb230_roundUp(_1d8bba55e_decimal*, jule::I64);
inline void _1d8bbb4d8_round(_1d8bba55e_decimal*, jule::I64);
inline jule::U64 _1d8bbb76e_roundedInteger(_1d8bba55e_decimal*);
inline jule::Ptr<_1d8bd00bd_Const> static__1d8bd050d_NewI64(jule::I64);
inline jule::Ptr<_1d8bd00bd_Const> static__1d8bd07c7_NewU64(jule::U64);
inline jule::Ptr<_1d8bd00bd_Const> static__1d8bd0a91_NewBool(jule::Bool);
inline jule::Ptr<_1d8bd00bd_Const> static__1d8bd0d5a_NewStr(jule::Str);
inline jule::Ptr<_1d8bd00bd_Const> static__1d8bd1124_NewF64(jule::F64);
inline jule::Ptr<_1d8bd00bd_Const> static__1d8bd1333_NewNil(void);
inline jule::I64 _1d8bd1993_ReadI64(_1d8bd00bd_Const*);
inline jule::U64 _1d8bd1c29_ReadU64(_1d8bd00bd_Const*);
inline jule::Bool _1d8bd1eb0_ReadBool(_1d8bd00bd_Const*);
inline jule::Str _1d8bd2246_ReadStr(_1d8bd00bd_Const*);
inline jule::F64 _1d8bd24cc_ReadF64(_1d8bd00bd_Const*);
inline jule::I64 _1d8bd2763_AsI64(_1d8bd00bd_Const*);
inline jule::U64 _1d8bd29e9_AsU64(_1d8bd00bd_Const*);
inline jule::F64 _1d8bd2c80_AsF64(_1d8bd00bd_Const*);
inline void _1d8bd3038_SetI64(_1d8bd00bd_Const*, jule::I64);
inline void _1d8bd32e1_SetU64(_1d8bd00bd_Const*, jule::U64);
inline void _1d8bd3599_SetBool(_1d8bd00bd_Const*, jule::Bool);
inline void _1d8bd3852_SetStr(_1d8bd00bd_Const*, jule::Str);
inline void _1d8bd3b0a_SetF64(_1d8bd00bd_Const*, jule::F64);
inline jule::Bool _1d8bd408e_IsI64(_1d8bd00bd_Const*);
inline jule::Bool _1d8bd4325_IsU64(_1d8bd00bd_Const*);
inline jule::Bool _1d8bd45ab_IsBool(_1d8bd00bd_Const*);
inline jule::Bool _1d8bd4842_IsStr(_1d8bd00bd_Const*);
inline jule::Bool _1d8bd4ac8_IsF64(_1d8bd00bd_Const*);
inline jule::Bool _1d8bd4d5e_IsNil(_1d8bd00bd_Const*);
inline jule::Bool _1d8bd54e1_And(_1d8bd00bd_Const*, _1d8bd00bd_Const);
inline jule::Bool _1d8bd5832_Or(_1d8bd00bd_Const*, _1d8bd00bd_Const);
inline jule::Bool _1d8bd6cc8_Add(_1d8bd00bd_Const*, _1d8bd00bd_Const);
inline jule::Bool _1d8bd7119_Sub(_1d8bd00bd_Const*, _1d8bd00bd_Const);
inline jule::Bool _1d8bd745a_Mul(_1d8bd00bd_Const*, _1d8bd00bd_Const);
inline jule::Bool _1d8bd779b_Div(_1d8bd00bd_Const*, _1d8bd00bd_Const);
inline jule::Bool _1d8bd7adc_Mod(_1d8bd00bd_Const*, _1d8bd00bd_Const);
inline jule::Bool _1d8bd7e2d_BitwiseAnd(_1d8bd00bd_Const*, _1d8bd00bd_Const);
inline jule::Bool _1d8bd826e_BitwiseOr(_1d8bd00bd_Const*, _1d8bd00bd_Const);
inline jule::Bool _1d8bd85b0_Xor(_1d8bd00bd_Const*, _1d8bd00bd_Const);
inline jule::Bool _1d8bd8901_Lshift(_1d8bd00bd_Const*, _1d8bd00bd_Const);
inline jule::Bool _1d8bd8c42_Rshift(_1d8bd00bd_Const*, _1d8bd00bd_Const);
inline jule::U8 _1ab0c2301_Prec(_1ab0c1e7c_Token*);
inline void _1ab0c7b31_Fill(_1ab0c7746_File*, jule::Slice<jule::U8>);
inline jule::Str _1ab0c7db7_Dir(_1ab0c7746_File*);
inline jule::Str _1ab0c814d_Name(_1ab0c7746_File*);
inline jule::Str _1ab0c8725_GetRow(_1ab0c7746_File*, jule::I64);
inline void _1ab0d1013_pushErr(_1ab0d0980_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1ab0d1574_lex(_1ab0d0980_lex*);
inline jule::Str _1ab0d18b5_id(_1ab0d0980_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _1ab0d1b4b_resume(_1ab0d0980_lex*);
inline void _1ab0d1e04_lexLineComment(_1ab0d0980_lex*, jule::Ptr<_1ab0c1e7c_Token>*);
inline void _1ab0d21ac_lexRangeComment(_1ab0d0980_lex*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Str _1ab0d24ed_num(_1ab0d0980_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1ab0d283e_escapeSeq(_1ab0d0980_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1ab0d2c3a_getRune(_1ab0d0980_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _1ab0d307b_lexRune(_1ab0d0980_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1ab0d3312_lexStr(_1ab0d0980_lex*);
inline void _1ab0d3796_newLine(_1ab0d0980_lex*);
inline jule::Bool _1ab0d3d07_isOp(_1ab0d0980_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Bool _1ab0d4203_lexBasicOps(_1ab0d0980_lex*, jule::Slice<jule::U8>, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Bool _1ab0d45ee_lexId(_1ab0d0980_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Bool _1ab0d49ea_lexNum(_1ab0d0980_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Ptr<_1ab0c1e7c_Token> _1ab0d4c81_token(_1ab0d0980_lex*);
inline jule::Bool _1ab0d92d5_IsUnsafe(_1ab0d8e72_PtrTypeDecl*);
inline jule::Bool _1ab0d9a77_AutoSized(_1ab0d9714_ArrTypeDecl*);
inline jule::Bool _1ab0e082a_Unhandled(_1ab0e04a6_FnCallExpr*);
inline jule::Bool _1ab0e0ab1_Ignored(_1ab0e04a6_FnCallExpr*);
inline jule::Bool _1ab0e802a_IsSelf(_1ab0e7ba6_ParamDecl*);
inline jule::Bool _1ab0e946b_IsAnon(_1ab0e9108_FnDecl*);
inline jule::Bool _1ab0eb0b6_IsInf(_1ab0eac53_Iter*);
inline jule::Bool _1ab0eb8e1_IsWhileNext(_1ab0eb57d_WhileKind*);
inline jule::Ptr<_1ab10a218_FieldIns> _1ab1054bb_instance(jule::Ptr<_1ab105147_Field>);
inline jule::Ptr<_1ab10acb8_StructIns> _1ab10849c_instance(jule::Ptr<_1ab10803a_Struct>);
inline jule::Ptr<_1ab10acb8_StructIns> _1ab1087aa_appendInstance(_1ab10803a_Struct*, jule::Ptr<_1ab10acb8_StructIns>*);
inline jule::Ptr<_1ab11cdeb_Fn> _1ab108ba6_FindMethod(_1ab10803a_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab1c7a66_Var> _1ab108ee7_FindStatic(_1ab10803a_Struct*, jule::Str);
inline jule::Ptr<_1ab105147_Field> _1ab109338_FindField(_1ab10803a_Struct*, jule::Str);
inline jule::Bool _1ab109679_IsImplements(_1ab10803a_Struct*, jule::Ptr<_1ab131195_Trait>);
inline jule::Bool _1ab1099ba_IsUses(_1ab10803a_Struct*, jule::Ptr<_1ab10803a_Struct>);
inline jule::Ptr<_1ab11ed54_ParamIns> _1ab11b7ac_instance(jule::Ptr<_1ab11b427_Param>);
inline jule::Bool _1ab11ba43_IsSelf(_1ab11b427_Param*);
inline jule::Bool _1ab11bcc9_IsRef(_1ab11b427_Param*);
inline jule::Bool _1ab11d36e_IsVoid(_1ab11cdeb_Fn*);
inline jule::Bool _1ab11d605_IsMethod(_1ab11cdeb_Fn*);
inline jule::Bool _1ab11d88b_IsEntryPoint(_1ab11cdeb_Fn*);
inline jule::Bool _1ab11db22_IsInit(_1ab11cdeb_Fn*);
inline jule::Bool _1ab11dda8_IsAnon(_1ab11cdeb_Fn*);
inline jule::Bool _1ab11e13e_AnyVar(_1ab11cdeb_Fn*);
inline jule::Ptr<_1ab120d00_FnIns> _1ab11e3c5_instanceForce(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Ptr<_1ab120d00_FnIns> _1ab11e65b_instance(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Ptr<_1ab120d00_FnIns> _1ab11e969_appendInstance(_1ab11cdeb_Fn*, jule::Ptr<_1ab120d00_FnIns>*);
inline jule::Str _1ab1201b7_Str(_1ab11ed54_ParamIns*);
inline jule::Str _1ab121141_Str(_1ab120d00_FnIns*);
inline jule::Bool _1ab121482_Equal(jule::Ptr<_1ab120d00_FnIns>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Bool _1ab121927_EqualFn(jule::Ptr<_1ab120d00_FnIns>, jule::Ptr<_1ab120d00_FnIns>*);
inline jule::Bool _1ab121c68_equalTrait(jule::Ptr<_1ab120d00_FnIns>, jule::Ptr<_1ab120d00_FnIns>*);
inline jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>> _1ab121eee_Types(_1ab120d00_FnIns*);
inline jule::Bool _1ab122285_IsBuiltin(_1ab120d00_FnIns*);
inline jule::Bool _1ab12251b_IsAnon(_1ab120d00_FnIns*);
inline jule::Bool _1ab12285c_Same(_1ab120d00_FnIns*, jule::Ptr<_1ab120d00_FnIns>);
inline jule::Str _1ab122b9d_GetKindStr(_1ab120d00_FnIns*, jule::Bool);
inline jule::Ptr<_1ab123eac_ReferenceStack> static__1ab124298_new(void);
inline jule::I64 _1ab124694_Len(_1ab123eac_ReferenceStack*);
inline jule::Any _1ab1249d5_At(_1ab123eac_ReferenceStack*, jule::I64);
inline void _1ab124c8d_Push(_1ab123eac_ReferenceStack*, jule::Any);
inline jule::Bool _1bc502ed4_Exist(_1ab123eac_ReferenceStack*, jule::Ptr<_1ab120d00_FnIns>);
inline jule::Bool _1bc516e2c_Exist(_1ab123eac_ReferenceStack*, jule::Ptr<_1ab1c7a66_Var>);
inline jule::Bool _1bc5c4a34_Exist(_1ab123eac_ReferenceStack*, jule::Ptr<_1ab10acb8_StructIns>);
inline jule::Bool _1bb22a68b_Exist(_1ab123eac_ReferenceStack*, jule::Ptr<_1ab131195_Trait>);
inline void _1ab12a920_pushErr(_1ab12a07e_symbolBuilder*, jule::Ptr<_1ab0c1e7c_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1ab12b1a1_pushSuggestion(_1ab12a07e_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ab12b59c_checkCppUseDeclPath(_1ab12a07e_symbolBuilder*, jule::Ptr<_1ab1002b8_UseDecl>*, jule::Str*);
inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab12b8aa_buildCppHeaderImport(_1ab12a07e_symbolBuilder*, jule::Ptr<_1ab1002b8_UseDecl>*);
inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab12bbeb_buildStdImport(_1ab12a07e_symbolBuilder*, jule::Ptr<_1ab1002b8_UseDecl>*);
inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab12c03c_buildIdentImport(jule::Ptr<_1ab12a07e_symbolBuilder>, jule::Ptr<_1ab1002b8_UseDecl>*);
inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab12c37d_buildImport(jule::Ptr<_1ab12a07e_symbolBuilder>, jule::Ptr<_1ab1002b8_UseDecl>*);
inline jule::Bool _1ab12c6be_checkDuplicateUseDecl(_1ab12a07e_symbolBuilder*, jule::Ptr<_1ab184bdd_ImportInfo>*);
inline void _1ab12ca32_implImportSelections(_1ab12a07e_symbolBuilder*, jule::Ptr<_1ab184bdd_ImportInfo>*, jule::Ptr<_1ab1002b8_UseDecl>*);
inline jule::Str _1ab12cd73_getAsLinkPath(jule::Ptr<_1ab12a07e_symbolBuilder>, jule::Str);
inline void _1ab12d291_pushCycleError(jule::Ptr<_1ab12a07e_symbolBuilder>, jule::Ptr<_1ab12a07e_symbolBuilder>*, jule::Str, _1d7ad2eb1_StrBuilder*);
inline void _1ab12d6ae_pushCrossCycleError(jule::Ptr<_1ab12a07e_symbolBuilder>, jule::Ptr<_1ab12a07e_symbolBuilder>*, jule::Ptr<_1ab184bdd_ImportInfo>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Bool _1ab12daaa_checkImportCycles(jule::Ptr<_1ab12a07e_symbolBuilder>, jule::Ptr<_1ab184bdd_ImportInfo>, jule::Ptr<_1ab1002b8_UseDecl>*);
inline void _1ab12dec8_checkPackageAccessibility(_1ab12a07e_symbolBuilder*, jule::Ptr<_1ab1002b8_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1ab12e3c4_importPackage(jule::Ptr<_1ab12a07e_symbolBuilder>, jule::Ptr<_1ab184bdd_ImportInfo>*, jule::Ptr<_1ab1002b8_UseDecl>*);
inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab12e715_importUseDecl(jule::Ptr<_1ab12a07e_symbolBuilder>, jule::Ptr<_1ab1002b8_UseDecl>*);
inline void _1ab12e913_importUseDecls(jule::Ptr<_1ab12a07e_symbolBuilder>);
inline void _1ab12ebbb_appendNode(_1ab12a07e_symbolBuilder*, _1ab0d6447_Node*);
inline void _1ab12edb9_appendNodes(_1ab12a07e_symbolBuilder*);
inline void _1ab130172_pushDirectivePass(_1ab12a07e_symbolBuilder*, jule::Ptr<_1ab0d6865_Directive>*);
inline void _1ab130370_appendTopDirectives(_1ab12a07e_symbolBuilder*);
inline void _1ab13056d_build(jule::Ptr<_1ab12a07e_symbolBuilder>);
inline jule::Str _1ab13155d_Str(_1ab131195_Trait*);
inline jule::Bool _1ab13189e_Equal(jule::Ptr<_1ab131195_Trait>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Ptr<_1ab11cdeb_Fn> _1ab131d44_FindMethod(_1ab131195_Trait*, jule::Str);
inline jule::Ptr<_1ab11cdeb_Fn> _1ab1324c6_findMethodInherit(_1ab131195_Trait*, jule::Str*);
inline jule::Bool _1ab1331ca_AutoExpr(_1ab132d23_EnumItem*);
inline jule::Str _1ab133c14_Str(_1ab133890_Enum*);
inline jule::Bool _1ab134055_Equal(jule::Ptr<_1ab133890_Enum>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Ptr<_1ab132d23_EnumItem> _1ab134484_FindItem(_1ab133890_Enum*, jule::Str);
inline jule::Str _1ab1353db_Str(_1ab13509a_TypeEnum*);
inline jule::Bool _1ab13572c_Equal(jule::Ptr<_1ab13509a_TypeEnum>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Ptr<_1ab1349c3_TypeEnumItem> _1ab135b5b_FindItem(_1ab13509a_TypeEnum*, jule::Str);
inline jule::Str _1ab13780b_Str(_1ab137443_comptimeRange*);
inline jule::Bool _1ab137b4c_Equal(jule::Ptr<_1ab137443_comptimeRange>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Str _1ab138323_Str(_1ab137e9e_comptimeStructField*);
inline jule::Bool _1ab138664_Equal(jule::Ptr<_1ab137e9e_comptimeStructField>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Ptr<_1ab22a228_Data> _1ab138b81__Name(jule::Ptr<_1ab137e9e_comptimeStructField>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab13907c__Type(jule::Ptr<_1ab137e9e_comptimeStructField>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab139478__Public(jule::Ptr<_1ab137e9e_comptimeStructField>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab1397b9_subIdent(jule::Ptr<_1ab137e9e_comptimeStructField>, jule::Str*);
inline jule::Str _1ab139ed4_Str(_1ab139b4e_comptimeStructFields*);
inline jule::Bool _1ab13a325_Equal(jule::Ptr<_1ab139b4e_comptimeStructFields>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline void _1ab140605_ready(_1ab139b4e_comptimeStructFields*, jule::Ptr<_1ab1c7a66_Var>*, jule::Ptr<_1ab1c7a66_Var>*);
inline void _1ab140a23_step(_1ab139b4e_comptimeStructFields*, jule::I64, jule::Ptr<_1ab1c7a66_Var>*, jule::Ptr<_1ab1c7a66_Var>*);
inline jule::I64 _1ab140ca9_len(_1ab139b4e_comptimeStructFields*);
inline jule::Str _1ab14143b_Str(_1ab1410b7_comptimeStatic*);
inline jule::Bool _1ab14177c_Equal(jule::Ptr<_1ab1410b7_comptimeStatic>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Ptr<_1ab22a228_Data> _1ab141c99__Name(jule::Ptr<_1ab1410b7_comptimeStatic>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab142195__Type(jule::Ptr<_1ab1410b7_comptimeStatic>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab142591__Public(jule::Ptr<_1ab1410b7_comptimeStatic>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab1428d2_subIdent(jule::Ptr<_1ab1410b7_comptimeStatic>, jule::Str*);
inline jule::Str _1ab1430ec_Str(_1ab142c78_comptimeStatics*);
inline jule::Bool _1ab14343d_Equal(jule::Ptr<_1ab142c78_comptimeStatics>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline void _1ab1438b1_ready(_1ab142c78_comptimeStatics*, jule::Ptr<_1ab1c7a66_Var>*, jule::Ptr<_1ab1c7a66_Var>*);
inline void _1ab143cce_step(_1ab142c78_comptimeStatics*, jule::I64, jule::Ptr<_1ab1c7a66_Var>*, jule::Ptr<_1ab1c7a66_Var>*);
inline jule::I64 _1ab144065_len(_1ab142c78_comptimeStatics*);
inline jule::Str _1ab1446e7_Str(_1ab144373_comptimeEnumField*);
inline jule::Bool _1ab144a38_Equal(jule::Ptr<_1ab144373_comptimeEnumField>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Ptr<_1ab22a228_Data> _1ab145033__Name(jule::Ptr<_1ab144373_comptimeEnumField>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab145374_subIdent(jule::Ptr<_1ab144373_comptimeEnumField>, jule::Str*);
inline jule::Str _1ab145b16_Str(_1ab145682_comptimeEnumFields*);
inline jule::Bool _1ab145e57_Equal(jule::Ptr<_1ab145682_comptimeEnumFields>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline void _1ab146353_ready(_1ab145682_comptimeEnumFields*, jule::Ptr<_1ab1c7a66_Var>*, jule::Ptr<_1ab1c7a66_Var>*);
inline void _1ab146771_step(_1ab145682_comptimeEnumFields*, jule::I64, jule::Ptr<_1ab1c7a66_Var>*, jule::Ptr<_1ab1c7a66_Var>*);
inline jule::I64 _1ab146a07_len(_1ab145682_comptimeEnumFields*);
inline jule::Str _1ab147189_Str(_1ab146d15_comptimeParam*);
inline jule::Bool _1ab1474ca_Equal(jule::Ptr<_1ab146d15_comptimeParam>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Ptr<_1ab22a228_Data> _1ab147a08__Name(jule::Ptr<_1ab146d15_comptimeParam>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab147e04__Type(jule::Ptr<_1ab146d15_comptimeParam>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab148300__Variadic(jule::Ptr<_1ab146d15_comptimeParam>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab1486eb__Reference(jule::Ptr<_1ab146d15_comptimeParam>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab148a3c_subIdent(jule::Ptr<_1ab146d15_comptimeParam>, jule::Str*);
inline jule::Str _1ab149400_Str(_1ab14907b_comptimeParams*);
inline jule::Bool _1ab149741_Equal(jule::Ptr<_1ab14907b_comptimeParams>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline void _1ab149bb4_ready(_1ab14907b_comptimeParams*, jule::Ptr<_1ab1c7a66_Var>*, jule::Ptr<_1ab1c7a66_Var>*);
inline void _1ab14a0d2_step(_1ab14907b_comptimeParams*, jule::I64, jule::Ptr<_1ab1c7a66_Var>*, jule::Ptr<_1ab1c7a66_Var>*);
inline jule::I64 _1ab14a368_len(_1ab14907b_comptimeParams*);
inline jule::Str _1ab14a9ea_Str(_1ab14a676_comptimeTypeInfos*);
inline jule::Bool _1ab14ad3b_Equal(jule::Ptr<_1ab14a676_comptimeTypeInfos>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline void _1ab14b2ae_ready(_1ab14a676_comptimeTypeInfos*, jule::Ptr<_1ab1c7a66_Var>*, jule::Ptr<_1ab1c7a66_Var>*);
inline void _1ab14b6cc_step(_1ab14a676_comptimeTypeInfos*, jule::I64, jule::Ptr<_1ab1c7a66_Var>*, jule::Ptr<_1ab1c7a66_Var>*);
inline jule::I64 _1ab14b963_len(_1ab14a676_comptimeTypeInfos*);
inline jule::Str _1ab14c0e5_Str(_1ab14bc71_comptimeTypeInfo*);
inline jule::Bool _1ab14c436_Equal(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Ptr<_1ab22a228_Data> _1ab14ca85__Str(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab14ce81__Kind(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab14d37c__Bits(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab14d778__Elem(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab14db74__Size(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab14e070__Key(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab14e46b__Value(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab14e867__Fields(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab14ec63__Statics(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab15015e__Public(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab15055a__Binded(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab150956__Ordered(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab150d52__Comparable(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab15124d__Mutable(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab151649__Types(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab151a45__Exceptional(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab151e41__CanNil(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab15233c__RC(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab152738__Result(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab152b34__Params(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab152e75_subIdent(jule::Ptr<_1ab14bc71_comptimeTypeInfo>, jule::Str*);
inline jule::Str _1ab153607_Str(_1ab153283_comptimeValue*);
inline jule::Bool _1ab153948_Equal(jule::Ptr<_1ab153283_comptimeValue>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Ptr<_1ab22a228_Data> _1ab153e98__Unwrap(jule::Ptr<_1ab153283_comptimeValue>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab154394__Type(jule::Ptr<_1ab153283_comptimeValue>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab154790__Lvalue(jule::Ptr<_1ab153283_comptimeValue>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab154b8b__Mutable(jule::Ptr<_1ab153283_comptimeValue>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab155087__Const(jule::Ptr<_1ab153283_comptimeValue>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab155483__Field(jule::Ptr<_1ab153283_comptimeValue>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab1557c4_subIdent(jule::Ptr<_1ab153283_comptimeValue>, jule::Str*);
inline jule::Str _1ab155e56_Str(_1ab155ad2_comptimeFiles*);
inline jule::Bool _1ab156297_Equal(jule::Ptr<_1ab155ad2_comptimeFiles>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline void _1ab15671a_ready(_1ab155ad2_comptimeFiles*, jule::Ptr<_1ab1c7a66_Var>*, jule::Ptr<_1ab1c7a66_Var>*);
inline void _1ab156b38_step(_1ab155ad2_comptimeFiles*, jule::I64, jule::Ptr<_1ab1c7a66_Var>*, jule::Ptr<_1ab1c7a66_Var>*);
inline jule::I64 _1ab156dbe_len(_1ab155ad2_comptimeFiles*);
inline jule::Str _1ab157551_Str(_1ab1571cc_comptimeFile*);
inline jule::Bool _1ab157892_Equal(jule::Ptr<_1ab1571cc_comptimeFile>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Ptr<_1ab22a228_Data> _1ab157dae__Path(jule::Ptr<_1ab1571cc_comptimeFile>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab1582aa__Name(jule::Ptr<_1ab1571cc_comptimeFile>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab1586a6__Dir(jule::Ptr<_1ab1571cc_comptimeFile>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab1589e7_subIdent(jule::Ptr<_1ab1571cc_comptimeFile>, jule::Str*);
inline jule::Fn<jule::Bool(jule::Ptr<_1ab1a567b_Sema>*,jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>>*)> _1ab15b742_readyFn(jule::Ptr<_1ab15b346_constraintChecker>);
inline jule::Bool _1ab15b9c8_readyFi(jule::Ptr<_1ab15b346_constraintChecker>);
inline jule::Bool _1ab15bc5e_readySi(jule::Ptr<_1ab15b346_constraintChecker>);
inline jule::Bool _1ab15bee5_ready(jule::Ptr<_1ab15b346_constraintChecker>);
inline jule::Bool _1ab15c27b_check(jule::Ptr<_1ab15b346_constraintChecker>);
inline jule::Bool _1ab15d744_IsTraitImpl(_1ab15d37b_Impl*);
inline jule::Bool _1ab15d9ca_IsStructImpl(_1ab15d37b_Impl*);
inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab16b059_SelectPackage(_1ab16aab4_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)>);
inline jule::Ptr<_1ab1c7a66_Var> _1ab16b455_FindVar(_1ab16aab4_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab16b851_FindTypeAlias(_1ab16aab4_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab10803a_Struct> _1ab16bc4c_FindStruct(_1ab16aab4_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab11cdeb_Fn> _1ab16c148_FindFn(_1ab16aab4_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab131195_Trait> _1ab16c489_FindTrait(_1ab16aab4_scopeChecker*, jule::Str);
inline jule::Ptr<_1ab133890_Enum> _1ab16c7ca_FindEnum(_1ab16aab4_scopeChecker*, jule::Str);
inline jule::Ptr<_1ab13509a_TypeEnum> _1ab16cb1b_FindTypeEnum(_1ab16aab4_scopeChecker*, jule::Str);
inline jule::Bool _1ab16ce6d_isUnsafe(jule::Ptr<_1ab16aab4_scopeChecker>);
inline jule::Bool _1ab16d204_isRoot(_1ab16aab4_scopeChecker*);
inline void _1ab16d402_stop(_1ab16aab4_scopeChecker*);
inline jule::Bool _1ab16d688_stopped(_1ab16aab4_scopeChecker*);
inline jule::Bool _1ab16d91e_isDeferred(jule::Ptr<_1ab16aab4_scopeChecker>);
inline jule::Ptr<_1ab16aab4_scopeChecker> _1ab16dba5_getRoot(jule::Ptr<_1ab16aab4_scopeChecker>);
inline jule::Ptr<_1ab16aab4_scopeChecker> _1ab16de3b_getHardRoot(jule::Ptr<_1ab16aab4_scopeChecker>);
inline jule::Ptr<_1ab166153_Label> _1ab16e27c_findLabel(_1ab16aab4_scopeChecker*, jule::Str*);
inline jule::Ptr<_1ab16961d_scopeLabel> _1ab16e5bd_findLabelScope(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Str*);
inline jule::Ptr<_1ab16961d_scopeLabel> _1ab16e90e_findLabelAll(_1ab16aab4_scopeChecker*, jule::Str*);
inline jule::Bool _1ab16ed0a_isDuplicatedIdent(_1ab16aab4_scopeChecker*, jule::Uintptr, jule::Str*);
inline void _1ab1700b3_checkVarDecl(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0ea1d6_VarDecl>);
inline void _1ab17036b_checkTypeAlias(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab259c2a_TypeAlias>*);
inline void _1ab170624_checkTypeAliasDecl(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0edcab_TypeAliasDecl>);
inline jule::Ptr<_1ab1637b0_Scope> _1ab1708aa_getChild(_1ab16aab4_scopeChecker*);
inline void _1ab170cc8_checkChildSsc(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0e7469_ScopeTree>*, jule::Ptr<_1ab1637b0_Scope>*, jule::Ptr<_1ab16aab4_scopeChecker>*);
inline jule::Ptr<_1ab1637b0_Scope> _1ab1711c4_checkChildSc(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0e7469_ScopeTree>*, jule::Ptr<_1ab16aab4_scopeChecker>*);
inline jule::Ptr<_1ab1637b0_Scope> _1ab171515_checkChild(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0e7469_ScopeTree>*);
inline void _1ab1717bd_checkAnonScope(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0e7469_ScopeTree>);
inline void _1ab171b31_processErrorCall(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab1189b8_BuiltinErrorCallExprModel>*, jule::Ptr<_1ab0c1e7c_Token>);
inline void _1ab171dd9_checkExpr(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0db77c_Expr>);
inline jule::Ptr<_1ab163bcd_If> _1ab17222a_checkIf(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0ecbde_If>);
inline jule::Ptr<_1ab163eca_Else> _1ab17256b_checkElse(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0ed0b8_Else>);
inline void _1ab172824_checkConditional(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0ed56e_Conditional>);
inline void _1ab172cec_checkIterScopeSsc(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Uintptr, jule::Ptr<_1ab0e7469_ScopeTree>, jule::Ptr<_1ab1637b0_Scope>*, jule::Ptr<_1ab16aab4_scopeChecker>);
inline jule::Ptr<_1ab1637b0_Scope> _1ab1732a3_checkIterScopeSc(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Uintptr, jule::Ptr<_1ab0e7469_ScopeTree>, jule::Ptr<_1ab16aab4_scopeChecker>);
inline jule::Ptr<_1ab1637b0_Scope> _1ab17369e_checkIterScope(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Uintptr, jule::Ptr<_1ab0e7469_ScopeTree>*);
inline void _1ab173957_checkInfIter(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0eac53_Iter>*);
inline void _1ab173c10_checkWhileIter(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0eac53_Iter>*);
inline void _1ab17412d_checkComptimeRangeIter(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0eac53_Iter>*, jule::Ptr<_1ab1655e7_RangeIter>*, jule::Ptr<_1ab22a228_Data>*);
inline void _1ab1743d6_checkRangeIter(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0eac53_Iter>*);
inline void _1ab17468e_checkIter(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0eac53_Iter>);
inline jule::Bool _1ab1749d0_checkValidContLabel(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Uintptr);
inline jule::Bool _1ab174d21_checkValidBreakLabel(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1ab16597c_ContSt> _1ab175162_checkContValidScope(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0ec738_ContSt>);
inline void _1ab17541a_checkCont(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0ec738_ContSt>);
inline void _1ab1756c3_checkLabel(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0e4a2c_LabelSt>);
inline void _1ab17597b_pushGoto(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0e4e06_GotoSt>);
inline void _1ab175c34_checkPostfix(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0e5de6_AssignSt>);
inline jule::Bool _1ab176075_isNewAssignIdent(_1ab16aab4_scopeChecker*, jule::Str);
inline void _1ab17632d_removeInteriorMutRisk(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab22a228_Data>*);
inline jule::Bool _1ab1767d4_checkStructureAssignOp(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab10acb8_StructIns>*, jule::Ptr<_1ab0e5de6_AssignSt>*, jule::Ptr<_1ab22a228_Data>*);
inline void _1ab176a8c_checkSingleAssign(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0e5de6_AssignSt>*);
inline void _1ab177120_processEndPartOfMultiAssign(_1ab16aab4_scopeChecker*, jule::Ptr<_1ab167286_MultiAssign>*, jule::Ptr<_1ab0e5de6_AssignSt>*, jule::Ptr<_1ab0e5863_AssignLeft>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>*);
inline void _1ab1773c8_checkMultiAssign(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0e5de6_AssignSt>*);
inline void _1ab177681_singleDeclAssign(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0e5de6_AssignSt>*);
inline void _1ab177939_checkAssignSt(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0e5de6_AssignSt>);
inline jule::Ptr<_1ab1637b0_Scope> _1ab177d35_checkCaseScope(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab16852e_Case>*, jule::Ptr<_1ab0e7469_ScopeTree>*);
inline jule::Ptr<_1ab16852e_Case> _1ab178396_checkCase(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab1678e6_Match>, jule::I64, jule::Ptr<_1ab0ee262_Case>, jule::Ptr<_1ab22a228_Data>);
inline void _1ab1787b4_checkCases(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0ee99e_MatchCase>*, jule::Ptr<_1ab1678e6_Match>, jule::Ptr<_1ab22a228_Data>);
inline jule::Ptr<_1ab16852e_Case> _1ab178bb0_checkDefault(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab1678e6_Match>, jule::Ptr<_1ab0ed0b8_Else>);
inline void _1ab179023_checkComptimePanic(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0c1e7c_Token>, jule::Ptr<_1ab1637b0_Scope>*);
inline void _1ab179386_processConstMatch(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab1678e6_Match>*, jule::Ptr<_1ab0ee99e_MatchCase>*);
inline void _1ab17963e_checkTypeMatch(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0ee99e_MatchCase>*);
inline void _1ab1798e7_checkCommonMatch(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0ee99e_MatchCase>*);
inline void _1ab179ba0_checkMatch(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0ee99e_MatchCase>);
inline void _1ab179e58_checkFall(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0e5203_FallSt>);
inline jule::Ptr<_1ab165d56_BreakSt> _1ab17a299_checkBreakWithLabel(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0ec35e_BreakSt>);
inline jule::Ptr<_1ab165d56_BreakSt> _1ab17a5da_checkPlainBreak(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0ec35e_BreakSt>);
inline void _1ab17a893_checkBreak(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0ec35e_BreakSt>);
inline void _1ab17ab4b_checkRet(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0ea5b0_RetSt>);
inline void _1ab17ae04_checkUseExpr(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0dc151_UseExpr>);
inline void _1ab17b1ac_checkNode(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Any*);
inline void _1ab17b3aa_checkResult(jule::Ptr<_1ab16aab4_scopeChecker>);
inline void _1ab17b5a8_checkTree(jule::Ptr<_1ab16aab4_scopeChecker>);
inline void _1ab17b91b_checkGoto(_1ab16aab4_scopeChecker*, jule::Ptr<_1ab169ba1_scopeGoto>*, jule::Ptr<_1ab16961d_scopeLabel>*);
inline void _1ab17bb19_checkGotos(_1ab16aab4_scopeChecker*);
inline void _1ab17bd17_checkLabels(_1ab16aab4_scopeChecker*);
inline void _1ab17c015_checkVars(_1ab16aab4_scopeChecker*);
inline void _1ab17c213_checkAliases(_1ab16aab4_scopeChecker*);
inline void _1ab17c576_check(jule::Ptr<_1ab16aab4_scopeChecker>, jule::Ptr<_1ab0e7469_ScopeTree>*, jule::Ptr<_1ab1637b0_Scope>*);
inline jule::Ptr<_1ab16aab4_scopeChecker> _1ab17c80c_newChildChecker(jule::Ptr<_1ab16aab4_scopeChecker>);
inline void _1ab17db71_checkCdef(_1ab17d764_directiveChecker*, jule::Ptr<_1ab0d6865_Directive>*);
inline void _1ab17de29_checkTypedef(_1ab17d764_directiveChecker*, jule::Ptr<_1ab0d6865_Directive>*);
inline void _1ab17e1d2_checkNamespace(_1ab17d764_directiveChecker*, jule::Ptr<_1ab0d6865_Directive>*);
inline void _1ab17e48a_checkDeprecated(_1ab17d764_directiveChecker*, jule::Ptr<_1ab0d6865_Directive>*);
inline void _1ab17e743_checkTest(_1ab17d764_directiveChecker*, jule::Ptr<_1ab0d6865_Directive>*);
inline void _1ab17e9eb_checkDirective(_1ab17d764_directiveChecker*, jule::Ptr<_1ab0d6865_Directive>*);
inline void _1ab17ebe9_check(_1ab17d764_directiveChecker*);
inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab1851c7_SelectPackage(_1ab184bdd_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)>);
inline jule::Ptr<_1ab1c7a66_Var> _1ab1855c3_FindVar(_1ab184bdd_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab1859be_FindTypeAlias(_1ab184bdd_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab10803a_Struct> _1ab185dba_FindStruct(_1ab184bdd_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab11cdeb_Fn> _1ab1862b6_FindFn(_1ab184bdd_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab131195_Trait> _1ab186607_FindTrait(_1ab184bdd_ImportInfo*, jule::Str);
inline jule::Ptr<_1ab133890_Enum> _1ab186948_FindEnum(_1ab184bdd_ImportInfo*, jule::Str);
inline jule::Ptr<_1ab13509a_TypeEnum> _1ab186c89_FindTypeEnum(_1ab184bdd_ImportInfo*, jule::Str);
inline jule::Bool _1ab18722e_isLookupable(_1ab184bdd_ImportInfo*, jule::Str*);
inline jule::Bool _1ab187570_existIdent(_1ab184bdd_ImportInfo*, jule::Str);
inline jule::Bool _1ab187806_isAccessibleViaSelection(_1ab184bdd_ImportInfo*);
inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab1880a9_SelectPackage(_1ab187b14_Package*, jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)>);
inline jule::Ptr<_1ab1c7a66_Var> _1ab1884a5_FindVar(_1ab187b14_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab1888a1_FindTypeAlias(_1ab187b14_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab10803a_Struct> _1ab188c9c_FindStruct(_1ab187b14_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab11cdeb_Fn> _1ab189198_FindFn(_1ab187b14_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab131195_Trait> _1ab1894d9_FindTrait(_1ab187b14_Package*, jule::Str);
inline jule::Ptr<_1ab133890_Enum> _1ab18982a_FindEnum(_1ab187b14_Package*, jule::Str);
inline jule::Ptr<_1ab13509a_TypeEnum> _1ab189b6b_FindTypeEnum(_1ab187b14_Package*, jule::Str);
inline jule::Ptr<_1ab14bc71_comptimeTypeInfo> _1ab1a4eb6_pushComptimeTypeInfo(_1ab1a4a54_commonSemaMeta*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab1a5b21_SelectPackage(_1ab1a567b_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)>);
inline jule::Ptr<_1ab1c7a66_Var> _1ab1a601c_FindVar(_1ab1a567b_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab1a6418_FindTypeAlias(_1ab1a567b_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab10803a_Struct> _1ab1a6814_FindStruct(_1ab1a567b_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab11cdeb_Fn> _1ab1a6c10_FindFn(_1ab1a567b_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab131195_Trait> _1ab1a7051_FindTrait(_1ab1a567b_Sema*, jule::Str);
inline jule::Ptr<_1ab133890_Enum> _1ab1a7392_FindEnum(_1ab1a567b_Sema*, jule::Str);
inline jule::Ptr<_1ab13509a_TypeEnum> _1ab1a76d3_FindTypeEnum(_1ab1a567b_Sema*, jule::Str);
inline jule::Bool _1ab1a7ae0_isFlag(_1ab1a567b_Sema*, jule::I64);
inline void _1ab1a7d98_setCurrentFile(_1ab1a567b_Sema*, jule::Ptr<_1ab224d9e_SymbolTable>);
inline void _1ab1a82b6_pushErr(_1ab1a567b_Sema*, jule::Ptr<_1ab0c1e7c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ab1a8629_pushSuggestion(_1ab1a567b_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ab1a8a25_isAccessibleDefine(_1ab1a567b_Sema*, jule::Bool, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Bool _1ab1a8ecb_isDuplicatedIdent(_1ab1a567b_Sema*, jule::Uintptr, jule::Str*, jule::Bool);
inline void _1ab1a933e_checkDirectives(jule::Ptr<_1ab1a567b_Sema>, jule::Slice<jule::Ptr<_1ab0d6865_Directive>>*, jule::Any);
inline jule::Bool _1ab1a97e5_checkGenericQuantity(_1ab1a567b_Sema*, jule::I64, jule::I64, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Bool _1ab1a9be1_isDuplicatedImportSelection(_1ab1a567b_Sema*, jule::Uintptr, jule::Str*);
inline jule::Any _1ab1aa0dc_getImportDef(_1ab1a567b_Sema*, jule::Str*, jule::Ptr<_1ab184bdd_ImportInfo>*);
inline jule::Bool _1bc0d9923_checkImportSelection(_1ab1a567b_Sema*, jule::Ptr<_1ab0c1e7c_Token>*, jule::Ptr<_1ab1c7a66_Var>*);
inline jule::Bool _1bc0dd8e4_checkImportSelection(_1ab1a567b_Sema*, jule::Ptr<_1ab0c1e7c_Token>*, jule::Ptr<_1ab259c2a_TypeAlias>*);
inline jule::Bool _1bc0e2871_checkImportSelection(_1ab1a567b_Sema*, jule::Ptr<_1ab0c1e7c_Token>*, jule::Ptr<_1ab10803a_Struct>*);
inline jule::Bool _1bc0e6985_checkImportSelection(_1ab1a567b_Sema*, jule::Ptr<_1ab0c1e7c_Token>*, jule::Ptr<_1ab131195_Trait>*);
inline jule::Bool _1bc0ea912_checkImportSelection(_1ab1a567b_Sema*, jule::Ptr<_1ab0c1e7c_Token>*, jule::Ptr<_1ab133890_Enum>*);
inline jule::Bool _1bc0ee88e_checkImportSelection(_1ab1a567b_Sema*, jule::Ptr<_1ab0c1e7c_Token>*, jule::Ptr<_1ab13509a_TypeEnum>*);
inline jule::Bool _1bc10381b_checkImportSelection(_1ab1a567b_Sema*, jule::Ptr<_1ab0c1e7c_Token>*, jule::Ptr<_1ab11cdeb_Fn>*);
inline jule::Bool _1ab1aa829_checkImportSelectedSelections(_1ab1a567b_Sema*, jule::Ptr<_1ab184bdd_ImportInfo>*);
inline jule::Bool _1bc107ee6_checkImportsAllSelectionsFromCollection(_1ab1a567b_Sema*, jule::Slice<jule::Ptr<_1ab1c7a66_Var>>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Bool _1bc10913a_checkImportsAllSelectionsFromCollection(_1ab1a567b_Sema*, jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Bool _1bc10b769_checkImportsAllSelectionsFromCollection(_1ab1a567b_Sema*, jule::Slice<jule::Ptr<_1ab10803a_Struct>>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Bool _1bc10dd43_checkImportsAllSelectionsFromCollection(_1ab1a567b_Sema*, jule::Slice<jule::Ptr<_1ab11cdeb_Fn>>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Bool _1bc1113b7_checkImportsAllSelectionsFromCollection(_1ab1a567b_Sema*, jule::Slice<jule::Ptr<_1ab131195_Trait>>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Bool _1bc113a18_checkImportsAllSelectionsFromCollection(_1ab1a567b_Sema*, jule::Slice<jule::Ptr<_1ab133890_Enum>>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Bool _1bc11609d_checkImportsAllSelectionsFromCollection(_1ab1a567b_Sema*, jule::Slice<jule::Ptr<_1ab13509a_TypeEnum>>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Bool _1ab1ab066_checkImportAllSelections(_1ab1a567b_Sema*, jule::Ptr<_1ab184bdd_ImportInfo>*);
inline jule::Bool _1ab1ab3a7_checkImportSelections(_1ab1a567b_Sema*, jule::Ptr<_1ab184bdd_ImportInfo>*);
inline jule::Bool _1ab1ab6e8_isUseAliasDuplication(_1ab1a567b_Sema*, jule::Ptr<_1ab184bdd_ImportInfo>*);
inline jule::Bool _1ab1aba39_checkImport(_1ab1a567b_Sema*, jule::Ptr<_1ab184bdd_ImportInfo>*);
inline void _1ab1abc37_checkImports(_1ab1a567b_Sema*);
inline void _1ab1abe35_implFileImpls(jule::Ptr<_1ab1a567b_Sema>);
inline void _1ab1ac133_implImpls(jule::Ptr<_1ab1a567b_Sema>);
inline void _1ab1ac331_checkEnums(jule::Ptr<_1ab1a567b_Sema>);
inline void _1ab1ac52e_checkFileInherits(jule::Ptr<_1ab1a567b_Sema>);
inline void _1ab1ac72c_checkInherits(jule::Ptr<_1ab1a567b_Sema>);
inline _1ab26c8ca_typeChecker _1ab1acbd3_typeChecker(jule::Ptr<_1ab1a567b_Sema>, jule::Trait<_1ab27a553_Lookup>, jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>>, jule::Ptr<_1ab26b8da_referencer>);
inline jule::Ptr<_1ab25aa1c_TypeKind> _1ab1ad244_buildTypeWithRefers(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab0d7448_TypeDecl>*, jule::Trait<_1ab27a553_Lookup>, jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>>, jule::Ptr<_1ab26b8da_referencer>);
inline jule::Bool _1ab1ad7a5_checkTypeWithRefers(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab262bde_TypeSymbol>*, jule::Trait<_1ab27a553_Lookup>, jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>>, jule::Ptr<_1ab26b8da_referencer>);
inline jule::Ptr<_1ab15b346_constraintChecker> _1ab1ada3b_constraintChecker(jule::Ptr<_1ab1a567b_Sema>);
inline jule::Bool _1ab1ade37_checkType(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab262bde_TypeSymbol>*, jule::Trait<_1ab27a553_Lookup>);
inline jule::Ptr<_1ab25aa1c_TypeKind> _1ab1ae3dd_buildTypeWithGenerics(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab0d7448_TypeDecl>*, jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>>, jule::Ptr<_1ab123eac_ReferenceStack>);
inline jule::Ptr<_1ab25aa1c_TypeKind> _1ab1aea70_selectType(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab0d7448_TypeDecl>*);
inline jule::Ptr<_1ab22be1c_Eval> _1ab1b0026_evalpd(jule::Ptr<_1ab1a567b_Sema>, jule::Trait<_1ab27a553_Lookup>, jule::Ptr<_1ab25aa1c_TypeKind>, jule::Ptr<_1ab1c7a66_Var>);
inline jule::Ptr<_1ab22be1c_Eval> _1ab1b0422_evalp(jule::Ptr<_1ab1a567b_Sema>, jule::Trait<_1ab27a553_Lookup>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Ptr<_1ab22be1c_Eval> _1ab1b0763_eval(jule::Ptr<_1ab1a567b_Sema>, jule::Trait<_1ab27a553_Lookup>);
inline jule::Bool _1ab1b0cc4_checkAssignType(jule::Ptr<_1ab1a567b_Sema>, jule::Bool, jule::Ptr<_1ab25aa1c_TypeKind>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Bool _1ab1b127a_checkTypeCompatibility(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab25aa1c_TypeKind>*, jule::Ptr<_1ab25aa1c_TypeKind>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Ptr<_1ab25aa1c_TypeKind> _1ab1b1731_buildNonGenericTypeKind(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab0d7448_TypeDecl>*, jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>>*, jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>>*);
inline jule::Bool _1ab1b1b2c_buildFnNonGenericTypeKinds(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab120d00_FnIns>*, jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>>*);
inline jule::Ptr<_1ab120d00_FnIns> _1ab1b1e6d_getTraitCheckFnKind(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab11cdeb_Fn>*);
inline jule::Bool _1ab1b2424_checkConstraintsFn(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab120d00_FnIns>*, jule::Ptr<_1ab0c1e7c_Token>*, jule::Ptr<_1ab120d00_FnIns>);
inline jule::Bool _1ab1b28ca_checkConstraintsStruct(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab10acb8_StructIns>*, jule::Ptr<_1ab0c1e7c_Token>*, jule::Ptr<_1ab10acb8_StructIns>);
inline jule::Bool _1ab1b2cc6_fnEnvironment(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab120d00_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1ab1a567b_Sema>*,jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>>*)>);
inline void _1ab1b307e_checkFnParamKind(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab11ed54_ParamIns>*);
inline jule::Bool _1ab1b33c0_reloadFnInsTypes(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab120d00_FnIns>);
inline jule::Bool _1ab1b3876_checkRefValidityForInitExpr(jule::Ptr<_1ab1a567b_Sema>, jule::Bool, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Bool _1ab1b3bb7_isMutRiskyStruct(_1ab1a567b_Sema*, jule::Ptr<_1ab10acb8_StructIns>*);
inline jule::Bool _1ab1b42d3_checkValidityForInitExpr(jule::Ptr<_1ab1a567b_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1ab25aa1c_TypeKind>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Bool _1ab1b46ce_checkTypeAliasDeclKind(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab259c2a_TypeAlias>*, jule::Trait<_1ab27a553_Lookup>);
inline void _1ab1b4a42_checkTypeAliasDecl(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab259c2a_TypeAlias>*, jule::Trait<_1ab27a553_Lookup>);
inline void _1ab1b4cea_checkTypeAliasDeclDup(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab259c2a_TypeAlias>*);
inline jule::Bool _1ab1b5081_checkTypeAliasDecls(jule::Ptr<_1ab1a567b_Sema>);
inline void _1bc1b336a_checkEnumItemsDup(_1ab1a567b_Sema*, jule::Slice<jule::Ptr<_1ab132d23_EnumItem>>);
inline void _1bc1c01ac_checkEnumItemsDup(_1ab1a567b_Sema*, jule::Slice<jule::Ptr<_1ab1349c3_TypeEnumItem>>);
inline void _1ab1b55e2_checkEnumItemsStr(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab133890_Enum>*);
inline void _1bc194637_checkEnumItemInt(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab133890_Enum>*, jule::Ptr<_1ab2635e6_Prim>*, jule::Ptr<_1ab132d23_EnumItem>*, jule::U64*);
inline void _1bc1a402b_checkEnumItemInt(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab133890_Enum>*, jule::Ptr<_1ab2635e6_Prim>*, jule::Ptr<_1ab132d23_EnumItem>*, jule::I64*);
inline void _1bc190e08_checkEnumItemsInt1(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab2635e6_Prim>*, jule::Ptr<_1ab133890_Enum>*);
inline void _1bc1a10b1_checkEnumItemsInt1(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab2635e6_Prim>*, jule::Ptr<_1ab133890_Enum>*);
inline void _1ab1b6291_checkEnumItemsInt(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab133890_Enum>*);
inline void _1ab1b6549_checkEnumDecl(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab133890_Enum>*);
inline void _1ab1b6802_checkTypeEnumDecl(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab13509a_TypeEnum>*);
inline jule::Bool _1ab1b6a88_checkEnumDecls(jule::Ptr<_1ab1a567b_Sema>);
inline jule::Bool _1ab1b6d1e_checkTypeEnumDecls(jule::Ptr<_1ab1a567b_Sema>);
inline jule::Bool _1ab1b7160_checkDeclGenerics(_1ab1a567b_Sema*, jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>>*);
inline jule::Bool _1ab1b74a1_checkFnDeclParamsDup(_1ab1a567b_Sema*, jule::Ptr<_1ab11cdeb_Fn>*);
inline jule::Bool _1ab1b77e2_checkFnDeclResultDup(_1ab1a567b_Sema*, jule::Ptr<_1ab11cdeb_Fn>*);
inline jule::Bool _1ab1b7b33_checkFnVariadicParam(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab11cdeb_Fn>*);
inline void _1ab1b7ddb_checkFnDeclPrototype(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab11cdeb_Fn>*);
inline jule::Bool _1ab1b8392_catchTraitInheritCycle(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab131195_Trait>, jule::Ptr<_1ab131195_Trait>, _1d7ad2eb1_StrBuilder*);
inline jule::Bool _1ab1b86d3__checkTraitDeclInherits(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab131195_Trait>*);
inline void _1ab1b898b_checkTraitDeclInherits(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab131195_Trait>*);
inline void _1ab1b8c44_checkTraitDeclMethod(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab11cdeb_Fn>*);
inline void _1ab1b8eec_checkTraitDeclMethods(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab131195_Trait>*);
inline void _1ab1b92a5_checkTraitDecl(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab131195_Trait>*);
inline jule::Bool _1ab1b953b_checkTraitDecls(jule::Ptr<_1ab1a567b_Sema>);
inline jule::Bool _1ab1b9937_checkTraitImplMethods(_1ab1a567b_Sema*, jule::Ptr<_1ab131195_Trait>*, jule::Ptr<_1ab15d37b_Impl>*);
inline jule::Bool _1ab1b9d33_implToStruct(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab10803a_Struct>*, jule::Ptr<_1ab15d37b_Impl>*);
inline void _1ab1ba0db_implTrait(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab15d37b_Impl>*);
inline void _1ab1ba394_implStruct(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab15d37b_Impl>*);
inline void _1ab1ba64c_implImpl(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab15d37b_Impl>*);
inline void _1ab1ba9b0_checkVarDecl(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab1c7a66_Var>*, jule::Trait<_1ab27a553_Lookup>);
inline void _1ab1bac68_checkGlobalVarDecl(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab1c7a66_Var>*);
inline jule::Bool _1ab1baeee_checkGlobalDecls(jule::Ptr<_1ab1a567b_Sema>);
inline jule::Bool _1ab1bb3ea_checkStructTraitImpl(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab10803a_Struct>*, jule::Ptr<_1ab131195_Trait>*);
inline jule::Bool _1ab1bb73b_checkStructImpls(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab10803a_Struct>*);
inline jule::Bool _1ab1bba7c_checkStructFields(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab10803a_Struct>*);
inline void _1ab1bbd35_checkStructDecl(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab10803a_Struct>*);
inline jule::Bool _1ab1bc0bb_checkStructDecls(jule::Ptr<_1ab1a567b_Sema>);
inline void _1ab1bc374_checkAnonFuncDecl(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab11cdeb_Fn>*);
inline void _1ab1bc62c_checkFuncDecl(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab11cdeb_Fn>*);
inline jule::Bool _1ab1bc96d_checkFuncDeclsBy(jule::Ptr<_1ab1a567b_Sema>, jule::Slice<jule::Ptr<_1ab11cdeb_Fn>>*);
inline jule::Bool _1ab1bcc04_checkFuncDecls(jule::Ptr<_1ab1a567b_Sema>);
inline void _1ab1bd122_pushCycleError(_1ab1a567b_Sema*, jule::Str*, jule::Str*, _1d7ad2eb1_StrBuilder*);
inline void _1ab1bd7c6_checkPackageDecls(jule::Ptr<_1ab1a567b_Sema>);
inline void _1ab1bdb39_checkDataForTypeInference(_1ab1a567b_Sema*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline void _1ab1bdde2_checkVarValue(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab1c7a66_Var>*);
inline void _1ab1be255_evalVarValue(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab1c7a66_Var>*, jule::Trait<_1ab27a553_Lookup>);
inline void _1ab1be5b8_checkVar(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab1c7a66_Var>*, jule::Trait<_1ab27a553_Lookup>);
inline void _1ab1be7b6_checkGlobals(jule::Ptr<_1ab1a567b_Sema>);
inline jule::Ptr<_1ab120d00_FnIns> _1ab1bebb2_readyToCheckFn(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab10acb8_StructIns>*, jule::Ptr<_1ab11cdeb_Fn>*);
inline void _1ab1c0025_checkTypeMethod(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab10acb8_StructIns>*, jule::Ptr<_1ab11cdeb_Fn>*);
inline jule::Ptr<_1ab120d00_FnIns> _1ab1c04cb_checkStructInsOp(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab10acb8_StructIns>*, jule::Ptr<_1ab11cdeb_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1ab11cdeb_Fn>)>);
inline jule::Bool _1ab1c08c7_checkStructEnv(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab10acb8_StructIns>*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Bool _1ab1c0cc3_precheckStructIns(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab10acb8_StructIns>*, jule::Ptr<_1ab0c1e7c_Token>);
inline void _1ab1c107b_checkStructIns(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab10acb8_StructIns>*);
inline void _1ab1c1334_checkTypeStruct(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab10803a_Struct>*);
inline void _1ab1c1532_checkStructTypes(jule::Ptr<_1ab1a567b_Sema>);
inline void _1ab1c17da_checkStructInsOperators(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab10acb8_StructIns>);
inline void _1ab1c1a93_precheckStructType(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab10803a_Struct>*);
inline void _1ab1c1c91_precheckStructTypes(jule::Ptr<_1ab1a567b_Sema>);
inline void _1ab1c2049_checkRets(_1ab1a567b_Sema*, jule::Ptr<_1ab120d00_FnIns>*);
inline void _1ab1c23ac_checkFnInsSc(_1ab1a567b_Sema*, jule::Ptr<_1ab120d00_FnIns>*, jule::Ptr<_1ab16aab4_scopeChecker>*);
inline void _1ab1c2720_checkFnInsCaller(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab120d00_FnIns>*, jule::Ptr<_1ab0c1e7c_Token>);
inline void _1ab1c29c8_checkFnIns(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab120d00_FnIns>*);
inline void _1ab1c2c81_checkFunc(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab11cdeb_Fn>*);
inline void _1ab1c3039_checkTestFn(_1ab1a567b_Sema*, jule::Ptr<_1ab120d00_FnIns>*);
inline void _1ab1c32e2_precheckFunc(jule::Ptr<_1ab1a567b_Sema>, jule::Ptr<_1ab11cdeb_Fn>*);
inline void _1ab1c34e0_precheckFuncs(jule::Ptr<_1ab1a567b_Sema>);
inline void _1ab1c36dd_checkFuncs(jule::Ptr<_1ab1a567b_Sema>);
inline void _1ab1c38db_checkPackageTypes(jule::Ptr<_1ab1a567b_Sema>);
inline void _1ab1c3ad9_setFileSemaFields(jule::Ptr<_1ab1a567b_Sema>);
inline void _1ab1c3cd7_setSemaFields(jule::Ptr<_1ab1a567b_Sema>);
inline void _1ab1c4090_check(jule::Ptr<_1ab1a567b_Sema>, jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>*);
inline _1ab1c44be_missingRetChecker static__1ab1c4887_new(void);
inline jule::Bool _1ab1c4b95_checkConditional(_1ab1c44be_missingRetChecker*, jule::Ptr<_1ab1643e8_Conditional>);
inline jule::Bool _1ab1c4ed6_checkMatch(_1ab1c44be_missingRetChecker*, jule::Ptr<_1ab1678e6_Match>);
inline jule::Bool _1ab1c5327_checkInfIter(_1ab1c44be_missingRetChecker*, jule::Ptr<_1ab1646e5_InfIter>);
inline jule::Bool _1ab1c5668_checkScope(_1ab1c44be_missingRetChecker*, jule::Ptr<_1ab1637b0_Scope>);
inline jule::Bool _1ab1c59a9_check(_1ab1c44be_missingRetChecker*, jule::Ptr<_1ab1637b0_Scope>);
inline jule::Bool _1ab1c7deb_IsInitialized(_1ab1c7a66_Var*);
inline jule::Bool _1ab1c8182_IsTypeInferred(_1ab1c7a66_Var*);
inline jule::Bool _1ab1c8418_untypedConstant(_1ab1c7a66_Var*);
inline jule::Bool static__1ab1c8eb8_Dispose(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1c9282_Str(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1c9606_logical(jule::Ptr<_1ab11cdeb_Fn>*, jule::Str);
inline jule::Bool static__1ab1c98c0_Eq(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1c9b89_Gt(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1c9e53_GtEq(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1ca21c_Lt(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1ca4d6_LtEq(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1ca85a_result(jule::Ptr<_1ab11cdeb_Fn>*, jule::Str);
inline jule::Bool static__1ab1cab24_Shl(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1caddd_Shr(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1cb1a7_Add(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1cb471_Sub(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1cb73a_Div(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1cba04_Mul(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1cbcbd_Mod(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1cc087_BitAnd(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1cc351_BitOr(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1cc61a_BitXor(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1cc98e_unary(jule::Ptr<_1ab11cdeb_Fn>*, jule::Str);
inline jule::Bool static__1ab1ccc58_Neg(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1cd022_Pos(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1cd2db_BitNot(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1cd660_assign(jule::Ptr<_1ab11cdeb_Fn>*, jule::Str);
inline jule::Bool static__1ab1cd929_AddAssign(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1cdbe3_SubAssign(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1cdeac_DivAssign(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1ce276_MulAssign(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1ce540_ModAssign(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1ce809_ShlAssign(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1ceac3_ShrAssign(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1ced8c_BitOrAssign(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1d0156_BitAndAssign(jule::Ptr<_1ab11cdeb_Fn>);
inline jule::Bool static__1ab1d0420_BitXorAssign(jule::Ptr<_1ab11cdeb_Fn>);
inline void _1ab2123db_pushErr(_1ab211de1_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ab212672_checkTrait(_1ab211de1_typeCompatibilityChecker*);
inline jule::Bool _1ab212908_checkPtr(_1ab211de1_typeCompatibilityChecker*);
inline jule::Bool _1ab212b8e_checkPrim(_1ab211de1_typeCompatibilityChecker*);
inline jule::Bool _1ab21308a_typeEnum(_1ab211de1_typeCompatibilityChecker*, jule::Ptr<_1ab13509a_TypeEnum>*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab213321_checkTypeEnum(_1ab211de1_typeCompatibilityChecker*);
inline jule::Bool _1ab2135a7_check(_1ab211de1_typeCompatibilityChecker*);
inline void _1ab214135_pushErr(_1ab213b90_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ab2143bb_checkValidity(_1ab213b90_assignTypeChecker*);
inline jule::Bool _1ab214652_checkConst(_1ab213b90_assignTypeChecker*);
inline jule::Bool _1ab2148d8_isPrim(_1ab213b90_assignTypeChecker*);
inline jule::Bool _1ab214b6e_checkCompatibility(_1ab213b90_assignTypeChecker*);
inline jule::Bool _1ab214e05_check(_1ab213b90_assignTypeChecker*);
inline jule::Bool _1bc3900b3_annotateConstraintElem(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1bc38e920_annotateConstraintElem(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1bc391adc_annotateConstraintElem(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1bc398220_annotateConstraintElem(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab216203_annotateConstraintMap(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab216544_annotateConstraintTup(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab216885_annotateConstraintFn(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab216bc6_annotateConstraintIdent(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab217017_annotateConstraint(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline void _1ab21737a_pushGeneric(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*, jule::I64);
inline jule::Bool _1ab2176bb_annotatePrim(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab217a0c_annotateArr(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab217d4d_annotateSlc(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab218249_checkMapKey(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab21858a_annotateMap(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab2188cb_annotateFn(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab218c1c_annotatePtr(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab21905d_annotateSptr(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab21939e_annotateStruct(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab2196e0_annotateAny(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab219a31_annotateKind(_1ab21580c_dynamicTypeAnnotation*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab219cb7_annotate(_1ab21580c_dynamicTypeAnnotation*);
inline void _1ab21ac0d_pushErrToken(_1ab21a669_fnCallArgChecker*, jule::Ptr<_1ab0c1e7c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ab21b071_pushErr(_1ab21a669_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1ab11ed54_ParamIns>> _1ab21b307_getParams(_1ab21a669_fnCallArgChecker*);
inline jule::Bool _1ab21b615_checkCounts(_1ab21a669_fnCallArgChecker*, jule::Slice<jule::Ptr<_1ab11ed54_ParamIns>>*);
inline jule::Bool _1ab21babb_checkArg(_1ab21a669_fnCallArgChecker*, jule::Ptr<_1ab11ed54_ParamIns>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Bool _1ab21beb7_push(_1ab21a669_fnCallArgChecker*, jule::Ptr<_1ab11ed54_ParamIns>*, jule::Ptr<_1ab0db77c_Expr>);
inline jule::Bool _1ab21c3b3_pushVariadic(_1ab21a669_fnCallArgChecker*, jule::Ptr<_1ab11ed54_ParamIns>*, jule::I64);
inline jule::Bool _1ab21c704_checkArgs(_1ab21a669_fnCallArgChecker*, jule::Slice<jule::Ptr<_1ab11ed54_ParamIns>>*);
inline jule::Bool _1ab21c98a_checkDynamicTypeAnnotation(_1ab21a669_fnCallArgChecker*);
inline jule::Bool _1ab21cc21_check(_1ab21a669_fnCallArgChecker*);
inline void _1ab21db01_pushErr(_1ab21d5a1_structLitChecker*, jule::Ptr<_1ab0c1e7c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ab21de64_pushSuggestion(_1ab21d5a1_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1ab21e382_pushMatch(_1ab21d5a1_structLitChecker*, jule::Ptr<_1ab10a218_FieldIns>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline void _1ab21e6e5_checkPair(_1ab21d5a1_structLitChecker*, jule::Ptr<_1ab0e0e9b_FieldExprPair>*, jule::Slice<jule::Ptr<_1ab0db77c_Expr>>*);
inline jule::Bool _1ab21ea36_readyExprs(_1ab21d5a1_structLitChecker*, jule::Slice<jule::Ptr<_1ab0db77c_Expr>>*);
inline void _1ab21ecde_check(_1ab21d5a1_structLitChecker*, jule::Slice<jule::Ptr<_1ab0db77c_Expr>>*);
inline jule::Ptr<_1ab1c7a66_Var> _1ab22086c_buildVar(_1ab220383_rangeChecker*, jule::Ptr<_1ab0ea1d6_VarDecl>*);
inline void _1ab220a6a_setSizeKey(_1ab220383_rangeChecker*);
inline void _1ab220e88_checkRangeExprValidity(_1ab220383_rangeChecker*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab1c7a66_Var>*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline void _1ab221186_checkSlice(_1ab220383_rangeChecker*);
inline void _1ab221384_checkArray(_1ab220383_rangeChecker*);
inline void _1ab221582_checkMapKeyA(_1ab220383_rangeChecker*);
inline void _1ab221780_checkMapKeyB(_1ab220383_rangeChecker*);
inline void _1ab22197d_checkMap(_1ab220383_rangeChecker*);
inline void _1ab221b7b_checkStr(_1ab220383_rangeChecker*);
inline void _1ab221d79_checkComptime(_1ab220383_rangeChecker*);
inline jule::Bool _1ab222110_checkComptimeRange(_1ab220383_rangeChecker*);
inline jule::Bool _1ab222396_check(_1ab220383_rangeChecker*);
inline void _1ab223012_prepareTypes(_1ab222ae4_retTypeChecker*);
inline void _1ab2232ba_prepareExprs(_1ab222ae4_retTypeChecker*, jule::Ptr<_1ab0db77c_Expr>*);
inline void _1ab2234b8_checkExprs(_1ab222ae4_retTypeChecker*);
inline jule::Bool _1ab223809_check(_1ab222ae4_retTypeChecker*, jule::Ptr<_1ab0db77c_Expr>*);
inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab225388_SelectPackage(_1ab224d9e_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)>);
inline jule::Ptr<_1ab1c7a66_Var> _1ab225784_FindVar(_1ab224d9e_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab225b80_FindTypeAlias(_1ab224d9e_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab10803a_Struct> _1ab22607b_FindStruct(_1ab224d9e_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab11cdeb_Fn> _1ab226477_FindFn(_1ab224d9e_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab131195_Trait> _1ab2267b8_FindTrait(_1ab224d9e_SymbolTable*, jule::Str);
inline jule::Ptr<_1ab133890_Enum> _1ab226b09_FindEnum(_1ab224d9e_SymbolTable*, jule::Str);
inline jule::Ptr<_1ab13509a_TypeEnum> _1ab226e4a_FindTypeEnum(_1ab224d9e_SymbolTable*, jule::Str);
inline jule::Ptr<_1ab1c7a66_Var> _1ab227566_findVar(_1ab224d9e_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab227a1c_findTypeAlias(_1ab224d9e_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Any _1ab227e18_defByIdent(_1ab224d9e_SymbolTable*, jule::Str*, jule::Bool);
inline jule::Bool _1ab2283be_isDuplicatedIdent(_1ab224d9e_SymbolTable*, jule::Uintptr, jule::Str*, jule::Bool);
inline jule::Bool _1ab22a5d0_IsNil(_1ab22a228_Data*);
inline jule::Bool _1ab22a866_IsVoid(_1ab22a228_Data*);
inline jule::Bool _1ab22aaec_IsConst(_1ab22a228_Data*);
inline jule::Bool _1ab22ae3d_GoodOperand(_1ab22a228_Data*, jule::Ptr<_1ab22a228_Data>*);
inline void _1ab22c46c_pushErr(_1ab22be1c_Eval*, jule::Ptr<_1ab0c1e7c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ab22c7d0_pushSuggestion(_1ab22be1c_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1ab22c9cd_allowBuiltin(_1ab22be1c_Eval*);
inline void _1ab22cbcb_disallowBuiltin(_1ab22be1c_Eval*);
inline jule::Bool _1ab22ce62_isUnsafe(_1ab22be1c_Eval*);
inline jule::Bool _1ab22d1e8_isGlobal(_1ab22be1c_Eval*);
inline jule::Bool _1ab22d506_applyNumericPrefix(_1ab22be1c_Eval*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab22d847_litStr(_1ab22be1c_Eval*, jule::Ptr<_1ab0dc827_LitExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab22db88_litRune(_1ab22be1c_Eval*, jule::Ptr<_1ab0dc827_LitExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab22dec9_litFloat(_1ab22be1c_Eval*, jule::Ptr<_1ab0dc827_LitExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab22e31a_litInt(_1ab22be1c_Eval*, jule::Ptr<_1ab0dc827_LitExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab22e65b_litNum(_1ab22be1c_Eval*, jule::Ptr<_1ab0dc827_LitExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab22e99c_evalLit(_1ab22be1c_Eval*, jule::Ptr<_1ab0dc827_LitExpr>);
inline jule::Any _1ab22ecdd_findBuiltins(_1ab22be1c_Eval*, jule::Str*);
inline jule::Any _1ab2301d9_getDef(_1ab22be1c_Eval*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ab123eac_ReferenceStack> _1ab230470_getOwnerRefers(_1ab22be1c_Eval*);
inline void _1bc500d6c_pushReference(_1ab22be1c_Eval*, jule::Ptr<_1ab120d00_FnIns>*);
inline void _1bc514d2b_pushReference(_1ab22be1c_Eval*, jule::Ptr<_1ab1c7a66_Var>*);
inline void _1bc5c28bc_pushReference(_1ab22be1c_Eval*, jule::Ptr<_1ab10acb8_StructIns>*);
inline jule::Ptr<_1ab22a228_Data> _1ab230a69__evalEnum(_1ab22be1c_Eval*, jule::Ptr<_1ab133890_Enum>);
inline jule::Ptr<_1ab22a228_Data> _1ab230e65_evalEnum(_1ab22be1c_Eval*, jule::Ptr<_1ab133890_Enum>, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab2312a6__evalTypeEnum(_1ab22be1c_Eval*, jule::Ptr<_1ab13509a_TypeEnum>);
inline jule::Ptr<_1ab22a228_Data> _1ab2316a2_evalTypeEnum(_1ab22be1c_Eval*, jule::Ptr<_1ab13509a_TypeEnum>, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab2319e3__evalStruct(_1ab22be1c_Eval*, jule::Ptr<_1ab10acb8_StructIns>);
inline jule::Ptr<_1ab22a228_Data> _1ab231dde_evalStruct(_1ab22be1c_Eval*, jule::Ptr<_1ab10acb8_StructIns>, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab232230_evalFnIns(_1ab22be1c_Eval*, jule::Ptr<_1ab120d00_FnIns>);
inline void _1ab232593_checkDeprecated(_1ab22be1c_Eval*, jule::Slice<jule::Ptr<_1ab0d6865_Directive>>*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab23298e_evalFn(_1ab22be1c_Eval*, jule::Ptr<_1ab11cdeb_Fn>, jule::Ptr<_1ab0c1e7c_Token>);
inline void _1ab232dac_pushIllegalCycleError(_1ab22be1c_Eval*, jule::Ptr<_1ab1c7a66_Var>*, jule::Ptr<_1ab1c7a66_Var>*, _1d7ad2eb1_StrBuilder*);
inline jule::Bool _1ab2332a8_checkCrossCycle(_1ab22be1c_Eval*, jule::Ptr<_1ab1c7a66_Var>*, _1d7ad2eb1_StrBuilder*);
inline jule::Bool _1ab2336a4_checkIllegalCycles(_1ab22be1c_Eval*, jule::Ptr<_1ab1c7a66_Var>*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab233aa0_evalVar(_1ab22be1c_Eval*, jule::Ptr<_1ab1c7a66_Var>, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab233e9b_evalTypeAlias(_1ab22be1c_Eval*, jule::Ptr<_1ab259c2a_TypeAlias>, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab234397_evalDef(_1ab22be1c_Eval*, jule::Any*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab2346d8_evalIdent(_1ab22be1c_Eval*, jule::Ptr<_1ab0dd1a7_IdentExpr>);
inline jule::Ptr<_1ab22a228_Data> _1ab234a29_evalUnary(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0dd839_UnaryExpr>);
inline jule::Ptr<_1ab22a228_Data> _1ab234d6a_evalVariadic(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0ddc13_VariadicExpr>);
inline jule::Ptr<_1ab22a228_Data> _1ab2351ab_evalUnsafe(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0dcc01_UnsafeExpr>);
inline jule::Ptr<_1ab22a228_Data> _1ab2354ec_evalArr(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0e2ca0_SliceExpr>);
inline jule::Ptr<_1ab22a228_Data> _1ab2359a3_evalExpSlc(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0e2ca0_SliceExpr>, jule::Ptr<_1ab25aa1c_TypeKind>, jule::Any);
inline jule::Ptr<_1ab22a228_Data> _1ab235ce4_evalSliceExpr(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0e2ca0_SliceExpr>);
inline void _1ab236157_checkIntegerIndexingByData(_1ab22be1c_Eval*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0c1e7c_Token>);
inline void _1ab236575_indexingPtr(_1ab22be1c_Eval*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0e3740_IndexingExpr>*);
inline void _1ab236993_indexingArr(_1ab22be1c_Eval*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0e3740_IndexingExpr>*);
inline void _1ab236db1_indexingSlc(_1ab22be1c_Eval*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0e3740_IndexingExpr>*);
inline void _1ab2372ce_indexingMap(_1ab22be1c_Eval*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0e3740_IndexingExpr>*);
inline void _1ab2376ec_indexingStr(_1ab22be1c_Eval*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0e3740_IndexingExpr>*);
inline void _1ab237b1a_toIndexing(_1ab22be1c_Eval*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0e3740_IndexingExpr>*);
inline jule::Bool _1ab2380c1_pushGenericsFromExprSubIdent(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0de890_SubIdentExpr>*, jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>>*, jule::Ptr<_1ab0db77c_Expr>*);
inline jule::Bool _1ab2384bc_pushGenericsFromData(jule::Ptr<_1ab22be1c_Eval>, jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>>*, jule::Ptr<_1ab0db77c_Expr>*);
inline void _1ab238830_evalIdentDeclFromIndexing(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0e3740_IndexingExpr>*);
inline jule::Bool _1ab238cd6_checkGenericFn(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab120d00_FnIns>*, jule::Ptr<_1ab0c1e7c_Token>*, jule::Any*);
inline void _1ab239149_evalFnGenericFromIndexing(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0e3740_IndexingExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab23948a_evalIndexing(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0e3740_IndexingExpr>);
inline __jule_tuple_x_1ab22a228_Data__jule_tuple_x_1ab22a228_Data _1ab2397cb_evalSlicingExprs(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0e3da0_SlicingExpr>*);
inline void _1ab239a84_slicingArr(_1ab22be1c_Eval*, jule::Ptr<_1ab22a228_Data>*);
inline void _1ab239ea2_slicingStr(_1ab22be1c_Eval*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>*);
inline void _1ab23a47a_checkSlicing(_1ab22be1c_Eval*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0e3da0_SlicingExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab23a7bb_evalSlicing(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0e3da0_SlicingExpr>);
inline void _1ab23abd9_castPtr(_1ab22be1c_Eval*, jule::Ptr<_1ab25aa1c_TypeKind>, jule::Ptr<_1ab22a228_Data>, jule::Ptr<_1ab0c1e7c_Token>);
inline void _1ab23b107_castStruct(_1ab22be1c_Eval*, jule::Ptr<_1ab25aa1c_TypeKind>, jule::Ptr<_1ab22a228_Data>, jule::Ptr<_1ab0c1e7c_Token>);
inline void _1ab23b525_castRef(_1ab22be1c_Eval*, jule::Ptr<_1ab25aa1c_TypeKind>, jule::Ptr<_1ab22a228_Data>, jule::Ptr<_1ab0c1e7c_Token>);
inline void _1ab23b943_castSlc(_1ab22be1c_Eval*, jule::Ptr<_1ab25aa1c_TypeKind>, jule::Ptr<_1ab22a228_Data>, jule::Ptr<_1ab0c1e7c_Token>);
inline void _1ab23bca6_castStr(_1ab22be1c_Eval*, jule::Ptr<_1ab22a228_Data>, jule::Ptr<_1ab0c1e7c_Token>);
inline void _1ab23c1c4_castInt(_1ab22be1c_Eval*, jule::Ptr<_1ab25aa1c_TypeKind>, jule::Ptr<_1ab22a228_Data>, jule::Ptr<_1ab0c1e7c_Token>);
inline void _1ab23c5e2_castNum(_1ab22be1c_Eval*, jule::Ptr<_1ab25aa1c_TypeKind>, jule::Ptr<_1ab22a228_Data>, jule::Ptr<_1ab0c1e7c_Token>);
inline void _1ab23ca10_castPrim(_1ab22be1c_Eval*, jule::Ptr<_1ab25aa1c_TypeKind>, jule::Ptr<_1ab22a228_Data>, jule::Ptr<_1ab0c1e7c_Token>);
inline void _1ab23cd73_castConstant(_1ab22be1c_Eval*, jule::Ptr<_1ab25aa1c_TypeKind>*, jule::Ptr<_1ab22a228_Data>*);
inline void _1ab23d291_castTypeEnum(_1ab22be1c_Eval*, jule::Ptr<_1ab25aa1c_TypeKind>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline void _1ab23d6ae_castTypeEnumT(_1ab22be1c_Eval*, jule::Ptr<_1ab25aa1c_TypeKind>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Ptr<_1ab22a228_Data> _1ab23db65_evalCastByTypeNData(_1ab22be1c_Eval*, jule::Ptr<_1ab25aa1c_TypeKind>, jule::Ptr<_1ab22a228_Data>, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab23e11b_evalCastT(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab25aa1c_TypeKind>*, jule::Ptr<_1ab0db77c_Expr>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Ptr<_1ab22a228_Data> _1ab23e45c_evalCast(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0de0dc_CastExpr>);
inline jule::Ptr<_1ab22a228_Data> _1ab23e79d_evalNsSelection(_1ab22be1c_Eval*, jule::Ptr<_1ab0de4b6_NsSelectionExpr>);
inline jule::Ptr<_1ab22a228_Data> _1ab23ec54_evalStructLitExplicit(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab10acb8_StructIns>, jule::Slice<jule::Ptr<_1ab0db77c_Expr>>, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab240095_evalStructLit(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0e17c6_StructLit>);
inline _1ab26c8ca_typeChecker _1ab24032b_typeChecker(_1ab22be1c_Eval*);
inline jule::Ptr<_1ab22a228_Data> _1ab24066c_evalType(_1ab22be1c_Eval*, jule::Ptr<_1ab0d7448_TypeDecl>);
inline void _1ab2409d0_callTypeFn(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline void _1ab240d43_callBuiltinFn(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline void _1ab2411a6_checkFnOfConcurrentCall(_1ab22be1c_Eval*, jule::Ptr<_1ab120d00_FnIns>*, jule::Ptr<_1ab0c1e7c_Token>);
inline void _1ab2415c4_processExceptionalHandler(_1ab22be1c_Eval*, jule::Ptr<_1ab120d00_FnIns>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline void _1ab241937_callFn(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab241c78_evalFnCall(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0e04a6_FnCallExpr>);
inline jule::Ptr<_1ab22a228_Data> _1ab242174_evalEnumStatic(_1ab22be1c_Eval*, jule::Ptr<_1ab133890_Enum>, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab242570_evalTypeEnumStatic(_1ab22be1c_Eval*, jule::Ptr<_1ab13509a_TypeEnum>, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab24296b_evalStructStatic(_1ab22be1c_Eval*, jule::Ptr<_1ab10acb8_StructIns>, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab242e22_evalTraitSubIdent(_1ab22be1c_Eval*, jule::Ptr<_1ab22a228_Data>, jule::Ptr<_1ab131195_Trait>, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab243483_evalStructSubIdentField(_1ab22be1c_Eval*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab10acb8_StructIns>*, jule::Ptr<_1ab0c1e7c_Token>*, jule::Ptr<_1ab10a218_FieldIns>*);
inline jule::Ptr<_1ab22a228_Data> _1ab2439e4_evalStructSubIdent(_1ab22be1c_Eval*, jule::Ptr<_1ab22a228_Data>, jule::Ptr<_1ab10acb8_StructIns>, jule::Ptr<_1ab0de890_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1ab22a228_Data> _1ab243d35_evalIntTypeStatic(_1ab22be1c_Eval*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab244176_evalUintTypeStatic(_1ab22be1c_Eval*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab2444b7_evalI8TypeStatic(_1ab22be1c_Eval*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab244808_evalI16TypeStatic(_1ab22be1c_Eval*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab244b49_evalI32TypeStatic(_1ab22be1c_Eval*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab244e8a_evalI64TypeStatic(_1ab22be1c_Eval*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab2452cb_evalU8TypeStatic(_1ab22be1c_Eval*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab24561c_evalU16TypeStatic(_1ab22be1c_Eval*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab24595d_evalU32TypeStatic(_1ab22be1c_Eval*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab245c9e_evalU64TypeStatic(_1ab22be1c_Eval*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab2460e0_evalF32TypeStatic(_1ab22be1c_Eval*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab246431_evalF64TypeStatic(_1ab22be1c_Eval*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab24682c_evalPrimStatic(_1ab22be1c_Eval*, jule::Str, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab22a228_Data> _1ab246c28_evalTypeStatic(_1ab22be1c_Eval*, jule::Ptr<_1ab22a228_Data>, jule::Ptr<_1ab0de890_SubIdentExpr>);
inline jule::Ptr<_1ab22a228_Data> _1ab7b9300_comptimeObjSubIdent(_1ab22be1c_Eval*, jule::Ptr<_1ab14bc71_comptimeTypeInfo>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0de890_SubIdentExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab7bd5ce_comptimeObjSubIdent(_1ab22be1c_Eval*, jule::Ptr<_1ab137e9e_comptimeStructField>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0de890_SubIdentExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab7c2847_comptimeObjSubIdent(_1ab22be1c_Eval*, jule::Ptr<_1ab144373_comptimeEnumField>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0de890_SubIdentExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab7c6b04_comptimeObjSubIdent(_1ab22be1c_Eval*, jule::Ptr<_1ab146d15_comptimeParam>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0de890_SubIdentExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab7cb0e2_comptimeObjSubIdent(_1ab22be1c_Eval*, jule::Ptr<_1ab1410b7_comptimeStatic>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0de890_SubIdentExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab7d035a_comptimeObjSubIdent(_1ab22be1c_Eval*, jule::Ptr<_1ab153283_comptimeValue>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0de890_SubIdentExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab7d45c3_comptimeObjSubIdent(_1ab22be1c_Eval*, jule::Ptr<_1ab1571cc_comptimeFile>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0de890_SubIdentExpr>*);
inline __jule_tuple_x_1ab22a228_Data__jule_tuple_bool _1ab2475ca_tryComptimeObjSubIdent(_1ab22be1c_Eval*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0de890_SubIdentExpr>);
inline jule::Ptr<_1ab22a228_Data> _1ab2479c6_evalObjSubIdent(_1ab22be1c_Eval*, jule::Ptr<_1ab22a228_Data>, jule::Ptr<_1ab0de890_SubIdentExpr>);
inline jule::Ptr<_1ab22a228_Data> _1ab247d17_evalSubIdent(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0de890_SubIdentExpr>);
inline jule::Ptr<_1ab22a228_Data> _1ab248158_evalTuple(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0dc44d_TupleExpr>);
inline jule::Ptr<_1ab22a228_Data> _1ab248554_evalMap(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab269289_Map>, jule::Ptr<_1ab0e1c7c_BraceLit>);
inline jule::Ptr<_1ab22a228_Data> _1ab248895_evalBraceLit(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0e1c7c_BraceLit>);
inline jule::Ptr<_1ab22a228_Data> _1ab248bd6_evalAnonFunc(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0e9108_FnDecl>);
inline jule::Ptr<_1ab22a228_Data> _1ab249027_evalBinop(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0ded46_BinopExpr>);
inline jule::Ptr<_1ab22a228_Data> _1ab249368_evalExprKind(jule::Ptr<_1ab22be1c_Eval>, jule::Any);
inline jule::Ptr<_1ab22a228_Data> _1ab2496a9_eval1(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0db77c_Expr>);
inline jule::Ptr<_1ab22a228_Data> _1ab2499ea_eval(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0db77c_Expr>);
inline jule::Ptr<_1ab22a228_Data> _1ab249d3b_evalExpr1(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0db77c_Expr>);
inline jule::Ptr<_1ab22a228_Data> _1ab24a17c_evalExpr(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0db77c_Expr>);
inline _1ab24a644_unaryEval static__1ab24aa84_new(jule::Ptr<_1ab22be1c_Eval>);
inline void _1ab24ac82_minus(_1ab24a644_unaryEval*);
inline void _1ab24ae80_plus(_1ab24a644_unaryEval*);
inline void _1ab24b17d_caret(_1ab24a644_unaryEval*);
inline void _1ab24b37b_excl(_1ab24a644_unaryEval*);
inline void _1ab24b579_star(_1ab24a644_unaryEval*);
inline void _1ab24b777_amper(_1ab24a644_unaryEval*);
inline void _1ab24b975_typeDecl(_1ab24a644_unaryEval*);
inline void _1ab24bb73_evalData(_1ab24a644_unaryEval*);
inline jule::Ptr<_1ab22a228_Data> _1ab24beb4_eval(_1ab24a644_unaryEval*, jule::Ptr<_1ab0dd839_UnaryExpr>);
inline _1ab24c5d0_binaryEval static__1ab24cbb8_newPlain(jule::Ptr<_1ab22be1c_Eval>);
inline _1ab24c5d0_binaryEval static__1ab24d009_new(jule::Ptr<_1ab22be1c_Eval>, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Bool _1ab24d290_checkTypeCompatibility(_1ab24c5d0_binaryEval*);
inline jule::Bool _1ab24d526_checkStructCommonOperatorCompatibility(_1ab24c5d0_binaryEval*);
inline jule::Ptr<_1ab22a228_Data> _1ab24d7ac_evalComptimeTypeInfo(_1ab24c5d0_binaryEval*);
inline jule::Ptr<_1ab22a228_Data> _1ab24da43_evalNil(_1ab24c5d0_binaryEval*);
inline jule::Ptr<_1ab22a228_Data> _1ab24dcc9_evalEnum(_1ab24c5d0_binaryEval*);
inline jule::Ptr<_1ab22a228_Data> _1ab24e060_evalTypeEnum(_1ab24c5d0_binaryEval*);
inline jule::Ptr<_1ab22a228_Data> _1ab24e2e6_evalSptr(_1ab24c5d0_binaryEval*);
inline jule::Ptr<_1ab22a228_Data> _1ab24e57c_evalPtr(_1ab24c5d0_binaryEval*);
inline jule::Ptr<_1ab22a228_Data> _1ab24e813_evalArr(_1ab24c5d0_binaryEval*);
inline jule::Ptr<_1ab22a228_Data> _1ab24ea99_evalSlc(_1ab24c5d0_binaryEval*);
inline jule::Ptr<_1ab22a228_Data> _1ab24ed30_evalStruct(_1ab24c5d0_binaryEval*);
inline jule::Ptr<_1ab22a228_Data> _1ab2500b6_evalTrait(_1ab24c5d0_binaryEval*);
inline jule::Ptr<_1ab22a228_Data> _1ab25034c_evalAny(_1ab24c5d0_binaryEval*);
inline jule::Ptr<_1ab22a228_Data> _1ab2505d3_evalBool(_1ab24c5d0_binaryEval*);
inline jule::Ptr<_1ab22a228_Data> _1ab250869_evalStr(_1ab24c5d0_binaryEval*);
inline void _1ab250a67_setTypeToGreater(_1ab24c5d0_binaryEval*);
inline void _1ab250d20_checkModData(_1ab24c5d0_binaryEval*, jule::Ptr<_1ab22a228_Data>*);
inline void _1ab25101d_mod(_1ab24c5d0_binaryEval*);
inline jule::Bool _1ab251419_numbersAreCompatibile(_1ab24c5d0_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1ab22a228_Data> _1ab2516a0_evalFloat(_1ab24c5d0_binaryEval*);
inline jule::Ptr<_1ab22a228_Data> _1ab251936_evalInt(_1ab24c5d0_binaryEval*);
inline jule::Ptr<_1ab22a228_Data> _1ab251bbc_evalPrim(_1ab24c5d0_binaryEval*);
inline void _1ab251dba_checkSpecialCases(_1ab24c5d0_binaryEval*);
inline jule::Ptr<_1ab22a228_Data> _1ab252151_evalOp(_1ab24c5d0_binaryEval*);
inline void _1ab252409_evalConst(_1ab24c5d0_binaryEval*, jule::Ptr<_1ab22a228_Data>*);
inline void _1ab2526b2_checkData(_1ab24c5d0_binaryEval*, jule::Ptr<_1ab22a228_Data>*);
inline void _1ab2528b0_checkDatas(_1ab24c5d0_binaryEval*);
inline void _1ab252b68_setModel(_1ab24c5d0_binaryEval*, jule::Ptr<_1ab22a228_Data>*);
inline void _1ab252e21_postEval(_1ab24c5d0_binaryEval*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab25331c_solveExplicit(_1ab24c5d0_binaryEval*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab25365d_eval(_1ab24c5d0_binaryEval*, jule::Ptr<_1ab0ded46_BinopExpr>*);
inline jule::Str _1ab25add5_Str(_1ab25aa1c_TypeKind*);
inline jule::Bool _1ab25b226_Equal(jule::Ptr<_1ab25aa1c_TypeKind>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Bool _1ab25b864_Binded(_1ab25aa1c_TypeKind*);
inline jule::Bool _1ab25baea_IsNil(_1ab25aa1c_TypeKind*);
inline jule::Bool _1ab25bd81_Void(_1ab25aa1c_TypeKind*);
inline jule::Bool _1ab25c117_Comparable(_1ab25aa1c_TypeKind*);
inline jule::Bool _1ab25c39d_Mutable(_1ab25aa1c_TypeKind*);
inline jule::Bool _1ab25c634_Ordered(_1ab25aa1c_TypeKind*);
inline jule::Bool _1ab25c8ba_NilCompatible(_1ab25aa1c_TypeKind*);
inline jule::Bool _1ab25cb51_PerformsRC(_1ab25aa1c_TypeKind*);
inline jule::Bool _1ab25cdd7_Variadicable(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab2635e6_Prim> _1ab25d16d_Prim(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab267122_Sptr> _1ab25d404_Sptr(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab26a8d9_Ptr> _1ab25d68a_Ptr(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab133890_Enum> _1ab25d921_Enum(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab13509a_TypeEnum> _1ab25dba7_TypeEnum(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab269e16_Arr> _1ab25de3d_Arr(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab267ae5_Slc> _1ab25e1c4_Slc(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab120d00_FnIns> _1ab25e45a_Fn(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab10acb8_StructIns> _1ab25e6e1_Struct(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab131195_Trait> _1ab25e977_Trait(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab269289_Map> _1ab25ec0d_Map(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab2686d9_Tuple> _1ab25ee94_Tup(_1ab25aa1c_TypeKind*);
inline jule::Bool _1ab26022a_comptime(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab139b4e_comptimeStructFields> _1ab2604b1_comptimeStructFields(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab137e9e_comptimeStructField> _1ab260747_comptimeStructField(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab145682_comptimeEnumFields> _1ab2609cd_comptimeEnumFields(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab144373_comptimeEnumField> _1ab260c64_comptimeEnumField(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab14907b_comptimeParams> _1ab260eea_comptimeParams(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab146d15_comptimeParam> _1ab261281_comptimeParam(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab137443_comptimeRange> _1ab261517_comptimeRange(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab14a676_comptimeTypeInfos> _1ab26179d_comptimeTypeInfos(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab14bc71_comptimeTypeInfo> _1ab261a34_comptimeTypeInfo(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab142c78_comptimeStatics> _1ab261cba_comptimeStatics(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab1410b7_comptimeStatic> _1ab262051_comptimeStatic(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab153283_comptimeValue> _1ab2622d7_comptimeValue(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab1571cc_comptimeFile> _1ab26256d_comptimeFile(_1ab25aa1c_TypeKind*);
inline jule::Ptr<_1ab155ad2_comptimeFiles> _1ab262804_comptimeFiles(_1ab25aa1c_TypeKind*);
inline jule::Bool _1ab263063_checked(_1ab262bde_TypeSymbol*);
inline jule::Str _1ab263937_Str(_1ab2635e6_Prim*);
inline jule::Bool _1ab263c78_Equal(jule::Ptr<_1ab2635e6_Prim>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Bool _1ab26421d_IsConstraint(_1ab2635e6_Prim*);
inline jule::Bool _1ab2644a4_IsI8(_1ab2635e6_Prim*);
inline jule::Bool _1ab26473a_IsI16(_1ab2635e6_Prim*);
inline jule::Bool _1ab2649c1_IsI32(_1ab2635e6_Prim*);
inline jule::Bool _1ab264c57_IsI64(_1ab2635e6_Prim*);
inline jule::Bool _1ab264edd_IsU8(_1ab2635e6_Prim*);
inline jule::Bool _1ab265274_IsU16(_1ab2635e6_Prim*);
inline jule::Bool _1ab26550a_IsU32(_1ab2635e6_Prim*);
inline jule::Bool _1ab265791_IsU64(_1ab2635e6_Prim*);
inline jule::Bool _1ab265a27_IsF32(_1ab2635e6_Prim*);
inline jule::Bool _1ab265cad_IsF64(_1ab2635e6_Prim*);
inline jule::Bool _1ab266044_IsInt(_1ab2635e6_Prim*);
inline jule::Bool _1ab2662ca_IsUint(_1ab2635e6_Prim*);
inline jule::Bool _1ab266561_IsUintptr(_1ab2635e6_Prim*);
inline jule::Bool _1ab2667e7_IsBool(_1ab2635e6_Prim*);
inline jule::Bool _1ab266a7d_IsStr(_1ab2635e6_Prim*);
inline jule::Bool _1ab266d14_IsAny(_1ab2635e6_Prim*);
inline jule::Str _1ab267496_Str(_1ab267122_Sptr*);
inline jule::Bool _1ab2677d7_Equal(jule::Ptr<_1ab267122_Sptr>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Str _1ab268079_Str(_1ab267ae5_Slc*);
inline jule::Bool _1ab2683ba_Equal(jule::Ptr<_1ab267ae5_Slc>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Str _1ab268a5d_Str(_1ab2686d9_Tuple*);
inline jule::Bool _1ab268d9e_Equal(jule::Ptr<_1ab2686d9_Tuple>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Str _1ab26960d_Str(_1ab269289_Map*);
inline jule::Bool _1ab26994e_Equal(jule::Ptr<_1ab269289_Map>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Str _1ab26a28a_Str(_1ab269e16_Arr*);
inline jule::Bool _1ab26a5cb_Equal(jule::Ptr<_1ab269e16_Arr>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Str _1ab26ac5d_Str(_1ab26a8d9_Ptr*);
inline jule::Bool _1ab26b09e_Equal(jule::Ptr<_1ab26a8d9_Ptr>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Bool _1ab26b423_IsUnsafe(_1ab26a8d9_Ptr*);
inline void _1ab26d117_pushErr(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0c1e7c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ab26d315_allowBuiltin(_1ab26c8ca_typeChecker*);
inline void _1ab26d513_disallowBuiltin(_1ab26c8ca_typeChecker*);
inline void _1bb2261d1_pushReference(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab10acb8_StructIns>*);
inline void _1bb228920_pushReference(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab131195_Trait>*);
inline void _1ab26da74_pushReferenceByKind(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline void _1ab26de92_pushCycleError(_1ab26c8ca_typeChecker*, jule::Any, jule::Any, _1d7ad2eb1_StrBuilder*);
inline jule::Bool _1ab26e38d_checkCrossCycle(_1ab26c8ca_typeChecker*, jule::Any, _1d7ad2eb1_StrBuilder*);
inline jule::Bool _1ab26e789_checkIllegalCycles(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0d7a53_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1ab25a566_Kind> _1ab26eb85_fromTypeAlias(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0d7a53_IdentTypeDecl>*, jule::Ptr<_1ab259c2a_TypeAlias>*);
inline jule::Ptr<_1ab133890_Enum> _1ab270081_fromEnum(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0d7a53_IdentTypeDecl>*, jule::Ptr<_1ab133890_Enum>*);
inline jule::Ptr<_1ab13509a_TypeEnum> _1ab27047c_fromTypeEnum(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0d7a53_IdentTypeDecl>*, jule::Ptr<_1ab13509a_TypeEnum>*);
inline jule::Ptr<_1ab131195_Trait> _1ab270878_fromTrait(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0d7a53_IdentTypeDecl>*, jule::Ptr<_1ab131195_Trait>*);
inline jule::Bool _1ab270c74_checkStructIns(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab10acb8_StructIns>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline void _1ab27102c_appendUsedStructReference(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab10803a_Struct>*);
inline jule::Ptr<_1ab10acb8_StructIns> _1ab271428_buildStructInstance(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0d7a53_IdentTypeDecl>*, jule::Ptr<_1ab10803a_Struct>*);
inline jule::Ptr<_1ab10acb8_StructIns> _1ab271824_fromStruct(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0d7a53_IdentTypeDecl>*, jule::Ptr<_1ab10803a_Struct>*);
inline jule::Trait<_1ab25a566_Kind> _1ab271b65_getDef(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0d7a53_IdentTypeDecl>*);
inline jule::Trait<_1ab25a566_Kind> _1ab271ea6_buildIdent(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0d7a53_IdentTypeDecl>);
inline jule::Trait<_1ab25a566_Kind> _1ab2722e7_buildSubIdent(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0d7d50_SubIdentTypeDecl>);
inline jule::Ptr<_1ab267122_Sptr> _1ab272638_buildSptrFromType(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Ptr<_1ab267122_Sptr> _1ab272979_buildSptr(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0d84e3_SptrTypeDecl>);
inline jule::Ptr<_1ab26a8d9_Ptr> _1ab272cba_buildPtrFromType(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Ptr<_1ab26a8d9_Ptr> _1ab27310b_buildPtr(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0d8e72_PtrTypeDecl>);
inline jule::Ptr<_1ab267ae5_Slc> _1ab27344c_buildSlc(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0d8878_SlcTypeDecl>);
inline jule::Ptr<_1ab269e16_Arr> _1ab27378d_buildArr(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0d9714_ArrTypeDecl>);
inline jule::Ptr<_1ab269289_Map> _1ab273ace_buildMap(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0d9e62_MapTypeDecl>);
inline jule::Ptr<_1ab2686d9_Tuple> _1ab273e20_buildTuple(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0d8b75_TupleTypeDecl>);
inline jule::Bool _1ab274261_checkFuncTypes(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab120d00_FnIns>*);
inline jule::Ptr<_1ab120d00_FnIns> _1ab2745a2_buildFunc(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0e9108_FnDecl>);
inline jule::Trait<_1ab25a566_Kind> _1ab2748e3_buildByNamespace(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0d81e6_NamespaceTypeDecl>);
inline jule::Ptr<_1ab25aa1c_TypeKind> _1ab274c34_build(_1ab26c8ca_typeChecker*, jule::Any*);
inline jule::Ptr<_1ab25aa1c_TypeKind> _1ab275075_checkDecl(_1ab26c8ca_typeChecker*, jule::Ptr<_1ab0d7448_TypeDecl>*);
inline jule::Bool static__1ab2759c1_prim(jule::Str*, jule::Ptr<_1ab2635e6_Prim>);
inline jule::Bool static__1ab275d45_exist(jule::Str*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline void _1aa0d97c0_stop(_1aa0d9160_scopeParser*);
inline jule::Bool _1aa0d9a56_stopped(_1aa0d9160_scopeParser*);
inline jule::Bool _1aa0d9cdc_finished(_1aa0d9160_scopeParser*);
inline jule::Bool _1aa0da073_isLastSt(_1aa0d9160_scopeParser*);
inline void _1aa0da3d6_pushErr(_1aa0d9160_scopeParser*, jule::Ptr<_1ab0c1e7c_Token>, jule::Str);
inline void _1aa0da749_pushSuggestion(_1aa0d9160_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1aa0daa02_insertAsNext(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1aa0d87be_stmt> _1aa0dac88_next(_1aa0d9160_scopeParser*);
inline jule::Ptr<_1ab0e7469_ScopeTree> _1aa0db184_buildScope(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab0ea1d6_VarDecl> _1aa0db4c5_buildVarSt(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0ea5b0_RetSt> _1aa0db816_buildRetSt(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0eac53_Iter> _1aa0dbb57_buildWhileNextIter(_1aa0d9160_scopeParser*, jule::Ptr<_1aa0d87be_stmt>*);
inline jule::Ptr<_1ab0eb57d_WhileKind> _1aa0dbe98_buildWhileIterKind(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _1aa0dc2d9_getRangeKindKeysTokens(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0ea1d6_VarDecl> _1aa0dc62a_buildRangeKindKey(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Slice<jule::Ptr<_1ab0ea1d6_VarDecl>> _1aa0dc96b_buildRangeKindKeys(_1aa0d9160_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>>*);
inline void _1aa0dccce_setupRangeKindKeysPlain(_1aa0d9160_scopeParser*, jule::Ptr<_1ab0ebe85_RangeKind>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline void _1aa0dd142_setupRangeKindKeysExplicit(_1aa0d9160_scopeParser*, jule::Ptr<_1ab0ebe85_RangeKind>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline void _1aa0dd4a5_setupRangeKindKeys(_1aa0d9160_scopeParser*, jule::Ptr<_1ab0ebe85_RangeKind>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0ebe85_RangeKind> _1aa0dd95b_buildRangeIterKind(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Any _1aa0ddd57_buildCommonIterKind(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Ptr<_1ab0eac53_Iter> _1aa0de198_buildCommonIter(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0eac53_Iter> _1aa0de4d9_buildIterSt(_1aa0d9160_scopeParser*, jule::Ptr<_1aa0d87be_stmt>*);
inline jule::Ptr<_1ab0ec35e_BreakSt> _1aa0de82a_buildBreakSt(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0ec738_ContSt> _1aa0deb6b_buildContSt(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0ecbde_If> _1aa0deeac_buildIf(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0ed0b8_Else> _1aa0e02ed_buildElse(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0ed56e_Conditional> _1aa0e063e_buildIfElseChain(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0db77c_Expr> _1aa0e0980_buildCoCallSt(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0e4e06_GotoSt> _1aa0e0cc1_buildGotoSt(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0e5203_FallSt> _1aa0e1112_buildFallSt(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0edcab_TypeAliasDecl> _1aa0e1453_buildTypeAliasSt(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline void _1aa0e192b_pushCaseExpr(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>, jule::Ptr<_1ab0c1e7c_Token>, jule::Bool, jule::Slice<jule::Ptr<_1ab0db77c_Expr>>*);
inline jule::Slice<jule::Ptr<_1ab0db77c_Expr>> _1aa0e1dd2_buildCaseExprs(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::Ptr<_1ab0c1e7c_Token>*, jule::Bool);
inline jule::Ptr<_1ab0e7469_ScopeTree> _1aa0e2223_buildCaseScope(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline __jule_tuple_x_1ab0ee262_Case__jule_tuple_bool _1aa0e261e_buildCase(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::Bool);
inline __jule_tuple_sx_1ab0ee262_Case__jule_tuple_x_1ab0ed0b8_Else _1aa0e2a1a_buildCases(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>, jule::Bool);
inline jule::Ptr<_1ab0ee99e_MatchCase> _1aa0e2d5b_buildMatchCase(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0e7469_ScopeTree> _1aa0e319c_buildScopeSt(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0e4a2c_LabelSt> _1aa0e34dd_buildLabelSt(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline __jule_tuple__1ab0e6aa6_StmtData__jule_tuple_bool _1aa0e382e_buildIdSt(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1aa103c7e_assignInfo> _1aa0e3b70_buildAssignInfo(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0e5863_AssignLeft> _1aa0e3eb1_buildAssignL(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Slice<jule::Ptr<_1ab0e5863_AssignLeft>> _1aa0e4302_buildAssignLs(_1aa0d9160_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>>*);
inline __jule_tuple_x_1ab0e5de6_AssignSt__jule_tuple_bool _1aa0e4643_buildPlainAssign(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Bool _1aa0e4a3e_buildDeclAssign1(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::Ptr<_1ab0e5de6_AssignSt>*);
inline __jule_tuple_x_1ab0e5de6_AssignSt__jule_tuple_bool _1aa0e4d80_buildDeclAssign(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline __jule_tuple_x_1ab0e5de6_AssignSt__jule_tuple_bool _1aa0e51c1_buildAssignSt(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0dc151_UseExpr> _1aa0e5512_buildUseExpr(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Any _1aa0e5853_buildSt(_1aa0d9160_scopeParser*, jule::Ptr<_1aa0d87be_stmt>*);
inline void _1aa0e5bb6_build(_1aa0d9160_scopeParser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::Ptr<_1ab0e7469_ScopeTree>*);
inline void _1aa0e7091_pushErr(_1aa0e6788_exprBuilder*, jule::Ptr<_1ab0c1e7c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1aa0e7404_pushSuggestion(_1aa0e6788_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ab0dc44d_TupleExpr> _1aa0e7745_buildTuple(_1aa0e6788_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>>*);
inline jule::Ptr<_1ab0dc827_LitExpr> _1aa0e7a86_buildLit(_1aa0e6788_exprBuilder*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Any _1aa0e8218_buildSingle(_1aa0e6788_exprBuilder*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab0dd1a7_IdentExpr> _1aa0e8559_buildBindIdent(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0dd839_UnaryExpr> _1aa0e889a_buildUnary(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0de890_SubIdentExpr> _1aa0e8bdb_buildObjSubIdent(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0de4b6_NsSelectionExpr> _1aa0e902c_buildNsSubIdent(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0d7448_TypeDecl> _1aa0e936d_buildType(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Any _1aa0e96ae_buildSubIdent(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0ddc13_VariadicExpr> _1aa0e9a00_buildVariadic(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0dba79_RangeExpr> _1aa0e9d41_buildBetweenParentheses(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0de0dc_CastExpr> _1aa0ea182_tryBuildCast(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline void _1aa0ea5a0_pushArg(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0db77c_Expr>>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Slice<jule::Ptr<_1ab0db77c_Expr>> _1aa0ea8e1_buildArgs(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0e04a6_FnCallExpr> _1aa0eb1d8_buildFnCall(_1aa0e6788_exprBuilder*, jule::Ptr<_1ab0c1e7c_Token>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Any _1aa0eb529_buildParenthesesRange(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0dcc01_UnsafeExpr> _1aa0eb86a_buildUnsafeExpr(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0e9108_FnDecl> _1aa0ebbab_buildAnonFn(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Any _1aa0ebeec_buildUnsafe(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline void _1aa0ec41a_pushRangeLitPart(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>, jule::Ptr<_1ab0c1e7c_Token>, jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _1aa0ec75b_getBraceRangeLitExprParts(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0e0e9b_FieldExprPair> _1aa0eca9c_buildFieldExprPair(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0db77c_Expr> _1aa0ecddd_buildStructLitExpr(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Slice<jule::Ptr<_1ab0db77c_Expr>> _1aa0ed22e_buildStructLitExprs(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0e17c6_StructLit> _1aa0ed570_buildTypedStructLiteral(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0db77c_Expr> _1aa0ed8b1_buildBraceLitPart(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0e1c7c_BraceLit> _1aa0edc02_buildBraceLit(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Any _1aa0ee043_buildBraceRange(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _1aa0ee384_getEnumerableParts(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0e2ca0_SliceExpr> _1aa0ee6c5_buildSlice(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0e3740_IndexingExpr> _1aa0eeb7b_buildIndexing(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Ptr<_1ab0e3da0_SlicingExpr> _1aa100297_buildSlicing(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::Ptr<_1ab0c1e7c_Token>*, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Any _1aa1005d8_buildBracketRange(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Any _1aa100929_buildExclRight(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Any _1aa100c6a_buildData(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Any _1aa101166_buildBinop(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::I64);
inline jule::Any _1aa1014a7_build(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Any _1aa1017e8_buildKind(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0db77c_Expr> _1aa101b39_buildFromTokens(_1aa0e6788_exprBuilder*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline void _1aa107458_stop(_1aa10715b_parser*);
inline jule::Bool _1aa1076de_stopped(_1aa10715b_parser*);
inline void _1aa107b0c_pushErr(_1aa10715b_parser*, jule::Ptr<_1ab0c1e7c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1aa107e70_pushSuggestion(_1aa10715b_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ab0db77c_Expr> _1aa1082b1_buildExpr(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0d6865_Directive> _1aa108602_buildDirective(_1aa10715b_parser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline void _1aa1088aa_pushDirective(_1aa10715b_parser*, jule::Ptr<_1ab0d6865_Directive>);
inline jule::Ptr<_1ab0e7469_ScopeTree> _1aa108ca6_buildScope(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::Ptr<_1ab0c1e7c_Token>);
inline __jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool _1aa10925c__buildType(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool _1aa109713_buildType(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1ab0edcab_TypeAliasDecl> _1aa109a54_buildTypeAliasDecl(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline void _1aa109db7_buildVarTypeAndExpr(jule::Ptr<_1aa10715b_parser>, jule::Ptr<_1ab0ea1d6_VarDecl>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline void _1aa10a22a_buildVarCommon(jule::Ptr<_1aa10715b_parser>, jule::Ptr<_1ab0ea1d6_VarDecl>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline void _1aa10a648_buildVarBegin(_1aa10715b_parser*, jule::Ptr<_1ab0ea1d6_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0ea1d6_VarDecl> _1aa10a989_buildVar(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0e4653_GenericDecl> _1aa10acca_buildGeneric(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>> _1aa10b1c6_buildGenerics(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::Ptr<_1ab0c1e7c_Token>*);
inline jule::Ptr<_1ab0e7ba6_ParamDecl> _1aa10b517_buildSelfParam(_1aa10715b_parser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline void _1aa10b935_paramTypeBegin(_1aa10715b_parser*, jule::Ptr<_1ab0e7ba6_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline void _1aa10bc98_buildParamType(jule::Ptr<_1aa10715b_parser>, jule::Ptr<_1ab0e7ba6_ParamDecl>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline void _1aa10c10b_buildParamBody(jule::Ptr<_1aa10715b_parser>, jule::Ptr<_1ab0e7ba6_ParamDecl>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0e7ba6_ParamDecl> _1aa10c44c_buildParam(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline void _1aa10c705_checkParams(_1aa10715b_parser*, jule::Slice<jule::Ptr<_1ab0e7ba6_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1ab0e7ba6_ParamDecl>> _1aa10cb01_buildParams(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::Bool);
inline __jule_tuple_x_1ab0da33b_RetTypeDecl__jule_tuple_bool _1ac9b22c7_buildMultiRetType(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::I64*);
inline __jule_tuple_x_1ab0da33b_RetTypeDecl__jule_tuple_bool _1ac9b26c3_buildRetType(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::I64*);
inline jule::Ptr<_1ab0e9108_FnDecl> _1ac9b2b79_buildFnPrototype(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1ab0e9108_FnDecl> _1ac9b3130_buildFn(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _1ac9b3471_getUseDeclSelectors(_1aa10715b_parser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline void _1ac9b37d4_buildBindUseDecl(_1aa10715b_parser*, jule::Ptr<_1ab1002b8_UseDecl>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Str _1ac9b3b25_useDeclTokstoa(_1aa10715b_parser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline void _1ac9b3e88_buildStdUseDecl(_1aa10715b_parser*, jule::Ptr<_1ab1002b8_UseDecl>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline void _1ac9b42eb_buildIdentUseDecl(_1aa10715b_parser*, jule::Ptr<_1ab1002b8_UseDecl>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline void _1ac9b465e_parseUseDecl(_1aa10715b_parser*, jule::Ptr<_1ab1002b8_UseDecl>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab1002b8_UseDecl> _1ac9b4a5a_buildUseDecl(_1aa10715b_parser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>, jule::Bool);
inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9b4e56_buildTypeEnumItemKind(jule::Ptr<_1aa10715b_parser>, jule::I64*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Slice<jule::Ptr<_1ab101b5a_TypeEnumItemDecl>> _1ac9b5297_buildTypeEnumItems(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab1022ba_TypeEnumDecl> _1ac9b55d8_buildTypeEnumDecl(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0db77c_Expr> _1ac9b59d4_buildEnumItemExpr(jule::Ptr<_1aa10715b_parser>, jule::I64*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Slice<jule::Ptr<_1ab10076e_EnumItemDecl>> _1ac9b5d25_buildEnumItems(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab101330_EnumDecl> _1ac9b6166_buildEnumDecl(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Any _1ac9b64a7_buildNodeEnumDecl(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab102584_FieldDecl> _1ac9b67e8_buildField(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Slice<jule::Ptr<_1ab102584_FieldDecl>> _1ac9b6b39_buildStructDeclFields(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab102e7a_StructDecl> _1ac9b6e7a_buildStructDecl(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline void _1ac9b7233_checkMethodReceiver(_1aa10715b_parser*, jule::Ptr<_1ab0e9108_FnDecl>*);
inline void _1ac9b7596_buildTraitBody(jule::Ptr<_1aa10715b_parser>, jule::Ptr<_1ab1036b7_TraitDecl>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab1036b7_TraitDecl> _1ac9b78d7_buildTraitDecl(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0e9108_FnDecl> _1ac9b7c28_buildBindFn(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0ea1d6_VarDecl> _1ac9b8069_buildBindVar(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab102e7a_StructDecl> _1ac9b83aa_buildBindStruct(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab0edcab_TypeAliasDecl> _1ac9b86eb_buildBindTypeAlias(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Ptr<_1ab1002b8_UseDecl> _1ac9b8a3c_buildBindUse(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Any _1ac9b8d7d_buildBind(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0e9108_FnDecl> _1ac9b91be_getMethod(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline void _1ac9b9532_parseImplBody(jule::Ptr<_1aa10715b_parser>, jule::Ptr<_1ab103d27_Impl>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab103d27_Impl> _1ac9b9873_buildImpl(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Any _1ac9b9bb4_buildNodeData(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline void _1ac9b9e6c_applyFnMeta(_1aa10715b_parser*, jule::Ptr<_1ab0e9108_FnDecl>*);
inline void _1ac9ba225_applyMeta(_1aa10715b_parser*, _1ab0d6447_Node*);
inline void _1ac9ba4cd_pushUseDecl(jule::Ptr<_1aa10715b_parser>, jule::Ptr<_1ab1002b8_UseDecl>*);
inline jule::Bool _1ac9ba81e_pushMetaNodes(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline _1ab0d6447_Node _1ac9bab60_parseNode(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline void _1ac9bae18_appendNode(jule::Ptr<_1aa10715b_parser>, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline void _1ac9bb3e1_removeRange(_1aa10715b_parser*, jule::I64, jule::U64, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::Slice<jule::I64>*);
inline void _1ac9bb80e_pushWrongOrderCloseErr(_1aa10715b_parser*, jule::Ptr<_1ab0c1e7c_Token>*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::Slice<jule::I64>*);
inline void _1ac9bbcd7_pushRangeClose(_1aa10715b_parser*, jule::Ptr<_1ab0c1e7c_Token>, jule::U64, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::Slice<jule::I64>*);
inline void _1ac9bc090_checkRanges(_1aa10715b_parser*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline void _1ac9bc348_parse(jule::Ptr<_1aa10715b_parser>, jule::Ptr<_1ab0c7746_File>*);
inline void _1ac9bdb85_pushErr(_1ac9bd5e1_typeBuilder*, jule::Ptr<_1ab0c1e7c_Token>, jule::Str);
inline void _1ac9bdee8_pushSuggestion(_1ac9bd5e1_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9be27e_buildNamespace(_1ac9bd5e1_typeBuilder*);
inline jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> _1ac9be515_buildGenerics(_1ac9bd5e1_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _1ac9be79b_identGenerics(_1ac9bd5e1_typeBuilder*);
inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9bea32_buildIdent(_1ac9bd5e1_typeBuilder*);
inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9becb8_buildCppLink(_1ac9bd5e1_typeBuilder*);
inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9c004e_buildFn(_1ac9bd5e1_typeBuilder*);
inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9c02d5_buildPtr(_1ac9bd5e1_typeBuilder*);
inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9c056b_buildSptr(_1ac9bd5e1_typeBuilder*);
inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9c0802_buildSlc(_1ac9bd5e1_typeBuilder*);
inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9c0a88_buildArr(_1ac9bd5e1_typeBuilder*);
inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9c0d1e_buildMap(_1ac9bd5e1_typeBuilder*);
inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9c10a5_buildEnumerable(_1ac9bd5e1_typeBuilder*);
inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9c133b_step(_1ac9bd5e1_typeBuilder*);
inline __jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool _1ac9c15c2_build(_1ac9bd5e1_typeBuilder*);
inline void _1ab4660ac_pushErr(_1ab465a5c_directiveEval*, jule::Ptr<_1ab0c1e7c_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _1ab4664a8_splitOperans(_1ab465a5c_directiveEval*, jule::U64, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Bool _1ab4667e9_evalDirectiveIdent(_1ab465a5c_directiveEval*, jule::Str);
inline jule::Bool _1ab466b3a_evalDirectivePart(_1ab465a5c_directiveEval*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Bool _1ab466dc1_eval(_1ab465a5c_directiveEval*);
inline jule::Ptr<_1ac9c2727_JuleImporter> static__1ac9c2b23_New(_1ab4645a5_CompileInfo);
inline jule::Slice<jule::Ptr<_1ab184bdd_ImportInfo>> _1ac9c2da9_AllPackages(_1ac9c2727_JuleImporter*);
inline void _1ac9c32e9_SetModPath(_1ac9c2727_JuleImporter*, jule::Str);
inline jule::Str _1ac9c3580_GetModPath(_1ac9c2727_JuleImporter*);
inline jule::Str _1ac9c38c1_ModById(_1ac9c2727_JuleImporter*, jule::I64);
inline jule::Ptr<_1ab184bdd_ImportInfo> _1ac9c3c12_GetImport(_1ac9c2727_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1ab0d55ab_Ast__jule_tuple_s_1d7b81cb8_Log _1ac9c410d_ImportPackage(_1ac9c2727_JuleImporter*, jule::Str, jule::Bool);
inline void _1ac9c43b6_Imported(_1ac9c2727_JuleImporter*, jule::Ptr<_1ab184bdd_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_1d7b81cb8_Log _1ac9c47e5_isPassBuildDirectives(_1ac9c2727_JuleImporter*, jule::Ptr<_1ab0d55ab_Ast>*);
inline jule::Bool _1bceb9390_isCommonOrdered(jule::Slice<jule::Ptr<_1ab10803a_Struct>>, jule::Ptr<_1ab10803a_Struct>);
inline jule::Bool _1bcebddab_isCommonOrdered(jule::Slice<jule::Ptr<_1ab1c7a66_Var>>, jule::Ptr<_1ab1c7a66_Var>);
inline void _1bceb5ea2_orderCommon(jule::Slice<jule::Ptr<_1ab10803a_Struct>>*);
inline void _1bceb9c31_orderCommon(jule::Slice<jule::Ptr<_1ab1c7a66_Var>>*);
inline void static__1ac9c8596_orderStructures(jule::Slice<jule::Ptr<_1ab10803a_Struct>>*);
inline void static__1ac9c87c7_orderVars(jule::Slice<jule::Ptr<_1ab1c7a66_Var>>*);
inline void _1acb387e4_optimizeChild(jule::Ptr<_1acb3833d_scopeDeadCode>, jule::Ptr<_1ab1637b0_Scope>*);
inline void _1acb38a9c_optimizeBodyChildExceptional(jule::Ptr<_1acb3833d_scopeDeadCode>, jule::Ptr<_1ab1637b0_Scope>*);
inline void _1acb38d55_optimizeBodyChild(jule::Ptr<_1acb3833d_scopeDeadCode>, jule::Ptr<_1ab1637b0_Scope>*);
inline void _1acb3910d_optimizeExprModel(jule::Ptr<_1acb3833d_scopeDeadCode>, jule::Any*);
inline void _1acb3930b_eliminateFollowed(_1acb3833d_scopeDeadCode*);
inline void _1acb395b4_pushGoto(jule::Ptr<_1acb3833d_scopeDeadCode>, jule::Ptr<_1ab16652c_GotoSt>);
inline void _1acb3986c_pushLabel(jule::Ptr<_1acb3833d_scopeDeadCode>, jule::Ptr<_1ab166153_Label>);
inline void _1acb39b25_optimizeRangeIter(jule::Ptr<_1acb3833d_scopeDeadCode>, jule::Ptr<_1ab1655e7_RangeIter>);
inline void _1acb39dcd_optimizeWhileIter(jule::Ptr<_1acb3833d_scopeDeadCode>, jule::Ptr<_1ab164b9b_WhileIter>);
inline void _1acb3a186_optimizeInfIter(jule::Ptr<_1acb3833d_scopeDeadCode>, jule::Ptr<_1ab1646e5_InfIter>);
inline void _1acb3a43e_optimizeConditional(jule::Ptr<_1acb3833d_scopeDeadCode>, jule::Ptr<_1ab1643e8_Conditional>);
inline void _1acb3a6e7_optimizeMatch(jule::Ptr<_1acb3833d_scopeDeadCode>, jule::Ptr<_1ab1678e6_Match>);
inline void _1acb3a9a0_optimizeAssign(jule::Ptr<_1acb3833d_scopeDeadCode>, jule::Ptr<_1ab166dac_Assign>);
inline void _1acb3ac58_optimizeMultiAssign(jule::Ptr<_1acb3833d_scopeDeadCode>, jule::Ptr<_1ab167286_MultiAssign>);
inline void _1acb3b011_optimizeStmt(jule::Ptr<_1acb3833d_scopeDeadCode>, jule::Any);
inline void _1acb3b20e_optimizeStmts(jule::Ptr<_1acb3833d_scopeDeadCode>);
inline _1acb3c595_exprDeadCode static__1acb3cbd3_new(jule::Ptr<_1acb3833d_scopeDeadCode>*);
inline void _1acb3ce8b_binary(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab1101a7_BinopExprModel>);
inline void _1acb3d244_unary(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab110581_UnaryExprModel>);
inline void _1acb3d4ec_structureLit(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab110e55_StructLitExprModel>);
inline void _1acb3d7a5_allocStructure(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab111252_AllocStructLitExprModel>);
inline void _1acb3da5d_casting(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab1117d5_CastingExprModel>);
inline void _1acb3dd16_args(_1acb3c595_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1acb3e0be_funcCall(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab112187_FnCallExprModel>);
inline void _1acb3e377_slice(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab112561_SliceExprModel>);
inline void _1acb3e630_array(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab1155a8_ArrayExprModel>);
inline void _1acb3e8d8_indexing(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab112a17_IndexingExprModel>);
inline void _1acb3eb91_anonFunc(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab112de1_AnonFnExprModel>);
inline void _1acb3ee49_mapExpr(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab113771_MapExprModel>);
inline void _1acb40202_slicing(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab113d04_SlicingExprModel>);
inline void _1acb404aa_traitSub(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab114387_TraitSubIdentExprModel>);
inline void _1acb40763_structureSub(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab114c28_StructSubIdentExprModel>);
inline void _1acb40a1b_tuple(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab1158a5_TupleExprModel>);
inline void _1acb40cc4_newCall(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab116532_BuiltinNewCallExprModel>);
inline void _1acb4107c_outCall(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab115c7e_BuiltinOutCallExprModel>);
inline void _1acb41335_outlnCall(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab116158_BuiltinOutlnCallExprModel>);
inline void _1acb415dd_panicCall(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab11690b_BuiltinPanicCallExprModel>);
inline void _1acb41896_assertCall(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab116db2_BuiltinAssertCallExprModel>);
inline void _1acb41b4e_errorCall(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab1189b8_BuiltinErrorCallExprModel>);
inline void _1acb41e07_makeCall(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab117368_BuiltinMakeCallExprModel>);
inline void _1acb421b0_appendCall(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab117742_BuiltinAppendCallExprModel>);
inline void _1acb42468_lenCall(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab117a3e_BuiltinLenCallExprModel>);
inline void _1acb42721_capCall(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab117d3b_BuiltinCapCallExprModel>);
inline void _1acb429c9_deleteCall(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab118215_BuiltinDeleteCallExprModel>);
inline void _1acb42c82_sizeof(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab114574_SizeofExprModel>);
inline void _1acb4303a_alignof(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab1191e4_AlignofExprModel>);
inline void _1acb432e3_integratedToStr(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab1197dd_IntegratedToStrExprModel>);
inline void _1acb4359b_free(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab119eb4_FreeExprModel>);
inline void _1acb43854_backendEmit(_1acb3c595_exprDeadCode*, jule::Ptr<_1ab119bb7_BackendEmitExprModel>);
inline void _1acb43b0c_optimize(_1acb3c595_exprDeadCode*, jule::Any*);
inline jule::Ptr<_1ab3588c8_scopeOptimizer> static__1ab358e17_new(jule::Ptr<_1ab1637b0_Scope>);
inline void _1ab3591c0_setCurrentStmt(_1ab3588c8_scopeOptimizer*, jule::Any);
inline void _1ab3593bd_removeCurrent(_1ab3588c8_scopeOptimizer*);
inline void _1ab359676_optimizeData(_1ab3588c8_scopeOptimizer*, jule::Ptr<_1ab22a228_Data>);
inline void _1ab35992e_optimizeVar(_1ab3588c8_scopeOptimizer*, jule::Ptr<_1ab1c7a66_Var>);
inline void _1ab359bd7_optimizeConditional(_1ab3588c8_scopeOptimizer*, jule::Ptr<_1ab1643e8_Conditional>);
inline void _1ab35a105_buildDefaultConstantTrueCase(_1ab3588c8_scopeOptimizer*, jule::Ptr<_1ab16852e_Case>, jule::I64*, jule::Ptr<_1ab1678e6_Match>*);
inline void _1ab35a3ad_optimizeMatch(_1ab3588c8_scopeOptimizer*, jule::Ptr<_1ab1678e6_Match>);
inline void _1ab35a666_optimizeRangeIter(_1ab3588c8_scopeOptimizer*, jule::Ptr<_1ab1655e7_RangeIter>);
inline void _1ab35a91e_optimizeWhileIter(_1ab3588c8_scopeOptimizer*, jule::Ptr<_1ab164b9b_WhileIter>);
inline jule::Bool _1ab35ac60_substr(_1ab3588c8_scopeOptimizer*, jule::Ptr<_1ab166dac_Assign>);
inline jule::Bool _1ab35b0a1_strAssign(_1ab3588c8_scopeOptimizer*, jule::Ptr<_1ab166dac_Assign>);
inline jule::Bool _1ab35b3e2_sliceAssign(_1ab3588c8_scopeOptimizer*, jule::Ptr<_1ab166dac_Assign>);
inline void _1ab35b69a_optimizeAssign(_1ab3588c8_scopeOptimizer*, jule::Ptr<_1ab166dac_Assign>);
inline jule::Bool _1ab35b9db_tryOptimizeSwap(_1ab3588c8_scopeOptimizer*, jule::Ptr<_1ab167286_MultiAssign>*);
inline void _1ab35bc94_optimizeMultiAssign(_1ab3588c8_scopeOptimizer*, jule::Ptr<_1ab167286_MultiAssign>);
inline void _1ab35c04c_optimizeRet(_1ab3588c8_scopeOptimizer*, jule::Ptr<_1ab168ead_RetSt>);
inline void _1ab35c305_optimizeStmt(_1ab3588c8_scopeOptimizer*, jule::Any);
inline void _1ab35c5ad_optimizeChild(_1ab3588c8_scopeOptimizer*, jule::Ptr<_1ab1637b0_Scope>);
inline void _1ab35c7ab_optimize(_1ab3588c8_scopeOptimizer*);
inline void static__1ab3600e9_optimize(jule::Any*);
inline jule::Bool _1ab36043a_strCond(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab1101a7_BinopExprModel>);
inline void _1ab3606e3_binary(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab1101a7_BinopExprModel>);
inline void _1ab36099b_unary(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab110581_UnaryExprModel>);
inline void _1ab360c54_structureLit(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab110e55_StructLitExprModel>);
inline void _1ab36100c_allocStructure(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab111252_AllocStructLitExprModel>);
inline void _1ab3612b5_casting(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab1117d5_CastingExprModel>);
inline void _1ab36156d_args(_1ab35ea55_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _1ab361826_scope(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab1637b0_Scope>*);
inline void _1ab361ace_funcCall(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab112187_FnCallExprModel>);
inline void _1ab361d87_slice(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab112561_SliceExprModel>);
inline void _1ab362140_array(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab1155a8_ArrayExprModel>);
inline void _1ab3623e8_indexing(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab112a17_IndexingExprModel>);
inline void _1ab3626a1_anonFunc(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab112de1_AnonFnExprModel>);
inline void _1ab362959_mapExpr(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab113771_MapExprModel>);
inline void _1ab362c12_slicing(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab113d04_SlicingExprModel>);
inline void _1ab362eba_traitSub(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab114387_TraitSubIdentExprModel>);
inline void _1ab363273_structureSub(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab114c28_StructSubIdentExprModel>);
inline void _1ab36352b_tuple(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab1158a5_TupleExprModel>);
inline void _1ab3637d4_newCall(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab116532_BuiltinNewCallExprModel>);
inline void _1ab363a8c_outCall(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab115c7e_BuiltinOutCallExprModel>);
inline void _1ab363d45_outlnCall(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab116158_BuiltinOutlnCallExprModel>);
inline void _1ab3640ed_panicCall(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab11690b_BuiltinPanicCallExprModel>);
inline void _1ab3643a6_assertCall(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab116db2_BuiltinAssertCallExprModel>);
inline void _1ab36465e_errorCall(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab1189b8_BuiltinErrorCallExprModel>);
inline void _1ab364917_makeCall(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab117368_BuiltinMakeCallExprModel>);
inline void _1ab364bc0_appendCall(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab117742_BuiltinAppendCallExprModel>);
inline void _1ab364e78_lenCall(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab117a3e_BuiltinLenCallExprModel>);
inline void _1ab365231_capCall(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab117d3b_BuiltinCapCallExprModel>);
inline void _1ab3654d9_deleteCall(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab118215_BuiltinDeleteCallExprModel>);
inline void _1ab365792_sizeof(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab114574_SizeofExprModel>);
inline void _1ab365a4a_alignof(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab1191e4_AlignofExprModel>);
inline void _1ab365d03_integratedToStr(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab1197dd_IntegratedToStrExprModel>);
inline void _1ab3660ab_free(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab119eb4_FreeExprModel>);
inline void _1ab366364_backendEmit(_1ab35ea55_exprOptimizer*, jule::Ptr<_1ab119bb7_BackendEmitExprModel>);
inline void _1ab366562_do(_1ab35ea55_exprOptimizer*);
inline jule::Ptr<_1acb44657_Optimizer> static__1acb44aca_New(jule::Ptr<_1ac9c51db_IR>*);
inline void _1acb44d83_optimizeGlobal(_1acb44657_Optimizer*, jule::Ptr<_1ab1c7a66_Var>*);
inline void _1acb4513b_optimizeFunction(_1acb44657_Optimizer*, jule::Ptr<_1ab11cdeb_Fn>*);
inline void _1acb453e4_optimizeStruct(_1acb44657_Optimizer*, jule::Ptr<_1ab10803a_Struct>*);
inline void _1acb4569c_optimizeGlobals(_1acb44657_Optimizer*, jule::Ptr<_1ab187b14_Package>*);
inline void _1acb45955_optimizeFunctions(_1acb44657_Optimizer*, jule::Ptr<_1ab187b14_Package>*);
inline void _1acb45c0d_optimizeStructs(_1acb44657_Optimizer*, jule::Ptr<_1ab187b14_Package>*);
inline void _1acb45eb6_optimizePackage(_1acb44657_Optimizer*, jule::Ptr<_1ab187b14_Package>*);
inline void _1acb461b4_Optimize(_1acb44657_Optimizer*);
inline void static__1acb6b66d_Reset(void);
inline void static__1acb6c96b_Print(jule::Str, jule::Str);
inline void static__1acb6e176_LogFlat(_1d7b81cb8_Log*);
inline void static__1acb6e3a7_LogError(_1d7b81cb8_Log*);
inline void static__1acb6e5d8_Log(_1d7b81cb8_Log*);
inline void static__1acb6e819_PrintLogs(jule::Slice<_1d7b81cb8_Log>*);
inline _1ad2c5414_Time static__1ad2c57bb_Unix(jule::U64);
inline _1ad2c5414_Time static__1ad2c59ca_Now(void);
inline _1ad2c4c3d_AbsTime _1ad2c71b3_Abs(_1ad2c5414_Time*);
inline jule::Ptr<_1ad1ed53a_scopeCoder> static__1ad1edb56_new(jule::Ptr<_1ad2ce8b3_ObjectCoder>*);
inline void _1bd2732a3_iterHead(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab1655e7_RangeIter>*, jule::Bool*, jule::Str*);
inline void _1ad1ee32c_rangeIndexIter(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab1655e7_RangeIter>*);
inline void _1ad1ee5d5_rangeHashmapIter(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab1655e7_RangeIter>*);
inline void _1ad1ee88d_ifCase(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab163bcd_If>);
inline void _1ad1eeb46_conditional(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab1643e8_Conditional>);
inline void _1ad1eedee_infIter(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab1646e5_InfIter>);
inline void _1ad2001a7_whileIter(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab164b9b_WhileIter>);
inline void _1ad200460_rangeIter(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab1655e7_RangeIter>);
inline void _1ad200718_cont(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab16597c_ContSt>);
inline void _1ad2009c1_label(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab166153_Label>);
inline void _1ad200c79_gotoSt(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab16652c_GotoSt>);
inline void _1ad201032_postfix(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab166906_Postfix>);
inline void _1ad2012da_assign(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab166dac_Assign>);
inline void _1ad201593_mapLookupAssign(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab167286_MultiAssign>*);
inline void _1ad20184b_multiAssignTup(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab167286_MultiAssign>*);
inline void _1ad201b04_multiAssignFn(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab167286_MultiAssign>*);
inline void _1ad201dac_multiAssign(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab167286_MultiAssign>);
inline jule::Fn<void(void)> _1ad2021ed_matchExpr(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab1678e6_Match>);
inline void _1ad202561_case(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab1678e6_Match>, jule::Ptr<_1ab16852e_Case>);
inline void _1ad202819_matchSt(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab1678e6_Match>);
inline void _1ad202ac2_fallSt(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab168b28_FallSt>);
inline void _1ad202d7a_breakSt(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab165d56_BreakSt>);
inline void _1ad203133_setResult(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab168ead_RetSt>);
inline void _1ad2033db_retSt(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab168ead_RetSt>);
inline void _1ad203694_var(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab1c7a66_Var>);
inline void _1ad20394c_mutSlicing(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab35682c_MutSlicingExprModel>);
inline void _1ad203c05_swap(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab355551_SwapExprModel>);
inline void _1ad203ead_st(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Any);
inline void _1ad204266_scopeStmts(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab1637b0_Scope>*);
inline void _1ad20451e_scope(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab1637b0_Scope>);
inline void _1ad2047c7_funcScope(jule::Ptr<_1ad1ed53a_scopeCoder>, jule::Ptr<_1ab120d00_FnIns>);
inline jule::Ptr<_1ad2076a9_exprCoder> static__1ad207a72_new(jule::Ptr<_1ad2ce8b3_ObjectCoder>*);
inline void _1ad207d2a_string(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1d8bd00bd_Const>*);
inline void _1ad2080d3_boolean(jule::Ptr<_1ad2076a9_exprCoder>, jule::Bool);
inline void _1ad2082d1_nilLit(jule::Ptr<_1ad2076a9_exprCoder>);
inline jule::Bool _1ad208622_ftoaSpecialCases(jule::Ptr<_1ad2076a9_exprCoder>, jule::F64*);
inline void _1ad2088ca_float32(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1d8bd00bd_Const>*);
inline void _1ad208b83_float64(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1d8bd00bd_Const>*);
inline void _1ad208e3b_constant(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1d8bd00bd_Const>);
inline void _1ad209359_divByZeroBinary(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab0c1e7c_Token>*, jule::Ptr<_1ab10ebac_OperandExprModel>*, jule::Ptr<_1ab10ebac_OperandExprModel>*);
inline void _1ad209612_unsafeBinary(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab1101a7_BinopExprModel>);
inline void _1ad2098ba_binary(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab1101a7_BinopExprModel>);
inline void _1ad209b73_var(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab1c7a66_Var>);
inline void _1ad209e2b_structureIns(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab10acb8_StructIns>);
inline void _1ad20a1d4_unary(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab110581_UnaryExprModel>);
inline void _1ad20a48c_structureLit(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab110e55_StructLitExprModel>);
inline void _1ad20a745_allocStructure(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab111252_AllocStructLitExprModel>);
inline void _1ad20a9ed_possibleRefExpr(jule::Ptr<_1ad2076a9_exprCoder>, jule::Any);
inline void _1ad20ae1b_castTraitFromTrait(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab1117d5_CastingExprModel>*, jule::Ptr<_1ab131195_Trait>, jule::Ptr<_1ab131195_Trait>);
inline void _1ad20b1c4_casting(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab1117d5_CastingExprModel>);
inline void _1ad20b47c_models(jule::Ptr<_1ad2076a9_exprCoder>, jule::Slice<jule::Any>);
inline void _1ad20b735_args(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab112187_FnCallExprModel>*);
inline void _1ad20b9dd_modelForCall(jule::Ptr<_1ad2076a9_exprCoder>, jule::Any);
inline void _1ad20bc96_pushCallInf(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab112187_FnCallExprModel>*);
inline jule::Bool _1ad20c0d7_isWrapped(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab112187_FnCallExprModel>*);
inline void _1ad20c390_pureFuncCall(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab112187_FnCallExprModel>*);
inline void _1ad20c648_coFuncCall(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab112187_FnCallExprModel>*);
inline void _1ad20c9ab_writeUseExpr(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab120d00_FnIns>*, jule::Ptr<_1ab22a228_Data>);
inline void _1ad20cc64_funcCall(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab112187_FnCallExprModel>);
inline void _1ad20d01c_slice(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab112561_SliceExprModel>);
inline void _1ad20d2c5_indexing(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab112a17_IndexingExprModel>);
inline void _1ad20d57d_unsafeIndexing(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab356e26_UnsafeIndexingExprModel>);
inline void _1ad20d836_anonFunc(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab112de1_AnonFnExprModel>);
inline void _1ad20dade_mapExpr(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab113771_MapExprModel>);
inline void _1ad20dd97_slicing(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab113d04_SlicingExprModel>);
inline void _1ad20e150_traitSub(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab114387_TraitSubIdentExprModel>);
inline void _1ad20e408_structureSub(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab114c28_StructSubIdentExprModel>);
inline void _1ad20e6b1_array(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab1155a8_ArrayExprModel>);
inline void _1ad20e969_funcInsCommon(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab120d00_FnIns>);
inline void _1ad20ec22_funcIns(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab120d00_FnIns>);
inline void _1ad20eeca_tuple(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab1158a5_TupleExprModel>);
inline void _1ad210283_newCall(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab116532_BuiltinNewCallExprModel>);
inline void _1ad21053b_outCall(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab115c7e_BuiltinOutCallExprModel>);
inline void _1ad2107e4_outlnCall(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab116158_BuiltinOutlnCallExprModel>);
inline void _1ad210a9c_panicCall(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab11690b_BuiltinPanicCallExprModel>);
inline void _1ad210d55_assertCall(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab116db2_BuiltinAssertCallExprModel>);
inline void _1ad21110d_errorCall(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab1189b8_BuiltinErrorCallExprModel>);
inline void _1ad2113b6_copyCall(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab1185de_BuiltinCopyCallExprModel>);
inline void _1ad21166e_lenCall(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab117a3e_BuiltinLenCallExprModel>);
inline void _1ad211927_capCall(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab117d3b_BuiltinCapCallExprModel>);
inline void _1ad211bd0_deleteCall(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab118215_BuiltinDeleteCallExprModel>);
inline void _1ad211e88_makeCallSlice(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab117368_BuiltinMakeCallExprModel>*);
inline void _1ad212241_makeCallStr(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab117368_BuiltinMakeCallExprModel>*);
inline void _1ad2124e9_makeCall(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab117368_BuiltinMakeCallExprModel>);
inline void _1ad2127a2_pushToSlice(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab357355_PushToSliceExprModel>);
inline void _1ad212a5a_appendToSlice(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab35772e_AppendToSliceExprModel>);
inline void _1ad212d13_appendCall(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab117742_BuiltinAppendCallExprModel>);
inline void _1ad2130bb_sizeof(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab114574_SizeofExprModel>);
inline void _1ad213374_alignof(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab1191e4_AlignofExprModel>);
inline void _1ad21362c_runeLit(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab1194e1_RuneExprModel>);
inline void _1ad2138d5_structureStatic(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab1151ce_StructStaticIdentExprModel>);
inline void _1ad213b8d_integratedToStr(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab1197dd_IntegratedToStrExprModel>);
inline void _1ad213e46_backendEmit(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab119bb7_BackendEmitExprModel>);
inline void _1ad2141ee_free(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab119eb4_FreeExprModel>);
inline void _1ad2144a7_strComp(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab356299_StrCompExprModel>);
inline void _1ad214760_emptyCompare(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab35596e_EmptyCompareExprModel>);
inline void _1ad214a18_model(jule::Ptr<_1ad2076a9_exprCoder>, jule::Any);
inline void _1ad214cc1_initExpr(jule::Ptr<_1ad2076a9_exprCoder>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Ptr<_1ad217d3a_TestCoder> static__1ad21827a_New(jule::Ptr<_1ad2ce8b3_ObjectCoder>*);
inline jule::Ptr<_1ab184bdd_ImportInfo> _1ad218511_findTestingPackage(jule::Ptr<_1ad217d3a_TestCoder>);
inline void _1ad2187b9_appendTest(jule::Ptr<_1ad217d3a_TestCoder>, jule::Ptr<_1ab120d00_FnIns>);
inline void _1ad218a72_appendPackageTests(jule::Ptr<_1ad217d3a_TestCoder>, jule::Ptr<_1ab187b14_Package>*);
inline jule::Bool _1ad218d08_readyTestingPackage(jule::Ptr<_1ad217d3a_TestCoder>);
inline void _1ad219006_callTmReset(jule::Ptr<_1ad217d3a_TestCoder>);
inline void _1ad219204_callTmFailed(jule::Ptr<_1ad217d3a_TestCoder>);
inline void _1ad219402_callTmSkipped(jule::Ptr<_1ad217d3a_TestCoder>);
inline void _1ad219600_Serialize(jule::Ptr<_1ad217d3a_TestCoder>);
inline void static__1ad21b04c_writeIdentTo(_1d7ad2eb1_StrBuilder*, jule::Str*);
inline jule::Str static__1ad21b3c1_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__1ad21b800_toLocal(jule::I64, jule::I64, jule::Str*);
inline jule::Str static__1ad21bab9_func(jule::Ptr<_1ab11cdeb_Fn>*);
inline jule::Str static__1ad21bd83_funcIns(jule::Ptr<_1ab120d00_FnIns>*);
inline jule::Str static__1ad21c14c_traitDecl(jule::Ptr<_1ab131195_Trait>);
inline jule::Str static__1ad21c416_param(jule::Ptr<_1ab11b427_Param>*);
inline jule::Str static__1ad21c6d0_structure(jule::Ptr<_1ab10803a_Struct>*);
inline jule::Str static__1ad21c999_structureIns(jule::Ptr<_1ab10acb8_StructIns>*);
inline jule::Str static__1ad21cc63_field(jule::Ptr<_1ab105147_Field>*);
inline jule::Str static__1ad21d02c_var(jule::Ptr<_1ab1c7a66_Var>);
inline jule::Str static__1ad21d2e6_iterBegin(jule::Uintptr);
inline jule::Str static__1ad21d5b0_iterEnd(jule::Uintptr);
inline jule::Str static__1ad21d879_iterNext(jule::Uintptr);
inline jule::Str static__1ad21db43_label(jule::Uintptr);
inline jule::Str static__1ad21de0c_matchEnd(jule::Uintptr);
inline jule::Str static__1ad21e1c6_caseBegin(jule::Uintptr);
inline jule::Str _1ad2dde00_Str(_1ad2dda6a_customType*);
inline jule::Bool _1ad2de241_Equal(jule::Ptr<_1ad2dda6a_customType>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Ptr<_1ad2de670_typeCoder> static__1ad2debae_new(jule::Ptr<_1ad2ce8b3_ObjectCoder>*);
inline jule::Str _1ad2e0000_toType(_1ad2de670_typeCoder*, jule::Str);
inline jule::Str _1ad2e0341_prim(_1ad2de670_typeCoder*, jule::Ptr<_1ab2635e6_Prim>);
inline jule::Str _1ad2e0682_tuple(_1ad2de670_typeCoder*, jule::Ptr<_1ab2686d9_Tuple>);
inline jule::Str _1ad2e09c3_asSptr(_1ad2de670_typeCoder*, jule::Str);
inline jule::Str _1ad2e0d14_sptr(_1ad2de670_typeCoder*, jule::Ptr<_1ab267122_Sptr>);
inline jule::Str _1ad2e1155_ptr(_1ad2de670_typeCoder*, jule::Ptr<_1ab26a8d9_Ptr>);
inline jule::Str _1ad2e1496_enumDecl(_1ad2de670_typeCoder*, jule::Ptr<_1ab133890_Enum>);
inline jule::Str _1ad2e17d7_typeEnumDecl(_1ad2de670_typeCoder*, jule::Ptr<_1ab13509a_TypeEnum>);
inline jule::Str _1ad2e1b28_asSlice(_1ad2de670_typeCoder*, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Str _1ad2e1e69_slice(_1ad2de670_typeCoder*, jule::Ptr<_1ab267ae5_Slc>);
inline jule::Str _1ad2e22aa_mapType(_1ad2de670_typeCoder*, jule::Ptr<_1ab269289_Map>);
inline jule::Str _1ad2e25eb_traitIdent(_1ad2de670_typeCoder*, jule::Str);
inline jule::Str _1ad2e293c_traitDecl(_1ad2de670_typeCoder*, jule::Ptr<_1ab131195_Trait>);
inline jule::Str _1ad2e2c7d_structure(_1ad2de670_typeCoder*, jule::Ptr<_1ab10803a_Struct>);
inline jule::Str _1ad2e30be_structureIns(_1ad2de670_typeCoder*, jule::Ptr<_1ab10acb8_StructIns>);
inline jule::Str _1ad2e3410_array(_1ad2de670_typeCoder*, jule::Ptr<_1ab269e16_Arr>);
inline jule::Str _1ad2e3a92_paramIns(_1ad2de670_typeCoder*, jule::Ptr<_1ab11ed54_ParamIns>*);
inline void _1ad2e4246_funcInsResult(_1ad2de670_typeCoder*, _1d7ad2eb1_StrBuilder*, jule::Ptr<_1ab120d00_FnIns>*);
inline jule::Str _1ad2e4587_anonFunc(_1ad2de670_typeCoder*, jule::Ptr<_1ab120d00_FnIns>);
inline jule::Str _1ad2e48c8_func(_1ad2de670_typeCoder*, jule::Ptr<_1ab120d00_FnIns>);
inline jule::Str _1ad2e4c19_kind(_1ad2de670_typeCoder*, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Ptr<_1ad2e7447_resultCoder> static__1ad2e7920_new(jule::Ptr<_1ad2de670_typeCoder>*);
inline void _1ad2e7c83_ptr(_1ad2e7447_resultCoder*, _1d7ad2eb1_StrBuilder*, jule::Ptr<_1ab26a8d9_Ptr>);
inline void _1ad2e80e6_sptr(_1ad2e7447_resultCoder*, _1d7ad2eb1_StrBuilder*, jule::Ptr<_1ab267122_Sptr>);
inline void _1ad2e8459_mapType(_1ad2e7447_resultCoder*, _1d7ad2eb1_StrBuilder*, jule::Ptr<_1ab269289_Map>);
inline void _1ad2e87bc_slice(_1ad2e7447_resultCoder*, _1d7ad2eb1_StrBuilder*, jule::Ptr<_1ab267ae5_Slc>);
inline void _1ad2e8b30_arr(_1ad2e7447_resultCoder*, _1d7ad2eb1_StrBuilder*, jule::Ptr<_1ab269e16_Arr>);
inline void _1ad2e8e93_func(_1ad2e7447_resultCoder*, _1d7ad2eb1_StrBuilder*, jule::Ptr<_1ab120d00_FnIns>);
inline void _1ad2e9306_tup(_1ad2e7447_resultCoder*, _1d7ad2eb1_StrBuilder*, jule::Ptr<_1ab2686d9_Tuple>);
inline void _1ad2e9669_codeMut(_1ad2e7447_resultCoder*, _1d7ad2eb1_StrBuilder*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline void _1ad2e99cc_codeMut1(_1ad2e7447_resultCoder*, _1d7ad2eb1_StrBuilder*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Str _1ad2e9cda_code(_1ad2e7447_resultCoder*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Str _1bd6ed057_Name(_1bd6ed211_Flag*);
inline jule::Str _1bd6ed4ec_What(_1bd6ed211_Flag*);
inline void _1bd6ed640_Reset(_1bd6ed211_Flag*);
inline jule::I32 _1bd6ed783_Short(_1bd6ed211_Flag*);
inline jule::Str _1bd7016a9_Name(_1bd701a72_Flag*);
inline jule::Str _1bd7017ec_What(_1bd701a72_Flag*);
inline void _1bd701d5d_Reset(_1bd701a72_Flag*);
inline jule::I32 _1bd701ea1_Short(_1bd701a72_Flag*);
inline jule::Str _1bd704da5_Name(_1bd70526d_Flag*);
inline jule::Str _1bd704ee8_What(_1bd70526d_Flag*);
inline void _1bd705559_Reset(_1bd70526d_Flag*);
inline jule::I32 _1bd70569c_Short(_1bd70526d_Flag*);
inline jule::Str _1bd7085e5_Name(_1bd7089ad_Flag*);
inline jule::Str _1bd708738_What(_1bd7089ad_Flag*);
inline void _1bd708c99_Reset(_1bd7089ad_Flag*);
inline jule::I32 _1bd708ddc_Short(_1bd7089ad_Flag*);
inline jule::Str _1bd70bce1_Name(_1bd70c1a9_Flag*);
inline jule::Str _1bd70be34_What(_1bd70c1a9_Flag*);
inline void _1bd70c495_Reset(_1bd70c1a9_Flag*);
inline jule::I32 _1bd70c5d8_Short(_1bd70c1a9_Flag*);
inline jule::Ptr<_1ad4c4b85_FlagSet> static__1ad4c4e71_New(void);
inline jule::Trait<_1ad4c30d4_CommonFlag> _1ad4c53e4_FindFlag(_1ad4c4b85_FlagSet*, jule::Str);
inline jule::Trait<_1ad4c30d4_CommonFlag> _1ad4c5735_FindFlagShort(_1ad4c4b85_FlagSet*, jule::I32);
inline jule::Exceptional<jule::Slice<jule::Str>> _1ad4c5d0c_Parse(_1ad4c4b85_FlagSet*, jule::Slice<jule::Str>);
inline jule::Ptr<_1bd70c1a9_Flag> _1bd779149_addFlagCommon(_1ad4c4b85_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1bd7089ad_Flag> _1bd78130a_addFlagCommon(_1ad4c4b85_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1bd777389_AddVar(_1ad4c4b85_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1bd77e58e_AddVar(_1ad4c4b85_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
inline __jule_tuple_i64__jule_tuple_bool _1bd71ea5c_parseInteger(_1ad4c7616_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1bd727290_parseInteger(_1ad4c7616_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1ad4c7e30_getData(_1ad4c7616_argParser*);
inline jule::VoidExceptional _1ad4c81a5_processFlag(_1ad4c7616_argParser*, jule::Trait<_1ad4c30d4_CommonFlag>*);
inline jule::VoidExceptional _1ad4c845d_singleDash(_1ad4c7616_argParser*, jule::Str*);
inline jule::VoidExceptional _1ad4c8716_doubleDash(_1ad4c7616_argParser*, jule::Str*);
inline jule::VoidExceptional _1ad4c8914_tryArg(_1ad4c7616_argParser*);
inline jule::VoidExceptional _1ad4c8b12_parse(_1ad4c7616_argParser*);
inline jule::Ptr<_1ad2ce8b3_ObjectCoder> static__1ad2cecae_New(jule::Ptr<_1ac9c51db_IR>*, _1ad2ccd9a_SerializationInfo);
inline void _1ad2d0067_write(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Str);
inline void _1ad2d0265_addIndent(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2d0463_doneIndent(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2d0661_indent(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline jule::I64 _1ad2d09a2_findAnyType(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::I64 _1ad2d0ce3_pushAnyType(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline void _1ad2d109b_pushResultIns(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab120d00_FnIns>*);
inline void _1ad2d1354_pushResult(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab11cdeb_Fn>*);
inline jule::I64 _1ad2d1750_findTypeOffsetS(_1ad2ce8b3_ObjectCoder*, jule::Ptr<_1ab131195_Trait>, jule::Ptr<_1ab10acb8_StructIns>);
inline jule::I64 _1ad2d1b4b_findTypeOffset(_1ad2ce8b3_ObjectCoder*, jule::Ptr<_1ab131195_Trait>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline void _1ad2d1eae_pushAndWriteMaskMapper(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab131195_Trait>, jule::Ptr<_1ab131195_Trait>);
inline void _1ad2d2267_locInfo(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab0c1e7c_Token>*);
inline void _1ad2d2465_head(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2d2663_links(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2d291b_prepareStructure(_1ad2ce8b3_ObjectCoder*, jule::Ptr<_1ab10803a_Struct>*);
inline void _1ad2d2b19_prepareStructures(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2d2dc2_iterPackages(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Fn<void(jule::Ptr<_1ab187b14_Package>*)>);
inline void _1ad2d30c0_buildTraitMap(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2d32bd_traitDecls(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2d3576_structurePlainDecl(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab10803a_Struct>*);
inline void _1ad2d3774_structurePlainDecls(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2d3a2c_fieldDecl(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab10a218_FieldIns>*);
inline void _1ad2d3cd5_structureDestructor(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab10acb8_StructIns>*);
inline void _1ad2d4148_structureOperatorEq(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Str*, jule::Ptr<_1ab10acb8_StructIns>*);
inline void _1ad2d44ab_structureOperatorNotEq(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Str*, jule::Ptr<_1ab10acb8_StructIns>*);
inline void _1ad2d48c9_structureOperator(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Str*, jule::Ptr<_1ab120d00_FnIns>*, jule::Str);
inline void _1ad2d4b82_structureOperators(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab10acb8_StructIns>*);
inline void _1ad2d4e3a_structureInsDecl(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab10acb8_StructIns>*);
inline void _1ad2d51e3_structureDecl(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab10803a_Struct>*);
inline void _1ad2d53e1_structureDecls(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2d55de_structureMethodDecls(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2d5897_paramsDecls(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Slice<jule::Ptr<_1ab11ed54_ParamIns>>*);
inline void _1ad2d5c0a_funcHead(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab120d00_FnIns>*, jule::Bool);
inline void _1ad2d606d_funcDeclIns(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab120d00_FnIns>*, jule::Bool);
inline void _1ad2d63d1_funcDecl(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab11cdeb_Fn>*, jule::Bool);
inline void _1ad2d67ee_funcDeclTrait(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab131195_Trait>*, jule::Ptr<_1ab11cdeb_Fn>*, jule::Bool);
inline void _1ad2d69ec_funcDecls(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2d6d60_traitDataTypeMethods(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab131195_Trait>*, jule::Ptr<_1ab131195_Trait>*);
inline void _1ad2d705d_traitDataTypes(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2d7316_paramIns(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab11ed54_ParamIns>*);
inline void _1ad2d75be_paramsIns(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Slice<jule::Ptr<_1ab11ed54_ParamIns>>*);
inline void _1ad2d7932_varInitExpr(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab1c7a66_Var>*, jule::Fn<void(void)>);
inline void _1ad2d7bda_var(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab1c7a66_Var>);
inline void _1ad2d7e93_funcIns(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab120d00_FnIns>*);
inline void _1ad2d824b_func(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab11cdeb_Fn>*);
inline void _1ad2d85ae_funcTrait(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ad2cd472_traitHash>*, jule::Ptr<_1ab11cdeb_Fn>*);
inline void _1ad2d8922_traitWrapper(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab11cdeb_Fn>*, jule::Ptr<_1ad2cd472_traitHash>*);
inline void _1ad2d8b20_traitWrappers(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2d8e83_traitDataMethods(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab131195_Trait>*, jule::Ptr<_1ad2cd472_traitHash>*);
inline void _1ad2d92e6_traitData(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ad2cd472_traitHash>*, jule::Ptr<_1ab131195_Trait>*);
inline void _1ad2d94e4_traitDatas(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2d96e2_globals(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2d98e0_decls(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2d9b98_structureMethods(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab10acb8_StructIns>*);
inline void _1ad2d9e51_structureOstream(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab10acb8_StructIns>*);
inline void _1ad2da209_structureIns(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab10acb8_StructIns>*);
inline void _1ad2da4b2_structure(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab10803a_Struct>*);
inline void _1ad2da6b0_structures(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2da8ad_funcs(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2dab66_pushInit(jule::Ptr<_1ad2ce8b3_ObjectCoder>, jule::Ptr<_1ab187b14_Package>*);
inline void _1ad2dad64_initCaller(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2db062_end(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2db260_serializeHead(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline void _1ad2db45d_Serialize(jule::Ptr<_1ad2ce8b3_ObjectCoder>);
inline jule::Ptr<_1acaee26b_ObjectDeadCode> static__1acaee711_new(jule::Ptr<_1ac9c51db_IR>*);
inline jule::Bool _1bcee6b3c_isLive(jule::Ptr<_1acaee26b_ObjectDeadCode>, jule::Ptr<_1ab131195_Trait>*);
inline jule::Bool _1bceec68c_isLive(jule::Ptr<_1acaee26b_ObjectDeadCode>, jule::Ptr<_1ab120d00_FnIns>*);
inline jule::Bool _1bd002b9d_isLive(jule::Ptr<_1acaee26b_ObjectDeadCode>, jule::Ptr<_1ab10acb8_StructIns>*);
inline jule::Bool _1bd00a524_isLive(jule::Ptr<_1acaee26b_ObjectDeadCode>, jule::Ptr<_1ab1c7a66_Var>*);
inline void _1bcee7005_pushLive(jule::Ptr<_1acaee26b_ObjectDeadCode>, jule::Ptr<_1ab131195_Trait>);
inline void _1bceeca22_pushLive(jule::Ptr<_1acaee26b_ObjectDeadCode>, jule::Ptr<_1ab120d00_FnIns>);
inline void _1bd0038d5_pushLive(jule::Ptr<_1acaee26b_ObjectDeadCode>, jule::Ptr<_1ab10acb8_StructIns>);
inline void _1bd00a8dc_pushLive(jule::Ptr<_1acaee26b_ObjectDeadCode>, jule::Ptr<_1ab1c7a66_Var>);
inline void _1acb34867_setReferencesAsLive(jule::Ptr<_1acaee26b_ObjectDeadCode>, jule::Ptr<_1ab123eac_ReferenceStack>*);
inline void _1acb34b20_inits(jule::Ptr<_1acaee26b_ObjectDeadCode>, jule::Ptr<_1ab187b14_Package>*);
inline void _1acb34dc8_collectLivePackage(jule::Ptr<_1acaee26b_ObjectDeadCode>, jule::Ptr<_1ab187b14_Package>*);
inline void _1acb350c6_collectLive(jule::Ptr<_1acaee26b_ObjectDeadCode>);
inline void _1acb3537e_removeDeadGlobals(jule::Ptr<_1acaee26b_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ab1c7a66_Var>>*);
inline void _1acb35637_removeDeadFns(jule::Ptr<_1acaee26b_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ab11cdeb_Fn>>*);
inline void _1acb358e0_removeDeadStructs(jule::Ptr<_1acaee26b_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ab10803a_Struct>>*);
inline void _1acb35b98_removeDeadTraits(jule::Ptr<_1acaee26b_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ab131195_Trait>>*);
inline void _1acb35e51_removeDeadsFile(jule::Ptr<_1acaee26b_ObjectDeadCode>, jule::Ptr<_1ab224d9e_SymbolTable>*);
inline void _1acb36209_removeDeadsPackage(jule::Ptr<_1acaee26b_ObjectDeadCode>, jule::Ptr<_1ab187b14_Package>*);
inline void _1acb36407_removeDeads(jule::Ptr<_1acaee26b_ObjectDeadCode>);
inline void _1acb36605_elimanate(jule::Ptr<_1acaee26b_ObjectDeadCode>);
inline __jule_tuple_x_1ac9c51db_IR__jule_tuple_s_1d7b81cb8_Log static__1ac9c564d_Build(jule::Str, jule::I64);
inline void _1ac9c5b37_appendStructs(_1ac9c51db_IR*, jule::Ptr<_1ab187b14_Package>*, jule::Slice<jule::Ptr<_1ab10803a_Struct>>*);
inline jule::Slice<jule::Ptr<_1ab10803a_Struct>> _1ac9c5dbd_GetAllStructures(_1ac9c51db_IR*);
inline void _1ac9c6231_appendGlobals(_1ac9c51db_IR*, jule::Ptr<_1ab187b14_Package>*, jule::Slice<jule::Ptr<_1ab1c7a66_Var>>*);
inline jule::Slice<jule::Ptr<_1ab1c7a66_Var>> _1ac9c64b7_GetAllGlobals(_1ac9c51db_IR*);
inline void _1ac9c66b5_Order(_1ac9c51db_IR*);
inline jule::Str _1ab10b13c_Str(_1ab10acb8_StructIns*);
inline jule::Bool _1ab10b47d_Equal(jule::Ptr<_1ab10acb8_StructIns>, jule::Ptr<_1ab25aa1c_TypeKind>);
inline jule::Bool _1ab10b934_Same(_1ab10acb8_StructIns*, jule::Ptr<_1ab10acb8_StructIns>);
inline jule::Ptr<_1ab11cdeb_Fn> _1ab10bd30_FindMethod(_1ab10acb8_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab10a218_FieldIns> _1ab10c171_FindField(_1ab10acb8_StructIns*, jule::Str);
inline jule::Ptr<_1ab1c7a66_Var> _1ab10c4b2_FindStatic(_1ab10acb8_StructIns*, jule::Str);
inline jule::Ptr<_1d7c40e54_Cmd> static__1d7c41372_New(jule::Str);
inline jule::VoidExceptional _1d7c41570_Spawn(_1d7c40e54_Cmd*);
inline jule::Exceptional<jule::I64> _1d7c41a04_Wait(_1d7c40e54_Cmd*);
inline jule::VoidExceptional _1d7c91933_spawn(_1d7c40e54_Cmd*);
inline jule::Exceptional<jule::I64> _1d7c91db7_wait(_1d7c40e54_Cmd*);
inline void _2024a1a74_Free(void*);
inline jule::Str _2024d292e_BytePtrToStr(jule::U8*);
inline jule::I64 _2014c49aa_GetLastErrno(void);
inline jule::I64 _2024e2202_Fcntl(jule::I64, jule::I64, jule::I64);
inline jule::I64 _2024e2576_Stat(jule::U8*, struct stat*);
inline jule::I64 _2024e29a5_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _2024e2d29_Getcwd(jule::U8*, jule::U64);
inline DIR* _2024e3324_Opendir(jule::U8*);
inline struct dirent* _2024e35dd_Readdir(DIR*);
inline jule::I64 _2024e38a7_Closedir(DIR*);
inline jule::I64 _2024e42ae_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _2024e4578_Rmdir(jule::U8*);
inline jule::I64 _2024e4842_Unlink(jule::U8*);
inline jule::I64 _2024e9eda_Read(jule::I64, void*, jule::U64);
inline jule::I64 _2024ea381_Close(jule::I64);
inline jule::I64 _2024ea7b0_Write(jule::I64, void*, jule::U64);
inline void _2024ea9e1_Exit(jule::I64);
inline jule::Str _2025d21c1_Str(jule::U8*, jule::I64);
inline jule::Slice<jule::U8> _1ad554e13_Slice(jule::U8*, jule::I64);
inline jule::Slice<jule::U8> _2025de4ec_StrBytes(jule::Str);
inline jule::Str _2025de7b6_BytesStr(jule::Slice<jule::U8>);
inline jule::Str _2025dea80_StrFromBytes(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _2025ded49_BytesFromStr(jule::Str);
inline jule::I64 _2025e0696_getLastOsError(void);
inline jule::Slice<jule::Str> _20261914d_Args(void);
inline jule::Exceptional<jule::Str> _2026195e3_WorkingDir(void);
inline jule::Exceptional<jule::Str> _20261a03e_getwd(void);
inline jule::Bool _2038679a5_IsLetter(jule::I32);
inline jule::Bool _2038d0567_is16(jule::Slice<_2038cd7c9_Range16>, jule::U16);
inline jule::Bool _2038d08db_is32(jule::Slice<_2038cdd07_Range32>, jule::U32);
inline jule::Bool _2038d11e4_isExcludingLatin(jule::Ptr<_2038ce2ad_RangeTable>, jule::I32);
inline jule::Bool _2038d14ad_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _1d7a7c884_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _1d7a7cbc5_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _1d7a7ce8e_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _1d7a7dce7_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1d7a7e16b_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _1d7a7e6ee_RuneCountStr(jule::Str);
inline jule::Bool _1d7a7e9b8_RuneStart(jule::U8);
inline jule::I64 _1d7aa9d45_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _1d7abc671_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _1d7abca17_FindByteStr(jule::Str, jule::U8);
inline jule::I64 _1d7abcd8b_FindLastByteStr(jule::Str, jule::U8);
inline jule::Str _1d7abd144_Repeat(jule::Str, jule::I64);
inline jule::Bool _1d7abd5b7_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1d7abd93b_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _1d7abdde2_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1d7abe233_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _1d7abe662_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1d7ac0025_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1d7ac0399_FindLast(jule::Str, jule::Str);
inline jule::I64 _1d7ac1ae8_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _1d7ac2126_FindRune(jule::Str, jule::I32);
inline jule::I64 _1d7ac281e_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1d7ac30c2_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _1d7ac3446_Contains(jule::Str, jule::Str);
inline jule::Bool _1d7ac3eb3_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _1d7ac4337_Count(jule::Str, jule::Str);
inline jule::Str _1d7ac4821_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _1d7ac5514_trimLeft(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1d7ac5888_TrimLeft(jule::Str, jule::Str);
inline void _1d7ac1cb3_trimRight(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1d7ac649e_Trim(jule::Str, jule::Str);
inline jule::Str _1d7ac6823_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _1d7ade7a3_Clean(jule::Str);
inline jule::Str _1d7aded7a_FromSlash(jule::Str);
inline jule::Str _1d7ae0133_Join(jule::Slice<jule::Str>);
inline jule::Str _1d7ae03ec_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1d7ae06b6_Abs(jule::Str);
inline jule::Str _1d7ae0980_Base(jule::Str);
inline jule::Str _1d7ae0d26_Dir(jule::Str);
inline jule::Str _1d7ae10e0_VolumeName(jule::Str);
inline jule::Bool _1d7ae1ed1_IsPathSep(jule::U8);
inline jule::Bool _1d7ae22de_IsAbs(jule::Str);
inline jule::I64 _1d7ae25a8_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1d7ae28e9_abs(jule::Str);
inline jule::Str _1d7ae2bb3_join(jule::Slice<jule::Str>);
inline jule::I64 _2025256a8_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _1d7c87d58_AtoiBp(jule::U8*, jule::I64);
inline jule::Str _1d7c8c7b9_Itoa(jule::I64);
inline jule::Str _1d7c8cac7_Utoa(jule::U64);
inline jule::Slice<char*> _1d7c9112a_strSliceToCstrSlice(jule::Slice<jule::Str>*);
inline jule::I64 _1d7c9149e_execvp(jule::Str*, jule::Slice<jule::Str>*);
inline jule::VoidExceptional _1d7c916d0_setenv(jule::Slice<jule::Str>*);
inline jule::I64 _1d7c92659_processErrorFromCode(jule::I64);
inline jule::I64 _1d7c928ac_getLastProcessError(void);
inline void _1d7c931c6_Exit(jule::I64);
inline jule::Str _1d7c933d5_Executable(void);
inline jule::Bool _1d7b74abe_IsStdHeaderPath(jule::Str);
inline jule::Bool _1d7b74d77_IsValidHeaderExt(jule::Str);
inline jule::Bool _1d7b75141_IsValidCppExt(jule::Str);
inline jule::Str _1d7b8222a_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1d7b82538_argToStr(jule::Any);
inline jule::I64 _1d7b82802_findNextFmt(jule::Str);
inline jule::Str _1d7b82bba_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d7b83a34_IsTopDirective(jule::Str);
inline jule::Bool _1d7b84e86_IsWindows(jule::Str);
inline jule::Bool _1d7b85261_IsDarwin(jule::Str);
inline jule::Bool _1d7b8552a_IsLinux(jule::Str);
inline jule::Bool _1d7b8586b_IsI386(jule::Str);
inline jule::Bool _1d7b85b35_IsAmd64(jule::Str);
inline jule::Bool _1d7b85dee_IsArm64(jule::Str);
inline jule::Bool _1d7b861b8_IsUnix(jule::Str);
inline jule::Bool _1d7b8655e_Is32Bit(jule::Str);
inline jule::Bool _1d7b86828_Is64Bit(jule::Str);
inline void _1d7c946b1_init(void);
inline jule::I64 _1d8b60ca7_LeadingZeros64(jule::U64);
inline jule::I64 _1d8b61c0e_TrailingZeros(jule::U64);
inline jule::I64 _1d8b6266b_TrailingZeros32(jule::U32);
inline jule::I64 _1d8b62935_TrailingZeros64(jule::U64);
inline jule::I64 _1d8b683db_Len32(jule::U32);
inline jule::I64 _1d8b686a5_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1d8b69442_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1d8b6ac4b_Mul64(jule::U64, jule::U64);
inline jule::U32 _1d8a6ae59_F32Bits(jule::F32);
inline jule::F32 _1d8a6b267_F32FromBits(jule::U32);
inline jule::U64 _1d8a6b531_F64Bits(jule::F64);
inline jule::F64 _1d8a6b872_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _1d8a6de29_Frexp(jule::F64);
inline jule::F64 _1d8b7303e_NaN(void);
inline jule::Bool _1d8b7334c_IsNaN(jule::F64);
inline jule::F64 _1d8b73616_Inf(jule::I64);
inline jule::Bool _1d8b73957_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _1d8b73c21_normalize(jule::F64);
inline jule::F64 _1d8b756e5_Log(jule::F64);
inline jule::F64 _1d8b760ca_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1d8b7ccc4_Modf(jule::F64);
inline jule::F64 _1d8b7d5cc_Log2(jule::F64);
inline jule::Str _1d8ba7c77_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1d8ba8360_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1d8ba8a69_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1d8ba6a56_floatInfo*);
inline jule::Slice<jule::U8> _1d8ba9240_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1d8ba76e4_decimalSlice, jule::I64, jule::U8);
inline void _1d8ba9691_roundShortest(_1d8bba55e_decimal*, jule::U64, jule::I64, _1d8ba6a56_floatInfo*);
inline jule::Slice<jule::U8> _1d8ba9c35_fmtE(jule::Slice<jule::U8>, jule::Bool, _1d8ba76e4_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1d8baa21e_fmtF(jule::Slice<jule::U8>, jule::Bool, _1d8ba76e4_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1d8baa890_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1d8ba6a56_floatInfo*);
inline jule::Slice<jule::U8> _1d8bab099_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1d8ba6a56_floatInfo*);
inline jule::I64 _1d8bab41d_min(jule::I64, jule::I64);
inline jule::I64 _1d8bab792_max(jule::I64, jule::I64);
inline jule::U8 _1d8bac3ca_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__1d8106391_ConvError _1d8bac84d_parseUint(jule::Str*, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1d8bacc7c_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1d8bad233_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _1d8bade26_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1d8bae366_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1d8bb11ae_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1d8bb14bc_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1d8bb1786_readFloat(jule::Str*);
inline __jule_tuple_f64__jule_tuple_bool _1d8bb3315_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1d8bb3744_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__1d8106391_ConvError _1d8bb3cd8_atofHex(_1d8ba6a56_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1d8106391_ConvError _1d8bb41b2_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1d8106391_ConvError _1d8bb447b_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1d8106391_ConvError _1d8bb4800_parseFloatPrefix(jule::Str*, jule::I64);
inline jule::Exceptional<jule::F64> _1d8bb4b74_ParseFloat(jule::Str, jule::I64);
inline void _1d8bb547c_ryuFtoaFixed32(_1d8ba76e4_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _1d8bb5922_ryuFtoaFixed64(_1d8ba76e4_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _1d8bb626e_formatDecimal(_1d8ba76e4_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1d8bb6747_ryuFtoaShortest(_1d8ba76e4_decimalSlice*, jule::U64, jule::I64, _1d8ba6a56_floatInfo*);
inline jule::I64 _1d8bb6a11_mulByLog2Log10(jule::I64);
inline jule::I64 _1d8bb6cca_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1d8bb7209_computeBounds(jule::U64, jule::I64, _1d8ba6a56_floatInfo*);
inline void _1d8bb7825_ryuDigits(_1d8ba76e4_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1d8bb7e96_ryuDigits32(_1d8ba76e4_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1d8bb83c5_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1d8bb8804_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1d8bb8b78_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _1d8bb8e42_divmod1e9(jule::U64);
inline void _1d8bbbdac_trim(_1d8bba55e_decimal*);
inline void _1d8bbc198_rightShift(_1d8bba55e_decimal*, jule::U64);
inline jule::Bool _1d8bbc64e_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str*);
inline void _1d8bbc907_leftShift(_1d8bba55e_decimal*, jule::U64);
inline jule::Bool _1d8bbcc7b_shouldRoundUp(_1d8bba55e_decimal*, jule::I64);
inline jule::Str _1d8bbe40e_FmtUint(jule::U64, jule::I64);
inline jule::Str _1d8bbe7c7_FmtInt(jule::I64, jule::I64);
inline jule::Str _1d8bbea91_Itoa(jule::I64);
inline jule::Str _1d8bbedd2_small(jule::I64);
inline jule::Bool _1d8bc019b_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _1d8bc0740_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1d8bc1c3b_RealKindOf(jule::Str);
inline jule::I64 _1d8bc2005_BitsizeOf(jule::Str);
inline jule::Str _1d8bc2346_IntFromBits(jule::I64);
inline jule::Str _1d8bc2610_UintFromBits(jule::I64);
inline jule::Str _1d8bc28c9_FloatFromBits(jule::I64);
inline jule::Bool _1d8bc3523_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1d8bc37dc_BitsizeOfFloat(jule::F64);
inline jule::I64 _1d8bc3aa6_BitsizeOfInt(jule::I64);
inline jule::I64 _1d8bc3d70_BitsizeOfUint(jule::U64);
inline void _1d8bc3ee6_UpdateTarget(void);
inline void _1d8bc416c_init(void);
inline jule::I64 _1d8bc7ec8_MinI(jule::Str);
inline jule::I64 _1d8bc82d6_MaxI(jule::Str);
inline jule::U64 _1d8bc85a0_MaxU(jule::Str);
inline jule::F64 _1d8bc87d1_Min(jule::Str);
inline jule::F64 _1d8bc8a9a_Max(jule::Str);
inline jule::Bool _1d8bc901d_IsI8Compatible(jule::Str);
inline jule::Bool _1d8bc932b_IsI16Compatible(jule::Str);
inline jule::Bool _1d8bc95e5_IsI32Compatible(jule::Str);
inline jule::Bool _1d8bc9936_IsI64Compatible(jule::Str);
inline jule::Bool _1d8bc9c00_IsU8Compatible(jule::Str);
inline jule::Bool _1d8bc9eb9_IsU16Compatible(jule::Str);
inline jule::Bool _1d8bca283_IsU32Compatible(jule::Str);
inline jule::Bool _1d8bca629_IsU64Compatible(jule::Str);
inline jule::Bool _1d8bca8e3_IsF32Compatible(jule::Str);
inline jule::Bool _1d8bcabac_IsF64Compatible(jule::Str);
inline jule::Bool _1d8bcb031_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1d8bcb2ea_IsI16Greater(jule::Str);
inline jule::Bool _1d8bcb5b4_IsI32Greater(jule::Str);
inline jule::Bool _1d8bcb87d_IsI64Greater(jule::Str);
inline jule::Bool _1d8bcbb47_IsU16Greater(jule::Str);
inline jule::Bool _1d8bcc0ba_IsU32Greater(jule::Str);
inline jule::Bool _1d8bcc384_IsU64Greater(jule::Str);
inline jule::Bool _1d8bcc64d_IsF32Greater(jule::Str);
inline jule::Bool _1d8bcc917_IsF64Greater(jule::Str);
inline jule::Bool _1d8bccc8b_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1d8bcdce2_IsSigInt(jule::Str);
inline jule::Bool _1d8bce100_IsUnsigInt(jule::Str);
inline jule::Bool _1d8bce3b9_IsInt(jule::Str);
inline jule::Bool _1d8bce70a_IsFloat(jule::Str);
inline jule::Bool _1d8bce9c4_IsNum(jule::Str);
inline jule::Bool _1d8bcec8d_IsSigNum(jule::Str);
inline void _1d8bd90d8_lshiftUnsig(_1d8bd00bd_Const*, _1d8bd00bd_Const*);
inline void _1d8bd9418_rshiftUnsig(_1d8bd00bd_Const*, _1d8bd00bd_Const*);
inline jule::Bool _1ab0c26b9_IsUnaryOp(jule::U64);
inline jule::Bool _1ab0c29c7_IsBinOp(jule::U64);
inline jule::Bool _1ab0c30d2_IsStr(jule::Str);
inline jule::Bool _1ab0c339b_IsRawStr(jule::Str);
inline jule::Bool _1ab0c3665_IsRune(jule::Str);
inline jule::Bool _1ab0c408e_IsFloat(jule::Str);
inline jule::Bool _1ab0c4358_IsNum(jule::Str);
inline jule::Bool _1ab0c48db_IsIgnoreIdent(jule::Str);
inline jule::Bool _1ab0c4ba5_IsAnonIdent(jule::Str);
inline jule::Bool _1ab0c5238_IsSpace(jule::I32);
inline jule::Bool _1ab0c56ab_IsLetter(jule::I32);
inline jule::Bool _1ab0c5c3e_IsDecimal(jule::U8);
inline jule::Bool _1ab0c6008_IsBinary(jule::U8);
inline jule::Bool _1ab0c62c2_IsOctal(jule::U8);
inline jule::Bool _1ab0c658b_IsHex(jule::U8);
inline jule::Bool _1ab0c6855_IsAssign(jule::U64);
inline jule::Bool _1ab0c6b1e_IsPostfixOp(jule::U64);
inline jule::Bool _1ab0c6dd8_IsAssignOp(jule::U64);
inline jule::Ptr<_1ab0c7746_File> _1ab0c8add_NewFileSet(jule::Str);
inline _1d7b81cb8_Log _1ab0ca639_makeErr(jule::I64, jule::I64, jule::Ptr<_1ab0c7746_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ab0caa02_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1ab0cad76_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ab0cb23e_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ab0cb5b3_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ab0cb937_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ab0cbcab_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ab0cc240_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ab0cc509_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _1ab0cc7c3_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _1ab0ccb47_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1ab0ccebb_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1ab0cd340_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1ab0cd6b4_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1ab0cda38_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ab0cdeab_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _1ab0ce275_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _1ab0ce5e9_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ab0ce8b3_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1ab0ceb7c_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1ab0cee46_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _1ab0d0210_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_1d7b81cb8_Log> _1ab0d5204_Lex(jule::Ptr<_1ab0c7746_File>, jule::I64);
inline jule::Bool _1ab1a1875_FindModuleFile(jule::Slice<jule::Ptr<_202527127_DirEntry>>*);
inline jule::Str _1ab1a1b2d_FindModuleFileDeep(jule::Str);
inline jule::Slice<_1d7b81cb8_Log> _1ab1a1de7_CheckModuleFile(jule::Str*);
inline jule::Bool _1ab1a2777_IsPub(jule::Str);
inline jule::Bool _1ab1e1e04_IsAscii(jule::I32);
inline jule::I32 _1ab20e196_ToRune(jule::Str);
inline jule::Str _1ab20e44e_ToRawStr(jule::Str);
inline jule::Str _1ab20e790_ToStr(jule::Str);
inline __jule_tuple_u8__jule_tuple_bool _1ab20ea59_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1ab20ed9a_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::Slice<jule::U8> _1ab21021e_strEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::I64 _1ab33dd75_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64);
inline jule::Slice<jule::U8> _1ab33e1e9_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _1ab33e4d5_FmtByDefault(_1d7ad2eb1_StrBuilder*, jule::Any*);
inline void _1ab33e903_applyFmtByDefault(_1d7ad2eb1_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline void _1ab33ed54_applyFmt(jule::Slice<jule::U8>*, _1d7ad2eb1_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline jule::Slice<jule::U8> _1ab340195_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1ab3421b9_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ab1230cc_parameterUsesGenerics(jule::Ptr<_1ab11ed54_ParamIns>*, jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>>*);
inline jule::Ptr<_1ab262bde_TypeSymbol> _1ab12582c_buildType(jule::Ptr<_1ab0d7448_TypeDecl>);
inline jule::Ptr<_1ab22b36c_Value> _1ab125b3a_buildExpr(jule::Ptr<_1ab0db77c_Expr>);
inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab125e04_buildTypeAlias(jule::Ptr<_1ab0edcab_TypeAliasDecl>);
inline jule::Ptr<_1ab105147_Field> _1ab126245_buildField(jule::Ptr<_1ab102584_FieldDecl>);
inline jule::Slice<jule::Ptr<_1ab105147_Field>> _1ab12650e_buildFields(jule::Slice<jule::Ptr<_1ab102584_FieldDecl>>*);
inline jule::Ptr<_1ab10803a_Struct> _1ab1267c8_buildStruct(jule::Ptr<_1ab102e7a_StructDecl>);
inline jule::Ptr<_1ab11b427_Param> _1ab126a92_buildParam(jule::Ptr<_1ab0e7ba6_ParamDecl>);
inline jule::Slice<jule::Ptr<_1ab11b427_Param>> _1ab126e38_buildParams(jule::Slice<jule::Ptr<_1ab0e7ba6_ParamDecl>>*);
inline jule::Ptr<_1ab11ab96_RetType> _1ab127202_buildRetType(jule::Ptr<_1ab0da33b_RetTypeDecl>);
inline jule::Ptr<_1ab11cdeb_Fn> _1ab1274bb_buildFunc(jule::Ptr<_1ab0e9108_FnDecl>);
inline jule::Slice<jule::Ptr<_1ab11cdeb_Fn>> _1ab127785_buildMethods(jule::Slice<jule::Ptr<_1ab0e9108_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1ab262bde_TypeSymbol>> _1ab127a4e_buildTraitInherits(jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>>*);
inline jule::Ptr<_1ab131195_Trait> _1ab127d18_buildTrait(jule::Ptr<_1ab1036b7_TraitDecl>);
inline jule::Ptr<_1ab132d23_EnumItem> _1ab1280d2_buildEnumItem(jule::Ptr<_1ab10076e_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1ab132d23_EnumItem>> _1ab12839b_buildEnumItems(jule::Slice<jule::Ptr<_1ab10076e_EnumItemDecl>>*);
inline jule::Ptr<_1ab133890_Enum> _1ab12881e_buildEnum(jule::Ptr<_1ab101330_EnumDecl>);
inline jule::Ptr<_1ab1349c3_TypeEnumItem> _1ab128ad8_buildTypeEnumItem(jule::Ptr<_1ab101b5a_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1ab1349c3_TypeEnumItem>> _1ab128da2_buildTypeEnumItems(jule::Slice<jule::Ptr<_1ab101b5a_TypeEnumItemDecl>>*);
inline jule::Ptr<_1ab13509a_TypeEnum> _1ab12916b_buildTypeEnum(jule::Ptr<_1ab1022ba_TypeEnumDecl>);
inline jule::Ptr<_1ab1c7a66_Var> _1ab129435_buildVar(jule::Ptr<_1ab0ea1d6_VarDecl>);
inline jule::Slice<jule::Ptr<_1ab1c7a66_Var>> _1ab1296ee_buildVars(jule::Slice<jule::Ptr<_1ab0ea1d6_VarDecl>>);
inline jule::Ptr<_1ab15d37b_Impl> _1ab1299b8_buildImpl(jule::Ptr<_1ab103d27_Impl>);
inline jule::Ptr<_1ab22a228_Data> _1ab158d6b_buildAsComptimeMethodData(jule::Ptr<_1ab120d00_FnIns>*);
inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab159179_findComptimePackage(jule::Ptr<_1ab1a567b_Sema>*);
inline jule::Ptr<_1ab22a228_Data> _1ab1594ed_buildComptimeTypeInfoData(jule::Ptr<_1ab1a567b_Sema>*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Ptr<_1ab22a228_Data> _1ab15972e_buildComptimeValue(jule::Ptr<_1ab22a228_Data>*);
inline jule::Bool _1ab15c6ee_matchConstraint(jule::Str*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab15ca0c_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1ab16aab4_scopeChecker> _1ab16058c_newScopeCheckerBase(jule::Ptr<_1ab1a567b_Sema>*, jule::Ptr<_1ab120d00_FnIns>);
inline jule::Ptr<_1ab16aab4_scopeChecker> _1ab160955_newScopeChecker(jule::Ptr<_1ab1a567b_Sema>*, jule::Ptr<_1ab120d00_FnIns>);
inline jule::Ptr<_1ab16961d_scopeLabel> _1ab160cc9_findLabelParent(jule::Str*, jule::Ptr<_1ab16aab4_scopeChecker>);
inline jule::Bool _1ab161192_modelIsGotoScope(jule::Any, jule::Ptr<_1ab1637b0_Scope>*);
inline jule::Bool _1ab161516_stmtIsGotoScope(jule::Any*, jule::Ptr<_1ab1637b0_Scope>*);
inline jule::I64 _1ab16188a_countMatchType(jule::Ptr<_1ab1678e6_Match>*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Slice<jule::Ptr<_1ab22a228_Data>> _1ab161b54_getDatasFromTupleData(jule::Ptr<_1ab22a228_Data>*);
inline jule::Bool _1ab162517_checkMut(jule::Ptr<_1ab1a567b_Sema>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Bool _1ab162a01_checkAssign(jule::Ptr<_1ab1a567b_Sema>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Bool _1ab162cba_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1ab163084_isValidStForNextSt(jule::Any*);
inline jule::Bool _1ab16334d_stmtIsDef(jule::Any*);
inline jule::U64 _1ab17cb81_removeEqFromOp(jule::U64);
inline jule::Ptr<_1ab1c7a66_Var> _1ab1821c4_findVarInPackage(jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab182647_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ab10803a_Struct> _1ab182a76_findStructInPackage(jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ab11cdeb_Fn> _1ab18302c_findFnInPackage(jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ab131195_Trait> _1ab18336d_findTraitInPackage(jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1ab133890_Enum> _1ab1836e2_findEnumInPackage(jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1ab13509a_TypeEnum> _1ab183a66_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>*, jule::Str*);
inline jule::Any _1ab1840a5_defByIdentPackage(jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1ab18a0de_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1ab1a2d1b_isValidModelForRef(jule::Any*);
inline _1d7b81cb8_Log _1ab1a3349_compilerErr(jule::Ptr<_1ab0c1e7c_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ab1a36bd_impIsLookupable(jule::Ptr<_1ab184bdd_ImportInfo>*, jule::Str*);
inline void _1ab1a3976_appendRetVars(jule::Slice<jule::Ptr<_1ab1c7a66_Var>>*, jule::Ptr<_1ab120d00_FnIns>*);
inline void _1ab1a3c62_appendParamVars(jule::Slice<jule::Ptr<_1ab1c7a66_Var>>*, jule::Ptr<_1ab120d00_FnIns>*);
inline void _1ab1a404d_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>>*, jule::Ptr<_1ab120d00_FnIns>*);
inline jule::Ptr<_1ab224d9e_SymbolTable> _1ab1a43c2_findFile(jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>*, jule::Ptr<_1ab0c7746_File>*);
inline void _1ab1a4878_pushSuggestion(_1d7b81cb8_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1ab1c5d50_pushImplemented(jule::Ptr<_1ab131195_Trait>, jule::Ptr<_1ab10803a_Struct>*);
inline void _1ab1c613b_pushImplements(jule::Ptr<_1ab10803a_Struct>*, jule::Ptr<_1ab131195_Trait>);
inline jule::Bool _1ab2109b1_traitHasReferenceReceiver(jule::Ptr<_1ab131195_Trait>*);
inline jule::Bool _1ab210d46_floatAssignable(jule::Str*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Bool _1ab2111ba_sigAssignable(jule::Str, jule::Ptr<_1ab22a228_Data>*);
inline jule::Bool _1ab211583_unsigAssignable(jule::Str, jule::Ptr<_1ab22a228_Data>*);
inline jule::Bool _1ab211907_intAssignable(jule::Str, jule::Ptr<_1ab22a228_Data>*);
inline void _1ab21d0b7_checkMutRiskOfStructLit(jule::Ptr<_1ab1a567b_Sema>*, jule::Ptr<_1ab110e55_StructLitExprModel>*);
inline jule::Ptr<_1ab25aa1c_TypeKind> _1ab223b5b_lenKind(void);
inline jule::Bool _1ab223ead_isGoodValueToInfer(jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab0d6865_Directive> _1ab253a8c_findDirective(jule::Slice<jule::Ptr<_1ab0d6865_Directive>>*, jule::Str);
inline jule::Any _1ab253e55_findBuiltinsImport(jule::Str*, jule::Ptr<_1ab184bdd_ImportInfo>);
inline void _1ab254186_fitBitsize(jule::Ptr<_1ab22a228_Data>*);
inline void _1ab2544b6_makeStructLitAlloc(jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab110e55_StructLitExprModel>*);
inline jule::Ptr<_1ab1c7a66_Var> _1ab25483a_buildErrorVar(jule::Ptr<_1ab1637b0_Scope>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Any _1ab254bae_findBuiltinsSema(jule::Str*, jule::Ptr<_1ab1a567b_Sema>);
inline jule::Bool _1ab254e78_isOkForShifting(jule::Ptr<_1ab22a228_Data>*);
inline jule::Bool _1ab255352_isInstancedStruct(jule::Ptr<_1ab10acb8_StructIns>);
inline jule::Bool _1ab2556c6_isPtrArithmeticCompatible(jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>*);
inline void _1ab2559b2_applyCastKindModel(jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline void _1ab255c9d_applyCastKind(jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Ptr<_1ab22a228_Data> _1ab255eac_buildVoidData(void);
inline jule::Str _1ab256276_checkDataForIntegerIndexing(jule::Ptr<_1ab22a228_Data>*);
inline void _1ab256562_applyCastModelByEnum(jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab133890_Enum>);
inline void _1ab25684d_castConstByType(jule::Str*, jule::Ptr<_1ab22a228_Data>*);
inline void _1ab256ce3_updateModelToGenericIns(jule::Any*, jule::Ptr<_1ab120d00_FnIns>*);
inline jule::Bool _1ab257167_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1ab0d7d50_SubIdentTypeDecl>*);
inline jule::Str _1ab257431_constoa(jule::Ptr<_1d8bd00bd_Const>*);
inline jule::Ptr<_1ab22a228_Data> _1ab2577a5_evalEnumStatic(jule::Ptr<_1ab133890_Enum>*, jule::Ptr<_1ab132d23_EnumItem>*);
inline jule::Ptr<_1ab110e55_StructLitExprModel> _1ab257a6e_isLitBased(jule::Any*);
inline void _1ab257d5a_makeImplicitDeref(jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab0c1e7c_Token>);
inline void _1bc58a17b_updateRefer(jule::Ptr<_1ab123eac_ReferenceStack>, jule::Ptr<_1ab120d00_FnIns>*, jule::Ptr<_1ab120d00_FnIns>*);
inline jule::Bool _1ab276274_kindUsesGenerics(jule::Ptr<_1ab25aa1c_TypeKind>*, jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>>*);
inline jule::Bool _1ab27663c_hasDirective(jule::Slice<jule::Ptr<_1ab0d6865_Directive>>*, jule::Str);
inline jule::Bool _1ab276906_canGetPtr(jule::Ptr<_1ab22a228_Data>*);
inline jule::Bool _1ab276c47_isValidForSptrType(jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab277011_isValidForRef(jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Bool _1ab2772ca_isBuiltinStrConvertable(jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Str _1ab277594_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab2635e6_Prim> _1ab27793a_buildPrimType(jule::Str);
inline void _1ab277ee0_applyImplicitCast(jule::Ptr<_1ab25aa1c_TypeKind>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Bool _1ab2782a9_validTypeForXof(jule::Ptr<_1ab25aa1c_TypeKind>*);
inline __jule_tuple_x_1ab224d9e_SymbolTable__jule_tuple_s_1d7b81cb8_Log _1ab27b334_buildSymbols(jule::Ptr<_1ab0d55ab_Ast>*, jule::Trait<_1ab181cc8_Importer>*, jule::Ptr<_1ab12a07e_symbolBuilder>);
inline __jule_tuple_x_1ab187b14_Package__jule_tuple_s_1d7b81cb8_Log _1ab27b7a7_analyzePackage(jule::Slice<jule::Ptr<_1ab0d55ab_Ast>>*, jule::Trait<_1ab181cc8_Importer>*, jule::I64*);
inline __jule_tuple_x_1ab187b14_Package__jule_tuple_s_1d7b81cb8_Log _1ab27bbd6_AnalyzePackage(jule::Slice<jule::Ptr<_1ab0d55ab_Ast>>, jule::Trait<_1ab181cc8_Importer>, jule::I64);
inline jule::Ptr<_1ab120d00_FnIns> _1ab342b48_findBuiltinFunc(jule::Str*);
inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab342e56_primTypeAlias(jule::Ptr<_1ab25aa1c_TypeKind>*);
inline jule::Ptr<_1ab1c7a66_Var> _1ab346a5e_findBuiltinVar(jule::Str*);
inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab346c90_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1ab347059_findBuiltinDef(jule::Str*);
inline jule::Any _1ab347323_findBuiltinDefStdDebug(jule::Str*);
inline jule::Any _1ab3475dc_findBuiltinDefStdMem(jule::Str*);
inline jule::Any _1ab347983_findBuiltinDefStdComptime(jule::Str*);
inline jule::Any _1ab347c4c_findBuiltinDefStdJuleIntegrated(jule::Str*);
inline jule::Any _1ab3480c1_findPackageBuiltinDef(jule::Str*, jule::Str*);
inline jule::Ptr<_1ab22a228_Data> _1ab348500_builtinCallerCommonPlain(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab348874_builtinCallerError(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*);
inline jule::Ptr<_1ab22a228_Data> _1ab348ca3_builtinCallerOut(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab3491d2_builtinCallerOutln(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab349611_builtinCallerNew(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab349be9_builtinCallerPanic(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab34a128_builtinCallerMake(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab34a557_builtinCallerAppend(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab34aa41_callerCopySlice(jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab34ae70_builtinCallerCopy(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab34b2e4_callerLenSlice(jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab34b668_callerLenMap(jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab34b9dc_callerLenArr(jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab34bd61_callerLenStr(jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab34c1d5_callerLenComptime(jule::Ptr<_1ab22a228_Data>*, jule::I64);
inline jule::Ptr<_1ab22a228_Data> _1ab34c614_builtinCallerLen(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab34c988_callerCapSlice(jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab34cdb7_builtinCallerCap(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab34d3a1_callerDeleteMap(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab34d7d0_builtinCallerDelete(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab34dc0e_builtinCallerAssert(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab34e2d6_builtinCallerStdComptimeTypeOf(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab34e69e_builtinCallerStdComptimeValueOf(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab34e968_rangeData(jule::Trait<_1ab137256_comptimeRangeKind>);
inline jule::Ptr<_1ab22a228_Data> _1ab34ed97_builtinCallerStdComptimeRange(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab3502c6_builtinCallerStdComptimeLine(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab350705_builtinCallerStdComptimeFile(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab350b34_builtinCallerStdComptimeFiles(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab351063_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab351492_builtinCallerStdMemSizeOf(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab3518c1_builtinCallerStdMemAlignOf(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab351d00_builtinCallerStdMemFree(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab35222e_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab35265d_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab352a8c_builtinCallerStdDebugOut(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ab22a228_Data> _1ab352ebb_builtinCallerStdDebugOutln(jule::Ptr<_1ab22be1c_Eval>*, jule::Ptr<_1ab0e04a6_FnCallExpr>*, jule::Ptr<_1ab22a228_Data>*);
inline jule::Ptr<_1ac8b6451_FileInfo> _1ac90c8e8_ParseFile(jule::Ptr<_1ab0c7746_File>);
inline __jule_tuple_x_1ab0d55ab_Ast__jule_tuple_s_1d7b81cb8_Log _1ac90cec0_parseFileset(jule::Ptr<_1ab0c7746_File>);
inline jule::Ptr<_1ab0e7469_ScopeTree> _1d8bd9869_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1d8bd9b00_isSt(jule::Ptr<_1ab0c1e7c_Token>, jule::Ptr<_1ab0c1e7c_Token>);
inline jule::Bool _1d8bda095_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _1d8bda45d_nextStPos(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::I64);
inline __jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_bool _1aa0d857c_skipSt(jule::I64*, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Slice<jule::Ptr<_1aa0d87be_stmt>> _1aa0d8b76_splitStmts(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Bool _1aa102002_isTypeOp(jule::U64*);
inline jule::Bool _1aa102310_isTypeRange(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _1aa1025c9_getBlockExpr(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline __jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_sx_1ab0c1e7c_Token _1aa102992_splitDelim(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::U64);
inline jule::I64 _1aa102c5b_findLowestPrecOp(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Ptr<_1ab0dd1a7_IdentExpr> _1aa103025_buildIdentExpr(jule::Ptr<_1ab0c1e7c_Token>*);
inline __jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_int _1aa1032de_getRangeExprTokens(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline jule::Bool _1aa104136_checkAssignTokens(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline _1d7b81cb8_Log _1aa105313_makeErr(jule::I64, jule::I64, jule::Ptr<_1ab0c7746_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _1aa10580d_range(jule::I64*, jule::U64, jule::U64, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline __jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_sx_1ab0c1e7c_Token _1aa105ac7_rangeLast(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*);
inline __jule_tuple_ssx_1ab0c1e7c_Token__jule_tuple_s_1d7b81cb8_Log _1aa10607d_parts(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>*, jule::U64, jule::Bool);
inline jule::U64 _1aa106347_getCloseOfBrace(jule::U64);
inline _1d7b81cb8_Log _1aa106776_compilerErr(jule::Ptr<_1ab0c1e7c_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1aa106b1c_pushSuggestion(_1d7b81cb8_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9bcd2c_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1ab448149_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1ab44828c_checkArch(jule::Str);
inline jule::Bool _1ab46374c_isPassFileAnnotation(jule::Str);
inline void _1ab4648c4_setOsVars(jule::Slice<jule::Str>*);
inline void _1ab464b49_setArchVars(jule::Slice<jule::Str>*);
inline void _1ab464e35_initVars(jule::Slice<jule::Str>*, _1ab4645a5_CompileInfo*);
inline jule::Slice<jule::U8> _1ac9c1e63_readBuff(jule::Str);
inline _1d7b81cb8_Log _1ac9c223d_flatCompilerErr(jule::Str);
inline void _1ac9c6a5b_pushPasses(jule::Ptr<_1ab187b14_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1ac9c6e24_getAllUniquePasses(jule::Ptr<_1ab187b14_Package>*, jule::Slice<jule::Ptr<_1ab184bdd_ImportInfo>>);
inline _1ab4645a5_CompileInfo _1ac9c7133_buildCompileInfo(void);
inline void _1acb36935_EliminateDefines(jule::Ptr<_1ac9c51db_IR>*);
inline jule::Ptr<_1ab0d6865_Directive> _1acb36ced_findDirective(jule::Slice<jule::Ptr<_1ab0d6865_Directive>>*, jule::Str);
inline jule::Bool _1acb37172_hasDirective(jule::Slice<jule::Ptr<_1ab0d6865_Directive>>*, jule::Str);
inline jule::Bool _1acb3753a_isTraitMethod(jule::Ptr<_1ab10acb8_StructIns>*, jule::Ptr<_1ab120d00_FnIns>*);
inline void _1acb3b53e_eliminateDeadCodeOfScope(jule::Ptr<_1ab1637b0_Scope>);
inline void _1acb3b7b4_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1ab11cdeb_Fn>>*);
inline void _1acb3b9e5_eliminateFunctionsScopePackage(jule::Ptr<_1ab187b14_Package>*);
inline void _1acb3bc9d_eliminateScopePackage(jule::Ptr<_1ab187b14_Package>*);
inline void _1acb3bece_EliminateScopes(jule::Ptr<_1ac9c51db_IR>*);
inline jule::Uintptr _1ab35330c_typeData(jule::Any*);
inline jule::Bool _1ab3536c5_equalConst(jule::Ptr<_1d8bd00bd_Const>, jule::Ptr<_1d8bd00bd_Const>);
inline jule::Bool _1ab353a49_equalCasting(jule::Ptr<_1ab1117d5_CastingExprModel>, jule::Ptr<_1ab1117d5_CastingExprModel>);
inline jule::Bool _1ab353d79_equalUnary(jule::Ptr<_1ab110581_UnaryExprModel>, jule::Ptr<_1ab110581_UnaryExprModel>);
inline jule::Bool _1ab3541ed_equalIndexing(jule::Ptr<_1ab112a17_IndexingExprModel>, jule::Ptr<_1ab112a17_IndexingExprModel>);
inline jule::Bool _1ab354572_equalBinary(jule::Ptr<_1ab1101a7_BinopExprModel>, jule::Ptr<_1ab1101a7_BinopExprModel>);
inline jule::Bool _1ab3548e6_equalModels(jule::Any, jule::Any);
inline jule::Bool _1ab35cc2e_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1ab35d03c_isConstantValidConditionalCase(jule::Ptr<_1ab163bcd_If>*);
inline jule::Bool _1ab35d306_isUnreachableExpr(jule::Any*);
inline jule::Bool _1ab35d647_isConstantValidMatchCase(jule::Ptr<_1ab16852e_Case>*);
inline jule::Bool _1ab35d911_isUnreachableConditionalCase(jule::Ptr<_1ab163bcd_If>*);
inline jule::Bool _1ab35dbca_isUnreachableMatchCase(jule::Ptr<_1ab16852e_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1ab3669d5_checkForBitShiftOpt(jule::Ptr<_1ab10ebac_OperandExprModel>*, jule::Ptr<_1ab10ebac_OperandExprModel>*);
inline jule::Bool _1ab366d9d_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _1ab3696b9_PushOptLevel(jule::I64);
inline void _1acb46439_detectEnabled(void);
inline void _1acb702dc_Throw(jule::Str);
inline jule::U64 _1ad2c7504_unix(void);
inline jule::Bool _1ad204b90_isCopyOptimizable(jule::Ptr<_1ab22a228_Data>*);
inline jule::Bool _1ad205058_isIterCopyOptimizable(jule::Ptr<_1ab22a228_Data>*, jule::Ptr<_1ab1c7a66_Var>*);
inline jule::Str _1ad215189_decomposeCommonEsq(jule::U8);
inline jule::Str _1ad215497_sbtoa(jule::U8);
inline void _1ad215783_cstrBytes(_1d7ad2eb1_StrBuilder*, jule::Str);
inline void _1ad215ab3_cstrLit(_1d7ad2eb1_StrBuilder*, jule::Str);
inline void _1ad215e59_ftoa(_1d7ad2eb1_StrBuilder*, jule::F64, jule::I64);
inline void _1ad216245_itoa(_1d7ad2eb1_StrBuilder*, jule::I64);
inline void _1ad216531_utoa(_1d7ad2eb1_StrBuilder*, jule::U64);
inline jule::Bool _1ad21690a_isForwarded(jule::Ptr<_1ab1637b0_Scope>*);
inline jule::Bool _1ad216bc4_isExprComesFromBind(jule::Ptr<_1ab22a228_Data>*);
inline jule::Bool _1ad216e8d_isAny(jule::Ptr<_1ab25aa1c_TypeKind>*);
inline void _1ad2db848_iterFiles(jule::Ptr<_1ab187b14_Package>*, jule::Fn<void(jule::Ptr<_1ab224d9e_SymbolTable>*)>);
inline jule::Str _1ad2dbb56_concatAllParts(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>);
inline jule::Bool _1ad2dbeca_containsTraitMethod(jule::Ptr<_1ab131195_Trait>*, jule::Str*);
inline void _1ad2dc30a_pushMethodsFromInherit(jule::Ptr<_1ab131195_Trait>*, jule::Ptr<_1ab131195_Trait>*);
inline void _1ad2dc5e6_pushMethodsFromInherits(jule::Ptr<_1ab131195_Trait>*, jule::Ptr<_1ab131195_Trait>*);
inline jule::Bool _1ad2dc8b0_isOpMethod(jule::Ptr<_1ab11cdeb_Fn>*);
inline jule::Bool _1ad2dcb79_isHeadDecl(jule::Ptr<_1ab11cdeb_Fn>*);
inline jule::Ptr<_1ab0d6865_Directive> _1ad2eb748_findDirective(jule::Slice<jule::Ptr<_1ab0d6865_Directive>>*, jule::Str);
inline jule::Bool _1ad2ebb11_hasDirective(jule::Slice<jule::Ptr<_1ab0d6865_Directive>>*, jule::Str);
inline jule::Bool _1ad2ebdca_shouldInitialized(jule::Ptr<_1ab25aa1c_TypeKind>*);
inline void _1d7c976c5_printErrorMessage(jule::Str);
inline void _1d7c9794a_help(jule::Slice<jule::Str>*);
inline void _1d7c97b7b_version(jule::Slice<jule::Str>*);
inline void _1d7c97d79_toolDistos(void);
inline void _1d7c98000_toolDistarch(void);
inline void _1d7c98231_tool(jule::Slice<jule::Str>*);
inline void _1d7c98462_julenv(jule::Slice<jule::Str>*);
inline void _1d7c98770_mod(jule::Slice<jule::Str>*);
inline jule::Bool _1d7c98a39_processCommand(jule::Slice<jule::Str>*);
inline void _1d7c98bb0_showInfo(void);
void entry_point(void);
inline void _1ad4ca3d8_init(void);
inline jule::Ptr<_202528d82_File> _1ad4ca6b3_openOutput(jule::Str*);
inline void _1ad4ca839_clearObjects(void);
inline void _1ad4cab69_compileIr(jule::Str, jule::Str);
inline jule::Bool _1ad4cae33_isCppSourceFile(jule::Str);
inline void _1ad4cb164_pushCompCmdClang(_1d7ad2eb1_StrBuilder*);
inline void _1ad4cb395_pushCompCmdGcc(_1d7ad2eb1_StrBuilder*);
inline __jule_tuple_str__jule_tuple_str _1ad4cb829_genCompileCmd(jule::Str, jule::Ptr<_1ac9c51db_IR>*);
inline jule::Str _1ad4cba38_getCompilePath(void);
inline void _1ad4cbc69_applyTargetIndependentOptimizations(jule::Ptr<_1ac9c51db_IR>*);
inline void _1ad4cbde0_checkCompilerFlag(void);
inline void _1ad4cc121_checkTargetArch(jule::Str);
inline void _1ad4cc352_checkTargetOs(jule::Str);
inline void _1ad4cc583_checkTargetFlag(jule::Str*);
inline void _1ad4cc7b4_checkOptFlag(jule::Str*);
inline void _1ad4ccb49_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1ad4ccdad_checkFlags(jule::Slice<jule::Str>*);
inline void _1ad4cd0de_setupSemaFlags(jule::I64*);
inline jule::Ptr<_1ac9c51db_IR> _1ad4cd3a8_buildIr(jule::Slice<jule::Str>*);
inline void _1ad4cd5d9_compileCommand(jule::Slice<jule::Str>*);


struct _1ab137256_comptimeRangeKindMptrData {
	void(*_1ab13694d_ready)(jule::Trait<_1ab137256_comptimeRangeKind>, jule::Ptr<_1ab1c7a66_Var>*, jule::Ptr<_1ab1c7a66_Var>*);
	void(*_1ab136d6b_step)(jule::Trait<_1ab137256_comptimeRangeKind>, jule::I64, jule::Ptr<_1ab1c7a66_Var>*, jule::Ptr<_1ab1c7a66_Var>*);
	jule::I64(*_1ab137102_len)(jule::Trait<_1ab137256_comptimeRangeKind>);
};

struct _1ab181cc8_ImporterMptrData {
	void(*_1ab180aa7_SetModPath)(jule::Trait<_1ab181cc8_Importer>, jule::Str);
	jule::Str(*_1ab180d3d_GetModPath)(jule::Trait<_1ab181cc8_Importer>);
	jule::Str(*_1ab18117e_ModById)(jule::Trait<_1ab181cc8_Importer>, jule::I64);
	jule::Ptr<_1ab184bdd_ImportInfo>(*_1ab1814c0_GetImport)(jule::Trait<_1ab181cc8_Importer>, jule::Str);
	__jule_tuple_sx_1ab0d55ab_Ast__jule_tuple_s_1d7b81cb8_Log(*_1ab1818bb_ImportPackage)(jule::Trait<_1ab181cc8_Importer>, jule::Str, jule::Bool);
	void(*_1ab181b74_Imported)(jule::Trait<_1ab181cc8_Importer>, jule::Ptr<_1ab184bdd_ImportInfo>);
};

struct _1ab25a566_KindMptrData {
	jule::Str(*_1ab25a0c1_Str)(jule::Trait<_1ab25a566_Kind>);
	jule::Bool(*_1ab25a412_Equal)(jule::Trait<_1ab25a566_Kind>, jule::Ptr<_1ab25aa1c_TypeKind>);
};

struct _1ab27a553_LookupMptrData {
	jule::Ptr<_1ab184bdd_ImportInfo>(*_1ab27883c_SelectPackage)(jule::Trait<_1ab27a553_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)>);
	jule::Ptr<_1ab1c7a66_Var>(*_1ab278c38_FindVar)(jule::Trait<_1ab27a553_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ab259c2a_TypeAlias>(*_1ab279134_FindTypeAlias)(jule::Trait<_1ab27a553_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ab10803a_Struct>(*_1ab279530_FindStruct)(jule::Trait<_1ab27a553_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ab11cdeb_Fn>(*_1ab27992b_FindFn)(jule::Trait<_1ab27a553_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ab131195_Trait>(*_1ab279c6c_FindTrait)(jule::Trait<_1ab27a553_Lookup>, jule::Str);
	jule::Ptr<_1ab133890_Enum>(*_1ab27a0ad_FindEnum)(jule::Trait<_1ab27a553_Lookup>, jule::Str);
	jule::Ptr<_1ab13509a_TypeEnum>(*_1ab27a3ee_FindTypeEnum)(jule::Trait<_1ab27a553_Lookup>, jule::Str);
};

struct _1ad4c30d4_CommonFlagMptrData {
	jule::Str(*_1ad490ea3_Name)(jule::Trait<_1ad4c30d4_CommonFlag>);
	jule::I32(*_1ad49114b_Short)(jule::Trait<_1ad4c30d4_CommonFlag>);
	jule::Str(*_1ad4c2d4d_What)(jule::Trait<_1ad4c30d4_CommonFlag>);
	void(*_1ad4c2e91_Reset)(jule::Trait<_1ad4c30d4_CommonFlag>);
};



inline void _1ab13694d_ready_comptimeRangeKind_0(jule::Trait<_1ab137256_comptimeRangeKind> _self_, jule::Ptr<_1ab1c7a66_Var>* _1329_keyA, jule::Ptr<_1ab1c7a66_Var>* _1346_keyB) {
	_1ab140605_ready(_self_.safe_ptr<_1ab139b4e_comptimeStructFields>(), _1329_keyA, _1346_keyB);
}
inline void _1ab136d6b_step_comptimeRangeKind_0(jule::Trait<_1ab137256_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1ab1c7a66_Var>* _1436_keyA, jule::Ptr<_1ab1c7a66_Var>* _1453_keyB) {
	_1ab140a23_step(_self_.safe_ptr<_1ab139b4e_comptimeStructFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1ab137102_len_comptimeRangeKind_0(jule::Trait<_1ab137256_comptimeRangeKind> _self_) {
	return _1ab140ca9_len(_self_.safe_ptr<_1ab139b4e_comptimeStructFields>());
}
inline void _1ab13694d_ready_comptimeRangeKind_1(jule::Trait<_1ab137256_comptimeRangeKind> _self_, jule::Ptr<_1ab1c7a66_Var>* _1329_keyA, jule::Ptr<_1ab1c7a66_Var>* _1346_keyB) {
	_1ab1438b1_ready(_self_.safe_ptr<_1ab142c78_comptimeStatics>(), _1329_keyA, _1346_keyB);
}
inline void _1ab136d6b_step_comptimeRangeKind_1(jule::Trait<_1ab137256_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1ab1c7a66_Var>* _1436_keyA, jule::Ptr<_1ab1c7a66_Var>* _1453_keyB) {
	_1ab143cce_step(_self_.safe_ptr<_1ab142c78_comptimeStatics>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1ab137102_len_comptimeRangeKind_1(jule::Trait<_1ab137256_comptimeRangeKind> _self_) {
	return _1ab144065_len(_self_.safe_ptr<_1ab142c78_comptimeStatics>());
}
inline void _1ab13694d_ready_comptimeRangeKind_2(jule::Trait<_1ab137256_comptimeRangeKind> _self_, jule::Ptr<_1ab1c7a66_Var>* _1329_keyA, jule::Ptr<_1ab1c7a66_Var>* _1346_keyB) {
	_1ab146353_ready(_self_.safe_ptr<_1ab145682_comptimeEnumFields>(), _1329_keyA, _1346_keyB);
}
inline void _1ab136d6b_step_comptimeRangeKind_2(jule::Trait<_1ab137256_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1ab1c7a66_Var>* _1436_keyA, jule::Ptr<_1ab1c7a66_Var>* _1453_keyB) {
	_1ab146771_step(_self_.safe_ptr<_1ab145682_comptimeEnumFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1ab137102_len_comptimeRangeKind_2(jule::Trait<_1ab137256_comptimeRangeKind> _self_) {
	return _1ab146a07_len(_self_.safe_ptr<_1ab145682_comptimeEnumFields>());
}
inline void _1ab13694d_ready_comptimeRangeKind_3(jule::Trait<_1ab137256_comptimeRangeKind> _self_, jule::Ptr<_1ab1c7a66_Var>* _1329_keyA, jule::Ptr<_1ab1c7a66_Var>* _1346_keyB) {
	_1ab149bb4_ready(_self_.safe_ptr<_1ab14907b_comptimeParams>(), _1329_keyA, _1346_keyB);
}
inline void _1ab136d6b_step_comptimeRangeKind_3(jule::Trait<_1ab137256_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1ab1c7a66_Var>* _1436_keyA, jule::Ptr<_1ab1c7a66_Var>* _1453_keyB) {
	_1ab14a0d2_step(_self_.safe_ptr<_1ab14907b_comptimeParams>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1ab137102_len_comptimeRangeKind_3(jule::Trait<_1ab137256_comptimeRangeKind> _self_) {
	return _1ab14a368_len(_self_.safe_ptr<_1ab14907b_comptimeParams>());
}
inline void _1ab13694d_ready_comptimeRangeKind_4(jule::Trait<_1ab137256_comptimeRangeKind> _self_, jule::Ptr<_1ab1c7a66_Var>* _1329_keyA, jule::Ptr<_1ab1c7a66_Var>* _1346_keyB) {
	_1ab14b2ae_ready(_self_.safe_ptr<_1ab14a676_comptimeTypeInfos>(), _1329_keyA, _1346_keyB);
}
inline void _1ab136d6b_step_comptimeRangeKind_4(jule::Trait<_1ab137256_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1ab1c7a66_Var>* _1436_keyA, jule::Ptr<_1ab1c7a66_Var>* _1453_keyB) {
	_1ab14b6cc_step(_self_.safe_ptr<_1ab14a676_comptimeTypeInfos>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1ab137102_len_comptimeRangeKind_4(jule::Trait<_1ab137256_comptimeRangeKind> _self_) {
	return _1ab14b963_len(_self_.safe_ptr<_1ab14a676_comptimeTypeInfos>());
}
inline void _1ab13694d_ready_comptimeRangeKind_5(jule::Trait<_1ab137256_comptimeRangeKind> _self_, jule::Ptr<_1ab1c7a66_Var>* _1329_keyA, jule::Ptr<_1ab1c7a66_Var>* _1346_keyB) {
	_1ab15671a_ready(_self_.safe_ptr<_1ab155ad2_comptimeFiles>(), _1329_keyA, _1346_keyB);
}
inline void _1ab136d6b_step_comptimeRangeKind_5(jule::Trait<_1ab137256_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1ab1c7a66_Var>* _1436_keyA, jule::Ptr<_1ab1c7a66_Var>* _1453_keyB) {
	_1ab156b38_step(_self_.safe_ptr<_1ab155ad2_comptimeFiles>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1ab137102_len_comptimeRangeKind_5(jule::Trait<_1ab137256_comptimeRangeKind> _self_) {
	return _1ab156dbe_len(_self_.safe_ptr<_1ab155ad2_comptimeFiles>());
}
inline void _1ab180aa7_SetModPath_Importer_0(jule::Trait<_1ab181cc8_Importer> _self_, jule::Str _1729_path) {
	_1ac9c32e9_SetModPath(_self_.safe_ptr<_1ac9c2727_JuleImporter>(), _1729_path);
}
inline jule::Str _1ab180d3d_GetModPath_Importer_0(jule::Trait<_1ab181cc8_Importer> _self_) {
	return _1ac9c3580_GetModPath(_self_.safe_ptr<_1ac9c2727_JuleImporter>());
}
inline jule::Str _1ab18117e_ModById_Importer_0(jule::Trait<_1ab181cc8_Importer> _self_, jule::I64 _2522_id) {
	return _1ac9c38c1_ModById(_self_.safe_ptr<_1ac9c2727_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab1814c0_GetImport_Importer_0(jule::Trait<_1ab181cc8_Importer> _self_, jule::Str _3128_path) {
	return _1ac9c3c12_GetImport(_self_.safe_ptr<_1ac9c2727_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1ab0d55ab_Ast__jule_tuple_s_1d7b81cb8_Log _1ab1818bb_ImportPackage_Importer_0(jule::Trait<_1ab181cc8_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1ac9c410d_ImportPackage(_self_.safe_ptr<_1ac9c2727_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1ab181b74_Imported_Importer_0(jule::Trait<_1ab181cc8_Importer> _self_, jule::Ptr<_1ab184bdd_ImportInfo> _4131__0) {
	_1ac9c43b6_Imported(_self_.safe_ptr<_1ac9c2727_JuleImporter>(), _4131__0);
}
inline jule::Str _1ab25a0c1_Str_Kind_0(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab10b13c_Str(_self_.safe_ptr<_1ab10acb8_StructIns>());
}
inline jule::Bool _1ab25a412_Equal_Kind_0(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab10b47d_Equal(_self_.data.as<_1ab10acb8_StructIns>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_1(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab121141_Str(_self_.safe_ptr<_1ab120d00_FnIns>());
}
inline jule::Bool _1ab25a412_Equal_Kind_1(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab121482_Equal(_self_.data.as<_1ab120d00_FnIns>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_2(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab13155d_Str(_self_.safe_ptr<_1ab131195_Trait>());
}
inline jule::Bool _1ab25a412_Equal_Kind_2(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab13189e_Equal(_self_.data.as<_1ab131195_Trait>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_3(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab133c14_Str(_self_.safe_ptr<_1ab133890_Enum>());
}
inline jule::Bool _1ab25a412_Equal_Kind_3(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab134055_Equal(_self_.data.as<_1ab133890_Enum>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_4(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab1353db_Str(_self_.safe_ptr<_1ab13509a_TypeEnum>());
}
inline jule::Bool _1ab25a412_Equal_Kind_4(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab13572c_Equal(_self_.data.as<_1ab13509a_TypeEnum>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_5(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab13780b_Str(_self_.safe_ptr<_1ab137443_comptimeRange>());
}
inline jule::Bool _1ab25a412_Equal_Kind_5(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab137b4c_Equal(_self_.data.as<_1ab137443_comptimeRange>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_6(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab138323_Str(_self_.safe_ptr<_1ab137e9e_comptimeStructField>());
}
inline jule::Bool _1ab25a412_Equal_Kind_6(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab138664_Equal(_self_.data.as<_1ab137e9e_comptimeStructField>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_7(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab139ed4_Str(_self_.safe_ptr<_1ab139b4e_comptimeStructFields>());
}
inline jule::Bool _1ab25a412_Equal_Kind_7(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab13a325_Equal(_self_.data.as<_1ab139b4e_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_8(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab14143b_Str(_self_.safe_ptr<_1ab1410b7_comptimeStatic>());
}
inline jule::Bool _1ab25a412_Equal_Kind_8(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab14177c_Equal(_self_.data.as<_1ab1410b7_comptimeStatic>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_9(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab1430ec_Str(_self_.safe_ptr<_1ab142c78_comptimeStatics>());
}
inline jule::Bool _1ab25a412_Equal_Kind_9(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab14343d_Equal(_self_.data.as<_1ab142c78_comptimeStatics>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_10(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab1446e7_Str(_self_.safe_ptr<_1ab144373_comptimeEnumField>());
}
inline jule::Bool _1ab25a412_Equal_Kind_10(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab144a38_Equal(_self_.data.as<_1ab144373_comptimeEnumField>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_11(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab145b16_Str(_self_.safe_ptr<_1ab145682_comptimeEnumFields>());
}
inline jule::Bool _1ab25a412_Equal_Kind_11(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab145e57_Equal(_self_.data.as<_1ab145682_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_12(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab147189_Str(_self_.safe_ptr<_1ab146d15_comptimeParam>());
}
inline jule::Bool _1ab25a412_Equal_Kind_12(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab1474ca_Equal(_self_.data.as<_1ab146d15_comptimeParam>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_13(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab149400_Str(_self_.safe_ptr<_1ab14907b_comptimeParams>());
}
inline jule::Bool _1ab25a412_Equal_Kind_13(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab149741_Equal(_self_.data.as<_1ab14907b_comptimeParams>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_14(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab14a9ea_Str(_self_.safe_ptr<_1ab14a676_comptimeTypeInfos>());
}
inline jule::Bool _1ab25a412_Equal_Kind_14(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab14ad3b_Equal(_self_.data.as<_1ab14a676_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_15(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab14c0e5_Str(_self_.safe_ptr<_1ab14bc71_comptimeTypeInfo>());
}
inline jule::Bool _1ab25a412_Equal_Kind_15(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab14c436_Equal(_self_.data.as<_1ab14bc71_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_16(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab153607_Str(_self_.safe_ptr<_1ab153283_comptimeValue>());
}
inline jule::Bool _1ab25a412_Equal_Kind_16(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab153948_Equal(_self_.data.as<_1ab153283_comptimeValue>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_17(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab155e56_Str(_self_.safe_ptr<_1ab155ad2_comptimeFiles>());
}
inline jule::Bool _1ab25a412_Equal_Kind_17(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab156297_Equal(_self_.data.as<_1ab155ad2_comptimeFiles>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_18(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab157551_Str(_self_.safe_ptr<_1ab1571cc_comptimeFile>());
}
inline jule::Bool _1ab25a412_Equal_Kind_18(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab157892_Equal(_self_.data.as<_1ab1571cc_comptimeFile>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_19(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab25add5_Str(_self_.safe_ptr<_1ab25aa1c_TypeKind>());
}
inline jule::Bool _1ab25a412_Equal_Kind_19(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab25b226_Equal(_self_.data.as<_1ab25aa1c_TypeKind>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_20(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab263937_Str(_self_.safe_ptr<_1ab2635e6_Prim>());
}
inline jule::Bool _1ab25a412_Equal_Kind_20(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab263c78_Equal(_self_.data.as<_1ab2635e6_Prim>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_21(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab267496_Str(_self_.safe_ptr<_1ab267122_Sptr>());
}
inline jule::Bool _1ab25a412_Equal_Kind_21(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab2677d7_Equal(_self_.data.as<_1ab267122_Sptr>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_22(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab268079_Str(_self_.safe_ptr<_1ab267ae5_Slc>());
}
inline jule::Bool _1ab25a412_Equal_Kind_22(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab2683ba_Equal(_self_.data.as<_1ab267ae5_Slc>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_23(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab268a5d_Str(_self_.safe_ptr<_1ab2686d9_Tuple>());
}
inline jule::Bool _1ab25a412_Equal_Kind_23(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab268d9e_Equal(_self_.data.as<_1ab2686d9_Tuple>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_24(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab26960d_Str(_self_.safe_ptr<_1ab269289_Map>());
}
inline jule::Bool _1ab25a412_Equal_Kind_24(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab26994e_Equal(_self_.data.as<_1ab269289_Map>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_25(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab26a28a_Str(_self_.safe_ptr<_1ab269e16_Arr>());
}
inline jule::Bool _1ab25a412_Equal_Kind_25(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab26a5cb_Equal(_self_.data.as<_1ab269e16_Arr>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_26(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ab26ac5d_Str(_self_.safe_ptr<_1ab26a8d9_Ptr>());
}
inline jule::Bool _1ab25a412_Equal_Kind_26(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ab26b09e_Equal(_self_.data.as<_1ab26a8d9_Ptr>(), _5621_other);
}
inline jule::Str _1ab25a0c1_Str_Kind_27(jule::Trait<_1ab25a566_Kind> _self_) {
	return _1ad2dde00_Str(_self_.safe_ptr<_1ad2dda6a_customType>());
}
inline jule::Bool _1ab25a412_Equal_Kind_27(jule::Trait<_1ab25a566_Kind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _5621_other) {
	return _1ad2de241_Equal(_self_.data.as<_1ad2dda6a_customType>(), _5621_other);
}
inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab27883c_SelectPackage_Lookup_0(jule::Trait<_1ab27a553_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)> _932_selector) {
	return _1ab16b059_SelectPackage(_self_.safe_ptr<_1ab16aab4_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_1ab1c7a66_Var> _1ab278c38_FindVar_Lookup_0(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ab16b455_FindVar(_self_.safe_ptr<_1ab16aab4_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab279134_FindTypeAlias_Lookup_0(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ab16b851_FindTypeAlias(_self_.safe_ptr<_1ab16aab4_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1ab10803a_Struct> _1ab279530_FindStruct_Lookup_0(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ab16bc4c_FindStruct(_self_.safe_ptr<_1ab16aab4_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ab11cdeb_Fn> _1ab27992b_FindFn_Lookup_0(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ab16c148_FindFn(_self_.safe_ptr<_1ab16aab4_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ab131195_Trait> _1ab279c6c_FindTrait_Lookup_0(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _2928_ident) {
	return _1ab16c489_FindTrait(_self_.safe_ptr<_1ab16aab4_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_1ab133890_Enum> _1ab27a0ad_FindEnum_Lookup_0(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _3327_ident) {
	return _1ab16c7ca_FindEnum(_self_.safe_ptr<_1ab16aab4_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_1ab13509a_TypeEnum> _1ab27a3ee_FindTypeEnum_Lookup_0(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _3731_ident) {
	return _1ab16cb1b_FindTypeEnum(_self_.safe_ptr<_1ab16aab4_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab27883c_SelectPackage_Lookup_1(jule::Trait<_1ab27a553_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)> _932_selector) {
	return _1ab1851c7_SelectPackage(_self_.safe_ptr<_1ab184bdd_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_1ab1c7a66_Var> _1ab278c38_FindVar_Lookup_1(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ab1855c3_FindVar(_self_.safe_ptr<_1ab184bdd_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab279134_FindTypeAlias_Lookup_1(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ab1859be_FindTypeAlias(_self_.safe_ptr<_1ab184bdd_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1ab10803a_Struct> _1ab279530_FindStruct_Lookup_1(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ab185dba_FindStruct(_self_.safe_ptr<_1ab184bdd_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ab11cdeb_Fn> _1ab27992b_FindFn_Lookup_1(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ab1862b6_FindFn(_self_.safe_ptr<_1ab184bdd_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ab131195_Trait> _1ab279c6c_FindTrait_Lookup_1(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _2928_ident) {
	return _1ab186607_FindTrait(_self_.safe_ptr<_1ab184bdd_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_1ab133890_Enum> _1ab27a0ad_FindEnum_Lookup_1(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _3327_ident) {
	return _1ab186948_FindEnum(_self_.safe_ptr<_1ab184bdd_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_1ab13509a_TypeEnum> _1ab27a3ee_FindTypeEnum_Lookup_1(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _3731_ident) {
	return _1ab186c89_FindTypeEnum(_self_.safe_ptr<_1ab184bdd_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab27883c_SelectPackage_Lookup_2(jule::Trait<_1ab27a553_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)> _932_selector) {
	return _1ab1880a9_SelectPackage(_self_.safe_ptr<_1ab187b14_Package>(), _932_selector);
}
inline jule::Ptr<_1ab1c7a66_Var> _1ab278c38_FindVar_Lookup_2(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ab1884a5_FindVar(_self_.safe_ptr<_1ab187b14_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab279134_FindTypeAlias_Lookup_2(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ab1888a1_FindTypeAlias(_self_.safe_ptr<_1ab187b14_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1ab10803a_Struct> _1ab279530_FindStruct_Lookup_2(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ab188c9c_FindStruct(_self_.safe_ptr<_1ab187b14_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ab11cdeb_Fn> _1ab27992b_FindFn_Lookup_2(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ab189198_FindFn(_self_.safe_ptr<_1ab187b14_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ab131195_Trait> _1ab279c6c_FindTrait_Lookup_2(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _2928_ident) {
	return _1ab1894d9_FindTrait(_self_.safe_ptr<_1ab187b14_Package>(), _2928_ident);
}
inline jule::Ptr<_1ab133890_Enum> _1ab27a0ad_FindEnum_Lookup_2(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _3327_ident) {
	return _1ab18982a_FindEnum(_self_.safe_ptr<_1ab187b14_Package>(), _3327_ident);
}
inline jule::Ptr<_1ab13509a_TypeEnum> _1ab27a3ee_FindTypeEnum_Lookup_2(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _3731_ident) {
	return _1ab189b6b_FindTypeEnum(_self_.safe_ptr<_1ab187b14_Package>(), _3731_ident);
}
inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab27883c_SelectPackage_Lookup_3(jule::Trait<_1ab27a553_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)> _932_selector) {
	return _1ab1a5b21_SelectPackage(_self_.safe_ptr<_1ab1a567b_Sema>(), _932_selector);
}
inline jule::Ptr<_1ab1c7a66_Var> _1ab278c38_FindVar_Lookup_3(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ab1a601c_FindVar(_self_.safe_ptr<_1ab1a567b_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab279134_FindTypeAlias_Lookup_3(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ab1a6418_FindTypeAlias(_self_.safe_ptr<_1ab1a567b_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1ab10803a_Struct> _1ab279530_FindStruct_Lookup_3(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ab1a6814_FindStruct(_self_.safe_ptr<_1ab1a567b_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ab11cdeb_Fn> _1ab27992b_FindFn_Lookup_3(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ab1a6c10_FindFn(_self_.safe_ptr<_1ab1a567b_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ab131195_Trait> _1ab279c6c_FindTrait_Lookup_3(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _2928_ident) {
	return _1ab1a7051_FindTrait(_self_.safe_ptr<_1ab1a567b_Sema>(), _2928_ident);
}
inline jule::Ptr<_1ab133890_Enum> _1ab27a0ad_FindEnum_Lookup_3(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _3327_ident) {
	return _1ab1a7392_FindEnum(_self_.safe_ptr<_1ab1a567b_Sema>(), _3327_ident);
}
inline jule::Ptr<_1ab13509a_TypeEnum> _1ab27a3ee_FindTypeEnum_Lookup_3(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _3731_ident) {
	return _1ab1a76d3_FindTypeEnum(_self_.safe_ptr<_1ab1a567b_Sema>(), _3731_ident);
}
inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab27883c_SelectPackage_Lookup_4(jule::Trait<_1ab27a553_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)> _932_selector) {
	return _1ab225388_SelectPackage(_self_.safe_ptr<_1ab224d9e_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_1ab1c7a66_Var> _1ab278c38_FindVar_Lookup_4(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ab225784_FindVar(_self_.safe_ptr<_1ab224d9e_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab279134_FindTypeAlias_Lookup_4(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ab225b80_FindTypeAlias(_self_.safe_ptr<_1ab224d9e_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1ab10803a_Struct> _1ab279530_FindStruct_Lookup_4(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ab22607b_FindStruct(_self_.safe_ptr<_1ab224d9e_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ab11cdeb_Fn> _1ab27992b_FindFn_Lookup_4(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ab226477_FindFn(_self_.safe_ptr<_1ab224d9e_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ab131195_Trait> _1ab279c6c_FindTrait_Lookup_4(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _2928_ident) {
	return _1ab2267b8_FindTrait(_self_.safe_ptr<_1ab224d9e_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_1ab133890_Enum> _1ab27a0ad_FindEnum_Lookup_4(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _3327_ident) {
	return _1ab226b09_FindEnum(_self_.safe_ptr<_1ab224d9e_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_1ab13509a_TypeEnum> _1ab27a3ee_FindTypeEnum_Lookup_4(jule::Trait<_1ab27a553_Lookup> _self_, jule::Str _3731_ident) {
	return _1ab226e4a_FindTypeEnum(_self_.safe_ptr<_1ab224d9e_SymbolTable>(), _3731_ident);
}
inline jule::Str _1ad490ea3_Name_CommonFlag_0(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	return _1bd6ed057_Name(_self_.safe_ptr<_1bd6ed211_Flag>());
}
inline jule::I32 _1ad49114b_Short_CommonFlag_0(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	return _1bd6ed783_Short(_self_.safe_ptr<_1bd6ed211_Flag>());
}
inline jule::Str _1ad4c2d4d_What_CommonFlag_0(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	return _1bd6ed4ec_What(_self_.safe_ptr<_1bd6ed211_Flag>());
}
inline void _1ad4c2e91_Reset_CommonFlag_0(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	_1bd6ed640_Reset(_self_.safe_ptr<_1bd6ed211_Flag>());
}
inline jule::Str _1ad490ea3_Name_CommonFlag_1(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	return _1bd7016a9_Name(_self_.safe_ptr<_1bd701a72_Flag>());
}
inline jule::I32 _1ad49114b_Short_CommonFlag_1(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	return _1bd701ea1_Short(_self_.safe_ptr<_1bd701a72_Flag>());
}
inline jule::Str _1ad4c2d4d_What_CommonFlag_1(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	return _1bd7017ec_What(_self_.safe_ptr<_1bd701a72_Flag>());
}
inline void _1ad4c2e91_Reset_CommonFlag_1(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	_1bd701d5d_Reset(_self_.safe_ptr<_1bd701a72_Flag>());
}
inline jule::Str _1ad490ea3_Name_CommonFlag_2(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	return _1bd704da5_Name(_self_.safe_ptr<_1bd70526d_Flag>());
}
inline jule::I32 _1ad49114b_Short_CommonFlag_2(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	return _1bd70569c_Short(_self_.safe_ptr<_1bd70526d_Flag>());
}
inline jule::Str _1ad4c2d4d_What_CommonFlag_2(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	return _1bd704ee8_What(_self_.safe_ptr<_1bd70526d_Flag>());
}
inline void _1ad4c2e91_Reset_CommonFlag_2(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	_1bd705559_Reset(_self_.safe_ptr<_1bd70526d_Flag>());
}
inline jule::Str _1ad490ea3_Name_CommonFlag_3(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	return _1bd7085e5_Name(_self_.safe_ptr<_1bd7089ad_Flag>());
}
inline jule::I32 _1ad49114b_Short_CommonFlag_3(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	return _1bd708ddc_Short(_self_.safe_ptr<_1bd7089ad_Flag>());
}
inline jule::Str _1ad4c2d4d_What_CommonFlag_3(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	return _1bd708738_What(_self_.safe_ptr<_1bd7089ad_Flag>());
}
inline void _1ad4c2e91_Reset_CommonFlag_3(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	_1bd708c99_Reset(_self_.safe_ptr<_1bd7089ad_Flag>());
}
inline jule::Str _1ad490ea3_Name_CommonFlag_4(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	return _1bd70bce1_Name(_self_.safe_ptr<_1bd70c1a9_Flag>());
}
inline jule::I32 _1ad49114b_Short_CommonFlag_4(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	return _1bd70c5d8_Short(_self_.safe_ptr<_1bd70c1a9_Flag>());
}
inline jule::Str _1ad4c2d4d_What_CommonFlag_4(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	return _1bd70be34_What(_self_.safe_ptr<_1bd70c1a9_Flag>());
}
inline void _1ad4c2e91_Reset_CommonFlag_4(jule::Trait<_1ad4c30d4_CommonFlag> _self_) {
	_1bd70c495_Reset(_self_.safe_ptr<_1bd70c1a9_Flag>());
}


static _1ab137256_comptimeRangeKindMptrData _1ab137256_comptimeRangeKind_mptr_data[] = {
	{
		._1ab13694d_ready=_1ab13694d_ready_comptimeRangeKind_0,
		._1ab136d6b_step=_1ab136d6b_step_comptimeRangeKind_0,
		._1ab137102_len=_1ab137102_len_comptimeRangeKind_0,
	},
	{
		._1ab13694d_ready=_1ab13694d_ready_comptimeRangeKind_1,
		._1ab136d6b_step=_1ab136d6b_step_comptimeRangeKind_1,
		._1ab137102_len=_1ab137102_len_comptimeRangeKind_1,
	},
	{
		._1ab13694d_ready=_1ab13694d_ready_comptimeRangeKind_2,
		._1ab136d6b_step=_1ab136d6b_step_comptimeRangeKind_2,
		._1ab137102_len=_1ab137102_len_comptimeRangeKind_2,
	},
	{
		._1ab13694d_ready=_1ab13694d_ready_comptimeRangeKind_3,
		._1ab136d6b_step=_1ab136d6b_step_comptimeRangeKind_3,
		._1ab137102_len=_1ab137102_len_comptimeRangeKind_3,
	},
	{
		._1ab13694d_ready=_1ab13694d_ready_comptimeRangeKind_4,
		._1ab136d6b_step=_1ab136d6b_step_comptimeRangeKind_4,
		._1ab137102_len=_1ab137102_len_comptimeRangeKind_4,
	},
	{
		._1ab13694d_ready=_1ab13694d_ready_comptimeRangeKind_5,
		._1ab136d6b_step=_1ab136d6b_step_comptimeRangeKind_5,
		._1ab137102_len=_1ab137102_len_comptimeRangeKind_5,
	},
};
static _1ab181cc8_ImporterMptrData _1ab181cc8_Importer_mptr_data[] = {
	{
		._1ab180aa7_SetModPath=_1ab180aa7_SetModPath_Importer_0,
		._1ab180d3d_GetModPath=_1ab180d3d_GetModPath_Importer_0,
		._1ab18117e_ModById=_1ab18117e_ModById_Importer_0,
		._1ab1814c0_GetImport=_1ab1814c0_GetImport_Importer_0,
		._1ab1818bb_ImportPackage=_1ab1818bb_ImportPackage_Importer_0,
		._1ab181b74_Imported=_1ab181b74_Imported_Importer_0,
	},
};
static _1ab25a566_KindMptrData _1ab25a566_Kind_mptr_data[] = {
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_0,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_0,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_1,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_1,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_2,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_2,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_3,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_3,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_4,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_4,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_5,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_5,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_6,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_6,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_7,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_7,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_8,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_8,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_9,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_9,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_10,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_10,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_11,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_11,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_12,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_12,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_13,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_13,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_14,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_14,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_15,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_15,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_16,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_16,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_17,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_17,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_18,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_18,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_19,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_19,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_20,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_20,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_21,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_21,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_22,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_22,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_23,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_23,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_24,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_24,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_25,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_25,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_26,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_26,
	},
	{
		._1ab25a0c1_Str=_1ab25a0c1_Str_Kind_27,
		._1ab25a412_Equal=_1ab25a412_Equal_Kind_27,
	},
};
static _1ab27a553_LookupMptrData _1ab27a553_Lookup_mptr_data[] = {
	{
		._1ab27883c_SelectPackage=_1ab27883c_SelectPackage_Lookup_0,
		._1ab278c38_FindVar=_1ab278c38_FindVar_Lookup_0,
		._1ab279134_FindTypeAlias=_1ab279134_FindTypeAlias_Lookup_0,
		._1ab279530_FindStruct=_1ab279530_FindStruct_Lookup_0,
		._1ab27992b_FindFn=_1ab27992b_FindFn_Lookup_0,
		._1ab279c6c_FindTrait=_1ab279c6c_FindTrait_Lookup_0,
		._1ab27a0ad_FindEnum=_1ab27a0ad_FindEnum_Lookup_0,
		._1ab27a3ee_FindTypeEnum=_1ab27a3ee_FindTypeEnum_Lookup_0,
	},
	{
		._1ab27883c_SelectPackage=_1ab27883c_SelectPackage_Lookup_1,
		._1ab278c38_FindVar=_1ab278c38_FindVar_Lookup_1,
		._1ab279134_FindTypeAlias=_1ab279134_FindTypeAlias_Lookup_1,
		._1ab279530_FindStruct=_1ab279530_FindStruct_Lookup_1,
		._1ab27992b_FindFn=_1ab27992b_FindFn_Lookup_1,
		._1ab279c6c_FindTrait=_1ab279c6c_FindTrait_Lookup_1,
		._1ab27a0ad_FindEnum=_1ab27a0ad_FindEnum_Lookup_1,
		._1ab27a3ee_FindTypeEnum=_1ab27a3ee_FindTypeEnum_Lookup_1,
	},
	{
		._1ab27883c_SelectPackage=_1ab27883c_SelectPackage_Lookup_2,
		._1ab278c38_FindVar=_1ab278c38_FindVar_Lookup_2,
		._1ab279134_FindTypeAlias=_1ab279134_FindTypeAlias_Lookup_2,
		._1ab279530_FindStruct=_1ab279530_FindStruct_Lookup_2,
		._1ab27992b_FindFn=_1ab27992b_FindFn_Lookup_2,
		._1ab279c6c_FindTrait=_1ab279c6c_FindTrait_Lookup_2,
		._1ab27a0ad_FindEnum=_1ab27a0ad_FindEnum_Lookup_2,
		._1ab27a3ee_FindTypeEnum=_1ab27a3ee_FindTypeEnum_Lookup_2,
	},
	{
		._1ab27883c_SelectPackage=_1ab27883c_SelectPackage_Lookup_3,
		._1ab278c38_FindVar=_1ab278c38_FindVar_Lookup_3,
		._1ab279134_FindTypeAlias=_1ab279134_FindTypeAlias_Lookup_3,
		._1ab279530_FindStruct=_1ab279530_FindStruct_Lookup_3,
		._1ab27992b_FindFn=_1ab27992b_FindFn_Lookup_3,
		._1ab279c6c_FindTrait=_1ab279c6c_FindTrait_Lookup_3,
		._1ab27a0ad_FindEnum=_1ab27a0ad_FindEnum_Lookup_3,
		._1ab27a3ee_FindTypeEnum=_1ab27a3ee_FindTypeEnum_Lookup_3,
	},
	{
		._1ab27883c_SelectPackage=_1ab27883c_SelectPackage_Lookup_4,
		._1ab278c38_FindVar=_1ab278c38_FindVar_Lookup_4,
		._1ab279134_FindTypeAlias=_1ab279134_FindTypeAlias_Lookup_4,
		._1ab279530_FindStruct=_1ab279530_FindStruct_Lookup_4,
		._1ab27992b_FindFn=_1ab27992b_FindFn_Lookup_4,
		._1ab279c6c_FindTrait=_1ab279c6c_FindTrait_Lookup_4,
		._1ab27a0ad_FindEnum=_1ab27a0ad_FindEnum_Lookup_4,
		._1ab27a3ee_FindTypeEnum=_1ab27a3ee_FindTypeEnum_Lookup_4,
	},
};
static _1ad4c30d4_CommonFlagMptrData _1ad4c30d4_CommonFlag_mptr_data[] = {
	{
		._1ad490ea3_Name=_1ad490ea3_Name_CommonFlag_0,
		._1ad49114b_Short=_1ad49114b_Short_CommonFlag_0,
		._1ad4c2d4d_What=_1ad4c2d4d_What_CommonFlag_0,
		._1ad4c2e91_Reset=_1ad4c2e91_Reset_CommonFlag_0,
	},
	{
		._1ad490ea3_Name=_1ad490ea3_Name_CommonFlag_1,
		._1ad49114b_Short=_1ad49114b_Short_CommonFlag_1,
		._1ad4c2d4d_What=_1ad4c2d4d_What_CommonFlag_1,
		._1ad4c2e91_Reset=_1ad4c2e91_Reset_CommonFlag_1,
	},
	{
		._1ad490ea3_Name=_1ad490ea3_Name_CommonFlag_2,
		._1ad49114b_Short=_1ad49114b_Short_CommonFlag_2,
		._1ad4c2d4d_What=_1ad4c2d4d_What_CommonFlag_2,
		._1ad4c2e91_Reset=_1ad4c2e91_Reset_CommonFlag_2,
	},
	{
		._1ad490ea3_Name=_1ad490ea3_Name_CommonFlag_3,
		._1ad49114b_Short=_1ad49114b_Short_CommonFlag_3,
		._1ad4c2d4d_What=_1ad4c2d4d_What_CommonFlag_3,
		._1ad4c2e91_Reset=_1ad4c2e91_Reset_CommonFlag_3,
	},
	{
		._1ad490ea3_Name=_1ad490ea3_Name_CommonFlag_4,
		._1ad49114b_Short=_1ad49114b_Short_CommonFlag_4,
		._1ad4c2d4d_What=_1ad4c2d4d_What_CommonFlag_4,
		._1ad4c2e91_Reset=_1ad4c2e91_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab120d00_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1ab120d00_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c7a66_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1ab1c7a66_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab10acb8_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1ab10acb8_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab131195_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1ab131195_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab103d27_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1ab103d27_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0edcab_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1ab0edcab_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab102e7a_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1ab102e7a_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0e9108_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1ab0e9108_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1036b7_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1ab1036b7_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0ea1d6_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1ab0ea1d6_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab101330_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1ab101330_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1022ba_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1ab1022ba_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d8bd00bd_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1d8bd00bd_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0d7a53_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1ab0d7a53_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab166153_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1ab166153_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1637b0_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1ab1637b0_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1189b8_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1ab1189b8_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab22a228_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1ab22a228_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab119bb7_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1ab119bb7_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab117742_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1ab117742_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab115c7e_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1ab115c7e_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab116158_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1ab116158_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab11690b_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1ab11690b_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab116db2_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1ab116db2_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1185de_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1ab1185de_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab118215_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1ab118215_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab119eb4_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1ab119eb4_FreeExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab112187_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1ab112187_FnCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1643e8_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1ab1643e8_Conditional> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1646e5_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1ab1646e5_InfIter> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0eb57d_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1ab0eb57d_WhileKind> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab164b9b_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1ab164b9b_WhileIter> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0ebe85_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1ab0ebe85_RangeKind> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1655e7_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1ab1655e7_RangeIter> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab16597c_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1ab16597c_ContSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab16652c_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1ab16652c_GotoSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab166906_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1ab166906_Postfix> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab166dac_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1ab166dac_Assign> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab112a17_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1ab112a17_IndexingExprModel> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab167286_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1ab167286_MultiAssign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1678e6_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1ab1678e6_Match> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab168b28_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1ab168b28_FallSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab165d56_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1ab165d56_BreakSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab168ead_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1ab168ead_RetSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0e7469_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1ab0e7469_ScopeTree> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0db77c_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1ab0db77c_Expr> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0ed56e_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1ab0ed56e_Conditional> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0eac53_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1ab0eac53_Iter> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0ec738_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1ab0ec738_ContSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0e4a2c_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1ab0e4a2c_LabelSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0e4e06_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1ab0e4e06_GotoSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0e5de6_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1ab0e5de6_AssignSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0ee99e_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1ab0ee99e_MatchCase> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0e5203_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1ab0e5203_FallSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0ec35e_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1ab0ec35e_BreakSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0ea5b0_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1ab0ea5b0_RetSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0dc151_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1ab0dc151_UseExpr> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab11cdeb_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1ab11cdeb_Fn> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab10803a_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1ab10803a_Struct> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab259c2a_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1ab259c2a_TypeAlias> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab133890_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1ab133890_Enum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab13509a_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1ab13509a_TypeEnum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0d9714_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1ab0d9714_ArrTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0d8878_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1ab0d8878_SlcTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0d8e72_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1ab0d8e72_PtrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0d84e3_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1ab0d84e3_SptrTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0d9e62_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1ab0d9e62_MapTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0d8b75_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1ab0d8b75_TupleTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0ddc13_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1ab0ddc13_VariadicExpr> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab112561_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1ab112561_SliceExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0e0e9b_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1ab0e0e9b_FieldExprPair> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0e25a7_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1ab0e25a7_KeyValPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0dd1a7_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1ab0dd1a7_IdentExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0dc44d_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1ab0dc44d_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1158a5_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1ab1158a5_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1194e1_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1ab1194e1_RuneExprModel> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab25aa1c_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1ab25aa1c_TypeKind> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1155a8_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1ab1155a8_ArrayExprModel> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0de890_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1ab0de890_SubIdentExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0d7d50_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1ab0d7d50_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0dd839_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1ab0dd839_UnaryExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0d7448_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1ab0d7448_TypeDecl> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0de4b6_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1ab0de4b6_NsSelectionExpr> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0d81e6_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1ab0d81e6_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab113d04_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1ab113d04_SlicingExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1117d5_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1ab1117d5_CastingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0e2ca0_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1ab0e2ca0_SliceExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab110e55_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1ab110e55_StructLitExprModel> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1151ce_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1ab1151ce_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab114387_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1ab114387_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab114c28_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1ab114c28_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab113771_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1ab113771_MapExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab112de1_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1ab112de1_AnonFnExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0dba79_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1ab0dba79_RangeExpr> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0dc827_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1ab0dc827_LitExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0dcc01_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1ab0dcc01_UnsafeExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0e3740_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1ab0e3740_IndexingExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0e3da0_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1ab0e3da0_SlicingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0de0dc_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1ab0de0dc_CastExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0e17c6_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1ab0e17c6_StructLit> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0e04a6_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1ab0e04a6_FnCallExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0e1c7c_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1ab0e1c7c_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0ded46_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1ab0ded46_BinopExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab110581_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1ab110581_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1101a7_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1ab1101a7_BinopExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab111252_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1ab111252_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab116532_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1ab116532_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab117368_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1ab117368_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab117a3e_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1ab117a3e_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab117d3b_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1ab117d3b_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab114574_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1ab114574_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1191e4_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1ab1191e4_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1197dd_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1ab1197dd_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab35682c_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1ab35682c_MutSlicingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab357355_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1ab357355_PushToSliceExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab35772e_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1ab35772e_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab355551_SwapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1ab355551_SwapExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab35596e_EmptyCompareExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1ab35596e_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab356299_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1ab356299_StrCompExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab356b29_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1ab356b29_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab355c6b_RefExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1ab355c6b_RefExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab356e26_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1ab356e26_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type129_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type129_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=__jule_any_type129_eq, .to_str=__jule_any_type129_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type129 && __jule_any_type129_eq(any.data.alloc, (void*)&other); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type130_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type130_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=__jule_any_type130_eq, .to_str=__jule_any_type130_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type130 && __jule_any_type130_eq(any.data.alloc, (void*)&other); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _1d7c974d8_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str::lit("help", 4),jule::Str::lit("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str::lit("version", 7),jule::Str::lit("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str::lit("tool", 4),jule::Str::lit("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str::lit("julenv", 6),jule::Str::lit("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str::lit("mod", 3),jule::Str::lit("Module management", 17)})});
jule::Str _1ad4c9b79_OutDir = jule::Str::lit("dist", 4);
jule::Str _1ad4c9e65_OutName = jule::Str::lit("ir.cpp", 6);
jule::Str _1ad4ca22e_Out = jule::Str();
jule::Str _2014c19c9_Compiler = jule::Str();
jule::Str _2014c2cb6_CompilerPath = jule::Str();
jule::Str _2014c3019_CppStd = jule::Str::lit("cpp17", 5);
jule::Bool _2014c32a0_Shadowing = false;
jule::Bool _2014c3569_Transpilation = false;
jule::Bool _2014c3833_Test = false;
jule::Bool _2014c3aec_RC = true;
jule::Bool _2014c3ec6_Safety = true;
jule::Bool _2014c4290_Production = false;
jule::Ptr<_2038ce2ad_RangeTable> _203869a73__L = jule::new_ptr<_2038ce2ad_RangeTable>(_2038ce2ad_RangeTable{._field_R16=jule::Slice<_2038cd7c9_Range16>::make({_2038cd7c9_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_2038cd7c9_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_2038cd7c9_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_2038cd7c9_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_2038cd7c9_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_2038cd7c9_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_2038cd7c9_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_2038cd7c9_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_2038cd7c9_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_2038cd7c9_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_2038cd7c9_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_2038cd7c9_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_2038cd7c9_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_2038cd7c9_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_2038cd7c9_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_2038cd7c9_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_2038cd7c9_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_2038cd7c9_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_2038cd7c9_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_2038cd7c9_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_2038cd7c9_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_2038cd7c9_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_2038cd7c9_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_2038cd7c9_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_2038cd7c9_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_2038cd7c9_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_2038cd7c9_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_2038cd7c9_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_2038cd7c9_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_2038cd7c9_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_2038cd7c9_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_2038cd7c9_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_2038cd7c9_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_2038cd7c9_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_2038cd7c9_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_2038cd7c9_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_2038cd7c9_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_2038cd7c9_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_2038cd7c9_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_2038cd7c9_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_2038cd7c9_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_2038cd7c9_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_2038cd7c9_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_2038cd7c9_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_2038cd7c9_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_2038cd7c9_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_2038cd7c9_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_2038cd7c9_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_2038cd7c9_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_2038cd7c9_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_2038cd7c9_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_2038cd7c9_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_2038cd7c9_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_2038cd7c9_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_2038cd7c9_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_2038cd7c9_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_2038cd7c9_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_2038cd7c9_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_2038cd7c9_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_2038cd7c9_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_2038cdd07_Range32>::make({_2038cdd07_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_2038cdd07_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_2038cdd07_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_2038cdd07_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_2038cdd07_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_2038cdd07_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_2038cdd07_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_2038cdd07_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_2038cdd07_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_2038cdd07_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_2038cdd07_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_2038cdd07_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_2038cdd07_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_2038cdd07_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_2038cdd07_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_2038cdd07_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_2038cdd07_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_2038cdd07_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_2038cdd07_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_2038cdd07_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_2038cdd07_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_2038cdd07_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_2038cdd07_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_2038cdd07_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_2038cdd07_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_2038cdd07_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_2038cdd07_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_2038cdd07_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_2038cdd07_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_2038cdd07_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_2038cdd07_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_2038cdd07_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_2038cdd07_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_2038cdd07_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_2038cdd07_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_2038cdd07_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_2038cdd07_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_2038cdd07_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_2038cdd07_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_2038cdd07_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_2038cdd07_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_2038cdd07_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_2038cdd07_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_2038ce2ad_RangeTable> _20386aa63__LU = jule::new_ptr<_2038ce2ad_RangeTable>(_2038ce2ad_RangeTable{._field_R16=jule::Slice<_2038cd7c9_Range16>::make({_2038cd7c9_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_2038cd7c9_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_2038cd7c9_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_2038cd7c9_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_2038cd7c9_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_2038cd7c9_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_2038cd7c9_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_2038cd7c9_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_2038cd7c9_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_2038cd7c9_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_2038cd7c9_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_2038cd7c9_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_2038cd7c9_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_2038cd7c9_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_2038cd7c9_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_2038cd7c9_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_2038cd7c9_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_2038cdd07_Range32>::make({_2038cdd07_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_2038cdd07_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_2038cdd07_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_2038cdd07_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_2038cdd07_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_2038cdd07_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_2038cdd07_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _2038c7ae2__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _1d7a7b6da_first = jule::Array<jule::U8,256>({240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,19LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,35LLU,3LLU,3LLU,52LLU,4LLU,4LLU,4LLU,68LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU});
jule::Array<_1d7a7bc6d_acceptRange,16> _1d7a7c07b_acceptRanges = jule::Array<_1d7a7bc6d_acceptRange,16>({_1d7a7bc6d_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_1d7a7bc6d_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_1d7a7bc6d_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_1d7a7bc6d_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_1d7a7bc6d_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Str,4> _1d7b74063_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str::lit(".h", 2),jule::Str::lit(".hpp", 4),jule::Str::lit(".hxx", 4),jule::Str::lit(".hh", 3)});
jule::Array<jule::Str,3> _1d7b72d31_CppExts = jule::Array<jule::Str,3>({jule::Str::lit(".cpp", 4),jule::Str::lit(".cc", 3),jule::Str::lit(".cxx", 4)});
jule::Array<jule::Str,1> _1d7b749c0_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str::lit(".mm", 3)});
jule::Str _1d7c936d2_PathStdlib = jule::Str();
jule::Str _1d7c93935_PathExec = jule::Str();
jule::Str _1d7c93bdd_PathWd = jule::Str();
jule::Str _1d7c93eeb_PathApi = jule::Str();
jule::Str _1d7c942b5_Os = jule::Str::lit("linux", 5);
jule::Str _1d7c9457e_Arch = jule::Str::lit("arm64", 5);
jule::Array<jule::U8,32> _1d8b613c3__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1d8b61989__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1d8ba6a56_floatInfo _1d8ba6e41_f32info = _1d8ba6a56_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1d8ba6a56_floatInfo _1d8ba724e_f64info = _1d8ba6a56_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1d8baec7e_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1d8bb1ad8_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1d8bb26aa_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1d8bb29eb_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1d8bb5c63_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1d8bb9a36_leftCheat> _1d8bb9e65_leftCheats = jule::Slice<_1d8bb9a36_leftCheat>::make({_1d8bb9a36_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1d8bb9a36_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)},_1d8bb9a36_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)},_1d8bb9a36_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)},_1d8bb9a36_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)},_1d8bb9a36_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)},_1d8bb9a36_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)},_1d8bb9a36_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)},_1d8bb9a36_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)},_1d8bb9a36_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)},_1d8bb9a36_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)},_1d8bb9a36_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)},_1d8bb9a36_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)},_1d8bb9a36_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)},_1d8bb9a36_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)},_1d8bb9a36_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)},_1d8bb9a36_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)},_1d8bb9a36_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)},_1d8bb9a36_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)},_1d8bb9a36_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)},_1d8bb9a36_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)},_1d8bb9a36_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)},_1d8bb9a36_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)},_1d8bb9a36_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)},_1d8bb9a36_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)},_1d8bb9a36_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)},_1d8bb9a36_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)},_1d8bb9a36_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)},_1d8bb9a36_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)},_1d8bb9a36_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)},_1d8bb9a36_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)},_1d8bb9a36_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)},_1d8bb9a36_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)},_1d8bb9a36_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)},_1d8bb9a36_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)},_1d8bb9a36_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)},_1d8bb9a36_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)},_1d8bb9a36_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)},_1d8bb9a36_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)},_1d8bb9a36_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)},_1d8bb9a36_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)},_1d8bb9a36_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)},_1d8bb9a36_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)},_1d8bb9a36_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)},_1d8bb9a36_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)},_1d8bb9a36_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)},_1d8bb9a36_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)},_1d8bb9a36_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)},_1d8bb9a36_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)},_1d8bb9a36_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)},_1d8bb9a36_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)},_1d8bb9a36_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)},_1d8bb9a36_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)},_1d8bb9a36_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)},_1d8bb9a36_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)},_1d8bb9a36_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)},_1d8bb9a36_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)},_1d8bb9a36_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)},_1d8bb9a36_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)},_1d8bb9a36_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)},_1d8bb9a36_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1d8bc0e27_BitSize = 0LL;
jule::Str _1d8bc1235_SysInt = jule::Str();
jule::Str _1d8bc14ee_SysUint = jule::Str();
jule::Array<jule::I32,5> _1ab024b05_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U64,6> _1ab024d7a_UnaryOps = jule::Array<jule::U64,6>({static_cast<jule::U64>(61LLU),static_cast<jule::U64>(60LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(68LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(65LLU)});
jule::Array<jule::U64,18> _1ab0251bb_BinOps = jule::Array<jule::U64,18>({static_cast<jule::U64>(60LLU),static_cast<jule::U64>(61LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(63LLU),static_cast<jule::U64>(64LLU),static_cast<jule::U64>(65LLU),static_cast<jule::U64>(66LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(56LLU),static_cast<jule::U64>(57LLU),static_cast<jule::U64>(69LLU),static_cast<jule::U64>(70LLU),static_cast<jule::U64>(53LLU),static_cast<jule::U64>(52LLU),static_cast<jule::U64>(54LLU),static_cast<jule::U64>(55LLU),static_cast<jule::U64>(50LLU),static_cast<jule::U64>(51LLU)});
jule::Array<jule::U64,2> _1ab0bb43d_PostfixOps = jule::Array<jule::U64,2>({static_cast<jule::U64>(58LLU),static_cast<jule::U64>(59LLU)});
jule::Array<jule::U64,11> _1ab0bb73a_AssignOps = jule::Array<jule::U64,11>({static_cast<jule::U64>(71LLU),static_cast<jule::U64>(40LLU),static_cast<jule::U64>(41LLU),static_cast<jule::U64>(43LLU),static_cast<jule::U64>(42LLU),static_cast<jule::U64>(44LLU),static_cast<jule::U64>(46LLU),static_cast<jule::U64>(45LLU),static_cast<jule::U64>(49LLU),static_cast<jule::U64>(48LLU),static_cast<jule::U64>(47LLU)});
jule::Array<_1ab0c9869_kindPair,28> _1ab0c9c98_keywords = jule::Array<_1ab0c9869_kindPair,28>({_1ab0c9869_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U64>(2LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U64>(7LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U64>(9LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U64>(10LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U64>(11LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U64>(12LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U64>(13LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U64>(14LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U64>(16LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U64>(18LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U64>(20LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U64>(21LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U64>(23LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U64>(25LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U64>(26LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U64>(27LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U64>(29LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U64>(31LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U64>(32LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U64>(33LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<_1ab0c9869_kindPair,46> _1ab0ca0d9_basicOps = jule::Array<_1ab0c9869_kindPair,46>({_1ab0c9869_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U64>(19LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U64>(38LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U64>(3LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U64>(39LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U64>(17LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U64>(40LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U64>(41LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U64>(42LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U64>(43LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U64>(44LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U64>(45LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U64>(46LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U64>(47LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U64>(48LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U64>(49LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U64>(50LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U64>(51LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U64>(52LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U64>(53LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U64>(54LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U64>(55LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U64>(56LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U64>(57LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U64>(58LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U64>(59LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U64>(60LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U64>(61LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U64>(62LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U64>(63LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U64>(64LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U64>(65LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U64>(66LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U64>(67LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U64>(68LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U64>(69LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U64>(70LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U64>(71LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U64>(35LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U64>(72LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U64>(73LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U64>(76LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U64>(77LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U64>(74LLU)},_1ab0c9869_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U64>(75LLU)}});
jule::Slice<jule::Str> _1ab15a9e9_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str::lit("signed", 6),jule::Str::lit("unsigned", 8),jule::Str::lit("float", 5),jule::Str::lit("numeric", 7),jule::Str::lit("mutable", 7),jule::Str::lit("immutable", 9),jule::Str::lit("ordered", 7),jule::Str::lit("comparable", 10)});
jule::Ptr<_1ab25aa1c_TypeKind> _1ab343264_primNil = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1ab25aa1c_TypeKind> _1ab343572_primVoid = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab27793a_buildPrimType(jule::Str::lit("void", 4)), 20)});
jule::Ptr<_1ab25aa1c_TypeKind> _1ab34383b_primAny = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab27793a_buildPrimType(jule::Str::lit("any", 3)), 20)});
jule::Ptr<_1ab25aa1c_TypeKind> _1ab343b49_primStr = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab27793a_buildPrimType(jule::Str::lit("str", 3)), 20)});
jule::Ptr<_1ab25aa1c_TypeKind> _1ab343e13_primBool = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab27793a_buildPrimType(jule::Str::lit("bool", 4)), 20)});
jule::Ptr<_1ab25aa1c_TypeKind> _1ab3441cc_primUintptr = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab27793a_buildPrimType(jule::Str::lit("uintptr", 7)), 20)});
jule::Ptr<_1ab25aa1c_TypeKind> _1ab344496_primUint = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab27793a_buildPrimType(jule::Str::lit("uint", 4)), 20)});
jule::Ptr<_1ab25aa1c_TypeKind> _1ab344870_primInt = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab27793a_buildPrimType(jule::Str::lit("int", 3)), 20)});
jule::Ptr<_1ab25aa1c_TypeKind> _1ab344b39_primI8 = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab27793a_buildPrimType(jule::Str::lit("i8", 2)), 20)});
jule::Ptr<_1ab25aa1c_TypeKind> _1ab344e03_primI16 = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab27793a_buildPrimType(jule::Str::lit("i16", 3)), 20)});
jule::Ptr<_1ab25aa1c_TypeKind> _1ab3451bc_primI32 = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab27793a_buildPrimType(jule::Str::lit("i32", 3)), 20)});
jule::Ptr<_1ab25aa1c_TypeKind> _1ab345486_primI64 = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab27793a_buildPrimType(jule::Str::lit("i64", 3)), 20)});
jule::Ptr<_1ab25aa1c_TypeKind> _1ab345750_primU8 = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab27793a_buildPrimType(jule::Str::lit("u8", 2)), 20)});
jule::Ptr<_1ab25aa1c_TypeKind> _1ab345a19_primU16 = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab27793a_buildPrimType(jule::Str::lit("u16", 3)), 20)});
jule::Ptr<_1ab25aa1c_TypeKind> _1ab345cd3_primU32 = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab27793a_buildPrimType(jule::Str::lit("u32", 3)), 20)});
jule::Ptr<_1ab25aa1c_TypeKind> _1ab346256_primU64 = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab27793a_buildPrimType(jule::Str::lit("u64", 3)), 20)});
jule::Ptr<_1ab25aa1c_TypeKind> _1ab346520_primF32 = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab27793a_buildPrimType(jule::Str::lit("f32", 3)), 20)});
jule::Ptr<_1ab25aa1c_TypeKind> _1ab3467d9_primF64 = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab27793a_buildPrimType(jule::Str::lit("f64", 3)), 20)});
jule::Bool _1ab367574_Copy = false;
jule::Bool _1ab367882_Deadcode = false;
jule::Bool _1ab367b4b_Append = false;
jule::Bool _1ab367e59_Math = false;
jule::Bool _1ab368223_Access = false;
jule::Bool _1ab3684dc_Inline = false;
jule::Bool _1ab3687a6_Ptr = false;
jule::Bool _1ab368b80_Cond = false;
jule::Bool _1ab368e49_Str = false;
jule::Bool _1ab369213_Slice = false;
jule::Bool _1ab3694cc_Assign = false;
jule::Bool _1acb4413a_exprEnabled = false;
jule::Bool _1acb44448_scopeEnabled = false;
jule::Array<jule::U64,12> _1ad2c4215_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1ad1ece0d_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
jule::Ptr<_2038ce2ad_RangeTable> _203878268_Upper = _20386aa63__LU;
jule::Ptr<_2038ce2ad_RangeTable> _203871c12_Letter = _203869a73__L;



std::ostream &operator<<(std::ostream &_Stream, _2038cd7c9_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2038cdd07_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2038ce2ad_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d7a7bc6d_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _1d7ad2eb1_StrBuilder static__1d7ad327a_New(jule::I64 _1519_cap) {
	if ((_1519_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:13"));;
	};
	return _1d7ad2eb1_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1519_cap, 0)};;
}



inline void _1d7adb7d3_Write(_1d7ad2eb1_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b) {
	((*(_self_))._field_buf).append(_2524_b);;
}



inline void _1d7adba8b_WriteStr(_1d7ad2eb1_StrBuilder* _self_, jule::Str _3027_s) {
	((*(_self_))._field_buf).append(_2025de4ec_StrBytes(_3027_s));;
}



inline void _1d7adbd44_WriteByte(_1d7ad2eb1_StrBuilder* _self_, jule::U8 _3528_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3528_b); };
}



inline jule::Str _1d7adc383_Str(_1d7ad2eb1_StrBuilder* _self_) {
	return static_cast<jule::Str>((*(_self_))._field_buf);;
}



inline void _1d7adc581_Clear(_1d7ad2eb1_StrBuilder* _self_) {
	(*(_self_))._field_buf=(*(_self_))._field_buf.slice(0LL, 0LL);
}



inline jule::I64 _1d7adc817_Len(_1d7ad2eb1_StrBuilder* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buf.len());;
}



inline jule::Slice<jule::U8> _1d7adcd34_Buf(_1d7ad2eb1_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1d7add0dc_SetBuf(_1d7ad2eb1_StrBuilder* _self_, jule::Slice<jule::U8> _7536_buf) {
	(*(_self_))._field_buf=_7536_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _1d7ad2eb1_StrBuilder _Src) {
	_Stream << _1d7adc383_Str(&_Src);
	return _Stream;
}



inline jule::U8 _1d7addd9b_index(_1d7add917_lazyBuff* _self_, jule::I64 _5524_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5524_i];;
	};
	return (*(_self_))._field_path[_5524_i];;
}



inline void _1d7ade154_append(_1d7add917_lazyBuff* _self_, jule::U8 _6225_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6225_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), ((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w)).fake_slice());
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6225_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1d7ade3da_string(_1d7add917_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _2025de7b6_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1d7add917_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _202527127_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_202527127_DirEntry>>> static__1d7ae328a_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_202527127_DirEntry>> __jule_func_result;
	DIR* _1613_dir = _2024e3324_Opendir((&(_1520_path[0LL])));;
	if ((_1613_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_202527127_DirEntry>>>(jule::Any(_2025256a8_getLastFsError(), &__jule_any_type0));
	};
	for (;;) {
		{
			struct dirent* _2113_dirent = _2024e35dd_Readdir(_1613_dir);;
			if ((_2113_dirent == nullptr)) {
				goto _iter_end_1bae49e8d;
			};
			jule::Str _2513_name = _2024d292e_BytePtrToStr(((jule::U8*)((*(_2113_dirent)).d_name)));;
			jule::Ptr<_20252ae72_Status> _2617_stat = ({
				auto except = static__202527b0b_Of(_1d7ae0133_Join(jule::Slice<jule::Str>::make({_1520_path,_2513_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_202527127_DirEntry>>>(except.error);
				} jule::Ptr<_20252ae72_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_202527127_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_202527127_DirEntry>(_202527127_DirEntry{._field_Name=_2513_name, ._field_Stat=_2617_stat})); };
		}
	_iter_next_1bae49e8d:;
	}
	_iter_end_1bae49e8d:;;
	_2024e38a7_Closedir(_1613_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_202527127_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__1d7ae34bb_Create(jule::Str _3922_path) {
	if ((_2024e42ae_Mkdir((&(_3922_path[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_2025256a8_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1d7ae36ec_Remove(jule::Str _5122_path) {
	if ((_2024e4578_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_2025256a8_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _20252738b_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_202528d82_File>> static__202526049_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _199_handle = _2024e29a5_Open((&(_1820_path[0LL])), static_cast<jule::I64>(_1831_flag), _1844_mode);;
	if ((_199_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_202528d82_File>>(jule::Any(_2025256a8_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_202528d82_File>>(jule::Any(), static__2025292a0_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_199_handle))));;
}



inline jule::VoidExceptional static__20252627a_Remove(jule::Str _3022_path) {
	if ((_2024e4842_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_2025256a8_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _20252670e_Write(_202528d82_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4424_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_2024ea7b0_Write(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_4424_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_2025256a8_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _202526a50_Read(_202528d82_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_6427_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_2024e9eda_Read(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_6427_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_2025256a8_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_202528d82_File> static__2025292a0_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_202528d82_File>(_202528d82_File{._field_handle=_4519_handle});;
}



inline jule::Exceptional<jule::Ptr<_202528d82_File>> static__202529569_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_202528d82_File>>(jule::Any(), ({
		auto except = static__202526049_Open(_5522_path, static_cast<jule::I64>(578LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_202528d82_File>>(except.error);
		} jule::Ptr<_202528d82_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__202529833_Read(jule::Str _6720_path) {
	jule::Ptr<_20252ae72_Status> _689_s = ({
		auto except = static__202527b0b_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_20252ae72_Status>(nullptr);});
	});;
	if ((!(_20252b5d2_IsReg(_689_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_20252b868_Size(_689_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_202528d82_File> _7813_f = ({
		auto except = static__202526049_Open(_6720_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_202528d82_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _20252a416_Close(_7813_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8113_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_20252b868_Size(_689_s.ptr())), static_cast<jule::I64>(_20252b868_Size(_689_s.ptr())), 0);;
	jule::I64 _829_n = ({
		auto except = _202526a50_Read(_7813_f.ptr(), _8113_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8113_buff.slice(0LL, _829_n));;
}



inline jule::VoidExceptional static__202529bc9_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_202528d82_File> _9213_f = ({
		auto except = static__202526049_Open(_9121_path, static_cast<jule::I64>(577LL), _9146_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_202528d82_File>(nullptr);});
	});;
	({
		auto except = _20252670e_Write(_9213_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _20252a416_Close(_9213_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _20252a416_Close(_202528d82_File* _self_) {
	if ((_2024ea381_Close(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_2025256a8_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _202528d82_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_20252ae72_Status>> static__202527b0b_Of(jule::Str _1118_path) {
	if ((_1118_path).empty()) {
		return jule::Exceptional<jule::Ptr<_20252ae72_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	struct stat _1513_handle = (struct stat){};;
	jule::I64 _169_code = _2024e2576_Stat((&(_1118_path[0LL])), (&(_1513_handle)));;
	if ((_169_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_20252ae72_Status>>(jule::Any(_2025256a8_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_20252ae72_Status> _2013_stat = jule::new_ptr<_20252ae72_Status>();;
	(*(_2013_stat))._field_size=_1513_handle.st_size;
	if (((_1513_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*(_2013_stat))._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1513_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*(_2013_stat))._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_20252ae72_Status>>(jule::Any(), _2013_stat);;
}



inline jule::Bool _20252b34b_IsDir(_20252ae72_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _20252b5d2_IsReg(_20252ae72_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _20252b868_Size(_20252ae72_Status* _self_) {
	return (*(_self_))._field_size;;
}





std::ostream &operator<<(std::ostream &_Stream, _20252ae72_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d7c90c73_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d7b81cb8_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d8ba6a56_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d8ba76e4_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d8bb9a36_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d8bb1e29_set(_1d8bba55e_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23913_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23913_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23913_i] == '+')) {
			_case_begin_1bb549e61:;
			{
				(_23913_i)++;
			}
		}
		else if ((_23822_s[_23913_i] == '-')) {
			_case_begin_1bb54a15e:;
			{
				(*(_self_))._field_neg=true;
				(_23913_i)++;
			}
		}
		_match_end_1bb54a071:;
	};
	jule::Bool _25613_sawdot = false;;
	jule::Bool _25713_sawdigits = false;;
	for (; (_23913_i < _23822_s.len()); (_23913_i)++) {
		{
			{
				
				if ((_23822_s[_23913_i] == '_')) {
					_case_begin_1bb54b814:;
					{
						goto _iter_next_1bb54a1c5;
					}
				}
				else if ((_23822_s[_23913_i] == '.')) {
					_case_begin_1bb54b88b:;
					{
						if (_25613_sawdot) {
							return __jule_func_result;;
						};
						_25613_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1bb54a1c5;
					}
				}
				else if ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9'))) {
					_case_begin_1bb54b913:;
					{
						_25713_sawdigits=true;
						if (((_23822_s[_23913_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1bb54a1c5;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23913_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23913_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1bb54a1c5;
					}
				}
				_match_end_1bb54b704:;
			};
			goto _iter_end_1bb54a1c5;
		}
	_iter_next_1bb54a1c5:;
	}
	_iter_end_1bb54a1c5:;;
	if ((!(_25713_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25613_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23913_i < _23822_s.len()) && (_1d8bac3ca_lower(_23822_s[_23913_i]) == 'e'))) {
		(_23913_i)++;
		if ((_23913_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _30217_esign = 1LL;;
		if ((_23822_s[_23913_i] == '+')) {
			(_23913_i)++;
		} else if ((_23822_s[_23913_i] == '-')) {
			(_23913_i)++;
			_30217_esign=-1LL;
		};
		if ((((_23913_i >= _23822_s.len()) || (_23822_s[_23913_i] < '0')) || (_23822_s[_23913_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _31217_e = 0LL;;
		for (; ((_23913_i < _23822_s.len()) && ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9')) || (_23822_s[_23913_i] == '_'))); (_23913_i)++) {
			{
				if ((_23822_s[_23913_i] == '_')) {
					goto _iter_next_1bb5522cb;
				};
				if ((_31217_e < 10000LL)) {
					_31217_e=static_cast<jule::I64>((((_31217_e * 10LL) + static_cast<jule::I64>(_23822_s[_23913_i])) - '0'));
				};
			}
		_iter_next_1bb5522cb:;
		}
		_iter_end_1bb5522cb:;;
		(*(_self_))._field_dp+=(_31217_e * _30217_esign);
	};
	if ((_23913_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1d8bb226a_floatBits(_1d8bba55e_decimal* _self_, _1d8ba6a56_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _33313_exp = 0LL;;
	jule::U64 _33413_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1bb561186;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1bb557de7;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1bb561186;
	};
	_33313_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35917_n = 0LL;;
			if (((*(_self_))._field_dp >= _1d8bb1ad8_powtab.len())) {
				_35917_n=27LL;
			} else {
				_35917_n=_1d8bb1ad8_powtab[(*(_self_))._field_dp];
			};
			_1d8bbabbe_shift(_self_, static_cast<jule::I64>((-(_35917_n))));
			_33313_exp+=_35917_n;
		}
	_iter_next_1bb557930:;
	}
	_iter_end_1bb557930:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36917_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1d8bb1ad8_powtab.len())) {
				_36917_n=27LL;
			} else {
				_36917_n=_1d8bb1ad8_powtab[(-((*(_self_))._field_dp))];
			};
			_1d8bbabbe_shift(_self_, _36917_n);
			_33313_exp-=_36917_n;
		}
	_iter_next_1bb558e5e:;
	}
	_iter_end_1bb558e5e:;;
	(_33313_exp)--;
	if ((_33313_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I64 _38613_n = (((*(_33229_flt))._field_bias + 1LL) - _33313_exp);;
		_1d8bbabbe_shift(_self_, static_cast<jule::I64>((-(_38613_n))));
		_33313_exp+=_38613_n;
	};
	if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1bb557de7;
	};
	_1d8bbabbe_shift(_self_, static_cast<jule::I64>(static_cast<jule::I64>((1LL + (*(_33229_flt))._field_mantbits))));
	_33413_mant=static_cast<jule::U64>(_1d8bbb76e_roundedInteger(_self_));
	if ((_33413_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33413_mant>>=1LLU;
		(_33313_exp)++;
		if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1bb557de7;
		};
	};
	if (((_33413_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33313_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_1bb561186;
	_julec_label_1bb557de7:;
	_33413_mant=0LLU;
	_33313_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33229_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1bb561186:;
	jule::U64 _42213_bits = (_33413_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42213_bits|=(static_cast<jule::U64>(((_33313_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42213_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42213_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1d8bba916_assign(_1d8bba55e_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>(0);;
	jule::I64 _15513_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15713_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15713_v1);
			_15217_buf[_15513_n]=static_cast<jule::U8>(static_cast<jule::U8>((_15129_v + '0')));
			(_15513_n)++;
			_15129_v=_15713_v1;
		}
	_iter_next_1bb56481b:;
	}
	_iter_end_1bb56481b:;;
	(*(_self_))._field_nd=0LL;
	(_15513_n)--;
	for (; (_15513_n >= 0LL); (_15513_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15513_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1bb5650ad:;
	}
	_iter_end_1bb5650ad:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1d8bbbdac_trim(_self_);
}



inline void _1d8bbabbe_shift(_1d8bba55e_decimal* _self_, jule::I64 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1bb5670b0:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1bb567137:;
			{
				while ((_17628_k > 60LL)) {
					{
						_1d8bbc907_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1bb567c81:;
				}
				_iter_end_1bb567c81:;;
				_1d8bbc907_leftShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_17628_k)));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1bb5671ae:;
			{
				while ((_17628_k < -60LL)) {
					{
						_1d8bbc198_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1bb567c09:;
				}
				_iter_end_1bb567c09:;;
				_1d8bbc198_rightShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>((-(_17628_k)))));
			}
		}
		_match_end_1bb566e8e:;
	};
}



inline void _1d8bbae77_roundDown(_1d8bba55e_decimal* _self_, jule::I64 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_1d8bbbdac_trim(_self_);
}



inline void _1d8bbb230_roundUp(_1d8bba55e_decimal* _self_, jule::I64 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _21113_i = (_20526_nd - 1LL);;
	for (; (_21113_i >= 0LL); (_21113_i)--) {
		{
			jule::U8 _21313_c = (*(_self_))._field_d[_21113_i];;
			if ((_21313_c < '9')) {
				((*(_self_))._field_d[_21113_i])++;
				(*(_self_))._field_nd=static_cast<jule::I64>((_21113_i + 1LL));
				return;;
			};
		}
	_iter_next_1bb56b092:;
	}
	_iter_end_1bb56b092:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1d8bbb4d8_round(_1d8bba55e_decimal* _self_, jule::I64 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1d8bbcc7b_shouldRoundUp(_self_, _23224_nd)) {
		_1d8bbb230_roundUp(_self_, _23224_nd);
	} else {
		_1d8bbae77_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _1d8bbb76e_roundedInteger(_1d8bba55e_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _24913_i = 0LL;;
	jule::U64 _25013_n = static_cast<jule::U64>(0LLU);;
	for (; ((_24913_i < (*(_self_))._field_dp) && (_24913_i < (*(_self_))._field_nd)); (_24913_i)++) {
		{
			_25013_n=static_cast<jule::U64>(((_25013_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24913_i] - '0'))));
		}
	_iter_next_1bb56dd86:;
	}
	_iter_end_1bb56dd86:;;
	for (; (_24913_i < (*(_self_))._field_dp); (_24913_i)++) {
		{
			_25013_n*=10LLU;
		}
	_iter_next_1bb574cd2:;
	}
	_iter_end_1bb574cd2:;;
	if (_1d8bbcc7b_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25013_n)++;
	};
	return _25013_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d8bba55e_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d8bd00bd_Const> static__1d8bd050d_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1d8bd00bd_Const>(_1d8bd00bd_Const{._field_data=jule::Any(_1622_x, &__jule_any_type1)});;
}



inline jule::Ptr<_1d8bd00bd_Const> static__1d8bd07c7_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1d8bd00bd_Const>(_1d8bd00bd_Const{._field_data=jule::Any(_1922_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1d8bd00bd_Const> static__1d8bd0a91_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1d8bd00bd_Const>(_1d8bd00bd_Const{._field_data=jule::Any(_2223_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1d8bd00bd_Const> static__1d8bd0d5a_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1d8bd00bd_Const>(_1d8bd00bd_Const{._field_data=jule::Any(_2522_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1d8bd00bd_Const> static__1d8bd1124_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1d8bd00bd_Const>(_1d8bd00bd_Const{._field_data=jule::Any(_2822_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1d8bd00bd_Const> static__1d8bd1333_NewNil(void) {
	return jule::new_ptr<_1d8bd00bd_Const>(_1d8bd00bd_Const{._field_data=nullptr});;
}



inline jule::I64 _1d8bd1993_ReadI64(_1d8bd00bd_Const* _self_) {
	if ((!(_1d8bd408e_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
}



inline jule::U64 _1d8bd1c29_ReadU64(_1d8bd00bd_Const* _self_) {
	if ((!(_1d8bd4325_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
}



inline jule::Bool _1d8bd1eb0_ReadBool(_1d8bd00bd_Const* _self_) {
	if ((!(_1d8bd45ab_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _1d8bd2246_ReadStr(_1d8bd00bd_Const* _self_) {
	if ((!(_1d8bd4842_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _1d8bd24cc_ReadF64(_1d8bd00bd_Const* _self_) {
	if ((!(_1d8bd4ac8_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
}



inline jule::I64 _1d8bd2763_AsI64(_1d8bd00bd_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1bb5e5ec9:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bb5e620a:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bb5e6271:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1bb5e6194:;
			{
				return 0LL;;
			}
		}
		_match_end_1bb5e5a78:;
	};
}



inline jule::U64 _1d8bd29e9_AsU64(_1d8bd00bd_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bb5e6b89:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1bb5e7a9c:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bb5e7b13:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1bb5e699c:;
			{
				return 0LLU;;
			}
		}
		_match_end_1bb5e6947:;
	};
}



inline jule::F64 _1d8bd2c80_AsF64(_1d8bd00bd_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bb5e986d:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1bb5e841b:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bb5e932e:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else {
			_case_begin_1bb5e822e:;
			{
				return 0LL;;
			}
		}
		_match_end_1bb5e81c9:;
	};
}



inline void _1d8bd3038_SetI64(_1d8bd00bd_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type1);
}



inline void _1d8bd32e1_SetU64(_1d8bd00bd_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type2);
}



inline void _1d8bd3599_SetBool(_1d8bd00bd_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type3);
}



inline void _1d8bd3852_SetStr(_1d8bd00bd_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type4);
}



inline void _1d8bd3b0a_SetF64(_1d8bd00bd_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type5);
}



inline jule::Bool _1d8bd408e_IsI64(_1d8bd00bd_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1bb5ed0ad:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bb5ed344:;
			{
				return false;;
			}
		}
		_match_end_1bb5ed2de:;
	};
}



inline jule::Bool _1d8bd4325_IsU64(_1d8bd00bd_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bb5ed9a4:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bb5edc07:;
			{
				return false;;
			}
		}
		_match_end_1bb5edba2:;
	};
}



inline jule::Bool _1d8bd45ab_IsBool(_1d8bd00bd_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bb5ee411:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bb5ee664:;
			{
				return false;;
			}
		}
		_match_end_1bb5ee60e:;
	};
}



inline jule::Bool _1d8bd4842_IsStr(_1d8bd00bd_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bb5eed6d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bb6000c1:;
			{
				return false;;
			}
		}
		_match_end_1bb60006b:;
	};
}



inline jule::Bool _1d8bd4ac8_IsF64(_1d8bd00bd_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bb6007ca:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bb600a2d:;
			{
				return false;;
			}
		}
		_match_end_1bb6009c8:;
	};
}



inline jule::Bool _1d8bd4d5e_IsNil(_1d8bd00bd_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1d8bd54e1_And(_1d8bd00bd_Const* _self_, _1d8bd00bd_Const _23818_x) {
	{
		
		if ((_1d8bd45ab_IsBool(_self_) && _1d8bd45ab_IsBool(&_23818_x))) {
			_case_begin_1bb604d2e:;
			{
				return (_1d8bd1eb0_ReadBool(_self_) && _1d8bd1eb0_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1bb604c74:;
			{
				return false;;
			}
		}
		_match_end_1bb604889:;
	};
}



inline jule::Bool _1d8bd5832_Or(_1d8bd00bd_Const* _self_, _1d8bd00bd_Const _24917_x) {
	{
		
		if ((_1d8bd45ab_IsBool(_self_) && _1d8bd45ab_IsBool(&_24917_x))) {
			_case_begin_1bb60613d:;
			{
				return (_1d8bd1eb0_ReadBool(_self_) || _1d8bd1eb0_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1bb6057d0:;
			{
				return false;;
			}
		}
		_match_end_1bb605736:;
	};
}



inline jule::Bool _1d8bd5b73_Eq(_1d8bd00bd_Const* _self_, _1d8bd00bd_Const _26017_x) {
	{
		
		if (_1d8bd4d5e_IsNil(_self_)) {
			_case_begin_1bb60746e:;
			{
				return _1d8bd4d5e_IsNil(&_26017_x);;
			}
		}
		else if (_1d8bd45ab_IsBool(_self_)) {
			_case_begin_1bb6074e6:;
			{
				return (_1d8bd45ab_IsBool(&_26017_x) && (_1d8bd1eb0_ReadBool(_self_) == _1d8bd1eb0_ReadBool(&_26017_x)));;
			}
		}
		else if (_1d8bd4842_IsStr(_self_)) {
			_case_begin_1bb60776b:;
			{
				return (_1d8bd4842_IsStr(&_26017_x) && (_1d8bd2246_ReadStr(_self_) == _1d8bd2246_ReadStr(&_26017_x)));;
			}
		}
		else if (_1d8bd408e_IsI64(_self_)) {
			_case_begin_1bb6077d2:;
			{
				return (_1d8bd1993_ReadI64(_self_) == _1d8bd2763_AsI64(&_26017_x));;
			}
		}
		else if (_1d8bd4325_IsU64(_self_)) {
			_case_begin_1bb607848:;
			{
				return (_1d8bd1c29_ReadU64(_self_) == _1d8bd29e9_AsU64(&_26017_x));;
			}
		}
		else if (_1d8bd4ac8_IsF64(_self_)) {
			_case_begin_1bb6078ae:;
			{
				return (_1d8bd24cc_ReadF64(_self_) == _1d8bd2c80_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1bb606aab:;
			{
				return false;;
			}
		}
		_match_end_1bb606a12:;
	};
}



inline jule::Bool _1d8bd5eb4_Lt(_1d8bd00bd_Const* _self_, _1d8bd00bd_Const _28717_x) {
	{
		
		if (_1d8bd4842_IsStr(_self_)) {
			_case_begin_1bb60b132:;
			{
				return (_1d8bd4842_IsStr(&_28717_x) && (_1d8bd2246_ReadStr(_self_) < _1d8bd2246_ReadStr(&_28717_x)));;
			}
		}
		else if (_1d8bd408e_IsI64(_self_)) {
			_case_begin_1bb60b198:;
			{
				return (_1d8bd1993_ReadI64(_self_) < _1d8bd2763_AsI64(&_28717_x));;
			}
		}
		else if (_1d8bd4325_IsU64(_self_)) {
			_case_begin_1bb60b220:;
			{
				return (_1d8bd1c29_ReadU64(_self_) < _1d8bd29e9_AsU64(&_28717_x));;
			}
		}
		else if (_1d8bd4ac8_IsF64(_self_)) {
			_case_begin_1bb60b451:;
			{
				return (_1d8bd24cc_ReadF64(_self_) < _1d8bd2c80_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1bb607d54:;
			{
				return false;;
			}
		}
		_match_end_1bb607c88:;
	};
}



inline jule::Bool _1d8bd6305_LtEq(_1d8bd00bd_Const* _self_, _1d8bd00bd_Const _31019_x) {
	{
		
		if (_1d8bd4842_IsStr(_self_)) {
			_case_begin_1bb60dce4:;
			{
				return (_1d8bd4842_IsStr(&_31019_x) && (_1d8bd2246_ReadStr(_self_) <= _1d8bd2246_ReadStr(&_31019_x)));;
			}
		}
		else if (_1d8bd408e_IsI64(_self_)) {
			_case_begin_1bb60dd5a:;
			{
				return (_1d8bd1993_ReadI64(_self_) <= _1d8bd2763_AsI64(&_31019_x));;
			}
		}
		else if (_1d8bd4325_IsU64(_self_)) {
			_case_begin_1bb60ddd2:;
			{
				return (_1d8bd1c29_ReadU64(_self_) <= _1d8bd29e9_AsU64(&_31019_x));;
			}
		}
		else if (_1d8bd4ac8_IsF64(_self_)) {
			_case_begin_1bb60e113:;
			{
				return (_1d8bd24cc_ReadF64(_self_) <= _1d8bd2c80_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1bb60b990:;
			{
				return false;;
			}
		}
		_match_end_1bb60b8c4:;
	};
}



inline jule::Bool _1d8bd6646_Gt(_1d8bd00bd_Const* _self_, _1d8bd00bd_Const _33317_x) {
	{
		
		if (_1d8bd4842_IsStr(_self_)) {
			_case_begin_1bb6119a6:;
			{
				return (_1d8bd4842_IsStr(&_33317_x) && (_1d8bd2246_ReadStr(_self_) > _1d8bd2246_ReadStr(&_33317_x)));;
			}
		}
		else if (_1d8bd408e_IsI64(_self_)) {
			_case_begin_1bb611a1c:;
			{
				return (_1d8bd1993_ReadI64(_self_) > _1d8bd2763_AsI64(&_33317_x));;
			}
		}
		else if (_1d8bd4325_IsU64(_self_)) {
			_case_begin_1bb611a94:;
			{
				return (_1d8bd1c29_ReadU64(_self_) > _1d8bd29e9_AsU64(&_33317_x));;
			}
		}
		else if (_1d8bd4ac8_IsF64(_self_)) {
			_case_begin_1bb611cc5:;
			{
				return (_1d8bd24cc_ReadF64(_self_) > _1d8bd2c80_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1bb60e652:;
			{
				return false;;
			}
		}
		_match_end_1bb60e586:;
	};
}



inline jule::Bool _1d8bd6987_GtEq(_1d8bd00bd_Const* _self_, _1d8bd00bd_Const _35619_x) {
	{
		
		if (_1d8bd4842_IsStr(_self_)) {
			_case_begin_1bb614668:;
			{
				return (_1d8bd4842_IsStr(&_35619_x) && (_1d8bd2246_ReadStr(_self_) >= _1d8bd2246_ReadStr(&_35619_x)));;
			}
		}
		else if (_1d8bd408e_IsI64(_self_)) {
			_case_begin_1bb6146ce:;
			{
				return (_1d8bd1993_ReadI64(_self_) >= _1d8bd2763_AsI64(&_35619_x));;
			}
		}
		else if (_1d8bd4325_IsU64(_self_)) {
			_case_begin_1bb614756:;
			{
				return (_1d8bd1c29_ReadU64(_self_) >= _1d8bd29e9_AsU64(&_35619_x));;
			}
		}
		else if (_1d8bd4ac8_IsF64(_self_)) {
			_case_begin_1bb614987:;
			{
				return (_1d8bd24cc_ReadF64(_self_) >= _1d8bd2c80_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1bb612314:;
			{
				return false;;
			}
		}
		_match_end_1bb612248:;
	};
}



inline jule::Bool _1d8bd6cc8_Add(_1d8bd00bd_Const* _self_, _1d8bd00bd_Const _37722_x) {
	{
		
		if (_1d8bd4842_IsStr(_self_)) {
			_case_begin_1bb61732a:;
			{
				if ((!(_1d8bd4842_IsStr(&_37722_x)))) {
					return false;;
				};
				_1d8bd3852_SetStr(_self_, (_1d8bd2246_ReadStr(_self_) + _1d8bd2246_ReadStr(&_37722_x)));
			}
		}
		else if (_1d8bd4ac8_IsF64(_self_)) {
			_case_begin_1bb617391:;
			{
				_1d8bd3b0a_SetF64(_self_, static_cast<jule::F64>((_1d8bd24cc_ReadF64(_self_) + _1d8bd2c80_AsF64(&_37722_x))));
			}
		}
		else if (_1d8bd408e_IsI64(_self_)) {
			_case_begin_1bb617418:;
			{
				if (_1d8bd4ac8_IsF64(&_37722_x)) {
					_1d8bd3b0a_SetF64(_self_, static_cast<jule::F64>((_1d8bd2c80_AsF64(_self_) + _1d8bd24cc_ReadF64(&_37722_x))));
				} else {
					_1d8bd3038_SetI64(_self_, static_cast<jule::I64>((_1d8bd1993_ReadI64(_self_) + _1d8bd2763_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1d8bd4325_IsU64(_self_)) {
			_case_begin_1bb617649:;
			{
				if (_1d8bd4ac8_IsF64(&_37722_x)) {
					_1d8bd3b0a_SetF64(_self_, static_cast<jule::F64>((_1d8bd2c80_AsF64(_self_) + _1d8bd24cc_ReadF64(&_37722_x))));
				} else {
					_1d8bd32e1_SetU64(_self_, static_cast<jule::U64>((_1d8bd1c29_ReadU64(_self_) + _1d8bd29e9_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1bb614ec6:;
			{
				return false;;
			}
		}
		_match_end_1bb614e0a:;
	};
	return true;;
}



inline jule::Bool _1d8bd7119_Sub(_1d8bd00bd_Const* _self_, _1d8bd00bd_Const _40622_x) {
	{
		
		if (_1d8bd4ac8_IsF64(_self_)) {
			_case_begin_1bb61c253:;
			{
				_1d8bd3b0a_SetF64(_self_, static_cast<jule::F64>((_1d8bd24cc_ReadF64(_self_) - _1d8bd2c80_AsF64(&_40622_x))));
			}
		}
		else if (_1d8bd408e_IsI64(_self_)) {
			_case_begin_1bb61c2ca:;
			{
				if (_1d8bd4ac8_IsF64(&_40622_x)) {
					_1d8bd3b0a_SetF64(_self_, static_cast<jule::F64>((_1d8bd2c80_AsF64(_self_) - _1d8bd24cc_ReadF64(&_40622_x))));
				} else {
					_1d8bd3038_SetI64(_self_, static_cast<jule::I64>((_1d8bd1993_ReadI64(_self_) - _1d8bd2763_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1d8bd4325_IsU64(_self_)) {
			_case_begin_1bb61c352:;
			{
				if (_1d8bd4ac8_IsF64(&_40622_x)) {
					_1d8bd3b0a_SetF64(_self_, static_cast<jule::F64>((_1d8bd2c80_AsF64(_self_) - _1d8bd24cc_ReadF64(&_40622_x))));
				} else {
					_1d8bd32e1_SetU64(_self_, static_cast<jule::U64>((_1d8bd1c29_ReadU64(_self_) - _1d8bd29e9_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1bb61ba27:;
			{
				return false;;
			}
		}
		_match_end_1bb61b95b:;
	};
	return true;;
}



inline jule::Bool _1d8bd745a_Mul(_1d8bd00bd_Const* _self_, _1d8bd00bd_Const _43022_x) {
	{
		
		if (_1d8bd4ac8_IsF64(_self_)) {
			_case_begin_1bb621301:;
			{
				_1d8bd3b0a_SetF64(_self_, static_cast<jule::F64>((_1d8bd24cc_ReadF64(_self_) * _1d8bd2c80_AsF64(&_43022_x))));
			}
		}
		else if (_1d8bd408e_IsI64(_self_)) {
			_case_begin_1bb621378:;
			{
				if (_1d8bd4ac8_IsF64(&_43022_x)) {
					_1d8bd3b0a_SetF64(_self_, static_cast<jule::F64>((_1d8bd2c80_AsF64(_self_) * _1d8bd24cc_ReadF64(&_43022_x))));
				} else {
					_1d8bd3038_SetI64(_self_, static_cast<jule::I64>((_1d8bd1993_ReadI64(_self_) * _1d8bd2763_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1d8bd4325_IsU64(_self_)) {
			_case_begin_1bb621400:;
			{
				if (_1d8bd4ac8_IsF64(&_43022_x)) {
					_1d8bd3b0a_SetF64(_self_, static_cast<jule::F64>((_1d8bd2c80_AsF64(_self_) * _1d8bd24cc_ReadF64(&_43022_x))));
				} else {
					_1d8bd32e1_SetU64(_self_, static_cast<jule::U64>((_1d8bd1c29_ReadU64(_self_) * _1d8bd29e9_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1bb620982:;
			{
				return false;;
			}
		}
		_match_end_1bb6208b6:;
	};
	return true;;
}



inline jule::Bool _1d8bd779b_Div(_1d8bd00bd_Const* _self_, _1d8bd00bd_Const _45822_x) {
	{
		
		if (_1d8bd4ac8_IsF64(_self_)) {
			_case_begin_1bb62539e:;
			{
				jule::F64 _46113_l = _1d8bd2c80_AsF64(&_45822_x);;
				if ((_46113_l == 0LL)) {
					return false;;
				};
				_1d8bd3b0a_SetF64(_self_, static_cast<jule::F64>(jule::div(_1d8bd24cc_ReadF64(_self_),_46113_l)));
			}
		}
		else if (_1d8bd408e_IsI64(_self_)) {
			_case_begin_1bb625426:;
			{
				jule::F64 _46713_l = _1d8bd2c80_AsF64(&_45822_x);;
				if ((_46713_l == 0LL)) {
					return false;;
				};
				_1d8bd3b0a_SetF64(_self_, static_cast<jule::F64>(jule::div(_1d8bd2c80_AsF64(_self_),_46713_l)));
			}
		}
		else if (_1d8bd4325_IsU64(_self_)) {
			_case_begin_1bb62549d:;
			{
				jule::F64 _47313_l = _1d8bd2c80_AsF64(&_45822_x);;
				if ((_47313_l == 0LL)) {
					return false;;
				};
				_1d8bd3b0a_SetF64(_self_, static_cast<jule::F64>(jule::div(_1d8bd2c80_AsF64(_self_),_47313_l)));
			}
		}
		else {
			_case_begin_1bb624a30:;
			{
				return false;;
			}
		}
		_match_end_1bb624964:;
	};
	return true;;
}



inline jule::Bool _1d8bd7adc_Mod(_1d8bd00bd_Const* _self_, _1d8bd00bd_Const _48722_x) {
	{
		
		if (_1d8bd408e_IsI64(_self_)) {
			_case_begin_1bb62910b:;
			{
				jule::I64 _49013_l = _1d8bd2763_AsI64(&_48722_x);;
				if ((_49013_l == 0LL)) {
					return false;;
				};
				_1d8bd3038_SetI64(_self_, static_cast<jule::I64>(jule::mod(_1d8bd1993_ReadI64(_self_),_49013_l)));
			}
		}
		else if (_1d8bd4325_IsU64(_self_)) {
			_case_begin_1bb629183:;
			{
				jule::U64 _49613_l = _1d8bd29e9_AsU64(&_48722_x);;
				if ((_49613_l == 0LLU)) {
					return false;;
				};
				_1d8bd32e1_SetU64(_self_, static_cast<jule::U64>(jule::mod(_1d8bd1c29_ReadU64(_self_),_49613_l)));
			}
		}
		else {
			_case_begin_1bb629051:;
			{
				return false;;
			}
		}
		_match_end_1bb628ea7:;
	};
	return true;;
}



inline jule::Bool _1d8bd7e2d_BitwiseAnd(_1d8bd00bd_Const* _self_, _1d8bd00bd_Const _50929_x) {
	{
		
		if (_1d8bd408e_IsI64(_self_)) {
			_case_begin_1bb62bc35:;
			{
				_1d8bd3038_SetI64(_self_, static_cast<jule::I64>((_1d8bd1993_ReadI64(_self_) & _1d8bd2763_AsI64(&_50929_x))));
			}
		}
		else if (_1d8bd4325_IsU64(_self_)) {
			_case_begin_1bb62bcac:;
			{
				_1d8bd32e1_SetU64(_self_, static_cast<jule::U64>((_1d8bd1c29_ReadU64(_self_) & _1d8bd29e9_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1bb62bb7a:;
			{
				return false;;
			}
		}
		_match_end_1bb62bad1:;
	};
	return true;;
}



inline jule::Bool _1d8bd826e_BitwiseOr(_1d8bd00bd_Const* _self_, _1d8bd00bd_Const _52328_x) {
	{
		
		if (_1d8bd408e_IsI64(_self_)) {
			_case_begin_1bb62dab1:;
			{
				_1d8bd3038_SetI64(_self_, static_cast<jule::I64>((_1d8bd1993_ReadI64(_self_) | _1d8bd2763_AsI64(&_52328_x))));
			}
		}
		else if (_1d8bd4325_IsU64(_self_)) {
			_case_begin_1bb62db38:;
			{
				_1d8bd32e1_SetU64(_self_, static_cast<jule::U64>((_1d8bd1c29_ReadU64(_self_) | _1d8bd29e9_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1bb62d9e5:;
			{
				return false;;
			}
		}
		_match_end_1bb62d929:;
	};
	return true;;
}



inline jule::Bool _1d8bd85b0_Xor(_1d8bd00bd_Const* _self_, _1d8bd00bd_Const _53722_x) {
	{
		
		if (_1d8bd408e_IsI64(_self_)) {
			_case_begin_1bb63093c:;
			{
				_1d8bd3038_SetI64(_self_, static_cast<jule::I64>((_1d8bd1993_ReadI64(_self_) ^ _1d8bd2763_AsI64(&_53722_x))));
			}
		}
		else if (_1d8bd4325_IsU64(_self_)) {
			_case_begin_1bb6309b4:;
			{
				_1d8bd32e1_SetU64(_self_, static_cast<jule::U64>((_1d8bd1c29_ReadU64(_self_) ^ _1d8bd29e9_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1bb630871:;
			{
				return false;;
			}
		}
		_match_end_1bb6307a5:;
	};
	return true;;
}



inline jule::Bool _1d8bd8901_Lshift(_1d8bd00bd_Const* _self_, _1d8bd00bd_Const _55125_x) {
	{
		
		if (_1d8bd408e_IsI64(_self_)) {
			_case_begin_1bb6327b8:;
			{
				jule::I64 _55413_l = _1d8bd2763_AsI64(_self_);;
				if ((_55413_l < 0LL)) {
					jule::U64 _55617_r = _1d8bd29e9_AsU64(&_55125_x);;
					_1d8bd3038_SetI64(_self_, static_cast<jule::I64>((_55413_l << _55617_r)));
				} else {
					_1d8bd90d8_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1d8bd4325_IsU64(_self_)) {
			_case_begin_1bb632840:;
			{
				_1d8bd90d8_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1bb6326ec:;
			{
				return false;;
			}
		}
		_match_end_1bb632631:;
	};
	return true;;
}



inline jule::Bool _1d8bd8c42_Rshift(_1d8bd00bd_Const* _self_, _1d8bd00bd_Const _57125_x) {
	{
		
		if (_1d8bd408e_IsI64(_self_)) {
			_case_begin_1bb634a95:;
			{
				jule::I64 _57413_l = _1d8bd2763_AsI64(_self_);;
				if ((_57413_l < 0LL)) {
					jule::U64 _57617_r = _1d8bd29e9_AsU64(&_57125_x);;
					_1d8bd3038_SetI64(_self_, static_cast<jule::I64>((_57413_l >> _57617_r)));
				} else {
					_1d8bd9418_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1d8bd4325_IsU64(_self_)) {
			_case_begin_1bb634b1c:;
			{
				_1d8bd9418_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1bb6349c9:;
			{
				return false;;
			}
		}
		_match_end_1bb634930:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d8bd00bd_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1ab0c2301_Prec(_1ab0c1e7c_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bb68dc86:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bb68de1d:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1bb68de84:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1bb68e00b:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1bb68e083:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1bb68d615:;
			{
				return 0LLU;;
			}
		}
		_match_end_1bb68d56b:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0c1e7c_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1ab0c7b31_Fill(_1ab0c7746_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _1ab0c7db7_Dir(_1ab0c7746_File* _self_) {
	return _1d7ae0d26_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1ab0c814d_Name(_1ab0c7746_File* _self_) {
	return _1d7ae0980_Base((*(_self_))._field_Path);;
}



inline jule::Str _1ab0c8725_GetRow(_1ab0c7746_File* _self_, jule::I64 _3821_row) {
	jule::I64 _3913_n = 0LL;;
	jule::I64 _4013_lineStart = 0LL;;
	jule::I64 _4113_i = 0LL;;
	for (; (_4113_i < (*(_self_))._field_Data.len()); (_4113_i)++) {
		{
			if (((*(_self_))._field_Data[_4113_i] != '\n')) {
				goto _iter_next_1bb694088;
			};
			(_3913_n)++;
			if ((_3913_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4013_lineStart, _4113_i));;
			};
			_4013_lineStart=static_cast<jule::I64>((_4113_i + 1LL));
		}
	_iter_next_1bb694088:;
	}
	_iter_end_1bb694088:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0c7746_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0c9869_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1ab0d1013_pushErr(_1ab0d0980_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args) {
	{ jule::Slice<_1d7b81cb8_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ab0ca639_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44726_fmt, _44739_args)); };
}



inline void _1ab0d1574_lex(_1ab0d0980_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1ab0d3796_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1ab0c1e7c_Token> _46217_token = _1ab0d4c81_token(_self_);;
			if (((*(_46217_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46217_token); };
			};
		}
	_iter_next_1bb6c122a:;
	}
	_iter_end_1bb6c122a:;;
}



inline jule::Str _1ab0d18b5_id(_1ab0d0980_lex* _self_, jule::Slice<jule::U8>* _47122_ln) {
	if (((*(_47122_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4759_r = 0;;
	jule::I64 _47516_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d7a7c884_DecodeRune((*(_47122_ln)));
		_4759_r = __jule_assign_result.__jule_result_arg0;
		_47516_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4759_r != '_') && (!(_1ab0c56ab_IsLetter(_4759_r))))) {
		return jule::Str();;
	};
	while ((_47516_i < (*(_47122_ln)).len())) {
		{
			jule::I32 _48113_pr = 0;;
			jule::I64 _48117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d7a7c884_DecodeRune((*(_47122_ln)).slice(_47516_i));
				_48113_pr = __jule_assign_result.__jule_result_arg0;
				_48117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48113_pr != '_') && (!(_1ab0c5c3e_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_48113_pr)))))) && (!(_1ab0c56ab_IsLetter(_48113_pr))))) {
				(*(_self_))._field_pos+=_47516_i;
				return static_cast<jule::Str>((*(_47122_ln)).slice(0LL, _47516_i));;
			};
			_47516_i+=_48117_n;
		}
	_iter_next_1bb6c4904:;
	}
	_iter_end_1bb6c4904:;;
	(*(_self_))._field_pos+=(*(_47122_ln)).len();
	return static_cast<jule::Str>((*(_47122_ln)));;
}



inline jule::Slice<jule::U8> _1ab0d1b4b_resume(_1ab0d0980_lex* _self_) {
	jule::I64 _49613_i = (*(_self_))._field_pos;;
	for (; (_49613_i < (*((*(_self_))._field_file))._field_Data.len()); (_49613_i)++) {
		{
			jule::I32 _49813_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_49613_i]);;
			if (_1ab0c5238_IsSpace(_49813_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49813_r };
					
					if (_match_expr == '\n') {
						_case_begin_1bb6c872c:;
						{
							_1ab0d3796_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1bb6c8793:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1bb6c8100:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1bb6c8188:;
				};
				goto _iter_next_1bb6c4607;
			};
			jule::I64 _51317_j = _49613_i;;
			for (; (_51317_j < (*((*(_self_))._field_file))._field_Data.len()); (_51317_j)++) {
				{
					if (((*((*(_self_))._field_file))._field_Data[_51317_j] == '\n')) {
						goto _iter_end_1bb6c7792;
					};
				}
			_iter_next_1bb6c7792:;
			}
			_iter_end_1bb6c7792:;;
			return (*((*(_self_))._field_file))._field_Data.slice(_49613_i, _51317_j);;
		}
	_iter_next_1bb6c4607:;
	}
	_iter_end_1bb6c4607:;;
	return nullptr;;
}



inline void _1ab0d1e04_lexLineComment(_1ab0d0980_lex* _self_, jule::Ptr<_1ab0c1e7c_Token>* _52438_token) {
	jule::I64 _5259_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52813_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_52813_r == '\n') || (_52813_r == '\r'))) {
				goto _iter_end_1bb6d0d1c;
			};
		}
	_iter_next_1bb6d0d1c:;
	}
	_iter_end_1bb6d0d1c:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52438_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52438_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_5259_start, (*(_self_))._field_pos));
	};
}



inline void _1ab0d21ac_lexRangeComment(_1ab0d0980_lex* _self_, jule::Ptr<_1ab0c1e7c_Token>* _53939_token) {
	jule::I64 _5409_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54313_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_54313_r == '\r')) {
				goto _iter_next_1bb6d4062;
			};
			if ((_54313_r == '\n')) {
				_1ab0d3796_newLine(_self_);
				goto _iter_next_1bb6d4062;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*((*(_self_))._field_file))._field_Data.len()) && (_54313_r == '*')) && ((*((*(_self_))._field_file))._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53939_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53939_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_5409_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1bb6d4062:;
	}
	_iter_end_1bb6d4062:;;
	_1ab0d1013_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1ab0d24ed_num(_1ab0d0980_lex* _self_, jule::Slice<jule::U8>* _56723_txt) {
	jule::Str __jule_func_result;
	if (((*(_56723_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1ab0ce275_hexNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1bb6db6a7;
	};
	__jule_func_result=_1ab0cdeab_octalNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1bb6db6a7;
	};
	__jule_func_result=_1ab0cc7c3_binaryNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1bb6db6a7;
	};
	__jule_func_result=_1ab0cc509_commonNum(_56723_txt);
	_julec_label_1bb6db6a7:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1ab0d283e_escapeSeq(_1ab0d0980_lex* _self_, jule::Slice<jule::U8>* _58929_txt) {
	jule::Str _59013_seq = jule::Str();;
	if (((*(_58929_txt)).len() < 2LL)) {
		goto _julec_label_1bb6e090e;
	};
	{
		auto &_match_expr{ (*(_58929_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1bb6dd511:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58929_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1bb6dd577:;
			{
				_59013_seq=_1ab0ce8b3_bigUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1bb6dd5ee:;
			{
				_59013_seq=_1ab0ceb7c_littleUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1bb6dd258:;
			{
				_59013_seq=_1ab0cee46_hexByteEscape(_58929_txt);
			}
		}
		else {
			_case_begin_1bb6dcad7:;
			{
				_59013_seq=_1ab0d0210_byteEscape(_58929_txt);
			}
		}
		_match_end_1bb6dd148:;
	};
	_julec_label_1bb6e090e:;
	if ((_59013_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1ab0d1013_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59013_seq.len();
	return _59013_seq;;
}



inline jule::Str _1ab0d2c3a_getRune(_1ab0d0980_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw) {
	if (((!(_61940_raw)) && ((*(_61927_txt))[0LL] == '\\'))) {
		return _1ab0d283e_escapeSeq(_self_, _61927_txt);;
	};
	jule::I32 _6239_r = 0;;
	jule::I64 _62312_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d7a7c884_DecodeRune((*(_61927_txt)));
		_6239_r = __jule_assign_result.__jule_result_arg0;
		_62312_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62312_n;
	return jule::Str::from_rune(_6239_r);;
}



inline jule::Str _1ab0d307b_lexRune(_1ab0d0980_lex* _self_, jule::Slice<jule::U8>* _62827_txt) {
	_1d7ad2eb1_StrBuilder _62913_run = static__1d7ad327a_New(8LL);;
	_1d7adbd44_WriteByte(&_62913_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _63213_n = 0LL;;
	jule::I64 _63313_i = 1LL;;
	for (; (_63313_i < (*(_62827_txt)).len()); (_63313_i)++) {
		{
			if (((*(_62827_txt))[_63313_i] == '\r')) {
				goto _iter_next_1bb6e432a;
			};
			if (((*(_62827_txt))[_63313_i] == '\n')) {
				_1ab0d1013_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1ab0d3796_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64513_part = (*(_62827_txt)).slice(_63313_i);;
			jule::Str _64613_r = _1ab0d2c3a_getRune(_self_, &(_64513_part), false);;
			_1d7adba8b_WriteStr(&_62913_run, _64613_r);
			(*(_self_))._field_column+=_1d7a7e6ee_RuneCountStr(_64613_r);
			if (_64613_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1bb6e432a;
			};
			if ((_64613_r.len() > 1LL)) {
				_63313_i+=(_64613_r.len() - 1LL);
			};
			(_63213_n)++;
		}
	_iter_next_1bb6e432a:;
	}
	_iter_end_1bb6e432a:;;
	if ((_63213_n == 0LL)) {
		_1ab0d1013_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63213_n > 1LL)) {
		_1ab0d1013_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _1d7adc383_Str(&_62913_run);;
}



inline jule::Str _1ab0d3312_lexStr(_1ab0d0980_lex* _self_) {
	_1d7ad2eb1_StrBuilder _66913_s = static__1d7ad327a_New(16LL);;
	jule::U8 _6709_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6729_raw = (_6709_mark == '`');;
	_1d7adbd44_WriteByte(&_66913_s, _6709_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::U8 _67713_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_67713_ch == '\r')) {
				goto _iter_next_1bb6e8d9b;
			};
			if ((_67713_ch == '\n')) {
				_1ab0d3796_newLine(_self_);
				if ((!(_6729_raw))) {
					_1ab0d1013_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68917_part = (*((*(_self_))._field_file))._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69013_r = _1ab0d2c3a_getRune(_self_, &(_68917_part), _6729_raw);;
			_1d7adba8b_WriteStr(&_66913_s, _69013_r);
			(*(_self_))._field_column+=_1d7a7e6ee_RuneCountStr(_69013_r);
			if ((_67713_ch == _6709_mark)) {
				goto _iter_end_1bb6e8d9b;
			};
		}
	_iter_next_1bb6e8d9b:;
	}
	_iter_end_1bb6e8d9b:;;
	return _1d7adc383_Str(&_66913_s);;
}



inline void _1ab0d3796_newLine(_1ab0d0980_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1ab0d3d07_isOp(_1ab0d0980_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U64 _71048_id, jule::Ptr<_1ab0c1e7c_Token>* _71066_t) {
	if ((!(_1ab0caa02_bytesHasPrefix(_71024_txt, _71037_kind)))) {
		return false;;
	};
	(*((*(_71066_t))))._field_Kind=_71037_kind;
	(*((*(_71066_t))))._field_Id=_71048_id;
	(*(_self_))._field_pos+=_71037_kind.len();
	return true;;
}



inline jule::Bool _1ab0d4203_lexBasicOps(_1ab0d0980_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_1ab0c1e7c_Token>* _72048_tok) {
	{
		auto expr = &(_1ab0ca0d9_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb700798:;
		if (it != expr_end) {
			_1ab0c9869_kindPair *_72116_pair = it;
			{
				if (_1ab0d3d07_isOp(_self_, &(_72030_txt), (*(_72116_pair))._field_kind, (*(_72116_pair))._field_id, _72048_tok)) {
					return true;;
				};
			}
			_iter_next_1bb700798:;
			++it;
			goto _iter_begin_1bb700798;
		}
		_iter_end_1bb700798:;
	};
	return false;;
}



inline jule::Bool _1ab0d45ee_lexId(_1ab0d0980_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_1ab0c1e7c_Token>* _72943_t) {
	jule::Str _7309_lex = _1ab0d18b5_id(_self_, _72925_txt);;
	if ((_7309_lex).empty()) {
		return false;;
	};
	(*((*(_72943_t))))._field_Kind=_7309_lex;
	(*((*(_72943_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1ab0d49ea_lexNum(_1ab0d0980_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_1ab0c1e7c_Token>* _73944_t) {
	jule::Str _7409_lex = _1ab0d24ed_num(_self_, _73926_txt);;
	if ((_7409_lex).empty()) {
		return false;;
	};
	(*((*(_73944_t))))._field_Kind=_7409_lex;
	(*((*(_73944_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1ab0c1e7c_Token> _1ab0d4c81_token(_1ab0d0980_lex* _self_) {
	jule::Ptr<_1ab0c1e7c_Token> _75113_t = jule::new_ptr<_1ab0c1e7c_Token>(_1ab0c1e7c_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7569_txt = _1ab0d1b4b_resume(_self_);;
	if ((_7569_txt == nullptr)) {
		return _75113_t;;
	};
	(*(_75113_t))._field_Column=(*(_self_))._field_column;
	(*(_75113_t))._field_Row=(*(_self_))._field_row;
	{
		
		if (_1ab0d49ea_lexNum(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1bb70722d:;
			{
				goto _match_end_1bb70512c;
			}
		}
		else if ((_7569_txt[0LL] == '\'')) {
			_case_begin_1bb7067d2:;
			{
				(*(_75113_t))._field_Kind=_1ab0d307b_lexRune(_self_, &(_7569_txt));
				(*(_75113_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (((_7569_txt[0LL] == '\"') || (_7569_txt[0LL] == '`'))) {
			_case_begin_1bb706848:;
			{
				(*(_75113_t))._field_Kind=_1ab0d3312_lexStr(_self_);
				(*(_75113_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (_1ab0caa02_bytesHasPrefix(&(_7569_txt), jule::Str::lit("//", 2))) {
			_case_begin_1bb7068ae:;
			{
				_1ab0d1e04_lexLineComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1ab0caa02_bytesHasPrefix(&(_7569_txt), jule::Str::lit("/*", 2))) {
			_case_begin_1bb705c54:;
			{
				_1ab0d21ac_lexRangeComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1ab0d4203_lexBasicOps(_self_, _7569_txt, &(_75113_t))) {
			_case_begin_1bb705cba:;
			{
				goto _match_end_1bb70512c;
			}
		}
		else if (_1ab0d45ee_lexId(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1bb705d31:;
			{
				{
					auto expr = &(_1ab0c9c98_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb70ab7c:;
					if (it != expr_end) {
						_1ab0c9869_kindPair *_78820_pair = it;
						{
							if (((*(_78820_pair))._field_kind == (*(_75113_t))._field_Kind)) {
								(*(_75113_t))._field_Id=(*(_78820_pair))._field_id;
								goto _iter_end_1bb70ab7c;
							};
						}
						_iter_next_1bb70ab7c:;
						++it;
						goto _iter_begin_1bb70ab7c;
					}
					_iter_end_1bb70ab7c:;
				};
			}
		}
		else {
			_case_begin_1bb705bdd:;
			{
				jule::I32 _79513_r = 0;;
				jule::I64 _79516_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d7a7c884_DecodeRune(_7569_txt);
					_79513_r = __jule_assign_result.__jule_result_arg0;
					_79516_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1ab0d1013_pushErr(_self_, jule::Str::lit("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79513_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79516_sz;
				return _75113_t;;
			}
		}
		_match_end_1bb70512c:;
	};
	(*(_self_))._field_column+=_1d7a7e6ee_RuneCountStr((*(_75113_t))._field_Kind);
	return _75113_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0d0980_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0d55ab_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0d6447_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0d6865_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0d7448_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0d7a53_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0d7d50_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0d81e6_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0d84e3_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0d8878_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0d8b75_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab0d92d5_IsUnsafe(_1ab0d8e72_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0d8e72_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab0d9a77_AutoSized(_1ab0d9714_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0d9714_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0d9e62_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0da33b_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0db77c_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0dba79_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0dc151_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0dc44d_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0dc827_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0dcc01_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0dd1a7_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0dd839_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0ddc13_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0de0dc_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0de4b6_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0de890_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0ded46_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab0e082a_Unhandled(_1ab0e04a6_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1ab0e0ab1_Ignored(_1ab0e04a6_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*((*(_self_))._field_Exception))._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0e04a6_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0e0e9b_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0e17c6_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0e1c7c_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0e25a7_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0e2ca0_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0e3740_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0e3da0_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0e419c_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0e4653_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0e4a2c_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0e4e06_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0e5203_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0e5863_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0e5de6_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0e6d09_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0e7469_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab0e802a_IsSelf(_1ab0e7ba6_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0e7ba6_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab0e946b_IsAnon(_1ab0e9108_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0e9108_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0ea1d6_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0ea5b0_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab0eb0b6_IsInf(_1ab0eac53_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0eac53_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab0eb8e1_IsWhileNext(_1ab0eb57d_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0eb57d_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0ebe85_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0ec35e_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0ec738_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0ecbde_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0ed0b8_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0ed56e_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0edcab_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0ee262_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab0ee99e_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1002b8_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab10076e_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab101330_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab101b5a_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1022ba_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab102584_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab102e7a_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1036b7_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab103d27_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab10a218_FieldIns> _1ab1054bb_instance(jule::Ptr<_1ab105147_Field> _self_) {
	return jule::new_ptr<_1ab10a218_FieldIns>(_1ab10a218_FieldIns{._field_Decl=_self_, });;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab105147_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab107127_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab10acb8_StructIns> _1ab10849c_instance(jule::Ptr<_1ab10803a_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1ab10acb8_StructIns> _10013_ins = jule::new_ptr<_1ab10acb8_StructIns>(_1ab10acb8_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1ab10a218_FieldIns>>::alloc(0LL, (*(_self_))._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1ab1c7a66_Var>>::alloc(0LL, (*(_self_))._field_Statics.len()), ._field_Refers=static__1ab124298_new(), });;
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb470c9:;
		if (it != expr_end) {
			jule::Ptr<_1ab1c7a66_Var> _10721_s = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab1c7a66_Var>> &__jule_push_dest = (*(_10013_ins))._field_Statics; __jule_push_dest.push(jule::new_ptr<_1ab1c7a66_Var>((*(_10721_s)))); };
			}
			_iter_next_1bbb470c9:;
			++it;
			goto _iter_begin_1bbb470c9;
		}
		_iter_end_1bbb470c9:;
	};
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb4866e:;
		if (it != expr_end) {
			jule::Ptr<_1ab105147_Field> _11121_f = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab10a218_FieldIns>> &__jule_push_dest = (*(_10013_ins))._field_Fields; __jule_push_dest.push(_1ab1054bb_instance(_11121_f)); };
				if ((((!((*(_11121_f))._field_Mutable)) && ((*((*(_11121_f))._field_Kind))._field_Kind != nullptr)) && _1ab25c39d_Mutable((*((*(_11121_f))._field_Kind))._field_Kind.ptr()))) {
					(*(_10013_ins))._field_Mutable=true;
				};
			}
			_iter_next_1bbb4866e:;
			++it;
			goto _iter_begin_1bbb4866e;
		}
		_iter_end_1bbb4866e:;
	};
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		(*(_10013_ins))._field_Methods=(*(_self_))._field_Methods;
	} else {
		(*(_10013_ins))._field_Methods=jule::Slice<jule::Ptr<_1ab11cdeb_Fn>>::alloc(0LL, (*(_self_))._field_Methods.len());
		{
			auto expr = &((*(_self_))._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bbb4b8d6:;
			if (it != expr_end) {
				jule::Ptr<_1ab11cdeb_Fn> _12225_f = *it;
				{
					jule::Ptr<_1ab11cdeb_Fn> _12321_fins = jule::new_ptr<_1ab11cdeb_Fn>((*(_12225_f)));;
					(*(_12321_fins))._field_Instances=nullptr;
					{ jule::Slice<jule::Ptr<_1ab11cdeb_Fn>> &__jule_push_dest = (*(_10013_ins))._field_Methods; __jule_push_dest.push(_12321_fins); };
				}
				_iter_next_1bbb4b8d6:;
				++it;
				goto _iter_begin_1bbb4b8d6;
			}
			_iter_end_1bbb4b8d6:;
		};
	};
	return _10013_ins;;
}



inline jule::Ptr<_1ab10acb8_StructIns> _1ab1087aa_appendInstance(_1ab10803a_Struct* _self_, jule::Ptr<_1ab10acb8_StructIns>* _13438_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb4c299:;
		if (it != expr_end) {
			jule::Ptr<_1ab10acb8_StructIns> _14021_ains = *it;
			{
				if (_1ab10b934_Same(_14021_ains.ptr(), (*(_13438_ins)))) {
					return _14021_ains;;
				};
			}
			_iter_next_1bbb4c299:;
			++it;
			goto _iter_begin_1bbb4c299;
		}
		_iter_end_1bbb4c299:;
	};
	{ jule::Slice<jule::Ptr<_1ab10acb8_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13438_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1ab11cdeb_Fn> _1ab108ba6_FindMethod(_1ab10803a_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb50544:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _15321_f = *it;
			{
				if ((((*(_15321_f))._field_Statically == _15241_statically) && ((*(_15321_f))._field_Ident == _15229_ident))) {
					return _15321_f;;
				};
			}
			_iter_next_1bbb50544:;
			++it;
			goto _iter_begin_1bbb50544;
		}
		_iter_end_1bbb50544:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1c7a66_Var> _1ab108ee7_FindStatic(_1ab10803a_Struct* _self_, jule::Str _16329_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb51864:;
		if (it != expr_end) {
			jule::Ptr<_1ab1c7a66_Var> _16421_v = *it;
			{
				if (((*(_16421_v))._field_Ident == _16329_ident)) {
					return _16421_v;;
				};
			}
			_iter_next_1bbb51864:;
			++it;
			goto _iter_begin_1bbb51864;
		}
		_iter_end_1bbb51864:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab105147_Field> _1ab109338_FindField(_1ab10803a_Struct* _self_, jule::Str _17428_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb5203a:;
		if (it != expr_end) {
			jule::Ptr<_1ab105147_Field> _17521_f = *it;
			{
				if (((*(_17521_f))._field_Ident == _17428_ident)) {
					return _17521_f;;
				};
			}
			_iter_next_1bbb5203a:;
			++it;
			goto _iter_begin_1bbb5203a;
		}
		_iter_end_1bbb5203a:;
	};
	return nullptr;;
}



inline jule::Bool _1ab109679_IsImplements(_1ab10803a_Struct* _self_, jule::Ptr<_1ab131195_Trait> _18427_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb5303b:;
		if (it != expr_end) {
			jule::Ptr<_1ab131195_Trait> *_18516_it = it;
			{
				if ((_18427_t == (*(_18516_it)))) {
					return true;;
				};
			}
			_iter_next_1bbb5303b:;
			++it;
			goto _iter_begin_1bbb5303b;
		}
		_iter_end_1bbb5303b:;
	};
	return false;;
}



inline jule::Bool _1ab1099ba_IsUses(_1ab10803a_Struct* _self_, jule::Ptr<_1ab10803a_Struct> _19421_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb5468b:;
		if (it != expr_end) {
			jule::Ptr<_1ab10803a_Struct> *_19516_u = it;
			{
				while ((_19421_s == (*(_19516_u)))) {
					{
						return true;;
					}
				_iter_next_1bbb54e83:;
				}
				_iter_end_1bbb54e83:;;
			}
			_iter_next_1bbb5468b:;
			++it;
			goto _iter_begin_1bbb5468b;
		}
		_iter_end_1bbb5468b:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab10803a_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab10a218_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab10ebac_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1101a7_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab110581_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab110aae_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab110e55_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab111252_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1117d5_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab112187_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab112561_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab112a17_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab112de1_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1132ba_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab113771_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab113d04_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab114387_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab114c28_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1151ce_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1155a8_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1158a5_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab115c7e_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab116158_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab116532_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab11690b_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab116db2_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab117368_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab117742_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab117a3e_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab117d3b_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab118215_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1185de_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1189b8_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab114574_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1191e4_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1194e1_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1197dd_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab119bb7_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab119eb4_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab11ab96_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab11ed54_ParamIns> _1ab11b7ac_instance(jule::Ptr<_1ab11b427_Param> _self_) {
	return jule::new_ptr<_1ab11ed54_ParamIns>(_1ab11ed54_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1ab11ba43_IsSelf(_1ab11b427_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1ab11bcc9_IsRef(_1ab11b427_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab11b427_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab11d36e_IsVoid(_1ab11cdeb_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1ab11d605_IsMethod(_1ab11cdeb_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1ab11d88b_IsEntryPoint(_1ab11cdeb_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1ab11db22_IsInit(_1ab11cdeb_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1ab11dda8_IsAnon(_1ab11cdeb_Fn* _self_) {
	return _1ab0c4ba5_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1ab11e13e_AnyVar(_1ab11cdeb_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*((*(_self_))._field_Result))._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1ab120d00_FnIns> _1ab11e3c5_instanceForce(jule::Ptr<_1ab11cdeb_Fn> _self_) {
	jule::Ptr<_1ab120d00_FnIns> _10113_ins = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1ab1637b0_Scope>(), ._field_Refers=static__1ab124298_new(), });;
	(*(_10113_ins))._field_Params=jule::Slice<jule::Ptr<_1ab11ed54_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*(_self_))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb6b098:;
		if (it != expr_end) {
			jule::Ptr<_1ab11b427_Param> _10821_p = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab11ed54_ParamIns>> &__jule_push_dest = (*(_10113_ins))._field_Params; __jule_push_dest.push(_1ab11b7ac_instance(_10821_p)); };
			}
			_iter_next_1bbb6b098:;
			++it;
			goto _iter_begin_1bbb6b098;
		}
		_iter_end_1bbb6b098:;
	};
	if (((*((*(_10113_ins))._field_Decl))._field_Result != nullptr)) {
		(*(_10113_ins))._field_Result=(*((*((*((*(_10113_ins))._field_Decl))._field_Result))._field_Kind))._field_Kind;
	};
	return _10113_ins;;
}



inline jule::Ptr<_1ab120d00_FnIns> _1ab11e65b_instance(jule::Ptr<_1ab11cdeb_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1ab11e3c5_instanceForce(_self_);;
}



inline jule::Ptr<_1ab120d00_FnIns> _1ab11e969_appendInstance(_1ab11cdeb_Fn* _self_, jule::Ptr<_1ab120d00_FnIns>* _12938_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1ab120d00_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1ab120d00_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb7129b:;
		if (it != expr_end) {
			jule::Ptr<_1ab120d00_FnIns> _14521_ains = *it;
			{
				if (_1ab12285c_Same(_14521_ains.ptr(), (*(_12938_ins)))) {
					return _14521_ains;;
				};
			}
			_iter_next_1bbb7129b:;
			++it;
			goto _iter_begin_1bbb7129b;
		}
		_iter_end_1bbb7129b:;
	};
	{ jule::Slice<jule::Ptr<_1ab120d00_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab11cdeb_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab1201b7_Str(_1ab11ed54_ParamIns* _self_) {
	_1d7ad2eb1_StrBuilder _16713_s = static__1d7ad327a_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_1d7adba8b_WriteStr(&_16713_s, jule::Str::lit("mut ", 4));
	};
	if ((*((*(_self_))._field_Decl))._field_Reference) {
		_1d7adba8b_WriteStr(&_16713_s, jule::Str::lit("&_:", 3));
	};
	if (_1ab11ba43_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1ab11bcc9_IsRef((*(_self_))._field_Decl.ptr())) {
			_1d7adbd44_WriteByte(&_16713_s, '&');
		};
		_1d7adba8b_WriteStr(&_16713_s, jule::Str::lit("self", 4));
		return _1d7adc383_Str(&_16713_s);;
	};
	if ((*((*(_self_))._field_Decl))._field_Variadic) {
		_1d7adba8b_WriteStr(&_16713_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_1d7adba8b_WriteStr(&_16713_s, _1ab25add5_Str((*(_self_))._field_Kind.ptr()));
	};
	return _1d7adc383_Str(&_16713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab11ed54_ParamIns _Src) {
	_Stream << _1ab1201b7_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab121141_Str(_1ab120d00_FnIns* _self_) {
	;
	return _1ab122b9d_GetKindStr(_self_, false);;
}



inline jule::Bool _1ab121482_Equal(jule::Ptr<_1ab120d00_FnIns> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _21821_other) {
	jule::Ptr<_1ab120d00_FnIns> _2199_f = _1ab25e45a_Fn(_21821_other.ptr());;
	if ((_2199_f == nullptr)) {
		return false;;
	};
	return _1ab121927_EqualFn(_self_, &(_2199_f));;
}



inline jule::Bool _1ab121927_EqualFn(jule::Ptr<_1ab120d00_FnIns> _self_, jule::Ptr<_1ab120d00_FnIns>* _22924_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*((*((*(_22924_f))))._field_Decl))._field_Exceptional)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Unsafety != (*((*((*(_22924_f))))._field_Decl))._field_Unsafety)) {
		return false;;
	};
	if ((_1ab11d36e_IsVoid((*(_self_))._field_Decl.ptr()) != _1ab11d36e_IsVoid((*((*(_22924_f))))._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1ab11ed54_ParamIns>,jule::Ptr<_1ab11ed54_ParamIns>)> _2399_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1ab11ed54_ParamIns>,jule::Ptr<_1ab11ed54_ParamIns>)>([=](jule::Ptr<_1ab11ed54_ParamIns> _23927_p1, jule::Ptr<_1ab11ed54_ParamIns> _23942_p2) mutable -> jule::Bool {
		if (((*((*(_23927_p1))._field_Decl))._field_Mutable != (*((*(_23942_p2))._field_Decl))._field_Mutable)) {
			return false;;
		};
		if (_1ab11ba43_IsSelf((*(_23927_p1))._field_Decl.ptr())) {
			if ((!(_1ab11ba43_IsSelf((*(_23942_p2))._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1ab11bcc9_IsRef((*(_23927_p1))._field_Decl.ptr()) != _1ab11bcc9_IsRef((*(_23942_p2))._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if (((*((*(_23927_p1))._field_Decl))._field_Reference != (*((*(_23942_p2))._field_Decl))._field_Reference)) {
			return false;;
		};
		if (((*((*(_23927_p1))._field_Decl))._field_Variadic != (*((*(_23942_p2))._field_Decl))._field_Variadic)) {
			return false;;
		};
		return _1ab25b226_Equal((*(_23927_p1))._field_Kind, (*(_23942_p2))._field_Kind);;
	});;
	if (((*((*(_22924_f))))._field_Params.len() != (*(_self_))._field_Params.len())) {
		return false;;
	};
	jule::I64 _27113_i = 0LL;;
	for (; (_27113_i < (*(_self_))._field_Params.len()); (_27113_i)++) {
		{
			if ((!(_2399_checkParams((*(_self_))._field_Params[_27113_i], (*((*(_22924_f))))._field_Params[_27113_i])))) {
				return false;;
			};
		}
	_iter_next_1bbb823ab:;
	}
	_iter_end_1bbb823ab:;;
	if ((!(_1ab11d36e_IsVoid((*(_self_))._field_Decl.ptr())))) {
		if ((!(_1ab25b226_Equal((*(_self_))._field_Result, (*((*(_22924_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1ab121c68_equalTrait(jule::Ptr<_1ab120d00_FnIns> _self_, jule::Ptr<_1ab120d00_FnIns>* _28827_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*((*((*(_28827_other))))._field_Decl))._field_Public)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Ident != (*((*((*(_28827_other))))._field_Decl))._field_Ident)) {
		return false;;
	};
	if ((!(_1ab121927_EqualFn(_self_, _28827_other)))) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Generics.len() != (*((*((*(_28827_other))))._field_Decl))._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>> _1ab121eee_Types(_1ab120d00_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1bbb87a76:;
			{
				return nullptr;;
			}
		}
		else if ((_1ab25ee94_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1bbb87adc:;
			{
				return jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1bbb87a10:;
			{
				return (*(_1ab25ee94_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1bbb87944:;
	};
}



inline jule::Bool _1ab122285_IsBuiltin(_1ab120d00_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1ab12251b_IsAnon(_1ab120d00_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1ab11dda8_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1ab12285c_Same(_1ab120d00_FnIns* _self_, jule::Ptr<_1ab120d00_FnIns> _33119_f) {
	if ((((*(_self_))._field_Decl != (*(_33119_f))._field_Decl) || ((*(_33119_f))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb8a859:;
		if (it != expr_end) {
			jule::I64 _33613_i = it - expr->begin();
			jule::Ptr<_1ab259136_InsGeneric> *_33616_g = it;
			{
				jule::Ptr<_1ab259136_InsGeneric> _33713_g2 = (*(_33119_f))._field_Generics[_33613_i];;
				if ((((*((*((*(_33616_g))))._field_Kind))._field_BindIdent != (*((*(_33713_g2))._field_Kind))._field_BindIdent) || (!(_1ab25b226_Equal((*((*(_33616_g))))._field_Kind, (*(_33713_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1bbb8a859:;
			++it;
			_33613_i++;
			goto _iter_begin_1bbb8a859;
		}
		_iter_end_1bbb8a859:;
	};
	return true;;
}



inline jule::Str _1ab122b9d_GetKindStr(_1ab120d00_FnIns* _self_, jule::Bool _34825_ident) {
	_1d7ad2eb1_StrBuilder _34913_s = static__1d7ad327a_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_1d7adba8b_WriteStr(&_34913_s, jule::Str::lit("unsafe ", 7));
	};
	_1d7adba8b_WriteStr(&_34913_s, jule::Str::lit("fn", 2));
	if ((_34825_ident && ((*(_self_))._field_Decl != nullptr))) {
		_1d7adbd44_WriteByte(&_34913_s, ' ');
		_1d7adba8b_WriteStr(&_34913_s, (*((*(_self_))._field_Decl))._field_Ident);
	};
	_1d7adbd44_WriteByte(&_34913_s, '(');
	jule::I64 _3639_n = (*(_self_))._field_Params.len();;
	if ((_3639_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bbb912dd:;
			if (it != expr_end) {
				jule::I64 _36517_i = it - expr->begin();
				jule::Ptr<_1ab11ed54_ParamIns> *_36520_p = it;
				{
					_1d7adba8b_WriteStr(&_34913_s, _1ab1201b7_Str((*(_36520_p)).ptr()));
					if ((_36517_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_1d7adbd44_WriteByte(&_34913_s, ',');
					};
				}
				_iter_next_1bbb912dd:;
				++it;
				_36517_i++;
				goto _iter_begin_1bbb912dd;
			}
			_iter_end_1bbb912dd:;
		};
	};
	_1d7adbd44_WriteByte(&_34913_s, ')');
	if ((*((*(_self_))._field_Decl))._field_Exceptional) {
		_1d7adbd44_WriteByte(&_34913_s, '!');
	};
	if ((!(_1ab11d36e_IsVoid((*(_self_))._field_Decl.ptr())))) {
		_1d7adbd44_WriteByte(&_34913_s, ':');
		_1d7adba8b_WriteStr(&_34913_s, _1ab25add5_Str((*(_self_))._field_Result.ptr()));
	};
	return _1d7adc383_Str(&_34913_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab120d00_FnIns _Src) {
	_Stream << _1ab121141_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1ab123eac_ReferenceStack> static__1ab124298_new(void) {
	return jule::new_ptr<_1ab123eac_ReferenceStack>(_1ab123eac_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1ab124694_Len(_1ab123eac_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1ab1249d5_At(_1ab123eac_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1ab124c8d_Push(_1ab123eac_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1bc502ed4_Exist(_1ab123eac_ReferenceStack* _self_, jule::Ptr<_1ab120d00_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc5041d3:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1bc5041d3:;
			++it;
			goto _iter_begin_1bc5041d3;
		}
		_iter_end_1bc5041d3:;
	};
	return false;;
}

inline jule::Bool _1bc516e2c_Exist(_1ab123eac_ReferenceStack* _self_, jule::Ptr<_1ab1c7a66_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc5180d7:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1bc5180d7:;
			++it;
			goto _iter_begin_1bc5180d7;
		}
		_iter_end_1bc5180d7:;
	};
	return false;;
}

inline jule::Bool _1bc5c4a34_Exist(_1ab123eac_ReferenceStack* _self_, jule::Ptr<_1ab10acb8_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc5c5c33:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1bc5c5c33:;
			++it;
			goto _iter_begin_1bc5c5c33;
		}
		_iter_end_1bc5c5c33:;
	};
	return false;;
}

inline jule::Bool _1bb22a68b_Exist(_1ab123eac_ReferenceStack* _self_, jule::Ptr<_1ab131195_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb22b813:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1bb22b813:;
			++it;
			goto _iter_begin_1bb22b813;
		}
		_iter_end_1bb22b813:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab123eac_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1254b9_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1ab12a920_pushErr(_1ab12a07e_symbolBuilder* _self_, jule::Ptr<_1ab0c1e7c_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_1d7b81cb8_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ab1a3349_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1ab12b1a1_pushSuggestion(_1ab12a07e_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1ab1a4878_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1ab12b59c_checkCppUseDeclPath(_1ab12a07e_symbolBuilder* _self_, jule::Ptr<_1ab1002b8_UseDecl>* _34539_decl, jule::Str* _34556_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3469_ext = _1d7ae03ec_Ext((*(_34556_path)));;
	if (((!(_1d7b74d77_IsValidHeaderExt(_3469_ext))) && (!(_1d7b75141_IsValidCppExt(_3469_ext))))) {
		_1ab12a920_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_3469_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20252ae72_Status> _3539_info = ({
		auto except = static__202527b0b_Of((*(_34556_path)));
		(except.ok()) ? (except.result) : ({{
			_1ab12a920_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_20252ae72_Status>(nullptr);});
	});;
	if (_20252b34b_IsDir(_3539_info.ptr())) {
		_1ab12a920_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab12b8aa_buildCppHeaderImport(_1ab12a07e_symbolBuilder* _self_, jule::Ptr<_1ab1002b8_UseDecl>* _36544_decl) {
	jule::Str _36613_path = (*((*(_36544_decl))))._field_LinkPath;;
	if ((!(_1d7b74abe_IsStdHeaderPath((*((*(_36544_decl))))._field_LinkPath)))) {
		_36613_path=_1d7ae0133_Join(jule::Slice<jule::Str>::make({_1ab0c7db7_Dir((*((*((*(_36544_decl))))._field_Token))._field_File.ptr()),(*((*(_36544_decl))))._field_LinkPath}));
		jule::Bool _37017_ok = _1ab12b59c_checkCppUseDeclPath(_self_, _36544_decl, &(_36613_path));;
		if ((!(_37017_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d7ae06b6_Abs(_36613_path);
			_36613_path = __jule_assign_result.__jule_result_arg0;
			_37017_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37017_ok))) {
			_1ab12a920_pushErr(_self_, &((*((*(_36544_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36544_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_1ab184bdd_ImportInfo>(_1ab184bdd_ImportInfo{._field_Token=(*((*(_36544_decl))))._field_Token, ._field_Path=_36613_path, ._field_LinkPath=(*((*(_36544_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab12bbeb_buildStdImport(_1ab12a07e_symbolBuilder* _self_, jule::Ptr<_1ab1002b8_UseDecl>* _39338_decl) {
	jule::Str _39413_path = (*((*(_39338_decl))))._field_LinkPath.slice(5LL);;
	_39413_path=_1d7ac4821_Replace(_39413_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_39413_path=_1d7ae0133_Join(jule::Slice<jule::Str>::make({_1d7c936d2_PathStdlib,_39413_path}));
	jule::Bool _39715_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d7ae06b6_Abs(_39413_path);
		_39413_path = __jule_assign_result.__jule_result_arg0;
		_39715_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39715_ok))) {
		_1ab12a920_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20252ae72_Status> _4049_info = ({
		auto except = static__202527b0b_Of(_39413_path);
		(except.ok()) ? (except.result) : ({{
			_1ab12a920_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_20252ae72_Status>(nullptr);});
	});;
	if ((!(_20252b34b_IsDir(_4049_info.ptr())))) {
		_1ab12a920_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4149_i = (_1d7ac0399_FindLast((*((*(_39338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4159_ident = (*((*(_39338_decl))))._field_LinkPath.slice(_4149_i);;
	return jule::new_ptr<_1ab184bdd_ImportInfo>(_1ab184bdd_ImportInfo{._field_Token=(*((*(_39338_decl))))._field_Token, ._field_Path=_39413_path, ._field_LinkPath=(*((*(_39338_decl))))._field_LinkPath, ._field_Ident=_4159_ident, ._field_Alias=(*((*(_39338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39338_decl))))._field_Full, ._field_Package=jule::new_ptr<_1ab187b14_Package>(_1ab187b14_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab12c03c_buildIdentImport(jule::Ptr<_1ab12a07e_symbolBuilder> _self_, jule::Ptr<_1ab1002b8_UseDecl>* _43241_decl) {
	jule::Str _4339_modPath = _1ab181cc8_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab180d3d_GetModPath((*(_self_))._field_importer);;
	if ((_4339_modPath.len() == 0LL)) {
		_1ab12a920_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1ab12b1a1_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44013_path = (*((*(_43241_decl))))._field_LinkPath;;
	_44013_path=_1d7ac4821_Replace(_44013_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_44013_path=_1d7ae0133_Join(jule::Slice<jule::Str>::make({_4339_modPath,_44013_path}));
	jule::Bool _44415_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d7ae06b6_Abs(_44013_path);
		_44013_path = __jule_assign_result.__jule_result_arg0;
		_44415_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_44415_ok))) {
		_1ab12a920_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20252ae72_Status> _4519_info = ({
		auto except = static__202527b0b_Of(_44013_path);
		(except.ok()) ? (except.result) : ({{
			_1ab12a920_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_20252ae72_Status>(nullptr);});
	});;
	if ((!(_20252b34b_IsDir(_4519_info.ptr())))) {
		_1ab12a920_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4619_i = (_1d7ac0399_FindLast((*((*(_43241_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4629_ident = (*((*(_43241_decl))))._field_LinkPath.slice(_4619_i);;
	return jule::new_ptr<_1ab184bdd_ImportInfo>(_1ab184bdd_ImportInfo{._field_Token=(*((*(_43241_decl))))._field_Token, ._field_Path=_44013_path, ._field_LinkPath=(*((*(_43241_decl))))._field_LinkPath, ._field_Ident=_4629_ident, ._field_Alias=(*((*(_43241_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43241_decl))))._field_Full, ._field_Package=jule::new_ptr<_1ab187b14_Package>(_1ab187b14_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab12c37d_buildImport(jule::Ptr<_1ab12a07e_symbolBuilder> _self_, jule::Ptr<_1ab1002b8_UseDecl>* _47936_decl) {
	{
		
		if ((*((*(_47936_decl))))._field_Binded) {
			_case_begin_1bbbcc615:;
			{
				return _1ab12b8aa_buildCppHeaderImport(_self_.ptr(), _47936_decl);;
			}
		}
		else if ((*((*(_47936_decl))))._field_Std) {
			_case_begin_1bbbcbec7:;
			{
				return _1ab12bbeb_buildStdImport(_self_.ptr(), _47936_decl);;
			}
		}
		else {
			_case_begin_1bbbcbe61:;
			{
				return _1ab12c03c_buildIdentImport(_self_, _47936_decl);;
			}
		}
		_match_end_1bbbcbd95:;
	};
}



inline jule::Bool _1ab12c6be_checkDuplicateUseDecl(_1ab12a07e_symbolBuilder* _self_, jule::Ptr<_1ab184bdd_ImportInfo>* _49041_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab184bdd_ImportInfo> _4929_lpkg = _1ab225388_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)>([=](jule::Ptr<_1ab184bdd_ImportInfo> _49245_spkg) mutable -> jule::Bool {
		return ((*((*(_49041_pkg))))._field_Path == (*(_49245_spkg))._field_Path);;
	}));;
	if ((_4929_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1ab12a920_pushErr(_self_, &((*((*(_49041_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_49041_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_1ab12b1a1_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1ab12ca32_implImportSelections(_1ab12a07e_symbolBuilder* _self_, jule::Ptr<_1ab184bdd_ImportInfo>* _50444_imp, jule::Ptr<_1ab1002b8_UseDecl>* _50467_decl) {
	(*((*(_50444_imp))))._field_Selected=(*((*(_50467_decl))))._field_Selected;
	{
		auto expr = &((*((*(_50444_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbbd187d:;
		if (it != expr_end) {
			jule::Ptr<_1ab0c1e7c_Token> _50616_item = *it;
			{
				{
					auto expr = &((*((*(_50444_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbbd24e9:;
					if (it != expr_end) {
						jule::Ptr<_1ab0c1e7c_Token> _50720_citem = *it;
						{
							if ((_50616_item == _50720_citem)) {
								goto _iter_end_1bbbd24e9;
							} else if (((*(_50616_item))._field_Kind == (*(_50720_citem))._field_Kind)) {
								_1ab12a920_pushErr(_self_, &(_50616_item), jule::Str::lit("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*(_50616_item))._field_Kind, &__jule_any_type4)}));
								_1ab12b1a1_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1bbbd24e9;
							};
						}
						_iter_next_1bbbd24e9:;
						++it;
						goto _iter_begin_1bbbd24e9;
					}
					_iter_end_1bbbd24e9:;
				};
			}
			_iter_next_1bbbd187d:;
			++it;
			goto _iter_begin_1bbbd187d;
		}
		_iter_end_1bbbd187d:;
	};
}



inline jule::Str _1ab12cd73_getAsLinkPath(jule::Ptr<_1ab12a07e_symbolBuilder> _self_, jule::Str _51937_path) {
	if (_1d7abd93b_HasPrefix(_51937_path, _1d7c936d2_PathStdlib)) {
		(_51937_path).mut_slice(_1d7c936d2_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _1d7ac4821_Replace(_51937_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5259_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d7ae06b6_Abs(_1ab181cc8_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab180d3d_GetModPath((*(_self_))._field_importer));
		_5259_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51937_path).mut_slice(_5259_root.len());;
	if ((_51937_path[0LL] == 47LLU)) {
		(_51937_path).mut_slice(1LL);;
	};
	return _1d7ac4821_Replace(_51937_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _1ab12d291_pushCycleError(jule::Ptr<_1ab12a07e_symbolBuilder> _self_, jule::Ptr<_1ab12a07e_symbolBuilder>* _53335_sb, jule::Str _53355_path, _1d7ad2eb1_StrBuilder* _53371_message) {
	;
	jule::Str _5359_refersTo = _1d7b8222a_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1ab12cd73_getAsLinkPath(_self_, _1ab0c7db7_Dir((*((*((*(_53335_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_1ab12cd73_getAsLinkPath(_self_, _53355_path), &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5399_buf = _1d7adcd34_Buf(_53371_message);;
	_1d7adba8b_WriteStr(_53371_message, _1d7abd144_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1d7adba8b_WriteStr(_53371_message, _5359_refersTo);
	_1d7adbd44_WriteByte(_53371_message, '\n');
	_1d7adb7d3_Write(_53371_message, _5399_buf);
}



inline void _1ab12d6ae_pushCrossCycleError(jule::Ptr<_1ab12a07e_symbolBuilder> _self_, jule::Ptr<_1ab12a07e_symbolBuilder>* _54640_target, jule::Ptr<_1ab184bdd_ImportInfo>* _54665_imp, jule::Ptr<_1ab0c1e7c_Token>* _54684_errorToken) {
	_1d7ad2eb1_StrBuilder _54713_message = static__1d7ad327a_New(32LL);;
	_1ab12d291_pushCycleError(_self_, &(_self_), (*((*(_54665_imp))))._field_Path, &(_54713_message));
	jule::Ptr<_1ab12a07e_symbolBuilder> _55113_owner = (*(_self_))._field_owner;;
	jule::Ptr<_1ab12a07e_symbolBuilder> _55213_old = _self_;;
	while (((*(_55113_owner))._field_owner != nullptr)) {
		{
			_1ab12d291_pushCycleError(_self_, &((*(_55213_old))._field_owner), _1ab0c7db7_Dir((*((*(_55213_old))._field_table))._field_File.ptr()), &(_54713_message));
			if (((*(_55113_owner))._field_owner == (*(_54640_target)))) {
				_1ab12d291_pushCycleError(_self_, _54640_target, _1ab0c7db7_Dir((*((*(_55113_owner))._field_table))._field_File.ptr()), &(_54713_message));
				goto _iter_end_1bbbdaa85;
			};
			_55213_old=_55113_owner;
			_55113_owner=(*(_55113_owner))._field_owner;
		}
	_iter_next_1bbbdaa85:;
	}
	_iter_end_1bbbdaa85:;;
	_1ab12a920_pushErr(_self_.ptr(), _54684_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_1d7adc383_Str(&_54713_message), &__jule_any_type4)}));
}



inline jule::Bool _1ab12daaa_checkImportCycles(jule::Ptr<_1ab12a07e_symbolBuilder> _self_, jule::Ptr<_1ab184bdd_ImportInfo> _56937_imp, jule::Ptr<_1ab1002b8_UseDecl>* _56956_decl) {
	if (((*(_56937_imp))._field_Path == _1ab0c7db7_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1ab12a920_pushErr(_self_.ptr(), &((*((*(_56956_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1ab12cd73_getAsLinkPath(_self_, (*(_56937_imp))._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*(_self_))._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1ab12a07e_symbolBuilder> _57913_owner = (*(_self_))._field_owner;;
	_julec_label_1bbbe11d9:;
	if ((_1ab0c7db7_Dir((*((*(_57913_owner))._field_table))._field_File.ptr()) == (*(_56937_imp))._field_Path)) {
		_1ab12d6ae_pushCrossCycleError(_self_, &(_57913_owner), &(_56937_imp), &((*((*(_56956_decl))))._field_Token));
		return false;;
	};
	if (((*(_57913_owner))._field_owner != nullptr)) {
		_57913_owner=(*(_57913_owner))._field_owner;
		goto _julec_label_1bbbe11d9;
	};
	return true;;
}



inline void _1ab12dec8_checkPackageAccessibility(_1ab12a07e_symbolBuilder* _self_, jule::Ptr<_1ab1002b8_UseDecl>* _60045_decl, jule::Str* _60062_mod, jule::Str* _60073_path) {
	if (((_1ab181cc8_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab180d3d_GetModPath((*(_self_))._field_importer) != (*(_60062_mod))) && _1d7ac3446_Contains((*(_60073_path)), jule::Str::lit("internal", 8)))) {
		_1ab12a920_pushErr(_self_, &((*((*(_60045_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ab12e3c4_importPackage(jule::Ptr<_1ab12a07e_symbolBuilder> _self_, jule::Ptr<_1ab184bdd_ImportInfo>* _60638_imp, jule::Ptr<_1ab1002b8_UseDecl>* _60661_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_60638_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab184bdd_ImportInfo> _61113_port = _1ab181cc8_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab1814c0_GetImport((*(_self_))._field_importer, (*((*(_60638_imp))))._field_Path);;
	if ((_61113_port != nullptr)) {
		(*((*(_60638_imp))))._field_Package=(*(_61113_port))._field_Package;
		(*((*(_60638_imp))))._field_Duplicate=true;
		jule::Str _61613_oldMod = _1ab181cc8_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab180d3d_GetModPath((*(_self_))._field_importer);;
		_1ab181cc8_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab180aa7_SetModPath((*(_self_))._field_importer, _1ab181cc8_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab18117e_ModById((*(_self_))._field_importer, (*((*(_60638_imp))))._field_ModId));
		_1ab12dec8_checkPackageAccessibility(_self_.ptr(), _60661_decl, &(_61613_oldMod), &((*(_61113_port))._field_Path));
		_1ab181cc8_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab180aa7_SetModPath((*(_self_))._field_importer, _61613_oldMod);
	} else {
		if ((!(_1ab12daaa_checkImportCycles(_self_, (*(_60638_imp)), _60661_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _62513_oldMod = _1ab181cc8_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab180d3d_GetModPath((*(_self_))._field_importer);;
		__JULE_DEFER({
			_1ab181cc8_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab180aa7_SetModPath((*(_self_))._field_importer, _62513_oldMod);
		});;
		if ((*((*(_60638_imp))))._field_Std) {
			_1ab181cc8_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab180aa7_SetModPath((*(_self_))._field_importer, _1d7c936d2_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1ab0d55ab_Ast>> _63017_asts;;
		jule::Slice<_1d7b81cb8_Log> _63027_errors;;
		({
			__jule_tuple_sx_1ab0d55ab_Ast__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = _1ab181cc8_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab1818bb_ImportPackage((*(_self_))._field_importer, (*((*(_60638_imp))))._field_Path, (!((*((*(_60638_imp))))._field_Std)));
			_63017_asts = __jule_assign_result.__jule_result_arg0;
			_63027_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63027_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_63027_errors);;
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1ab12dec8_checkPackageAccessibility(_self_.ptr(), _60661_decl, &(_62513_oldMod), &((*((*(_60638_imp))))._field_Path));
		{
			auto expr = &(_63017_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bbbebb2e:;
			if (it != expr_end) {
				jule::Ptr<_1ab0d55ab_Ast> _63825_ast = *it;
				{
					jule::Ptr<_1ab224d9e_SymbolTable> _63925_table = nullptr;;
					({
						__jule_tuple_x_1ab224d9e_SymbolTable__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = _1ab27b334_buildSymbols(&(_63825_ast), &((*(_self_))._field_importer), _self_);
						_63925_table = __jule_assign_result.__jule_result_arg0;
						_63027_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63027_errors.len() > 0LL)) {
						((*(_self_))._field_errors).append(_63027_errors);;
						__jule_func_result = false;
						return __jule_func_result;;
					};
					{ jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>> &__jule_push_dest = (*((*((*(_60638_imp))))._field_Package))._field_Files; __jule_push_dest.push(_63925_table); };
				}
				_iter_next_1bbbebb2e:;
				++it;
				goto _iter_begin_1bbbebb2e;
			}
			_iter_end_1bbbebb2e:;
		};
	};
	_1ab12ca32_implImportSelections(_self_.ptr(), _60638_imp, _60661_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab12e715_importUseDecl(jule::Ptr<_1ab12a07e_symbolBuilder> _self_, jule::Ptr<_1ab1002b8_UseDecl>* _65338_decl) {
	jule::Ptr<_1ab184bdd_ImportInfo> _65413_imp = _1ab12c37d_buildImport(_self_, _65338_decl);;
	if ((_65413_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66013_ok = _1ab12c6be_checkDuplicateUseDecl(_self_.ptr(), &(_65413_imp));;
	if ((!(_66013_ok))) {
		return nullptr;;
	};
	_66013_ok=_1ab12e3c4_importPackage(_self_, &(_65413_imp), _65338_decl);
	{ jule::Slice<jule::Ptr<_1ab184bdd_ImportInfo>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Imports; __jule_push_dest.push(_65413_imp); };
	if (_66013_ok) {
		_1ab181cc8_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab181b74_Imported((*(_self_))._field_importer, _65413_imp);
		return _65413_imp;;
	};
	return nullptr;;
}



inline void _1ab12e913_importUseDecls(jule::Ptr<_1ab12a07e_symbolBuilder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc01837:;
		if (it != expr_end) {
			jule::Ptr<_1ab1002b8_UseDecl> _67521_decl = *it;
			{
				_1ab12e715_importUseDecl(_self_, &(_67521_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					goto _iter_end_1bbc01837;
				};
			}
			_iter_next_1bbc01837:;
			++it;
			goto _iter_begin_1bbc01837;
		}
		_iter_end_1bbc01837:;
	};
}



inline void _1ab12ebbb_appendNode(_1ab12a07e_symbolBuilder* _self_, _1ab0d6447_Node* _68434_node) {
	{
		auto &_match_expr{ (*(_68434_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1bbc03b47:;
			{
				{ jule::Slice<jule::Ptr<_1ab15d37b_Impl>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Impls; __jule_push_dest.push(_1ab1299b8_buildImpl((*(_68434_node))._field_Data.cast_ptr<_1ab103d27_Impl>(&__jule_any_type11))); };
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bbc03d9a:;
			{
				jule::Ptr<_1ab259c2a_TypeAlias> _68917_ta = _1ab125e04_buildTypeAlias((*(_68434_node))._field_Data.cast_ptr<_1ab0edcab_TypeAliasDecl>(&__jule_any_type12));;
				{ jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push(_68917_ta); };
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bbc03e11:;
			{
				jule::Ptr<_1ab10803a_Struct> _69217_srct = _1ab1267c8_buildStruct((*(_68434_node))._field_Data.cast_ptr<_1ab102e7a_StructDecl>(&__jule_any_type13));;
				{ jule::Slice<jule::Ptr<_1ab10803a_Struct>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Structs; __jule_push_dest.push(_69217_srct); };
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bbc03e77:;
			{
				jule::Ptr<_1ab11cdeb_Fn> _69517_f = _1ab1274bb_buildFunc((*(_68434_node))._field_Data.cast_ptr<_1ab0e9108_FnDecl>(&__jule_any_type14));;
				{ jule::Slice<jule::Ptr<_1ab11cdeb_Fn>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Funcs; __jule_push_dest.push(_69517_f); };
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1bbc03edd:;
			{
				jule::Ptr<_1ab131195_Trait> _69817_t = _1ab127d18_buildTrait((*(_68434_node))._field_Data.cast_ptr<_1ab1036b7_TraitDecl>(&__jule_any_type15));;
				{ jule::Slice<jule::Ptr<_1ab131195_Trait>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Traits; __jule_push_dest.push(_69817_t); };
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bbc0475d:;
			{
				jule::Ptr<_1ab1c7a66_Var> _70117_v = _1ab129435_buildVar((*(_68434_node))._field_Data.cast_ptr<_1ab0ea1d6_VarDecl>(&__jule_any_type16));;
				{ jule::Slice<jule::Ptr<_1ab1c7a66_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_70117_v); };
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1bbc047c4:;
			{
				jule::Ptr<_1ab133890_Enum> _70417_e = _1ab12881e_buildEnum((*(_68434_node))._field_Data.cast_ptr<_1ab101330_EnumDecl>(&__jule_any_type17));;
				{ jule::Slice<jule::Ptr<_1ab133890_Enum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Enums; __jule_push_dest.push(_70417_e); };
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1bbc0483a:;
			{
				jule::Ptr<_1ab13509a_TypeEnum> _70717_e = _1ab12916b_buildTypeEnum((*(_68434_node))._field_Data.cast_ptr<_1ab1022ba_TypeEnumDecl>(&__jule_any_type18));;
				{ jule::Slice<jule::Ptr<_1ab13509a_TypeEnum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeEnums; __jule_push_dest.push(_70717_e); };
			}
		}
		else {
			_case_begin_1bbc03d34:;
			{
				_1ab12a920_pushErr(_self_, &((*(_68434_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bbc02e76:;
	};
}



inline void _1ab12edb9_appendNodes(_1ab12a07e_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc04917:;
		if (it != expr_end) {
			_1ab0d6447_Node _71521_node = *it;
			{
				_1ab12ebbb_appendNode(_self_, &(_71521_node));
			}
			_iter_next_1bbc04917:;
			++it;
			goto _iter_begin_1bbc04917;
		}
		_iter_end_1bbc04917:;
	};
}



inline void _1ab130172_pushDirectivePass(_1ab12a07e_symbolBuilder* _self_, jule::Ptr<_1ab0d6865_Directive>* _72041_d) {
	if (((*((*(_72041_d))))._field_Args.len() == 0LL)) {
		_1ab12a920_pushErr(_self_, &((*((*(_72041_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_72041_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1ab0c1e7c_Token> _72513_arg = (*((*(_72041_d))))._field_Args[1LL];;
		_1ab12a920_pushErr(_self_, &(_72513_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_72041_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1ab0c1e7c_Token> _7299_arg = (*((*(_72041_d))))._field_Args[0LL];;
	if (((*(_7299_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ab12a920_pushErr(_self_, &(_7299_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_7299_arg))._field_Kind[0LL] != '\"')) {
		_1ab12a920_pushErr(_self_, &(_7299_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<_1ab1254b9_Pass> &__jule_push_dest = (*((*(_self_))._field_table))._field_Passes; __jule_push_dest.push(_1ab1254b9_Pass{._field_Token=(*((*(_72041_d))))._field_Tag, ._field_Text=(*(_7299_arg))._field_Kind.slice(1LL, ((*(_7299_arg))._field_Kind.len() - 1LL))}); };
}



inline void _1ab130370_appendTopDirectives(_1ab12a07e_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc0eed8:;
		if (it != expr_end) {
			jule::Ptr<_1ab0d6865_Directive> _74721_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_74721_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_1bbc14ad1:;
						{
							_1ab130172_pushDirectivePass(_self_, &(_74721_d));
						}
					}
					_match_end_1bbc14a26:;
				};
			}
			_iter_next_1bbc0eed8:;
			++it;
			goto _iter_begin_1bbc0eed8;
		}
		_iter_end_1bbc0eed8:;
	};
}



inline void _1ab13056d_build(jule::Ptr<_1ab12a07e_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1ab224d9e_SymbolTable>(_1ab224d9e_SymbolTable{._field_File=(*((*(_self_))._field_ast))._field_File, });
	_1ab130370_appendTopDirectives(_self_.ptr());
	_1ab12e913_importUseDecls(_self_);
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	_1ab12edb9_appendNodes(_self_.ptr());
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab12a07e_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab13155d_Str(_1ab131195_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ab13189e_Equal(jule::Ptr<_1ab131195_Trait> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _2521_other) {
	jule::Ptr<_1ab131195_Trait> _269_trt = _1ab25e977_Trait(_2521_other.ptr());;
	return (_self_ == _269_trt);;
}



inline jule::Ptr<_1ab11cdeb_Fn> _1ab131d44_FindMethod(_1ab131195_Trait* _self_, jule::Str _3429_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc18772:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _3521_f = *it;
			{
				if (((*(_3521_f))._field_Ident == _3429_ident)) {
					return _3521_f;;
				};
			}
			_iter_next_1bbc18772:;
			++it;
			goto _iter_begin_1bbc18772;
		}
		_iter_end_1bbc18772:;
	};
	return _1ab1324c6_findMethodInherit(_self_, &(_3429_ident));;
}



inline jule::Ptr<_1ab11cdeb_Fn> _1ab1324c6_findMethodInherit(_1ab131195_Trait* _self_, jule::Str* _5537_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc1b401:;
		if (it != expr_end) {
			jule::Ptr<_1ab262bde_TypeSymbol> _5621_i = *it;
			{
				if (((*(_5621_i))._field_Kind == nullptr)) {
					goto _iter_next_1bbc1b401;
				};
				jule::Ptr<_1ab131195_Trait> _6017_t = _1ab25e977_Trait((*(_5621_i))._field_Kind.ptr());;
				if ((_6017_t != nullptr)) {
					jule::Ptr<_1ab11cdeb_Fn> _6221_f2 = _1ab131d44_FindMethod(_6017_t.ptr(), (*(_5537_ident)));;
					if ((_6221_f2 != nullptr)) {
						return _6221_f2;;
					};
				};
			}
			_iter_next_1bbc1b401:;
			++it;
			goto _iter_begin_1bbc1b401;
		}
		_iter_end_1bbc1b401:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab131195_Trait _Src) {
	_Stream << _1ab13155d_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1ab1331ca_AutoExpr(_1ab132d23_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab132d23_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab133c14_Str(_1ab133890_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ab134055_Equal(jule::Ptr<_1ab133890_Enum> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _3821_other) {
	jule::Ptr<_1ab133890_Enum> _399_enm = _1ab25d921_Enum(_3821_other.ptr());;
	return (_self_ == _399_enm);;
}



inline jule::Ptr<_1ab132d23_EnumItem> _1ab134484_FindItem(_1ab133890_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc1ed50:;
		if (it != expr_end) {
			jule::Ptr<_1ab132d23_EnumItem> _4821_item = *it;
			{
				if (((*(_4821_item))._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1bbc1ed50:;
			++it;
			goto _iter_begin_1bbc1ed50;
		}
		_iter_end_1bbc1ed50:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab133890_Enum _Src) {
	_Stream << _1ab133c14_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1349c3_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab1353db_Str(_1ab13509a_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ab13572c_Equal(jule::Ptr<_1ab13509a_TypeEnum> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _8021_other) {
	jule::Ptr<_1ab13509a_TypeEnum> _819_tenm = _1ab25dba7_TypeEnum(_8021_other.ptr());;
	return (_self_ == _819_tenm);;
}



inline jule::Ptr<_1ab1349c3_TypeEnumItem> _1ab135b5b_FindItem(_1ab13509a_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc21ec8:;
		if (it != expr_end) {
			jule::Ptr<_1ab1349c3_TypeEnumItem> _9021_item = *it;
			{
				if (((*(_9021_item))._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1bbc21ec8:;
			++it;
			goto _iter_begin_1bbc21ec8;
		}
		_iter_end_1bbc21ec8:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab13509a_TypeEnum _Src) {
	_Stream << _1ab1353db_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab13780b_Str(_1ab137443_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1ab137b4c_Equal(jule::Ptr<_1ab137443_comptimeRange> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _2521_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab137443_comptimeRange _Src) {
	_Stream << _1ab13780b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab138323_Str(_1ab137e9e_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1ab138664_Equal(jule::Ptr<_1ab137e9e_comptimeStructField> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _3521_other) {
	return false;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab138b81__Name(jule::Ptr<_1ab137e9e_comptimeStructField> _self_, jule::Ptr<_1ab22be1c_Eval>* _3926_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _3941_fc) {
	if (((*((*(_3941_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_3926_e)).ptr(), (*((*((*(_3941_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _4413_constant = static__1d8bd0d5a_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343b49_primStr, ._field_Model=jule::Any(_4413_constant, &__jule_any_type19), ._field_Constant=_4413_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab13907c__Type(jule::Ptr<_1ab137e9e_comptimeStructField> _self_, jule::Ptr<_1ab22be1c_Eval>* _5230_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _5245_fc) {
	if (((*((*(_5245_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_5230_e)).ptr(), (*((*((*(_5245_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab1594ed_buildComptimeTypeInfoData(&((*((*(_5230_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab139478__Public(jule::Ptr<_1ab137e9e_comptimeStructField> _self_, jule::Ptr<_1ab22be1c_Eval>* _6032_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _6047_fc) {
	if (((*((*(_6047_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_6032_e)).ptr(), (*((*((*(_6047_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _6513_constant = static__1d8bd0a91_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, ._field_Model=jule::Any(_6513_constant, &__jule_any_type19), ._field_Constant=_6513_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab1397b9_subIdent(jule::Ptr<_1ab137e9e_comptimeStructField> _self_, jule::Str* _7329_ident) {
	{
		auto &_match_expr{ (*(_7329_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1bbc2e007:;
			{
				jule::Ptr<_1ab120d00_FnIns> _7617_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _7733_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _7748_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab138b81__Name(_self_, _7733_e, _7748_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_7617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1bbc2e06d:;
			{
				jule::Ptr<_1ab120d00_FnIns> _8317_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _8433_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _8448_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab139478__Public(_self_, _8433_e, _8448_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_8317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bbc2e0d4:;
			{
				jule::Ptr<_1ab120d00_FnIns> _9017_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _9133_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _9148_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab13907c__Type(_self_, _9133_e, _9148_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_9017_method));;
			}
		}
		else {
			_case_begin_1bbc2de91:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbc2de19:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab137e9e_comptimeStructField _Src) {
	_Stream << _1ab138323_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab139ed4_Str(_1ab139b4e_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1ab13a325_Equal(jule::Ptr<_1ab139b4e_comptimeStructFields> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _10921_other) {
	return false;;
}



inline void _1ab140605_ready(_1ab139b4e_comptimeStructFields* _self_, jule::Ptr<_1ab1c7a66_Var>* _11329_keyA, jule::Ptr<_1ab1c7a66_Var>* _11346_keyB) {
	if (((*(_11329_keyA)) != nullptr)) {
		(*((*(_11329_keyA))))._field_Constant=true;
		(*((*(_11329_keyA))))._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>()});
		(*((*((*((*(_11329_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_11329_keyA))))._field_Kind=(*(_1ab346c90_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_11346_keyB)) != nullptr)) {
		(*((*(_11346_keyB))))._field_Constant=true;
		(*((*(_11346_keyB))))._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>()});
		(*((*(_11346_keyB))))._field_Kind=jule::new_ptr<_1ab262bde_TypeSymbol>(_1ab262bde_TypeSymbol{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab137e9e_comptimeStructField>(), 6)})});
	};
}



inline void _1ab140a23_step(_1ab139b4e_comptimeStructFields* _self_, jule::I64 _13523_i, jule::Ptr<_1ab1c7a66_Var>* _13536_keyA, jule::Ptr<_1ab1c7a66_Var>* _13553_keyB) {
	if (((*(_13536_keyA)) != nullptr)) {
		(*((*((*((*(_13536_keyA))))._field_Value))._field_Data))._field_Constant=static__1d8bd050d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_13523_i)));
		(*((*((*((*(_13536_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_13536_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_13553_keyB)) != nullptr)) {
		(*(_1ab260747_comptimeStructField((*((*((*(_13553_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_13523_i];
	};
}



inline jule::I64 _1ab140ca9_len(_1ab139b4e_comptimeStructFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab139b4e_comptimeStructFields _Src) {
	_Stream << _1ab139ed4_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab14143b_Str(_1ab1410b7_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1ab14177c_Equal(jule::Ptr<_1ab1410b7_comptimeStatic> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _15921_other) {
	return false;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab141c99__Name(jule::Ptr<_1ab1410b7_comptimeStatic> _self_, jule::Ptr<_1ab22be1c_Eval>* _16326_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _16341_fc) {
	if (((*((*(_16341_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_16326_e)).ptr(), (*((*((*(_16341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _16813_constant = static__1d8bd0d5a_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343b49_primStr, ._field_Model=jule::Any(_16813_constant, &__jule_any_type19), ._field_Constant=_16813_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab142195__Type(jule::Ptr<_1ab1410b7_comptimeStatic> _self_, jule::Ptr<_1ab22be1c_Eval>* _17630_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _17645_fc) {
	if (((*((*(_17645_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_17630_e)).ptr(), (*((*((*(_17645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab1594ed_buildComptimeTypeInfoData(&((*((*(_17630_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab142591__Public(jule::Ptr<_1ab1410b7_comptimeStatic> _self_, jule::Ptr<_1ab22be1c_Eval>* _18432_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _18447_fc) {
	if (((*((*(_18447_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_18432_e)).ptr(), (*((*((*(_18447_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _18913_constant = static__1d8bd0a91_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, ._field_Model=jule::Any(_18913_constant, &__jule_any_type19), ._field_Constant=_18913_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab1428d2_subIdent(jule::Ptr<_1ab1410b7_comptimeStatic> _self_, jule::Str* _19729_ident) {
	{
		auto &_match_expr{ (*(_19729_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1bbc4498a:;
			{
				jule::Ptr<_1ab120d00_FnIns> _20017_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _20133_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _20148_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab141c99__Name(_self_, _20133_e, _20148_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_20017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1bbc44a01:;
			{
				jule::Ptr<_1ab120d00_FnIns> _20717_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _20833_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _20848_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab142591__Public(_self_, _20833_e, _20848_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_20717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bbc44a67:;
			{
				jule::Ptr<_1ab120d00_FnIns> _21417_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _21533_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _21548_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab142195__Type(_self_, _21533_e, _21548_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_21417_method));;
			}
		}
		else {
			_case_begin_1bbc44924:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbc4489c:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1410b7_comptimeStatic _Src) {
	_Stream << _1ab14143b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab1430ec_Str(_1ab142c78_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1ab14343d_Equal(jule::Ptr<_1ab142c78_comptimeStatics> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _23321_other) {
	return false;;
}



inline void _1ab1438b1_ready(_1ab142c78_comptimeStatics* _self_, jule::Ptr<_1ab1c7a66_Var>* _23729_keyA, jule::Ptr<_1ab1c7a66_Var>* _23746_keyB) {
	if (((*(_23729_keyA)) != nullptr)) {
		(*((*(_23729_keyA))))._field_Constant=true;
		(*((*(_23729_keyA))))._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>()});
		(*((*((*((*(_23729_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_23729_keyA))))._field_Kind=(*(_1ab346c90_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_23746_keyB)) != nullptr)) {
		(*((*(_23746_keyB))))._field_Constant=true;
		(*((*(_23746_keyB))))._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>()});
		(*((*(_23746_keyB))))._field_Kind=jule::new_ptr<_1ab262bde_TypeSymbol>(_1ab262bde_TypeSymbol{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab1410b7_comptimeStatic>(), 8)})});
	};
}



inline void _1ab143cce_step(_1ab142c78_comptimeStatics* _self_, jule::I64 _25923_i, jule::Ptr<_1ab1c7a66_Var>* _25936_keyA, jule::Ptr<_1ab1c7a66_Var>* _25953_keyB) {
	if (((*(_25936_keyA)) != nullptr)) {
		(*((*((*((*(_25936_keyA))))._field_Value))._field_Data))._field_Constant=static__1d8bd050d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_25923_i)));
		(*((*((*((*(_25936_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_25936_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_25953_keyB)) != nullptr)) {
		(*(_1ab262051_comptimeStatic((*((*((*(_25953_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_25923_i];
	};
}



inline jule::I64 _1ab144065_len(_1ab142c78_comptimeStatics* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab142c78_comptimeStatics _Src) {
	_Stream << _1ab1430ec_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab1446e7_Str(_1ab144373_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1ab144a38_Equal(jule::Ptr<_1ab144373_comptimeEnumField> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _28321_other) {
	return false;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab145033__Name(jule::Ptr<_1ab144373_comptimeEnumField> _self_, jule::Ptr<_1ab22be1c_Eval>* _28726_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _28741_fc) {
	if (((*((*(_28741_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_28726_e)).ptr(), (*((*((*(_28741_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _29213_constant = static__1d8bd0d5a_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343b49_primStr, ._field_Model=jule::Any(_29213_constant, &__jule_any_type19), ._field_Constant=_29213_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab145374_subIdent(jule::Ptr<_1ab144373_comptimeEnumField> _self_, jule::Str* _30029_ident) {
	{
		auto &_match_expr{ (*(_30029_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1bbc5589c:;
			{
				jule::Ptr<_1ab120d00_FnIns> _30317_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _30433_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _30448_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab145033__Name(_self_, _30433_e, _30448_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_30317_method));;
			}
		}
		else {
			_case_begin_1bbc55836:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbc557ae:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab144373_comptimeEnumField _Src) {
	_Stream << _1ab1446e7_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab145b16_Str(_1ab145682_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1ab145e57_Equal(jule::Ptr<_1ab145682_comptimeEnumFields> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _32221_other) {
	return false;;
}



inline void _1ab146353_ready(_1ab145682_comptimeEnumFields* _self_, jule::Ptr<_1ab1c7a66_Var>* _32629_keyA, jule::Ptr<_1ab1c7a66_Var>* _32646_keyB) {
	if (((*(_32629_keyA)) != nullptr)) {
		(*((*(_32629_keyA))))._field_Constant=true;
		(*((*(_32629_keyA))))._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>()});
		(*((*((*((*(_32629_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_32629_keyA))))._field_Kind=(*(_1ab346c90_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_32646_keyB)) != nullptr)) {
		(*((*(_32646_keyB))))._field_Constant=true;
		(*((*(_32646_keyB))))._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>()});
		(*((*(_32646_keyB))))._field_Kind=jule::new_ptr<_1ab262bde_TypeSymbol>(_1ab262bde_TypeSymbol{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab144373_comptimeEnumField>(), 10)})});
	};
}



inline void _1ab146771_step(_1ab145682_comptimeEnumFields* _self_, jule::I64 _34823_i, jule::Ptr<_1ab1c7a66_Var>* _34836_keyA, jule::Ptr<_1ab1c7a66_Var>* _34853_keyB) {
	if (((*(_34836_keyA)) != nullptr)) {
		(*((*((*((*(_34836_keyA))))._field_Value))._field_Data))._field_Constant=static__1d8bd050d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_34823_i)));
		(*((*((*((*(_34836_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_34836_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_34853_keyB)) != nullptr)) {
		(*(_1ab260c64_comptimeEnumField((*((*((*(_34853_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_34823_i];
	};
}



inline jule::I64 _1ab146a07_len(_1ab145682_comptimeEnumFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab145682_comptimeEnumFields _Src) {
	_Stream << _1ab145b16_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab147189_Str(_1ab146d15_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1ab1474ca_Equal(jule::Ptr<_1ab146d15_comptimeParam> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _37221_other) {
	return false;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab147a08__Name(jule::Ptr<_1ab146d15_comptimeParam> _self_, jule::Ptr<_1ab22be1c_Eval>* _37626_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _37641_fc) {
	if (((*((*(_37641_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_37626_e)).ptr(), (*((*((*(_37641_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _38113_constant = static__1d8bd0d5a_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343b49_primStr, ._field_Model=jule::Any(_38113_constant, &__jule_any_type19), ._field_Constant=_38113_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab147e04__Type(jule::Ptr<_1ab146d15_comptimeParam> _self_, jule::Ptr<_1ab22be1c_Eval>* _38930_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _38945_fc) {
	if (((*((*(_38945_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_38930_e)).ptr(), (*((*((*(_38945_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab1594ed_buildComptimeTypeInfoData(&((*((*(_38930_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab148300__Variadic(jule::Ptr<_1ab146d15_comptimeParam> _self_, jule::Ptr<_1ab22be1c_Eval>* _39734_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _39749_fc) {
	if (((*((*(_39749_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_39734_e)).ptr(), (*((*((*(_39749_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _40213_constant = static__1d8bd0a91_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, ._field_Model=jule::Any(_40213_constant, &__jule_any_type19), ._field_Constant=_40213_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab1486eb__Reference(jule::Ptr<_1ab146d15_comptimeParam> _self_, jule::Ptr<_1ab22be1c_Eval>* _41035_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _41050_fc) {
	if (((*((*(_41050_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_41035_e)).ptr(), (*((*((*(_41050_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _41513_constant = static__1d8bd0a91_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, ._field_Model=jule::Any(_41513_constant, &__jule_any_type19), ._field_Constant=_41513_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab148a3c_subIdent(jule::Ptr<_1ab146d15_comptimeParam> _self_, jule::Str* _42329_ident) {
	{
		auto &_match_expr{ (*(_42329_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1bbc70004:;
			{
				jule::Ptr<_1ab120d00_FnIns> _42617_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _42733_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _42748_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab147a08__Name(_self_, _42733_e, _42748_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_42617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1bbc7006a:;
			{
				jule::Ptr<_1ab120d00_FnIns> _43317_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _43433_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _43448_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab148300__Variadic(_self_, _43433_e, _43448_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_43317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1bbc700e2:;
			{
				jule::Ptr<_1ab120d00_FnIns> _44017_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _44133_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _44148_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab1486eb__Reference(_self_, _44133_e, _44148_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_44017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bbc70169:;
			{
				jule::Ptr<_1ab120d00_FnIns> _44717_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _44833_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _44848_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab147e04__Type(_self_, _44833_e, _44848_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_44717_method));;
			}
		}
		else {
			_case_begin_1bbc6ee8d:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbc6ee16:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab146d15_comptimeParam _Src) {
	_Stream << _1ab147189_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab149400_Str(_1ab14907b_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1ab149741_Equal(jule::Ptr<_1ab14907b_comptimeParams> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _46621_other) {
	return false;;
}



inline void _1ab149bb4_ready(_1ab14907b_comptimeParams* _self_, jule::Ptr<_1ab1c7a66_Var>* _47029_keyA, jule::Ptr<_1ab1c7a66_Var>* _47046_keyB) {
	if (((*(_47029_keyA)) != nullptr)) {
		(*((*(_47029_keyA))))._field_Constant=true;
		(*((*(_47029_keyA))))._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>()});
		(*((*((*((*(_47029_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_47029_keyA))))._field_Kind=(*(_1ab346c90_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_47046_keyB)) != nullptr)) {
		(*((*(_47046_keyB))))._field_Constant=true;
		(*((*(_47046_keyB))))._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>()});
		(*((*(_47046_keyB))))._field_Kind=jule::new_ptr<_1ab262bde_TypeSymbol>(_1ab262bde_TypeSymbol{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab146d15_comptimeParam>(), 12)})});
	};
}



inline void _1ab14a0d2_step(_1ab14907b_comptimeParams* _self_, jule::I64 _49223_i, jule::Ptr<_1ab1c7a66_Var>* _49236_keyA, jule::Ptr<_1ab1c7a66_Var>* _49253_keyB) {
	if (((*(_49236_keyA)) != nullptr)) {
		(*((*((*((*(_49236_keyA))))._field_Value))._field_Data))._field_Constant=static__1d8bd050d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_49223_i)));
		(*((*((*((*(_49236_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_49236_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_49253_keyB)) != nullptr)) {
		(*(_1ab261281_comptimeParam((*((*((*(_49253_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_49223_i];
	};
}



inline jule::I64 _1ab14a368_len(_1ab14907b_comptimeParams* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_params.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab14907b_comptimeParams _Src) {
	_Stream << _1ab149400_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab14a9ea_Str(_1ab14a676_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1ab14ad3b_Equal(jule::Ptr<_1ab14a676_comptimeTypeInfos> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _51621_other) {
	return false;;
}



inline void _1ab14b2ae_ready(_1ab14a676_comptimeTypeInfos* _self_, jule::Ptr<_1ab1c7a66_Var>* _52029_keyA, jule::Ptr<_1ab1c7a66_Var>* _52046_keyB) {
	if (((*(_52029_keyA)) != nullptr)) {
		(*((*(_52029_keyA))))._field_Constant=true;
		(*((*(_52029_keyA))))._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>()});
		(*((*((*((*(_52029_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_52029_keyA))))._field_Kind=(*(_1ab346c90_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_52046_keyB)) != nullptr)) {
		(*((*(_52046_keyB))))._field_Constant=true;
		(*((*(_52046_keyB))))._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>()});
		(*((*(_52046_keyB))))._field_Kind=jule::new_ptr<_1ab262bde_TypeSymbol>(_1ab262bde_TypeSymbol{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab14bc71_comptimeTypeInfo>(), 15)})});
	};
}



inline void _1ab14b6cc_step(_1ab14a676_comptimeTypeInfos* _self_, jule::I64 _54223_i, jule::Ptr<_1ab1c7a66_Var>* _54236_keyA, jule::Ptr<_1ab1c7a66_Var>* _54253_keyB) {
	if (((*(_54236_keyA)) != nullptr)) {
		(*((*((*((*(_54236_keyA))))._field_Value))._field_Data))._field_Constant=static__1d8bd050d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_54223_i)));
		(*((*((*((*(_54236_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_54236_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_54253_keyB)) != nullptr)) {
		(*((*((*((*(_54253_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1ab25a566_Kind>((*(_self_))._field_types[_54223_i], 15);
	};
}



inline jule::I64 _1ab14b963_len(_1ab14a676_comptimeTypeInfos* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_types.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab14a676_comptimeTypeInfos _Src) {
	_Stream << _1ab14a9ea_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab14c0e5_Str(_1ab14bc71_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1ab25add5_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1ab14c436_Equal(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _56621_other) {
	return false;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab14ca85__Str(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _57025_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _57040_fc) {
	if (((*((*(_57040_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_57025_e)).ptr(), (*((*((*(_57040_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _57513_constant = static__1d8bd0d5a_NewStr(_1ab25add5_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343b49_primStr, ._field_Model=jule::Any(_57513_constant, &__jule_any_type19), ._field_Constant=_57513_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab14ce81__Kind(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _58330_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _58345_fc) {
	if (((*((*(_58345_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_58330_e)).ptr(), (*((*((*(_58345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab133890_Enum> _58813_enm = _1ab186948_FindEnum(_1ab159179_findComptimePackage(&((*((*(_58330_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1ab132d23_EnumItem> _58917_item = nullptr;;
	{
		
		if (_1ab25bd81_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1bbc8ce01:;
			{
				_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1ab25e6e1_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bbc8cd24:;
			{
				_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1ab25e977_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bbc8d055:;
			{
				_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1ab25d68a_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bbc8cb15:;
			{
				if (_1ab26b423_IsUnsafe(_1ab25d68a_Ptr((*(_self_))._field_base.ptr()).ptr())) {
					_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1ab25d404_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bbc8cb7b:;
			{
				_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("Ref", 3));
			}
		}
		else if ((_1ab25d921_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bbc8d6e8:;
			{
				_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1ab25ec0d_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bbc8d75e:;
			{
				_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1ab25e1c4_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bbc8d7c5:;
			{
				_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1ab25de3d_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bbc8d84c:;
			{
				_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1ab25e45a_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bbc8d8c4:;
			{
				_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1ab25ee94_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bbc8d94b:;
			{
				_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1ab25d16d_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bbc8d9c3:;
			{
				jule::Ptr<_1ab2635e6_Prim> _61813_prim = _1ab25d16d_Prim((*(_self_))._field_base.ptr());;
				{
					
					if (_1ab266d14_IsAny(_61813_prim.ptr())) {
						_case_begin_1bbc999ac:;
						{
							_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1ab2667e7_IsBool(_61813_prim.ptr())) {
						_case_begin_1bbc99759:;
						{
							_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1ab266a7d_IsStr(_61813_prim.ptr())) {
						_case_begin_1bbc9955b:;
						{
							_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1ab265a27_IsF32(_61813_prim.ptr())) {
						_case_begin_1bbc9a150:;
						{
							_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1ab265cad_IsF64(_61813_prim.ptr())) {
						_case_begin_1bbc9a1b6:;
						{
							_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1ab2644a4_IsI8(_61813_prim.ptr())) {
						_case_begin_1bbc9a22c:;
						{
							_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1ab26473a_IsI16(_61813_prim.ptr())) {
						_case_begin_1bbc9a293:;
						{
							_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1ab2649c1_IsI32(_61813_prim.ptr())) {
						_case_begin_1bbc9a309:;
						{
							_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1ab264c57_IsI64(_61813_prim.ptr())) {
						_case_begin_1bbc9a370:;
						{
							_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1ab264edd_IsU8(_61813_prim.ptr())) {
						_case_begin_1bbc9a3d6:;
						{
							_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1ab265274_IsU16(_61813_prim.ptr())) {
						_case_begin_1bbc9a44c:;
						{
							_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1ab26550a_IsU32(_61813_prim.ptr())) {
						_case_begin_1bbc9a4b3:;
						{
							_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1ab265791_IsU64(_61813_prim.ptr())) {
						_case_begin_1bbc9a529:;
						{
							_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1ab266044_IsInt(_61813_prim.ptr())) {
						_case_begin_1bbc9a590:;
						{
							_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1ab2662ca_IsUint(_61813_prim.ptr())) {
						_case_begin_1bbc9a606:;
						{
							_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1ab266561_IsUintptr(_61813_prim.ptr())) {
						_case_begin_1bbc9a66c:;
						{
							_58917_item=_1ab134484_FindItem(_58813_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1bbc993b3:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1ab25add5_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:653:17"));;
						}
					}
					_match_end_1bbc9935d:;
				};
			}
		}
		else {
			_case_begin_1bbc8c9b1:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1ab25add5_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:656:13"));;
			}
		}
		_match_end_1bbc8c63c:;
	};
	return _1ab2577a5_evalEnumStatic(&(_58813_enm), &(_58917_item));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab14d37c__Bits(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _66130_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _66145_fc) {
	if (((*((*(_66145_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_66130_e)).ptr(), (*((*((*(_66145_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab2635e6_Prim> _6669_prim = _1ab25d16d_Prim((*(_self_))._field_base.ptr());;
	if ((_6669_prim == nullptr)) {
		_1ab22c46c_pushErr((*(_66130_e)).ptr(), (*((*(_66145_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _6719_n = _1d8bc2005_BitsizeOf((*(_6669_prim))._field_Kind);;
	if ((_6719_n == -1LL)) {
		_1ab22c46c_pushErr((*(_66130_e)).ptr(), (*((*(_66145_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _67613_constant = static__1d8bd050d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_6719_n)));;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343b49_primStr, ._field_Model=jule::Any(_67613_constant, &__jule_any_type19), ._field_Constant=_67613_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab14d778__Elem(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _68430_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _68445_fc) {
	if (((*((*(_68445_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_68430_e)).ptr(), (*((*((*(_68445_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab26a8d9_Ptr> _68913_ptr = _1ab25d68a_Ptr((*(_self_))._field_base.ptr());;
	if ((_68913_ptr != nullptr)) {
		if (_1ab26b423_IsUnsafe(_68913_ptr.ptr())) {
			_1ab22c46c_pushErr((*(_68430_e)).ptr(), (*((*(_68445_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _1ab1594ed_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_68913_ptr))._field_Elem));;
	};
	jule::Ptr<_1ab267122_Sptr> _69713_sptr = _1ab25d404_Sptr((*(_self_))._field_base.ptr());;
	if ((_69713_sptr != nullptr)) {
		return _1ab1594ed_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_69713_sptr))._field_Elem));;
	};
	jule::Ptr<_1ab267ae5_Slc> _70113_slice = _1ab25e1c4_Slc((*(_self_))._field_base.ptr());;
	if ((_70113_slice != nullptr)) {
		return _1ab1594ed_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_70113_slice))._field_Elem));;
	};
	jule::Ptr<_1ab269e16_Arr> _70513_array = _1ab25de3d_Arr((*(_self_))._field_base.ptr());;
	if ((_70513_array != nullptr)) {
		return _1ab1594ed_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_70513_array))._field_Elem));;
	};
	jule::Ptr<_1ab133890_Enum> _70913_enm = _1ab25d921_Enum((*(_self_))._field_base.ptr());;
	if ((_70913_enm != nullptr)) {
		return _1ab1594ed_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*((*(_70913_enm))._field_Kind))._field_Kind));;
	};
	_1ab22c46c_pushErr((*(_68430_e)).ptr(), (*((*(_68445_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab14db74__Size(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _71730_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _71745_fc) {
	if (((*((*(_71745_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_71730_e)).ptr(), (*((*((*(_71745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab269e16_Arr> _72213_arr = _1ab25de3d_Arr((*(_self_))._field_base.ptr());;
	if ((_72213_arr == nullptr)) {
		_1ab22c46c_pushErr((*(_71730_e)).ptr(), (*((*(_71745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _72713_constant = static__1d8bd050d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_72213_arr))._field_N)));;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab344870_primInt, ._field_Model=jule::Any(_72713_constant, &__jule_any_type19), ._field_Constant=_72713_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab14e070__Key(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _73529_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _73544_fc) {
	if (((*((*(_73544_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_73529_e)).ptr(), (*((*((*(_73544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab269289_Map> _74013_m = _1ab25ec0d_Map((*(_self_))._field_base.ptr());;
	if ((_74013_m == nullptr)) {
		_1ab22c46c_pushErr((*(_73529_e)).ptr(), (*((*(_73544_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab1594ed_buildComptimeTypeInfoData(&((*((*(_73529_e))))._field_s), &((*(_74013_m))._field_Key));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab14e46b__Value(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _74831_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _74846_fc) {
	if (((*((*(_74846_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_74831_e)).ptr(), (*((*((*(_74846_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab269289_Map> _75313_m = _1ab25ec0d_Map((*(_self_))._field_base.ptr());;
	if ((_75313_m == nullptr)) {
		_1ab22c46c_pushErr((*(_74831_e)).ptr(), (*((*(_74846_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab1594ed_buildComptimeTypeInfoData(&((*((*(_74831_e))))._field_s), &((*(_75313_m))._field_Val));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab14e867__Fields(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _76132_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _76147_fc) {
	if (((*((*(_76147_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_76132_e)).ptr(), (*((*((*(_76147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab10acb8_StructIns> _76613_s = _1ab25e6e1_Struct((*(_self_))._field_base.ptr());;
	if ((_76613_s != nullptr)) {
		return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab139b4e_comptimeStructFields>(_1ab139b4e_comptimeStructFields{._field_fields=(*(_76613_s))._field_Fields}), 7)}), });;
	};
	jule::Ptr<_1ab133890_Enum> _77613_enm = _1ab25d921_Enum((*(_self_))._field_base.ptr());;
	if ((_77613_enm != nullptr)) {
		return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab145682_comptimeEnumFields>(_1ab145682_comptimeEnumFields{._field_fields=(*(_77613_enm))._field_Items}), 11)}), });;
	};
	_1ab22c46c_pushErr((*(_76132_e)).ptr(), (*((*(_76147_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab14ec63__Statics(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _79033_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _79048_fc) {
	if (((*((*(_79048_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_79033_e)).ptr(), (*((*((*(_79048_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab10acb8_StructIns> _79513_s = _1ab25e6e1_Struct((*(_self_))._field_base.ptr());;
	if ((_79513_s == nullptr)) {
		_1ab22c46c_pushErr((*(_79033_e)).ptr(), (*((*(_79048_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab142c78_comptimeStatics>(_1ab142c78_comptimeStatics{._field_fields=(*(_79513_s))._field_Statics}), 9)}), });;
}



inline jule::Ptr<_1ab22a228_Data> _1ab15015e__Public(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _80932_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _80947_fc) {
	if (((*((*(_80947_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_80932_e)).ptr(), (*((*((*(_80947_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _81413_public = false;;
	{
		
		if ((_1ab25e6e1_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bbccb2a2:;
			{
				_81413_public=(*((*(_1ab25e6e1_Struct((*(_self_))._field_base.ptr())))._field_Decl))._field_Public;
			}
		}
		else if ((_1ab25e977_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bbcca27e:;
			{
				_81413_public=(*(_1ab25e977_Trait((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_1ab25d921_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bbcca2e5:;
			{
				_81413_public=(*(_1ab25d921_Enum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_1ab25dba7_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bbcca35b:;
			{
				_81413_public=(*(_1ab25dba7_TypeEnum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else {
			_case_begin_1bbcc9e1b:;
			{
				_1ab22c46c_pushErr((*(_80932_e)).ptr(), (*((*(_80947_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bbcc9cea:;
	};
	jule::Ptr<_1d8bd00bd_Const> _82813_constant = static__1d8bd0a91_NewBool(_81413_public);;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, ._field_Model=jule::Any(_82813_constant, &__jule_any_type19), ._field_Constant=_82813_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab15055a__Binded(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _83632_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _83647_fc) {
	if (((*((*(_83647_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_83632_e)).ptr(), (*((*((*(_83647_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _84113_constant = static__1d8bd0a91_NewBool(_1ab25b864_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, ._field_Model=jule::Any(_84113_constant, &__jule_any_type19), ._field_Constant=_84113_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab150956__Ordered(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _84929_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _84944_fc) {
	if (((*((*(_84944_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_84929_e)).ptr(), (*((*((*(_84944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _85413_constant = static__1d8bd0a91_NewBool(_1ab25c634_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343b49_primStr, ._field_Model=jule::Any(_85413_constant, &__jule_any_type19), ._field_Constant=_85413_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab150d52__Comparable(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _86232_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _86247_fc) {
	if (((*((*(_86247_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_86232_e)).ptr(), (*((*((*(_86247_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _86713_constant = static__1d8bd0a91_NewBool(_1ab25c117_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343b49_primStr, ._field_Model=jule::Any(_86713_constant, &__jule_any_type19), ._field_Constant=_86713_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab15124d__Mutable(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _87529_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _87544_fc) {
	if (((*((*(_87544_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_87529_e)).ptr(), (*((*((*(_87544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _88013_constant = static__1d8bd0a91_NewBool(_1ab25c39d_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, ._field_Model=jule::Any(_88013_constant, &__jule_any_type19), ._field_Constant=_88013_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab151649__Types(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _88831_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _88846_fc) {
	if (((*((*(_88846_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_88831_e)).ptr(), (*((*((*(_88846_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab2686d9_Tuple> _89313_tup = _1ab25ee94_Tup((*(_self_))._field_base.ptr());;
	if ((_89313_tup == nullptr)) {
		_1ab22c46c_pushErr((*(_88831_e)).ptr(), (*((*(_88846_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab14a676_comptimeTypeInfos> _89813_infos = jule::new_ptr<_1ab14a676_comptimeTypeInfos>(_1ab14a676_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1ab14bc71_comptimeTypeInfo>>::alloc(0LL, (*(_89313_tup))._field_Types.len())});;
	{
		auto expr = &((*(_89313_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbcde507:;
		if (it != expr_end) {
			jule::Ptr<_1ab25aa1c_TypeKind> _90121_t = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab14bc71_comptimeTypeInfo>> &__jule_push_dest = (*(_89813_infos))._field_types; __jule_push_dest.push(_1ab1a4eb6_pushComptimeTypeInfo((*((*((*(_88831_e))))._field_s))._field_meta.ptr(), &(_90121_t))); };
			}
			_iter_next_1bbcde507:;
			++it;
			goto _iter_begin_1bbcde507;
		}
		_iter_end_1bbcde507:;
	};
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_89813_infos, 14)}), });;
}



inline jule::Ptr<_1ab22a228_Data> _1ab151a45__Exceptional(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _91137_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _91152_fc) {
	if (((*((*(_91152_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_91137_e)).ptr(), (*((*((*(_91152_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab120d00_FnIns> _91613_f = _1ab25e45a_Fn((*(_self_))._field_base.ptr());;
	if ((_91613_f == nullptr)) {
		_1ab22c46c_pushErr((*(_91137_e)).ptr(), (*((*(_91152_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _92113_constant = static__1d8bd0a91_NewBool((((*(_91613_f))._field_Decl != nullptr) && (*((*(_91613_f))._field_Decl))._field_Exceptional));;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, ._field_Model=jule::Any(_92113_constant, &__jule_any_type19), ._field_Constant=_92113_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab151e41__CanNil(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _92932_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _92947_fc) {
	if (((*((*(_92947_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_92932_e)).ptr(), (*((*((*(_92947_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _93413_constant = static__1d8bd0a91_NewBool(_1ab25c8ba_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, ._field_Model=jule::Any(_93413_constant, &__jule_any_type19), ._field_Constant=_93413_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab15233c__RC(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _94228_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _94243_fc) {
	if (((*((*(_94243_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_94228_e)).ptr(), (*((*((*(_94243_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _94713_constant = static__1d8bd0a91_NewBool(_1ab25cb51_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, ._field_Model=jule::Any(_94713_constant, &__jule_any_type19), ._field_Constant=_94713_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab152738__Result(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _95532_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _95547_fc) {
	if (((*((*(_95547_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_95532_e)).ptr(), (*((*((*(_95547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab120d00_FnIns> _96013_f = _1ab25e45a_Fn((*(_self_))._field_base.ptr());;
	if ((_96013_f == nullptr)) {
		_1ab22c46c_pushErr((*(_95532_e)).ptr(), (*((*(_95547_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_96013_f))._field_Result == nullptr)) {
		return _1ab1594ed_buildComptimeTypeInfoData(&((*((*(_95532_e))))._field_s), &(_1ab343572_primVoid));;
	};
	return _1ab1594ed_buildComptimeTypeInfoData(&((*((*(_95532_e))))._field_s), &((*(_96013_f))._field_Result));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab152b34__Params(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Ptr<_1ab22be1c_Eval>* _97132_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _97147_fc) {
	if (((*((*(_97147_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_97132_e)).ptr(), (*((*((*(_97147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab120d00_FnIns> _97613_f = _1ab25e45a_Fn((*(_self_))._field_base.ptr());;
	if ((_97613_f == nullptr)) {
		_1ab22c46c_pushErr((*(_97132_e)).ptr(), (*((*(_97147_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab14907b_comptimeParams>(_1ab14907b_comptimeParams{._field_params=(*(_97613_f))._field_Params}), 13)}), });;
}



inline jule::Ptr<_1ab22a228_Data> _1ab152e75_subIdent(jule::Ptr<_1ab14bc71_comptimeTypeInfo> _self_, jule::Str* _98829_ident) {
	{
		auto &_match_expr{ (*(_98829_ident)) };
		
		if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1bbd03340:;
			{
				jule::Ptr<_1ab120d00_FnIns> _99117_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _99233_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _99248_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab14ca85__Str(_self_, _99233_e, _99248_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_99117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1bbd038c3:;
			{
				jule::Ptr<_1ab120d00_FnIns> _99817_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _99933_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _99948_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab14d37c__Bits(_self_, _99933_e, _99948_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_99817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1bbd03939:;
			{
				jule::Ptr<_1ab120d00_FnIns> _100517_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _100633_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _100648_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab14d778__Elem(_self_, _100633_e, _100648_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_100517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1bbd039a0:;
			{
				jule::Ptr<_1ab120d00_FnIns> _101217_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _101333_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _101348_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab14db74__Size(_self_, _101333_e, _101348_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_101217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1bbd03a16:;
			{
				jule::Ptr<_1ab120d00_FnIns> _101917_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _102033_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _102048_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab14e070__Key(_self_, _102033_e, _102048_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_101917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1bbd03b26:;
			{
				jule::Ptr<_1ab120d00_FnIns> _102617_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _102733_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _102748_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab14e46b__Value(_self_, _102733_e, _102748_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_102617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1bbd03b8c:;
			{
				jule::Ptr<_1ab120d00_FnIns> _103317_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _103433_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _103448_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab14e867__Fields(_self_, _103433_e, _103448_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_103317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1bbd03c03:;
			{
				jule::Ptr<_1ab120d00_FnIns> _104017_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _104133_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _104148_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab14ec63__Statics(_self_, _104133_e, _104148_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_104017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1bbd03c69:;
			{
				jule::Ptr<_1ab120d00_FnIns> _104717_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _104833_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _104848_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab152b34__Params(_self_, _104833_e, _104848_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_104717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1bbd03cd0:;
			{
				jule::Ptr<_1ab120d00_FnIns> _105417_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _105533_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _105548_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab151649__Types(_self_, _105533_e, _105548_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_105417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1bbd03d46:;
			{
				jule::Ptr<_1ab120d00_FnIns> _106117_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _106233_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _106248_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab15015e__Public(_self_, _106233_e, _106248_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_106117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1bbd03dac:;
			{
				jule::Ptr<_1ab120d00_FnIns> _106817_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _106933_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _106948_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab15055a__Binded(_self_, _106933_e, _106948_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_106817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1bbd03e34:;
			{
				jule::Ptr<_1ab120d00_FnIns> _107517_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _107633_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _107648_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab150956__Ordered(_self_, _107633_e, _107648_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_107517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1bbd03eab:;
			{
				jule::Ptr<_1ab120d00_FnIns> _108217_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _108333_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _108348_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab150d52__Comparable(_self_, _108333_e, _108348_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_108217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1bbd04033:;
			{
				jule::Ptr<_1ab120d00_FnIns> _108917_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _109033_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _109048_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab15124d__Mutable(_self_, _109033_e, _109048_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_108917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1bbd040aa:;
			{
				jule::Ptr<_1ab120d00_FnIns> _109617_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _109733_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _109748_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab151a45__Exceptional(_self_, _109733_e, _109748_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_109617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1bbd04132:;
			{
				jule::Ptr<_1ab120d00_FnIns> _110317_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _110433_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _110448_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab151e41__CanNil(_self_, _110433_e, _110448_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_110317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("RC", 2)) {
			_case_begin_1bbd041a9:;
			{
				jule::Ptr<_1ab120d00_FnIns> _111017_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _111133_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _111148_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab15233c__RC(_self_, _111133_e, _111148_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_111017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1bbd04231:;
			{
				jule::Ptr<_1ab120d00_FnIns> _111717_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _111833_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _111848_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab152738__Result(_self_, _111833_e, _111848_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_111717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1bbd042a8:;
			{
				jule::Ptr<_1ab120d00_FnIns> _112417_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _112533_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _112548_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab14ce81__Kind(_self_, _112533_e, _112548_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_112417_method));;
			}
		}
		else {
			_case_begin_1bbd034a5:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbd03186:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab14bc71_comptimeTypeInfo _Src) {
	_Stream << _1ab14c0e5_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab153607_Str(_1ab153283_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1ab153948_Equal(jule::Ptr<_1ab153283_comptimeValue> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _114321_other) {
	return false;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab153e98__Unwrap(jule::Ptr<_1ab153283_comptimeValue> _self_, jule::Ptr<_1ab22be1c_Eval>* _114732_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _114747_fc) {
	if (((*((*(_114747_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_114732_e)).ptr(), (*((*((*(_114747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab154394__Type(jule::Ptr<_1ab153283_comptimeValue> _self_, jule::Ptr<_1ab22be1c_Eval>* _115530_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _115545_fc) {
	if (((*((*(_115545_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_115530_e)).ptr(), (*((*((*(_115545_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab1594ed_buildComptimeTypeInfoData(&((*((*(_115530_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab154790__Lvalue(jule::Ptr<_1ab153283_comptimeValue> _self_, jule::Ptr<_1ab22be1c_Eval>* _116332_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _116347_fc) {
	if (((*((*(_116347_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_116332_e)).ptr(), (*((*((*(_116347_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _116813_constant = static__1d8bd0a91_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, ._field_Model=jule::Any(_116813_constant, &__jule_any_type19), ._field_Constant=_116813_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab154b8b__Mutable(jule::Ptr<_1ab153283_comptimeValue> _self_, jule::Ptr<_1ab22be1c_Eval>* _117633_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _117648_fc) {
	if (((*((*(_117648_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_117633_e)).ptr(), (*((*((*(_117648_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _118113_constant = static__1d8bd0a91_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, ._field_Model=jule::Any(_118113_constant, &__jule_any_type19), ._field_Constant=_118113_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab155087__Const(jule::Ptr<_1ab153283_comptimeValue> _self_, jule::Ptr<_1ab22be1c_Eval>* _118931_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _118946_fc) {
	if (((*((*(_118946_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_118931_e)).ptr(), (*((*((*(_118946_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _119413_constant = static__1d8bd0a91_NewBool(_1ab22aaec_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, ._field_Model=jule::Any(_119413_constant, &__jule_any_type19), ._field_Constant=_119413_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab155483__Field(jule::Ptr<_1ab153283_comptimeValue> _self_, jule::Ptr<_1ab22be1c_Eval>* _120231_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _120246_fc) {
	if (((*((*(_120246_fc))))._field_Args.len() > 1LL)) {
		_1ab22c46c_pushErr((*(_120231_e)).ptr(), (*((*((*(_120246_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab10acb8_StructIns> _120713_s = _1ab25e6e1_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_120713_s == nullptr)) {
		_1ab22c46c_pushErr((*(_120231_e)).ptr(), (*((*(_120246_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_self_))._field_data))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab0db77c_Expr> _121213_arg = (*((*(_120246_fc))))._field_Args[0LL];;
	jule::Ptr<_1ab22a228_Data> _121313_d = _1ab24a17c_evalExpr((*(_120231_e)), _121213_arg);;
	if ((_121313_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab22aaec_IsConst(_121313_d.ptr())))) {
		_1ab22c46c_pushErr((*(_120231_e)).ptr(), (*(_121213_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab2635e6_Prim> _12219_prim = _1ab25d16d_Prim((*(_121313_d))._field_Kind.ptr());;
	if (((_12219_prim == nullptr) || (!(_1ab266a7d_IsStr(_12219_prim.ptr()))))) {
		_1ab22c46c_pushErr((*(_120231_e)).ptr(), (*(_121213_arg))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ab25add5_Str((*(_121313_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _12269_ident = _1d8bd2246_ReadStr((*(_121313_d))._field_Constant.ptr());;
	jule::Ptr<_1ab10a218_FieldIns> _122713_f = _1ab10c171_FindField(_120713_s.ptr(), _12269_ident);;
	if ((_122713_f == nullptr)) {
		_1ab22c46c_pushErr((*(_120231_e)).ptr(), (*(_121213_arg))._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_120713_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_12269_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_121313_d=jule::new_ptr<_1ab22a228_Data>((*((*(_self_))._field_data)));
	_121313_d=_1ab243483_evalStructSubIdentField((*(_120231_e)).ptr(), &(_121313_d), &(_120713_s), &((*(_121213_arg))._field_Token), &(_122713_f));
	return _1ab15972e_buildComptimeValue(&(_121313_d));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab1557c4_subIdent(jule::Ptr<_1ab153283_comptimeValue> _self_, jule::Str* _123729_ident) {
	{
		auto &_match_expr{ (*(_123729_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1bbd42db8:;
			{
				jule::Ptr<_1ab120d00_FnIns> _124017_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _124133_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _124148_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab153e98__Unwrap(_self_, _124133_e, _124148_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_124017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bbd42e40:;
			{
				jule::Ptr<_1ab120d00_FnIns> _124717_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _124833_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _124848_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab154394__Type(_self_, _124833_e, _124848_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_124717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1bbd42eb7:;
			{
				jule::Ptr<_1ab120d00_FnIns> _125417_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _125533_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _125548_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab154790__Lvalue(_self_, _125533_e, _125548_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_125417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1bbd4303e:;
			{
				jule::Ptr<_1ab120d00_FnIns> _126117_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _126233_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _126248_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab154b8b__Mutable(_self_, _126233_e, _126248_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_126117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1bbd43292:;
			{
				jule::Ptr<_1ab120d00_FnIns> _126817_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _126933_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _126948_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab155087__Const(_self_, _126933_e, _126948_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_126817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1bbd43319:;
			{
				jule::Ptr<_1ab120d00_FnIns> _127517_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _127633_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _127648_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab155483__Field(_self_, _127633_e, _127648_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_127517_method));;
			}
		}
		else {
			_case_begin_1bbd42d41:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbd42cb9:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab153283_comptimeValue _Src) {
	_Stream << _1ab153607_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab155e56_Str(_1ab155ad2_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1ab156297_Equal(jule::Ptr<_1ab155ad2_comptimeFiles> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _129421_other) {
	return false;;
}



inline void _1ab15671a_ready(_1ab155ad2_comptimeFiles* _self_, jule::Ptr<_1ab1c7a66_Var>* _129829_keyA, jule::Ptr<_1ab1c7a66_Var>* _129846_keyB) {
	if (((*(_129829_keyA)) != nullptr)) {
		(*((*(_129829_keyA))))._field_Constant=true;
		(*((*(_129829_keyA))))._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>()});
		(*((*((*((*(_129829_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_129829_keyA))))._field_Kind=(*(_1ab346c90_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_129846_keyB)) != nullptr)) {
		(*((*(_129846_keyB))))._field_Constant=true;
		(*((*(_129846_keyB))))._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>()});
		(*((*(_129846_keyB))))._field_Kind=jule::new_ptr<_1ab262bde_TypeSymbol>(_1ab262bde_TypeSymbol{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab1571cc_comptimeFile>(), 18)})});
	};
}



inline void _1ab156b38_step(_1ab155ad2_comptimeFiles* _self_, jule::I64 _132023_i, jule::Ptr<_1ab1c7a66_Var>* _132036_keyA, jule::Ptr<_1ab1c7a66_Var>* _132053_keyB) {
	if (((*(_132036_keyA)) != nullptr)) {
		(*((*((*((*(_132036_keyA))))._field_Value))._field_Data))._field_Constant=static__1d8bd050d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_132023_i)));
		(*((*((*((*(_132036_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_132036_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_132053_keyB)) != nullptr)) {
		(*((*((*((*((*(_132053_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1ab1571cc_comptimeFile>(18)))._field_file=(*(_self_))._field_files[_132023_i];
	};
}



inline jule::I64 _1ab156dbe_len(_1ab155ad2_comptimeFiles* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_files.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab155ad2_comptimeFiles _Src) {
	_Stream << _1ab155e56_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab157551_Str(_1ab1571cc_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1ab157892_Equal(jule::Ptr<_1ab1571cc_comptimeFile> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _134421_other) {
	return false;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab157dae__Path(jule::Ptr<_1ab1571cc_comptimeFile> _self_, jule::Ptr<_1ab22be1c_Eval>* _134830_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _134845_fc) {
	if (((*((*(_134845_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_134830_e)).ptr(), (*((*((*(_134845_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _135313_constant = static__1d8bd0d5a_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343b49_primStr, ._field_Model=jule::Any(_135313_constant, &__jule_any_type19), ._field_Constant=_135313_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab1582aa__Name(jule::Ptr<_1ab1571cc_comptimeFile> _self_, jule::Ptr<_1ab22be1c_Eval>* _136130_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _136145_fc) {
	if (((*((*(_136145_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_136130_e)).ptr(), (*((*((*(_136145_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _136613_constant = static__1d8bd0d5a_NewStr(_1ab0c814d_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343b49_primStr, ._field_Model=jule::Any(_136613_constant, &__jule_any_type19), ._field_Constant=_136613_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab1586a6__Dir(jule::Ptr<_1ab1571cc_comptimeFile> _self_, jule::Ptr<_1ab22be1c_Eval>* _137429_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _137444_fc) {
	if (((*((*(_137444_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_137429_e)).ptr(), (*((*((*(_137444_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d8bd00bd_Const> _137913_constant = static__1d8bd0d5a_NewStr(_1ab0c7db7_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343b49_primStr, ._field_Model=jule::Any(_137913_constant, &__jule_any_type19), ._field_Constant=_137913_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab1589e7_subIdent(jule::Ptr<_1ab1571cc_comptimeFile> _self_, jule::Str* _138729_ident) {
	{
		auto &_match_expr{ (*(_138729_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1bbd5edc4:;
			{
				jule::Ptr<_1ab120d00_FnIns> _139017_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _139133_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _139148_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab157dae__Path(_self_, _139133_e, _139148_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_139017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1bbd5ee3a:;
			{
				jule::Ptr<_1ab120d00_FnIns> _139717_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _139833_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _139848_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab1582aa__Name(_self_, _139833_e, _139848_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_139717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1bbd5eea1:;
			{
				jule::Ptr<_1ab120d00_FnIns> _140417_method = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>([=](jule::Ptr<_1ab22be1c_Eval>* _140533_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _140548_fc, jule::Ptr<_1ab22a228_Data>* ) mutable -> jule::Ptr<_1ab22a228_Data> {
					return _1ab1586a6__Dir(_self_, _140533_e, _140548_fc);;
				}), });;
				return _1ab158d6b_buildAsComptimeMethodData(&(_140417_method));;
			}
		}
		else {
			_case_begin_1bbd5ed5d:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbd5ecd6:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1571cc_comptimeFile _Src) {
	_Stream << _1ab157551_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1ab1a567b_Sema>*,jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>>*)> _1ab15b742_readyFn(jule::Ptr<_1ab15b346_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1ab1a567b_Sema>*,jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>>*)>([=](jule::Ptr<_1ab1a567b_Sema>* _6321_sema, jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &((*(_self_))._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bbd6db08:;
			if (it != expr_end) {
				jule::I64 _6418_i = it - expr->begin();
				jule::Ptr<_1ab0e4653_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1ab259136_InsGeneric> _6521_generic = (*(_self_))._field_generics[_6418_i];;
					if ((((*(_6425_g))._field_Constraint == nullptr) || ((*((*(_6425_g))._field_Constraint))._field_Mask.len() == 0LL))) {
						goto _iter_next_1bbd6db08;
					};
					(*(_6521_generic))._field_Constraint=jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>>::alloc(0LL, (*((*(_6425_g))._field_Constraint))._field_Mask.len());
					{
						auto expr = &((*((*(_6425_g))._field_Constraint))._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bbd6ecd5:;
						if (it != expr_end) {
							jule::Ptr<_1ab0d7448_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7121_n = (*((*(_6321_sema))))._field_errors.len();;
								jule::Ptr<_1ab25aa1c_TypeKind> _7225_kind = _1ab1ad244_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_1ab27a553_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7225_kind == nullptr)) {
									{
										auto &_match_expr{ (*(_7029_mask))._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1bbd7348c:;
											{
												jule::Ptr<_1ab0d7a53_IdentTypeDecl> _7633_itd = (*(_7029_mask))._field_Kind.cast_ptr<_1ab0d7a53_IdentTypeDecl>(&__jule_any_type20);;
												if ((((*(_7633_itd))._field_Generics.len() == 0LL) && _1ab15ca0c_isBuiltinConstraint(&((*(_7633_itd))._field_Ident)))) {
													_7225_kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab27793a_buildPrimType((*(_7633_itd))._field_Ident), 20)});
													(*((*(_6321_sema))))._field_errors=(*((*(_6321_sema))))._field_errors.slice(0LL, _7121_n);
													goto _julec_label_1bbd744e3;
												};
											}
										}
										_match_end_1bbd73437:;
									};
									return false;;
								};
								_julec_label_1bbd744e3:;
								{ jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>> &__jule_push_dest = (*(_6521_generic))._field_Constraint; __jule_push_dest.push(_7225_kind); };
							}
							_iter_next_1bbd6ecd5:;
							++it;
							goto _iter_begin_1bbd6ecd5;
						}
						_iter_end_1bbd6ecd5:;
					};
				}
				_iter_next_1bbd6db08:;
				++it;
				_6418_i++;
				goto _iter_begin_1bbd6db08;
			}
			_iter_end_1bbd6db08:;
		};
		return true;;
	});;
}



inline jule::Bool _1ab15b9c8_readyFi(jule::Ptr<_1ab15b346_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_fi))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_fi))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _1ab1b2cc6_fnEnvironment((*(_self_))._field_s, &((*(_self_))._field_fi), _1ab15b742_readyFn(_self_)));;
}



inline jule::Bool _1ab15bc5e_readySi(jule::Ptr<_1ab15b346_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_si))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_si))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _1ab15b742_readyFn(_self_)(&((*(_self_))._field_s), &((*(_self_))._field_genericsA)));;
}



inline jule::Bool _1ab15bee5_ready(jule::Ptr<_1ab15b346_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1ab15b9c8_readyFi(_self_);;
	};
	return _1ab15bc5e_readySi(_self_);;
}



inline jule::Bool _1ab15c27b_check(jule::Ptr<_1ab15b346_constraintChecker> _self_) {
	if ((!(_1ab15bee5_ready(_self_)))) {
		return false;;
	};
	_julec_label_1bbd7bc8c:;
	{
		auto expr = &((*(_self_))._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd7c441:;
		if (it != expr_end) {
			jule::I64 _11914_i = it - expr->begin();
			jule::Ptr<_1ab259136_InsGeneric> _11921_g = *it;
			{
				if (((*(_11921_g))._field_Constraint == nullptr)) {
					goto _iter_next_1bbd7c441;
				};
				{
					auto expr = &((*(_11921_g))._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbd7d530:;
					if (it != expr_end) {
						jule::Ptr<_1ab25aa1c_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1ab2635e6_Prim> _12421_prim = _1ab25d16d_Prim(_12325_c2.ptr());;
							if (((_12421_prim != nullptr) && _1ab26421d_IsConstraint(_12421_prim.ptr()))) {
								if (_1ab15c6ee_matchConstraint(&((*(_12421_prim))._field_Kind), &((*(_11921_g))._field_Kind))) {
									goto _iter_next_1bbd7c441;
								};
								goto _iter_next_1bbd7d530;
							};
							if (_1ab25b226_Equal(_12325_c2, (*(_11921_g))._field_Kind)) {
								goto _iter_next_1bbd7c441;
							};
						}
						_iter_next_1bbd7d530:;
						++it;
						goto _iter_begin_1bbd7d530;
					}
					_iter_end_1bbd7d530:;
				};
				_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_et, jule::Str::lit("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_11921_g))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*(_self_))._field_genericsD[_11914_i]))._field_Ident, &__jule_any_type4)}));
				return false;;
			}
			_iter_next_1bbd7c441:;
			++it;
			_11914_i++;
			goto _iter_begin_1bbd7c441;
		}
		_iter_end_1bbd7c441:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab15b346_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab15d744_IsTraitImpl(_1ab15d37b_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1ab15d9ca_IsStructImpl(_1ab15d37b_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab15d37b_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1637b0_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab163bcd_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab163eca_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1643e8_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1646e5_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab164b9b_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1655e7_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab16597c_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab165d56_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab166153_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab16652c_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab166906_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab166dac_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab167286_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1678e6_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab16852e_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab168b28_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab168ead_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab16961d_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab169ba1_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab16b059_SelectPackage(_1ab16aab4_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)> _45832_selector) {
	return _1ab1a5b21_SelectPackage((*(_self_))._field_s.ptr(), _45832_selector);;
}



inline jule::Ptr<_1ab1c7a66_Var> _1ab16b455_FindVar(_1ab16aab4_scopeChecker* _self_, jule::Str _46926_ident, jule::Bool _46938_binded) {
	;
	jule::Ptr<_1ab1c7a66_Var> _47213_v = _1ab227566_findVar((*(_self_))._field_table.ptr(), &(_46926_ident), _46938_binded, true);;
	if ((_47213_v != nullptr)) {
		return _47213_v;;
	};
	jule::Ptr<_1ab16aab4_scopeChecker> _47713_parent = (*(_self_))._field_parent;;
	while ((_47713_parent != nullptr)) {
		{
			_47213_v=_1ab227566_findVar((*(_47713_parent))._field_table.ptr(), &(_46926_ident), _46938_binded, true);
			if ((_47213_v != nullptr)) {
				return _47213_v;;
			};
			_47713_parent=(*(_47713_parent))._field_parent;
		}
	_iter_next_1bbdad2a7:;
	}
	_iter_end_1bbdad2a7:;;
	return _1ab1a601c_FindVar((*(_self_))._field_s.ptr(), _46926_ident, _46938_binded);;
}



inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab16b851_FindTypeAlias(_1ab16aab4_scopeChecker* _self_, jule::Str _49632_ident, jule::Bool _49644_binded) {
	;
	jule::Ptr<_1ab259c2a_TypeAlias> _49913_ta = _1ab227a1c_findTypeAlias((*(_self_))._field_table.ptr(), &(_49632_ident), _49644_binded, true);;
	if ((_49913_ta != nullptr)) {
		return _49913_ta;;
	};
	jule::Ptr<_1ab16aab4_scopeChecker> _50413_parent = (*(_self_))._field_parent;;
	while ((_50413_parent != nullptr)) {
		{
			_49913_ta=_1ab227a1c_findTypeAlias((*(_50413_parent))._field_table.ptr(), &(_49632_ident), _49644_binded, true);
			if ((_49913_ta != nullptr)) {
				return _49913_ta;;
			};
			_50413_parent=(*(_50413_parent))._field_parent;
		}
	_iter_next_1bbdb0ebe:;
	}
	_iter_end_1bbdb0ebe:;;
	return _1ab1a6418_FindTypeAlias((*(_self_))._field_s.ptr(), _49632_ident, _49644_binded);;
}



inline jule::Ptr<_1ab10803a_Struct> _1ab16bc4c_FindStruct(_1ab16aab4_scopeChecker* _self_, jule::Str _52129_ident, jule::Bool _52141_binded) {
	return _1ab1a6814_FindStruct((*(_self_))._field_s.ptr(), _52129_ident, _52141_binded);;
}



inline jule::Ptr<_1ab11cdeb_Fn> _1ab16c148_FindFn(_1ab16aab4_scopeChecker* _self_, jule::Str _53025_ident, jule::Bool _53037_binded) {
	return _1ab1a6c10_FindFn((*(_self_))._field_s.ptr(), _53025_ident, _53037_binded);;
}



inline jule::Ptr<_1ab131195_Trait> _1ab16c489_FindTrait(_1ab16aab4_scopeChecker* _self_, jule::Str _53928_ident) {
	return _1ab1a7051_FindTrait((*(_self_))._field_s.ptr(), _53928_ident);;
}



inline jule::Ptr<_1ab133890_Enum> _1ab16c7ca_FindEnum(_1ab16aab4_scopeChecker* _self_, jule::Str _54827_ident) {
	return _1ab1a7392_FindEnum((*(_self_))._field_s.ptr(), _54827_ident);;
}



inline jule::Ptr<_1ab13509a_TypeEnum> _1ab16cb1b_FindTypeEnum(_1ab16aab4_scopeChecker* _self_, jule::Str _55731_ident) {
	return _1ab1a76d3_FindTypeEnum((*(_self_))._field_s.ptr(), _55731_ident);;
}



inline jule::Bool _1ab16ce6d_isUnsafe(jule::Ptr<_1ab16aab4_scopeChecker> _self_) {
	jule::Ptr<_1ab16aab4_scopeChecker> _56513_scope = _self_;;
	_julec_label_1bbdba13d:;
	if ((*((*(_56513_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*(_56513_scope))._field_parent != nullptr)) {
		_56513_scope=(*(_56513_scope))._field_parent;
		goto _julec_label_1bbdba13d;
	};
	return false;;
}



inline jule::Bool _1ab16d204_isRoot(_1ab16aab4_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1ab16d402_stop(_1ab16aab4_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1ab16d688_stopped(_1ab16aab4_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1ab16d91e_isDeferred(jule::Ptr<_1ab16aab4_scopeChecker> _self_) {
	jule::Ptr<_1ab16aab4_scopeChecker> _59813_scope = _self_;;
	_julec_label_1bbdbd8e4:;
	if ((*((*(_59813_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*(_59813_scope))._field_parent != nullptr)) {
		_59813_scope=(*(_59813_scope))._field_parent;
		goto _julec_label_1bbdbd8e4;
	};
	return false;;
}



inline jule::Ptr<_1ab16aab4_scopeChecker> _1ab16dba5_getRoot(jule::Ptr<_1ab16aab4_scopeChecker> _self_) {
	jule::Ptr<_1ab16aab4_scopeChecker> _61613_root = _self_;;
	while ((((*(_61613_root))._field_parent != nullptr) && ((*(_61613_root))._field_owner == nullptr))) {
		{
			_61613_root=(*(_61613_root))._field_parent;
		}
	_iter_next_1bbdc0693:;
	}
	_iter_end_1bbdc0693:;;
	return _61613_root;;
}



inline jule::Ptr<_1ab16aab4_scopeChecker> _1ab16de3b_getHardRoot(jule::Ptr<_1ab16aab4_scopeChecker> _self_) {
	jule::Ptr<_1ab16aab4_scopeChecker> _62613_root = _self_;;
	while (((*(_62613_root))._field_parent != nullptr)) {
		{
			_62613_root=(*(_62613_root))._field_parent;
		}
	_iter_next_1bbdc18a3:;
	}
	_iter_end_1bbdc18a3:;;
	return _62613_root;;
}



inline jule::Ptr<_1ab166153_Label> _1ab16e27c_findLabel(_1ab16aab4_scopeChecker* _self_, jule::Str* _63629_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbdc283d:;
		if (it != expr_end) {
			jule::Any _63721_st = *it;
			{
				{
					auto &_match_expr{ _63721_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1bbdc3476:;
						{
							jule::Ptr<_1ab166153_Label> _64021_label = _63721_st.cast_ptr<_1ab166153_Label>(&__jule_any_type21);;
							if (((*(_64021_label))._field_Ident == (*(_63629_ident)))) {
								return _64021_label;;
							};
						}
					}
					_match_end_1bbdc3421:;
				};
			}
			_iter_next_1bbdc283d:;
			++it;
			goto _iter_begin_1bbdc283d;
		}
		_iter_end_1bbdc283d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab16961d_scopeLabel> _1ab16e5bd_findLabelScope(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Str* _65235_ident) {
	jule::Ptr<_1ab16961d_scopeLabel> _65313_label = _1ab16e90e_findLabelAll(_self_.ptr(), _65235_ident);;
	if (((_65313_label != nullptr) && ((*(_65313_label))._field_scope == _self_))) {
		return _65313_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab16961d_scopeLabel> _1ab16e90e_findLabelAll(_1ab16aab4_scopeChecker* _self_, jule::Str* _66432_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbdc5533:;
		if (it != expr_end) {
			jule::Ptr<_1ab16961d_scopeLabel> _66521_lbl = *it;
			{
				if (((*((*(_66521_lbl))._field_label))._field_Ident == (*(_66432_ident)))) {
					return _66521_lbl;;
				};
			}
			_iter_next_1bbdc5533:;
			++it;
			goto _iter_begin_1bbdc5533;
		}
		_iter_end_1bbdc5533:;
	};
	return nullptr;;
}



inline jule::Bool _1ab16ed0a_isDuplicatedIdent(_1ab16aab4_scopeChecker* _self_, jule::Uintptr _67636_itself, jule::Str* _67654_ident) {
	jule::Ptr<_1ab1c7a66_Var> _6779_v = _1ab16b455_FindVar(_self_, (*(_67654_ident)), false);;
	if (((_6779_v != nullptr) && (static_cast<jule::Uintptr>(_6779_v) != _67636_itself))) {
		if (((*(_6779_v))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_6779_v))._field_Scope == (*(_self_))._field_scope) || (!(_1ab1a7ae0_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1ab259c2a_TypeAlias> _6859_ta = _1ab16b851_FindTypeAlias(_self_, (*(_67654_ident)), false);;
	if (((_6859_ta != nullptr) && (static_cast<jule::Uintptr>(_6859_ta) != _67636_itself))) {
		if (((*(_6859_ta))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_6859_ta))._field_Scope == (*(_self_))._field_tree) || (!(_1ab1a7ae0_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1ab1700b3_checkVarDecl(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0ea1d6_VarDecl> _69636_decl) {
	jule::Ptr<_1ab1c7a66_Var> _69713_v = _1ab129435_buildVar(_69636_decl);;
	(*(_69713_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		{ jule::Slice<jule::Ptr<_1ab1c7a66_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_69713_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_69713_v, &__jule_any_type8)); };
	});;
	if (_1ab16ed0a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69713_v)), &((*(_69713_v))._field_Ident))) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_69713_v))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_69713_v))._field_Ident, &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1ab16d402_stop(_self_.ptr());
		return;;
	};
	_1ab1ba9b0_checkVarDecl((*(_self_))._field_s, &(_69713_v), jule::Trait<_1ab27a553_Lookup>(_self_, 0));
	if (((!(_1ab1c8182_IsTypeInferred(_69713_v.ptr()))) && (((*(_69713_v))._field_Kind == nullptr) || ((*((*(_69713_v))._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1ab1be255_evalVarValue((*(_self_))._field_s, &(_69713_v), jule::Trait<_1ab27a553_Lookup>(_self_, 0));
	if (((!(_1ab1c7deb_IsInitialized(_69713_v.ptr()))) || ((*((*(_69713_v))._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1ab17632d_removeInteriorMutRisk(_self_, &((*((*(_69713_v))._field_Value))._field_Data));
	_1ab1bdde2_checkVarValue((*(_self_))._field_s, &(_69713_v));
}



inline void _1ab17036b_checkTypeAlias(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab259c2a_TypeAlias>* _72739_ta) {
	if (_1ab16ed0a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_72739_ta)))), &((*((*(_72739_ta))))._field_Ident))) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_72739_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_72739_ta))))._field_Ident, &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1ab16d402_stop(_self_.ptr());
		return;;
	};
	_1ab1b4a42_checkTypeAliasDecl((*(_self_))._field_s, _72739_ta, jule::Trait<_1ab27a553_Lookup>(_self_, 0));
	{ jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push((*(_72739_ta))); };
	if (((*((*((*(_72739_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1ab16d402_stop(_self_.ptr());
	};
}



inline void _1ab170624_checkTypeAliasDecl(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0edcab_TypeAliasDecl> _74342_decl) {
	jule::Ptr<_1ab259c2a_TypeAlias> _74413_ta = _1ab125e04_buildTypeAlias(_74342_decl);;
	_1ab17036b_checkTypeAlias(_self_, &(_74413_ta));
}



inline jule::Ptr<_1ab1637b0_Scope> _1ab1708aa_getChild(_1ab16aab4_scopeChecker* _self_) {
	return jule::new_ptr<_1ab1637b0_Scope>(_1ab1637b0_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1ab170cc8_checkChildSsc(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0e7469_ScopeTree>* _75438_tree, jule::Ptr<_1ab1637b0_Scope>* _75461_s, jule::Ptr<_1ab16aab4_scopeChecker>* _75477_ssc) {
	(*((*(_75477_ssc))))._field_parent=_self_;
	_1ab17c576_check((*(_75477_ssc)), _75438_tree, _75461_s);
}



inline jule::Ptr<_1ab1637b0_Scope> _1ab1711c4_checkChildSc(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0e7469_ScopeTree>* _75937_tree, jule::Ptr<_1ab16aab4_scopeChecker>* _75960_ssc) {
	jule::Ptr<_1ab1637b0_Scope> _76013_s = _1ab1708aa_getChild(_self_.ptr());;
	_1ab170cc8_checkChildSsc(_self_, _75937_tree, &(_76013_s), _75960_ssc);
	return _76013_s;;
}



inline jule::Ptr<_1ab1637b0_Scope> _1ab171515_checkChild(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0e7469_ScopeTree>* _76535_tree) {
	jule::Ptr<_1ab16aab4_scopeChecker> _76613_ssc = _1ab17c80c_newChildChecker(_self_);;
	return _1ab1711c4_checkChildSc(_self_, _76535_tree, &(_76613_ssc));;
}



inline void _1ab1717bd_checkAnonScope(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0e7469_ScopeTree> _77038_tree) {
	jule::Ptr<_1ab1637b0_Scope> _77113_s = _1ab171515_checkChild(_self_, &(_77038_tree));;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_77113_s, &__jule_any_type22)); };
}



inline void _1ab171b31_processErrorCall(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab1189b8_BuiltinErrorCallExprModel>* _77541_m, jule::Ptr<_1ab0c1e7c_Token> _77572_err) {
	if (_1ab16d91e_isDeferred(_self_)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab16aab4_scopeChecker> _78013_root = _1ab16dba5_getRoot(_self_);;
	if ((!((*((*((*(_78013_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1ab1a8629_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_77541_m))))._field_Func=(*(_78013_root))._field_owner;
}



inline void _1ab171dd9_checkExpr(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0db77c_Expr> _78833_expr) {
	jule::Ptr<_1ab22be1c_Eval> _78913_eval = _1ab1b0763_eval((*(_self_))._field_s, jule::Trait<_1ab27a553_Lookup>(_self_, 0));;
	(*(_78913_eval))._field_ignored=true;
	jule::Ptr<_1ab22a228_Data> _79113_d = _1ab24a17c_evalExpr(_78913_eval, _78833_expr);;
	if (((_79113_d == nullptr) || ((*(_79113_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_79113_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bbde1c25:;
			{
				jule::Ptr<_1ab1189b8_BuiltinErrorCallExprModel> _80017_m = (*(_79113_d))._field_Model.cast_ptr<_1ab1189b8_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_1ab171b31_processErrorCall(_self_, &(_80017_m), (*(_78833_expr))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79113_d, &__jule_any_type24)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34) {
			_case_begin_1bbde26d7:;
			{
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79113_d, &__jule_any_type24)); };
			}
		}
		else {
			_case_begin_1bbde2374:;
			{
				_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_78833_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bbde231e:;
	};
}



inline jule::Ptr<_1ab163bcd_If> _1ab17222a_checkIf(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0ecbde_If> _81931_i) {
	jule::Ptr<_1ab1637b0_Scope> _82013_s = _1ab171515_checkChild(_self_, &((*(_81931_i))._field_Scope));;
	jule::Ptr<_1ab22a228_Data> _82213_d = _1ab24a17c_evalExpr(_1ab1b0763_eval((*(_self_))._field_s, jule::Trait<_1ab27a553_Lookup>(_self_, 0)), (*(_81931_i))._field_Expr);;
	if ((_82213_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab2635e6_Prim> _82713_prim = _1ab25d16d_Prim((*(_82213_d))._field_Kind.ptr());;
	if (((_82713_prim == nullptr) || (!(_1ab2667e7_IsBool(_82713_prim.ptr()))))) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_81931_i))._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab163bcd_If>(_1ab163bcd_If{._field_Expr=(*(_82213_d))._field_Model, ._field_Scope=_82013_s});;
}



inline jule::Ptr<_1ab163eca_Else> _1ab17256b_checkElse(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0ed0b8_Else> _83933_e) {
	return jule::new_ptr<_1ab163eca_Else>(_1ab163eca_Else{._field_Scope=_1ab171515_checkChild(_self_, &((*(_83933_e))._field_Scope))});;
}



inline void _1ab172824_checkConditional(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0ed56e_Conditional> _84540_conditional) {
	jule::Ptr<_1ab1643e8_Conditional> _84613_c = jule::new_ptr<_1ab1643e8_Conditional>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_84613_c, &__jule_any_type35)); };
	(*(_84613_c))._field_Elifs=jule::Slice<jule::Ptr<_1ab163bcd_If>>::alloc(0LL, ((*(_84540_conditional))._field_Tail.len() + 1LL));
	{ jule::Slice<jule::Ptr<_1ab163bcd_If>> &__jule_push_dest = (*(_84613_c))._field_Elifs; __jule_push_dest.push(_1ab17222a_checkIf(_self_, (*(_84540_conditional))._field_Head)); };
	{
		auto expr = &((*(_84540_conditional))._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbded715:;
		if (it != expr_end) {
			jule::Ptr<_1ab0ecbde_If> _85221_elif = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab163bcd_If>> &__jule_push_dest = (*(_84613_c))._field_Elifs; __jule_push_dest.push(_1ab17222a_checkIf(_self_, _85221_elif)); };
			}
			_iter_next_1bbded715:;
			++it;
			goto _iter_begin_1bbded715;
		}
		_iter_end_1bbded715:;
	};
	if (((*(_84540_conditional))._field_Default != nullptr)) {
		(*(_84613_c))._field_Default=_1ab17256b_checkElse(_self_, (*(_84540_conditional))._field_Default);
	};
}



inline void _1ab172cec_checkIterScopeSsc(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Uintptr _86137_it, jule::Ptr<_1ab0e7469_ScopeTree> _86154_tree, jule::Ptr<_1ab1637b0_Scope>* _86177_s, jule::Ptr<_1ab16aab4_scopeChecker> _86192_ssc) {
	(*(_86192_ssc))._field_it=_86137_it;
	_1ab170cc8_checkChildSsc(_self_, &(_86154_tree), _86177_s, &(_86192_ssc));
}



inline jule::Ptr<_1ab1637b0_Scope> _1ab1732a3_checkIterScopeSc(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Uintptr _86636_it, jule::Ptr<_1ab0e7469_ScopeTree> _86653_tree, jule::Ptr<_1ab16aab4_scopeChecker> _86675_ssc) {
	jule::Ptr<_1ab1637b0_Scope> _86713_scope = _1ab1708aa_getChild(_self_.ptr());;
	_1ab172cec_checkIterScopeSsc(_self_, _86636_it, _86653_tree, &(_86713_scope), _86675_ssc);
	return _86713_scope;;
}



inline jule::Ptr<_1ab1637b0_Scope> _1ab17369e_checkIterScope(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Uintptr _87234_it, jule::Ptr<_1ab0e7469_ScopeTree>* _87252_tree) {
	jule::Ptr<_1ab16aab4_scopeChecker> _87313_ssc = _1ab17c80c_newChildChecker(_self_);;
	return _1ab1732a3_checkIterScopeSc(_self_, _87234_it, (*(_87252_tree)), _87313_ssc);;
}



inline void _1ab173957_checkInfIter(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0eac53_Iter>* _87737_it) {
	jule::Ptr<_1ab1646e5_InfIter> _87813_kind = jule::new_ptr<_1ab1646e5_InfIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_87813_kind, &__jule_any_type36)); };
	(*(_87813_kind))._field_Scope=_1ab17369e_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87813_kind)), &((*((*(_87737_it))))._field_Scope));
}



inline void _1ab173c10_checkWhileIter(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0eac53_Iter>* _88339_it) {
	jule::Ptr<_1ab0eb57d_WhileKind> _88413_wh = (*((*(_88339_it))))._field_Kind.cast_ptr<_1ab0eb57d_WhileKind>(&__jule_any_type37);;
	if ((((*(_88413_wh))._field_Expr == nullptr) && ((*(_88413_wh))._field_Next == nullptr))) {
		_1ab173957_checkInfIter(_self_, _88339_it);
		return;;
	};
	jule::Ptr<_1ab164b9b_WhileIter> _89013_kind = jule::new_ptr<_1ab164b9b_WhileIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_89013_kind, &__jule_any_type38)); };
	(*(_89013_kind))._field_Scope=_1ab17369e_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89013_kind)), &((*((*(_88339_it))))._field_Scope));
	if (((*(_88413_wh))._field_Expr != nullptr)) {
		jule::Ptr<_1ab22a228_Data> _89517_d = _1ab24a17c_evalExpr(_1ab1b0763_eval((*(_self_))._field_s, jule::Trait<_1ab27a553_Lookup>(_self_, 0)), (*(_88413_wh))._field_Expr);;
		if ((_89517_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1ab2635e6_Prim> _90013_prim = _1ab25d16d_Prim((*(_89517_d))._field_Kind.ptr());;
		if ((_90013_prim == nullptr)) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1ab2667e7_IsBool(_90013_prim.ptr())))) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*(_89013_kind))._field_Expr=(*(_89517_d))._field_Model;
	};
	if (_1ab0eb8e1_IsWhileNext(_88413_wh.ptr())) {
		if ((!(_1ab162cba_isValidAstStForNextSt(&((*(_88413_wh))._field_Next))))) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_88413_wh))._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _92013_n = (*((*(_self_))._field_scope))._field_Stmts.len();;
		_1ab17b1ac_checkNode(_self_, &((*(_88413_wh))._field_Next));
		if ((_92013_n < (*((*(_self_))._field_scope))._field_Stmts.len())) {
			jule::Any _92321_st = (*((*(_self_))._field_scope))._field_Stmts[_92013_n];;
			(*((*(_self_))._field_scope))._field_Stmts=(*((*(_self_))._field_scope))._field_Stmts.slice(0LL, _92013_n);
			if ((!(_1ab163084_isValidStForNextSt(&(_92321_st))))) {
				_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_88413_wh))._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*(_89013_kind))._field_Next=_92321_st;
		};
	};
}



inline void _1ab17412d_checkComptimeRangeIter(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0eac53_Iter>* _93347_it, jule::Ptr<_1ab1655e7_RangeIter>* _93363_kind, jule::Ptr<_1ab22a228_Data>* _93386_d) {
	if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
		if (((!(_1ab1a7ae0_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ab16ed0a_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyA))._field_Ident)))) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyA))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_1ab1a8629_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
		if (((!(_1ab1a7ae0_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ab16ed0a_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyB))._field_Ident)))) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyB))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_1ab1a8629_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1ab137443_comptimeRange> _94713_comptime = _1ab261517_comptimeRange((*((*(_93386_d))))._field_Kind.ptr());;
	_1ab137256_comptimeRangeKind_mptr_data[((*(_94713_comptime))._field_kind).type_offset]._1ab13694d_ready((*(_94713_comptime))._field_kind, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
	jule::I64 _94913_i = 0LL;;
	jule::I64 _9509_errors = (*((*(_self_))._field_s))._field_errors.len();;
	for (; (_94913_i < _1ab137256_comptimeRangeKind_mptr_data[((*(_94713_comptime))._field_kind).type_offset]._1ab137102_len((*(_94713_comptime))._field_kind)); (_94913_i)++) {
		{
			jule::Ptr<_1ab16aab4_scopeChecker> _95217_ssc = _1ab17c80c_newChildChecker(_self_);;
			jule::Ptr<_1ab1637b0_Scope> _95317_scope = _1ab1708aa_getChild(_self_.ptr());;
			if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyA))._field_Scope=_95317_scope;
				{ jule::Slice<jule::Ptr<_1ab1c7a66_Var>> &__jule_push_dest = (*((*(_95217_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyA); };
			};
			if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyB))._field_Scope=_95317_scope;
				{ jule::Slice<jule::Ptr<_1ab1c7a66_Var>> &__jule_push_dest = (*((*(_95217_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyB); };
			};
			_1ab137256_comptimeRangeKind_mptr_data[((*(_94713_comptime))._field_kind).type_offset]._1ab136d6b_step((*(_94713_comptime))._field_kind, _94913_i, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
			_1ab170cc8_checkChildSsc(_self_, &((*((*(_93347_it))))._field_Scope), &(_95317_scope), &(_95217_ssc));
			if ((_9509_errors != (*((*(_self_))._field_s))._field_errors.len())) {
				goto _iter_end_1bbe19302;
			};
			{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_95317_scope, &__jule_any_type22)); };
		}
	_iter_next_1bbe19302:;
	}
	_iter_end_1bbe19302:;;
}



inline void _1ab1743d6_checkRangeIter(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0eac53_Iter>* _97239_it) {
	jule::Ptr<_1ab0ebe85_RangeKind> _97313_rang = (*((*(_97239_it))))._field_Kind.cast_ptr<_1ab0ebe85_RangeKind>(&__jule_any_type39);;
	jule::Ptr<_1ab22a228_Data> _97513_d = _1ab249d3b_evalExpr1(_1ab1b0763_eval((*(_self_))._field_s, jule::Trait<_1ab27a553_Lookup>(_self_, 0)), (*(_97313_rang))._field_Expr);;
	if ((_97513_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab1655e7_RangeIter> _98013_kind = jule::new_ptr<_1ab1655e7_RangeIter>(_1ab1655e7_RangeIter{._field_Expr=_97513_d, });;
	_1ab220383_rangeChecker _98413_rc = _1ab220383_rangeChecker{._field_sc=_self_, ._field_rang=_97313_rang, ._field_Kind=_98013_kind, ._field_d=_97513_d};;
	jule::Bool _9909_ok = _1ab222396_check(&_98413_rc);;
	if ((!(_9909_ok))) {
		return;;
	};
	jule::Ptr<_1ab137443_comptimeRange> _99513_comptimeRange = _1ab261517_comptimeRange((*(_97513_d))._field_Kind.ptr());;
	if ((_99513_comptimeRange != nullptr)) {
		_1ab17412d_checkComptimeRangeIter(_self_, _97239_it, &(_98013_kind), &(_97513_d));
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_98013_kind, &__jule_any_type40)); };
	jule::Ptr<_1ab16aab4_scopeChecker> _100313_ssc = _1ab17c80c_newChildChecker(_self_);;
	jule::Ptr<_1ab1637b0_Scope> _100413_scope = _1ab1708aa_getChild(_self_.ptr());;
	if (((*(_98013_kind))._field_KeyA != nullptr)) {
		if (((!(_1ab1a7ae0_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ab16ed0a_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_98013_kind))._field_KeyA))._field_Ident)))) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_98013_kind))._field_KeyA))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_98013_kind))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_1ab1a8629_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_98013_kind))._field_KeyA))._field_Scope=_100413_scope;
		{ jule::Slice<jule::Ptr<_1ab1c7a66_Var>> &__jule_push_dest = (*((*(_100313_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_98013_kind))._field_KeyA); };
	};
	if (((*(_98013_kind))._field_KeyB != nullptr)) {
		if (((!(_1ab1a7ae0_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ab16ed0a_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_98013_kind))._field_KeyB))._field_Ident)))) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_98013_kind))._field_KeyB))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_98013_kind))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_1ab1a8629_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_98013_kind))._field_KeyB))._field_Scope=_100413_scope;
		{ jule::Slice<jule::Ptr<_1ab1c7a66_Var>> &__jule_push_dest = (*((*(_100313_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_98013_kind))._field_KeyB); };
	};
	_1ab172cec_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_98013_kind)), (*((*(_97239_it))))._field_Scope, &(_100413_scope), _100313_ssc);
	(*(_98013_kind))._field_Scope=_100413_scope;
}



inline void _1ab17468e_checkIter(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0eac53_Iter> _102833_it) {
	if (_1ab0eb0b6_IsInf(_102833_it.ptr())) {
		_1ab173957_checkInfIter(_self_, &(_102833_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_102833_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1bbe2ec30:;
			{
				_1ab173c10_checkWhileIter(_self_, &(_102833_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1bbe30989:;
			{
				_1ab1743d6_checkRangeIter(_self_, &(_102833_it));
			}
		}
		else {
			_case_begin_1bbe304b1:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1bbe3045b:;
	};
}



inline jule::Bool _1ab1749d0_checkValidContLabel(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Uintptr _104439_it) {
	jule::Ptr<_1ab16aab4_scopeChecker> _104513_scope = _self_;;
	_julec_label_1bbe31baa:;
	if (((*(_104513_scope))._field_it == _104439_it)) {
		return true;;
	};
	if (((*(_104513_scope))._field_parent != nullptr)) {
		_104513_scope=(*(_104513_scope))._field_parent;
		goto _julec_label_1bbe31baa;
	};
	return false;;
}



inline jule::Bool _1ab174d21_checkValidBreakLabel(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Uintptr _106040_ptr) {
	jule::Ptr<_1ab16aab4_scopeChecker> _106113_scope = _self_;;
	_julec_label_1bbe33ae1:;
	if (((*(_106113_scope))._field_it == _106040_ptr)) {
		return true;;
	};
	if (((*(_106113_scope))._field_cse != 0LLU)) {
		jule::Uintptr _106913_mtch = static_cast<jule::Uintptr>((*(((_1ab16852e_Case*)((*(_106113_scope))._field_cse))))._field_Owner);;
		if ((_106913_mtch == _106040_ptr)) {
			return true;;
		};
	};
	if (((*(_106113_scope))._field_parent != nullptr)) {
		_106113_scope=(*(_106113_scope))._field_parent;
		goto _julec_label_1bbe33ae1;
	};
	return false;;
}



inline jule::Ptr<_1ab16597c_ContSt> _1ab175162_checkContValidScope(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0ec738_ContSt> _108339_c) {
	if (_1ab16d91e_isDeferred(_self_)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_108339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_108339_c))._field_Label != nullptr)) {
		return jule::new_ptr<_1ab16597c_ContSt>();;
	};
	jule::Ptr<_1ab16aab4_scopeChecker> _109313_scope = _self_;;
	_julec_label_1bbe37bc2:;
	{
		
		if (((((*(_109313_scope))._field_it == 0LLU) && ((*(_109313_scope))._field_parent != nullptr)) && ((*(_109313_scope))._field_owner == nullptr))) {
			_case_begin_1bbe38442:;
			{
				_109313_scope=(*(_109313_scope))._field_parent;
				goto _julec_label_1bbe37bc2;
			}
		}
		else if (((*(_109313_scope))._field_it != 0LLU)) {
			_case_begin_1bbe384b9:;
			{
				return jule::new_ptr<_1ab16597c_ContSt>(_1ab16597c_ContSt{._field_It=(*(_109313_scope))._field_it});;
			}
		}
		_match_end_1bbe38387:;
	};
	_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_108339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1ab17541a_checkCont(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0ec738_ContSt> _110729_c) {
	jule::Ptr<_1ab16597c_ContSt> _110813_cont = _1ab175162_checkContValidScope(_self_, _110729_c);;
	if ((_110813_cont == nullptr)) {
		return;;
	};
	if (((*(_110729_c))._field_Label != nullptr)) {
		jule::Ptr<_1ab16961d_scopeLabel> _111417_label = _1ab160cc9_findLabelParent(&((*((*(_110729_c))._field_Label))._field_Kind), (*(_self_))._field_parent);;
		if ((_111417_label == nullptr)) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_111417_label))._field_used=true;
		if ((((*(_111417_label))._field_pos + 1LL) >= (*((*((*(_111417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I64 _112713_i = ((*(_111417_label))._field_pos + 1LL);;
		if ((_112713_i >= (*((*((*(_111417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _113121_st = (*((*((*(_111417_label))._field_scope))._field_scope))._field_Stmts[_112713_i];;
			{
				auto &_match_expr{ _113121_st };
				
				if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1bbe4399c:;
					{
						(*(_110813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113121_st.cast_ptr<_1ab1646e5_InfIter>(&__jule_any_type36)));
					}
				}
				else if (_match_expr.type == &__jule_any_type40) {
					_case_begin_1bbe436e4:;
					{
						(*(_110813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113121_st.cast_ptr<_1ab1655e7_RangeIter>(&__jule_any_type40)));
					}
				}
				else if (_match_expr.type == &__jule_any_type38) {
					_case_begin_1bbe4375a:;
					{
						(*(_110813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113121_st.cast_ptr<_1ab164b9b_WhileIter>(&__jule_any_type38)));
					}
				}
				else {
					_case_begin_1bbe4367d:;
					{
						_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_1bbe43628:;
			};
		};
	};
	if (((*(_110813_cont))._field_It != 0LLU)) {
		if ((!(_1ab1749d0_checkValidContLabel(_self_, (*(_110813_cont))._field_It)))) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_110813_cont, &__jule_any_type41)); };
}



inline void _1ab1756c3_checkLabel(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0e4a2c_LabelSt> _115434_l) {
	if ((_1ab16e27c_findLabel(_self_.ptr(), &((*(_115434_l))._field_Ident)) != nullptr)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_115434_l))._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_115434_l))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1ab166153_Label> _116013_label = jule::new_ptr<_1ab166153_Label>(_1ab166153_Label{._field_Ident=(*(_115434_l))._field_Ident});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_116013_label, &__jule_any_type21)); };
	{ jule::Slice<jule::Ptr<_1ab16961d_scopeLabel>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(jule::new_ptr<_1ab16961d_scopeLabel>(_1ab16961d_scopeLabel{._field_token=(*(_115434_l))._field_Token, ._field_label=_116013_label, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL)), ._field_scope=_self_, })); };
}



inline void _1ab17597b_pushGoto(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0e4e06_GotoSt> _117332_gt) {
	jule::Ptr<_1ab16652c_GotoSt> _117413_st = jule::new_ptr<_1ab16652c_GotoSt>(_1ab16652c_GotoSt{._field_Ident=(*((*(_117332_gt))._field_Label))._field_Kind, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_117413_st, &__jule_any_type42)); };
	{ jule::Slice<jule::Ptr<_1ab169ba1_scopeGoto>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(jule::new_ptr<_1ab169ba1_scopeGoto>(_1ab169ba1_scopeGoto{._field_st=_117413_st, ._field_gt=_117332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL))})); };
}



inline void _1ab175c34_checkPostfix(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0e5de6_AssignSt> _118736_a) {
	if (((*(_118736_a))._field_Left.len() > 1LL)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_118736_a))._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab0db77c_Expr> _119313_expr = (*((*(_118736_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1ab22a228_Data> _119413_d = _1ab24a17c_evalExpr(_1ab1b0763_eval((*(_self_))._field_s, jule::Trait<_1ab27a553_Lookup>(_self_, 0)), _119313_expr);;
	if ((_119413_d == nullptr)) {
		return;;
	};
	_1ab162a01_checkAssign(&((*(_self_))._field_s), &(_119413_d), nullptr, (*(_118736_a))._field_Setter);
	if ((_1ab25d68a_Ptr((*(_119413_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ab26a8d9_Ptr> _120217_ptr = _1ab25d68a_Ptr((*(_119413_d))._field_Kind.ptr());;
		if (_1ab26b423_IsUnsafe(_120217_ptr.ptr())) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_118736_a))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_118736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1ab25add5_Str((*(_119413_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_1ab25d16d_Prim((*(_119413_d))._field_Kind.ptr()) == nullptr) || (!(_1d8bce9c4_IsNum((*(_1ab25d16d_Prim((*(_119413_d))._field_Kind.ptr())))._field_Kind))))) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_118736_a))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_118736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1ab25add5_Str((*(_119413_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1ab166906_Postfix>(_1ab166906_Postfix{._field_Expr=(*(_119413_d))._field_Model, ._field_Op=(*((*(_118736_a))._field_Setter))._field_Kind}), &__jule_any_type43)); };
}



inline jule::Bool _1ab176075_isNewAssignIdent(_1ab16aab4_scopeChecker* _self_, jule::Str _122035_ident) {
	if ((_1ab0c48db_IsIgnoreIdent(_122035_ident) || (_122035_ident).empty())) {
		return false;;
	};
	return (_1ab227e18_defByIdent((*(_self_))._field_table.ptr(), &(_122035_ident), false) == nullptr);;
}



inline void _1ab17632d_removeInteriorMutRisk(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab22a228_Data>* _123346_d) {
	jule::Ptr<_1ab10acb8_StructIns> _12349_s = _1ab25e6e1_Struct((*((*(_123346_d))))._field_Kind.ptr());;
	if ((_12349_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab16aab4_scopeChecker> _12389_root = _1ab16de3b_getHardRoot(_self_);;
	if (((*((*(_12389_root))._field_owner))._field_Owner != _12349_s)) {
		return;;
	};
	(*((*(_123346_d))))._field_Mutable=true;
}



inline jule::Bool _1ab1767d4_checkStructureAssignOp(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab10acb8_StructIns>* _124747_s, jule::Ptr<_1ab0e5de6_AssignSt>* _124767_a, jule::Ptr<_1ab22a228_Data>* _124786_r) {
	jule::Ptr<_1ab120d00_FnIns> _125017_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_124767_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1bbe5d104:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1bbe5ecc6:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1bbe5ed3c:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1bbe5d742:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1bbe5d7a8:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1bbe5d81e:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1bbe5d885:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1bbe5ee2a:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1bbe5ee91:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1bbe60007:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1bbe5d6cb:;
			{
				_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_124767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_124767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1ab10b13c_Str((*(_124747_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1bbe5d676:;
	};
	if ((_125017_overload == nullptr)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_124767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_124767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1ab10b13c_Str((*(_124747_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1ab11ed54_ParamIns> _128213_p = (*(_125017_overload))._field_Params[1LL];;
	return _1ab1b0cc4_checkAssignType((*(_self_))._field_s, (*((*(_128213_p))._field_Decl))._field_Reference, &((*(_128213_p))._field_Kind), _124786_r, (*((*(_124767_a))))._field_Setter);;
}



inline void _1ab176a8c_checkSingleAssign(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0e5de6_AssignSt>* _128642_a) {
	jule::Ptr<_1ab22a228_Data> _128717_l = nullptr;;
	if ((!(_1ab0c48db_IsIgnoreIdent((*((*((*(_128642_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1ab0db77c_Expr> _129017_expr = (*((*((*(_128642_a))))._field_Left[0LL]))._field_Expr;;
		_128717_l=_1ab24a17c_evalExpr(_1ab1b0763_eval((*(_self_))._field_s, jule::Trait<_1ab27a553_Lookup>(_self_, 0)), _129017_expr);
		if ((_128717_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1ab22be1c_Eval> _129717_eval = nullptr;;
	if ((_128717_l != nullptr)) {
		_129717_eval=_1ab1b0422_evalp((*(_self_))._field_s, jule::Trait<_1ab27a553_Lookup>(_self_, 0), (*(_128717_l))._field_Kind);
	} else {
		_129717_eval=_1ab1b0763_eval((*(_self_))._field_s, jule::Trait<_1ab27a553_Lookup>(_self_, 0));
	};
	(*(_129717_eval))._field_unsafety=_1ab16ce6d_isUnsafe(_self_);
	jule::Ptr<_1ab22a228_Data> _130413_r = _1ab24a17c_evalExpr(_129717_eval, (*((*(_128642_a))))._field_Right);;
	if ((_130413_r == nullptr)) {
		return;;
	};
	_1ab17632d_removeInteriorMutRisk(_self_, &(_130413_r));
	if ((_128717_l == nullptr)) {
		if (_1ab25bd81_Void((*(_130413_r))._field_Kind.ptr())) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_128642_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_130413_r, &__jule_any_type24)); };
		return;;
	};
	if ((!(_1ab162a01_checkAssign(&((*(_self_))._field_s), &(_128717_l), _130413_r, (*((*(_128642_a))))._field_Setter)))) {
		return;;
	};
	if ((_1ab25ee94_Tup((*(_130413_r))._field_Kind.ptr()) != nullptr)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_128642_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab10ebac_OperandExprModel> _132813_lm = jule::new_ptr<_1ab10ebac_OperandExprModel>(_1ab10ebac_OperandExprModel{._field_Kind=(*(_128717_l))._field_Kind, ._field_Model=(*(_128717_l))._field_Model});;
	jule::Ptr<_1ab10ebac_OperandExprModel> _133213_rm = jule::new_ptr<_1ab10ebac_OperandExprModel>(_1ab10ebac_OperandExprModel{._field_Kind=(*(_130413_r))._field_Kind, ._field_Model=(*(_130413_r))._field_Model});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1ab166dac_Assign>(_1ab166dac_Assign{._field_L=_132813_lm, ._field_R=_133213_rm, ._field_Op=(*((*(_128642_a))))._field_Setter}), &__jule_any_type44)); };
	if (((*((*((*(_128642_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
		jule::Ptr<_1ab10acb8_StructIns> _133917_strct = _1ab25e6e1_Struct((*(_128717_l))._field_Kind.ptr());;
		if ((_133917_strct != nullptr)) {
			_1ab1767d4_checkStructureAssignOp(_self_, &(_133917_strct), _128642_a, &(_130413_r));
			return;;
		};
		jule::U64 _134413_id = (*((*((*(_128642_a))))._field_Setter))._field_Id;;
		(*((*((*(_128642_a))))._field_Setter))._field_Id=_1ab17cb81_removeEqFromOp((*((*((*(_128642_a))))._field_Setter))._field_Id);
		_1ab24c5d0_binaryEval _134617_solver = static__1ab24d009_new(_129717_eval, (*((*(_128642_a))))._field_Setter);;
		_130413_r=_1ab25331c_solveExplicit(&_134617_solver, &(_128717_l), &(_130413_r));
		(*((*((*(_128642_a))))._field_Setter))._field_Id=_134413_id;
		if ((_130413_r == nullptr)) {
			return;;
		};
		return;;
	};
	_1ab213b90_assignTypeChecker _135513_checker = _1ab213b90_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_128717_l))._field_Kind, ._field_d=_130413_r, ._field_errorToken=(*((*(_128642_a))))._field_Setter};;
	if (_1ab214e05_check(&_135513_checker)) {
		(*(_133213_rm))._field_Model=(*(_130413_r))._field_Model;
		(*(_132813_lm))._field_Model=(*(_128717_l))._field_Model;
	};
}



inline void _1ab177120_processEndPartOfMultiAssign(_1ab16aab4_scopeChecker* _self_, jule::Ptr<_1ab167286_MultiAssign>* _136751_st, jule::Ptr<_1ab0e5de6_AssignSt>* _136814_a, jule::Ptr<_1ab0e5863_AssignLeft>* _136833_lexpr, jule::Ptr<_1ab22a228_Data>* _136858_l, jule::Ptr<_1ab22a228_Data>* _136873_r) {
	if (((!((*((*(_136833_lexpr))))._field_Reference)) && _1ab0c48db_IsIgnoreIdent((*((*(_136833_lexpr))))._field_Ident))) {
		if (_1ab25bd81_Void((*((*(_136873_r))))._field_Kind.ptr())) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_136814_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1ab22a228_Data>> &__jule_push_dest = (*((*(_136751_st))))._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*((*(_136814_a))))._field_Declarative && ((*((*(_136833_lexpr))))._field_Reference || _1ab176075_isNewAssignIdent(_self_, (*((*(_136833_lexpr))))._field_Ident)))) {
		if (_1ab16ed0a_isDuplicatedIdent(_self_, 0LLU, &((*((*(_136833_lexpr))))._field_Ident))) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_136833_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136833_lexpr))))._field_Ident, &__jule_any_type4)}));
			_1ab1a8629_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1ab16d402_stop(_self_);
			return;;
		};
		if (_1ab0c48db_IsIgnoreIdent((*((*(_136833_lexpr))))._field_Ident)) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_136833_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ab1c7a66_Var> _138917_v = jule::new_ptr<_1ab1c7a66_Var>(_1ab1c7a66_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_136833_lexpr))))._field_Token, ._field_Ident=(*((*(_136833_lexpr))))._field_Ident, ._field_Mutable=(*((*(_136833_lexpr))))._field_Mutable, ._field_Reference=(*((*(_136833_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Expr=(*((*(_136814_a))))._field_Right, ._field_Data=(*(_136873_r))}), });;
		_1ab1bdde2_checkVarValue((*(_self_))._field_s, &(_138917_v));
		(*(_138917_v))._field_Value=nullptr;
		{ jule::Slice<jule::Ptr<_1ab22a228_Data>> &__jule_push_dest = (*((*(_136751_st))))._field_L; __jule_push_dest.push(jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=(*((*(_138917_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_138917_v))._field_Mutable, ._field_Reference=(*(_138917_v))._field_Reference, ._field_Lvalue=(!((*(_138917_v))._field_Constant)), ._field_Model=jule::Any(_138917_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1ab1c7a66_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_138917_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_138917_v, &__jule_any_type8)); };
		return;;
	};
	if (((*((*(_136833_lexpr))))._field_Mutable || (*((*(_136833_lexpr))))._field_Reference)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_136833_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136833_lexpr))))._field_Ident, &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1ab162a01_checkAssign(&((*(_self_))._field_s), _136858_l, (*(_136873_r)), (*((*(_136833_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1ab1b42d3_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_136858_l))))._field_Mutable, false, &((*((*(_136858_l))))._field_Kind), _136873_r, &((*((*(_136814_a))))._field_Setter));
	_1ab213b90_assignTypeChecker _143213_checker = _1ab213b90_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_136858_l))))._field_Kind, ._field_d=(*(_136873_r)), ._field_errorToken=(*((*(_136814_a))))._field_Setter};;
	_1ab214e05_check(&_143213_checker);
	{ jule::Slice<jule::Ptr<_1ab22a228_Data>> &__jule_push_dest = (*((*(_136751_st))))._field_L; __jule_push_dest.push((*(_136858_l))); };
}



inline void _1ab1773c8_checkMultiAssign(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0e5de6_AssignSt>* _144241_a) {
	jule::Ptr<_1ab22a228_Data> _144313_rd = _1ab24a17c_evalExpr(_1ab1b0763_eval((*(_self_))._field_s, jule::Trait<_1ab27a553_Lookup>(_self_, 0)), (*((*(_144241_a))))._field_Right);;
	if ((_144313_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ab22a228_Data>> _144713_right = _1ab161b54_getDatasFromTupleData(&(_144313_rd));;
	if ((_144713_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_144713_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1bbe89ebb:;
				{
					jule::Ptr<_1ab112a17_IndexingExprModel> _145121_iem = (*(_144713_right[0LL]))._field_Model.cast_ptr<_1ab112a17_IndexingExprModel>(&__jule_any_type45);;
					if ((_1ab25ec0d_Map((*((*(_145121_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_144713_right=jule::Slice<jule::Ptr<_1ab22a228_Data>>::make({jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=(*(_1ab25ec0d_Map((*((*(_145121_iem))._field_Expr))._field_Kind.ptr())))._field_Val, }),jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, })});
					};
				}
			}
			_match_end_1bbe89e22:;
		};
	};
	{
		
		if (((*((*(_144241_a))))._field_Left.len() > _144713_right.len())) {
			_case_begin_1bbe8973a:;
			{
				_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_144241_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_144241_a))))._field_Left.len() < _144713_right.len())) {
			_case_begin_1bbe897a1:;
			{
				_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_144241_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1bbe8a3ea:;
	};
	jule::Ptr<_1ab167286_MultiAssign> _147013_st = jule::new_ptr<_1ab167286_MultiAssign>(_1ab167286_MultiAssign{._field_R=(*(_144313_rd))._field_Model});;
	{
		auto expr = &((*((*(_144241_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbe8e90a:;
		if (it != expr_end) {
			jule::I64 _147313_i = it - expr->begin();
			{
				jule::Ptr<_1ab0e5863_AssignLeft> _147417_lexpr = (*((*(_144241_a))))._field_Left[_147313_i];;
				jule::Ptr<_1ab22a228_Data> _147521_l = nullptr;;
				if (((!(_1ab0c48db_IsIgnoreIdent((*(_147417_lexpr))._field_Ident))) && ((!((*((*(_144241_a))))._field_Declarative)) || (!(_1ab176075_isNewAssignIdent(_self_.ptr(), (*(_147417_lexpr))._field_Ident)))))) {
					_147521_l=_1ab24a17c_evalExpr(_1ab1b0763_eval((*(_self_))._field_s, jule::Trait<_1ab27a553_Lookup>(_self_, 0)), (*(_147417_lexpr))._field_Expr);
					if ((_147521_l == nullptr)) {
						goto _iter_next_1bbe8e90a;
					};
				};
				jule::Ptr<_1ab22a228_Data> _148317_r = _144713_right[_147313_i];;
				_1ab17632d_removeInteriorMutRisk(_self_, &(_148317_r));
				_1ab177120_processEndPartOfMultiAssign(_self_.ptr(), &(_147013_st), _144241_a, &(_147417_lexpr), &(_147521_l), &(_148317_r));
			}
			_iter_next_1bbe8e90a:;
			++it;
			_147313_i++;
			goto _iter_begin_1bbe8e90a;
		}
		_iter_end_1bbe8e90a:;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_147013_st, &__jule_any_type46)); };
}



inline void _1ab177681_singleDeclAssign(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0e5de6_AssignSt>* _149041_a) {
	jule::Ptr<_1ab0e5863_AssignLeft> _149113_lexpr = (*((*(_149041_a))))._field_Left[0LL];;
	if (_1ab16ed0a_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*(_149113_lexpr))._field_Ident))) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_149113_lexpr))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_149113_lexpr))._field_Ident, &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1ab16d402_stop(_self_.ptr());
		return;;
	};
	if (_1ab0c48db_IsIgnoreIdent((*(_149113_lexpr))._field_Ident)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_149113_lexpr))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab22a228_Data> _150213_r = _1ab24a17c_evalExpr(_1ab1b0763_eval((*(_self_))._field_s, jule::Trait<_1ab27a553_Lookup>(_self_, 0)), (*((*(_149041_a))))._field_Right);;
	if ((_150213_r == nullptr)) {
		return;;
	};
	_1ab17632d_removeInteriorMutRisk(_self_, &(_150213_r));
	jule::Ptr<_1ab1c7a66_Var> _151013_v = jule::new_ptr<_1ab1c7a66_Var>(_1ab1c7a66_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_149113_lexpr))._field_Token, ._field_Ident=(*(_149113_lexpr))._field_Ident, ._field_Mutable=(*(_149113_lexpr))._field_Mutable, ._field_Reference=(*(_149113_lexpr))._field_Reference, ._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Expr=(*((*(_149041_a))))._field_Right, ._field_Data=_150213_r}), });;
	_1ab1bdde2_checkVarValue((*(_self_))._field_s, &(_151013_v));
	{ jule::Slice<jule::Ptr<_1ab1c7a66_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_151013_v); };
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_151013_v, &__jule_any_type8)); };
}



inline void _1ab177939_checkAssignSt(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0e5de6_AssignSt> _152637_a) {
	{
		
		if (_1ab0c6b1e_IsPostfixOp((*((*(_152637_a))._field_Setter))._field_Id)) {
			_case_begin_1bbe9ca4a:;
			{
				_1ab175c34_checkPostfix(_self_, _152637_a);
			}
		}
		else if (((*(_152637_a))._field_Left.len() == 1LL)) {
			_case_begin_1bbe9b6b4:;
			{
				if ((*(_152637_a))._field_Declarative) {
					_1ab177681_singleDeclAssign(_self_, &(_152637_a));
				} else {
					_1ab176a8c_checkSingleAssign(_self_, &(_152637_a));
				};
			}
		}
		else {
			_case_begin_1bbe9b64d:;
			{
				_1ab1773c8_checkMultiAssign(_self_, &(_152637_a));
			}
		}
		_match_end_1bbe9b582:;
	};
}



inline jule::Ptr<_1ab1637b0_Scope> _1ab177d35_checkCaseScope(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab16852e_Case>* _154135_c, jule::Ptr<_1ab0e7469_ScopeTree>* _154150_tree) {
	jule::Ptr<_1ab16aab4_scopeChecker> _154213_ssc = _1ab17c80c_newChildChecker(_self_);;
	(*(_154213_ssc))._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_154135_c))));
	return _1ab1711c4_checkChildSc(_self_, _154150_tree, &(_154213_ssc));;
}



inline jule::Ptr<_1ab16852e_Case> _1ab178396_checkCase(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab1678e6_Match> _154733_m, jule::I64 _154744_i, jule::Ptr<_1ab0ee262_Case> _154756_c, jule::Ptr<_1ab22a228_Data> _154775_expr) {
	jule::Ptr<_1ab16852e_Case> _154813_case = (*(_154733_m))._field_Cases[_154744_i];;
	(*(_154813_case))._field_Exprs=jule::Slice<jule::Ptr<_1ab22a228_Data>>::alloc(0LL, (*(_154756_c))._field_Exprs.len());
	jule::Bool _155013_constMatched = false;;
	jule::Ptr<_1ab22be1c_Eval> _155113_eval = _1ab1b0763_eval((*(_self_))._field_s, jule::Trait<_1ab27a553_Lookup>(_self_, 0));;
	{
		auto expr = &((*(_154756_c))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbea32ae:;
		if (it != expr_end) {
			jule::Ptr<_1ab0db77c_Expr> _155221_e = *it;
			{
				jule::Ptr<_1ab22a228_Data> _155317_d = _1ab249368_evalExprKind(_155113_eval, (*(_155221_e))._field_Kind);;
				if ((_155317_d == nullptr)) {
					goto _iter_next_1bbea32ae;
				};
				if ((*(_154733_m))._field_TypeMatch) {
					{ jule::Slice<jule::Ptr<_1ab22a228_Data>> &__jule_push_dest = (*(_154813_case))._field_Exprs; __jule_push_dest.push(_155317_d); };
					if ((_1ab16188a_countMatchType(&(_154733_m), &((*(_155317_d))._field_Kind)) > 1LL)) {
						_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_155221_e))._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_155317_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*((*(_154775_expr))._field_Kind))._field_Generic) {
						_155013_constMatched=(_155013_constMatched || _1ab25b226_Equal((*(_154775_expr))._field_Kind, (*(_155317_d))._field_Kind));
					} else {
						if ((_1ab25dba7_TypeEnum((*(_154775_expr))._field_Kind.ptr()) != nullptr)) {
							_1ab1b127a_checkTypeCompatibility((*(_self_))._field_s, &((*(_154775_expr))._field_Kind), &((*(_155317_d))._field_Kind), &((*(_155221_e))._field_Token));
						} else {
							jule::Ptr<_1ab131195_Trait> _156825_trt = _1ab25e977_Trait((*(_154775_expr))._field_Kind.ptr());;
							if ((_156825_trt != nullptr)) {
								_1ab1b127a_checkTypeCompatibility((*(_self_))._field_s, &((*(_154775_expr))._field_Kind), &((*(_155317_d))._field_Kind), &((*(_155221_e))._field_Token));
							};
						};
					};
					goto _iter_next_1bbea32ae;
				} else if ((*(_154733_m))._field_Comptime) {
					if ((!(_1ab22aaec_IsConst(_155317_d.ptr())))) {
						_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_155221_e))._field_Token, jule::Str::lit("const-matching requires constant expression", 43), jule::Slice<jule::Any>());
					} else {
						_155013_constMatched=(_155013_constMatched || _1d8bd1eb0_ReadBool((*(_155317_d))._field_Constant.ptr()));
					};
				};
				if ((*(_155317_d))._field_Decl) {
					_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_155221_e))._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1ab1a8629_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1bbea32ae;
				};
				{ jule::Slice<jule::Ptr<_1ab22a228_Data>> &__jule_push_dest = (*(_154813_case))._field_Exprs; __jule_push_dest.push(_155317_d); };
				_1ab213b90_assignTypeChecker _159117_checker = _1ab213b90_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_154775_expr))._field_Kind, ._field_d=_155317_d, ._field_errorToken=(*(_155221_e))._field_Token};;
				_1ab214e05_check(&_159117_checker);
			}
			_iter_next_1bbea32ae:;
			++it;
			goto _iter_begin_1bbea32ae;
		}
		_iter_end_1bbea32ae:;
	};
	if (((!((*(_154733_m))._field_Comptime)) || _155013_constMatched)) {
		(*(_154813_case))._field_Scope=_1ab177d35_checkCaseScope(_self_, &(_154813_case), &((*(_154756_c))._field_Scope));
	};
	return _154813_case;;
}



inline void _1ab1787b4_checkCases(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0ee99e_MatchCase>* _160535_m, jule::Ptr<_1ab1678e6_Match> _160554_rm, jule::Ptr<_1ab22a228_Data> _160570_expr) {
	(*(_160554_rm))._field_Cases=jule::Slice<jule::Ptr<_1ab16852e_Case>>::alloc(0LL, (*((*(_160535_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_160535_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbeb0e48:;
		if (it != expr_end) {
			jule::I64 _160713_i = it - expr->begin();
			{
				jule::Ptr<_1ab16852e_Case> _160817_case = jule::new_ptr<_1ab16852e_Case>(_1ab16852e_Case{._field_Owner=_160554_rm, });;
				if ((_160713_i > 0LL)) {
					(*((*(_160554_rm))._field_Cases[(_160713_i - 1LL)]))._field_Next=_160817_case;
				};
				{ jule::Slice<jule::Ptr<_1ab16852e_Case>> &__jule_push_dest = (*(_160554_rm))._field_Cases; __jule_push_dest.push(_160817_case); };
			}
			_iter_next_1bbeb0e48:;
			++it;
			_160713_i++;
			goto _iter_begin_1bbeb0e48;
		}
		_iter_end_1bbeb0e48:;
	};
	if ((((*(_160554_rm))._field_Default != nullptr) && ((*((*(_160535_m))))._field_Cases.len() > 0LL))) {
		(*((*(_160554_rm))._field_Cases[((*(_160554_rm))._field_Cases.len() - 1LL)]))._field_Next=(*(_160554_rm))._field_Default;
	};
	{
		auto expr = &((*((*(_160535_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbeb1850:;
		if (it != expr_end) {
			jule::I64 _162114_i = it - expr->begin();
			jule::Ptr<_1ab0ee262_Case> _162121_c = *it;
			{
				_1ab178396_checkCase(_self_, _160554_rm, _162114_i, _162121_c, _160570_expr);
			}
			_iter_next_1bbeb1850:;
			++it;
			_162114_i++;
			goto _iter_begin_1bbeb1850;
		}
		_iter_end_1bbeb1850:;
	};
}



inline jule::Ptr<_1ab16852e_Case> _1ab178bb0_checkDefault(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab1678e6_Match> _162636_m, jule::Ptr<_1ab0ed0b8_Else> _162651_d) {
	jule::Ptr<_1ab16852e_Case> _162713_def = jule::new_ptr<_1ab16852e_Case>(_1ab16852e_Case{._field_Owner=_162636_m, });;
	(*(_162713_def))._field_Scope=_1ab177d35_checkCaseScope(_self_, &(_162713_def), &((*(_162651_d))._field_Scope));
	return _162713_def;;
}



inline void _1ab179023_checkComptimePanic(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0c1e7c_Token> _163438_callToken, jule::Ptr<_1ab1637b0_Scope>* _163458_s) {
	if (((*((*(_163458_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16389_stmt = (*((*(_163458_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16389_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bbeb7d40:;
			{
				jule::Ptr<_1ab22a228_Data> _164113_d = _16389_stmt.cast_ptr<_1ab22a228_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ (*(_164113_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1bbeb8b32:;
						{
							jule::Ptr<_1ab11690b_BuiltinPanicCallExprModel> _164417_m = (*(_164113_d))._field_Model.cast_ptr<_1ab11690b_BuiltinPanicCallExprModel>(&__jule_any_type29);;
							{
								auto &_match_expr{ (*(_164417_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1bbeb9b11:;
									{
										jule::Ptr<_1d8bd00bd_Const> _164721_c = (*(_164417_m))._field_Expr.cast_ptr<_1d8bd00bd_Const>(&__jule_any_type19);;
										if (_1d8bd4842_IsStr(_164721_c.ptr())) {
											if ((_163438_callToken == nullptr)) {
												jule::Ptr<_1ab16aab4_scopeChecker> _165033_root = _1ab16de3b_getHardRoot(_self_);;
												_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_165033_root))._field_calledFrom, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1d8bd2246_ReadStr(_164721_c.ptr()), &__jule_any_type4)}));
											} else {
												_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), _163438_callToken, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1d8bd2246_ReadStr(_164721_c.ptr()), &__jule_any_type4)}));
											};
											_1ab16d402_stop(_self_.ptr());
										};
									}
								}
								_match_end_1bbeb9aab:;
							};
						}
					}
					_match_end_1bbeb8acc:;
				};
			}
		}
		_match_end_1bbeb7cda:;
	};
}



inline void _1ab179386_processConstMatch(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab1678e6_Match>* _166242_tm, jule::Ptr<_1ab0ee99e_MatchCase>* _166259_m) {
	{
		auto expr = &((*((*(_166242_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbeb8835:;
		if (it != expr_end) {
			jule::I64 _166314_i = it - expr->begin();
			jule::Ptr<_1ab16852e_Case> _166321_c = *it;
			{
				if (((*(_166321_c))._field_Scope != nullptr)) {
					jule::Ptr<_1ab0c1e7c_Token> _166525_token = nullptr;;
					if (((!((*((*(_166242_tm))))._field_TypeMatch)) && ((*((*(_166321_c))._field_Scope))._field_Stmts.len() > 0LL))) {
						_166525_token=(*((*((*((*(_166259_m))))._field_Cases[_166314_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1ab179023_checkComptimePanic(_self_, _166525_token, &((*(_166321_c))._field_Scope));
					(*((*(_166242_tm))))._field_Default=_166321_c;
					(*((*(_166242_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1bbeb8835:;
			++it;
			_166314_i++;
			goto _iter_begin_1bbeb8835;
		}
		_iter_end_1bbeb8835:;
	};
	if (((*((*(_166259_m))))._field_Default != nullptr)) {
		(*((*(_166242_tm))))._field_Cases=nullptr;
		(*((*(_166242_tm))))._field_Default=_1ab178bb0_checkDefault(_self_, (*(_166242_tm)), (*((*(_166259_m))))._field_Default);
		if (((*((*(_166242_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1ab0c1e7c_Token> _167925_token = nullptr;;
			if ((!((*((*(_166242_tm))))._field_TypeMatch))) {
				_167925_token=(*((*((*((*(_166259_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1ab179023_checkComptimePanic(_self_, _167925_token, &((*((*((*(_166242_tm))))._field_Default))._field_Scope));
		};
	} else {
		(*((*(_166242_tm))))._field_Cases=nullptr;
	};
}



inline void _1ab17963e_checkTypeMatch(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0ee99e_MatchCase>* _169139_m) {
	jule::Ptr<_1ab22a228_Data> _169213_d = _1ab2499ea_eval(_1ab1b0763_eval((*(_self_))._field_s, jule::Trait<_1ab27a553_Lookup>(_self_, 0)), (*((*(_169139_m))))._field_Expr);;
	if ((_169213_d == nullptr)) {
		return;;
	};
	if (((!((*((*(_169213_d))._field_Kind))._field_Generic)) && (!(((((_1ab25d16d_Prim((*(_169213_d))._field_Kind.ptr()) != nullptr) && _1ab266d14_IsAny(_1ab25d16d_Prim((*(_169213_d))._field_Kind.ptr()).ptr())) || (_1ab25e977_Trait((*(_169213_d))._field_Kind.ptr()) != nullptr)) || (_1ab25dba7_TypeEnum((*(_169213_d))._field_Kind.ptr()) != nullptr)))))) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169139_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab1678e6_Match> _170313_tm = jule::new_ptr<_1ab1678e6_Match>(_1ab1678e6_Match{._field_Expr=_169213_d, ._field_TypeMatch=true, });;
	(*(_170313_tm))._field_Comptime=(*((*((*(_170313_tm))._field_Expr))._field_Kind))._field_Generic;
	if (((!((*(_170313_tm))._field_Comptime)) && ((*((*(_169139_m))))._field_Default != nullptr))) {
		(*(_170313_tm))._field_Default=_1ab178bb0_checkDefault(_self_, _170313_tm, (*((*(_169139_m))))._field_Default);
	};
	_1ab1787b4_checkCases(_self_, _169139_m, _170313_tm, _169213_d);
	if ((*(_170313_tm))._field_Comptime) {
		_1ab179386_processConstMatch(_self_, &(_170313_tm), _169139_m);
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_170313_tm, &__jule_any_type47)); };
}



inline void _1ab1798e7_checkCommonMatch(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0ee99e_MatchCase>* _172441_m) {
	jule::Ptr<_1ab22a228_Data> _172517_d = nullptr;;
	if (((*((*(_172441_m))))._field_Expr == nullptr)) {
		_172517_d=jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, ._field_Constant=static__1d8bd0a91_NewBool(true)});
		(*(_172517_d))._field_Model=jule::Any((*(_172517_d))._field_Constant, &__jule_any_type19);
	} else {
		_172517_d=_1ab24a17c_evalExpr(_1ab1b0763_eval((*(_self_))._field_s, jule::Trait<_1ab27a553_Lookup>(_self_, 0)), (*((*(_172441_m))))._field_Expr);
		if ((_172517_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1ab1678e6_Match> _173913_mc = jule::new_ptr<_1ab1678e6_Match>(_1ab1678e6_Match{._field_Expr=_172517_d, ._field_Comptime=(((((*((*(_172441_m))))._field_Expr != nullptr) && _1ab22aaec_IsConst(_172517_d.ptr())) && _1d8bd45ab_IsBool((*(_172517_d))._field_Constant.ptr())) && _1d8bd1eb0_ReadBool((*(_172517_d))._field_Constant.ptr())), });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_173913_mc, &__jule_any_type47)); };
	if (((!((*(_173913_mc))._field_Comptime)) && ((*((*(_172441_m))))._field_Default != nullptr))) {
		(*(_173913_mc))._field_Default=_1ab178bb0_checkDefault(_self_, _173913_mc, (*((*(_172441_m))))._field_Default);
	};
	_1ab1787b4_checkCases(_self_, _172441_m, _173913_mc, _172517_d);
	if ((*(_173913_mc))._field_Comptime) {
		_1ab179386_processConstMatch(_self_, &(_173913_mc), _172441_m);
	};
}



inline void _1ab179ba0_checkMatch(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0ee99e_MatchCase> _176234_m) {
	if ((*(_176234_m))._field_TypeMatch) {
		_1ab17963e_checkTypeMatch(_self_, &(_176234_m));
		return;;
	};
	_1ab1798e7_checkCommonMatch(_self_, &(_176234_m));
}



inline void _1ab179e58_checkFall(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0e5203_FallSt> _177029_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*(_self_))._field_scope))._field_Stmts.len() + 1LL) < (*((*(_self_))._field_scope))._field_Stmts.len())) || _1ab16d91e_isDeferred(_self_))) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_177029_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1ab16852e_Case* _177813_case = ((_1ab16852e_Case*)((*(_self_))._field_cse));;
	if ((*((*(_177813_case))._field_Owner))._field_Comptime) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_177029_f))._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_177813_case))._field_Next == nullptr)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_177029_f))._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1ab1a8629_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1ab168b28_FallSt>(_1ab168b28_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_177813_case))._field_Next))}), &__jule_any_type48)); };
}



inline jule::Ptr<_1ab165d56_BreakSt> _1ab17a299_checkBreakWithLabel(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0ec35e_BreakSt> _179339_b) {
	jule::Ptr<_1ab165d56_BreakSt> _179413_brk = _1ab17a5da_checkPlainBreak(_self_, _179339_b);;
	if ((_179413_brk == nullptr)) {
		return nullptr;;
	};
	(*(_179413_brk))._field_It=0LLU;
	(*(_179413_brk))._field_Mtch=0LLU;
	jule::Ptr<_1ab16961d_scopeLabel> _180413_label = _1ab160cc9_findLabelParent(&((*((*(_179339_b))._field_Label))._field_Kind), (*(_self_))._field_parent);;
	if ((_180413_label == nullptr)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_180413_label))._field_used=true;
	if ((((*(_180413_label))._field_pos + 1LL) >= (*((*((*(_180413_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _18179_i = ((*(_180413_label))._field_pos + 1LL);;
	if ((_18179_i >= (*((*((*(_180413_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _182117_st = (*((*((*(_180413_label))._field_scope))._field_scope))._field_Stmts[_18179_i];;
		{
			auto &_match_expr{ _182117_st };
			
			if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1bbee4289:;
				{
					(*(_179413_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182117_st.cast_ptr<_1ab1646e5_InfIter>(&__jule_any_type36)));
				}
			}
			else if (_match_expr.type == &__jule_any_type40) {
				_case_begin_1bbee3ed1:;
				{
					(*(_179413_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182117_st.cast_ptr<_1ab1655e7_RangeIter>(&__jule_any_type40)));
				}
			}
			else if (_match_expr.type == &__jule_any_type38) {
				_case_begin_1bbee4047:;
				{
					(*(_179413_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182117_st.cast_ptr<_1ab164b9b_WhileIter>(&__jule_any_type38)));
				}
			}
			else if (_match_expr.type == &__jule_any_type47) {
				_case_begin_1bbee40ad:;
				{
					(*(_179413_brk))._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182117_st.cast_ptr<_1ab1678e6_Match>(&__jule_any_type47)));
				}
			}
			else {
				_case_begin_1bbee3e6a:;
				{
					_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_1bbee3e15:;
		};
	};
	if (((*(_179413_brk))._field_It != 0LLU)) {
		if ((!(_1ab174d21_checkValidBreakLabel(_self_, (*(_179413_brk))._field_It)))) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_179413_brk))._field_Mtch != 0LLU)) {
		if ((!(_1ab174d21_checkValidBreakLabel(_self_, (*(_179413_brk))._field_Mtch)))) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	return _179413_brk;;
}



inline jule::Ptr<_1ab165d56_BreakSt> _1ab17a5da_checkPlainBreak(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0ec35e_BreakSt> _185135_b) {
	if (_1ab16d91e_isDeferred(_self_)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_185135_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab16aab4_scopeChecker> _185713_scope = _self_;;
	_julec_label_1bbeeb967:;
	{
		
		if ((((((*(_185713_scope))._field_it == 0LLU) && ((*(_185713_scope))._field_cse == 0LLU)) && ((*(_185713_scope))._field_parent != nullptr)) && ((*(_185713_scope))._field_owner == nullptr))) {
			_case_begin_1bbeebc20:;
			{
				_185713_scope=(*(_185713_scope))._field_parent;
				goto _julec_label_1bbeeb967;
			}
		}
		else if (((*(_185713_scope))._field_it != 0LLU)) {
			_case_begin_1bbeebc97:;
			{
				return jule::new_ptr<_1ab165d56_BreakSt>(_1ab165d56_BreakSt{._field_It=(*(_185713_scope))._field_it, });;
			}
		}
		else if (((*(_185713_scope))._field_cse != 0LLU)) {
			_case_begin_1bbeebd1e:;
			{
				return jule::new_ptr<_1ab165d56_BreakSt>(_1ab165d56_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(((_1ab16852e_Case*)((*(_185713_scope))._field_cse))))._field_Owner))});;
			}
		}
		_match_end_1bbeebb54:;
	};
	_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_185135_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1ab17a893_checkBreak(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0ec35e_BreakSt> _187330_b) {
	if (((*(_187330_b))._field_Label != nullptr)) {
		jule::Ptr<_1ab165d56_BreakSt> _187517_brk = _1ab17a299_checkBreakWithLabel(_self_, _187330_b);;
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_187517_brk, &__jule_any_type49)); };
		return;;
	};
	jule::Ptr<_1ab165d56_BreakSt> _188013_brk = _1ab17a5da_checkPlainBreak(_self_, _187330_b);;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_188013_brk, &__jule_any_type49)); };
}



inline void _1ab17ab4b_checkRet(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0ea5b0_RetSt> _188432_r) {
	if (_1ab16d91e_isDeferred(_self_)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_188432_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab168ead_RetSt> _188913_rt = jule::new_ptr<_1ab168ead_RetSt>(_1ab168ead_RetSt{._field_Func=(*(_1ab16dba5_getRoot(_self_)))._field_owner, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_188913_rt, &__jule_any_type50)); };
	jule::Ptr<_1ab222ae4_retTypeChecker> _189413_rtc = jule::new_ptr<_1ab222ae4_retTypeChecker>(_1ab222ae4_retTypeChecker{._field_sc=_self_, ._field_f=(*(_188913_rt))._field_Func, ._field_errorToken=(*(_188432_r))._field_Token, });;
	jule::Bool _18999_ok = _1ab223809_check(_189413_rtc.ptr(), &((*(_188432_r))._field_Expr));;
	if ((!(_18999_ok))) {
		return;;
	};
	if (((*(_188432_r))._field_Expr != nullptr)) {
		(*(_188913_rt))._field_Expr=(*(_189413_rtc))._field_model;
	};
}



inline void _1ab17ae04_checkUseExpr(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0dc151_UseExpr> _190932_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_190932_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1ab16d91e_isDeferred(_self_)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_190932_ue))._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*(_self_))._field_i + 1LL) < (*((*(_self_))._field_tree))._field_Stmts.len())) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_190932_ue))._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1ab17b1ac_checkNode(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Any* _192534_node) {
	{
		auto &_match_expr{ (*(_192534_node)) };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1bc00b999:;
			{
				_1ab1717bd_checkAnonScope(_self_, (*(_192534_node)).cast_ptr<_1ab0e7469_ScopeTree>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bc00c00a:;
			{
				_1ab1700b3_checkVarDecl(_self_, (*(_192534_node)).cast_ptr<_1ab0ea1d6_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bc00bcc9:;
			{
				_1ab170624_checkTypeAliasDecl(_self_, (*(_192534_node)).cast_ptr<_1ab0edcab_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1bc00c280:;
			{
				_1ab171dd9_checkExpr(_self_, (*(_192534_node)).cast_ptr<_1ab0db77c_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1bc00c2e6:;
			{
				_1ab172824_checkConditional(_self_, (*(_192534_node)).cast_ptr<_1ab0ed56e_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1bc00c35c:;
			{
				_1ab17468e_checkIter(_self_, (*(_192534_node)).cast_ptr<_1ab0eac53_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1bc00c3c3:;
			{
				_1ab17541a_checkCont(_self_, (*(_192534_node)).cast_ptr<_1ab0ec738_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1bc00c439:;
			{
				_1ab1756c3_checkLabel(_self_, (*(_192534_node)).cast_ptr<_1ab0e4a2c_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1bc00c4a0:;
			{
				_1ab17597b_pushGoto(_self_, (*(_192534_node)).cast_ptr<_1ab0e4e06_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1bc00c516:;
			{
				_1ab177939_checkAssignSt(_self_, (*(_192534_node)).cast_ptr<_1ab0e5de6_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1bc00c57c:;
			{
				_1ab179ba0_checkMatch(_self_, (*(_192534_node)).cast_ptr<_1ab0ee99e_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1bc00c5e3:;
			{
				_1ab179e58_checkFall(_self_, (*(_192534_node)).cast_ptr<_1ab0e5203_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1bc00c659:;
			{
				_1ab17a893_checkBreak(_self_, (*(_192534_node)).cast_ptr<_1ab0ec35e_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1bc00c6c0:;
			{
				_1ab17ab4b_checkRet(_self_, (*(_192534_node)).cast_ptr<_1ab0ea5b0_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1bc00c736:;
			{
				_1ab17ae04_checkUseExpr(_self_, (*(_192534_node)).cast_ptr<_1ab0dc151_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_1bc00bb42:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1bc00badc:;
	};
}



inline void _1ab17b3aa_checkResult(jule::Ptr<_1ab16aab4_scopeChecker> _self_) {
	_1ab0e6d09_Stmt _196313_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*((*(_self_))._field_tree))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _196313_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1bc016531:;
			{
				jule::Ptr<_1ab0dc151_UseExpr> _196617_ue = _196313_stmt._field_Data.cast_ptr<_1ab0dc151_UseExpr>(&__jule_any_type63);;
				jule::Ptr<_1ab22a228_Data> _196717_d = _1ab24a17c_evalExpr(_1ab1b0763_eval((*(_self_))._field_s, jule::Trait<_1ab27a553_Lookup>(_self_, 0)), (*(_196617_ue))._field_Expr);;
				if ((_196717_d == nullptr)) {
					return;;
				};
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_196717_d, &__jule_any_type24)); };
				jule::Ptr<_1ab222ae4_retTypeChecker> _197217_rtc = jule::new_ptr<_1ab222ae4_retTypeChecker>(_1ab222ae4_retTypeChecker{._field_sc=_self_, ._field_types=_1ab121eee_Types((*(_self_))._field_result.ptr()), ._field_errorToken=(*((*(_196617_ue))._field_Expr))._field_Token, });;
				_1ab223809_check(_197217_rtc.ptr(), &((*(_196617_ue))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1bc015bd4:;
			{
				jule::Ptr<_1ab0db77c_Expr> _197917_expr = _196313_stmt._field_Data.cast_ptr<_1ab0db77c_Expr>(&__jule_any_type52);;
				jule::Ptr<_1ab22a228_Data> _198017_d = _1ab24a17c_evalExpr(_1ab1b0763_eval((*(_self_))._field_s, jule::Trait<_1ab27a553_Lookup>(_self_, 0)), _197917_expr);;
				if ((_198017_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_198017_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1bc01b558:;
						{
							jule::Ptr<_1ab1189b8_BuiltinErrorCallExprModel> _198621_m = (*(_198017_d))._field_Model.cast_ptr<_1ab1189b8_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_1ab171b31_processErrorCall(_self_, &(_198621_m), (*(_197917_expr))._field_Token);
							{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_198017_d, &__jule_any_type24)); };
						}
					}
					else {
						_case_begin_1bc01b778:;
						{
							return;;
						}
					}
					_match_end_1bc01b723:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_1bc015c4a:;
			{
				_1ab17b1ac_checkNode(_self_, &(_196313_stmt._field_Data));
			}
		}
		else {
			_case_begin_1bc015b6d:;
			{
				_1ab17b1ac_checkNode(_self_, &(_196313_stmt._field_Data));
				return;;
			}
		}
		_match_end_1bc01462d:;
	};
	(*(_self_))._field_result=nullptr;
}



inline void _1ab17b5a8_checkTree(jule::Ptr<_1ab16aab4_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _200813_n = (*((*(_self_))._field_tree))._field_Stmts.len();;
	if (((*(_self_))._field_result != nullptr)) {
		(_200813_n)--;
	};
	for (; ((*(_self_))._field_i < _200813_n); ((*(_self_))._field_i)++) {
		{
			_1ab0e6d09_Stmt _201617_stmt = (*((*(_self_))._field_tree))._field_Stmts[(*(_self_))._field_i];;
			_1ab17b1ac_checkNode(_self_, &(_201617_stmt._field_Data));
			if (_1ab16d688_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1bc024eac:;
	}
	_iter_end_1bc024eac:;;
	if ((((*(_self_))._field_result != nullptr) && ((*((*(_self_))._field_tree))._field_Stmts.len() != 0LL))) {
		_1ab17b3aa_checkResult(_self_);
	};
}



inline void _1ab17b91b_checkGoto(_1ab16aab4_scopeChecker* _self_, jule::Ptr<_1ab169ba1_scopeGoto>* _202733_gt, jule::Ptr<_1ab16961d_scopeLabel>* _202754_label) {
	jule::Ptr<_1ab16aab4_scopeChecker> _202813_gtsc = (*((*(_202733_gt))))._field_scope;;
	while ((((*(_202813_gtsc))._field_childIndex - 1LL) > (*((*((*(_202754_label))))._field_scope))._field_childIndex)) {
		{
			_202813_gtsc=(*(_202813_gtsc))._field_parent;
		}
	_iter_next_1bc0281be:;
	}
	_iter_end_1bc0281be:;;
	jule::I64 _203313_n = 0LL;;
	if (((*(_202813_gtsc))._field_scope == (*((*((*(_202754_label))))._field_scope))._field_scope)) {
		if (((*((*(_202733_gt))))._field_pos > (*((*(_202754_label))))._field_pos)) {
			return;;
		};
		_203313_n=(*((*(_202733_gt))))._field_pos;
	};
	jule::I64 _204613_i = ((*((*(_202754_label))))._field_pos - 1LL);;
	if ((_203313_n == 0LL)) {
		{
			auto expr = &((*((*((*((*(_202754_label))))._field_scope))._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc02b359:;
			if (it != expr_end) {
				jule::I64 _204917_j = it - expr->begin();
				jule::Any _204920_stmt = *it;
				{
					if (_1ab161516_stmtIsGotoScope(&(_204920_stmt), &((*(_202813_gtsc))._field_scope))) {
						_203313_n=_204917_j;
						goto _iter_end_1bc02b359;
					};
				}
				_iter_next_1bc02b359:;
				++it;
				_204917_j++;
				goto _iter_begin_1bc02b359;
			}
			_iter_end_1bc02b359:;
		};
	};
	for (; (_204613_i >= _203313_n); (_204613_i)--) {
		{
			jule::Any _205917_stmt = (*((*((*((*(_202754_label))))._field_scope))._field_scope))._field_Stmts[_204613_i];;
			if (_1ab16334d_stmtIsDef(&(_205917_stmt))) {
				_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_202733_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*((*((*(_202733_gt))))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_1bc02c448:;
	}
	_iter_end_1bc02c448:;;
}



inline void _1ab17bb19_checkGotos(_1ab16aab4_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc02d5c0:;
		if (it != expr_end) {
			jule::Ptr<_1ab169ba1_scopeGoto> _206821_gt = *it;
			{
				jule::Ptr<_1ab16961d_scopeLabel> _206917_label = _1ab16e90e_findLabelAll(_self_, &((*((*((*(_206821_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_206917_label == nullptr)) {
					_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_206821_gt))._field_gt))._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_206821_gt))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
					goto _iter_next_1bc02d5c0;
				};
				(*((*(_206821_gt))._field_st))._field_Label=(*(_206917_label))._field_label;
				(*(_206917_label))._field_used=true;
				_1ab17b91b_checkGoto(_self_, &(_206821_gt), &(_206917_label));
			}
			_iter_next_1bc02d5c0:;
			++it;
			goto _iter_begin_1bc02d5c0;
		}
		_iter_end_1bc02d5c0:;
	};
}



inline void _1ab17bd17_checkLabels(_1ab16aab4_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc03112d:;
		if (it != expr_end) {
			jule::Ptr<_1ab16961d_scopeLabel> _208116_l = *it;
			{
				if ((!((*(_208116_l))._field_used))) {
					_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_208116_l))._field_token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_208116_l))._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1bc03112d:;
			++it;
			goto _iter_begin_1bc03112d;
		}
		_iter_end_1bc03112d:;
	};
}



inline void _1ab17c015_checkVars(_1ab16aab4_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc033471:;
		if (it != expr_end) {
			jule::Ptr<_1ab1c7a66_Var> _208916_v = *it;
			{
				if (((((!((*(_208916_v))._field_Used)) && (!((*(_208916_v))._field_Constant))) && (!(_1ab0c48db_IsIgnoreIdent((*(_208916_v))._field_Ident)))) && (!(_1ab0c4ba5_IsAnonIdent((*(_208916_v))._field_Ident))))) {
					_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_208916_v))._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_208916_v))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1bc033471:;
			++it;
			goto _iter_begin_1bc033471;
		}
		_iter_end_1bc033471:;
	};
}



inline void _1ab17c213_checkAliases(_1ab16aab4_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc035033:;
		if (it != expr_end) {
			jule::Ptr<_1ab259c2a_TypeAlias> _209716_a = *it;
			{
				if ((((!((*(_209716_a))._field_Used)) && (!(_1ab0c48db_IsIgnoreIdent((*(_209716_a))._field_Ident)))) && (!(_1ab0c4ba5_IsAnonIdent((*(_209716_a))._field_Ident))))) {
					_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_209716_a))._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_209716_a))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1bc035033:;
			++it;
			goto _iter_begin_1bc035033;
		}
		_iter_end_1bc035033:;
	};
}



inline void _1ab17c576_check(jule::Ptr<_1ab16aab4_scopeChecker> _self_, jule::Ptr<_1ab0e7469_ScopeTree>* _210530_tree, jule::Ptr<_1ab1637b0_Scope>* _210553_s) {
	(*((*(_210553_s))))._field_Deferred=(*((*(_210530_tree))))._field_Deferred;
	(*((*(_210553_s))))._field_Unsafety=(*((*(_210530_tree))))._field_Unsafety;
	jule::I64 _21099_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*(_self_))._field_tree=(*(_210530_tree));
	(*(_self_))._field_scope=(*(_210553_s));
	_1ab17b5a8_checkTree(_self_);
	if ((_21099_errors == (*((*(_self_))._field_s))._field_errors.len())) {
		_1ab17c015_checkVars(_self_.ptr());
		_1ab17c213_checkAliases(_self_.ptr());
		if (_1ab16d204_isRoot(_self_.ptr())) {
			_1ab17bb19_checkGotos(_self_.ptr());
			_1ab17bd17_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1ab16aab4_scopeChecker> _1ab17c80c_newChildChecker(jule::Ptr<_1ab16aab4_scopeChecker> _self_) {
	jule::Ptr<_1ab16aab4_scopeChecker> _212913_base = _1ab16058c_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_212913_base))._field_parent=_self_;
	(*(_212913_base))._field_labels=(*(_self_))._field_labels;
	(*(_212913_base))._field_gotos=(*(_self_))._field_gotos;
	(*(_212913_base))._field_childIndex=static_cast<jule::I64>(((*(_self_))._field_childIndex + 1LL));
	return _212913_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab16aab4_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1ab17db71_checkCdef(_1ab17d764_directiveChecker* _self_, jule::Ptr<_1ab0d6865_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1bc03eb64:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1ab11cdeb_Fn>(&__jule_any_type64)))._field_Binded) {
					goto _match_end_1bc03eda6;
				};
				goto _case_begin_1bc03ee0b;
			}
		}
		else {
			_case_begin_1bc03ee0b:;
			{
				_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1629_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1bc03eda6:;
	};
	if (((*((*(_1629_d))))._field_Args.len() > 0LL)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ab17de29_checkTypedef(_1ab17d764_directiveChecker* _self_, jule::Ptr<_1ab0d6865_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bc04299c:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1ab10803a_Struct>(&__jule_any_type65)))._field_Binded) {
					goto _match_end_1bc042bde;
				};
				goto _case_begin_1bc042c44;
			}
		}
		else {
			_case_begin_1bc042c44:;
			{
				_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3232_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1bc042bde:;
	};
	if (((*((*(_3232_d))))._field_Args.len() > 0LL)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ab17e1d2_checkNamespace(_1ab17d764_directiveChecker* _self_, jule::Ptr<_1ab0d6865_Directive>* _4838_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bc045d9b:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1ab10803a_Struct>(&__jule_any_type65)))._field_Binded))) {
					_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1bc045ae3:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1ab11cdeb_Fn>(&__jule_any_type64)))._field_Binded))) {
					_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bc045b59:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8)))._field_Binded))) {
					_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1bc045a7c:;
			{
				_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1bc045a27:;
	};
	if (((*((*(_4838_d))))._field_Args.len() == 0LL)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4838_d))))._field_Args.len() > 1LL)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1ab0c1e7c_Token> _739_arg = (*((*(_4838_d))))._field_Args[0LL];;
	if (((*(_739_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_739_arg))._field_Kind[0LL] != '\"')) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4838_d))))._field_Args[0LL]))._field_Kind=(*(_739_arg))._field_Kind.slice(1LL, ((*(_739_arg))._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bc050e2d:;
			{
				if ((_1ab253a8c_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_1ab0d6865_Directive> _9021_typedef = jule::new_ptr<_1ab0d6865_Directive>(_1ab0d6865_Directive{._field_Tag=(*((*(_4838_d))))._field_Tag, });;
					(*((*(_9021_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					{ jule::Slice<jule::Ptr<_1ab0d6865_Directive>> &__jule_push_dest = (*((*(_self_))._field_d)); __jule_push_dest.push(_9021_typedef); };
				};
			}
		}
		_match_end_1bc050dc8:;
	};
}



inline void _1ab17e48a_checkDeprecated(_1ab17d764_directiveChecker* _self_, jule::Ptr<_1ab0d6865_Directive>* _9939_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bc052061:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1ab10803a_Struct>(&__jule_any_type65)))._field_Binded) {
					_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1bc053293:;
			{
				jule::Ptr<_1ab11cdeb_Fn> _10617_f = (*(_self_))._field_o.cast_ptr<_1ab11cdeb_Fn>(&__jule_any_type64);;
				if ((((*(_10617_f))._field_Binded || _1ab11d88b_IsEntryPoint(_10617_f.ptr())) || _1ab11db22_IsInit(_10617_f.ptr()))) {
					_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bc053309:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8)))._field_Binded) {
					_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1bc052d31:;
			{
				_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1bc052ccb:;
	};
	if (((*((*(_9939_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9939_d))))._field_Args.len() > 1LL)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1ab0c1e7c_Token> _1259_arg = (*((*(_9939_d))))._field_Args[0LL];;
	if (((*(_1259_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_1259_arg))._field_Kind[0LL] != '\"')) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9939_d))))._field_Args[0LL]))._field_Kind=(*(_1259_arg))._field_Kind.slice(1LL, ((*(_1259_arg))._field_Kind.len() - 1LL));
}



inline void _1ab17e743_checkTest(_1ab17d764_directiveChecker* _self_, jule::Ptr<_1ab0d6865_Directive>* _13929_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1bc059255:;
			{
				jule::Ptr<_1ab11cdeb_Fn> _14213_f = (*(_self_))._field_o.cast_ptr<_1ab11cdeb_Fn>(&__jule_any_type64);;
				if ((((!((*(_14213_f))._field_Binded)) && (!(_1ab11db22_IsInit(_14213_f.ptr())))) && (!(_1ab11d88b_IsEntryPoint(_14213_f.ptr()))))) {
					goto _match_end_1bc05d9a7;
				};
				if (_1ab11d605_IsMethod(_14213_f.ptr())) {
					_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_14213_f))._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1bc05d9a7;
				};
				goto _case_begin_1bc05da0c;
			}
		}
		else {
			_case_begin_1bc05da0c:;
			{
				_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_13929_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1bc05d9a7:;
	};
	if (((*((*(_13929_d))))._field_Args.len() > 0LL)) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ab17e9eb_checkDirective(_1ab17d764_directiveChecker* _self_, jule::Ptr<_1ab0d6865_Directive>* _16038_d) {
	{
		auto &_match_expr{ (*((*((*(_16038_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_1bc06376a:;
			{
				_1ab17db71_checkCdef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_1bc063429:;
			{
				_1ab17de29_checkTypedef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_1bc063490:;
			{
				_1ab17e1d2_checkNamespace(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_1bc063506:;
			{
				_1ab17e48a_checkDeprecated(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_1bc06356c:;
			{
				_1ab17e743_checkTest(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_1bc06455c:;
			{
				_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1bc0633b3:;
			{
				_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1bc06333b:;
	};
}



inline void _1ab17ebe9_check(_1ab17d764_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc066295:;
		if (it != expr_end) {
			jule::Ptr<_1ab0d6865_Directive> _18121_d = *it;
			{
				_1ab17e9eb_checkDirective(_self_, &(_18121_d));
			}
			_iter_next_1bc066295:;
			++it;
			goto _iter_begin_1bc066295;
		}
		_iter_end_1bc066295:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab17d764_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab1851c7_SelectPackage(_1ab184bdd_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1ab1c7a66_Var> _1ab1855c3_FindVar(_1ab184bdd_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1ab18722e_isLookupable(_self_, &(_18926_ident))))) {
		return nullptr;;
	};
	return _1ab1821c4_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18926_ident), false);;
}



inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab1859be_FindTypeAlias(_1ab184bdd_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1ab18722e_isLookupable(_self_, &(_20132_ident))))) {
		return nullptr;;
	};
	return _1ab182647_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20132_ident), false);;
}



inline jule::Ptr<_1ab10803a_Struct> _1ab185dba_FindStruct(_1ab184bdd_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1ab18722e_isLookupable(_self_, &(_21329_ident))))) {
		return nullptr;;
	};
	return _1ab182a76_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21329_ident), false);;
}



inline jule::Ptr<_1ab11cdeb_Fn> _1ab1862b6_FindFn(_1ab184bdd_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1ab18722e_isLookupable(_self_, &(_22525_ident))))) {
		return nullptr;;
	};
	return _1ab18302c_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22525_ident), false);;
}



inline jule::Ptr<_1ab131195_Trait> _1ab186607_FindTrait(_1ab184bdd_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1ab18722e_isLookupable(_self_, &(_23628_ident))))) {
		return nullptr;;
	};
	return _1ab18336d_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23628_ident));;
}



inline jule::Ptr<_1ab133890_Enum> _1ab186948_FindEnum(_1ab184bdd_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1ab18722e_isLookupable(_self_, &(_24727_ident))))) {
		return nullptr;;
	};
	return _1ab1836e2_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24727_ident));;
}



inline jule::Ptr<_1ab13509a_TypeEnum> _1ab186c89_FindTypeEnum(_1ab184bdd_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1ab18722e_isLookupable(_self_, &(_25831_ident))))) {
		return nullptr;;
	};
	return _1ab183a66_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25831_ident));;
}



inline jule::Bool _1ab18722e_isLookupable(_1ab184bdd_ImportInfo* _self_, jule::Str* _26728_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1ab187570_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1ab187570_existIdent(_self_, (*(_26728_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1ab187570_existIdent(_1ab184bdd_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc07b7d8:;
		if (it != expr_end) {
			jule::Ptr<_1ab0c1e7c_Token> *_28816_sident = it;
			{
				if (((*((*(_28816_sident))))._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1bc07b7d8:;
			++it;
			goto _iter_begin_1bc07b7d8;
		}
		_iter_end_1bc07b7d8:;
	};
	return false;;
}



inline jule::Bool _1ab187806_isAccessibleViaSelection(_1ab184bdd_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1ab187570_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab184bdd_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab1880a9_SelectPackage(_1ab187b14_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1ab1c7a66_Var> _1ab1884a5_FindVar(_1ab187b14_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1ab1821c4_findVarInPackage(&((*(_self_))._field_Files), &(_31426_ident), _31438_binded);;
}



inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab1888a1_FindTypeAlias(_1ab187b14_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1ab182647_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32032_ident), _32044_binded);;
}



inline jule::Ptr<_1ab10803a_Struct> _1ab188c9c_FindStruct(_1ab187b14_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1ab182a76_findStructInPackage(&((*(_self_))._field_Files), &(_32629_ident), _32641_binded);;
}



inline jule::Ptr<_1ab11cdeb_Fn> _1ab189198_FindFn(_1ab187b14_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1ab18302c_findFnInPackage(&((*(_self_))._field_Files), &(_33225_ident), _33237_binded);;
}



inline jule::Ptr<_1ab131195_Trait> _1ab1894d9_FindTrait(_1ab187b14_Package* _self_, jule::Str _33828_ident) {
	return _1ab18336d_findTraitInPackage(&((*(_self_))._field_Files), &(_33828_ident));;
}



inline jule::Ptr<_1ab133890_Enum> _1ab18982a_FindEnum(_1ab187b14_Package* _self_, jule::Str _34427_ident) {
	return _1ab1836e2_findEnumInPackage(&((*(_self_))._field_Files), &(_34427_ident));;
}



inline jule::Ptr<_1ab13509a_TypeEnum> _1ab189b6b_FindTypeEnum(_1ab187b14_Package* _self_, jule::Str _35031_ident) {
	return _1ab183a66_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35031_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab187b14_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab14bc71_comptimeTypeInfo> _1ab1a4eb6_pushComptimeTypeInfo(_1ab1a4a54_commonSemaMeta* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _21744_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0ac94b:;
		if (it != expr_end) {
			jule::Ptr<_1ab14bc71_comptimeTypeInfo> _21821_t2 = *it;
			{
				if ((((*((*(_21821_t2))._field_base))._field_BindIdent == (*((*(_21744_t))))._field_BindIdent) && _1ab25b226_Equal((*(_21821_t2))._field_base, (*(_21744_t))))) {
					return _21821_t2;;
				};
			}
			_iter_next_1bc0ac94b:;
			++it;
			goto _iter_begin_1bc0ac94b;
		}
		_iter_end_1bc0ac94b:;
	};
	jule::Ptr<_1ab14bc71_comptimeTypeInfo> _22313_t1 = jule::new_ptr<_1ab14bc71_comptimeTypeInfo>(_1ab14bc71_comptimeTypeInfo{._field_base=(*(_21744_t))});;
	{ jule::Slice<jule::Ptr<_1ab14bc71_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_22313_t1); };
	return _22313_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a4a54_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab1a5b21_SelectPackage(_1ab1a567b_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)> _24632_selector) {
	return _1ab225388_SelectPackage((*(_self_))._field_file.ptr(), _24632_selector);;
}



inline jule::Ptr<_1ab1c7a66_Var> _1ab1a601c_FindVar(_1ab1a567b_Sema* _self_, jule::Str _25626_ident, jule::Bool _25638_binded) {
	jule::Ptr<_1ab1c7a66_Var> _25813_v = _1ab1821c4_findVarInPackage(&((*(_self_))._field_files), &(_25626_ident), _25638_binded);;
	if ((_25813_v != nullptr)) {
		return _25813_v;;
	};
	if ((!(_1ab1a2777_IsPub(_25626_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0b1499:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _26921_imp = *it;
			{
				if ((!(_1ab1a36bd_impIsLookupable(&(_26921_imp), &(_25626_ident))))) {
					goto _iter_next_1bc0b1499;
				};
				_25813_v=_1ab1855c3_FindVar(_26921_imp.ptr(), _25626_ident, _25638_binded);
				if (((_25813_v != nullptr) && _1ab1a8a25_isAccessibleDefine(_self_, (*(_25813_v))._field_Public, (*(_25813_v))._field_Token))) {
					return _25813_v;;
				};
			}
			_iter_next_1bc0b1499:;
			++it;
			goto _iter_begin_1bc0b1499;
		}
		_iter_end_1bc0b1499:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab1a6418_FindTypeAlias(_1ab1a567b_Sema* _self_, jule::Str _28832_ident, jule::Bool _28844_binded) {
	jule::Ptr<_1ab259c2a_TypeAlias> _29013_ta = _1ab182647_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28832_ident), _28844_binded);;
	if ((_29013_ta != nullptr)) {
		return _29013_ta;;
	};
	if ((!(_1ab1a2777_IsPub(_28832_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0b427c:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _30121_imp = *it;
			{
				if ((!(_1ab1a36bd_impIsLookupable(&(_30121_imp), &(_28832_ident))))) {
					goto _iter_next_1bc0b427c;
				};
				_29013_ta=_1ab1859be_FindTypeAlias(_30121_imp.ptr(), _28832_ident, _28844_binded);
				if (((_29013_ta != nullptr) && _1ab1a8a25_isAccessibleDefine(_self_, (*(_29013_ta))._field_Public, (*(_29013_ta))._field_Token))) {
					return _29013_ta;;
				};
			}
			_iter_next_1bc0b427c:;
			++it;
			goto _iter_begin_1bc0b427c;
		}
		_iter_end_1bc0b427c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab10803a_Struct> _1ab1a6814_FindStruct(_1ab1a567b_Sema* _self_, jule::Str _32029_ident, jule::Bool _32041_binded) {
	jule::Ptr<_1ab10803a_Struct> _32213_s = _1ab182a76_findStructInPackage(&((*(_self_))._field_files), &(_32029_ident), _32041_binded);;
	if ((_32213_s != nullptr)) {
		return _32213_s;;
	};
	if ((!(_1ab1a2777_IsPub(_32029_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0b7060:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _33321_imp = *it;
			{
				if ((!(_1ab1a36bd_impIsLookupable(&(_33321_imp), &(_32029_ident))))) {
					goto _iter_next_1bc0b7060;
				};
				_32213_s=_1ab185dba_FindStruct(_33321_imp.ptr(), _32029_ident, _32041_binded);
				if (((_32213_s != nullptr) && _1ab1a8a25_isAccessibleDefine(_self_, (*(_32213_s))._field_Public, (*(_32213_s))._field_Token))) {
					return _32213_s;;
				};
			}
			_iter_next_1bc0b7060:;
			++it;
			goto _iter_begin_1bc0b7060;
		}
		_iter_end_1bc0b7060:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab11cdeb_Fn> _1ab1a6c10_FindFn(_1ab1a567b_Sema* _self_, jule::Str _35125_ident, jule::Bool _35137_binded) {
	jule::Ptr<_1ab11cdeb_Fn> _35313_f = _1ab18302c_findFnInPackage(&((*(_self_))._field_files), &(_35125_ident), _35137_binded);;
	if ((_35313_f != nullptr)) {
		return _35313_f;;
	};
	if ((!(_1ab1a2777_IsPub(_35125_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0b9d43:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _36421_imp = *it;
			{
				if ((!(_1ab1a36bd_impIsLookupable(&(_36421_imp), &(_35125_ident))))) {
					goto _iter_next_1bc0b9d43;
				};
				_35313_f=_1ab1862b6_FindFn(_36421_imp.ptr(), _35125_ident, _35137_binded);
				if (((_35313_f != nullptr) && _1ab1a8a25_isAccessibleDefine(_self_, (*(_35313_f))._field_Public, (*(_35313_f))._field_Token))) {
					return _35313_f;;
				};
			}
			_iter_next_1bc0b9d43:;
			++it;
			goto _iter_begin_1bc0b9d43;
		}
		_iter_end_1bc0b9d43:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab131195_Trait> _1ab1a7051_FindTrait(_1ab1a567b_Sema* _self_, jule::Str _38328_ident) {
	jule::Ptr<_1ab131195_Trait> _38513_t = _1ab18336d_findTraitInPackage(&((*(_self_))._field_files), &(_38328_ident));;
	if ((_38513_t != nullptr)) {
		return _38513_t;;
	};
	if ((!(_1ab1a2777_IsPub(_38328_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0bc8e5:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _39621_imp = *it;
			{
				if ((!(_1ab1a36bd_impIsLookupable(&(_39621_imp), &(_38328_ident))))) {
					goto _iter_next_1bc0bc8e5;
				};
				_38513_t=_1ab186607_FindTrait(_39621_imp.ptr(), _38328_ident);
				if (((_38513_t != nullptr) && _1ab1a8a25_isAccessibleDefine(_self_, (*(_38513_t))._field_Public, (*(_38513_t))._field_Token))) {
					return _38513_t;;
				};
			}
			_iter_next_1bc0bc8e5:;
			++it;
			goto _iter_begin_1bc0bc8e5;
		}
		_iter_end_1bc0bc8e5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab133890_Enum> _1ab1a7392_FindEnum(_1ab1a567b_Sema* _self_, jule::Str _41527_ident) {
	jule::Ptr<_1ab133890_Enum> _41713_e = _1ab1836e2_findEnumInPackage(&((*(_self_))._field_files), &(_41527_ident));;
	if ((_41713_e != nullptr)) {
		return _41713_e;;
	};
	if ((!(_1ab1a2777_IsPub(_41527_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0c0475:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _42821_imp = *it;
			{
				if ((!(_1ab1a36bd_impIsLookupable(&(_42821_imp), &(_41527_ident))))) {
					goto _iter_next_1bc0c0475;
				};
				_41713_e=_1ab186948_FindEnum(_42821_imp.ptr(), _41527_ident);
				if (((_41713_e != nullptr) && _1ab1a8a25_isAccessibleDefine(_self_, (*(_41713_e))._field_Public, (*(_41713_e))._field_Token))) {
					return _41713_e;;
				};
			}
			_iter_next_1bc0c0475:;
			++it;
			goto _iter_begin_1bc0c0475;
		}
		_iter_end_1bc0c0475:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab13509a_TypeEnum> _1ab1a76d3_FindTypeEnum(_1ab1a567b_Sema* _self_, jule::Str _44731_ident) {
	jule::Ptr<_1ab13509a_TypeEnum> _44913_e = _1ab183a66_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44731_ident));;
	if ((_44913_e != nullptr)) {
		return _44913_e;;
	};
	if ((!(_1ab1a2777_IsPub(_44731_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0c3005:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _46021_imp = *it;
			{
				if ((!(_1ab1a36bd_impIsLookupable(&(_46021_imp), &(_44731_ident))))) {
					goto _iter_next_1bc0c3005;
				};
				_44913_e=_1ab186c89_FindTypeEnum(_46021_imp.ptr(), _44731_ident);
				if (((_44913_e != nullptr) && _1ab1a8a25_isAccessibleDefine(_self_, (*(_44913_e))._field_Public, (*(_44913_e))._field_Token))) {
					return _44913_e;;
				};
			}
			_iter_next_1bc0c3005:;
			++it;
			goto _iter_begin_1bc0c3005;
		}
		_iter_end_1bc0c3005:;
	};
	return nullptr;;
}



inline jule::Bool _1ab1a7ae0_isFlag(_1ab1a567b_Sema* _self_, jule::I64 _47621_flags) {
	return (((*(_self_))._field_flags & _47621_flags) == _47621_flags);;
}



inline void _1ab1a7d98_setCurrentFile(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab224d9e_SymbolTable> _47837_f) {
	(*(_self_))._field_file=_47837_f;
}



inline void _1ab1a82b6_pushErr(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab0c1e7c_Token> _48026_token, jule::Str _48041_fmt, jule::Slice<jule::Any> _48054_args) {
	{ jule::Slice<_1d7b81cb8_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ab1a3349_compilerErr(&(_48026_token), true, _48041_fmt, _48054_args)); };
}



inline void _1ab1a8629_pushSuggestion(_1ab1a567b_Sema* _self_, jule::Str _48533_fmt, jule::Slice<jule::Any> _48546_args) {
	{
		_1ab1a4878_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48533_fmt, _48546_args);
	};
}



inline jule::Bool _1ab1a8a25_isAccessibleDefine(_1ab1a567b_Sema* _self_, jule::Bool _49033_public, jule::Ptr<_1ab0c1e7c_Token> _49047_token) {
	return ((_49033_public || ((*(_49047_token))._field_File == nullptr)) || (_1ab0c7db7_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _1ab0c7db7_Dir((*(_49047_token))._field_File.ptr())));;
}



inline jule::Bool _1ab1a8ecb_isDuplicatedIdent(_1ab1a567b_Sema* _self_, jule::Uintptr _49732_itself, jule::Str* _49750_ident, jule::Bool _49762_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0c9a67:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> *_49816_f = it;
			{
				if (_1ab2283be_isDuplicatedIdent((*(_49816_f)).ptr(), _49732_itself, _49750_ident, _49762_binded)) {
					return true;;
				};
				{
					auto expr = &((*((*(_49816_f))))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc0ca45d:;
					if (it != expr_end) {
						jule::Ptr<_1ab184bdd_ImportInfo> *_50320_imp = it;
						{
							{
								auto expr = &((*((*(_50320_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bc0cb360:;
								if (it != expr_end) {
									jule::Ptr<_1ab0c1e7c_Token> *_50424_selected = it;
									{
										if (((*((*(_50424_selected))))._field_Kind == (*(_49750_ident)))) {
											return true;;
										};
									}
									_iter_next_1bc0cb360:;
									++it;
									goto _iter_begin_1bc0cb360;
								}
								_iter_end_1bc0cb360:;
							};
						}
						_iter_next_1bc0ca45d:;
						++it;
						goto _iter_begin_1bc0ca45d;
					}
					_iter_end_1bc0ca45d:;
				};
			}
			_iter_next_1bc0c9a67:;
			++it;
			goto _iter_begin_1bc0c9a67;
		}
		_iter_end_1bc0c9a67:;
	};
	return false;;
}



inline void _1ab1a933e_checkDirectives(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Slice<jule::Ptr<_1ab0d6865_Directive>>* _51440_d, jule::Any _51466_o) {
	_1ab17d764_directiveChecker _51513_dc = _1ab17d764_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1ab0d6865_Directive>>>)(_51440_d)), ._field_o=_51466_o};;
	_1ab17ebe9_check(&_51513_dc);
}



inline jule::Bool _1ab1a97e5_checkGenericQuantity(_1ab1a567b_Sema* _self_, jule::I64 _52339_required, jule::I64 _52354_given, jule::Ptr<_1ab0c1e7c_Token> _52366_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52339_required == 0LL) && (_52354_given > 0LL))) {
			_case_begin_1bc0cd9d3:;
			{
				_1ab1a82b6_pushErr(_self_, _52366_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52339_required > 0LL) && (_52354_given == 0LL))) {
			_case_begin_1bc0cda5a:;
			{
				_1ab1a82b6_pushErr(_self_, _52366_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52339_required < _52354_given)) {
			_case_begin_1bc0cdad2:;
			{
				_1ab1a82b6_pushErr(_self_, _52366_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52339_required > _52354_given)) {
			_case_begin_1bc0cdd02:;
			{
				_1ab1a82b6_pushErr(_self_, _52366_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bc0cd8e5:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bc0cd829:;
	};
}



inline jule::Bool _1ab1a9be1_isDuplicatedImportSelection(_1ab1a567b_Sema* _self_, jule::Uintptr _54242_itself, jule::Str* _54260_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0d1079:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> *_54316_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54316_imp))) == _54242_itself)) {
					goto _iter_end_1bc0d1079;
				};
				if (_1ab187570_existIdent((*(_54316_imp)).ptr(), (*(_54260_ident)))) {
					return true;;
				};
			}
			_iter_next_1bc0d1079:;
			++it;
			goto _iter_begin_1bc0d1079;
		}
		_iter_end_1bc0d1079:;
	};
	return false;;
}



inline jule::Any _1ab1aa0dc_getImportDef(_1ab1a567b_Sema* _self_, jule::Str* _55528_ident, jule::Ptr<_1ab184bdd_ImportInfo>* _55545_imp) {
	if ((_1ab3480c1_findPackageBuiltinDef(&((*((*(_55545_imp))))._field_LinkPath), _55528_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55545_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0d2e6b:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _55921_f = *it;
			{
				;
				jule::Any _56217_def = _1ab227e18_defByIdent(_55921_f.ptr(), _55528_ident, false);;
				if ((_56217_def != nullptr)) {
					return _56217_def;;
				};
			}
			_iter_next_1bc0d2e6b:;
			++it;
			goto _iter_begin_1bc0d2e6b;
		}
		_iter_end_1bc0d2e6b:;
	};
	return nullptr;;
}



inline jule::Bool _1bc0d9923_checkImportSelection(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab0c1e7c_Token>* _57043_ident, jule::Ptr<_1ab1c7a66_Var>* _57059_s) {
	if ((!(_1ab1a8a25_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ab1a82b6_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab1840a5_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ab1a82b6_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bc0dd8e4_checkImportSelection(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab0c1e7c_Token>* _57043_ident, jule::Ptr<_1ab259c2a_TypeAlias>* _57059_s) {
	if ((!(_1ab1a8a25_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ab1a82b6_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab1840a5_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ab1a82b6_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bc0e2871_checkImportSelection(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab0c1e7c_Token>* _57043_ident, jule::Ptr<_1ab10803a_Struct>* _57059_s) {
	if ((!(_1ab1a8a25_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ab1a82b6_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab1840a5_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ab1a82b6_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bc0e6985_checkImportSelection(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab0c1e7c_Token>* _57043_ident, jule::Ptr<_1ab131195_Trait>* _57059_s) {
	if ((!(_1ab1a8a25_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ab1a82b6_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab1840a5_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ab1a82b6_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bc0ea912_checkImportSelection(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab0c1e7c_Token>* _57043_ident, jule::Ptr<_1ab133890_Enum>* _57059_s) {
	if ((!(_1ab1a8a25_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ab1a82b6_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab1840a5_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ab1a82b6_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bc0ee88e_checkImportSelection(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab0c1e7c_Token>* _57043_ident, jule::Ptr<_1ab13509a_TypeEnum>* _57059_s) {
	if ((!(_1ab1a8a25_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ab1a82b6_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab1840a5_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ab1a82b6_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bc10381b_checkImportSelection(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab0c1e7c_Token>* _57043_ident, jule::Ptr<_1ab11cdeb_Fn>* _57059_s) {
	if ((!(_1ab1a8a25_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ab1a82b6_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab1840a5_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ab1a82b6_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1ab1aa829_checkImportSelectedSelections(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab184bdd_ImportInfo>* _58453_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58453_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0d5138:;
		if (it != expr_end) {
			jule::Ptr<_1ab0c1e7c_Token> _58616_ident = *it;
			{
				if ((*(_58616_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1bc0d5138;
				};
				if (_1ab1a9be1_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_58453_imp)))), &((*(_58616_ident))._field_Kind))) {
					_1ab1a82b6_pushErr(_self_, _58616_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_58616_ident))._field_Kind, &__jule_any_type4)}));
					_1ab1a8629_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1bc0d5138;
				};
				jule::Any _59817_def = _1ab1aa0dc_getImportDef(_self_, &((*(_58616_ident))._field_Kind), _58453_imp);;
				{
					auto &_match_expr{ _59817_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1bc0d6513:;
						{
							goto _iter_next_1bc0d5138;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1bc0d7c84:;
						{
							jule::Ptr<_1ab1c7a66_Var> _60421_v = _59817_def.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8);;
							__jule_func_result=(_1bc0d9923_checkImportSelection(_self_, &(_58616_ident), &(_60421_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1bc0d7cea:;
						{
							jule::Ptr<_1ab259c2a_TypeAlias> _60721_ta = _59817_def.cast_ptr<_1ab259c2a_TypeAlias>(&__jule_any_type66);;
							__jule_func_result=(_1bc0dd8e4_checkImportSelection(_self_, &(_58616_ident), &(_60721_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1bc0d88cd:;
						{
							jule::Ptr<_1ab10803a_Struct> _61021_s = _59817_def.cast_ptr<_1ab10803a_Struct>(&__jule_any_type65);;
							__jule_func_result=(_1bc0e2871_checkImportSelection(_self_, &(_58616_ident), &(_61021_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1bc0d8944:;
						{
							jule::Ptr<_1ab131195_Trait> _61321_t = _59817_def.cast_ptr<_1ab131195_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1bc0e6985_checkImportSelection(_self_, &(_58616_ident), &(_61321_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1bc0d89aa:;
						{
							jule::Ptr<_1ab133890_Enum> _61621_e = _59817_def.cast_ptr<_1ab133890_Enum>(&__jule_any_type67);;
							__jule_func_result=(_1bc0ea912_checkImportSelection(_self_, &(_58616_ident), &(_61621_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1bc0d8a21:;
						{
							jule::Ptr<_1ab13509a_TypeEnum> _61921_e = _59817_def.cast_ptr<_1ab13509a_TypeEnum>(&__jule_any_type68);;
							__jule_func_result=(_1bc0ee88e_checkImportSelection(_self_, &(_58616_ident), &(_61921_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1bc0d8a87:;
						{
							jule::Ptr<_1ab11cdeb_Fn> _62221_f = _59817_def.cast_ptr<_1ab11cdeb_Fn>(&__jule_any_type64);;
							__jule_func_result=(_1bc10381b_checkImportSelection(_self_, &(_58616_ident), &(_62221_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1bc0d7b74:;
						{
							_1ab1a82b6_pushErr(_self_, _58616_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_58616_ident))._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_1bc0d5138;
						}
					}
					_match_end_1bc0d7b1e:;
				};
			}
			_iter_next_1bc0d5138:;
			++it;
			goto _iter_begin_1bc0d5138;
		}
		_iter_end_1bc0d5138:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bc107ee6_checkImportsAllSelectionsFromCollection(_1ab1a567b_Sema* _self_, jule::Slice<jule::Ptr<_1ab1c7a66_Var>>* _63362_s, jule::Ptr<_1ab0c1e7c_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc109822:;
		if (it != expr_end) {
			jule::Ptr<_1ab1c7a66_Var> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bc0d9923_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bc109822:;
			++it;
			goto _iter_begin_1bc109822;
		}
		_iter_end_1bc109822:;
	};
	return _63413_ok;;
}

inline jule::Bool _1bc10913a_checkImportsAllSelectionsFromCollection(_1ab1a567b_Sema* _self_, jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>>* _63362_s, jule::Ptr<_1ab0c1e7c_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc10be0c:;
		if (it != expr_end) {
			jule::Ptr<_1ab259c2a_TypeAlias> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bc0dd8e4_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bc10be0c:;
			++it;
			goto _iter_begin_1bc10be0c;
		}
		_iter_end_1bc10be0c:;
	};
	return _63413_ok;;
}

inline jule::Bool _1bc10b769_checkImportsAllSelectionsFromCollection(_1ab1a567b_Sema* _self_, jule::Slice<jule::Ptr<_1ab10803a_Struct>>* _63362_s, jule::Ptr<_1ab0c1e7c_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc10e4d6:;
		if (it != expr_end) {
			jule::Ptr<_1ab10803a_Struct> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bc0e2871_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bc10e4d6:;
			++it;
			goto _iter_begin_1bc10e4d6;
		}
		_iter_end_1bc10e4d6:;
	};
	return _63413_ok;;
}

inline jule::Bool _1bc10dd43_checkImportsAllSelectionsFromCollection(_1ab1a567b_Sema* _self_, jule::Slice<jule::Ptr<_1ab11cdeb_Fn>>* _63362_s, jule::Ptr<_1ab0c1e7c_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc111ad2:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bc10381b_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bc111ad2:;
			++it;
			goto _iter_begin_1bc111ad2;
		}
		_iter_end_1bc111ad2:;
	};
	return _63413_ok;;
}

inline jule::Bool _1bc1113b7_checkImportsAllSelectionsFromCollection(_1ab1a567b_Sema* _self_, jule::Slice<jule::Ptr<_1ab131195_Trait>>* _63362_s, jule::Ptr<_1ab0c1e7c_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc114167:;
		if (it != expr_end) {
			jule::Ptr<_1ab131195_Trait> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bc0e6985_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bc114167:;
			++it;
			goto _iter_begin_1bc114167;
		}
		_iter_end_1bc114167:;
	};
	return _63413_ok;;
}

inline jule::Bool _1bc113a18_checkImportsAllSelectionsFromCollection(_1ab1a567b_Sema* _self_, jule::Slice<jule::Ptr<_1ab133890_Enum>>* _63362_s, jule::Ptr<_1ab0c1e7c_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1166ec:;
		if (it != expr_end) {
			jule::Ptr<_1ab133890_Enum> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bc0ea912_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bc1166ec:;
			++it;
			goto _iter_begin_1bc1166ec;
		}
		_iter_end_1bc1166ec:;
	};
	return _63413_ok;;
}

inline jule::Bool _1bc11609d_checkImportsAllSelectionsFromCollection(_1ab1a567b_Sema* _self_, jule::Slice<jule::Ptr<_1ab13509a_TypeEnum>>* _63362_s, jule::Ptr<_1ab0c1e7c_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc118d1a:;
		if (it != expr_end) {
			jule::Ptr<_1ab13509a_TypeEnum> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bc0ee88e_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bc118d1a:;
			++it;
			goto _iter_begin_1bc118d1a;
		}
		_iter_end_1bc118d1a:;
	};
	return _63413_ok;;
}



inline jule::Bool _1ab1ab066_checkImportAllSelections(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab184bdd_ImportInfo>* _64344_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64344_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0d8e94:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> *_64516_file = it;
			{
				__jule_func_result=(_1bc107ee6_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Vars), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1bc10913a_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_TypeAliases), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1bc10b769_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Structs), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1bc10dd43_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Funcs), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1bc1113b7_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Traits), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1bc113a18_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Enums), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1bc11609d_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_TypeEnums), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1bc0d8e94:;
			++it;
			goto _iter_begin_1bc0d8e94;
		}
		_iter_end_1bc0d8e94:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab1ab3a7_checkImportSelections(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab184bdd_ImportInfo>* _65745_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65745_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1ab1aa829_checkImportSelectedSelections(_self_, _65745_imp);
		return __jule_func_result;;
	} else if ((*((*(_65745_imp))))._field_ImportAll) {
		__jule_func_result = _1ab1ab066_checkImportAllSelections(_self_, _65745_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab1ab6e8_isUseAliasDuplication(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab184bdd_ImportInfo>* _66641_imp) {
	if (((*((*(_66641_imp))))._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc11aea4:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _67121_imp2 = *it;
			{
				if ((_67121_imp2 == (*(_66641_imp)))) {
					goto _iter_end_1bc11aea4;
				};
				if (((*(_67121_imp2))._field_Alias == (*((*(_66641_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*(_67121_imp2))._field_Ident == (*(_67121_imp2))._field_LinkPath) && ((*(_67121_imp2))._field_Ident == (*((*(_66641_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1bc11aea4:;
			++it;
			goto _iter_begin_1bc11aea4;
		}
		_iter_end_1bc11aea4:;
	};
	return false;;
}



inline jule::Bool _1ab1aba39_checkImport(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab184bdd_ImportInfo>* _68635_imp) {
	if (((*((*(_68635_imp))))._field_Binded || ((*((*((*(_68635_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_68635_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_68635_imp))))._field_ImportAll || !((*((*(_68635_imp))))._field_Alias).empty()) || ((*((*(_68635_imp))))._field_Selected.len() > 0LL))) {
			_1ab1a82b6_pushErr(_self_, (*((*(_68635_imp))))._field_Token, jule::Str::lit("expected plain use declaration for this package like: @", 55), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_1ab1ab6e8_isUseAliasDuplication(_self_, _68635_imp)) {
		_1ab1a82b6_pushErr(_self_, (*((*(_68635_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_68635_imp))))._field_Alias, &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*((*(_68635_imp))))._field_Duplicate))) {
		jule::Ptr<_1ab1a567b_Sema> _70517_sema = jule::new_ptr<_1ab1a567b_Sema>(_1ab1a567b_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1ab1c4090_check(_70517_sema, &((*((*((*(_68635_imp))))._field_Package))._field_Files));
		if (((*(_70517_sema))._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*(_70517_sema))._field_errors);;
			(*(_70517_sema))._field_errors=nullptr;
			return false;;
		};
	};
	return _1ab1ab3a7_checkImportSelections(_self_, _68635_imp);;
}



inline void _1ab1abc37_checkImports(_1ab1a567b_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc12253d:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _72021_file = *it;
			{
				_1ab1a7d98_setCurrentFile(_self_, _72021_file);
				{
					auto expr = &((*(_72021_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc125310:;
					if (it != expr_end) {
						jule::Ptr<_1ab184bdd_ImportInfo> _72225_imp = *it;
						{
							jule::Bool _72317_ok = _1ab1aba39_checkImport(_self_, &(_72225_imp));;
							if ((!(_72317_ok))) {
								return;;
							};
						}
						_iter_next_1bc125310:;
						++it;
						goto _iter_begin_1bc125310;
					}
					_iter_end_1bc125310:;
				};
			}
			_iter_next_1bc12253d:;
			++it;
			goto _iter_begin_1bc12253d;
		}
		_iter_end_1bc12253d:;
	};
}



inline void _1ab1abe35_implFileImpls(jule::Ptr<_1ab1a567b_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc125255:;
		if (it != expr_end) {
			jule::Ptr<_1ab15d37b_Impl> _73321_imp = *it;
			{
				_1ab1ba64c_implImpl(_self_, &(_73321_imp));
			}
			_iter_next_1bc125255:;
			++it;
			goto _iter_begin_1bc125255;
		}
		_iter_end_1bc125255:;
	};
}



inline void _1ab1ac133_implImpls(jule::Ptr<_1ab1a567b_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc126ce5:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _73921_file = *it;
			{
				_1ab1a7d98_setCurrentFile(_self_.ptr(), _73921_file);
				_1ab1abe35_implFileImpls(_self_);
			}
			_iter_next_1bc126ce5:;
			++it;
			goto _iter_begin_1bc126ce5;
		}
		_iter_end_1bc126ce5:;
	};
}



inline void _1ab1ac331_checkEnums(jule::Ptr<_1ab1a567b_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc127a3d:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _74621_file = *it;
			{
				_1ab1a7d98_setCurrentFile(_self_.ptr(), _74621_file);
				{
					
					if ((!(_1ab1b6a88_checkEnumDecls(_self_)))) {
						_case_begin_1bc1292c0:;
					}
					else if ((!(_1ab1b6d1e_checkTypeEnumDecls(_self_)))) {
						_case_begin_1bc129347:;
					}
					_match_end_1bc129237:;
				};
			}
			_iter_next_1bc127a3d:;
			++it;
			goto _iter_begin_1bc127a3d;
		}
		_iter_end_1bc127a3d:;
	};
}



inline void _1ab1ac52e_checkFileInherits(jule::Ptr<_1ab1a567b_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1288da:;
		if (it != expr_end) {
			jule::Ptr<_1ab131195_Trait> _75621_t = *it;
			{
				jule::Bool _75713_ok = _1ab1b86d3__checkTraitDeclInherits(_self_, &(_75621_t));;
				if ((!(_75713_ok))) {
					return;;
				};
			}
			_iter_next_1bc1288da:;
			++it;
			goto _iter_begin_1bc1288da;
		}
		_iter_end_1bc1288da:;
	};
}



inline void _1ab1ac72c_checkInherits(jule::Ptr<_1ab1a567b_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc12a546:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _76521_file = *it;
			{
				_1ab1a7d98_setCurrentFile(_self_.ptr(), _76521_file);
				_1ab1ac52e_checkFileInherits(_self_);
			}
			_iter_next_1bc12a546:;
			++it;
			goto _iter_begin_1bc12a546;
		}
		_iter_end_1bc12a546:;
	};
}



inline _1ab26c8ca_typeChecker _1ab1acbd3_typeChecker(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Trait<_1ab27a553_Lookup> _77135_l, jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>> _77150_generics, jule::Ptr<_1ab26b8da_referencer> _77213_referencer) {
	_1ab26c8ca_typeChecker _77313_tc = _1ab26c8ca_typeChecker{._field_s=_self_, ._field_rootLookup=_77135_l, ._field_lookup=_77135_l, ._field_referencer=_77213_referencer, ._field_useGenerics=_77150_generics, };;
	{
		auto &_match_expr{ _77135_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bc12d0b5:;
			{
				jule::Ptr<_1ab16aab4_scopeChecker> _78217_hard = _1ab16de3b_getHardRoot(_77135_l.cast_ptr<_1ab16aab4_scopeChecker>(0));;
				_77313_tc._field_refers=(*((*(_78217_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1bc12d060:;
	};
	if (((_77213_referencer != nullptr) && ((*(_77213_referencer))._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_77213_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1bc12e77b:;
				{
					_77313_tc._field_ownerAlias=(*(_77213_referencer))._field_owner.cast_ptr<_1ab259c2a_TypeAlias>(&__jule_any_type66);
				}
			}
			_match_end_1bc12e726:;
		};
	};
	return _77313_tc;;
}



inline jule::Ptr<_1ab25aa1c_TypeKind> _1ab1ad244_buildTypeWithRefers(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab0d7448_TypeDecl>* _79844_t, jule::Trait<_1ab27a553_Lookup> _79867_l, jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>> _79913_generics, jule::Ptr<_1ab26b8da_referencer> _79941_referencer) {
	return ({ auto _wrap_copy = _1ab1acbd3_typeChecker(_self_, _79867_l, _79913_generics, _79941_referencer); _1ab275075_checkDecl(&_wrap_copy, _79844_t); });;
}



inline jule::Bool _1ab1ad7a5_checkTypeWithRefers(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab262bde_TypeSymbol>* _80544_t, jule::Trait<_1ab27a553_Lookup> _80564_l, jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>> _80613_generics, jule::Ptr<_1ab26b8da_referencer> _80641_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1ab263063_checked((*(_80544_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_80544_t))))._field_Kind=_1ab1ad244_buildTypeWithRefers(_self_, &((*((*(_80544_t))))._field_Decl), _80564_l, _80613_generics, _80641_referencer);
	__jule_func_result = _1ab263063_checked((*(_80544_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1ab15b346_constraintChecker> _1ab1ada3b_constraintChecker(jule::Ptr<_1ab1a567b_Sema> _self_) {
	return jule::new_ptr<_1ab15b346_constraintChecker>(_1ab15b346_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1ab1ade37_checkType(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab262bde_TypeSymbol>* _82034_t, jule::Trait<_1ab27a553_Lookup> _82054_l) {
	return _1ab1ad7a5_checkTypeWithRefers(_self_, _82034_t, _82054_l, nullptr, nullptr);;
}



inline jule::Ptr<_1ab25aa1c_TypeKind> _1ab1ae3dd_buildTypeWithGenerics(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab0d7448_TypeDecl>* _82646_t, jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>> _82713_generics, jule::Ptr<_1ab123eac_ReferenceStack> _82741_refers) {
	jule::Ptr<_1ab26c8ca_typeChecker> _82813_tc = jule::new_ptr<_1ab26c8ca_typeChecker>(_1ab26c8ca_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ab27a553_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ab27a553_Lookup>(_self_, 3), ._field_refers=_82741_refers, ._field_useGenerics=_82713_generics, });;
	return _1ab275075_checkDecl(_82813_tc.ptr(), _82646_t);;
}



inline jule::Ptr<_1ab25aa1c_TypeKind> _1ab1aea70_selectType(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab0d7448_TypeDecl>* _84435_t) {
	jule::Ptr<_1ab26c8ca_typeChecker> _84513_tc = jule::new_ptr<_1ab26c8ca_typeChecker>(_1ab26c8ca_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ab27a553_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ab27a553_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1ab275075_checkDecl(_84513_tc.ptr(), _84435_t);;
}



inline jule::Ptr<_1ab22be1c_Eval> _1ab1b0026_evalpd(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Trait<_1ab27a553_Lookup> _85630_l, jule::Ptr<_1ab25aa1c_TypeKind> _85645_p, jule::Ptr<_1ab1c7a66_Var> _85663_owner) {
	jule::Ptr<_1ab22be1c_Eval> _85713_e = jule::new_ptr<_1ab22be1c_Eval>(_1ab22be1c_Eval{._field_s=_self_, ._field_lookup=_85630_l, ._field_owner=_85663_owner, });;
	{
		auto &_match_expr{ _85630_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bc138620:;
			{
				(*(_85713_e))._field_unsafety=_1ab16ce6d_isUnsafe(_85630_l.cast_ptr<_1ab16aab4_scopeChecker>(0));
			}
		}
		_match_end_1bc1385ba:;
	};
	(*(_85713_e))._field_prefix=_85645_p;
	return _85713_e;;
}



inline jule::Ptr<_1ab22be1c_Eval> _1ab1b0422_evalp(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Trait<_1ab27a553_Lookup> _87129_l, jule::Ptr<_1ab25aa1c_TypeKind> _87144_p) {
	return _1ab1b0026_evalpd(_self_, _87129_l, _87144_p, nullptr);;
}



inline jule::Ptr<_1ab22be1c_Eval> _1ab1b0763_eval(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Trait<_1ab27a553_Lookup> _87628_l) {
	return _1ab1b0422_evalp(_self_, _87628_l, nullptr);;
}



inline jule::Bool _1ab1b0cc4_checkAssignType(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Bool _88035_destIsRef, jule::Ptr<_1ab25aa1c_TypeKind>* _88057_dest, jule::Ptr<_1ab22a228_Data>* _88114_d, jule::Ptr<_1ab0c1e7c_Token> _88128_errorToken) {
	if ((*((*(_88114_d))))._field_Decl) {
		_1ab1a82b6_pushErr(_self_.ptr(), _88128_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_88035_destIsRef) {
		if ((!(_1ab25b226_Equal((*(_88057_dest)), (*((*(_88114_d))))._field_Kind)))) {
			_1ab1a82b6_pushErr(_self_.ptr(), _88128_errorToken, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_88057_dest)).ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_88114_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_1ab213b90_assignTypeChecker> _89217_atc = jule::new_ptr<_1ab213b90_assignTypeChecker>(_1ab213b90_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_88057_dest)), ._field_d=(*(_88114_d)), ._field_errorToken=_88128_errorToken});;
		jule::Bool _89813_ok = _1ab214e05_check(_89217_atc.ptr());;
		if ((!(_89813_ok))) {
			return false;;
		};
	};
	if (((!(_1ab22aaec_IsConst((*(_88114_d)).ptr()))) || (_1ab25d16d_Prim((*(_88057_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _90813_kind = (*(_1ab25d16d_Prim((*(_88057_dest)).ptr())))._field_Kind;;
	{
		
		if (_1d8bcdce2_IsSigInt(_90813_kind)) {
			_case_begin_1bc140902:;
			{
				_1d8bd3038_SetI64((*((*(_88114_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1d8bd2763_AsI64((*((*(_88114_d))))._field_Constant.ptr())));
			}
		}
		else if (_1d8bce100_IsUnsigInt(_90813_kind)) {
			_case_begin_1bc140979:;
			{
				_1d8bd32e1_SetU64((*((*(_88114_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1d8bd29e9_AsU64((*((*(_88114_d))))._field_Constant.ptr())));
			}
		}
		else if (_1d8bce70a_IsFloat(_90813_kind)) {
			_case_begin_1bc140a01:;
			{
				_1d8bd3b0a_SetF64((*((*(_88114_d))))._field_Constant.ptr(), static_cast<jule::F64>(_1d8bd2c80_AsF64((*((*(_88114_d))))._field_Constant.ptr())));
			}
		}
		_match_end_1bc140836:;
	};
	return true;;
}



inline jule::Bool _1ab1b127a_checkTypeCompatibility(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _92247_dest, jule::Ptr<_1ab25aa1c_TypeKind>* _92314_src, jule::Ptr<_1ab0c1e7c_Token>* _92335_errorToken) {
	if (((*(_92314_src)) == nullptr)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*(_92335_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_92247_dest)).ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str((*(_92314_src)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	if ((_1ab25ee94_Tup((*(_92314_src)).ptr()) != nullptr)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*(_92335_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_92247_dest)).ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str((*(_92314_src)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	_1ab211de1_typeCompatibilityChecker _93713_tcc = _1ab211de1_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_92247_dest)), ._field_src=(*(_92314_src)), ._field_errorToken=(*(_92335_errorToken))};;
	if (_1ab2135a7_check(&_93713_tcc)) {
		return true;;
	};
	_1ab1a82b6_pushErr(_self_.ptr(), (*(_92335_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_92247_dest)).ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str((*(_92314_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline jule::Ptr<_1ab25aa1c_TypeKind> _1ab1b1731_buildNonGenericTypeKind(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab0d7448_TypeDecl>* _95848_ast, jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>>* _95914_generics, jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>>* _95950_ignored) {
	jule::Ptr<_1ab26c8ca_typeChecker> _96013_tc = jule::new_ptr<_1ab26c8ca_typeChecker>(_1ab26c8ca_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ab27a553_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ab27a553_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_95914_generics)), ._field_ignoredGenerics=_95950_ignored, });;
	return _1ab275075_checkDecl(_96013_tc.ptr(), _95848_ast);;
}



inline jule::Bool _1ab1b1b2c_buildFnNonGenericTypeKinds(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab120d00_FnIns>* _97051_f, jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>>* _97067_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>> _97217_generics = nullptr;;
	if (_1ab11d605_IsMethod((*((*(_97051_f))))._field_Decl.ptr())) {
		_97217_generics=jule::append((*((*((*(_97051_f))))._field_Decl))._field_Generics,(*((*((*((*(_97051_f))))._field_Decl))._field_Owner))._field_Generics);
	} else {
		_97217_generics=(*((*((*(_97051_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_97051_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc14a90c:;
		if (it != expr_end) {
			jule::Ptr<_1ab11ed54_ParamIns> _97921_p = *it;
			{
				if ((!(_1ab11ba43_IsSelf((*(_97921_p))._field_Decl.ptr())))) {
					(*(_97921_p))._field_Kind=_1ab1b1731_buildNonGenericTypeKind(_self_, &((*((*((*(_97921_p))._field_Decl))._field_Kind))._field_Decl), &(_97217_generics), _97067_ignored);
					__jule_func_result=(__jule_func_result && ((*(_97921_p))._field_Kind != nullptr));
				};
			}
			_iter_next_1bc14a90c:;
			++it;
			goto _iter_begin_1bc14a90c;
		}
		_iter_end_1bc14a90c:;
	};
	if ((!(_1ab11d36e_IsVoid((*((*(_97051_f))))._field_Decl.ptr())))) {
		(*((*(_97051_f))))._field_Result=_1ab1b1731_buildNonGenericTypeKind(_self_, &((*((*((*((*((*(_97051_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl), &(_97217_generics), _97067_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_97051_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ab120d00_FnIns> _1ab1b1e6d_getTraitCheckFnKind(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab11cdeb_Fn>* _99244_f) {
	if (((*((*(_99244_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_99244_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1ab120d00_FnIns> _99613_ins = _1ab11e3c5_instanceForce((*(_99244_f)));;
	jule::Ptr<_1ab26c8ca_typeChecker> _99813_tc = jule::new_ptr<_1ab26c8ca_typeChecker>(_1ab26c8ca_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ab27a553_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ab27a553_Lookup>(_self_, 3), });;
	{
		auto expr = &((*(_99613_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc150714:;
		if (it != expr_end) {
			jule::Ptr<_1ab11ed54_ParamIns> _100321_p = *it;
			{
				if ((!(_1ab11ba43_IsSelf((*(_100321_p))._field_Decl.ptr())))) {
					(*(_100321_p))._field_Kind=_1ab275075_checkDecl(_99813_tc.ptr(), &((*((*((*(_100321_p))._field_Decl))._field_Kind))._field_Decl));
				};
			}
			_iter_next_1bc150714:;
			++it;
			goto _iter_begin_1bc150714;
		}
		_iter_end_1bc150714:;
	};
	if ((!(_1ab11d36e_IsVoid((*(_99244_f)).ptr())))) {
		(*(_99613_ins))._field_Result=_1ab275075_checkDecl(_99813_tc.ptr(), &((*((*((*((*(_99244_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _99613_ins;;
}



inline jule::Bool _1ab1b2424_checkConstraintsFn(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab120d00_FnIns>* _101543_f, jule::Ptr<_1ab0c1e7c_Token>* _101559_et, jule::Ptr<_1ab120d00_FnIns> _101575_exist) {
	jule::Ptr<_1ab15b346_constraintChecker> _101613_cc = _1ab1ada3b_constraintChecker(_self_);;
	(*(_101613_cc))._field_et=(*(_101559_et));
	(*(_101613_cc))._field_fi=(*(_101543_f));
	if ((_101575_exist != nullptr)) {
		{
			auto expr = &((*(_101575_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc1563eb:;
			if (it != expr_end) {
				jule::I64 _102018_i = it - expr->begin();
				jule::Ptr<_1ab259136_InsGeneric> _102025_g = *it;
				{
					(*((*((*(_101543_f))))._field_Generics[_102018_i]))._field_Constraint=(*(_102025_g))._field_Constraint;
				}
				_iter_next_1bc1563eb:;
				++it;
				_102018_i++;
				goto _iter_begin_1bc1563eb;
			}
			_iter_end_1bc1563eb:;
		};
	} else {
		(*(_101613_cc))._field_uniq=true;
	};
	return _1ab15c27b_check(_101613_cc);;
}



inline jule::Bool _1ab1b28ca_checkConstraintsStruct(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab10acb8_StructIns>* _102947_s, jule::Ptr<_1ab0c1e7c_Token>* _102967_et, jule::Ptr<_1ab10acb8_StructIns> _102983_exist) {
	jule::Ptr<_1ab15b346_constraintChecker> _103013_cc = _1ab1ada3b_constraintChecker(_self_);;
	(*(_103013_cc))._field_et=(*(_102967_et));
	(*(_103013_cc))._field_si=(*(_102947_s));
	if ((_102983_exist != nullptr)) {
		{
			auto expr = &((*(_102983_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc159487:;
			if (it != expr_end) {
				jule::I64 _103418_i = it - expr->begin();
				jule::Ptr<_1ab259136_InsGeneric> _103425_g = *it;
				{
					(*((*((*(_102947_s))))._field_Generics[_103418_i]))._field_Constraint=(*(_103425_g))._field_Constraint;
				}
				_iter_next_1bc159487:;
				++it;
				_103418_i++;
				goto _iter_begin_1bc159487;
			}
			_iter_end_1bc159487:;
		};
	} else {
		(*(_103013_cc))._field_uniq=true;
	};
	return _1ab15c27b_check(_103013_cc);;
}



inline jule::Bool _1ab1b2cc6_fnEnvironment(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab120d00_FnIns>* _104638_f, jule::Fn<jule::Bool(jule::Ptr<_1ab1a567b_Sema>*,jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>>*)> _104649_algo) {
	jule::Ptr<_1ab1a567b_Sema> _104713_sema = (*((*((*(_104638_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1ab224d9e_SymbolTable> _104813_old = (*((*((*((*(_104638_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1ab1a7d98_setCurrentFile((*((*((*(_104638_f))))._field_Decl))._field_sema.ptr(), _104813_old);
	});;
	jule::Ptr<_1ab224d9e_SymbolTable> _105013_file = _1ab1a43c2_findFile(&((*((*((*((*(_104638_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_104638_f))))._field_Decl))._field_Token))._field_File));;
	if ((_105013_file != nullptr)) {
		_1ab1a7d98_setCurrentFile((*((*((*(_104638_f))))._field_Decl))._field_sema.ptr(), _105013_file);
	};
	jule::I64 _105513_size = (*((*(_104638_f))))._field_Generics.len();;
	if ((((*((*(_104638_f))))._field_Decl != nullptr) && ((*((*((*(_104638_f))))._field_Decl))._field_Owner != nullptr))) {
		_105513_size+=(*((*((*((*(_104638_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>> _106013_generics = jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>>::alloc(0LL, _105513_size);;
	_1ab1a404d_appendGenericTypeAliases(&(_106013_generics), _104638_f);
	jule::Bool _10639_ok = _104649_algo(&(_104713_sema), &(_106013_generics));;
	if ((_104713_sema != _self_)) {
		((*(_self_))._field_errors).append((*(_104713_sema))._field_errors);;
		(*(_104713_sema))._field_errors=nullptr;
	};
	return _10639_ok;;
}



inline void _1ab1b307e_checkFnParamKind(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab11ed54_ParamIns>* _107341_p) {
	(*((*((*(_107341_p))))._field_Kind))._field_Variadic=(*((*((*(_107341_p))))._field_Decl))._field_Variadic;
	if (((*((*((*(_107341_p))))._field_Decl))._field_Reference && (!(_1ab277011_isValidForRef(&((*((*(_107341_p))))._field_Kind)))))) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*((*(_107341_p))))._field_Decl))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_107341_p))))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Bool _1ab1b33c0_reloadFnInsTypes(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab120d00_FnIns> _108040_f) {
	if ((_1ab122285_IsBuiltin(_108040_f.ptr()) || _1ab12251b_IsAnon(_108040_f.ptr()))) {
		return true;;
	};
	return _1ab1b2cc6_fnEnvironment(_self_, &(_108040_f), jule::Fn<jule::Bool(jule::Ptr<_1ab1a567b_Sema>*,jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>>*)>([=](jule::Ptr<_1ab1a567b_Sema>* _108443_sema, jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>>* _108461_generics) mutable -> jule::Bool {
		jule::Bool _108517_ok = true;;
		{
			auto expr = &((*(_108040_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc1675e9:;
			if (it != expr_end) {
				jule::Ptr<_1ab11ed54_ParamIns> _108625_p = *it;
				{
					if (_1ab11ba43_IsSelf((*(_108625_p))._field_Decl.ptr())) {
						if (_1ab11bcc9_IsRef((*(_108625_p))._field_Decl.ptr())) {
							(*(_108625_p))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab267122_Sptr>(_1ab267122_Sptr{._field_Elem=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>((*(_108040_f))._field_Owner, 0)})}), 21)});
						} else {
							(*(_108625_p))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>((*(_108040_f))._field_Owner, 0)});
						};
					} else {
						(*(_108625_p))._field_Kind=_1ab1ae3dd_buildTypeWithGenerics((*(_108443_sema)), &((*((*((*(_108625_p))._field_Decl))._field_Kind))._field_Decl), (*(_108461_generics)), (*(_108040_f))._field_Refers);
						if (((*(_108625_p))._field_Kind != nullptr)) {
							_1ab1b307e_checkFnParamKind(_self_, &(_108625_p));
						} else {
							_108517_ok=false;
						};
					};
				}
				_iter_next_1bc1675e9:;
				++it;
				goto _iter_begin_1bc1675e9;
			}
			_iter_end_1bc1675e9:;
		};
		if ((!(_1ab11d36e_IsVoid((*(_108040_f))._field_Decl.ptr())))) {
			(*(_108040_f))._field_Result=_1ab1ae3dd_buildTypeWithGenerics((*(_108443_sema)), &((*((*((*((*(_108040_f))._field_Decl))._field_Result))._field_Kind))._field_Decl), (*(_108461_generics)), (*(_108040_f))._field_Refers);
			_108517_ok=(((*(_108040_f))._field_Result != nullptr) && _108517_ok);
		};
		return _108517_ok;;
	}));;
}



inline jule::Bool _1ab1b3876_checkRefValidityForInitExpr(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Bool _111647_leftMut, jule::Ptr<_1ab22a228_Data>* _111667_d, jule::Ptr<_1ab0c1e7c_Token>* _111682_errorToken) {
	if ((!(_1ab1a2d1b_isValidModelForRef(&((*((*(_111667_d))))._field_Model))))) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*(_111682_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_111647_leftMut && (!((*((*(_111667_d))))._field_Mutable)))) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*(_111682_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1ab1b3bb7_isMutRiskyStruct(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab10acb8_StructIns>* _113332_s) {
	{
		auto expr = &((*((*(_113332_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc170811:;
		if (it != expr_end) {
			jule::Ptr<_1ab10a218_FieldIns> *_113416_f = it;
			{
				if ((((*((*((*(_113416_f))))._field_Decl))._field_Mutable && _1ab25c39d_Mutable((*((*(_113416_f))))._field_Kind.ptr())) && _1ab1a8a25_isAccessibleDefine(_self_, (*((*((*(_113416_f))))._field_Decl))._field_Public, (*((*((*(_113416_f))))._field_Decl))._field_Token))) {
					return true;;
				};
			}
			_iter_next_1bc170811:;
			++it;
			goto _iter_begin_1bc170811;
		}
		_iter_end_1bc170811:;
	};
	return false;;
}



inline jule::Bool _1ab1b42d3_checkValidityForInitExpr(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Bool _116044_leftMut, jule::Bool _116059_leftRef, jule::Ptr<_1ab25aa1c_TypeKind>* _116110_leftKind, jule::Ptr<_1ab22a228_Data>* _116136_d, jule::Ptr<_1ab0c1e7c_Token>* _116151_errorToken) {
	if ((_116044_leftMut && (!((*((*(_116136_d))))._field_Mutable)))) {
		if (_1ab25c39d_Mutable((*((*(_116136_d))))._field_Kind.ptr())) {
			_1ab1a82b6_pushErr(_self_.ptr(), (*(_116151_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_116136_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_1ab10acb8_StructIns> _116913_s = _1ab25e6e1_Struct((*((*(_116136_d))))._field_Kind.ptr());;
		if (((_116913_s != nullptr) && _1ab1b3bb7_isMutRiskyStruct(_self_.ptr(), &(_116913_s)))) {
			_1ab1a82b6_pushErr(_self_.ptr(), (*(_116151_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_116136_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_116059_leftRef) {
		if ((!(_1ab1b3876_checkRefValidityForInitExpr(_self_, _116044_leftMut, _116136_d, _116151_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1ab213b90_assignTypeChecker> _118013_atc = jule::new_ptr<_1ab213b90_assignTypeChecker>(_1ab213b90_assignTypeChecker{._field_s=_self_, ._field_d=(*(_116136_d)), ._field_errorToken=(*(_116151_errorToken))});;
	return _1ab2143bb_checkValidity(_118013_atc.ptr());;
}



inline jule::Bool _1ab1b46ce_checkTypeAliasDeclKind(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab259c2a_TypeAlias>* _118847_ta, jule::Trait<_1ab27a553_Lookup> _118867_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab224d9e_SymbolTable> _118913_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1ab1a7d98_setCurrentFile(_self_.ptr(), _118913_old);
	});;
	if (((*((*(_118847_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1ab224d9e_SymbolTable> _119417_file = _1ab1a43c2_findFile(&((*(_self_))._field_files), &((*((*((*(_118847_ta))))._field_Token))._field_File));;
		if ((_119417_file != nullptr)) {
			_1ab1a7d98_setCurrentFile(_self_.ptr(), _119417_file);
		};
	};
	__jule_func_result=_1ab1ad7a5_checkTypeWithRefers(_self_, &((*((*(_118847_ta))))._field_Kind), _118867_l, nullptr, jule::new_ptr<_1ab26b8da_referencer>(_1ab26b8da_referencer{._field_ident=(*((*(_118847_ta))))._field_Ident, ._field_owner=jule::Any((*(_118847_ta)), &__jule_any_type66), ._field_refs=(&((*((*(_118847_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1ab25de3d_Arr((*((*((*(_118847_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1ab25de3d_Arr((*((*((*(_118847_ta))))._field_Kind))._field_Kind.ptr())))._field_Auto)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*((*((*(_118847_ta))))._field_Kind))._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1ab1b4a42_checkTypeAliasDecl(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab259c2a_TypeAlias>* _121143_ta, jule::Trait<_1ab27a553_Lookup> _121163_l) {
	if (_1ab0c48db_IsIgnoreIdent((*((*(_121143_ta))))._field_Ident)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_121143_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1ab1b46ce_checkTypeAliasDeclKind(_self_, _121143_ta, _121163_l);
}



inline void _1ab1b4cea_checkTypeAliasDeclDup(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab259c2a_TypeAlias>* _121946_ta) {
	if (_1ab0c48db_IsIgnoreIdent((*((*(_121946_ta))))._field_Ident)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_121946_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1ab1a8ecb_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_121946_ta)))), &((*((*(_121946_ta))))._field_Ident), (*((*(_121946_ta))))._field_Binded)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_121946_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_121946_ta))))._field_Ident, &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1ab1b46ce_checkTypeAliasDeclKind(_self_, _121946_ta, jule::Trait<_1ab27a553_Lookup>(_self_, 3));
}



inline jule::Bool _1ab1b5081_checkTypeAliasDecls(jule::Ptr<_1ab1a567b_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc18776d:;
		if (it != expr_end) {
			jule::Ptr<_1ab259c2a_TypeAlias> _123221_ta = *it;
			{
				_1ab1b4cea_checkTypeAliasDeclDup(_self_, &(_123221_ta));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bc18776d:;
			++it;
			goto _iter_begin_1bc18776d;
		}
		_iter_end_1bc18776d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1bc1b336a_checkEnumItemsDup(_1ab1a567b_Sema* _self_, jule::Slice<jule::Ptr<_1ab132d23_EnumItem>> _124339_items) {
	{
		auto expr = &(_124339_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1b4646:;
		if (it != expr_end) {
			jule::Ptr<_1ab132d23_EnumItem> *_124416_item = it;
			{
				if (((*((*(_124416_item))))._field_Ident).empty()) {
					goto _iter_next_1bc1b4646;
				} else if (_1ab0c48db_IsIgnoreIdent((*((*(_124416_item))))._field_Ident)) {
					_1ab1a82b6_pushErr(_self_, (*((*(_124416_item))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_124339_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bc1b5944:;
						if (it != expr_end) {
							jule::Ptr<_1ab132d23_EnumItem> *_125024_citem = it;
							{
								if (((*(_124416_item)) == (*(_125024_citem)))) {
									goto _iter_end_1bc1b5944;
								} else if (((*((*(_124416_item))))._field_Ident == (*((*(_125024_citem))))._field_Ident)) {
									_1ab1a82b6_pushErr(_self_, (*((*(_124416_item))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124416_item))))._field_Ident, &__jule_any_type4)}));
									_1ab1a8629_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1bc1b5944;
								};
							}
							_iter_next_1bc1b5944:;
							++it;
							goto _iter_begin_1bc1b5944;
						}
						_iter_end_1bc1b5944:;
					};
				};
			}
			_iter_next_1bc1b4646:;
			++it;
			goto _iter_begin_1bc1b4646;
		}
		_iter_end_1bc1b4646:;
	};
}

inline void _1bc1c01ac_checkEnumItemsDup(_1ab1a567b_Sema* _self_, jule::Slice<jule::Ptr<_1ab1349c3_TypeEnumItem>> _124339_items) {
	{
		auto expr = &(_124339_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1c1444:;
		if (it != expr_end) {
			jule::Ptr<_1ab1349c3_TypeEnumItem> *_124416_item = it;
			{
				if (((*((*(_124416_item))))._field_Ident).empty()) {
					goto _iter_next_1bc1c1444;
				} else if (_1ab0c48db_IsIgnoreIdent((*((*(_124416_item))))._field_Ident)) {
					_1ab1a82b6_pushErr(_self_, (*((*(_124416_item))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_124339_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bc1c2742:;
						if (it != expr_end) {
							jule::Ptr<_1ab1349c3_TypeEnumItem> *_125024_citem = it;
							{
								if (((*(_124416_item)) == (*(_125024_citem)))) {
									goto _iter_end_1bc1c2742;
								} else if (((*((*(_124416_item))))._field_Ident == (*((*(_125024_citem))))._field_Ident)) {
									_1ab1a82b6_pushErr(_self_, (*((*(_124416_item))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124416_item))))._field_Ident, &__jule_any_type4)}));
									_1ab1a8629_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1bc1c2742;
								};
							}
							_iter_next_1bc1c2742:;
							++it;
							goto _iter_begin_1bc1c2742;
						}
						_iter_end_1bc1c2742:;
					};
				};
			}
			_iter_next_1bc1c1444:;
			++it;
			goto _iter_begin_1bc1c1444;
		}
		_iter_end_1bc1c1444:;
	};
}



inline void _1ab1b55e2_checkEnumItemsStr(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab133890_Enum>* _126342_e) {
	jule::Ptr<_1ab22be1c_Eval> _126413_eval = _1ab1b0763_eval(_self_, jule::Trait<_1ab27a553_Lookup>(_self_, 3));;
	{
		auto expr = &((*((*(_126342_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc189561:;
		if (it != expr_end) {
			jule::Ptr<_1ab132d23_EnumItem> _126521_item = *it;
			{
				if (_1ab1331ca_AutoExpr(_126521_item.ptr())) {
					(*(_126521_item))._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Constant=static__1d8bd0d5a_NewStr((*(_126521_item))._field_Ident)})});
					(*((*((*(_126521_item))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*(_126521_item))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1ab22a228_Data> _127421_d = _1ab24a17c_evalExpr(_126413_eval, (*((*(_126521_item))._field_Value))._field_Expr);;
					if ((_127421_d == nullptr)) {
						goto _iter_next_1bc189561;
					};
					if ((!(_1ab22aaec_IsConst(_127421_d.ptr())))) {
						_1ab1a82b6_pushErr(_self_.ptr(), (*((*((*(_126521_item))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1ab1b0cc4_checkAssignType(_self_, false, &((*((*((*(_126342_e))))._field_Kind))._field_Kind), &(_127421_d), (*(_126521_item))._field_Token);
					(*((*(_126521_item))._field_Value))._field_Data=_127421_d;
				};
			}
			_iter_next_1bc189561:;
			++it;
			goto _iter_begin_1bc189561;
		}
		_iter_end_1bc189561:;
	};
}



inline void _1bc194637_checkEnumItemInt(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab22be1c_Eval>* _128946_eval, jule::Ptr<_1ab133890_Enum>* _128964_e, jule::Ptr<_1ab2635e6_Prim>* _128975_prim, jule::Ptr<_1ab132d23_EnumItem>* _128993_item, jule::U64* _1289115_n) {
	if (_1ab1331ca_AutoExpr((*(_128993_item)).ptr())) {
		(*((*(_128993_item))))._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>()});
		{
			
{
				_case_begin_1bc19745e:;
				{
					(*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Constant=static__1d8bd07c7_NewU64((*(_1289115_n)));
				}
			}
			_match_end_1bc197382:;
		};
		(*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1ab22a228_Data> _130417_d = _1ab24a17c_evalExpr((*(_128946_eval)), (*((*((*(_128993_item))))._field_Value))._field_Expr);;
		if ((_130417_d == nullptr)) {
			return;;
		};
		if ((!(_1ab22aaec_IsConst(_130417_d.ptr())))) {
			_1ab1a82b6_pushErr(_self_.ptr(), (*((*((*((*(_128993_item))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1ab1b0cc4_checkAssignType(_self_, false, &((*((*((*(_128964_e))))._field_Kind))._field_Kind), &(_130417_d), (*((*(_128993_item))))._field_Token);
		(*((*((*(_128993_item))))._field_Value))._field_Data=_130417_d;
		{
			
{
				_case_begin_1bc19c101:;
				{
					(*(_1289115_n))=static_cast<jule::U64>(_1d8bd1c29_ReadU64((*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1bc19c013:;
		};
	};
}

inline void _1bc1a402b_checkEnumItemInt(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab22be1c_Eval>* _128946_eval, jule::Ptr<_1ab133890_Enum>* _128964_e, jule::Ptr<_1ab2635e6_Prim>* _128975_prim, jule::Ptr<_1ab132d23_EnumItem>* _128993_item, jule::I64* _1289115_n) {
	if (_1ab1331ca_AutoExpr((*(_128993_item)).ptr())) {
		(*((*(_128993_item))))._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>()});
		{
			
{
				_case_begin_1bc1a6c87:;
				{
					(*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Constant=static__1d8bd050d_NewI64((*(_1289115_n)));
				}
			}
			_match_end_1bc1a6c32:;
		};
		(*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1ab22a228_Data> _130417_d = _1ab24a17c_evalExpr((*(_128946_eval)), (*((*((*(_128993_item))))._field_Value))._field_Expr);;
		if ((_130417_d == nullptr)) {
			return;;
		};
		if ((!(_1ab22aaec_IsConst(_130417_d.ptr())))) {
			_1ab1a82b6_pushErr(_self_.ptr(), (*((*((*((*(_128993_item))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1ab1b0cc4_checkAssignType(_self_, false, &((*((*((*(_128964_e))))._field_Kind))._field_Kind), &(_130417_d), (*((*(_128993_item))))._field_Token);
		(*((*((*(_128993_item))))._field_Value))._field_Data=_130417_d;
		{
			
{
				_case_begin_1bc1abab1:;
				{
					(*(_1289115_n))=static_cast<jule::I64>(_1d8bd1993_ReadI64((*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1bc1aba4a:;
		};
	};
}



inline void _1bc190e08_checkEnumItemsInt1(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab2635e6_Prim>* _132444_prim, jule::Ptr<_1ab133890_Enum>* _132462_e) {
	jule::U64 _132513_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1bc192b30:;
			{
				_132513_max=static_cast<jule::U64>(_1d8bc85a0_MaxU(_1ab263937_Str((*(_132444_prim)).ptr())));
			}
		}
		_match_end_1bc1924e2:;
	};
	jule::Ptr<_1ab22be1c_Eval> _133513_eval = _1ab1b0763_eval(_self_, jule::Trait<_1ab27a553_Lookup>(_self_, 3));;
	jule::U64 _133613_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1ab132d23_EnumItem> _133713_first = (*((*(_132462_e))))._field_Items[0LL];;
	_1bc194637_checkEnumItemInt(_self_, &(_133513_eval), _132462_e, _132444_prim, &(_133713_first), &(_133613_n));
	if (((*((*(_133713_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1bc19c70b:;
				{
					_133613_n=static_cast<jule::U64>(_1d8bd29e9_AsU64((*((*((*(_133713_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1bc195902:;
		};
	};
	{
		auto expr = (*((*(_132462_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bc199076:;
		if (it != expr_end) {
			jule::Ptr<_1ab132d23_EnumItem> _134921_item = *it;
			{
				if (((_1ab1331ca_AutoExpr(_134921_item.ptr()) && (_133613_n > 0LLU)) && ((_132513_max - _133613_n) <= 0LLU))) {
					_1ab1a82b6_pushErr(_self_.ptr(), (*(_134921_item))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1bc199076;
				};
				(_133613_n)++;
				_1bc194637_checkEnumItemInt(_self_, &(_133513_eval), _132462_e, _132444_prim, &(_134921_item), &(_133613_n));
			}
			_iter_next_1bc199076:;
			++it;
			goto _iter_begin_1bc199076;
		}
		_iter_end_1bc199076:;
	};
}

inline void _1bc1a10b1_checkEnumItemsInt1(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab2635e6_Prim>* _132444_prim, jule::Ptr<_1ab133890_Enum>* _132462_e) {
	jule::I64 _132513_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1bc1a2315:;
			{
				_132513_max=static_cast<jule::I64>(_1d8bc82d6_MaxI(_1ab263937_Str((*(_132444_prim)).ptr())));
			}
		}
		_match_end_1bc1a1c4e:;
	};
	jule::Ptr<_1ab22be1c_Eval> _133513_eval = _1ab1b0763_eval(_self_, jule::Trait<_1ab27a553_Lookup>(_self_, 3));;
	jule::I64 _133613_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1ab132d23_EnumItem> _133713_first = (*((*(_132462_e))))._field_Items[0LL];;
	_1bc1a402b_checkEnumItemInt(_self_, &(_133513_eval), _132462_e, _132444_prim, &(_133713_first), &(_133613_n));
	if (((*((*(_133713_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1bc1a3239:;
				{
					_133613_n=static_cast<jule::I64>(_1d8bd2763_AsI64((*((*((*(_133713_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1bc1a216c:;
		};
	};
	{
		auto expr = (*((*(_132462_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bc1ad761:;
		if (it != expr_end) {
			jule::Ptr<_1ab132d23_EnumItem> _134921_item = *it;
			{
				if (((_1ab1331ca_AutoExpr(_134921_item.ptr()) && (_133613_n > 0LL)) && ((_132513_max - _133613_n) <= 0LL))) {
					_1ab1a82b6_pushErr(_self_.ptr(), (*(_134921_item))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1bc1ad761;
				};
				(_133613_n)++;
				_1bc1a402b_checkEnumItemInt(_self_, &(_133513_eval), _132462_e, _132444_prim, &(_134921_item), &(_133613_n));
			}
			_iter_next_1bc1ad761:;
			++it;
			goto _iter_begin_1bc1ad761;
		}
		_iter_end_1bc1ad761:;
	};
}



inline void _1ab1b6291_checkEnumItemsInt(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab133890_Enum>* _135942_e) {
	jule::Ptr<_1ab2635e6_Prim> _13609_prim = _1ab25d16d_Prim((*((*((*(_135942_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1d8bcdce2_IsSigInt((*(_13609_prim))._field_Kind)) {
			_case_begin_1bc1909da:;
			{
				_1bc1a10b1_checkEnumItemsInt1(_self_, &(_13609_prim), _135942_e);
			}
		}
		else {
			_case_begin_1bc190644:;
			{
				_1bc190e08_checkEnumItemsInt1(_self_, &(_13609_prim), _135942_e);
			}
		}
		_match_end_1bc1905cd:;
	};
}



inline void _1ab1b6549_checkEnumDecl(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab133890_Enum>* _136938_e) {
	if (_1ab0c48db_IsIgnoreIdent((*((*(_136938_e))))._field_Ident)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_136938_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ab1a8ecb_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_136938_e)))), &((*((*(_136938_e))))._field_Ident), false)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_136938_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136938_e))))._field_Ident, &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_136938_e))))._field_Items.len() == 0LL)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_136938_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_136938_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1bc1b336a_checkEnumItemsDup(_self_.ptr(), (*((*(_136938_e))))._field_Items);
	if (((*((*(_136938_e))))._field_Kind != nullptr)) {
		if ((!(_1ab1ade37_checkType(_self_, &((*((*(_136938_e))))._field_Kind), jule::Trait<_1ab27a553_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*((*(_136938_e))))._field_Kind=(*(_1ab346c90_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_1ab2635e6_Prim> _139313_t = _1ab25d16d_Prim((*((*((*(_136938_e))))._field_Kind))._field_Kind.ptr());;
	if ((_139313_t == nullptr)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_136938_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1ab266a7d_IsStr(_139313_t.ptr())) {
			_case_begin_1bc1b9e21:;
			{
				_1ab1b55e2_checkEnumItemsStr(_self_, _136938_e);
			}
		}
		else if (_1d8bce3b9_IsInt(_1ab263937_Str(_139313_t.ptr()))) {
			_case_begin_1bc1b9b24:;
			{
				_1ab1b6291_checkEnumItemsInt(_self_, _136938_e);
			}
		}
		else {
			_case_begin_1bc1b9aad:;
			{
				_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_136938_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc1b91ea:;
	};
}



inline void _1ab1b6802_checkTypeEnumDecl(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab13509a_TypeEnum>* _141042_e) {
	if (_1ab0c48db_IsIgnoreIdent((*((*(_141042_e))))._field_Ident)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_141042_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ab1a8ecb_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_141042_e)))), &((*((*(_141042_e))))._field_Ident), false)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_141042_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_141042_e))))._field_Ident, &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_141042_e))))._field_Items.len() == 0LL)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_141042_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_141042_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1bc1c01ac_checkEnumItemsDup(_self_.ptr(), (*((*(_141042_e))))._field_Items);
	{
		auto expr = &((*((*(_141042_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1bba5a:;
		if (it != expr_end) {
			jule::Ptr<_1ab1349c3_TypeEnumItem> _142421_item = *it;
			{
				if (((*(_142421_item))._field_Kind == nullptr)) {
					_1ab1a82b6_pushErr(_self_.ptr(), (*(_142421_item))._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1bc1bba5a;
				};
				jule::Bool _142913_ok = _1ab1ade37_checkType(_self_, &((*(_142421_item))._field_Kind), jule::Trait<_1ab27a553_Lookup>(_self_, 3));;
				if ((!(_142913_ok))) {
					goto _iter_next_1bc1bba5a;
				};
				jule::Ptr<_1ab2635e6_Prim> _143313_p = _1ab25d16d_Prim((*((*(_142421_item))._field_Kind))._field_Kind.ptr());;
				if (((_143313_p != nullptr) && _1ab266d14_IsAny(_143313_p.ptr()))) {
					_1ab1a82b6_pushErr(_self_.ptr(), (*(_142421_item))._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1bc1bba5a:;
			++it;
			goto _iter_begin_1bc1bba5a;
		}
		_iter_end_1bc1bba5a:;
	};
	if (((*((*(_141042_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1ab1349c3_TypeEnumItem> _143917_item = (*((*(_141042_e))))._field_Items[0LL];;
		_1ab25aa1c_TypeKind _144013_tk = _1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>((*(_141042_e)), 4)};;
		if ((((*((*(_143917_item))._field_Kind))._field_Kind != nullptr) && _1ab25b226_Equal((*((*(_143917_item))._field_Kind))._field_Kind, ((jule::Ptr<_1ab25aa1c_TypeKind>)((&(_144013_tk))))))) {
			_1ab1a82b6_pushErr(_self_.ptr(), (*(_143917_item))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1ab1353db_Str((*(_141042_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _1ab1b6a88_checkEnumDecls(jule::Ptr<_1ab1a567b_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1ca56e:;
		if (it != expr_end) {
			jule::Ptr<_1ab133890_Enum> _145121_e = *it;
			{
				_1ab1b6549_checkEnumDecl(_self_, &(_145121_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bc1ca56e:;
			++it;
			goto _iter_begin_1bc1ca56e;
		}
		_iter_end_1bc1ca56e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab1b6d1e_checkTypeEnumDecls(jule::Ptr<_1ab1a567b_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1cb064:;
		if (it != expr_end) {
			jule::Ptr<_1ab13509a_TypeEnum> _146321_e = *it;
			{
				_1ab1b6802_checkTypeEnumDecl(_self_, &(_146321_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bc1cb064:;
			++it;
			goto _iter_begin_1bc1cb064;
		}
		_iter_end_1bc1cb064:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab1b7160_checkDeclGenerics(_1ab1a567b_Sema* _self_, jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>>* _147337_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _147337_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1cd693:;
		if (it != expr_end) {
			jule::I64 _147513_i = it - expr->begin();
			jule::Ptr<_1ab0e4653_GenericDecl> *_147516_g = it;
			{
				if (_1ab0c48db_IsIgnoreIdent((*((*(_147516_g))))._field_Ident)) {
					_1ab1a82b6_pushErr(_self_, (*((*(_147516_g))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1bc1cd693;
				};
				_julec_label_1bc1ced37:;
				{
					auto expr = _147337_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc1d0035:;
					if (it != expr_end) {
						jule::I64 _148417_j = it - expr->begin();
						jule::Ptr<_1ab0e4653_GenericDecl> *_148420_ct = it;
						{
							{
								
								if ((_148417_j >= _147513_i)) {
									_case_begin_1bc1d0b6d:;
									{
										goto _iter_end_1bc1d0035;
									}
								}
								else if (((*((*(_147516_g))))._field_Ident == (*((*(_148420_ct))))._field_Ident)) {
									_case_begin_1bc1d0be5:;
									{
										_1ab1a82b6_pushErr(_self_, (*((*(_147516_g))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_147516_g))))._field_Ident, &__jule_any_type4)}));
										_1ab1a8629_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1bc1d0035;
									}
								}
								_match_end_1bc1d0a6e:;
							};
						}
						_iter_next_1bc1d0035:;
						++it;
						_148417_j++;
						goto _iter_begin_1bc1d0035;
					}
					_iter_end_1bc1d0035:;
				};
			}
			_iter_next_1bc1cd693:;
			++it;
			_147513_i++;
			goto _iter_begin_1bc1cd693;
		}
		_iter_end_1bc1cd693:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab1b74a1_checkFnDeclParamsDup(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab11cdeb_Fn>* _150040_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1bc1d18b6:;
	{
		auto expr = &((*((*(_150040_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1d2ee4:;
		if (it != expr_end) {
			jule::I64 _150313_i = it - expr->begin();
			jule::Ptr<_1ab11b427_Param> *_150316_p = it;
			{
				{
					auto expr = &((*((*(_150040_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc1d2e8e:;
					if (it != expr_end) {
						jule::Ptr<_1ab0e4653_GenericDecl> *_150520_g = it;
						{
							if (((*((*(_150316_p))))._field_Ident == (*((*(_150520_g))))._field_Ident)) {
								__jule_func_result=false;
								_1ab1a82b6_pushErr(_self_, (*((*(_150316_p))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_150316_p))))._field_Ident, &__jule_any_type4)}));
								_1ab1a8629_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1bc1d2ee4;
							};
						}
						_iter_next_1bc1d2e8e:;
						++it;
						goto _iter_begin_1bc1d2e8e;
					}
					_iter_end_1bc1d2e8e:;
				};
				_julec_label_1bc1d3b1b:;
				{
					auto expr = &((*((*(_150040_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc1d4798:;
					if (it != expr_end) {
						jule::I64 _151517_j = it - expr->begin();
						jule::Ptr<_1ab11b427_Param> *_151520_jp = it;
						{
							{
								
								if ((_151517_j >= _150313_i)) {
									_case_begin_1bc1d65e1:;
									{
										goto _iter_end_1bc1d4798;
									}
								}
								else if (_1ab0c48db_IsIgnoreIdent((*((*(_150316_p))))._field_Ident) || _1ab0c48db_IsIgnoreIdent((*((*(_151520_jp))))._field_Ident) || _1ab0c4ba5_IsAnonIdent((*((*(_150316_p))))._field_Ident) || _1ab0c4ba5_IsAnonIdent((*((*(_151520_jp))))._field_Ident)) {
									_case_begin_1bc1d6668:;
									{
										goto _iter_end_1bc1d4798;
									}
								}
								else if (((*((*(_150316_p))))._field_Ident == (*((*(_151520_jp))))._field_Ident)) {
									_case_begin_1bc1d66e0:;
									{
										__jule_func_result=false;
										_1ab1a82b6_pushErr(_self_, (*((*(_150316_p))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_150316_p))))._field_Ident, &__jule_any_type4)}));
										_1ab1a8629_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1bc1d2ee4;
									}
								}
								_match_end_1bc1d64d1:;
							};
						}
						_iter_next_1bc1d4798:;
						++it;
						_151517_j++;
						goto _iter_begin_1bc1d4798;
					}
					_iter_end_1bc1d4798:;
				};
			}
			_iter_next_1bc1d2ee4:;
			++it;
			_150313_i++;
			goto _iter_begin_1bc1d2ee4;
		}
		_iter_end_1bc1d2ee4:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab1b77e2_checkFnDeclResultDup(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab11cdeb_Fn>* _153740_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1ab11d36e_IsVoid((*(_153740_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*((*(_153740_f))))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1d9a67:;
		if (it != expr_end) {
			jule::I64 _154413_i = it - expr->begin();
			jule::Ptr<_1ab0c1e7c_Token> *_154416_v = it;
			{
				if ((_1ab0c48db_IsIgnoreIdent((*((*(_154416_v))))._field_Kind) || _1ab0c4ba5_IsAnonIdent((*((*(_154416_v))))._field_Kind))) {
					goto _iter_next_1bc1d9a67;
				};
				{
					auto expr = &((*((*(_153740_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc1dac00:;
					if (it != expr_end) {
						jule::Ptr<_1ab0e4653_GenericDecl> *_154920_g = it;
						{
							if (((*((*(_154416_v))))._field_Kind == (*((*(_154920_g))))._field_Ident)) {
								goto _julec_label_1bc1dc350;
							};
						}
						_iter_next_1bc1dac00:;
						++it;
						goto _iter_begin_1bc1dac00;
					}
					_iter_end_1bc1dac00:;
				};
				{
					auto expr = &((*((*(_153740_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc1dc6b3:;
					if (it != expr_end) {
						jule::Ptr<_1ab11b427_Param> *_155520_p = it;
						{
							if (((*((*(_154416_v))))._field_Kind == (*((*(_155520_p))))._field_Ident)) {
								goto _julec_label_1bc1dc350;
							};
						}
						_iter_next_1bc1dc6b3:;
						++it;
						goto _iter_begin_1bc1dc6b3;
					}
					_iter_end_1bc1dc6b3:;
				};
				_julec_label_1bc1dd917:;
				{
					auto expr = &((*((*((*(_153740_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc1dd83a:;
					if (it != expr_end) {
						jule::I64 _156317_j = it - expr->begin();
						jule::Ptr<_1ab0c1e7c_Token> *_156320_jv = it;
						{
							{
								
								if ((_156317_j >= _154413_i)) {
									_case_begin_1bc1dee46:;
									{
										goto _iter_end_1bc1dd83a;
									}
								}
								else if (((*((*(_156320_jv))))._field_Kind == (*((*(_154416_v))))._field_Kind)) {
									_case_begin_1bc1deebd:;
									{
										goto _julec_label_1bc1dc350;
									}
								}
								_match_end_1bc1ded36:;
							};
						}
						_iter_next_1bc1dd83a:;
						++it;
						_156317_j++;
						goto _iter_begin_1bc1dd83a;
					}
					_iter_end_1bc1dd83a:;
				};
				goto _iter_next_1bc1d9a67;
				_julec_label_1bc1dc350:;
				_1ab1a82b6_pushErr(_self_, (*(_154416_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_154416_v))))._field_Kind, &__jule_any_type4)}));
				_1ab1a8629_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1bc1d9a67:;
			++it;
			_154413_i++;
			goto _iter_begin_1bc1d9a67;
		}
		_iter_end_1bc1d9a67:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab1b7b33_checkFnVariadicParam(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab11cdeb_Fn>* _158245_f) {
	if (((*((*(_158245_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1ab11b427_Param> _158613_param = (*((*(_158245_f))))._field_Params[((*((*(_158245_f))))._field_Params.len() - 1LL)];;
	if (((*(_158613_param))._field_Variadic && (*(_158613_param))._field_Reference)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*(_158613_param))._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1ab1b7ddb_checkFnDeclPrototype(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab11cdeb_Fn>* _159545_f) {
	if (((*((*(_159545_f))))._field_Exceptional && (*((*(_159545_f))))._field_Binded)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_159545_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_159545_f))))._field_Exceptional) {
		if (_1ab11d88b_IsEntryPoint((*(_159545_f)).ptr())) {
			_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_159545_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1ab11db22_IsInit((*(_159545_f)).ptr())) {
			_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_159545_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1ab1b7160_checkDeclGenerics(_self_.ptr(), &((*((*(_159545_f))))._field_Generics))))) {
			_case_begin_1bc1e728e:;
		}
		else if ((!(_1ab1b74a1_checkFnDeclParamsDup(_self_.ptr(), _159545_f)))) {
			_case_begin_1bc1e7316:;
		}
		else if ((!(_1ab1b77e2_checkFnDeclResultDup(_self_.ptr(), _159545_f)))) {
			_case_begin_1bc1e738d:;
		}
		else if ((!(_1ab1b7b33_checkFnVariadicParam(_self_, _159545_f)))) {
			_case_begin_1bc1e7415:;
		}
		_match_end_1bc1e590d:;
	};
}



inline jule::Bool _1ab1b8392_catchTraitInheritCycle(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab131195_Trait> _161742_t1, jule::Ptr<_1ab131195_Trait> _161758_t2, _1d7ad2eb1_StrBuilder* _161775_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_161758_t2))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1e96ae:;
		if (it != expr_end) {
			jule::Ptr<_1ab262bde_TypeSymbol> _161921_i = *it;
			{
				if (((*(_161921_i))._field_Kind == nullptr)) {
					goto _iter_next_1bc1e96ae;
				};
				jule::Ptr<_1ab131195_Trait> _162317_t3 = _1ab25e977_Trait((*(_161921_i))._field_Kind.ptr());;
				if ((_161742_t1 == _162317_t3)) {
					_1ab1bd122_pushCycleError(_self_.ptr(), &((*(_161758_t2))._field_Ident), &((*(_162317_t3))._field_Ident), _161775_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1ab1b8392_catchTraitInheritCycle(_self_, _161742_t1, _162317_t3, _161775_message)))) {
					_1ab1bd122_pushCycleError(_self_.ptr(), &((*(_161758_t2))._field_Ident), &((*(_162317_t3))._field_Ident), _161775_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bc1e96ae:;
			++it;
			goto _iter_begin_1bc1e96ae;
		}
		_iter_end_1bc1e96ae:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab1b86d3__checkTraitDeclInherits(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab131195_Trait>* _163648_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_163648_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1ecd11:;
		if (it != expr_end) {
			jule::I64 _163814_i = it - expr->begin();
			jule::Ptr<_1ab262bde_TypeSymbol> _163821_it = *it;
			{
				if ((!(_1ab1ade37_checkType(_self_, &(_163821_it), jule::Trait<_1ab27a553_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1bc1ecd11;
				};
				jule::Ptr<_1ab131195_Trait> _164317_t2 = _1ab25e977_Trait((*(_163821_it))._field_Kind.ptr());;
				if ((_164317_t2 == nullptr)) {
					_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_163821_it))._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_163648_t))))._field_Ident, &__jule_any_type4),jule::Any(_1ab25add5_Str((*(_163821_it))._field_Kind.ptr()), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1bc1ecd11;
				};
				{
					auto expr = &((*((*(_163648_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc1eec03:;
					if (it != expr_end) {
						jule::I64 _164917_j = it - expr->begin();
						jule::Ptr<_1ab262bde_TypeSymbol> _164920_it2 = *it;
						{
							if ((_164917_j >= _163814_i)) {
								goto _iter_end_1bc1eec03;
							};
							if ((((*(_164920_it2))._field_Kind != nullptr) && _1ab25b226_Equal((*(_163821_it))._field_Kind, (*(_164920_it2))._field_Kind))) {
								_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_163821_it))._field_Decl))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_164317_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_1bc1eec03;
							};
						}
						_iter_next_1bc1eec03:;
						++it;
						_164917_j++;
						goto _iter_begin_1bc1eec03;
					}
					_iter_end_1bc1eec03:;
				};
				if (((*(_163648_t)) == _164317_t2)) {
					_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_163821_it))._field_Decl))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_163648_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_1d7ad2eb1_StrBuilder _166321_message = static__1d7ad327a_New(64LL);;
					__jule_func_result=(__jule_func_result && _1ab1b8392_catchTraitInheritCycle(_self_, (*(_163648_t)), _164317_t2, &(_166321_message)));
					if ((_1d7adc817_Len(&_166321_message) > 0LL)) {
						jule::Str _166625_errMsg = _1d7adc383_Str(&_166321_message);;
						_1d7adc581_Clear(&_166321_message);
						_1ab1bd122_pushCycleError(_self_.ptr(), &((*((*(_163648_t))))._field_Ident), &((*(_164317_t2))._field_Ident), &(_166321_message));
						_166625_errMsg+=_1d7adc383_Str(&_166321_message);
						_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_163821_it))._field_Decl))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_166625_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_1bc1ecd11:;
			++it;
			_163814_i++;
			goto _iter_begin_1bc1ecd11;
		}
		_iter_end_1bc1ecd11:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1ab1b898b_checkTraitDeclInherits(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab131195_Trait>* _167747_t) {
	{
		auto expr = &((*((*(_167747_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc204a4e:;
		if (it != expr_end) {
			jule::I64 _167814_i = it - expr->begin();
			jule::Ptr<_1ab262bde_TypeSymbol> _167821_it = *it;
			{
				jule::Ptr<_1ab131195_Trait> _167917_t1 = _1ab25e977_Trait((*(_167821_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_167747_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc208855:;
					if (it != expr_end) {
						jule::I64 _168018_j = it - expr->begin();
						jule::Ptr<_1ab262bde_TypeSymbol> _168025_it2 = *it;
						{
							if ((_168018_j == _167814_i)) {
								goto _iter_next_1bc208855;
							};
							jule::Ptr<_1ab131195_Trait> _168421_t2 = _1ab25e977_Trait((*(_168025_it2))._field_Kind.ptr());;
							{
								auto expr = &((*(_167917_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bc209dea:;
								if (it != expr_end) {
									jule::Ptr<_1ab11cdeb_Fn> _168529_t1m = *it;
									{
										jule::Ptr<_1ab11cdeb_Fn> _168625_t2m = _1ab131d44_FindMethod(_168421_t2.ptr(), (*(_168529_t1m))._field_Ident);;
										if ((_168625_t2m == nullptr)) {
											goto _iter_next_1bc209dea;
										};
										jule::Ptr<_1ab120d00_FnIns> _169021_t1f = _1ab1b1e6d_getTraitCheckFnKind(_self_, &(_168529_t1m));;
										jule::Ptr<_1ab120d00_FnIns> _169121_t2f = _1ab1b1e6d_getTraitCheckFnKind(_self_, &(_168625_t2m));;
										if ((!(_1ab121c68_equalTrait(_169021_t1f, &(_169121_t2f))))) {
											_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_167821_it))._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_167747_t))))._field_Ident, &__jule_any_type4),jule::Any((*(_168421_t2))._field_Ident, &__jule_any_type4),jule::Any(_1ab122b9d_GetKindStr(_169021_t1f.ptr(), true), &__jule_any_type4),jule::Any(_1ab122b9d_GetKindStr(_169121_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_1bc209dea:;
									++it;
									goto _iter_begin_1bc209dea;
								}
								_iter_end_1bc209dea:;
							};
						}
						_iter_next_1bc208855:;
						++it;
						_168018_j++;
						goto _iter_begin_1bc208855;
					}
					_iter_end_1bc208855:;
				};
			}
			_iter_next_1bc204a4e:;
			++it;
			_167814_i++;
			goto _iter_begin_1bc204a4e;
		}
		_iter_end_1bc204a4e:;
	};
}



inline void _1ab1b8c44_checkTraitDeclMethod(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab11cdeb_Fn>* _170245_f) {
	if (_1ab0c48db_IsIgnoreIdent((*((*(_170245_f))))._field_Ident)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_170245_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ab0c4ba5_IsAnonIdent((*((*(_170245_f))))._field_Ident)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_170245_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_170245_f))))._field_sema=_self_;
	_1ab1b7ddb_checkFnDeclPrototype(_self_, _170245_f);
	jule::Ptr<_1ab120d00_FnIns> _171013_ins = _1ab11e65b_instance((*(_170245_f)));;
	_1ab1b33c0_reloadFnInsTypes(_self_, _171013_ins);
	(*(_171013_ins))._field_reloaded=true;
	_1ab11e969_appendInstance((*(_170245_f)).ptr(), &(_171013_ins));
}



inline void _1ab1b8eec_checkTraitDeclMethods(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab131195_Trait>* _171646_t) {
	{
		auto expr = &((*((*(_171646_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc21183b:;
		if (it != expr_end) {
			jule::I64 _171714_i = it - expr->begin();
			jule::Ptr<_1ab11cdeb_Fn> _171721_f = *it;
			{
				_1ab1b8c44_checkTraitDeclMethod(_self_, &(_171721_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1ab1324c6_findMethodInherit((*(_171646_t)).ptr(), &((*(_171721_f))._field_Ident)) != nullptr)) {
					_1ab1a82b6_pushErr(_self_.ptr(), (*(_171721_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_171721_f))._field_Ident, &__jule_any_type4)}));
					_1ab1a8629_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1bc21183b;
				};
				_julec_label_1bc2141ac:;
				{
					auto expr = &((*((*(_171646_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc212d8c:;
					if (it != expr_end) {
						jule::I64 _173317_j = it - expr->begin();
						jule::Ptr<_1ab11cdeb_Fn> _173320_jf = *it;
						{
							{
								
								if ((_173317_j >= _171714_i)) {
									_case_begin_1bc215576:;
									{
										goto _iter_end_1bc212d8c;
									}
								}
								else if (((*(_171721_f))._field_Ident == (*(_173320_jf))._field_Ident)) {
									_case_begin_1bc2155ed:;
									{
										_1ab1a82b6_pushErr(_self_.ptr(), (*(_171721_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_171721_f))._field_Ident, &__jule_any_type4)}));
										_1ab1a8629_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1bc212d8c;
									}
								}
								_match_end_1bc215466:;
							};
						}
						_iter_next_1bc212d8c:;
						++it;
						_173317_j++;
						goto _iter_begin_1bc212d8c;
					}
					_iter_end_1bc212d8c:;
				};
			}
			_iter_next_1bc21183b:;
			++it;
			_171714_i++;
			goto _iter_begin_1bc21183b;
		}
		_iter_end_1bc21183b:;
	};
}



inline void _1ab1b92a5_checkTraitDecl(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab131195_Trait>* _175239_t) {
	if (_1ab0c48db_IsIgnoreIdent((*((*(_175239_t))))._field_Ident)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_175239_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ab1a8ecb_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_175239_t)))), &((*((*(_175239_t))))._field_Ident), false)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_175239_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_175239_t))))._field_Ident, &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1ab1b898b_checkTraitDeclInherits(_self_, _175239_t);
	_1ab1b8eec_checkTraitDeclMethods(_self_, _175239_t);
}



inline jule::Bool _1ab1b953b_checkTraitDecls(jule::Ptr<_1ab1a567b_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc21a3d3:;
		if (it != expr_end) {
			jule::Ptr<_1ab131195_Trait> _176621_t = *it;
			{
				_1ab1b92a5_checkTraitDecl(_self_, &(_176621_t));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bc21a3d3:;
			++it;
			goto _iter_begin_1bc21a3d3;
		}
		_iter_end_1bc21a3d3:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab1b9937_checkTraitImplMethods(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab131195_Trait>* _177645_base, jule::Ptr<_1ab15d37b_Impl>* _177660_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_177660_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc21c01c:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> *_177816_f = it;
			{
				if ((_1ab131d44_FindMethod((*(_177645_base)).ptr(), (*((*(_177816_f))))._field_Ident) == nullptr)) {
					_1ab1a82b6_pushErr(_self_, (*((*(_177816_f))))._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_177645_base))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_177816_f))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1bc21c01c:;
			++it;
			goto _iter_begin_1bc21c01c;
		}
		_iter_end_1bc21c01c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab1b9d33_implToStruct(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab10803a_Struct>* _178737_dest, jule::Ptr<_1ab15d37b_Impl>* _178757_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_178757_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc21e66d:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _179121_f = *it;
			{
				if (((_1ab108ba6_FindMethod((*(_178737_dest)).ptr(), (*(_179121_f))._field_Ident, (*(_179121_f))._field_Statically) != nullptr) || (_1ab109338_FindField((*(_178737_dest)).ptr(), (*(_179121_f))._field_Ident) != nullptr))) {
					_1ab1a82b6_pushErr(_self_.ptr(), (*(_179121_f))._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_178737_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_179121_f))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1bc21e66d;
				};
				if ((((*((*(_178737_dest))))._field_Generics.len() > 0LL) && ((*(_179121_f))._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*(_179121_f))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bc222561:;
						if (it != expr_end) {
							jule::Ptr<_1ab0e4653_GenericDecl> _179924_fg = *it;
							{
								{
									auto expr = &((*((*(_178737_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1bc222e35:;
									if (it != expr_end) {
										jule::Ptr<_1ab0e4653_GenericDecl> _180028_dg = *it;
										{
											if (((*(_179924_fg))._field_Ident == (*(_180028_dg))._field_Ident)) {
												_1ab1a82b6_pushErr(_self_.ptr(), (*(_179924_fg))._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1bc222e35:;
										++it;
										goto _iter_begin_1bc222e35;
									}
									_iter_end_1bc222e35:;
								};
							}
							_iter_next_1bc222561:;
							++it;
							goto _iter_begin_1bc222561;
						}
						_iter_end_1bc222561:;
					};
				};
				_1ab1a933e_checkDirectives(_self_, &((*(_179121_f))._field_Directives), jule::Any(_179121_f, &__jule_any_type64));
				(*(_179121_f))._field_sema=_self_;
				(*(_179121_f))._field_Owner=(*(_178737_dest));
				{ jule::Slice<jule::Ptr<_1ab11cdeb_Fn>> &__jule_push_dest = (*((*(_178737_dest))))._field_Methods; __jule_push_dest.push(_179121_f); };
			}
			_iter_next_1bc21e66d:;
			++it;
			goto _iter_begin_1bc21e66d;
		}
		_iter_end_1bc21e66d:;
	};
	{
		auto expr = &((*((*(_178757_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc21e54c:;
		if (it != expr_end) {
			jule::Ptr<_1ab1c7a66_Var> _181621_v = *it;
			{
				;
				if (((_1ab108ba6_FindMethod((*(_178737_dest)).ptr(), (*(_181621_v))._field_Ident, true) != nullptr) || (_1ab108ee7_FindStatic((*(_178737_dest)).ptr(), (*(_181621_v))._field_Ident) != nullptr))) {
					_1ab1a82b6_pushErr(_self_.ptr(), (*(_181621_v))._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_178737_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_181621_v))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1bc21e54c;
				};
				{ jule::Slice<jule::Ptr<_1ab1c7a66_Var>> &__jule_push_dest = (*((*(_178737_dest))))._field_Statics; __jule_push_dest.push(_181621_v); };
			}
			_iter_next_1bc21e54c:;
			++it;
			goto _iter_begin_1bc21e54c;
		}
		_iter_end_1bc21e54c:;
	};
	return __jule_func_result;;
}



inline void _1ab1ba0db_implTrait(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab15d37b_Impl>* _182934_decl) {
	jule::Ptr<_1ab25aa1c_TypeKind> _183013_base_t = _1ab1aea70_selectType(_self_, &((*((*(_182934_decl))))._field_Base));;
	if ((_183013_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab131195_Trait> _183413_base = _1ab25e977_Trait(_183013_base_t.ptr());;
	if ((_183413_base == nullptr)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*((*(_182934_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str(_183013_base_t.ptr()), &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion(_self_.ptr(), jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab25aa1c_TypeKind> _184113_destT = _1ab1aea70_selectType(_self_, &((*((*(_182934_decl))))._field_Dest));;
	if ((_184113_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab10acb8_StructIns> _184513_destS = _1ab25e6e1_Struct(_184113_destT.ptr());;
	if ((_184513_destS == nullptr)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*((*(_182934_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str(_184113_destT.ptr()), &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion(_self_.ptr(), jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab10803a_Struct> _185213_dest = (*(_184513_destS))._field_Decl;;
	if ((_1ab0c7db7_Dir((*((*(_185213_dest))._field_Token))._field_File.ptr()) != _1ab0c7db7_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*((*(_182934_decl))))._field_Dest))._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1ab1c5d50_pushImplemented(_183413_base, &(_185213_dest));
	_1ab1c613b_pushImplements(&(_185213_dest), _183413_base);
	if (((*((*(_182934_decl))))._field_Statics.len() > 0LL)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*((*(_182934_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1ab1b9937_checkTraitImplMethods(_self_.ptr(), &(_183413_base), _182934_decl)))) {
			_case_begin_1bc2318c2:;
		}
		else if ((!(_1ab1b9d33_implToStruct(_self_, &(_185213_dest), _182934_decl)))) {
			_case_begin_1bc231949:;
		}
		_match_end_1bc22de0d:;
	};
}



inline void _1ab1ba394_implStruct(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab15d37b_Impl>* _187235_decl) {
	jule::Ptr<_1ab25aa1c_TypeKind> _187313_destT = _1ab1aea70_selectType(_self_, &((*((*(_187235_decl))))._field_Dest));;
	if ((_187313_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab10acb8_StructIns> _187713_destS = _1ab25e6e1_Struct(_187313_destT.ptr());;
	if ((_187713_destS == nullptr)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*((*(_187235_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str(_187313_destT.ptr()), &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion(_self_.ptr(), jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab10803a_Struct> _188413_dest = (*(_187713_destS))._field_Decl;;
	if ((_1ab0c7db7_Dir((*((*(_188413_dest))._field_Token))._field_File.ptr()) != _1ab0c7db7_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*((*(_187235_decl))))._field_Dest))._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1ab1b9d33_implToStruct(_self_, &(_188413_dest), _187235_decl)))) {
			_case_begin_1bc236e7c:;
		}
		_match_end_1bc235662:;
	};
}



inline void _1ab1ba64c_implImpl(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab15d37b_Impl>* _189633_decl) {
	{
		
		if (_1ab15d744_IsTraitImpl((*(_189633_decl)).ptr())) {
			_case_begin_1bc237a60:;
			{
				_1ab1ba0db_implTrait(_self_, _189633_decl);
			}
		}
		else if (_1ab15d9ca_IsStructImpl((*(_189633_decl)).ptr())) {
			_case_begin_1bc237ad7:;
			{
				_1ab1ba394_implStruct(_self_, _189633_decl);
			}
		}
		_match_end_1bc237950:;
	};
}



inline void _1ab1ba9b0_checkVarDecl(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab1c7a66_Var>* _190737_decl, jule::Trait<_1ab27a553_Lookup> _190753_l) {
	if (_1ab0c48db_IsIgnoreIdent((*((*(_190737_decl))))._field_Ident)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1ab1c8182_IsTypeInferred((*(_190737_decl)).ptr())) {
		if ((!(_1ab1c7deb_IsInitialized((*(_190737_decl)).ptr())))) {
			_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1ab1ade37_checkType(_self_, &((*((*(_190737_decl))))._field_Kind), _190753_l);
	};
	if ((*((*(_190737_decl))))._field_Reference) {
		if ((*((*(_190737_decl))))._field_Constant) {
			_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_190737_decl))))._field_Statically) {
			_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1ab1c7deb_IsInitialized((*(_190737_decl)).ptr())))) {
		if ((*((*(_190737_decl))))._field_Constant) {
			_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_190737_decl))))._field_Statically) {
			_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_190737_decl))))._field_Reference) {
			_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1ab1bac68_checkGlobalVarDecl(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab1c7a66_Var>* _194443_decl) {
	if (_1ab1a8ecb_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_194443_decl)))), &((*((*(_194443_decl))))._field_Ident), (*((*(_194443_decl))))._field_Binded)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_194443_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_194443_decl))))._field_Ident, &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_194443_decl))))._field_Binded && (*((*(_194443_decl))))._field_Constant)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_194443_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_194443_decl))))._field_Binded)) && (!((*((*(_194443_decl))))._field_Constant))) && (!((*((*(_194443_decl))))._field_Statically)))) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_194443_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_1ab1a8629_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1ab1a933e_checkDirectives(_self_, &((*((*(_194443_decl))))._field_Directives), jule::Any((*(_194443_decl)), &__jule_any_type8));
	_1ab1ba9b0_checkVarDecl(_self_, _194443_decl, jule::Trait<_1ab27a553_Lookup>(_self_, 3));
}



inline jule::Bool _1ab1baeee_checkGlobalDecls(jule::Ptr<_1ab1a567b_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc245683:;
		if (it != expr_end) {
			jule::Ptr<_1ab1c7a66_Var> _196221_decl = *it;
			{
				_1ab1bac68_checkGlobalVarDecl(_self_, &(_196221_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bc245683:;
			++it;
			goto _iter_begin_1bc245683;
		}
		_iter_end_1bc245683:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab1bb3ea_checkStructTraitImpl(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab10803a_Struct>* _197245_strct, jule::Ptr<_1ab131195_Trait>* _197266_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_197266_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2472ab:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _197321_tf = *it;
			{
				jule::Bool _197417_exist = false;;
				jule::Ptr<_1ab11cdeb_Fn> _197517_sf = _1ab108ba6_FindMethod((*(_197245_strct)).ptr(), (*(_197321_tf))._field_Ident, (*(_197321_tf))._field_Statically);;
				jule::Ptr<_1ab120d00_FnIns> _197613_tfK = _1ab1b1e6d_getTraitCheckFnKind(_self_, &(_197321_tf));;
				if ((_197517_sf != nullptr)) {
					jule::Ptr<_1ab120d00_FnIns> _197821_sfK = _1ab1b1e6d_getTraitCheckFnKind(_self_, &(_197517_sf));;
					_197417_exist=_1ab121c68_equalTrait(_197613_tfK, &(_197821_sfK));
				};
				if (_197417_exist) {
					jule::Ptr<_1ab0d6865_Directive> _198217_d = _1ab253a8c_findDirective(&((*(_197517_sf))._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_198217_d != nullptr)) {
						_1ab1a82b6_pushErr(_self_.ptr(), (*(_198217_d))._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_197245_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_197266_trt))))._field_Ident, &__jule_any_type4),jule::Any(_1ab122b9d_GetKindStr(_197613_tfK.ptr(), true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1bc2472ab:;
			++it;
			goto _iter_begin_1bc2472ab;
		}
		_iter_end_1bc2472ab:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab1bb73b_checkStructImpls(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab10803a_Struct>* _199641_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_199641_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc24c679:;
		if (it != expr_end) {
			jule::Ptr<_1ab131195_Trait> _199821_trt = *it;
			{
				__jule_func_result=(_1ab1bb3ea_checkStructTraitImpl(_self_, _199641_s, &(_199821_trt)) && __jule_func_result);
			}
			_iter_next_1bc24c679:;
			++it;
			goto _iter_begin_1bc24c679;
		}
		_iter_end_1bc24c679:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ab1bba7c_checkStructFields(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab10803a_Struct>* _200442_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_200442_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc24daed:;
		if (it != expr_end) {
			jule::Ptr<_1ab105147_Field> _200621_f = *it;
			{
				(*(_200621_f))._field_Owner=(*(_200442_st));
				{
					auto expr = &((*((*(_200442_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc24e846:;
					if (it != expr_end) {
						jule::Ptr<_1ab105147_Field> _200820_cf = *it;
						{
							if ((_200621_f == _200820_cf)) {
								goto _iter_end_1bc24e846;
							} else if (((*(_200621_f))._field_Ident == (*(_200820_cf))._field_Ident)) {
								_1ab1a82b6_pushErr(_self_.ptr(), (*(_200621_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_200621_f))._field_Ident, &__jule_any_type4)}));
								_1ab1a8629_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1bc24e846:;
						++it;
						goto _iter_begin_1bc24e846;
					}
					_iter_end_1bc24e846:;
				};
			}
			_iter_next_1bc24daed:;
			++it;
			goto _iter_begin_1bc24daed;
		}
		_iter_end_1bc24daed:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1ab1bbd35_checkStructDecl(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab10803a_Struct>* _202140_s) {
	if (_1ab0c48db_IsIgnoreIdent((*((*(_202140_s))))._field_Ident)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_202140_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ab1a8ecb_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_202140_s)))), &((*((*(_202140_s))))._field_Ident), (*((*(_202140_s))))._field_Binded)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_202140_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_202140_s))))._field_Ident, &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1ab1a933e_checkDirectives(_self_, &((*((*(_202140_s))))._field_Directives), jule::Any((*(_202140_s)), &__jule_any_type65));
	{
		
		if ((!(_1ab1b7160_checkDeclGenerics(_self_.ptr(), &((*((*(_202140_s))))._field_Generics))))) {
			_case_begin_1bc2546d6:;
		}
		else if ((!(_1ab1bba7c_checkStructFields(_self_, _202140_s)))) {
			_case_begin_1bc25474c:;
		}
		else if ((!(_1ab1bb73b_checkStructImpls(_self_, _202140_s)))) {
			_case_begin_1bc2547b3:;
		}
		else if ((!(_1ab1bc96d_checkFuncDeclsBy(_self_, &((*((*(_202140_s))))._field_Methods))))) {
			_case_begin_1bc25483a:;
		}
		_match_end_1bc25420d:;
	};
}



inline jule::Bool _1ab1bc0bb_checkStructDecls(jule::Ptr<_1ab1a567b_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2565d9:;
		if (it != expr_end) {
			jule::Ptr<_1ab10803a_Struct> _204121_s = *it;
			{
				_1ab1bbd35_checkStructDecl(_self_, &(_204121_s));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bc2565d9:;
			++it;
			goto _iter_begin_1bc2565d9;
		}
		_iter_end_1bc2565d9:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ab1bc374_checkAnonFuncDecl(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab11cdeb_Fn>* _205142_f) {
	(*((*(_205142_f))))._field_sema=_self_;
	_1ab1b7ddb_checkFnDeclPrototype(_self_, _205142_f);
}



inline void _1ab1bc62c_checkFuncDecl(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab11cdeb_Fn>* _205638_f) {
	if (_1ab0c48db_IsIgnoreIdent((*((*(_205638_f))))._field_Ident)) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_205638_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ab11dda8_IsAnon((*(_205638_f)).ptr())) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_205638_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1ab1a933e_checkDirectives(_self_, &((*((*(_205638_f))))._field_Directives), jule::Any((*(_205638_f)), &__jule_any_type64));
	_1ab1bc374_checkAnonFuncDecl(_self_, _205638_f);
	if ((((*((*(_205638_f))))._field_Owner == nullptr) && _1ab1a8ecb_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_205638_f)))), &((*((*(_205638_f))))._field_Ident), (*((*(_205638_f))))._field_Binded))) {
		if ((*((*(_205638_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1ab11cdeb_Fn> _206817_init = _1ab1a6c10_FindFn(_self_.ptr(), jule::Str::lit("init", 4), false);;
			if ((_206817_init != nullptr)) {
				return;;
			};
		};
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_205638_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_205638_f))))._field_Ident, &__jule_any_type4)}));
		_1ab1a8629_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ab1bc96d_checkFuncDeclsBy(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Slice<jule::Ptr<_1ab11cdeb_Fn>>* _207841_funcs) {
	{
		auto expr = _207841_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc25da75:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _207921_f = *it;
			{
				_1ab1bc62c_checkFuncDecl(_self_, &(_207921_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1bc25da75:;
			++it;
			goto _iter_begin_1bc25da75;
		}
		_iter_end_1bc25da75:;
	};
	return true;;
}



inline jule::Bool _1ab1bcc04_checkFuncDecls(jule::Ptr<_1ab1a567b_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1ab1bc96d_checkFuncDeclsBy(_self_, &((*((*(_self_))._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1ab1bd122_pushCycleError(_1ab1a567b_Sema* _self_, jule::Str* _209430_st1, jule::Str* _209441_st2, _1d7ad2eb1_StrBuilder* _209456_message) {
	;
	jule::Str _20969_refersTo = _1d7b8222a_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_209430_st1)), &__jule_any_type4),jule::Any((*(_209441_st2)), &__jule_any_type4)}));;
	jule::Slice<jule::U8> _209713_buf = _1d7adcd34_Buf(_209456_message);;
	_1d7adba8b_WriteStr(_209456_message, _1d7abd144_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1d7adba8b_WriteStr(_209456_message, _20969_refersTo);
	_1d7adbd44_WriteByte(_209456_message, '\n');
	_1d7adb7d3_Write(_209456_message, _209713_buf);
}



inline void _1ab1bd7c6_checkPackageDecls(jule::Ptr<_1ab1a567b_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc263b9b:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _212121_f = *it;
			{
				_1ab1a7d98_setCurrentFile(_self_.ptr(), _212121_f);
				if ((!(_1ab1b5081_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bc263b9b:;
			++it;
			goto _iter_begin_1bc263b9b;
		}
		_iter_end_1bc263b9b:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc266275:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _212821_f = *it;
			{
				_1ab1a7d98_setCurrentFile(_self_.ptr(), _212821_f);
				if ((!(_1ab1b953b_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bc266275:;
			++it;
			goto _iter_begin_1bc266275;
		}
		_iter_end_1bc266275:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc265a38:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _213521_f = *it;
			{
				_1ab1a7d98_setCurrentFile(_self_.ptr(), _213521_f);
				if ((!(_1ab1baeee_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bc265a38:;
			++it;
			goto _iter_begin_1bc265a38;
		}
		_iter_end_1bc265a38:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc268211:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _214221_f = *it;
			{
				_1ab1a7d98_setCurrentFile(_self_.ptr(), _214221_f);
				{
					
					if ((!(_1ab1bcc04_checkFuncDecls(_self_)))) {
						_case_begin_1bc269058:;
					}
					else if ((!(_1ab1bc0bb_checkStructDecls(_self_)))) {
						_case_begin_1bc2690be:;
					}
					else {
						_case_begin_1bc268ee2:;
						{
							goto _iter_next_1bc268211;
						}
					}
					_match_end_1bc268e8c:;
				};
				return;;
			}
			_iter_next_1bc268211:;
			++it;
			goto _iter_begin_1bc268211;
		}
		_iter_end_1bc268211:;
	};
}



inline void _1ab1bdb39_checkDataForTypeInference(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab22a228_Data>* _215445_d, jule::Ptr<_1ab0c1e7c_Token>* _215456_err_token) {
	{
		
		if (_1ab22a5d0_IsNil((*(_215445_d)).ptr())) {
			_case_begin_1bc26a19c:;
			{
				_1ab1a82b6_pushErr(_self_, (*(_215456_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1ab22a866_IsVoid((*(_215445_d)).ptr())) {
			_case_begin_1bc26a224:;
			{
				_1ab1a82b6_pushErr(_self_, (*(_215456_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_215445_d))))._field_Kind))._field_Variadic) {
			_case_begin_1bc26a29b:;
			{
				_1ab1a82b6_pushErr(_self_, (*(_215456_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc26a07b:;
	};
}



inline void _1ab1bdde2_checkVarValue(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab1c7a66_Var>* _216638_v) {
	if (_1ab1c8182_IsTypeInferred((*(_216638_v)).ptr())) {
		(*((*(_216638_v))))._field_Kind=jule::new_ptr<_1ab262bde_TypeSymbol>(_1ab262bde_TypeSymbol{._field_Kind=(*((*((*((*(_216638_v))))._field_Value))._field_Data))._field_Kind});
		_1ab1bdb39_checkDataForTypeInference(_self_.ptr(), &((*((*((*(_216638_v))))._field_Value))._field_Data), &((*((*((*((*(_216638_v))))._field_Value))._field_Expr))._field_Token));
		_1ab1b42d3_checkValidityForInitExpr(_self_, (*((*(_216638_v))))._field_Mutable, (*((*(_216638_v))))._field_Reference, &((*((*((*(_216638_v))))._field_Kind))._field_Kind), &((*((*((*(_216638_v))))._field_Value))._field_Data), &((*((*((*((*(_216638_v))))._field_Value))._field_Expr))._field_Token));
	} else {
		jule::Ptr<_1ab269e16_Arr> _217917_arr = _1ab25de3d_Arr((*((*((*(_216638_v))))._field_Kind))._field_Kind.ptr());;
		if ((_217917_arr != nullptr)) {
			if ((*(_217917_arr))._field_Auto) {
				jule::Ptr<_1ab269e16_Arr> _218221_dataArr = _1ab25de3d_Arr((*((*((*((*(_216638_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_218221_dataArr != nullptr)) {
					(*(_217917_arr))._field_N=(*(_218221_dataArr))._field_N;
				};
			};
		};
		if (_1ab1b0cc4_checkAssignType(_self_, (*((*(_216638_v))))._field_Reference, &((*((*((*(_216638_v))))._field_Kind))._field_Kind), &((*((*((*(_216638_v))))._field_Value))._field_Data), (*((*((*((*(_216638_v))))._field_Value))._field_Expr))._field_Token)) {
			_1ab1b42d3_checkValidityForInitExpr(_self_, (*((*(_216638_v))))._field_Mutable, (*((*(_216638_v))))._field_Reference, &((*((*((*(_216638_v))))._field_Kind))._field_Kind), &((*((*((*(_216638_v))))._field_Value))._field_Data), &((*((*((*((*(_216638_v))))._field_Value))._field_Expr))._field_Token));
		};
	};
	if (((*((*(_216638_v))))._field_Reference && (!(_1ab277011_isValidForRef(&((*((*((*(_216638_v))))._field_Kind))._field_Kind)))))) {
		_1ab1a82b6_pushErr(_self_.ptr(), (*((*(_216638_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*((*(_216638_v))))._field_Kind))._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_216638_v))))._field_Constant) {
		jule::Bool _220413_comptime = _1ab26022a_comptime((*((*((*((*(_216638_v))))._field_Value))._field_Data))._field_Kind.ptr());;
		if (((!(_1ab22aaec_IsConst((*((*((*(_216638_v))))._field_Value))._field_Data.ptr()))) && (!(_220413_comptime)))) {
			_1ab1a82b6_pushErr(_self_.ptr(), (*((*((*((*(_216638_v))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		if ((_220413_comptime && (_1ab261517_comptimeRange((*((*((*((*(_216638_v))))._field_Value))._field_Data))._field_Kind.ptr()) != nullptr))) {
			_1ab1a82b6_pushErr(_self_.ptr(), (*((*((*((*(_216638_v))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("@ is invalid data-type for constant", 35), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*((*((*(_216638_v))))._field_Value))._field_Data))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	} else {
		(*((*((*((*(_216638_v))))._field_Value))._field_Data))._field_Constant=nullptr;
	};
	if ((_1ab25ee94_Tup((*((*((*(_216638_v))))._field_Kind))._field_Kind.ptr()) != nullptr)) {
		(*((*((*(_216638_v))))._field_Kind))._field_Kind=nullptr;
	};
}



inline void _1ab1be255_evalVarValue(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab1c7a66_Var>* _222237_decl, jule::Trait<_1ab27a553_Lookup> _222253_l) {
	if ((!(_1ab1c7deb_IsInitialized((*(_222237_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1ab22be1c_Eval> _222717_eval = nullptr;;
	if (((*((*(_222237_decl))))._field_Kind != nullptr)) {
		_222717_eval=_1ab1b0026_evalpd(_self_, _222253_l, (*((*((*(_222237_decl))))._field_Kind))._field_Kind, (*(_222237_decl)));
	} else {
		_222717_eval=_1ab1b0026_evalpd(_self_, _222253_l, nullptr, (*(_222237_decl)));
	};
	(*(_222717_eval))._field_immutable=(!((*((*(_222237_decl))))._field_Mutable));
	(*((*((*(_222237_decl))))._field_Value))._field_Data=_1ab24a17c_evalExpr(_222717_eval, (*((*((*(_222237_decl))))._field_Value))._field_Expr);
}



inline void _1ab1be5b8_checkVar(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab1c7a66_Var>* _223933_decl, jule::Trait<_1ab27a553_Lookup> _223949_l) {
	_1ab1be255_evalVarValue(_self_, _223933_decl, _223949_l);
	if (((*((*((*(_223933_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1ab1bdde2_checkVarValue(_self_, _223933_decl);
}



inline void _1ab1be7b6_checkGlobals(jule::Ptr<_1ab1a567b_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc283050:;
		if (it != expr_end) {
			jule::Ptr<_1ab1c7a66_Var> _224921_decl = *it;
			{
				if ((*(_224921_decl))._field_Binded) {
					goto _iter_next_1bc283050;
				};
				if (((_1ab1c7deb_IsInitialized(_224921_decl.ptr()) && ((*((*(_224921_decl))._field_Value))._field_Data == nullptr)) || (_1ab1c8182_IsTypeInferred(_224921_decl.ptr()) && ((*((*(_224921_decl))._field_Kind))._field_Kind == nullptr)))) {
					_1ab1be5b8_checkVar(_self_, &(_224921_decl), jule::Trait<_1ab27a553_Lookup>(_self_, 3));
				};
			}
			_iter_next_1bc283050:;
			++it;
			goto _iter_begin_1bc283050;
		}
		_iter_end_1bc283050:;
	};
}



inline jule::Ptr<_1ab120d00_FnIns> _1ab1bebb2_readyToCheckFn(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab10acb8_StructIns>* _226339_s, jule::Ptr<_1ab11cdeb_Fn>* _226359_f) {
	jule::Ptr<_1ab120d00_FnIns> _226413_ins = _1ab11e65b_instance((*(_226359_f)));;
	if (((*((*(_226359_f))))._field_Instances.len() != 0LL)) {
		return _226413_ins;;
	};
	(*(_226413_ins))._field_Owner=(*(_226339_s));
	_1ab11e969_appendInstance((*(_226359_f)).ptr(), &(_226413_ins));
	(*(_226413_ins))._field_reloaded=true;
	if (_1ab1b33c0_reloadFnInsTypes(_self_, _226413_ins)) {
		return _226413_ins;;
	};
	return nullptr;;
}



inline void _1ab1c0025_checkTypeMethod(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab10acb8_StructIns>* _227740_s, jule::Ptr<_1ab11cdeb_Fn>* _227760_f) {
	if (((*((*(_227760_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1ab120d00_FnIns> _228213_ins = (*((*(_227760_f))))._field_Instances[0LL];;
	if (((*((*(_228213_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1ab1c29c8_checkFnIns(_self_, &(_228213_ins));
}



inline jule::Ptr<_1ab120d00_FnIns> _1ab1c04cb_checkStructInsOp(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab10acb8_StructIns>* _229041_s, jule::Ptr<_1ab11cdeb_Fn>* _229061_f, jule::Fn<jule::Bool(jule::Ptr<_1ab11cdeb_Fn>)> _229069_p) {
	if (((((*(_229061_f)) == nullptr) || ((*((*(_229061_f))))._field_Generics.len() > 0LL)) || (!(_229069_p((*(_229061_f))))))) {
		return nullptr;;
	};
	return (*((*(_229061_f))))._field_Instances[0LL];;
}



inline jule::Bool _1ab1c08c7_checkStructEnv(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab10acb8_StructIns>* _230039_s, jule::Ptr<_1ab0c1e7c_Token> _230058_errorToken) {
	jule::Bool __jule_func_result = false;
	_1ab26c8ca_typeChecker _230113_tc = _1ab26c8ca_typeChecker{._field_s=(*((*((*(_230039_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait<_1ab27a553_Lookup>((*((*((*(_230039_s))))._field_Decl))._field_sema, 3), ._field_lookup=jule::Trait<_1ab27a553_Lookup>((*((*((*(_230039_s))))._field_Decl))._field_sema, 3), ._field_referencer=jule::new_ptr<_1ab26b8da_referencer>(_1ab26b8da_referencer{._field_ident=(*((*((*(_230039_s))))._field_Decl))._field_Ident, ._field_owner=jule::Any((*((*(_230039_s))))._field_Decl, &__jule_any_type65), }), ._field_refers=(*((*(_230039_s))))._field_Refers, };;
	if (((*((*(_230039_s))))._field_Generics.len() > 0LL)) {
		_230113_tc._field_useGenerics=jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>>::alloc(0LL, (*((*(_230039_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_230039_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc28e07d:;
			if (it != expr_end) {
				jule::I64 _231418_i = it - expr->begin();
				jule::Ptr<_1ab259136_InsGeneric> _231425_g = *it;
				{
					jule::Ptr<_1ab0e4653_GenericDecl> _231521_decl = (*((*((*(_230039_s))))._field_Decl))._field_Generics[_231418_i];;
					{ jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>> &__jule_push_dest = _230113_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1ab259c2a_TypeAlias>(_1ab259c2a_TypeAlias{._field_Token=(*(_231521_decl))._field_Token, ._field_Ident=(*(_231521_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1ab262bde_TypeSymbol>(_1ab262bde_TypeSymbol{._field_Kind=(*(_231425_g))._field_Kind}), })); };
				}
				_iter_next_1bc28e07d:;
				++it;
				_231418_i++;
				goto _iter_begin_1bc28e07d;
			}
			_iter_end_1bc28e07d:;
		};
	};
	jule::Ptr<_1ab224d9e_SymbolTable> _232413_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1ab1a7d98_setCurrentFile(_self_.ptr(), _232413_oldFile);
	});;
	if (((*((*(_self_))._field_file))._field_File != (*((*((*((*(_230039_s))))._field_Decl))._field_Token))._field_File)) {
		jule::Ptr<_1ab224d9e_SymbolTable> _232817_file = _1ab1a43c2_findFile(&((*(_self_))._field_files), &((*((*((*((*(_230039_s))))._field_Decl))._field_Token))._field_File));;
		if ((_232817_file != nullptr)) {
			_1ab1a7d98_setCurrentFile(_self_.ptr(), _232817_file);
		};
	};
	if (((*((*(_230039_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1ab15b346_constraintChecker> _233517_cc = _1ab1ada3b_constraintChecker(_self_);;
		(*(_233517_cc))._field_et=_230058_errorToken;
		(*(_233517_cc))._field_si=(*(_230039_s));
		(*(_233517_cc))._field_genericsA=_230113_tc._field_useGenerics;
		(*(_233517_cc))._field_uniq=true;
		if ((!(_1ab15c27b_check(_233517_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_230039_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _234817_n = (*(_self_))._field_errors.len();;
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=jule::append(_230113_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_230039_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc296be0:;
			if (it != expr_end) {
				jule::Ptr<_1ab1c7a66_Var> _235025_v = *it;
				{
					_1ab1ba9b0_checkVarDecl(_self_, &(_235025_v), jule::Trait<_1ab27a553_Lookup>(_self_, 3));
					_1ab1be5b8_checkVar(_self_, &(_235025_v), jule::Trait<_1ab27a553_Lookup>(_self_, 3));
					__jule_func_result=((((*(_self_))._field_errors.len() - _234817_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1bc296be0:;
				++it;
				goto _iter_begin_1bc296be0;
			}
			_iter_end_1bc296be0:;
		};
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=(*((*(_self_))._field_files[0LL]))._field_TypeAliases.slice(_230113_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1ab22be1c_Eval> _236113_eval = _1ab1b0763_eval(_self_, jule::Trait<_1ab27a553_Lookup>(_self_, 3));;
	(*((*(_230039_s))))._field_Comparable=(!((*((*((*(_230039_s))))._field_Decl))._field_Binded));
	{
		auto expr = &((*((*(_230039_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc29a2dc:;
		if (it != expr_end) {
			jule::Ptr<_1ab10a218_FieldIns> _236321_f = *it;
			{
				jule::Ptr<_1ab25aa1c_TypeKind> _236417_kind = _1ab275075_checkDecl(&_230113_tc, &((*((*((*(_236321_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_236417_kind != nullptr) && __jule_func_result);
				if ((_236417_kind == nullptr)) {
					if (((_self_ != (*((*((*(_230039_s))))._field_Decl))._field_sema) && ((*((*((*((*(_230039_s))))._field_Decl))._field_sema))._field_errors.len() > 0LL))) {
						((*(_self_))._field_errors).append((*((*((*((*(_230039_s))))._field_Decl))._field_sema))._field_errors);;
						(*((*((*((*(_230039_s))))._field_Decl))._field_sema))._field_errors=nullptr;
					};
					goto _iter_next_1bc29a2dc;
				};
				(*(_236321_f))._field_Kind=_236417_kind;
				(*((*(_230039_s))))._field_Mutable=((*((*(_230039_s))))._field_Mutable || ((!((*((*(_236321_f))._field_Decl))._field_Mutable)) && _1ab25c39d_Mutable((*(_236321_f))._field_Kind.ptr())));
				(*((*(_230039_s))))._field_Comparable=((*((*(_230039_s))))._field_Comparable && _1ab25c117_Comparable((*(_236321_f))._field_Kind.ptr()));
				if (((*((*(_236321_f))._field_Decl))._field_Default == nullptr)) {
					goto _iter_next_1bc29a2dc;
				};
				(*(_236113_eval))._field_prefix=(*(_236321_f))._field_Kind;
				(*(_236113_eval))._field_field=_236321_f;
				(*(_236321_f))._field_Default=_1ab24a17c_evalExpr(_236113_eval, (*((*(_236321_f))._field_Decl))._field_Default);
				if (((*(_236321_f))._field_Default == nullptr)) {
					goto _iter_next_1bc29a2dc;
				};
				;
				_1ab1b0cc4_checkAssignType(_self_, false, &((*(_236321_f))._field_Kind), &((*(_236321_f))._field_Default), (*((*((*(_236321_f))._field_Decl))._field_Default))._field_Token);
			}
			_iter_next_1bc29a2dc:;
			++it;
			goto _iter_begin_1bc29a2dc;
		}
		_iter_end_1bc29a2dc:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab1c0cc3_precheckStructIns(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab10acb8_StructIns>* _239742_s, jule::Ptr<_1ab0c1e7c_Token> _239761_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1ab1c08c7_checkStructEnv(_self_, _239742_s, _239761_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*(_239742_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2a57d1:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _240221_f = *it;
			{
				if (((*(_240221_f))._field_Generics.len() == 0LL)) {
					if ((_1ab1bebb2_readyToCheckFn(_self_, _239742_s, &(_240221_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1bc2a57d1:;
			++it;
			goto _iter_begin_1bc2a57d1;
		}
		_iter_end_1bc2a57d1:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ab1c107b_checkStructIns(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab10acb8_StructIns>* _241239_s) {
	{
		auto expr = &((*((*(_241239_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2a61b6:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _241321_f = *it;
			{
				_1ab1c0025_checkTypeMethod(_self_, _241239_s, &(_241321_f));
			}
			_iter_next_1bc2a61b6:;
			++it;
			goto _iter_begin_1bc2a61b6;
		}
		_iter_end_1bc2a61b6:;
	};
}



inline void _1ab1c1334_checkTypeStruct(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab10803a_Struct>* _241840_s) {
	if ((*((*(_241840_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_241840_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_241840_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2a8251:;
		if (it != expr_end) {
			jule::Ptr<_1ab10acb8_StructIns> _243121_ins = *it;
			{
				_1ab1c107b_checkStructIns(_self_, &(_243121_ins));
			}
			_iter_next_1bc2a8251:;
			++it;
			goto _iter_begin_1bc2a8251;
		}
		_iter_end_1bc2a8251:;
	};
}



inline void _1ab1c1532_checkStructTypes(jule::Ptr<_1ab1a567b_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2a962b:;
		if (it != expr_end) {
			jule::Ptr<_1ab10803a_Struct> _243721_s = *it;
			{
				_1ab1c1334_checkTypeStruct(_self_, &(_243721_s));
			}
			_iter_next_1bc2a962b:;
			++it;
			goto _iter_begin_1bc2a962b;
		}
		_iter_end_1bc2a962b:;
	};
}



inline void _1ab1c17da_checkStructInsOperators(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab10acb8_StructIns> _244247_s) {
	{
		auto expr = &((*(_244247_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2aab7c:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _244321_m = *it;
			{
				{
					auto &_match_expr{ (*(_244321_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1bc2abb17:;
						{
							(*(_244247_s))._field_Operators._field_Eq=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1c98c0_Eq);
							(*(_244247_s))._field_Comparable=((*(_244247_s))._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1bc2abb8e:;
						{
							(*(_244247_s))._field_Operators._field_Gt=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1c9b89_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1bc2abc16:;
						{
							(*(_244247_s))._field_Operators._field_GtEq=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1c9e53_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1bc2abc8d:;
						{
							(*(_244247_s))._field_Operators._field_Lt=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1ca21c_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1bc2abd15:;
						{
							(*(_244247_s))._field_Operators._field_LtEq=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1ca4d6_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1bc2abd8c:;
						{
							(*(_244247_s))._field_Operators._field_Shl=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1cab24_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1bc2abe14:;
						{
							(*(_244247_s))._field_Operators._field_Shr=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1caddd_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1bc2abe8b:;
						{
							(*(_244247_s))._field_Operators._field_Add=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1cb1a7_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1bc2ac013:;
						{
							(*(_244247_s))._field_Operators._field_Sub=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1cb471_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1bc2ac08a:;
						{
							(*(_244247_s))._field_Operators._field_Div=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1cb73a_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1bc2ac112:;
						{
							(*(_244247_s))._field_Operators._field_Mul=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1cba04_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1bc2ac189:;
						{
							(*(_244247_s))._field_Operators._field_Mod=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1cbcbd_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1bc2ac211:;
						{
							(*(_244247_s))._field_Operators._field_BitAnd=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1cc087_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1bc2ac288:;
						{
							(*(_244247_s))._field_Operators._field_BitOr=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1cc351_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1bc2ac310:;
						{
							(*(_244247_s))._field_Operators._field_BitXor=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1cc61a_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1bc2ac387:;
						{
							(*(_244247_s))._field_Operators._field_Neg=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1ccc58_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1bc2ac40e:;
						{
							(*(_244247_s))._field_Operators._field_Pos=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1cd022_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1bc2ac486:;
						{
							(*(_244247_s))._field_Operators._field_BitNot=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1cd2db_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1bc2ac50d:;
						{
							(*(_244247_s))._field_Operators._field_AddAssign=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1cd929_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1bc2ac585:;
						{
							(*(_244247_s))._field_Operators._field_SubAssign=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1cdbe3_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1bc2ac60c:;
						{
							(*(_244247_s))._field_Operators._field_DivAssign=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1cdeac_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1bc2ac684:;
						{
							(*(_244247_s))._field_Operators._field_MulAssign=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1ce276_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1bc2ac70b:;
						{
							(*(_244247_s))._field_Operators._field_ModAssign=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1ce540_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1bc2ac783:;
						{
							(*(_244247_s))._field_Operators._field_ShlAssign=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1ce809_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1bc2ac80a:;
						{
							(*(_244247_s))._field_Operators._field_ShrAssign=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1ceac3_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1bc2ac882:;
						{
							(*(_244247_s))._field_Operators._field_BitOrAssign=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1ced8c_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1bc2ac909:;
						{
							(*(_244247_s))._field_Operators._field_BitAndAssign=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1d0156_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1bc2ac981:;
						{
							(*(_244247_s))._field_Operators._field_BitXorAssign=_1ab1c04cb_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1ab1d0420_BitXorAssign);
						}
					}
					_match_end_1bc2ab870:;
				};
			}
			_iter_next_1bc2aab7c:;
			++it;
			goto _iter_begin_1bc2aab7c;
		}
		_iter_end_1bc2aab7c:;
	};
}



inline void _1ab1c1a93_precheckStructType(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab10803a_Struct>* _250643_s) {
	if ((*((*(_250643_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_250643_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_250643_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1ab10acb8_StructIns> _251717_ins = _1ab10849c_instance((*(_250643_s)));;
		(*(_251717_ins))._field_Checked=true;
		_1ab1087aa_appendInstance((*(_250643_s)).ptr(), &(_251717_ins));
		_1ab1c0cc3_precheckStructIns(_self_, &(_251717_ins), nullptr);
	};
	_1ab1c17da_checkStructInsOperators(_self_, (*((*(_250643_s))))._field_Instances[0LL]);
}



inline void _1ab1c1c91_precheckStructTypes(jule::Ptr<_1ab1a567b_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2c3689:;
		if (it != expr_end) {
			jule::Ptr<_1ab10803a_Struct> _252721_s = *it;
			{
				_1ab1c1a93_precheckStructType(_self_, &(_252721_s));
			}
			_iter_next_1bc2c3689:;
			++it;
			goto _iter_begin_1bc2c3689;
		}
		_iter_end_1bc2c3689:;
	};
}



inline void _1ab1c2049_checkRets(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab120d00_FnIns>* _253233_f) {
	if (_1ab11d36e_IsVoid((*((*(_253233_f))))._field_Decl.ptr())) {
		return;;
	};
	_1ab1c44be_missingRetChecker _25369_mrc = static__1ab1c4887_new();;
	jule::Bool _25379_ok = _1ab1c59a9_check(&_25369_mrc, (*((*(_253233_f))))._field_Scope);;
	if ((!(_25379_ok))) {
		_1ab1a82b6_pushErr(_self_, (*((*((*(_253233_f))))._field_Decl))._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1ab1c23ac_checkFnInsSc(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab120d00_FnIns>* _254336_f, jule::Ptr<_1ab16aab4_scopeChecker>* _254352_sc) {
	_1ab1a3976_appendRetVars(&((*((*((*(_254352_sc))))._field_table))._field_Vars), _254336_f);
	_1ab1a3c62_appendParamVars(&((*((*((*(_254352_sc))))._field_table))._field_Vars), _254336_f);
	_1ab1a404d_appendGenericTypeAliases(&((*((*((*(_254352_sc))))._field_table))._field_TypeAliases), _254336_f);
	_1ab17c576_check((*(_254352_sc)), &((*((*((*(_254336_f))))._field_Decl))._field_Scope), &((*((*(_254336_f))))._field_Scope));
	if ((!(_1ab16d688_stopped((*(_254352_sc)).ptr())))) {
		_1ab1c2049_checkRets(_self_, _254336_f);
	};
}



inline void _1ab1c2720_checkFnInsCaller(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab120d00_FnIns>* _255641_f, jule::Ptr<_1ab0c1e7c_Token> _255656_caller) {
	if ((*((*((*(_255641_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1ab224d9e_SymbolTable> _256113_old = (*((*((*((*(_255641_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1ab1a7d98_setCurrentFile((*((*((*(_255641_f))))._field_Decl))._field_sema.ptr(), _256113_old);
	});;
	jule::Ptr<_1ab224d9e_SymbolTable> _256313_file = _1ab1a43c2_findFile(&((*((*((*((*(_255641_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_255641_f))))._field_Decl))._field_Token))._field_File));;
	if ((_256313_file != nullptr)) {
		_1ab1a7d98_setCurrentFile((*((*((*(_255641_f))))._field_Decl))._field_sema.ptr(), _256313_file);
	};
	jule::Ptr<_1ab16aab4_scopeChecker> _256813_sc = _1ab160955_newScopeChecker(&((*((*((*(_255641_f))))._field_Decl))._field_sema), (*(_255641_f)));;
	(*(_256813_sc))._field_calledFrom=_255656_caller;
	_1ab1c23ac_checkFnInsSc(_self_.ptr(), _255641_f, &(_256813_sc));
	if (((*((*((*(_255641_f))))._field_Decl))._field_sema != _self_)) {
		((*(_self_))._field_errors).append((*((*((*((*(_255641_f))))._field_Decl))._field_sema))._field_errors);;
		(*((*((*((*(_255641_f))))._field_Decl))._field_sema))._field_errors=nullptr;
	};
}



inline void _1ab1c29c8_checkFnIns(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab120d00_FnIns>* _257835_f) {
	_1ab1c2720_checkFnInsCaller(_self_, _257835_f, nullptr);
}



inline void _1ab1c2c81_checkFunc(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab11cdeb_Fn>* _258234_f) {
	if ((*((*(_258234_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_258234_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_258234_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2d0bd5:;
		if (it != expr_end) {
			jule::Ptr<_1ab120d00_FnIns> _259221_ins = *it;
			{
				_1ab1c29c8_checkFnIns(_self_, &(_259221_ins));
			}
			_iter_next_1bc2d0bd5:;
			++it;
			goto _iter_begin_1bc2d0bd5;
		}
		_iter_end_1bc2d0bd5:;
	};
}



inline void _1ab1c3039_checkTestFn(_1ab1a567b_Sema* _self_, jule::Ptr<_1ab120d00_FnIns>* _259735_f) {
	if ((*((*((*(_259735_f))))._field_Decl))._field_Public) {
		_1ab1a82b6_pushErr(_self_, (*((*((*(_259735_f))))._field_Decl))._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1ab1a8629_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*((*((*(_259735_f))))._field_Decl))._field_Unsafety || (!(_1ab11d36e_IsVoid((*((*(_259735_f))))._field_Decl.ptr())))) || ((*((*((*(_259735_f))))._field_Decl))._field_Generics.len() != 0LL)) || ((*((*(_259735_f))))._field_Params.len() != 1LL)) || (*((*((*((*(_259735_f))))._field_Decl))._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_259735_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1ab1a82b6_pushErr(_self_, (*((*((*(_259735_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1ab1a8629_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab267122_Sptr> _261513_sptr = _1ab25d404_Sptr((*((*((*(_259735_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_261513_sptr == nullptr)) {
		_1ab1a82b6_pushErr(_self_, (*((*((*(_259735_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1ab1a8629_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab10acb8_StructIns> _26229_s = _1ab25e6e1_Struct((*(_261513_sptr))._field_Elem.ptr());;
	if (((_26229_s == nullptr) || (!(_1ab18a0de_isStdPackage(&((*((*((*((*(_26229_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1ab1a82b6_pushErr(_self_, (*((*((*(_259735_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1ab1a8629_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ab1c32e2_precheckFunc(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Ptr<_1ab11cdeb_Fn>* _263037_f) {
	if ((*((*(_263037_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_263037_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_263037_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1ab120d00_FnIns> _264117_ins = _1ab11e3c5_instanceForce((*(_263037_f)));;
		{ jule::Slice<jule::Ptr<_1ab120d00_FnIns>> &__jule_push_dest = (*((*(_263037_f))))._field_Instances; __jule_push_dest.push(_264117_ins); };
		jule::Bool _264313_ok = _1ab1b33c0_reloadFnInsTypes(_self_, _264117_ins);;
		(*(_264117_ins))._field_reloaded=true;
		if ((_264313_ok && _1ab27663c_hasDirective(&((*((*(_263037_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_1ab1c3039_checkTestFn(_self_.ptr(), &(_264117_ins));
		};
	};
}



inline void _1ab1c34e0_precheckFuncs(jule::Ptr<_1ab1a567b_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2e3dc4:;
		if (it != expr_end) {
			jule::Ptr<_1ab131195_Trait> _265421_decl = *it;
			{
				{
					auto expr = &((*(_265421_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc2e4a0c:;
					if (it != expr_end) {
						jule::Ptr<_1ab11cdeb_Fn> _265525_m = *it;
						{
							_1ab1c32e2_precheckFunc(_self_, &(_265525_m));
						}
						_iter_next_1bc2e4a0c:;
						++it;
						goto _iter_begin_1bc2e4a0c;
					}
					_iter_end_1bc2e4a0c:;
				};
			}
			_iter_next_1bc2e3dc4:;
			++it;
			goto _iter_begin_1bc2e3dc4;
		}
		_iter_end_1bc2e3dc4:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2e549c:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _265921_decl = *it;
			{
				_1ab1c32e2_precheckFunc(_self_, &(_265921_decl));
			}
			_iter_next_1bc2e549c:;
			++it;
			goto _iter_begin_1bc2e549c;
		}
		_iter_end_1bc2e549c:;
	};
}



inline void _1ab1c36dd_checkFuncs(jule::Ptr<_1ab1a567b_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2e5c72:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _266621_decl = *it;
			{
				_1ab1c2c81_checkFunc(_self_, &(_266621_decl));
			}
			_iter_next_1bc2e5c72:;
			++it;
			goto _iter_begin_1bc2e5c72;
		}
		_iter_end_1bc2e5c72:;
	};
}



inline void _1ab1c38db_checkPackageTypes(jule::Ptr<_1ab1a567b_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2e6b74:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _267421_f = *it;
			{
				_1ab1a7d98_setCurrentFile(_self_.ptr(), _267421_f);
				_1ab1be7b6_checkGlobals(_self_);
				_1ab1c34e0_precheckFuncs(_self_);
				_1ab1c1c91_precheckStructTypes(_self_);
			}
			_iter_next_1bc2e6b74:;
			++it;
			goto _iter_begin_1bc2e6b74;
		}
		_iter_end_1bc2e6b74:;
	};
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2e8978:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _268521_f = *it;
			{
				_1ab1a7d98_setCurrentFile(_self_.ptr(), _268521_f);
				_1ab1c36dd_checkFuncs(_self_);
				_1ab1c1532_checkStructTypes(_self_);
			}
			_iter_next_1bc2e8978:;
			++it;
			goto _iter_begin_1bc2e8978;
		}
		_iter_end_1bc2e8978:;
	};
}



inline void _1ab1c3ad9_setFileSemaFields(jule::Ptr<_1ab1a567b_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2e944b:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _269321_f = *it;
			{
				(*(_269321_f))._field_sema=_self_;
			}
			_iter_next_1bc2e944b:;
			++it;
			goto _iter_begin_1bc2e944b;
		}
		_iter_end_1bc2e944b:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2eab78:;
		if (it != expr_end) {
			jule::Ptr<_1ab10803a_Struct> _269621_st = *it;
			{
				(*(_269621_st))._field_sema=_self_;
			}
			_iter_next_1bc2eab78:;
			++it;
			goto _iter_begin_1bc2eab78;
		}
		_iter_end_1bc2eab78:;
	};
}



inline void _1ab1c3cd7_setSemaFields(jule::Ptr<_1ab1a567b_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2eb6a1:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _270221_file = *it;
			{
				_1ab1a7d98_setCurrentFile(_self_.ptr(), _270221_file);
				_1ab1c3ad9_setFileSemaFields(_self_);
			}
			_iter_next_1bc2eb6a1:;
			++it;
			goto _iter_begin_1bc2eb6a1;
		}
		_iter_end_1bc2eb6a1:;
	};
}



inline void _1ab1c4090_check(jule::Ptr<_1ab1a567b_Sema> _self_, jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>* _270830_files) {
	(*(_self_))._field_files=(*(_270830_files));
	_1ab1abc37_checkImports(_self_.ptr());
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab1c3cd7_setSemaFields(_self_);
	_1ab1ac72c_checkInherits(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab1ac133_implImpls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab1ac331_checkEnums(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab1bd7c6_checkPackageDecls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab1c38db_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a567b_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1ab1c44be_missingRetChecker static__1ab1c4887_new(void) {
	return _1ab1c44be_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1ab1c4b95_checkConditional(_1ab1c44be_missingRetChecker* _self_, jule::Ptr<_1ab1643e8_Conditional> _275635_c) {
	{
		auto expr = &((*(_275635_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc301ae6:;
		if (it != expr_end) {
			jule::Ptr<_1ab163bcd_If> _275721_elif = *it;
			{
				if ((_275721_elif == nullptr)) {
					return false;;
				};
				if ((!(_1ab1c5668_checkScope(_self_, (*(_275721_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1bc301ae6:;
			++it;
			goto _iter_begin_1bc301ae6;
		}
		_iter_end_1bc301ae6:;
	};
	return (((*(_275635_c))._field_Default != nullptr) && _1ab1c5668_checkScope(_self_, (*((*(_275635_c))._field_Default))._field_Scope));;
}



inline jule::Bool _1ab1c4ed6_checkMatch(_1ab1c44be_missingRetChecker* _self_, jule::Ptr<_1ab1678e6_Match> _276829_m) {
	{
		auto expr = &((*(_276829_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc30318b:;
		if (it != expr_end) {
			jule::Ptr<_1ab16852e_Case> _276921_c = *it;
			{
				if ((_276921_c == nullptr)) {
					return false;;
				};
				jule::I64 _277313_n = (*(_self_))._field_breaked.len();;
				jule::Bool _277413_ok = _1ab1c5668_checkScope(_self_, (*(_276921_c))._field_Scope);;
				{
					
					if ((_277313_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1bc305c0a:;
						{
							return false;;
						}
					}
					else if ((!(_277413_ok))) {
						_case_begin_1bc305c82:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1bc305d09;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1bc305d09:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_276921_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1bc30318b;
						}
					}
					_match_end_1bc305b3e:;
				};
			}
			_iter_next_1bc30318b:;
			++it;
			goto _iter_begin_1bc30318b;
		}
		_iter_end_1bc30318b:;
	};
	return (((*(_276829_m))._field_Default != nullptr) && _1ab1c5668_checkScope(_self_, (*((*(_276829_m))._field_Default))._field_Scope));;
}



inline jule::Bool _1ab1c5327_checkInfIter(_1ab1c44be_missingRetChecker* _self_, jule::Ptr<_1ab1646e5_InfIter> _279431_it) {
	jule::I64 _27959_n = (*(_self_))._field_breaked.len();;
	if (_1ab1c5668_checkScope(_self_, (*(_279431_it))._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _27959_n);
		return true;;
	};
	if ((_27959_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _280113_itaddr = static_cast<jule::Uintptr>(_279431_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_27959_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1bc30977a:;
			if (it != expr_end) {
				jule::Uintptr _280220_addr = *it;
				{
					if ((_280113_itaddr == _280220_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _27959_n);
						return false;;
					};
				}
				_iter_next_1bc30977a:;
				++it;
				goto _iter_begin_1bc30977a;
			}
			_iter_end_1bc30977a:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _27959_n);
	};
	return true;;
}



inline jule::Bool _1ab1c5668_checkScope(_1ab1c44be_missingRetChecker* _self_, jule::Ptr<_1ab1637b0_Scope> _281329_s) {
	if ((_281329_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_281329_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc30aced:;
		if (it != expr_end) {
			jule::Any _281721_st = *it;
			{
				{
					auto &_match_expr{ _281721_st };
					
					if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1bc30bb12:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1bc30bb78:;
						{
							jule::Uintptr _282317_addr = (*(_281721_st.cast_ptr<_1ab165d56_BreakSt>(&__jule_any_type49)))._field_It;;
							if ((_282317_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_282317_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1bc30bbde:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1bc30bc66:;
						{
							if (_1ab1c5327_checkInfIter(_self_, _281721_st.cast_ptr<_1ab1646e5_InfIter>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1bc30bcdd:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1bc30bd65:;
						{
							if (_1ab1c5668_checkScope(_self_, _281721_st.cast_ptr<_1ab1637b0_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1bc30bddc:;
						{
							{
								auto &_match_expr{ (*(_281721_st.cast_ptr<_1ab22a228_Data>(&__jule_any_type24)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1bc310781:;
									{
										return true;;
									}
								}
								_match_end_1bc3106e8:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1bc30be64:;
						{
							if (_1ab1c4b95_checkConditional(_self_, _281721_st.cast_ptr<_1ab1643e8_Conditional>(&__jule_any_type35))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1bc30bedb:;
						{
							if (_1ab1c4ed6_checkMatch(_self_, _281721_st.cast_ptr<_1ab1678e6_Match>(&__jule_any_type47))) {
								return true;;
							};
						}
					}
					_match_end_1bc30ba02:;
				};
			}
			_iter_next_1bc30aced:;
			++it;
			goto _iter_begin_1bc30aced;
		}
		_iter_end_1bc30aced:;
	};
	return false;;
}



inline jule::Bool _1ab1c59a9_check(_1ab1c44be_missingRetChecker* _self_, jule::Ptr<_1ab1637b0_Scope> _285924_s) {
	return _1ab1c5668_checkScope(_self_, _285924_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c44be_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c68ab_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab1c7deb_IsInitialized(_1ab1c7a66_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1ab1c8182_IsTypeInferred(_1ab1c7a66_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1ab1c8418_untypedConstant(_1ab1c7a66_Var* _self_) {
	return (_1ab1c8182_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c7a66_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1ab1c8eb8_Dispose(jule::Ptr<_1ab11cdeb_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && ((*(_1023_f))._field_Owner != nullptr)) && (*(_1023_f))._field_Ident.equal("Dispose", 7)) && (!((*(_1023_f))._field_Statically))) && (!((*(_1023_f))._field_Unsafety))) && _1ab11d36e_IsVoid(_1023_f.ptr())) && ((*(_1023_f))._field_Generics.len() == 0LL)) && ((*(_1023_f))._field_Params.len() == 1LL)) && (*((*(_1023_f))._field_Params[0LL]))._field_Mutable) && (!(_1ab11bcc9_IsRef((*(_1023_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1ab1c9282_Str(jule::Ptr<_1ab11cdeb_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || ((*(_2419_f))._field_Owner == nullptr)) || (!(*(_2419_f))._field_Ident.equal("Str", 3))) || (*(_2419_f))._field_Statically) || (*(_2419_f))._field_Unsafety) || _1ab11d36e_IsVoid(_2419_f.ptr())) || ((*(_2419_f))._field_Generics.len() != 0LL)) || ((*(_2419_f))._field_Params.len() != 1LL)) || (*((*(_2419_f))._field_Params[0LL]))._field_Mutable) || _1ab11bcc9_IsRef((*(_2419_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1ab120d00_FnIns> _3813_ins = (*(_2419_f))._field_Instances[0LL];;
	jule::Ptr<_1ab2635e6_Prim> _399_prim = _1ab25d16d_Prim((*(_3813_ins))._field_Result.ptr());;
	if ((_399_prim == nullptr)) {
		return false;;
	};
	return _1ab266a7d_IsStr(_399_prim.ptr());;
}



inline jule::Bool static__1ab1c9606_logical(jule::Ptr<_1ab11cdeb_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*((*(_4624_f))))._field_Ident != _4632_ident)) || ((*((*(_4624_f))))._field_Owner == nullptr)) || ((*((*(_4624_f))))._field_Instances.len() == 0LL)) || (*((*(_4624_f))))._field_Statically) || (*((*(_4624_f))))._field_Unsafety) || _1ab11d36e_IsVoid((*(_4624_f)).ptr())) || ((*((*(_4624_f))))._field_Generics.len() != 0LL)) || ((*((*(_4624_f))))._field_Params.len() != 2LL)) || (*((*((*(_4624_f))))._field_Params[0LL]))._field_Mutable) || _1ab11bcc9_IsRef((*((*(_4624_f))))._field_Params[0LL].ptr())) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1ab120d00_FnIns> _6313_ins = (*((*(_4624_f))))._field_Instances[0LL];;
	jule::Ptr<_1ab2635e6_Prim> _649_prim = _1ab25d16d_Prim((*(_6313_ins))._field_Result.ptr());;
	if (((_649_prim == nullptr) || (!(_1ab2667e7_IsBool(_649_prim.ptr()))))) {
		return false;;
	};
	return ((*(_6313_ins))._field_Owner == _1ab25e6e1_Struct((*((*(_6313_ins))._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1ab1c98c0_Eq(jule::Ptr<_1ab11cdeb_Fn> _7218_f) {
	return static__1ab1c9606_logical(&(_7218_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1ab1c9b89_Gt(jule::Ptr<_1ab11cdeb_Fn> _7718_f) {
	return static__1ab1c9606_logical(&(_7718_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1ab1c9e53_GtEq(jule::Ptr<_1ab11cdeb_Fn> _8220_f) {
	return static__1ab1c9606_logical(&(_8220_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1ab1ca21c_Lt(jule::Ptr<_1ab11cdeb_Fn> _8718_f) {
	return static__1ab1c9606_logical(&(_8718_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1ab1ca4d6_LtEq(jule::Ptr<_1ab11cdeb_Fn> _9220_f) {
	return static__1ab1c9606_logical(&(_9220_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1ab1ca85a_result(jule::Ptr<_1ab11cdeb_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*((*(_9623_f))))._field_Ident != _9631_ident)) || ((*((*(_9623_f))))._field_Owner == nullptr)) || ((*((*(_9623_f))))._field_Instances.len() == 0LL)) || (*((*(_9623_f))))._field_Statically) || (*((*(_9623_f))))._field_Unsafety) || _1ab11d36e_IsVoid((*(_9623_f)).ptr())) || ((*((*(_9623_f))))._field_Generics.len() != 0LL)) || ((*((*(_9623_f))))._field_Params.len() != 2LL)) || (*((*((*(_9623_f))))._field_Params[0LL]))._field_Mutable) || _1ab11bcc9_IsRef((*((*(_9623_f))))._field_Params[0LL].ptr())) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1ab120d00_FnIns> _11313_ins = (*((*(_9623_f))))._field_Instances[0LL];;
	return (_1ab25e6e1_Struct((*(_11313_ins))._field_Result.ptr()) == (*(_11313_ins))._field_Owner);;
}



inline jule::Bool static__1ab1cab24_Shl(jule::Ptr<_1ab11cdeb_Fn> _11819_f) {
	return static__1ab1ca85a_result(&(_11819_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1ab1caddd_Shr(jule::Ptr<_1ab11cdeb_Fn> _12319_f) {
	return static__1ab1ca85a_result(&(_12319_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1ab1cb1a7_Add(jule::Ptr<_1ab11cdeb_Fn> _12819_f) {
	return static__1ab1ca85a_result(&(_12819_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1ab1cb471_Sub(jule::Ptr<_1ab11cdeb_Fn> _13319_f) {
	return static__1ab1ca85a_result(&(_13319_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1ab1cb73a_Div(jule::Ptr<_1ab11cdeb_Fn> _13819_f) {
	return static__1ab1ca85a_result(&(_13819_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1ab1cba04_Mul(jule::Ptr<_1ab11cdeb_Fn> _14319_f) {
	return static__1ab1ca85a_result(&(_14319_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1ab1cbcbd_Mod(jule::Ptr<_1ab11cdeb_Fn> _14819_f) {
	return static__1ab1ca85a_result(&(_14819_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1ab1cc087_BitAnd(jule::Ptr<_1ab11cdeb_Fn> _15322_f) {
	return static__1ab1ca85a_result(&(_15322_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1ab1cc351_BitOr(jule::Ptr<_1ab11cdeb_Fn> _15821_f) {
	return static__1ab1ca85a_result(&(_15821_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1ab1cc61a_BitXor(jule::Ptr<_1ab11cdeb_Fn> _16322_f) {
	return static__1ab1ca85a_result(&(_16322_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1ab1cc98e_unary(jule::Ptr<_1ab11cdeb_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*((*(_16722_f))))._field_Ident != _16730_ident)) || ((*((*(_16722_f))))._field_Owner == nullptr)) || ((*((*(_16722_f))))._field_Instances.len() == 0LL)) || (*((*(_16722_f))))._field_Statically) || (*((*(_16722_f))))._field_Unsafety) || _1ab11d36e_IsVoid((*(_16722_f)).ptr())) || ((*((*(_16722_f))))._field_Generics.len() != 0LL)) || ((*((*(_16722_f))))._field_Params.len() != 1LL)) || (*((*((*(_16722_f))))._field_Params[0LL]))._field_Mutable) || _1ab11bcc9_IsRef((*((*(_16722_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1ab120d00_FnIns> _18213_ins = (*((*(_16722_f))))._field_Instances[0LL];;
	return (_1ab25e6e1_Struct((*(_18213_ins))._field_Result.ptr()) == (*(_18213_ins))._field_Owner);;
}



inline jule::Bool static__1ab1ccc58_Neg(jule::Ptr<_1ab11cdeb_Fn> _18719_f) {
	return static__1ab1cc98e_unary(&(_18719_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1ab1cd022_Pos(jule::Ptr<_1ab11cdeb_Fn> _19219_f) {
	return static__1ab1cc98e_unary(&(_19219_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1ab1cd2db_BitNot(jule::Ptr<_1ab11cdeb_Fn> _19722_f) {
	return static__1ab1cc98e_unary(&(_19722_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1ab1cd660_assign(jule::Ptr<_1ab11cdeb_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*((*(_20123_f))))._field_Ident != _20131_ident)) || ((*((*(_20123_f))))._field_Owner == nullptr)) || ((*((*(_20123_f))))._field_Instances.len() == 0LL)) || (*((*(_20123_f))))._field_Statically) || (*((*(_20123_f))))._field_Unsafety) || (!(_1ab11d36e_IsVoid((*(_20123_f)).ptr())))) || ((*((*(_20123_f))))._field_Generics.len() != 0LL)) || ((*((*(_20123_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20123_f))))._field_Params[0LL]))._field_Mutable))) || _1ab11bcc9_IsRef((*((*(_20123_f))))._field_Params[0LL].ptr())) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1ab1cd929_AddAssign(jule::Ptr<_1ab11cdeb_Fn> _22125_f) {
	return static__1ab1cd660_assign(&(_22125_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1ab1cdbe3_SubAssign(jule::Ptr<_1ab11cdeb_Fn> _22625_f) {
	return static__1ab1cd660_assign(&(_22625_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1ab1cdeac_DivAssign(jule::Ptr<_1ab11cdeb_Fn> _23125_f) {
	return static__1ab1cd660_assign(&(_23125_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1ab1ce276_MulAssign(jule::Ptr<_1ab11cdeb_Fn> _23625_f) {
	return static__1ab1cd660_assign(&(_23625_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1ab1ce540_ModAssign(jule::Ptr<_1ab11cdeb_Fn> _24125_f) {
	return static__1ab1cd660_assign(&(_24125_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1ab1ce809_ShlAssign(jule::Ptr<_1ab11cdeb_Fn> _24625_f) {
	return static__1ab1cd660_assign(&(_24625_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1ab1ceac3_ShrAssign(jule::Ptr<_1ab11cdeb_Fn> _25125_f) {
	return static__1ab1cd660_assign(&(_25125_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1ab1ced8c_BitOrAssign(jule::Ptr<_1ab11cdeb_Fn> _25627_f) {
	return static__1ab1cd660_assign(&(_25627_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1ab1d0156_BitAndAssign(jule::Ptr<_1ab11cdeb_Fn> _26128_f) {
	return static__1ab1cd660_assign(&(_26128_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1ab1d0420_BitXorAssign(jule::Ptr<_1ab11cdeb_Fn> _26628_f) {
	return static__1ab1cd660_assign(&(_26628_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c887a_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1ab2123db_pushErr(_1ab211de1_typeCompatibilityChecker* _self_, jule::Str _11826_fmt, jule::Slice<jule::Any> _11839_args) {
	_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11826_fmt, _11839_args);
}



inline jule::Bool _1ab212672_checkTrait(_1ab211de1_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ab25baea_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab131195_Trait> _12613_trt = _1ab25e977_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12713_ref = false;;
	{
		
		if ((_1ab25d404_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1bc350925:;
			{
				_12713_ref=true;
				(*(_self_))._field_src=(*(_1ab25d404_Sptr((*(_self_))._field_src.ptr())))._field_Elem;
				if ((_1ab25e6e1_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1bc35099c;
			}
		}
		else if ((_1ab25e6e1_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1bc35099c:;
			{
				jule::Ptr<_1ab10acb8_StructIns> _13713_s = _1ab25e6e1_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1ab109679_IsImplements((*(_13713_s))._field_Decl.ptr(), _12613_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12713_ref)) && _1ab2109b1_traitHasReferenceReceiver(&(_12613_trt)))) {
					_1ab2123db_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab25e977_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1bc350a24:;
			{
				jule::Ptr<_1ab131195_Trait> _14717_base = _1ab25e977_Trait((*(_self_))._field_src.ptr());;
				if ((_12613_trt == _14717_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1bc355210:;
				{
					auto expr = &((*(_14717_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc3555ea:;
					if (it != expr_end) {
						jule::Ptr<_1ab10803a_Struct> _15220_s1 = *it;
						{
							{
								auto expr = &((*(_12613_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bc356057:;
								if (it != expr_end) {
									jule::Ptr<_1ab10803a_Struct> _15324_s2 = *it;
									{
										if ((_15220_s1 == _15324_s2)) {
											goto _iter_next_1bc3555ea;
										};
									}
									_iter_next_1bc356057:;
									++it;
									goto _iter_begin_1bc356057;
								}
								_iter_end_1bc356057:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1bc3555ea:;
						++it;
						goto _iter_begin_1bc3555ea;
					}
					_iter_end_1bc3555ea:;
				};
				{
					auto expr = &((*(_12613_trt))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc3553a8:;
					if (it != expr_end) {
						jule::Ptr<_1ab11cdeb_Fn> _16025_m1 = *it;
						{
							jule::Ptr<_1ab11cdeb_Fn> _16121_m2 = _1ab131d44_FindMethod(_14717_base.ptr(), (*(_16025_m1))._field_Ident);;
							if ((_16121_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1ab120d00_FnIns> _16517_m1k = _1ab1b1e6d_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m1));;
							jule::Ptr<_1ab120d00_FnIns> _16617_m2k = _1ab1b1e6d_getTraitCheckFnKind((*(_self_))._field_s, &(_16121_m2));;
							if ((!(_1ab121c68_equalTrait(_16517_m1k, &(_16617_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1bc3553a8:;
						++it;
						goto _iter_begin_1bc3553a8;
					}
					_iter_end_1bc3553a8:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bc35086a:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bc350815:;
	};
}



inline jule::Bool _1ab212908_checkPtr(_1ab211de1_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ab25baea_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab26a8d9_Ptr> _18113_dest = _1ab25d68a_Ptr((*(_self_))._field_dest.ptr());;
	if (_1ab26b423_IsUnsafe(_18113_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1ab25b226_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1ab212b8e_checkPrim(_1ab211de1_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1ab2635e6_Prim> _19013_prim = _1ab25d16d_Prim((*(_self_))._field_dest.ptr());;
		if (((_19013_prim != nullptr) && _1ab266d14_IsAny(_19013_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1ab25b226_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1ab21308a_typeEnum(_1ab211de1_typeCompatibilityChecker* _self_, jule::Ptr<_1ab13509a_TypeEnum>* _19828_e, jule::Ptr<_1ab25aa1c_TypeKind>* _19847_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19828_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc35cb96:;
		if (it != expr_end) {
			jule::Ptr<_1ab1349c3_TypeEnumItem> _19921_item = *it;
			{
				if (_1ab25b226_Equal((*((*(_19921_item))._field_Kind))._field_Kind, (*(_19847_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1ab13509a_TypeEnum> _20317_ke = _1ab25dba7_TypeEnum((*((*(_19921_item))._field_Kind))._field_Kind.ptr());;
				if ((_20317_ke == nullptr)) {
					goto _iter_next_1bc35cb96;
				};
				if (_1ab21308a_typeEnum(_self_, &(_20317_ke), _19847_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1bc35cb96:;
			++it;
			goto _iter_begin_1bc35cb96;
		}
		_iter_end_1bc35cb96:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ab213321_checkTypeEnum(_1ab211de1_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ab25b226_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab13509a_TypeEnum> _21813_e = _1ab25dba7_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1ab21308a_typeEnum(_self_, &(_21813_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1ab2135a7_check(_1ab211de1_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1ab25d68a_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1ab212908_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1ab25c8ba_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1ab25baea_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1ab25d16d_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1bc3633a5:;
			{
				__jule_func_result = _1ab212b8e_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1ab25dba7_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1bc36296a:;
			{
				__jule_func_result = _1ab213321_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1ab25e977_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1bc3629d1:;
			{
				__jule_func_result = _1ab212672_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bc362904:;
			{
				__jule_func_result = _1ab25b226_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1bc362173:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab211de1_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1ab214135_pushErr(_1ab213b90_assignTypeChecker* _self_, jule::Str _25426_fmt, jule::Slice<jule::Any> _25439_args) {
	_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25426_fmt, _25439_args);
}



inline jule::Bool _1ab2143bb_checkValidity(_1ab213b90_assignTypeChecker* _self_) {
	jule::Bool _25913_valid = true;;
	{
		
		if ((_1ab25e45a_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc365de1:;
			{
				jule::Ptr<_1ab120d00_FnIns> _26213_f = _1ab25e45a_Fn((*((*(_self_))._field_d))._field_Kind.ptr());;
				{
					
					if (_1ab122285_IsBuiltin(_26213_f.ptr())) {
						_case_begin_1bc367596:;
						{
							_1ab214135_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if ((*((*(_26213_f))._field_Decl))._field_Binded) {
						_case_begin_1bc36761d:;
						{
							_1ab214135_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if (((!((*((*(_26213_f))._field_Decl))._field_Statically)) && _1ab11d605_IsMethod((*(_26213_f))._field_Decl.ptr()))) {
						_case_begin_1bc367695:;
						{
							_1ab214135_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if ((((*((*(_26213_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_26213_f))._field_Generics.len() == 0LL))) {
						_case_begin_1bc36771c:;
						{
							_1ab214135_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1ab1a8629_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					_match_end_1bc3674ca:;
				};
			}
		}
		else if ((_1ab25ee94_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc365e68:;
			{
				_1ab214135_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25913_valid=false;
			}
		}
		_match_end_1bc365d36:;
	};
	return _25913_valid;;
}



inline jule::Bool _1ab214652_checkConst(_1ab213b90_assignTypeChecker* _self_) {
	if (((((!(_1ab22aaec_IsConst((*(_self_))._field_d.ptr()))) || (_1ab25d16d_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_1ab25d16d_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) == nullptr)) || (!(_1d8bce9c4_IsNum((*(_1ab25d16d_Prim((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type19_compare((*((*(_self_))._field_d))._field_Model, (*((*(_self_))._field_d))._field_Constant))) {
		return false;;
	};
	jule::Str _2999_kind = (*(_1ab25d16d_Prim((*(_self_))._field_dest.ptr())))._field_Kind;;
	{
		
		if (_1d8bce70a_IsFloat(_2999_kind)) {
			_case_begin_1bc3701a3:;
			{
				if ((!(_1ab210d46_floatAssignable(&(_2999_kind), &((*(_self_))._field_d))))) {
					_1ab214135_pushErr(_self_, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2999_kind;
			}
		}
		else if (_1d8bce3b9_IsInt(_2999_kind)) {
			_case_begin_1bc37022a:;
			{
				if ((!(_1ab211907_intAssignable(_2999_kind, &((*(_self_))._field_d))))) {
					_1ab214135_pushErr(_self_, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2999_kind;
			}
		}
		else {
			_case_begin_1bc370109:;
			{
				return false;;
			}
		}
		_match_end_1bc3700a4:;
	};
	return true;;
}



inline jule::Bool _1ab2148d8_isPrim(_1ab213b90_assignTypeChecker* _self_) {
	if (((*((*(_self_))._field_dest))._field_Variadic || (*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)) {
		return false;;
	};
	if ((_1ab25b864_Binded((*(_self_))._field_dest.ptr()) || _1ab25b864_Binded((*((*(_self_))._field_d))._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1ab25d16d_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_1ab25d16d_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1ab214b6e_checkCompatibility(_1ab213b90_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1bc37531d:;
			{
				return false;;
			}
		}
		else if ((!(_1ab2143bb_checkValidity(_self_)))) {
			_case_begin_1bc375395:;
			{
				return false;;
			}
		}
		else if (_1ab214652_checkConst(_self_)) {
			_case_begin_1bc37541c:;
			{
				return true;;
			}
		}
		else if ((_1ab25d921_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc375494:;
			{
				jule::Ptr<_1ab25aa1c_TypeKind> _34317_dkind = (*(_self_))._field_dest;;
				if ((_1ab25d921_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_34317_dkind=(*((*(_1ab25d921_Enum((*(_self_))._field_dest.ptr())))._field_Kind))._field_Kind;
				} else if ((_1ab25d16d_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_1bc3751db;
				};
				if (_1d8bcb031_TypesAreCompatible((*(_1ab25d16d_Prim((*((*(_1ab25d921_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr())))._field_Kind, (*(_1ab25d16d_Prim(_34317_dkind.ptr())))._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1ab2148d8_isPrim(_self_)) {
			_case_begin_1bc37551b:;
			{
				jule::Ptr<_1ab2635e6_Prim> _35313_dest = _1ab25d16d_Prim((*(_self_))._field_dest.ptr());;
				if (_1ab266d14_IsAny(_35313_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1ab2635e6_Prim> _35717_src = _1ab25d16d_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (_1d8bcb031_TypesAreCompatible((*(_35313_dest))._field_Kind, (*(_35717_src))._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1bc3751db:;
	};
	return _1ab1b127a_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*((*(_self_))._field_d))._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1ab214e05_check(_1ab213b90_assignTypeChecker* _self_) {
	jule::Bool _3669_ok = _1ab214b6e_checkCompatibility(_self_);;
	if ((_3669_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1ab277ee0_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _3669_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab213b90_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bc3900b3_annotateConstraintElem(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1bc39179b:;
			{
				jule::Ptr<_1ab25aa1c_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1bc392626:;
						{
							_38921_elem=(*(_1ab25de3d_Arr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bc39256b:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ab0d9714_ArrTypeDecl>(&__jule_any_type69)))._field_Elem;
				return _1ab217017_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1bc391746:;
	};
	return false;;
}

inline jule::Bool _1bc38e920_annotateConstraintElem(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1bc395272:;
			{
				jule::Ptr<_1ab25aa1c_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1bc396163:;
						{
							_38921_elem=(*(_1ab25e1c4_Slc((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bc396042:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ab0d8878_SlcTypeDecl>(&__jule_any_type70)))._field_Elem;
				return _1ab217017_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1bc39521c:;
	};
	return false;;
}

inline jule::Bool _1bc391adc_annotateConstraintElem(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1bc398bd2:;
			{
				jule::Ptr<_1ab25aa1c_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1bc399b39:;
						{
							_38921_elem=(*(_1ab25d68a_Ptr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bc3999a2:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ab0d8e72_PtrTypeDecl>(&__jule_any_type71)))._field_Elem;
				return _1ab217017_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1bc398b7c:;
	};
	return false;;
}

inline jule::Bool _1bc398220_annotateConstraintElem(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1bc39c323:;
			{
				jule::Ptr<_1ab25aa1c_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1bc39d2e1:;
						{
							_38921_elem=(*(_1ab25d404_Sptr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bc39d0e3:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ab0d84e3_SptrTypeDecl>(&__jule_any_type72)))._field_Elem;
				return _1ab217017_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1bc39c2bd:;
	};
	return false;;
}



inline jule::Bool _1ab216203_annotateConstraintMap(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _40645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bc37e008:;
			{
				jule::Ptr<_1ab269289_Map> _40917_m = _1ab25ec0d_Map((*(_40645_k)).ptr());;
				jule::Ptr<_1ab0d9e62_MapTypeDecl> _41017_m2 = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ab0d9e62_MapTypeDecl>(&__jule_any_type73);;
				(*(_self_))._field_c=(*(_41017_m2))._field_Key;
				if ((!(_1ab217017_annotateConstraint(_self_, &((*(_40917_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*(_41017_m2))._field_Val;
				__jule_func_result = _1ab217017_annotateConstraint(_self_, &((*(_40917_m))._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1bc37dea3:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ab216544_annotateConstraintTup(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _42145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1bc381b10:;
			{
				jule::Ptr<_1ab0d8b75_TupleTypeDecl> _42417_tup = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ab0d8b75_TupleTypeDecl>(&__jule_any_type74);;
				jule::Ptr<_1ab2686d9_Tuple> _42517_tup2 = _1ab25ee94_Tup((*(_42145_k)).ptr());;
				{
					auto expr = &((*(_42517_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc382d64:;
					if (it != expr_end) {
						jule::Ptr<_1ab25aa1c_TypeKind> _42625_t2 = *it;
						{
							{
								auto expr = &((*(_42417_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bc38289c:;
								if (it != expr_end) {
									jule::Ptr<_1ab0d7448_TypeDecl> _42729_t = *it;
									{
										(*(_self_))._field_c=_42729_t;
										if (_1ab217017_annotateConstraint(_self_, &(_42625_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1bc38289c:;
									++it;
									goto _iter_begin_1bc38289c;
								}
								_iter_end_1bc38289c:;
							};
						}
						_iter_next_1bc382d64:;
						++it;
						goto _iter_begin_1bc382d64;
					}
					_iter_end_1bc382d64:;
				};
			}
		}
		_match_end_1bc381aaa:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ab216885_annotateConstraintFn(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _43844_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bc3840b8:;
			{
				jule::Ptr<_1ab0e9108_FnDecl> _44117_pf = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ab0e9108_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1ab120d00_FnIns> _44217_f = _1ab25e45a_Fn((*(_43844_k)).ptr());;
				{
					auto expr = &((*(_44217_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc38597c:;
					if (it != expr_end) {
						jule::I64 _44318_i = it - expr->begin();
						jule::Ptr<_1ab11ed54_ParamIns> _44325_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_44117_pf))._field_Params[_44318_i]))._field_Kind;
							if (_1ab217017_annotateConstraint(_self_, &((*(_44325_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1bc38597c:;
						++it;
						_44318_i++;
						goto _iter_begin_1bc38597c;
					}
					_iter_end_1bc38597c:;
				};
				if (((*(_44117_pf))._field_Result != nullptr)) {
					(*(_self_))._field_c=(*((*(_44117_pf))._field_Result))._field_Kind;
					if (_1ab217017_annotateConstraint(_self_, &((*(_44217_f))._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1bc384063:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ab216bc6_annotateConstraintIdent(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _45947_k) {
	jule::Ptr<_1ab0d7a53_IdentTypeDecl> _46013_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ab0d7a53_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_1ab10acb8_StructIns> _46113_s = _1ab25e6e1_Struct((*(_45947_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc388d15:;
		if (it != expr_end) {
			jule::I64 _46213_i = it - expr->begin();
			jule::Ptr<_1ab0e4653_GenericDecl> _46216_g = *it;
			{
				if (((*(_46216_g))._field_Ident == (*(_46013_ident))._field_Ident)) {
					jule::Ptr<_1ab259136_InsGeneric> _46421_fg = (*((*(_self_))._field_f))._field_Generics[_46213_i];;
					if ((_46421_fg != nullptr)) {
						return false;;
					};
					_1ab21737a_pushGeneric(_self_, _45947_k, _46213_i);
					return true;;
				};
				if ((_46113_s == nullptr)) {
					goto _iter_next_1bc388d15;
				};
				jule::Ptr<_1ab0d7448_TypeDecl> _47417_c = (*(_self_))._field_c;;
				{
					auto expr = &((*(_46013_ident))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc389c6c:;
					if (it != expr_end) {
						jule::Ptr<_1ab0d7448_TypeDecl> _47525_ig = *it;
						{
							(*(_self_))._field_c=_47525_ig;
							{
								auto expr = &((*(_46113_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bc38c412:;
								if (it != expr_end) {
									jule::Ptr<_1ab259136_InsGeneric> _47729_sg = *it;
									{
										if (_1ab217017_annotateConstraint(_self_, &((*(_47729_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1bc38c412:;
									++it;
									goto _iter_begin_1bc38c412;
								}
								_iter_end_1bc38c412:;
							};
						}
						_iter_next_1bc389c6c:;
						++it;
						goto _iter_begin_1bc389c6c;
					}
					_iter_end_1bc389c6c:;
				};
				(*(_self_))._field_c=_47417_c;
			}
			_iter_next_1bc388d15:;
			++it;
			_46213_i++;
			goto _iter_begin_1bc388d15;
		}
		_iter_end_1bc388d15:;
	};
	return false;;
}



inline jule::Bool _1ab217017_annotateConstraint(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _48842_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1bc38c104:;
			{
				return _1ab216bc6_annotateConstraintIdent(_self_, _48842_k);;
			}
		}
		_match_end_1bc38c09e:;
	};
	{
		
		if ((_1ab25de3d_Arr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1bc38d7ed:;
			{
				return _1bc3900b3_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1ab25e1c4_Slc((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1bc38d875:;
			{
				return _1bc38e920_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1ab25d68a_Ptr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1bc38d8ec:;
			{
				return _1bc391adc_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1ab25d404_Sptr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1bc38e106:;
			{
				return _1bc398220_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1ab25ec0d_Map((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1bc38e16c:;
			{
				return _1ab216203_annotateConstraintMap(_self_, _48842_k);;
			}
		}
		else if ((_1ab25e45a_Fn((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1bc38e1d3:;
			{
				return _1ab216885_annotateConstraintFn(_self_, _48842_k);;
			}
		}
		else if ((_1ab25ee94_Tup((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1bc38e249:;
			{
				return _1ab216544_annotateConstraintTup(_self_, _48842_k);;
			}
		}
		else {
			_case_begin_1bc38dbd8:;
			{
				return false;;
			}
		}
		_match_end_1bc38db83:;
	};
}



inline void _1ab21737a_pushGeneric(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _51335_k, jule::I64 _51349_i) {
	(*((*(_self_))._field_f))._field_Generics[_51349_i]=jule::new_ptr<_1ab259136_InsGeneric>(_1ab259136_InsGeneric{._field_Kind=(*(_51335_k)), });
	jule::Ptr<_1ab0e4653_GenericDecl> _51513_gd = (*((*((*(_self_))._field_f))._field_Decl))._field_Generics[_51349_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3a11d4:;
		if (it != expr_end) {
			jule::Ptr<_1ab25aa1c_TypeKind> _51621_ignored = *it;
			{
				if (((*(_51513_gd))._field_Ident == _1ab25add5_Str(_51621_ignored.ptr()))) {
					(*(_51621_ignored))._field_Kind=(*((*(_51335_k))))._field_Kind;
				};
			}
			_iter_next_1bc3a11d4:;
			++it;
			goto _iter_begin_1bc3a11d4;
		}
		_iter_end_1bc3a11d4:;
	};
	if ((((*(_51513_gd))._field_Constraint == nullptr) || ((*((*(_51513_gd))._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*(_51513_gd))._field_Constraint))._field_Mask[0LL];
	_1ab217017_annotateConstraint(_self_, _51335_k);
}



inline jule::Bool _1ab2176bb_annotatePrim(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _52843_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1ab2196e0_annotateAny(_self_, _52843_k);
	return __jule_func_result;;
}



inline jule::Bool _1ab217a0c_annotateArr(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _53242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab269e16_Arr> _53313_parr = _1ab25de3d_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_53313_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab269e16_Arr> _53713_arr = _1ab25de3d_Arr((*(_53242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_53313_parr))._field_Elem));
	__jule_func_result = _1ab219a31_annotateKind(_self_, &((*(_53713_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ab217d4d_annotateSlc(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _54242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab267ae5_Slc> _54313_pslc = _1ab25e1c4_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_54313_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab267ae5_Slc> _54713_slc = _1ab25e1c4_Slc((*(_54242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_54313_pslc))._field_Elem));
	__jule_func_result = _1ab219a31_annotateKind(_self_, &((*(_54713_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ab218249_checkMapKey(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _55241_k, jule::Ptr<_1ab25aa1c_TypeKind>* _55261_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab25aa1c_TypeKind>* _55313_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_55241_k;
	__jule_func_result=_1ab219a31_annotateKind(_self_, _55261_ck);
	(*(_self_))._field_k=_55313_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ab21858a_annotateMap(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _56042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab269289_Map> _56113_pmap = _1ab25ec0d_Map((*((*(_self_))._field_k)).ptr());;
	if ((_56113_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab269289_Map> _56513_m = _1ab25ec0d_Map((*(_56042_k)).ptr());;
	__jule_func_result = (_1ab218249_checkMapKey(_self_, (&((*(_56113_pmap))._field_Key)), &((*(_56513_m))._field_Key)) && _1ab218249_checkMapKey(_self_, (&((*(_56113_pmap))._field_Val)), &((*(_56513_m))._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1ab2188cb_annotateFn(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _57041_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab120d00_FnIns> _57113_pf = _1ab25e45a_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_57113_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab120d00_FnIns> _57513_f = _1ab25e45a_Fn((*(_57041_k)).ptr());;
	{
		
		if (((*(_57113_pf))._field_Params.len() != (*(_57513_f))._field_Params.len())) {
			_case_begin_1bc3acbb3:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1ab11d36e_IsVoid((*(_57113_pf))._field_Decl.ptr()) != _1ab11d36e_IsVoid((*(_57513_f))._field_Decl.ptr()))) {
			_case_begin_1bc3acc3a:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bc3acb4c:;
	};
	__jule_func_result=true;
	jule::Ptr<_1ab25aa1c_TypeKind>* _58413_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_57513_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3ae3ac:;
		if (it != expr_end) {
			jule::I64 _58514_i = it - expr->begin();
			jule::Ptr<_1ab11ed54_ParamIns> _58521_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_57113_pf))._field_Params[_58514_i]))._field_Kind));
				__jule_func_result=(_1ab219a31_annotateKind(_self_, &((*(_58521_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1bc3ae3ac:;
			++it;
			_58514_i++;
			goto _iter_begin_1bc3ae3ac;
		}
		_iter_end_1bc3ae3ac:;
	};
	if ((!(_1ab11d36e_IsVoid((*(_57113_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_57113_pf))._field_Result));
		__jule_func_result=(_1ab219a31_annotateKind(_self_, &((*(_57513_f))._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_58413_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ab218c1c_annotatePtr(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _59942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab26a8d9_Ptr> _60013_pptr = _1ab25d68a_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_60013_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab26a8d9_Ptr> _60413_ptr = _1ab25d68a_Ptr((*(_59942_k)).ptr());;
	(*(_self_))._field_k=(&((*(_60013_pptr))._field_Elem));
	__jule_func_result = _1ab219a31_annotateKind(_self_, &((*(_60413_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ab21905d_annotateSptr(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _60943_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab267122_Sptr> _61013_ssptr = _1ab25d404_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_61013_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab267122_Sptr> _61413_sptr = _1ab25d404_Sptr((*(_60943_k)).ptr());;
	(*(_self_))._field_k=(&((*(_61013_ssptr))._field_Elem));
	__jule_func_result = _1ab219a31_annotateKind(_self_, &((*(_61413_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ab21939e_annotateStruct(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _61945_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab10acb8_StructIns> _62013_s = _1ab25e6e1_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_62013_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab10acb8_StructIns> _62413_s2 = _1ab25e6e1_Struct((*(_61945_k)).ptr());;
	if (((*(_62013_s))._field_Generics.len() != (*(_62413_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_62013_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3b7a58:;
		if (it != expr_end) {
			jule::I64 _62814_i = it - expr->begin();
			jule::Ptr<_1ab259136_InsGeneric> _62821_g = *it;
			{
				jule::Ptr<_1ab259136_InsGeneric> _62917_g2 = (*(_62413_s2))._field_Generics[_62814_i];;
				if (_1ab25b226_Equal((*(_62821_g))._field_Kind, (*(_62917_g2))._field_Kind)) {
					goto _iter_next_1bc3b7a58;
				};
				(*(_self_))._field_k=(&((*(_62821_g))._field_Kind));
				if ((!(_1ab219a31_annotateKind(_self_, &((*(_62917_g2))._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bc3b7a58:;
			++it;
			_62814_i++;
			goto _iter_begin_1bc3b7a58;
		}
		_iter_end_1bc3b7a58:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab2196e0_annotateAny(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _64142_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6429_kind = _1ab25add5_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3badad:;
		if (it != expr_end) {
			jule::I64 _64313_i = it - expr->begin();
			jule::Ptr<_1ab0e4653_GenericDecl> _64316_g = *it;
			{
				if ((_6429_kind != (*(_64316_g))._field_Ident)) {
					goto _iter_next_1bc3badad;
				};
				jule::Ptr<_1ab259136_InsGeneric> _64713_t = (*((*(_self_))._field_f))._field_Generics[_64313_i];;
				{
					
					if ((_64713_t == nullptr) || ((*(_64713_t))._field_Kind == nullptr)) {
						_case_begin_1bc3bcaa2:;
						{
							_1ab21737a_pushGeneric(_self_, _64142_k, _64313_i);
						}
					}
					else if ((!(_1ab25b226_Equal((*(_64713_t))._field_Kind, (*(_64142_k)))))) {
						_case_begin_1bc3bcb29:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1bc3bc981:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_64142_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1bc3badad:;
			++it;
			_64313_i++;
			goto _iter_begin_1bc3badad;
		}
		_iter_end_1bc3badad:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ab219a31_annotateKind(_1ab21580c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _66243_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1ab2196e0_annotateAny(_self_, _66243_k)) {
			_case_begin_1bc3c018c:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab25d16d_Prim((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1bc3c0214:;
			{
				__jule_func_result = _1ab2176bb_annotatePrim(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab25de3d_Arr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1bc3c0478:;
			{
				__jule_func_result = _1ab217a0c_annotateArr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab25e1c4_Slc((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1bc3c04de:;
			{
				__jule_func_result = _1ab217d4d_annotateSlc(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab25ec0d_Map((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1bc3c0555:;
			{
				__jule_func_result = _1ab21858a_annotateMap(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab25e45a_Fn((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1bc3c05cc:;
			{
				__jule_func_result = _1ab2188cb_annotateFn(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab25d68a_Ptr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1bc3c0654:;
			{
				__jule_func_result = _1ab218c1c_annotatePtr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab25d404_Sptr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1bc3c0764:;
			{
				__jule_func_result = _1ab21905d_annotateSptr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab25e6e1_Struct((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1bc3c07ca:;
			{
				__jule_func_result = _1ab21939e_annotateStruct(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bc3c006b:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bc3beac6:;
	};
}



inline jule::Bool _1ab219cb7_annotate(_1ab21580c_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1ab219a31_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab21580c_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1ab21ac0d_pushErrToken(_1ab21a669_fnCallArgChecker* _self_, jule::Ptr<_1ab0c1e7c_Token> _70731_token, jule::Str _70746_fmt, jule::Slice<jule::Any> _70759_args) {
	_1ab1a82b6_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _70731_token, _70746_fmt, _70759_args);
}



inline void _1ab21b071_pushErr(_1ab21a669_fnCallArgChecker* _self_, jule::Str _71126_fmt, jule::Slice<jule::Any> _71139_args) {
	_1ab21ac0d_pushErrToken(_self_, (*(_self_))._field_errorToken, _71126_fmt, _71139_args);
}



inline jule::Slice<jule::Ptr<_1ab11ed54_ParamIns>> _1ab21b307_getParams(_1ab21a669_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1ab11ba43_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl.ptr()))) {
		return (*((*(_self_))._field_f))._field_Params.slice(1LL);;
	};
	return (*((*(_self_))._field_f))._field_Params;;
}



inline jule::Bool _1ab21b615_checkCounts(_1ab21a669_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ab11ed54_ParamIns>>* _72431_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _72513_n = (*(_72431_params)).len();;
	if (((_72513_n > 0LL) && _1ab11ba43_IsSelf((*((*(_72431_params))[0LL]))._field_Decl.ptr()))) {
		(_72513_n)--;
	};
	jule::I64 _73013_diff = (_72513_n - (*(_self_))._field_args.len());;
	jule::Str _73113_log = jule::Str();;
	{
		
		if ((_73013_diff == 0LL)) {
			_case_begin_1bc3cbb6b:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72513_n > 0LL) && (*((*((*(_72431_params))[(_72513_n - 1LL)]))._field_Decl))._field_Variadic)) {
			_case_begin_1bc3cba8e:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_73013_diff < 0LL) || (_73013_diff > (*(_72431_params)).len()))) {
			_case_begin_1bc3cb75e:;
			{
				_73113_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1bc3cb6e8:;
			{
				_73113_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_1bc3cb682:;
	};
	_1d7ad2eb1_StrBuilder _74213_err = static__1d7ad327a_New(32LL);;
	_1d7adba8b_WriteStr(&_74213_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_1d7adba8b_WriteStr(&_74213_err, jule::Str::lit("\n       wanted (", 16));
	{
		auto expr = _72431_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3cda80:;
		if (it != expr_end) {
			jule::I64 _74513_i = it - expr->begin();
			jule::Ptr<_1ab11ed54_ParamIns> *_74516_p = it;
			{
				_1d7adba8b_WriteStr(&_74213_err, _1ab25add5_Str((*((*(_74516_p))))._field_Kind.ptr()));
				if ((((*(_72431_params)).len() - _74513_i) > 1LL)) {
					_1d7adba8b_WriteStr(&_74213_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1bc3cda80:;
			++it;
			_74513_i++;
			goto _iter_begin_1bc3cda80;
		}
		_iter_end_1bc3cda80:;
	};
	_1d7adbd44_WriteByte(&_74213_err, ')');
	_1ab21b071_pushErr(_self_, _73113_log, jule::Slice<jule::Any>::make({jule::Any(_1d7adc383_Str(&_74213_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ab21babb_checkArg(_1ab21a669_fnCallArgChecker* _self_, jule::Ptr<_1ab11ed54_ParamIns>* _75632_p, jule::Ptr<_1ab22a228_Data>* _75651_arg, jule::Ptr<_1ab0c1e7c_Token>* _75668_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1ab1230cc_parameterUsesGenerics(_75632_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_75632_p))))._field_Decl))._field_Variadic)) && _1ab223ead_isGoodValueToInfer(_75651_arg));
		if (__jule_func_result) {
			_1ab21580c_dynamicTypeAnnotation _76121_dta = _1ab21580c_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_75632_p)), ._field_a=(*(_75651_arg)), ._field_errorToken=(*(_75668_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1ab219cb7_annotate(&_76121_dta);
		};
		if ((!(__jule_func_result))) {
			_1ab21ac0d_pushErrToken(_self_, (*(_75668_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1ab1b42d3_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*((*((*(_75632_p))))._field_Decl))._field_Mutable, (*((*((*(_75632_p))))._field_Decl))._field_Reference, &((*((*(_75632_p))))._field_Kind), _75651_arg, _75668_errorToken)) {
		_1ab1b0cc4_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*((*(_75632_p))))._field_Decl))._field_Reference, &((*((*(_75632_p))))._field_Kind), _75651_arg, (*(_75668_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab21beb7_push(_1ab21a669_fnCallArgChecker* _self_, jule::Ptr<_1ab11ed54_ParamIns>* _78528_p, jule::Ptr<_1ab0db77c_Expr> _78546_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab25aa1c_TypeKind> _78613_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7879_oldImmut = (*((*(_self_))._field_e))._field_immutable;;
	(*((*(_self_))._field_e))._field_immutable=(!((*((*((*(_78528_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*((*((*(_78528_p))))._field_Decl))._field_Variadic)))) {
		(*((*(_self_))._field_e))._field_prefix=(*((*(_78528_p))))._field_Kind;
	} else {
		(*((*(_self_))._field_e))._field_prefix=nullptr;
	};
	jule::Ptr<_1ab22a228_Data> _79513_d = _1ab24a17c_evalExpr((*(_self_))._field_e, _78546_arg);;
	(*((*(_self_))._field_e))._field_prefix=_78613_old;
	(*((*(_self_))._field_e))._field_immutable=_7879_oldImmut;
	if ((_79513_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1ab21babb_checkArg(_self_, _78528_p, &(_79513_d), &((*(_78546_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_79513_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1ab21c3b3_pushVariadic(_1ab21a669_fnCallArgChecker* _self_, jule::Ptr<_1ab11ed54_ParamIns>* _80936_p, jule::I64 _80954_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _81113_variadiced = false;;
	jule::Bool _8129_more = ((_80954_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1ab112561_SliceExprModel> _81313_model = jule::new_ptr<_1ab112561_SliceExprModel>(_1ab112561_SliceExprModel{._field_ElemKind=(*((*(_80936_p))))._field_Kind, });;
	jule::Ptr<_1ab25aa1c_TypeKind> _81713_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _8229_variadic = (*((*((*(_80936_p))))._field_Kind))._field_Variadic;;
	(*((*((*(_80936_p))))._field_Kind))._field_Variadic=false;
	__JULE_DEFER({
		(*((*((*(_80936_p))))._field_Kind))._field_Variadic=_8229_variadic;
	});;
	for (; (_80954_i < (*(_self_))._field_args.len()); (_80954_i)++) {
		{
			jule::Ptr<_1ab0db77c_Expr> _82917_arg = (*(_self_))._field_args[_80954_i];;
			{
				auto &_match_expr{ (*(_82917_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type75) {
					_case_begin_1bc3e0487:;
					{
						(*((*(_self_))._field_e))._field_prefix=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab267ae5_Slc>(_1ab267ae5_Slc{._field_Elem=(*((*(_80936_p))))._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_1bc3e00d0:;
					{
						(*((*(_self_))._field_e))._field_prefix=(*((*(_80936_p))))._field_Kind;
					}
				}
				_match_end_1bc3e007a:;
			};
			jule::Ptr<_1ab22a228_Data> _84217_d = _1ab2499ea_eval((*(_self_))._field_e, _82917_arg);;
			if ((_84217_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1bc3dd8b4;
			};
			if ((*((*(_84217_d))._field_Kind))._field_Variadic) {
				_81113_variadiced=true;
				(*((*((*(_80936_p))))._field_Kind))._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1ab21babb_checkArg(_self_, _80936_p, &(_84217_d), &((*(_82917_arg))._field_Token)));
				{
					auto &_match_expr{ (*(_84217_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type76) {
						_case_begin_1bc3e3a40:;
						{
							_81313_model=(*(_84217_d))._field_Model.cast_ptr<_1ab112561_SliceExprModel>(&__jule_any_type76);
							(*(_81313_model))._field_ElemKind=(*((*(_80936_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1bc3e3677:;
						{
							_81313_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_84217_d))._field_Model); };
						}
					}
					_match_end_1bc3e3622:;
				};
				(_80954_i)++;
				goto _iter_end_1bc3dd8b4;
			};
			__jule_func_result=(__jule_func_result && _1ab21babb_checkArg(_self_, _80936_p, &(_84217_d), &((*(_82917_arg))._field_Token)));
			{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81313_model))._field_Elems; __jule_push_dest.push((*(_84217_d))._field_Model); };
		}
	_iter_next_1bc3dd8b4:;
	}
	_iter_end_1bc3dd8b4:;;
	(*((*(_self_))._field_e))._field_prefix=_81713_old;
	if ((_81113_variadiced && _8129_more)) {
		_1ab21ac0d_pushErrToken(_self_, (*((*(_self_))._field_args[_80954_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_81313_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_81313_model, &__jule_any_type76)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ab21c704_checkArgs(_1ab21a669_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ab11ed54_ParamIns>>* _88533_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8869_arg = (*((*(_self_))._field_e))._field_arg;;
	(*((*(_self_))._field_e))._field_arg=true;
	__jule_func_result=true;
	jule::I64 _89013_i = 0LL;;
	if ((((*(_88533_params)).len() > 0LL) && _1ab11ba43_IsSelf((*((*(_88533_params))[0LL]))._field_Decl.ptr()))) {
		(_89013_i)++;
	};
	_julec_label_1bc3e865a:;
	while ((_89013_i < (*(_88533_params)).len())) {
		{
			jule::Ptr<_1ab11ed54_ParamIns> _89717_p = (*(_88533_params))[_89013_i];;
			{
				
				if ((*((*(_89717_p))._field_Decl))._field_Variadic) {
					_case_begin_1bc3ea074:;
					{
						__jule_func_result=(_1ab21c3b3_pushVariadic(_self_, &(_89717_p), _89013_i) && __jule_func_result);
						goto _iter_end_1bc3e8968;
					}
				}
				else if (((*(_self_))._field_args.len() <= _89013_i)) {
					_case_begin_1bc3ea162:;
					{
						__jule_func_result=false;
						goto _iter_end_1bc3e8968;
					}
				}
				else {
					_case_begin_1bc3e9bcd:;
					{
						__jule_func_result=(_1ab21beb7_push(_self_, &(_89717_p), (*(_self_))._field_args[_89013_i]) && __jule_func_result);
					}
				}
				_match_end_1bc3e9b67:;
			};
			(_89013_i)++;
		}
	_iter_next_1bc3e8968:;
	}
	_iter_end_1bc3e8968:;;
	(*((*(_self_))._field_e))._field_arg=_8869_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ab21c98a_checkDynamicTypeAnnotation(_1ab21a669_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3ec043:;
		if (it != expr_end) {
			jule::Ptr<_1ab259136_InsGeneric> _91716_g = *it;
			{
				if ((_91716_g == nullptr)) {
					_1ab21b071_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bc3ec043:;
			++it;
			goto _iter_begin_1bc3ec043;
		}
		_iter_end_1bc3ec043:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab21cc21_check(_1ab21a669_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1ab11ed54_ParamIns>> _92713_params = _1ab21b307_getParams(_self_);;
	__jule_func_result=_1ab21b615_checkCounts(_self_, &(_92713_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1ab21c704_checkArgs(_self_, &(_92713_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1ab21c98a_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab21a669_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1ab21db01_pushErr(_1ab21d5a1_structLitChecker* _self_, jule::Ptr<_1ab0c1e7c_Token> _96526_token, jule::Str _96541_fmt, jule::Slice<jule::Any> _96554_args) {
	_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), _96526_token, _96541_fmt, _96554_args);
}



inline void _1ab21de64_pushSuggestion(_1ab21d5a1_structLitChecker* _self_, jule::Str _97033_fmt, jule::Slice<jule::Any> _97046_args) {
	_1ab22c7d0_pushSuggestion((*(_self_))._field_e.ptr(), _97033_fmt, _97046_args);
}



inline void _1ab21e382_pushMatch(_1ab21d5a1_structLitChecker* _self_, jule::Ptr<_1ab10a218_FieldIns>* _97433_f, jule::Ptr<_1ab22a228_Data>* _97452_d, jule::Ptr<_1ab0c1e7c_Token>* _97467_errorToken) {
	;
	jule::Bool _9809_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_97433_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1ab1b42d3_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, _9809_mutable, false, &((*((*(_97433_f))))._field_Kind), _97452_d, _97467_errorToken)) {
		_1ab1b0cc4_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_97433_f))))._field_Kind), _97452_d, (*(_97467_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1ab110aae_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1ab110aae_StructArgExprModel>(_1ab110aae_StructArgExprModel{._field_Token=(*(_97467_errorToken)), ._field_Field=(*(_97433_f)), ._field_Expr=(*(_97452_d))})); };
}



inline void _1ab21e6e5_checkPair(_1ab21d5a1_structLitChecker* _self_, jule::Ptr<_1ab0e0e9b_FieldExprPair>* _99333_pair, jule::Slice<jule::Ptr<_1ab0db77c_Expr>>* _99360_exprs) {
	jule::Ptr<_1ab10a218_FieldIns> _99513_f = _1ab10c171_FindField((*(_self_))._field_s.ptr(), (*((*((*(_99333_pair))))._field_Field))._field_Kind);;
	if ((_99513_f == nullptr)) {
		_1ab21db01_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_1ab1a8a25_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_99513_f))._field_Decl))._field_Public, (*((*(_99513_f))._field_Decl))._field_Token)))) {
		_1ab21db01_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		_1ab21de64_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1bc405ee7:;
	{
		auto expr = _99360_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc4089de:;
		if (it != expr_end) {
			jule::Ptr<_1ab0db77c_Expr> _100721_expr = *it;
			{
				{
					auto &_match_expr{ (*(_100721_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1bc409490:;
						{
							jule::Ptr<_1ab0e0e9b_FieldExprPair> _101021_dpair = (*(_100721_expr))._field_Kind.cast_ptr<_1ab0e0e9b_FieldExprPair>(&__jule_any_type77);;
							{
								
								if (((*(_99333_pair)) == _101021_dpair)) {
									_case_begin_1bc40a282:;
									{
										goto _iter_end_1bc4089de;
									}
								}
								else if (((*((*((*(_99333_pair))))._field_Field))._field_Kind == (*((*(_101021_dpair))._field_Field))._field_Kind)) {
									_case_begin_1bc40a309:;
									{
										_1ab21db01_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
										goto _iter_end_1bc4089de;
									}
								}
								_match_end_1bc40a1c7:;
							};
						}
					}
					_match_end_1bc40943a:;
				};
			}
			_iter_next_1bc4089de:;
			++it;
			goto _iter_begin_1bc4089de;
		}
		_iter_end_1bc4089de:;
	};
	jule::Ptr<_1ab25aa1c_TypeKind> _102113_prefix = (*((*(_self_))._field_e))._field_prefix;;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_102113_prefix;
	});;
	(*((*(_self_))._field_e))._field_prefix=(*(_99513_f))._field_Kind;
	jule::Ptr<_1ab22a228_Data> _102513_d = _1ab24a17c_evalExpr((*(_self_))._field_e, (*((*(_99333_pair))))._field_Expr);;
	if ((_102513_d == nullptr)) {
		return;;
	};
	_1ab21e382_pushMatch(_self_, &(_99513_f), &(_102513_d), &((*((*(_99333_pair))))._field_Field));
}



inline jule::Bool _1ab21ea36_readyExprs(_1ab21d5a1_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ab0db77c_Expr>>* _103234_exprs) {
	jule::Bool _103313_ok = true;;
	{
		auto expr = _103234_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc40e1a9:;
		if (it != expr_end) {
			jule::I64 _103414_i = it - expr->begin();
			jule::Ptr<_1ab0db77c_Expr> _103421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_103421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1bc40ee35:;
						{
							jule::Ptr<_1ab0e25a7_KeyValPair> _103721_pair = (*(_103421_expr))._field_Kind.cast_ptr<_1ab0e25a7_KeyValPair>(&__jule_any_type78);;
							{
								auto &_match_expr{ (*((*(_103721_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type79) {
									_case_begin_1bc410ad4:;
									{
										goto _match_end_1bc4110bd;
									}
								}
								else {
									_case_begin_1bc411123:;
									{
										_1ab21db01_pushErr(_self_, (*(_103721_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_103313_ok=false;
										goto _iter_next_1bc40e1a9;
									}
								}
								_match_end_1bc4110bd:;
							};
							(*((*(_103234_exprs))[_103414_i]))._field_Kind=jule::Any(jule::new_ptr<_1ab0e0e9b_FieldExprPair>(_1ab0e0e9b_FieldExprPair{._field_Field=(*((*(_103721_pair))._field_Key))._field_Token, ._field_Expr=(*(_103721_pair))._field_Val}), &__jule_any_type77);
						}
					}
					_match_end_1bc40edd0:;
				};
			}
			_iter_next_1bc40e1a9:;
			++it;
			_103414_i++;
			goto _iter_begin_1bc40e1a9;
		}
		_iter_end_1bc40e1a9:;
	};
	return _103313_ok;;
}



inline void _1ab21ecde_check(_1ab21d5a1_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ab0db77c_Expr>>* _105629_exprs) {
	if (((*(_105629_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1ab21ea36_readyExprs(_self_, _105629_exprs)))) {
		return;;
	};
	jule::Bool _106313_paired = false;;
	{
		auto expr = _105629_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc40eb05:;
		if (it != expr_end) {
			jule::I64 _106414_i = it - expr->begin();
			jule::Ptr<_1ab0db77c_Expr> _106421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_106421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1bc41944a:;
						{
							jule::Ptr<_1ab0e0e9b_FieldExprPair> _106721_pair = (*(_106421_expr))._field_Kind.cast_ptr<_1ab0e0e9b_FieldExprPair>(&__jule_any_type77);;
							if (((_106414_i > 0LL) && (!(_106313_paired)))) {
								_1ab21db01_pushErr(_self_, (*(_106721_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_106313_paired=true;
							_1ab21e6e5_checkPair(_self_, &(_106721_pair), _105629_exprs);
						}
					}
					else {
						_case_begin_1bc414412:;
						{
							if (_106313_paired) {
								_1ab21db01_pushErr(_self_, (*(_106421_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_106414_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1ab21db01_pushErr(_self_, (*(_106421_expr))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1bc40eb05;
							};
							jule::Ptr<_1ab10a218_FieldIns> _108221_field = (*((*(_self_))._field_s))._field_Fields[_106414_i];;
							if ((!(_1ab1a8a25_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_108221_field))._field_Decl))._field_Public, (*((*(_108221_field))._field_Decl))._field_Token)))) {
								_1ab21db01_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1ab21de64_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1ab25aa1c_TypeKind> _109021_prefix = (*((*(_self_))._field_e))._field_prefix;;
							__JULE_DEFER({
								(*((*(_self_))._field_e))._field_prefix=_109021_prefix;
							});;
							(*((*(_self_))._field_e))._field_prefix=(*(_108221_field))._field_Kind;
							jule::Ptr<_1ab22a228_Data> _109421_d = _1ab24a17c_evalExpr((*(_self_))._field_e, _106421_expr);;
							if ((_109421_d == nullptr)) {
								goto _iter_next_1bc40eb05;
							};
							_1ab21e382_pushMatch(_self_, &(_108221_field), &(_109421_d), &((*(_106421_expr))._field_Token));
						}
					}
					_match_end_1bc4143ac:;
				};
			}
			_iter_next_1bc40eb05:;
			++it;
			_106414_i++;
			goto _iter_begin_1bc40eb05;
		}
		_iter_end_1bc40eb05:;
	};
	if ((!(_106313_paired))) {
		jule::I64 _110513_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _110617_diff = (_110513_n - (*(_105629_exprs)).len());;
		{
			
			if ((_110617_diff <= 0LL)) {
				_case_begin_1bc41bb01:;
				{
					return;;
				}
			}
			_match_end_1bc41b99c:;
		};
		_1d7ad2eb1_StrBuilder _111217_idents = static__1d7ad327a_New(32LL);;
		for (; (_110617_diff > 0LL); (_110617_diff)--) {
			{
				_1d7adba8b_WriteStr(&_111217_idents, jule::Str::lit(", ", 2));
				_1d7adba8b_WriteStr(&_111217_idents, (*((*((*((*(_self_))._field_s))._field_Fields[(_110513_n - _110617_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1bc41c360:;
		}
		_iter_end_1bc41c360:;;
		_1ab21db01_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_1d7adcd34_Buf(&_111217_idents).slice(2LL)), &__jule_any_type4)}));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab21d5a1_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab1c7a66_Var> _1ab22086c_buildVar(_1ab220383_rangeChecker* _self_, jule::Ptr<_1ab0ea1d6_VarDecl>* _113228_decl) {
	jule::Ptr<_1ab1c7a66_Var> _113313_v = _1ab129435_buildVar((*(_113228_decl)));;
	return _113313_v;;
}



inline void _1ab220a6a_setSizeKey(_1ab220383_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1ab0c48db_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1ab22086c_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=(*(_1ab346c90_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bc421a18:;
			{
				(*((*((*(_self_))._field_Kind))._field_KeyA))._field_IterRelation=jule::new_ptr<_1ab1c68ab_IterRelation>(_1ab1c68ab_IterRelation{._field_Range=(*((*(_self_))._field_d))._field_Model.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1bc4219b3:;
	};
}



inline void _1ab220e88_checkRangeExprValidity(_1ab220383_rangeChecker* _self_, jule::Ptr<_1ab22a228_Data>* _115946_d, jule::Ptr<_1ab1c7a66_Var>* _115957_key, jule::Ptr<_1ab25aa1c_TypeKind>* _115973_k) {
	jule::Bool _116013__mut = (*((*(_115957_key))))._field_Mutable;;
	if ((_116013__mut && (!(_1ab25c39d_Mutable((*(_115973_k)).ptr()))))) {
		_116013__mut=false;
	};
	_1ab1b42d3_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _116013__mut, (*((*(_115957_key))))._field_Reference, &((*((*((*(_115957_key))))._field_Kind))._field_Kind), _115946_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1ab221186_checkSlice(_1ab220383_rangeChecker* _self_) {
	_1ab220a6a_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ab0c48db_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ab267ae5_Slc> _117813_slc = _1ab25e1c4_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ab22086c_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1ab262bde_TypeSymbol>(_1ab262bde_TypeSymbol{._field_Kind=(*(_117813_slc))._field_Elem});
	_1ab220e88_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_117813_slc))._field_Elem));
}



inline void _1ab221384_checkArray(_1ab220383_rangeChecker* _self_) {
	_1ab220a6a_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ab0c48db_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ab269e16_Arr> _119113_arr = _1ab25de3d_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ab22086c_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1ab262bde_TypeSymbol>(_1ab262bde_TypeSymbol{._field_Kind=(*(_119113_arr))._field_Elem});
	_1ab220e88_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_119113_arr))._field_Elem));
}



inline void _1ab221582_checkMapKeyA(_1ab220383_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1ab0c48db_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ab269289_Map> _120313_m = _1ab25ec0d_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1ab22086c_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=jule::new_ptr<_1ab262bde_TypeSymbol>(_1ab262bde_TypeSymbol{._field_Kind=(*(_120313_m))._field_Key});
	jule::Ptr<_1ab22a228_Data> _120713_d = jule::new_ptr<_1ab22a228_Data>((*((*(_self_))._field_d)));;
	(*(_120713_d))._field_Kind=(*(_120313_m))._field_Key;
	_1ab220e88_checkRangeExprValidity(_self_, &(_120713_d), &((*((*(_self_))._field_Kind))._field_KeyA), &((*(_120313_m))._field_Key));
}



inline void _1ab221780_checkMapKeyB(_1ab220383_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ab0c48db_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ab269289_Map> _121813_m = _1ab25ec0d_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ab22086c_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1ab262bde_TypeSymbol>(_1ab262bde_TypeSymbol{._field_Kind=(*(_121813_m))._field_Val});
	jule::Ptr<_1ab22a228_Data> _122213_d = jule::new_ptr<_1ab22a228_Data>((*((*(_self_))._field_d)));;
	(*(_122213_d))._field_Kind=(*(_121813_m))._field_Val;
	_1ab220e88_checkRangeExprValidity(_self_, &(_122213_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_121813_m))._field_Val));
}



inline void _1ab22197d_checkMap(_1ab220383_rangeChecker* _self_) {
	_1ab221582_checkMapKeyA(_self_);
	_1ab221780_checkMapKeyB(_self_);
}



inline void _1ab221b7b_checkStr(_1ab220383_rangeChecker* _self_) {
	_1ab220a6a_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ab0c48db_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1ab22086c_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=(*(_1ab346c90_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _1ab221d79_checkComptime(_1ab220383_rangeChecker* _self_) {
	_1ab220a6a_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyA))._field_Mutable)) {
		_1ab1a82b6_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyA))._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyB))._field_Mutable)) {
		_1ab1a82b6_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyB))._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ab0c48db_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1ab22086c_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
}



inline jule::Bool _1ab222110_checkComptimeRange(_1ab220383_rangeChecker* _self_) {
	jule::Ptr<_1ab137443_comptimeRange> _125713_range = _1ab261517_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_125713_range))._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_1bc43dea8:;
			{
				_1ab221d79_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1bc43db56:;
			{
				_1ab1a82b6_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1bc43db01:;
	};
}



inline jule::Bool _1ab222396_check(_1ab220383_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1bc4419a0:;
		}
		else if ((_1ab25e1c4_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc440b36:;
			{
				_1ab221186_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1ab25de3d_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc440b9c:;
			{
				_1ab221384_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1ab25ec0d_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc440c13:;
			{
				_1ab22197d_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1ab261517_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc440c79:;
			{
				return _1ab222110_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1bc4404e8:;
			{
				jule::Ptr<_1ab2635e6_Prim> _128913_prim = _1ab25d16d_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_128913_prim != nullptr) && _1ab266a7d_IsStr(_128913_prim.ptr()))) {
					_1ab221b7b_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1bc44043d:;
	};
	_1ab1a82b6_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab220383_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1ab223012_prepareTypes(_1ab222ae4_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1ab121eee_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1ab2232ba_prepareExprs(_1ab222ae4_retTypeChecker* _self_, jule::Ptr<_1ab0db77c_Expr>* _131736_e) {
	if (((*(_131736_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_131736_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1bc44c868:;
			{
				(*(_self_))._field_exprs=(*((*((*(_131736_e))))._field_Kind.cast_ptr<_1ab0dc44d_TupleExpr>(&__jule_any_type80)))._field_Expr;
			}
		}
		else {
			_case_begin_1bc44c4a0:;
			{
				{ jule::Slice<jule::Ptr<_1ab0db77c_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_131736_e))); };
			}
		}
		_match_end_1bc44c44a:;
	};
}



inline void _1ab2234b8_checkExprs(_1ab222ae4_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ab22a228_Data>> _133313_datas = jule::Slice<jule::Ptr<_1ab22a228_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1ab22be1c_Eval> _133413_eval = _1ab1b0763_eval((*((*(_self_))._field_sc))._field_s, jule::Trait<_1ab27a553_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc44ccca:;
		if (it != expr_end) {
			jule::I64 _133514_i = it - expr->begin();
			jule::Ptr<_1ab0db77c_Expr> _133521_expr = *it;
			{
				if ((_133514_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1bc44ccca;
				};
				jule::Ptr<_1ab25aa1c_TypeKind> _134017_t = (*(_self_))._field_types[_133514_i];;
				(*(_133413_eval))._field_prefix=_134017_t;
				jule::Ptr<_1ab22a228_Data> _134317_d = _1ab24a17c_evalExpr(_133413_eval, _133521_expr);;
				if ((_134317_d == nullptr)) {
					goto _iter_next_1bc44ccca;
				};
				{ jule::Slice<jule::Ptr<_1ab22a228_Data>> &__jule_push_dest = _133313_datas; __jule_push_dest.push(_134317_d); };
				if (((!((*(_134317_d))._field_Mutable)) && _1ab25c39d_Mutable((*(_134317_d))._field_Kind.ptr()))) {
					_1ab1a82b6_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1ab213b90_assignTypeChecker _135517_ac = _1ab213b90_assignTypeChecker{._field_s=(*((*(_self_))._field_sc))._field_s, ._field_dest=_134017_t, ._field_d=_134317_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1ab214e05_check(&_135517_ac);
			}
			_iter_next_1bc44ccca:;
			++it;
			_133514_i++;
			goto _iter_begin_1bc44ccca;
		}
		_iter_end_1bc44ccca:;
	};
	if ((_133313_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1ab1158a5_TupleExprModel>(_1ab1158a5_TupleExprModel{._field_Datas=_133313_datas}), &__jule_any_type81);
	} else if ((_133313_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_133313_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1ab223809_check(_1ab222ae4_retTypeChecker* _self_, jule::Ptr<_1ab0db77c_Expr>* _137429_e) {
	_1ab223012_prepareTypes(_self_);
	_1ab2232ba_prepareExprs(_self_, _137429_e);
	jule::I64 _13789_n = (*(_self_))._field_exprs.len();;
	if (((_13789_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1ab11e13e_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
			_1ab1a82b6_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_13789_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1ab11d36e_IsVoid((*((*(_self_))._field_f))._field_Decl.ptr()))) {
		_1ab1a82b6_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_13789_n > (*(_self_))._field_types.len())) {
		_1ab1a82b6_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_13789_n < (*(_self_))._field_types.len())) {
		_1ab1a82b6_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1ab2234b8_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab222ae4_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab225388_SelectPackage(_1ab224d9e_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc45ad93:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1bc45ad93:;
			++it;
			goto _iter_begin_1bc45ad93;
		}
		_iter_end_1bc45ad93:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1c7a66_Var> _1ab225784_FindVar(_1ab224d9e_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1ab227566_findVar(_self_, &(_4126_ident), _4138_binded, false);;
}



inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab225b80_FindTypeAlias(_1ab224d9e_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1ab227a1c_findTypeAlias(_self_, &(_4732_ident), _4744_binded, false);;
}



inline jule::Ptr<_1ab10803a_Struct> _1ab22607b_FindStruct(_1ab224d9e_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc45d5d2:;
		if (it != expr_end) {
			jule::Ptr<_1ab10803a_Struct> _5421_s = *it;
			{
				if ((((*(_5421_s))._field_Ident == _5329_ident) && ((*(_5421_s))._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1bc45d5d2:;
			++it;
			goto _iter_begin_1bc45d5d2;
		}
		_iter_end_1bc45d5d2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab11cdeb_Fn> _1ab226477_FindFn(_1ab224d9e_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc45eb66:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _6521_f = *it;
			{
				if ((((*(_6521_f))._field_Ident == _6425_ident) && ((*(_6521_f))._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1bc45eb66:;
			++it;
			goto _iter_begin_1bc45eb66;
		}
		_iter_end_1bc45eb66:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab131195_Trait> _1ab2267b8_FindTrait(_1ab224d9e_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc460e86:;
		if (it != expr_end) {
			jule::Ptr<_1ab131195_Trait> _7621_t = *it;
			{
				if (((*(_7621_t))._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1bc460e86:;
			++it;
			goto _iter_begin_1bc460e86;
		}
		_iter_end_1bc460e86:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab133890_Enum> _1ab226b09_FindEnum(_1ab224d9e_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc46165c:;
		if (it != expr_end) {
			jule::Ptr<_1ab133890_Enum> _8721_e = *it;
			{
				if (((*(_8721_e))._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1bc46165c:;
			++it;
			goto _iter_begin_1bc46165c;
		}
		_iter_end_1bc46165c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab13509a_TypeEnum> _1ab226e4a_FindTypeEnum(_1ab224d9e_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc46265d:;
		if (it != expr_end) {
			jule::Ptr<_1ab13509a_TypeEnum> _9821_e = *it;
			{
				if (((*(_9821_e))._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1bc46265d:;
			++it;
			goto _iter_begin_1bc46265d;
		}
		_iter_end_1bc46265d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1c7a66_Var> _1ab227566_findVar(_1ab224d9e_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse) {
	if (_10853_reverse) {
		jule::I64 _11017_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11017_i >= 0LL); (_11017_i)--) {
			{
				jule::Ptr<_1ab1c7a66_Var> _11221_v = (*(_self_))._field_Vars[_11017_i];;
				if ((((*(_11221_v))._field_Ident == (*(_10827_ident))) && ((*(_11221_v))._field_Binded == _10839_binded))) {
					return _11221_v;;
				};
			}
		_iter_next_1bc464d36:;
		}
		_iter_end_1bc464d36:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc464d7a:;
			if (it != expr_end) {
				jule::Ptr<_1ab1c7a66_Var> _11825_v = *it;
				{
					if ((((*(_11825_v))._field_Ident == (*(_10827_ident))) && ((*(_11825_v))._field_Binded == _10839_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1bc464d7a:;
				++it;
				goto _iter_begin_1bc464d7a;
			}
			_iter_end_1bc464d7a:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab227a1c_findTypeAlias(_1ab224d9e_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse) {
	if (_12759_reverse) {
		jule::I64 _12917_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12917_i >= 0LL); (_12917_i)--) {
			{
				jule::Ptr<_1ab259c2a_TypeAlias> _13121_ta = (*(_self_))._field_TypeAliases[_12917_i];;
				if ((((*(_13121_ta))._field_Ident == (*(_12733_ident))) && ((*(_13121_ta))._field_Binded == _12745_binded))) {
					return _13121_ta;;
				};
			}
		_iter_next_1bc467e05:;
		}
		_iter_end_1bc467e05:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc467e49:;
			if (it != expr_end) {
				jule::Ptr<_1ab259c2a_TypeAlias> _13725_ta = *it;
				{
					if ((((*(_13725_ta))._field_Ident == (*(_12733_ident))) && ((*(_13725_ta))._field_Binded == _12745_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1bc467e49:;
				++it;
				goto _iter_begin_1bc467e49;
			}
			_iter_end_1bc467e49:;
		};
	};
	return nullptr;;
}



inline jule::Any _1ab227e18_defByIdent(_1ab224d9e_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc4697ca:;
		if (it != expr_end) {
			jule::Ptr<_1ab1c7a66_Var> _14921_v = *it;
			{
				if ((((*(_14921_v))._field_Ident == (*(_14830_ident))) && ((*(_14921_v))._field_Binded == _14842_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1bc4697ca:;
			++it;
			goto _iter_begin_1bc4697ca;
		}
		_iter_end_1bc4697ca:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc46b18e:;
		if (it != expr_end) {
			jule::Ptr<_1ab259c2a_TypeAlias> _15521_ta = *it;
			{
				if ((((*(_15521_ta))._field_Ident == (*(_14830_ident))) && ((*(_15521_ta))._field_Binded == _14842_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type66);;
				};
			}
			_iter_next_1bc46b18e:;
			++it;
			goto _iter_begin_1bc46b18e;
		}
		_iter_end_1bc46b18e:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc46c05d:;
		if (it != expr_end) {
			jule::Ptr<_1ab10803a_Struct> _16121_s = *it;
			{
				if ((((*(_16121_s))._field_Ident == (*(_14830_ident))) && ((*(_16121_s))._field_Binded == _14842_binded))) {
					return jule::Any(_16121_s, &__jule_any_type65);;
				};
			}
			_iter_next_1bc46c05d:;
			++it;
			goto _iter_begin_1bc46c05d;
		}
		_iter_end_1bc46c05d:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc46bac9:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _16721_f = *it;
			{
				if ((((*(_16721_f))._field_Ident == (*(_14830_ident))) && ((*(_16721_f))._field_Binded == _14842_binded))) {
					return jule::Any(_16721_f, &__jule_any_type64);;
				};
			}
			_iter_next_1bc46bac9:;
			++it;
			goto _iter_begin_1bc46bac9;
		}
		_iter_end_1bc46bac9:;
	};
	if (_14842_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc46d67a:;
		if (it != expr_end) {
			jule::Ptr<_1ab131195_Trait> _17721_t = *it;
			{
				if (((*(_17721_t))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1bc46d67a:;
			++it;
			goto _iter_begin_1bc46d67a;
		}
		_iter_end_1bc46d67a:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc46d59d:;
		if (it != expr_end) {
			jule::Ptr<_1ab133890_Enum> _18321_e = *it;
			{
				if (((*(_18321_e))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18321_e, &__jule_any_type67);;
				};
			}
			_iter_next_1bc46d59d:;
			++it;
			goto _iter_begin_1bc46d59d;
		}
		_iter_end_1bc46d59d:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc470748:;
		if (it != expr_end) {
			jule::Ptr<_1ab13509a_TypeEnum> _18921_te = *it;
			{
				if (((*(_18921_te))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18921_te, &__jule_any_type68);;
				};
			}
			_iter_next_1bc470748:;
			++it;
			goto _iter_begin_1bc470748;
		}
		_iter_end_1bc470748:;
	};
	return nullptr;;
}



inline jule::Bool _1ab2283be_isDuplicatedIdent(_1ab224d9e_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc471bcd:;
		if (it != expr_end) {
			jule::Ptr<_1ab1c7a66_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*((*(_20216_v))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20216_v))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1bc471bcd:;
			++it;
			goto _iter_begin_1bc471bcd;
		}
		_iter_end_1bc471bcd:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc472904:;
		if (it != expr_end) {
			jule::Ptr<_1ab259c2a_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*((*(_20816_ta))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20816_ta))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1bc472904:;
			++it;
			goto _iter_begin_1bc472904;
		}
		_iter_end_1bc472904:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc473a48:;
		if (it != expr_end) {
			jule::Ptr<_1ab10803a_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*((*(_21416_s))))._field_Ident == (*(_20150_ident)))) && ((*((*(_21416_s))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1bc473a48:;
			++it;
			goto _iter_begin_1bc473a48;
		}
		_iter_end_1bc473a48:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc4736a2:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*((*(_22016_f))))._field_Ident == (*(_20150_ident)))) && ((*((*(_22016_f))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1bc4736a2:;
			++it;
			goto _iter_begin_1bc4736a2;
		}
		_iter_end_1bc4736a2:;
	};
	if (_20162_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc47573c:;
		if (it != expr_end) {
			jule::Ptr<_1ab131195_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*((*(_23016_t))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1bc47573c:;
			++it;
			goto _iter_begin_1bc47573c;
		}
		_iter_end_1bc47573c:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc475660:;
		if (it != expr_end) {
			jule::Ptr<_1ab133890_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*((*(_23616_e))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1bc475660:;
			++it;
			goto _iter_begin_1bc475660;
		}
		_iter_end_1bc475660:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc477c7d:;
		if (it != expr_end) {
			jule::Ptr<_1ab13509a_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*((*(_24216_te))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1bc477c7d:;
			++it;
			goto _iter_begin_1bc477c7d;
		}
		_iter_end_1bc477c7d:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab224d9e_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab22a5d0_IsNil(_1ab22a228_Data* _self_) {
	return _1ab25baea_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1ab22a866_IsVoid(_1ab22a228_Data* _self_) {
	return _1ab25bd81_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1ab22aaec_IsConst(_1ab22a228_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1ab22ae3d_GoodOperand(_1ab22a228_Data* _self_, jule::Ptr<_1ab22a228_Data>* _10331_other) {
	if ((_1ab25dba7_TypeEnum((*((*(_10331_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1ab25d16d_Prim((*((*(_10331_other))))._field_Kind.ptr()) == nullptr) || (!(_1ab266d14_IsAny(_1ab25d16d_Prim((*((*(_10331_other))))._field_Kind.ptr()).ptr())))) && (_1ab25e977_Trait((*((*(_10331_other))))._field_Kind.ptr()) == nullptr)) && (!(_1ab25baea_IsNil((*(_self_))._field_Kind.ptr()))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab22a228_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab22b36c_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1ab22c46c_pushErr(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0c1e7c_Token> _13426_token, jule::Str _13441_fmt, jule::Slice<jule::Any> _13454_args) {
	_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), _13426_token, _13441_fmt, _13454_args);
}



inline void _1ab22c7d0_pushSuggestion(_1ab22be1c_Eval* _self_, jule::Str _13933_fmt, jule::Slice<jule::Any> _13946_args) {
	_1ab1a8629_pushSuggestion((*(_self_))._field_s.ptr(), _13933_fmt, _13946_args);
}



inline void _1ab22c9cd_allowBuiltin(_1ab22be1c_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1ab22cbcb_disallowBuiltin(_1ab22be1c_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1ab22ce62_isUnsafe(_1ab22be1c_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1ab22d1e8_isGlobal(_1ab22be1c_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1bc4ba034:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bc4ba3ec:;
			{
				return false;;
			}
		}
		_match_end_1bc4ba397:;
	};
}



inline jule::Bool _1ab22d506_applyNumericPrefix(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab22a228_Data>* _16642_d) {
	if ((((((*(_16642_d)) == nullptr) || (!(_1ab22aaec_IsConst((*(_16642_d)).ptr())))) || (_1ab25d16d_Prim((*((*(_16642_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1ab2635e6_Prim> _1739_prim = _1ab25d16d_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1739_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1d8bce70a_IsFloat(_1ab263937_Str(_1739_prim.ptr()))) {
			_case_begin_1bc4bcb4c:;
			{
				(*((*(_16642_d))))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>((*((*(_self_))._field_prefix)));
				_1d8bd3b0a_SetF64((*((*(_16642_d))))._field_Constant.ptr(), static_cast<jule::F64>(_1d8bd2c80_AsF64((*((*(_16642_d))))._field_Constant.ptr())));
				(*((*((*(_16642_d))))._field_Constant))._field_Kind=(*(_1739_prim))._field_Kind;
			}
		}
		else if (_1d8bcdce2_IsSigInt(_1ab263937_Str(_1739_prim.ptr()))) {
			_case_begin_1bc4bcbb3:;
			{
				if ((!(_1ab2111ba_sigAssignable(_1ab263937_Str(_1739_prim.ptr()), _16642_d)))) {
					return false;;
				};
				(*((*(_16642_d))))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>((*((*(_self_))._field_prefix)));
				_1d8bd3038_SetI64((*((*(_16642_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1d8bd2763_AsI64((*((*(_16642_d))))._field_Constant.ptr())));
				(*((*((*(_16642_d))))._field_Constant))._field_Kind=(*(_1739_prim))._field_Kind;
			}
		}
		else if (_1d8bce100_IsUnsigInt(_1ab263937_Str(_1739_prim.ptr()))) {
			_case_begin_1bc4bcc29:;
			{
				if ((!(_1ab211583_unsigAssignable(_1ab263937_Str(_1739_prim.ptr()), _16642_d)))) {
					return false;;
				};
				(*((*(_16642_d))))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>((*((*(_self_))._field_prefix)));
				_1d8bd32e1_SetU64((*((*(_16642_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1d8bd29e9_AsU64((*((*(_16642_d))))._field_Constant.ptr())));
				(*((*((*(_16642_d))))._field_Constant))._field_Kind=(*(_1739_prim))._field_Kind;
			}
		}
		_match_end_1bc4bc872:;
	};
	return true;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab22d847_litStr(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0dc827_LitExpr>* _20122_l) {
	jule::Str _20213_s = jule::Str();;
	if (_1ab0c339b_IsRawStr((*((*(_20122_l))))._field_Value)) {
		_20213_s=_1ab20e44e_ToRawStr((*((*(_20122_l))))._field_Value);
	} else {
		_20213_s=_1ab20e790_ToStr((*((*(_20122_l))))._field_Value);
	};
	jule::Ptr<_1d8bd00bd_Const> _20813_constant = static__1d8bd0d5a_NewStr(_20213_s);;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343b49_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_20813_constant, &__jule_any_type19), ._field_Constant=_20813_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab22db88_litRune(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0dc827_LitExpr>* _21823_l) {
	jule::I32 _2199_r = _1ab20e196_ToRune((*((*(_21823_l))))._field_Value);;
	jule::Ptr<_1ab22a228_Data> _22013_data = jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Constant=static__1d8bd050d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2199_r)))});;
	jule::Bool _2249_isAscii = _1ab1e1e04_IsAscii(_2199_r);;
	if (_2249_isAscii) {
		(*(_22013_data))._field_Kind=_1ab345750_primU8;
	} else {
		(*(_22013_data))._field_Kind=_1ab3451bc_primI32;
	};
	(*(_22013_data))._field_Mutable=true;
	(*(_22013_data))._field_Model=jule::Any(jule::new_ptr<_1ab1194e1_RuneExprModel>(_1ab1194e1_RuneExprModel{._field_Code=_2199_r}), &__jule_any_type82);
	(*(_22013_data))._field_IsRune=true;
	(*(_22013_data))._field_untyped=true;
	return _22013_data;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab22dec9_litFloat(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0dc827_LitExpr>* _23824_l) {
	jule::F64 _2399_f = ({
		auto except = _1d8bb4b74_ParseFloat((*((*(_23824_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1d8bd00bd_Const> _24013_constant = static__1d8bd1124_NewF64(_2399_f);;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_untyped=true, ._field_Kind=_1ab3467d9_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_24013_constant, &__jule_any_type19), ._field_Constant=_24013_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab22e31a_litInt(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0dc827_LitExpr>* _25026_l) {
	;
	jule::Str _25313_lit = (*((*(_25026_l))))._field_Value;;
	jule::I64 _25413_base = 0LL;;
	{
		
		if (_1d7abd93b_HasPrefix(_25313_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1bc4cb919:;
			{
				(_25313_lit).mut_slice(2LL);;
				_25413_base=16LLU;
			}
		}
		else if (_1d7abd93b_HasPrefix(_25313_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1bc4cba07:;
			{
				(_25313_lit).mut_slice(2LL);;
				_25413_base=2LLU;
			}
		}
		else if (_1d7abd93b_HasPrefix(_25313_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1bc4cb60b:;
			{
				(_25313_lit).mut_slice(2LL);;
				_25413_base=8LLU;
			}
		}
		else if (((_25313_lit[0LL] == '0') && (_25313_lit.len() > 1LL))) {
			_case_begin_1bc4cb672:;
			{
				(_25313_lit).mut_slice(1LL);;
				_25413_base=8LLU;
			}
		}
		else {
			_case_begin_1bc4cb595:;
			{
				_25413_base=10LLU;
			}
		}
		_match_end_1bc4cb540:;
	};
	jule::Ptr<_1ab22a228_Data> _27413_d = jule::new_ptr<_1ab22a228_Data>();;
	jule::Bool _27613_ok = true;;
	jule::I64 _2779_sig = ({
		auto except = _1d8bad233_ParseInt(_25313_lit, _25413_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_27613_ok=false;

			0LL;
		});
	});;
	if (_27613_ok) {
		(*(_27413_d))._field_Constant=static__1d8bd050d_NewI64(_2779_sig);
		(*(_27413_d))._field_Kind=_1ab344870_primInt;
	} else {
		jule::U64 _28513_unsig = ({
			auto except = _1d8bacc7c_ParseUint(_25313_lit, _25413_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1ab22c46c_pushErr(_self_, (*((*(_25026_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1ab22c7d0_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*(_27413_d))._field_Constant=static__1d8bd07c7_NewU64(_28513_unsig);
		(*(_27413_d))._field_Kind=_1ab344496_primUint;
	};
	(*(_27413_d))._field_Model=jule::Any((*(_27413_d))._field_Constant, &__jule_any_type19);
	if ((!(_1ab22d506_applyNumericPrefix(_self_, &(_27413_d))))) {
		_1ab254186_fitBitsize(&(_27413_d));
	};
	(*(_27413_d))._field_Mutable=true;
	(*(_27413_d))._field_untyped=true;
	return _27413_d;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab22e65b_litNum(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0dc827_LitExpr>* _30626_l) {
	{
		
		if (_1ab0c408e_IsFloat((*((*(_30626_l))))._field_Value)) {
			_case_begin_1bc4d3c95:;
			{
				return _1ab22dec9_litFloat(_self_, _30626_l);;
			}
		}
		else {
			_case_begin_1bc4d35e1:;
			{
				return _1ab22e31a_litInt(_self_, _30626_l);;
			}
		}
		_match_end_1bc4d3547:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab22e99c_evalLit(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0dc827_LitExpr> _31526_lit) {
	{
		
		if (_1ab0c30d2_IsStr((*(_31526_lit))._field_Value)) {
			_case_begin_1bc4d4834:;
			{
				return _1ab22d847_litStr(_self_, &(_31526_lit));;
			}
		}
		else if (_1ab0c3665_IsRune((*(_31526_lit))._field_Value)) {
			_case_begin_1bc4d48ab:;
			{
				return _1ab22db88_litRune(_self_, &(_31526_lit));;
			}
		}
		else if (_1ab0c4358_IsNum((*(_31526_lit))._field_Value)) {
			_case_begin_1bc4d4933:;
			{
				return _1ab22e65b_litNum(_self_, &(_31526_lit));;
			}
		}
		else {
			_case_begin_1bc4d424b:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc4d4180:;
	};
}



inline jule::Any _1ab22ecdd_findBuiltins(_1ab22be1c_Eval* _self_, jule::Str* _32832_ident) {
	if (_1ab1a2777_IsPub((*(_32832_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 1)) {
				_case_begin_1bc4d6b66:;
				{
					jule::Any _33221_def = _1ab253e55_findBuiltinsImport(_32832_ident, (*(_self_))._field_lookup.cast_ptr<_1ab184bdd_ImportInfo>(1));;
					if ((_33221_def != nullptr)) {
						return _33221_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 3)) {
				_case_begin_1bc4d6bcc:;
				{
					jule::Any _33721_def = _1ab254bae_findBuiltinsSema(_32832_ident, (*(_self_))._field_lookup.cast_ptr<_1ab1a567b_Sema>(3));;
					if ((_33721_def != nullptr)) {
						return _33721_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 0)) {
				_case_begin_1bc4d6c43:;
				{
					jule::Any _34221_def = _1ab254bae_findBuiltinsSema(_32832_ident, (*((*(_self_))._field_lookup.cast_ptr<_1ab16aab4_scopeChecker>(0)))._field_s);;
					if ((_34221_def != nullptr)) {
						return _34221_def;;
					};
				}
			}
			_match_end_1bc4d6b11:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1ab347059_findBuiltinDef(_32832_ident);;
}



inline jule::Any _1ab2301d9_getDef(_1ab22be1c_Eval* _self_, jule::Str* _35526_ident, jule::Bool _35538_binded) {
	jule::Ptr<_1ab1c7a66_Var> _36013_v = _1ab27a553_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab278c38_FindVar((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_36013_v != nullptr)) {
		return jule::Any(_36013_v, &__jule_any_type8);;
	};
	jule::Ptr<_1ab259c2a_TypeAlias> _36513_ta = _1ab27a553_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab279134_FindTypeAlias((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_36513_ta != nullptr)) {
		return jule::Any(_36513_ta, &__jule_any_type66);;
	};
	if ((!(_35538_binded))) {
		jule::Ptr<_1ab133890_Enum> _37117_enm = _1ab27a553_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab27a0ad_FindEnum((*(_self_))._field_lookup, (*(_35526_ident)));;
		if ((_37117_enm != nullptr)) {
			return jule::Any(_37117_enm, &__jule_any_type67);;
		};
		jule::Ptr<_1ab13509a_TypeEnum> _37617_tenm = _1ab27a553_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab27a3ee_FindTypeEnum((*(_self_))._field_lookup, (*(_35526_ident)));;
		if ((_37617_tenm != nullptr)) {
			return jule::Any(_37617_tenm, &__jule_any_type68);;
		};
	};
	jule::Ptr<_1ab11cdeb_Fn> _38213_f = _1ab27a553_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab27992b_FindFn((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_38213_f != nullptr)) {
		return jule::Any(_38213_f, &__jule_any_type64);;
	};
	jule::Ptr<_1ab10803a_Struct> _38713_s = _1ab27a553_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab279530_FindStruct((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_38713_s != nullptr)) {
		return jule::Any(_38713_s, &__jule_any_type65);;
	};
	return _1ab22ecdd_findBuiltins(_self_, _35526_ident);;
}



inline jule::Ptr<_1ab123eac_ReferenceStack> _1ab230470_getOwnerRefers(_1ab22be1c_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bc4de014:;
			{
				jule::Ptr<_1ab16aab4_scopeChecker> _39817_sc = _1ab16de3b_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1ab16aab4_scopeChecker>(0));;
				return (*((*(_39817_sc))._field_owner))._field_Refers;;
			}
		}
		else {
			_case_begin_1bc4dd8d7:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*((*(_self_))._field_owner))._field_Scope == nullptr))) {
					return (*((*(_self_))._field_owner))._field_Refers;;
				};
			}
		}
		_match_end_1bc4dd882:;
	};
	return nullptr;;
}



inline void _1bc500d6c_pushReference(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab120d00_FnIns>* _41040_ref) {
	jule::Ptr<_1ab123eac_ReferenceStack> _41113_refers = _1ab230470_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1bc502ed4_Exist(_41113_refers.ptr(), (*(_41040_ref))))))) {
		_1ab124c8d_Push(_41113_refers.ptr(), jule::Any((*(_41040_ref)), &__jule_any_type7));
	};
}

inline void _1bc514d2b_pushReference(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab1c7a66_Var>* _41040_ref) {
	jule::Ptr<_1ab123eac_ReferenceStack> _41113_refers = _1ab230470_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1bc516e2c_Exist(_41113_refers.ptr(), (*(_41040_ref))))))) {
		_1ab124c8d_Push(_41113_refers.ptr(), jule::Any((*(_41040_ref)), &__jule_any_type8));
	};
}

inline void _1bc5c28bc_pushReference(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab10acb8_StructIns>* _41040_ref) {
	jule::Ptr<_1ab123eac_ReferenceStack> _41113_refers = _1ab230470_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1bc5c4a34_Exist(_41113_refers.ptr(), (*(_41040_ref))))))) {
		_1ab124c8d_Push(_41113_refers.ptr(), jule::Any((*(_41040_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab230a69__evalEnum(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab133890_Enum> _41728_enm) {
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_41728_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1ab22a228_Data> _1ab230e65_evalEnum(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab133890_Enum> _42631_enm, jule::Ptr<_1ab0c1e7c_Token> _42643_errorToken) {
	if ((!(_1ab1a8a25_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42631_enm))._field_Public, (*(_42631_enm))._field_Token)))) {
		_1ab22c46c_pushErr(_self_, _42643_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_42631_enm))._field_Ident, &__jule_any_type4)}));
		_1ab22c7d0_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ab230a69__evalEnum(_self_, _42631_enm);;
}



inline jule::Ptr<_1ab22a228_Data> _1ab2312a6__evalTypeEnum(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab13509a_TypeEnum> _43532_enm) {
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_43532_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1ab22a228_Data> _1ab2316a2_evalTypeEnum(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab13509a_TypeEnum> _44435_enm, jule::Ptr<_1ab0c1e7c_Token> _44451_errorToken) {
	if ((!(_1ab1a8a25_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44435_enm))._field_Public, (*(_44435_enm))._field_Token)))) {
		_1ab22c46c_pushErr(_self_, _44451_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_44435_enm))._field_Ident, &__jule_any_type4)}));
		_1ab22c7d0_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ab2312a6__evalTypeEnum(_self_, _44435_enm);;
}



inline jule::Ptr<_1ab22a228_Data> _1ab2319e3__evalStruct(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab10acb8_StructIns> _45330_s) {
	jule::Ptr<_1ab22a228_Data> _45413_d = jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_45330_s, 0)}), ._field_Model=jule::Any(_45330_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_45330_s))._field_Decl != nullptr) && (*((*(_45330_s))._field_Decl))._field_Binded)) {
		(*((*(_45413_d))._field_Kind))._field_BindIdent=(*((*(_45330_s))._field_Decl))._field_Ident;
	};
	return _45413_d;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab231dde_evalStruct(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab10acb8_StructIns> _46733_s, jule::Ptr<_1ab0c1e7c_Token> _46748_errorToken) {
	if ((!(_1ab1a8a25_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46733_s))._field_Decl))._field_Public, (*((*(_46733_s))._field_Decl))._field_Token)))) {
		_1ab22c46c_pushErr(_self_, _46748_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_46733_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
		_1ab22c7d0_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ab232593_checkDeprecated(_self_, &((*((*(_46733_s))._field_Decl))._field_Directives), _46748_errorToken);
	return _1ab2319e3__evalStruct(_self_, _46733_s);;
}



inline jule::Ptr<_1ab22a228_Data> _1ab232230_evalFnIns(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab120d00_FnIns> _47728_f) {
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_47728_f, 1)}), ._field_Model=jule::Any(_47728_f, &__jule_any_type7), });;
}



inline void _1ab232593_checkDeprecated(_1ab22be1c_Eval* _self_, jule::Slice<jule::Ptr<_1ab0d6865_Directive>>* _48639_directives, jule::Ptr<_1ab0c1e7c_Token> _48670_tok) {
	if (_1ab22ce62_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1ab0d6865_Directive> _4919_d = _1ab253a8c_findDirective(_48639_directives, jule::Str::lit("deprecated", 10));;
	if ((_4919_d != nullptr)) {
		if (((*(_4919_d))._field_Args.len() == 0LL)) {
			_1ab22c46c_pushErr(_self_, _48670_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_1ab22c46c_pushErr(_self_, _48670_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*(_4919_d))._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_1ab22c7d0_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab23298e_evalFn(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab11cdeb_Fn> _50229_f, jule::Ptr<_1ab0c1e7c_Token> _50237_errorToken) {
	if ((!(_1ab1a8a25_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_50229_f))._field_Public, (*(_50229_f))._field_Token)))) {
		_1ab22c46c_pushErr(_self_, _50237_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_50229_f))._field_Ident, &__jule_any_type4)}));
		_1ab22c7d0_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ab232593_checkDeprecated(_self_, &((*(_50229_f))._field_Directives), _50237_errorToken);
	jule::Ptr<_1ab120d00_FnIns> _51113_ins = _1ab11e65b_instance(_50229_f);;
	_1bc500d6c_pushReference(_self_, &(_51113_ins));
	return _1ab232230_evalFnIns(_self_, _51113_ins);;
}



inline void _1ab232dac_pushIllegalCycleError(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab1c7a66_Var>* _51641_v1, jule::Ptr<_1ab1c7a66_Var>* _51652_v2, _1d7ad2eb1_StrBuilder* _51667_message) {
	;
	jule::Str _5189_refers_to = _1d7b8222a_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51641_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51652_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5199_buf = _1d7adcd34_Buf(_51667_message);;
	_1d7adba8b_WriteStr(_51667_message, _1d7abd144_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1d7adba8b_WriteStr(_51667_message, _5189_refers_to);
	_1d7adbd44_WriteByte(_51667_message, '\n');
	_1d7adb7d3_Write(_51667_message, _5199_buf);
}



inline jule::Bool _1ab2332a8_checkCrossCycle(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab1c7a66_Var>* _52635_v, _1d7ad2eb1_StrBuilder* _52649_message) {
	{
		auto expr = &((*((*(_52635_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc505dc7:;
		if (it != expr_end) {
			jule::Ptr<_1ab1c7a66_Var> *_52716_d = it;
			{
				if (((*(_52716_d)) == (*(_self_))._field_owner)) {
					_1ab232dac_pushIllegalCycleError(_self_, _52635_v, _52716_d, _52649_message);
					return false;;
				};
				if ((!(_1ab2332a8_checkCrossCycle(_self_, _52716_d, _52649_message)))) {
					_1ab232dac_pushIllegalCycleError(_self_, _52635_v, _52716_d, _52649_message);
					return false;;
				};
			}
			_iter_next_1bc505dc7:;
			++it;
			goto _iter_begin_1bc505dc7;
		}
		_iter_end_1bc505dc7:;
	};
	return true;;
}



inline jule::Bool _1ab2336a4_checkIllegalCycles(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab1c7a66_Var>* _54342_v, jule::Ptr<_1ab0c1e7c_Token> _54351_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_54342_v)))) {
		_1ab22c46c_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1d7ad2eb1_StrBuilder _55613_message = static__1d7ad327a_New(32LL);;
	if ((!(_1ab2332a8_checkCrossCycle(_self_, _54342_v, &(_55613_message))))) {
		jule::Str _55917_errMsg = _1d7adc383_Str(&_55613_message);;
		_1d7adc581_Clear(&_55613_message);
		_1ab232dac_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _54342_v, &(_55613_message));
		_55917_errMsg+=_1d7adc383_Str(&_55613_message);
		_1ab22c46c_pushErr(_self_, _54351_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_55917_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1ab1c7a66_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_54342_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab233aa0_evalVar(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab1c7a66_Var> _57130_v, jule::Ptr<_1ab0c1e7c_Token> _57139_errorToken) {
	if ((!(_1ab1a8a25_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_57130_v))._field_Public, (*(_57130_v))._field_Token)))) {
		_1ab22c46c_pushErr(_self_, _57139_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_57130_v))._field_Ident, &__jule_any_type4)}));
		_1ab22c7d0_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ab232593_checkDeprecated(_self_, &((*(_57130_v))._field_Directives), _57139_errorToken);
	if (((*(_57130_v))._field_Token == nullptr)) {
		goto _julec_label_1bc51bdaa;
	};
	(*(_57130_v))._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1bc5106d9:;
			{
				jule::Bool _59013_ok = _1ab2336a4_checkIllegalCycles(_self_, &(_57130_v), _57139_errorToken);;
				if ((!(_59013_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1bc510750:;
			{
				if (((!((*(_57130_v))._field_Reference)) || _1ab22ce62_isUnsafe(_self_))) {
					goto _match_end_1bc510684;
				};
				jule::Ptr<_1ab16aab4_scopeChecker> _59817_s = (*(_self_))._field_lookup.cast_ptr<_1ab16aab4_scopeChecker>(0);;
				while ((((*(_59817_s))._field_owner == nullptr) && ((*(_59817_s))._field_parent != nullptr))) {
					{
						_59817_s=(*(_59817_s))._field_parent;
					}
				_iter_next_1bc512411:;
				}
				_iter_end_1bc512411:;;
				if (((((*(_59817_s))._field_owner != nullptr) && (*((*(_59817_s))._field_owner))._field_Anon) && ((*(_57130_v))._field_Scope != (*((*(_59817_s))._field_owner))._field_Scope))) {
					_1ab22c46c_pushErr(_self_, _57139_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*(_57130_v))._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_1bc510684:;
	};
	if (((*(_57130_v))._field_Scope == nullptr)) {
		_1bc514d2b_pushReference(_self_, &(_57130_v));
	};
	if (((!((*(_57130_v))._field_Binded)) && (((*(_57130_v))._field_Value == nullptr) || ((*((*(_57130_v))._field_Value))._field_Data == nullptr)))) {
		if ((*(_57130_v))._field_Constant) {
			_1ab1be5b8_checkVar((*(_self_))._field_s, &(_57130_v), jule::Trait<_1ab27a553_Lookup>((*(_self_))._field_s, 3));
			if ((((*(_57130_v))._field_Value == nullptr) || ((*((*(_57130_v))._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*(_57130_v))._field_Kind == nullptr) || ((*((*(_57130_v))._field_Kind))._field_Kind == nullptr))) {
		if (((*(_57130_v))._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1ab1be5b8_checkVar((*(_self_))._field_s, &(_57130_v), (*(_self_))._field_lookup);
		if ((((*(_57130_v))._field_Kind == nullptr) || ((*((*(_57130_v))._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1bc51bdaa:;
	jule::Ptr<_1ab22a228_Data> _64213_d = jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=(*((*(_57130_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_57130_v))._field_Mutable, ._field_Reference=(*(_57130_v))._field_Reference, ._field_Lvalue=(!((*(_57130_v))._field_Constant)), ._field_Model=jule::Any(_57130_v, &__jule_any_type8), });;
	if ((((!((*(_57130_v))._field_Binded)) && _1ab1c7deb_IsInitialized(_57130_v.ptr())) && ((*((*(_57130_v))._field_Value))._field_Data != nullptr))) {
		(*(_64213_d))._field_IsRune=(*((*((*(_57130_v))._field_Value))._field_Data))._field_IsRune;
	};
	if (((*(_57130_v))._field_Constant && ((*((*((*(_57130_v))._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*(_64213_d))._field_Constant=jule::new_ptr<_1d8bd00bd_Const>((*((*((*((*(_57130_v))._field_Value))._field_Data))._field_Constant)));
		(*(_64213_d))._field_Model=jule::Any((*(_64213_d))._field_Constant, &__jule_any_type19);
		if (_1ab1c8418_untypedConstant(_57130_v.ptr())) {
			_1ab22d506_applyNumericPrefix(_self_, &(_64213_d));
			(*(_64213_d))._field_untyped=true;
		};
	};
	return _64213_d;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab233e9b_evalTypeAlias(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab259c2a_TypeAlias> _66636_ta, jule::Ptr<_1ab0c1e7c_Token> _66652_errorToken) {
	if ((!(_1ab1a8a25_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66636_ta))._field_Public, (*(_66636_ta))._field_Token)))) {
		_1ab22c46c_pushErr(_self_, _66652_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_66636_ta))._field_Ident, &__jule_any_type4)}));
		_1ab22c7d0_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_66636_ta))._field_Used=true;
	jule::Trait<_1ab25a566_Kind> _67513_kind = (*((*((*(_66636_ta))._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1ab22a228_Data> _67617_d = nullptr;;
	{
		auto &_match_expr{ _67513_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bc527b52:;
			{
				_67617_d=_1ab2319e3__evalStruct(_self_, _67513_kind.cast_ptr<_1ab10acb8_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1bc527976:;
			{
				_67617_d=_1ab230a69__evalEnum(_self_, _67513_kind.cast_ptr<_1ab133890_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1bc525c3d:;
			{
				_67617_d=_1ab2312a6__evalTypeEnum(_self_, _67513_kind.cast_ptr<_1ab13509a_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1bc525bc7:;
			{
				_67617_d=jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=(*((*((*(_66636_ta))._field_Kind))._field_Kind))._field_Kind}), ._field_Decl=true, });
				if ((*(_66636_ta))._field_Binded) {
					(*((*(_67617_d))._field_Kind))._field_BindIdent=(*(_66636_ta))._field_Ident;
				} else {
					(*((*(_67617_d))._field_Kind))._field_BindIdent=(*((*((*(_66636_ta))._field_Kind))._field_Kind))._field_BindIdent;
				};
				(*(_67617_d))._field_Model=jule::Any((*(_67617_d))._field_Kind, &__jule_any_type83);
			}
		}
		_match_end_1bc525b72:;
	};
	(*((*(_67617_d))._field_Kind))._field_Generic=(*(_66636_ta))._field_Generic;
	return _67617_d;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab234397_evalDef(_1ab22be1c_Eval* _self_, jule::Any* _70231_def, jule::Ptr<_1ab0c1e7c_Token> _70241_ident) {
	{
		auto &_match_expr{ (*(_70231_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bc52b0d9:;
			{
				return _1ab233aa0_evalVar(_self_, (*(_70231_def)).cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8), _70241_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1bc52b150:;
			{
				return _1ab230e65_evalEnum(_self_, (*(_70231_def)).cast_ptr<_1ab133890_Enum>(&__jule_any_type67), _70241_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1bc52b1b6:;
			{
				return _1ab2316a2_evalTypeEnum(_self_, (*(_70231_def)).cast_ptr<_1ab13509a_TypeEnum>(&__jule_any_type68), _70241_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bc52b22c:;
			{
				return _1ab231dde_evalStruct(_self_, _1ab10849c_instance((*(_70231_def)).cast_ptr<_1ab10803a_Struct>(&__jule_any_type65)), _70241_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1bc52b293:;
			{
				jule::Ptr<_1ab11cdeb_Fn> _71317_f = (*(_70231_def)).cast_ptr<_1ab11cdeb_Fn>(&__jule_any_type64);;
				if ((!(*(_71317_f))._field_Ident.equal("init", 4))) {
					return _1ab23298e_evalFn(_self_, _71317_f, _70241_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bc52b31a:;
			{
				return _1ab232230_evalFnIns(_self_, (*(_70231_def)).cast_ptr<_1ab120d00_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1bc52b392:;
			{
				return _1ab233e9b_evalTypeAlias(_self_, (*(_70231_def)).cast_ptr<_1ab259c2a_TypeAlias>(&__jule_any_type66), _70241_ident);;
			}
		}
		_match_end_1bc52b084:;
	};
	_1ab22c46c_pushErr(_self_, _70241_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_70241_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab2346d8_evalIdent(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0dd1a7_IdentExpr> _72628_ident) {
	jule::Any _72713_def = _1ab2301d9_getDef(_self_, &((*(_72628_ident))._field_Ident), (*(_72628_ident))._field_Binded);;
	return _1ab234397_evalDef(_self_, &(_72713_def), (*(_72628_ident))._field_Token);;
}



inline jule::Ptr<_1ab22a228_Data> _1ab234a29_evalUnary(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0dd839_UnaryExpr> _73133_u) {
	_1ab24a644_unaryEval _73213_unary = static__1ab24aa84_new(_self_);;
	return _1ab24beb4_eval(&_73213_unary, _73133_u);;
}



inline jule::Ptr<_1ab22a228_Data> _1ab234d6a_evalVariadic(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0ddc13_VariadicExpr> _73636_v) {
	if (((*(_73636_v))._field_Expr == nullptr)) {
		_1ab22c46c_pushErr(_self_.ptr(), (*(_73636_v))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab25aa1c_TypeKind> _74213_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_74213_prefix;
	});;
	jule::Ptr<_1ab22a228_Data> _74613_d = _1ab24a17c_evalExpr(_self_, (*(_73636_v))._field_Expr);;
	if ((_74613_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab25cdd7_Variadicable((*(_74613_d))._field_Kind.ptr())))) {
		_1ab22c46c_pushErr(_self_.ptr(), (*(_73636_v))._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_74613_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab267ae5_Slc> _75613_slc = _1ab25e1c4_Slc((*(_74613_d))._field_Kind.ptr());;
	(*(_74613_d))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_BindIdent=(*((*(_75613_slc))._field_Elem))._field_BindIdent, ._field_Generic=(*((*(_75613_slc))._field_Elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*((*(_75613_slc))._field_Elem))._field_Kind});
	return _74613_d;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab2351ab_evalUnsafe(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0dcc01_UnsafeExpr> _76634_u) {
	jule::Bool _7679_unsafety = (*(_self_))._field_unsafety;;
	(*(_self_))._field_unsafety=true;
	jule::Ptr<_1ab22a228_Data> _76913_d = _1ab24a17c_evalExpr(_self_, (*(_76634_u))._field_Expr);;
	(*(_self_))._field_unsafety=_7679_unsafety;
	return _76913_d;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab2354ec_evalArr(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0e2ca0_SliceExpr> _77431_s) {
	jule::Ptr<_1ab269e16_Arr> _77613_pt = _1ab25de3d_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1ab269e16_Arr> _77813_arr = jule::new_ptr<_1ab269e16_Arr>(_1ab269e16_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_77613_pt))._field_Elem});;
	jule::Bool _78413_filled = false;;
	if (((*(_77431_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_77431_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_1bc53b76a:;
				{
					if (((*((*((*(_77431_s))._field_Exprs[1LL]))._field_Kind.cast_ptr<_1ab0ddc13_VariadicExpr>(&__jule_any_type75)))._field_Expr != nullptr)) {
						goto _match_end_1bc53b6c1;
					};
					if ((*(_77613_pt))._field_Auto) {
						_1ab22c46c_pushErr(_self_.ptr(), (*(_77431_s))._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_78413_filled=true;
					(*(_77431_s))._field_Exprs=(*(_77431_s))._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1bc53b6c1:;
		};
	};
	(*(_77813_arr))._field_N=static_cast<jule::I64>((*(_77431_s))._field_Exprs.len());
	if ((!((*(_77613_pt))._field_Auto))) {
		if (((*(_77813_arr))._field_N > (*(_77613_pt))._field_N)) {
			_1ab22c46c_pushErr(_self_.ptr(), (*(_77431_s))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*(_77813_arr))._field_N < (*(_77613_pt))._field_N)) {
			(*(_77813_arr))._field_N=(*(_77613_pt))._field_N;
		};
	};
	jule::Ptr<_1ab1155a8_ArrayExprModel> _81313_model = jule::new_ptr<_1ab1155a8_ArrayExprModel>(_1ab1155a8_ArrayExprModel{._field_Kind=_77813_arr, });;
	if (_78413_filled) {
		(*(_81313_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_81313_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_77431_s))._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1ab25aa1c_TypeKind> _82213_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_77813_arr))._field_Elem;
	{
		auto expr = &((*(_77431_s))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc54185d:;
		if (it != expr_end) {
			jule::Ptr<_1ab0db77c_Expr> _82421_elem = *it;
			{
				jule::Ptr<_1ab22a228_Data> _82517_d = _1ab24a17c_evalExpr(_self_, _82421_elem);;
				if ((_82517_d == nullptr)) {
					goto _iter_next_1bc54185d;
				};
				_1ab1b0cc4_checkAssignType((*(_self_))._field_s, false, &((*(_77813_arr))._field_Elem), &(_82517_d), (*(_77431_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81313_model))._field_Elems; __jule_push_dest.push((*(_82517_d))._field_Model); };
			}
			_iter_next_1bc54185d:;
			++it;
			goto _iter_begin_1bc54185d;
		}
		_iter_end_1bc54185d:;
	};
	(*(_self_))._field_prefix=_82213_prefix;
	if (_78413_filled) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81313_model))._field_Elems; __jule_push_dest.push(nullptr); };
	};
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_77813_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_81313_model, &__jule_any_type84), });;
}



inline jule::Ptr<_1ab22a228_Data> _1ab2359a3_evalExpSlc(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0e2ca0_SliceExpr> _84834_s, jule::Ptr<_1ab25aa1c_TypeKind> _84853_t, jule::Any _84871_first) {
	jule::Ptr<_1ab267ae5_Slc> _84913_slc = jule::new_ptr<_1ab267ae5_Slc>(_1ab267ae5_Slc{._field_Elem=_84853_t});;
	jule::I64 _85313_i = 0LL;;
	jule::Ptr<_1ab112561_SliceExprModel> _85413_model = jule::new_ptr<_1ab112561_SliceExprModel>(_1ab112561_SliceExprModel{._field_ElemKind=_84853_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84834_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84871_first != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85413_model))._field_Elems; __jule_push_dest.push(_84871_first); };
		_85313_i=1LL;
	};
	jule::Ptr<_1ab25aa1c_TypeKind> _86313_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_84913_slc))._field_Elem;
	{
		auto expr = (*(_84834_s))._field_Exprs.slice(_85313_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bc54917e:;
		if (it != expr_end) {
			jule::Ptr<_1ab0db77c_Expr> _86521_elem = *it;
			{
				jule::Ptr<_1ab22a228_Data> _86617_d = _1ab24a17c_evalExpr(_self_, _86521_elem);;
				if ((_86617_d == nullptr)) {
					goto _iter_next_1bc54917e;
				};
				_1ab1b0cc4_checkAssignType((*(_self_))._field_s, false, &((*(_84913_slc))._field_Elem), &(_86617_d), (*(_84834_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85413_model))._field_Elems; __jule_push_dest.push((*(_86617_d))._field_Model); };
			}
			_iter_next_1bc54917e:;
			++it;
			goto _iter_begin_1bc54917e;
		}
		_iter_end_1bc54917e:;
	};
	(*(_self_))._field_prefix=_86313_prefix;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_84913_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_85413_model, &__jule_any_type76), });;
}



inline jule::Ptr<_1ab22a228_Data> _1ab235ce4_evalSliceExpr(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0e2ca0_SliceExpr> _88437_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1ab25de3d_Arr((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_1bc54cb00:;
				{
					return _1ab2354ec_evalArr(_self_, _88437_s);;
				}
			}
			else if ((_1ab25e1c4_Slc((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_1bc54cb77:;
				{
					jule::Ptr<_1ab267ae5_Slc> _89021_pt = _1ab25e1c4_Slc((*(_self_))._field_prefix.ptr());;
					return _1ab2359a3_evalExpSlc(_self_, _88437_s, (*(_89021_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1bc54c9e0:;
		};
	};
	jule::Ptr<_1ab25aa1c_TypeKind> _89513_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	if (((*(_88437_s))._field_Exprs.len() == 0LL)) {
		_1ab22c46c_pushErr(_self_.ptr(), (*(_88437_s))._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab22a228_Data> _90313_firstElem = _1ab24a17c_evalExpr(_self_, (*(_88437_s))._field_Exprs[0LL]);;
	if ((_90313_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab22a228_Data> _90813_d = _1ab2359a3_evalExpSlc(_self_, _88437_s, (*(_90313_firstElem))._field_Kind, (*(_90313_firstElem))._field_Model);;
	(*(_self_))._field_prefix=_89513_prefix;
	return _90813_d;;
}



inline void _1ab236157_checkIntegerIndexingByData(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab22a228_Data>* _91450_d, jule::Ptr<_1ab0c1e7c_Token> _91460_token) {
	jule::Str _9159_err_key = _1ab256276_checkDataForIntegerIndexing(_91450_d);;
	{
		auto &_match_expr{ _9159_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1bc5533db:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_1bc553c16:;
			{
				_1ab22c46c_pushErr(_self_, _91460_token, _9159_err_key, jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_91450_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1bc5538e7:;
			{
				_1ab22c46c_pushErr(_self_, _91460_token, _9159_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc553892:;
	};
}



inline void _1ab236575_indexingPtr(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab22a228_Data>* _92635_d, jule::Ptr<_1ab22a228_Data>* _92650_index, jule::Ptr<_1ab0e3740_IndexingExpr>* _92665_i) {
	_1ab236157_checkIntegerIndexingByData(_self_, _92650_index, (*((*(_92665_i))))._field_Token);
	(*((*(_92635_d))))._field_Lvalue=true;
	jule::Ptr<_1ab26a8d9_Ptr> _93013_ptr = _1ab25d68a_Ptr((*((*(_92635_d))))._field_Kind.ptr());;
	{
		
		if (_1ab26b423_IsUnsafe(_93013_ptr.ptr())) {
			_case_begin_1bc556576:;
			{
				_1ab22c46c_pushErr(_self_, (*((*(_92665_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1ab22ce62_isUnsafe(_self_)))) {
			_case_begin_1bc5565ed:;
			{
				_1ab22c46c_pushErr(_self_, (*((*(_92665_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc556521:;
	};
	(*((*(_92635_d))))._field_Kind=(*(_93013_ptr))._field_Elem;
}



inline void _1ab236993_indexingArr(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab22a228_Data>* _94235_d, jule::Ptr<_1ab22a228_Data>* _94250_index, jule::Ptr<_1ab0e3740_IndexingExpr>* _94265_i) {
	jule::Ptr<_1ab269e16_Arr> _94313_arr = _1ab25de3d_Arr((*((*(_94235_d))))._field_Kind.ptr());;
	(*((*(_94235_d))))._field_Kind=(*(_94313_arr))._field_Elem;
	_1ab236157_checkIntegerIndexingByData(_self_, _94250_index, (*((*(_94265_i))))._field_Token);
	(*((*(_94235_d))))._field_Lvalue=true;
	if ((_1ab22aaec_IsConst((*(_94250_index)).ptr()) && (_1d8bd2c80_AsF64((*((*(_94250_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*(_94313_arr))._field_N)))) {
		_1ab22c46c_pushErr(_self_, (*((*(_94265_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1ab236db1_indexingSlc(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab22a228_Data>* _95235_d, jule::Ptr<_1ab22a228_Data>* _95250_index, jule::Ptr<_1ab0e3740_IndexingExpr>* _95265_i) {
	jule::Ptr<_1ab267ae5_Slc> _95313_slc = _1ab25e1c4_Slc((*((*(_95235_d))))._field_Kind.ptr());;
	(*((*(_95235_d))))._field_Kind=(*(_95313_slc))._field_Elem;
	_1ab236157_checkIntegerIndexingByData(_self_, _95250_index, (*((*(_95265_i))))._field_Token);
	(*((*(_95235_d))))._field_Lvalue=true;
	if ((!(_1ab22aaec_IsConst((*(_95250_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95235_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bc55d627:;
			{
				jule::Ptr<_1ab112561_SliceExprModel> _96417_m = (*((*(_95235_d))))._field_Model.cast_ptr<_1ab112561_SliceExprModel>(&__jule_any_type76);;
				jule::F64 _96513_indx = _1d8bd2c80_AsF64((*((*(_95250_index))))._field_Constant.ptr());;
				if ((_96513_indx >= static_cast<jule::F64>((*(_96417_m))._field_Elems.len()))) {
					_1ab22c46c_pushErr(_self_, (*((*(_95265_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_95235_d))))._field_Model=(*(_96417_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_96513_indx))];
					(*((*(_95235_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1bc55d5c2:;
	};
}



inline void _1ab2372ce_indexingMap(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab22a228_Data>* _97535_d, jule::Ptr<_1ab22a228_Data>* _97550_index, jule::Ptr<_1ab0e3740_IndexingExpr>* _97569_i) {
	(*((*(_97535_d))))._field_Lvalue=true;
	if (((*(_97550_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab269289_Map> _98013_m = _1ab25ec0d_Map((*((*(_97535_d))))._field_Kind.ptr());;
	_1ab213b90_assignTypeChecker _98113_atc = _1ab213b90_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_98013_m))._field_Key, ._field_d=(*(_97550_index)), ._field_errorToken=(*((*(_97569_i))))._field_Token};;
	_1ab214e05_check(&_98113_atc);
	(*((*(_97535_d))))._field_Kind=(*(_98013_m))._field_Val;
}



inline void _1ab2376ec_indexingStr(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab22a228_Data>* _99135_d, jule::Ptr<_1ab22a228_Data>* _99150_index, jule::Ptr<_1ab0e3740_IndexingExpr>* _99165_i) {
	(*((*(_99135_d))))._field_Kind=_1ab345750_primU8;
	(*((*(_99135_d))))._field_Mutable=false;
	(*((*(_99135_d))))._field_Lvalue=true;
	if (((*(_99150_index)) == nullptr)) {
		return;;
	};
	_1ab236157_checkIntegerIndexingByData(_self_, _99150_index, (*((*(_99165_i))))._field_Token);
	if ((!(_1ab22aaec_IsConst((*(_99150_index)).ptr())))) {
		(*((*(_99135_d))))._field_Constant=nullptr;
		return;;
	};
	if (_1ab22aaec_IsConst((*(_99135_d)).ptr())) {
		jule::Ptr<_1ab0c1e7c_Token> _100813_errorToken = (*((*(_99165_i))))._field_Token;;
		jule::I64 _100913_j = _1d8bd2763_AsI64((*((*(_99150_index))))._field_Constant.ptr());;
		jule::Str _101013_s = _1d8bd2246_ReadStr((*((*(_99135_d))))._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_100913_j) >= _101013_s.len())) {
			_1ab22c46c_pushErr(_self_, _100813_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1d8bd32e1_SetU64((*((*(_99135_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101013_s[_100913_j])));
		};
	};
}



inline void _1ab237b1a_toIndexing(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab22a228_Data>* _101934_d, jule::Ptr<_1ab22a228_Data>* _101949_index, jule::Ptr<_1ab0e3740_IndexingExpr>* _101968_i) {
	{
		
		if ((_1ab25d68a_Ptr((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc568d4c:;
			{
				_1ab236575_indexingPtr(_self_, _101934_d, _101949_index, _101968_i);
				return;;
			}
		}
		else if ((_1ab25de3d_Arr((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc568dc4:;
			{
				_1ab236993_indexingArr(_self_, _101934_d, _101949_index, _101968_i);
				return;;
			}
		}
		else if ((_1ab25e1c4_Slc((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc568e4b:;
			{
				_1ab236db1_indexingSlc(_self_, _101934_d, _101949_index, _101968_i);
				return;;
			}
		}
		else if ((_1ab25ec0d_Map((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc568ec3:;
			{
				_1ab2372ce_indexingMap(_self_, _101934_d, _101949_index, _101968_i);
				return;;
			}
		}
		else if ((_1ab25d16d_Prim((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc56904a:;
			{
				jule::Ptr<_1ab2635e6_Prim> _103413_prim = _1ab25d16d_Prim((*((*(_101934_d))))._field_Kind.ptr());;
				{
					
					if (_1ab266a7d_IsStr(_103413_prim.ptr())) {
						_case_begin_1bc56d1e7:;
						{
							_1ab2376ec_indexingStr(_self_, _101934_d, _101949_index, _101968_i);
							return;;
						}
					}
					_match_end_1bc56d15e:;
				};
			}
		}
		_match_end_1bc568c09:;
	};
	_1ab22c46c_pushErr(_self_, (*((*(_101968_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_101934_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1ab2380c1_pushGenericsFromExprSubIdent(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0de890_SubIdentExpr>* _104453_sexpr, jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>>* _104514_generics, jule::Ptr<_1ab0db77c_Expr>* _104542_expr) {
	jule::Ptr<_1ab0d7d50_SubIdentTypeDecl> _104613_t = jule::new_ptr<_1ab0d7d50_SubIdentTypeDecl>();;
	if ((!(_1ab257167_pushSubIdentFromExpr(jule::Any((*(_104453_sexpr)), &__jule_any_type85), &(_104613_t))))) {
		_1ab22c46c_pushErr(_self_.ptr(), (*((*(_104542_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> &__jule_push_dest = (*(_104514_generics)); __jule_push_dest.push(jule::new_ptr<_1ab0d7448_TypeDecl>(_1ab0d7448_TypeDecl{._field_Kind=jule::Any(_104613_t, &__jule_any_type86)})); };
	return true;;
}



inline jule::Bool _1ab2384bc_pushGenericsFromData(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>>* _105545_generics, jule::Ptr<_1ab0db77c_Expr>* _105573_expr) {
	{
		auto &_match_expr{ (*((*(_105573_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1bc5715d5:;
			{
				jule::Ptr<_1ab0dd839_UnaryExpr> _105817_u = (*((*(_105573_expr))))._field_Kind.cast_ptr<_1ab0dd839_UnaryExpr>(&__jule_any_type87);;
				{
					auto &_match_expr{ (*((*(_105817_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1bc5731ca:;
						{
							jule::Ptr<_1ab0d8e72_PtrTypeDecl> _106121_kind = jule::new_ptr<_1ab0d8e72_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> _106221__generics = jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>>::alloc(0LL, 1LL);;
							_1ab2384bc_pushGenericsFromData(_self_, &(_106221__generics), &((*(_105817_u))._field_Expr));
							(*(_106121_kind))._field_Elem=_106221__generics[0LL];
							{ jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push(jule::new_ptr<_1ab0d7448_TypeDecl>(_1ab0d7448_TypeDecl{._field_Token=(*((*(_105573_expr))))._field_Token, ._field_Kind=jule::Any(_106121_kind, &__jule_any_type71)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1bc574341:;
						{
							jule::Ptr<_1ab0d84e3_SptrTypeDecl> _107021_kind = jule::new_ptr<_1ab0d84e3_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> _107121__generics = jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>>::alloc(0LL, 1LL);;
							_1ab2384bc_pushGenericsFromData(_self_, &(_107121__generics), &((*(_105817_u))._field_Expr));
							(*(_107021_kind))._field_Elem=_107121__generics[0LL];
							{ jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push(jule::new_ptr<_1ab0d7448_TypeDecl>(_1ab0d7448_TypeDecl{._field_Token=(*((*(_105573_expr))))._field_Token, ._field_Kind=jule::Any(_107021_kind, &__jule_any_type72)})); };
						}
					}
					else {
						_case_begin_1bc573719:;
						{
							_1ab22c46c_pushErr(_self_.ptr(), (*(_105817_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1bc5736b4:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1bc57255e:;
			{
				{ jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push((*((*(_105573_expr))))._field_Kind.cast_ptr<_1ab0d7448_TypeDecl>(&__jule_any_type88)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1bc5725c5:;
			{
				jule::Ptr<_1ab0de890_SubIdentExpr> _108517_sexpr = (*((*(_105573_expr))))._field_Kind.cast_ptr<_1ab0de890_SubIdentExpr>(&__jule_any_type85);;
				return _1ab2380c1_pushGenericsFromExprSubIdent(_self_, &(_108517_sexpr), _105545_generics, _105573_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bc57263b:;
			{
				jule::Ptr<_1ab0dd1a7_IdentExpr> _108817_ident = (*((*(_105573_expr))))._field_Kind.cast_ptr<_1ab0dd1a7_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push(jule::new_ptr<_1ab0d7448_TypeDecl>(_1ab0d7448_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1ab0d7a53_IdentTypeDecl>(_1ab0d7a53_IdentTypeDecl{._field_Token=(*(_108817_ident))._field_Token, ._field_Ident=(*(_108817_ident))._field_Ident, ._field_Binded=(*(_108817_ident))._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1bc57199d:;
			{
				{
					auto expr = &((*((*((*(_105573_expr))))._field_Kind.cast_ptr<_1ab0dc44d_TupleExpr>(&__jule_any_type80)))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc57ad4d:;
					if (it != expr_end) {
						jule::Ptr<_1ab0db77c_Expr> _109725_texpr = *it;
						{
							if ((!(_1ab2384bc_pushGenericsFromData(_self_, _105545_generics, &(_109725_texpr))))) {
								return false;;
							};
						}
						_iter_next_1bc57ad4d:;
						++it;
						goto _iter_begin_1bc57ad4d;
					}
					_iter_end_1bc57ad4d:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bc571a14:;
			{
				jule::Ptr<_1ab0de4b6_NsSelectionExpr> _110317_ns = (*((*(_105573_expr))))._field_Kind.cast_ptr<_1ab0de4b6_NsSelectionExpr>(&__jule_any_type89);;
				jule::Ptr<_1ab0d7a53_IdentTypeDecl> _110417_decl = jule::new_ptr<_1ab0d7a53_IdentTypeDecl>(_1ab0d7a53_IdentTypeDecl{._field_Token=(*(_110317_ns))._field_Ident, ._field_Ident=(*((*(_110317_ns))._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push(jule::new_ptr<_1ab0d7448_TypeDecl>(_1ab0d7448_TypeDecl{._field_Token=(*(_110417_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1ab0d81e6_NamespaceTypeDecl>(_1ab0d81e6_NamespaceTypeDecl{._field_Idents=(*(_110317_ns))._field_Ns, ._field_Kind=jule::new_ptr<_1ab0d7448_TypeDecl>(_1ab0d7448_TypeDecl{._field_Token=(*(_110417_decl))._field_Token, ._field_Kind=jule::Any(_110417_decl, &__jule_any_type20)})}), &__jule_any_type90)})); };
			}
		}
		else {
			_case_begin_1bc571937:;
			{
				_1ab22c46c_pushErr(_self_.ptr(), (*((*(_105573_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1bc5718d2:;
	};
	return true;;
}



inline void _1ab238830_evalIdentDeclFromIndexing(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab22a228_Data>* _112550_d, jule::Ptr<_1ab0e3740_IndexingExpr>* _112565_i) {
	jule::Ptr<_1ab10acb8_StructIns> _112613_s = _1ab25e6e1_Struct((*((*(_112550_d))))._field_Kind.ptr());;
	if ((_112613_s == nullptr)) {
		_1ab22c46c_pushErr(_self_.ptr(), (*((*((*(_112565_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_112550_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		(*(_112550_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ab0d7a53_IdentTypeDecl> _113317_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_112565_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bc58168e:;
			{
				jule::Ptr<_1ab0dd1a7_IdentExpr> _113617_expr = (*((*((*(_112565_i))))._field_Expr))._field_Kind.cast_ptr<_1ab0dd1a7_IdentExpr>(&__jule_any_type79);;
				_113317_decl=jule::new_ptr<_1ab0d7a53_IdentTypeDecl>(_1ab0d7a53_IdentTypeDecl{._field_Token=(*(_113617_expr))._field_Token, ._field_Ident=(*(_113617_expr))._field_Ident, ._field_Binded=(*(_113617_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bc582915:;
			{
				jule::Ptr<_1ab0de4b6_NsSelectionExpr> _114317_expr = (*((*((*(_112565_i))))._field_Expr))._field_Kind.cast_ptr<_1ab0de4b6_NsSelectionExpr>(&__jule_any_type89);;
				_113317_decl=jule::new_ptr<_1ab0d7a53_IdentTypeDecl>(_1ab0d7a53_IdentTypeDecl{._field_Token=(*(_114317_expr))._field_Ident, ._field_Ident=(*((*(_114317_expr))._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_1bc581b12:;
			{
				_1ab22c46c_pushErr(_self_.ptr(), (*((*(_112565_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112550_d))=nullptr;
				return;;
			}
		}
		_match_end_1bc581aac:;
	};
	if ((!(_1ab2384bc_pushGenericsFromData(_self_, &((*(_113317_decl))._field_Generics), &((*((*(_112565_i))))._field_Index))))) {
		(*(_112550_d))=nullptr;
		return;;
	};
	_112613_s=({ auto _wrap_copy = _1ab24032b_typeChecker(_self_.ptr()); _1ab271824_fromStruct(&_wrap_copy, &(_113317_decl), &((*(_112613_s))._field_Decl)); });
	if ((_112613_s == nullptr)) {
		(*(_112550_d))=nullptr;
		return;;
	};
	(*((*((*(_112550_d))))._field_Kind))._field_Kind=jule::Trait<_1ab25a566_Kind>(_112613_s, 0);
}



inline jule::Bool _1ab238cd6_checkGenericFn(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab120d00_FnIns>* _116839_f, jule::Ptr<_1ab0c1e7c_Token>* _116855_et, jule::Any* _116872_model) {
	jule::Bool _11699_ok = _1ab1b33c0_reloadFnInsTypes((*(_self_))._field_s, (*(_116839_f)));;
	(*((*(_116839_f))))._field_reloaded=true;
	if ((!(_11699_ok))) {
		return false;;
	};
	jule::Ptr<_1ab120d00_FnIns> _117413_existInstance = _1ab11e969_appendInstance((*((*(_116839_f))))._field_Decl.ptr(), _116839_f);;
	if ((!(_1ab1b2424_checkConstraintsFn((*(_self_))._field_s, _116839_f, _116855_et, _117413_existInstance)))) {
		return false;;
	};
	if ((_117413_existInstance != nullptr)) {
		_1ab256ce3_updateModelToGenericIns(_116872_model, &(_117413_existInstance));
		_1bc58a17b_updateRefer(_1ab230470_getOwnerRefers(_self_.ptr()), _116839_f, &(_117413_existInstance));
		(*(_116839_f))=_117413_existInstance;
	} else {
		_1ab1c2720_checkFnInsCaller((*(_self_))._field_s, _116839_f, (*(_116855_et)));
	};
	return true;;
}



inline void _1ab239149_evalFnGenericFromIndexing(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab22a228_Data>* _119750_d, jule::Ptr<_1ab0e3740_IndexingExpr>* _119765_i) {
	jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> _119813_generics = jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1ab2384bc_pushGenericsFromData(_self_, &(_119813_generics), &((*((*(_119765_i))))._field_Index))))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ab120d00_FnIns> _120413_f = _1ab25e45a_Fn((*((*(_119750_d))))._field_Kind.ptr());;
	jule::I64 _120513_genericsLen = 0LL;;
	if (((*(_120413_f))._field_Decl != nullptr)) {
		_120513_genericsLen=static_cast<jule::I64>((*((*(_120413_f))._field_Decl))._field_Generics.len());
	};
	if ((!(_1ab1a97e5_checkGenericQuantity((*(_self_))._field_s.ptr(), _120513_genericsLen, static_cast<jule::I64>(_119813_generics.len()), (*((*((*(_119765_i))))._field_Expr))._field_Token)))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	(*(_120413_f))._field_Generics=jule::Slice<jule::Ptr<_1ab259136_InsGeneric>>::alloc(0LL, (*((*(_120413_f))._field_Decl))._field_Generics.len());
	{
		auto expr = &(_119813_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc591946:;
		if (it != expr_end) {
			jule::Ptr<_1ab0d7448_TypeDecl> _121621_g = *it;
			{
				jule::Ptr<_1ab22a228_Data> _121717_k = _1ab24066c_evalType(_self_.ptr(), _121621_g);;
				if ((_121717_k == nullptr)) {
					(*(_119750_d))=nullptr;
					return;;
				};
				{ jule::Slice<jule::Ptr<_1ab259136_InsGeneric>> &__jule_push_dest = (*(_120413_f))._field_Generics; __jule_push_dest.push(jule::new_ptr<_1ab259136_InsGeneric>(_1ab259136_InsGeneric{._field_Kind=(*(_121717_k))._field_Kind, })); };
			}
			_iter_next_1bc591946:;
			++it;
			goto _iter_begin_1bc591946;
		}
		_iter_end_1bc591946:;
	};
	if (_1ab122285_IsBuiltin(_120413_f.ptr())) {
		return;;
	};
	if (_1ab238cd6_checkGenericFn(_self_, &(_120413_f), &((*((*((*(_119765_i))))._field_Expr))._field_Token), &((*((*(_119750_d))))._field_Model))) {
		(*((*((*(_119750_d))))._field_Kind))._field_Kind=jule::Trait<_1ab25a566_Kind>(_120413_f, 1);
	} else {
		(*(_119750_d))=nullptr;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab23948a_evalIndexing(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0e3740_IndexingExpr> _123636_i) {
	jule::Ptr<_1ab25aa1c_TypeKind> _123713_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_123713_prefix;
	});;
	jule::Ptr<_1ab22a228_Data> _124113_d = _1ab249368_evalExprKind(_self_, (*((*(_123636_i))._field_Expr))._field_Kind);;
	if ((_124113_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_124113_d))._field_Decl) {
		_1ab238830_evalIdentDeclFromIndexing(_self_, &(_124113_d), &(_123636_i));
		return _124113_d;;
	};
	if ((_1ab25e45a_Fn((*(_124113_d))._field_Kind.ptr()) != nullptr)) {
		_1ab239149_evalFnGenericFromIndexing(_self_, &(_124113_d), &(_123636_i));
		return _124113_d;;
	};
	_1ab22a228_Data _125713_oldData = (*(_124113_d));;
	jule::Ptr<_1ab22a228_Data> _125913_index = _1ab24a17c_evalExpr(_self_, (*(_123636_i))._field_Index);;
	if ((_125913_index == nullptr)) {
		return nullptr;;
	};
	(*(_124113_d))._field_Decl=false;
	_1ab237b1a_toIndexing(_self_.ptr(), &(_124113_d), &(_125913_index), &(_123636_i));
	if (_1ab22aaec_IsConst(_124113_d.ptr())) {
		(*(_124113_d))._field_Decl=false;
		(*(_124113_d))._field_Model=jule::Any((*(_124113_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_124113_d))._field_Decl) {
		(*(_124113_d))._field_Decl=false;
	} else {
		(*(_124113_d))._field_Model=jule::Any(jule::new_ptr<_1ab112a17_IndexingExprModel>(_1ab112a17_IndexingExprModel{._field_Token=(*(_123636_i))._field_Token, ._field_Expr=jule::new_ptr<_1ab22a228_Data>(_125713_oldData), ._field_Index=_125913_index}), &__jule_any_type45);
	};
	return _124113_d;;
}



inline __jule_tuple_x_1ab22a228_Data__jule_tuple_x_1ab22a228_Data _1ab2397cb_evalSlicingExprs(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0e3da0_SlicingExpr>* _129041_s) {
	__jule_tuple_x_1ab22a228_Data__jule_tuple_x_1ab22a228_Data __jule_func_result;
	jule::Ptr<_1ab25aa1c_TypeKind> _129113_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_129113_prefix;
	});;
	jule::Ptr<_1ab22a228_Data> _129517_l = nullptr;;
	jule::Ptr<_1ab22a228_Data> _129617_r = nullptr;;
	if (((*((*(_129041_s))))._field_Start != nullptr)) {
		_129517_l=_1ab24a17c_evalExpr(_self_, (*((*(_129041_s))))._field_Start);
		if ((_129517_l != nullptr)) {
			_1ab236157_checkIntegerIndexingByData(_self_.ptr(), &(_129517_l), (*((*(_129041_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_129517_l=jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab344870_primInt, ._field_Constant=static__1d8bd050d_NewI64(0LL)});
		(*((*(_129517_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*(_129517_l))._field_Model=jule::Any((*(_129517_l))._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_129041_s))))._field_To != nullptr)) {
		_129617_r=_1ab24a17c_evalExpr(_self_, (*((*(_129041_s))))._field_To);
		if ((_129617_r != nullptr)) {
			_1ab236157_checkIntegerIndexingByData(_self_.ptr(), &(_129617_r), (*((*(_129041_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _129517_l;
	__jule_func_result.__jule_result_arg1 = _129617_r;
	return __jule_func_result;;
}



inline void _1ab239a84_slicingArr(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab22a228_Data>* _132630_d) {
	jule::Ptr<_1ab25aa1c_TypeKind> _132713_elemType = (*(_1ab25de3d_Arr((*((*(_132630_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_132630_d))))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab267ae5_Slc>(_1ab267ae5_Slc{._field_Elem=_132713_elemType}), 22)});
	(*((*(_132630_d))))._field_Lvalue=false;
	(*((*(_132630_d))))._field_Mutable=((*((*(_132630_d))))._field_Mutable || (!(_1ab25c39d_Mutable(_132713_elemType.ptr()))));
}



inline void _1ab239ea2_slicingStr(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab22a228_Data>* _134130_d, jule::Ptr<_1ab22a228_Data>* _134141_l, jule::Ptr<_1ab22a228_Data>* _134152_r) {
	(*((*(_134130_d))))._field_Lvalue=false;
	(*((*(_134130_d))))._field_Mutable=true;
	if ((!(_1ab22aaec_IsConst((*(_134130_d)).ptr())))) {
		return;;
	};
	if ((((*(_134141_l)) == nullptr) || ((*(_134152_r)) == nullptr))) {
		(*((*(_134130_d))))._field_Constant=nullptr;
		return;;
	};
	if ((_1ab22aaec_IsConst((*(_134141_l)).ptr()) && _1ab22aaec_IsConst((*(_134152_r)).ptr()))) {
		jule::I64 _135413_left = _1d8bd2763_AsI64((*((*(_134141_l))))._field_Constant.ptr());;
		if ((_135413_left < 0LL)) {
			return;;
		};
		jule::Str _135913_s = _1d8bd2246_ReadStr((*((*(_134130_d))))._field_Constant.ptr());;
		jule::I64 _136017_right = static_cast<jule::I64>(0LL);;
		if (((*(_134152_r)) == nullptr)) {
			_136017_right=static_cast<jule::I64>(static_cast<jule::I64>(_135913_s.len()));
		} else {
			_136017_right=static_cast<jule::I64>(_1d8bd2763_AsI64((*((*(_134152_r))))._field_Constant.ptr()));
		};
		if ((_135413_left > _136017_right)) {
			return;;
		};
		_1d8bd3852_SetStr((*((*(_134130_d))))._field_Constant.ptr(), _135913_s.slice(_135413_left, _136017_right));
		(*((*(_134130_d))))._field_Decl=true;
	} else {
		(*((*(_134130_d))))._field_Constant=nullptr;
	};
}



inline void _1ab23a47a_checkSlicing(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab22a228_Data>* _137736_d, jule::Ptr<_1ab22a228_Data>* _137747_l, jule::Ptr<_1ab22a228_Data>* _137758_r, jule::Ptr<_1ab0e3da0_SlicingExpr>* _137769_s) {
	{
		
		if ((_1ab25de3d_Arr((*((*(_137736_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc5b0899:;
			{
				_1ab239a84_slicingArr(_self_, _137736_d);
				return;;
			}
		}
		else if ((_1ab25e1c4_Slc((*((*(_137736_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc5b0921:;
			{
				return;;
			}
		}
		else if ((_1ab25d16d_Prim((*((*(_137736_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc5b0998:;
			{
				jule::Ptr<_1ab2635e6_Prim> _138513_prim = _1ab25d16d_Prim((*((*(_137736_d))))._field_Kind.ptr());;
				{
					
					if (_1ab266a7d_IsStr(_138513_prim.ptr())) {
						_case_begin_1bc5b3094:;
						{
							_1ab239ea2_slicingStr(_self_, _137736_d, _137747_l, _137758_r);
							return;;
						}
					}
					_match_end_1bc5b300b:;
				};
			}
		}
		_match_end_1bc5b0778:;
	};
	_1ab22c46c_pushErr(_self_, (*((*(_137769_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_137736_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_1ab22a228_Data> _1ab23a7bb_evalSlicing(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0e3da0_SlicingExpr> _139635_s) {
	jule::Ptr<_1ab22a228_Data> _139713_d = _1ab24a17c_evalExpr(_self_, (*(_139635_s))._field_Expr);;
	if ((_139713_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab22a228_Data> _140213_l;;
	jule::Ptr<_1ab22a228_Data> _140220_r;;
	({
		__jule_tuple_x_1ab22a228_Data__jule_tuple_x_1ab22a228_Data __jule_assign_result = _1ab2397cb_evalSlicingExprs(_self_, &(_139635_s));
		_140213_l = __jule_assign_result.__jule_result_arg0;
		_140220_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_140213_l == nullptr)) {
		return _139713_d;;
	};
	(*(_139713_d))._field_Decl=false;
	_1ab23a47a_checkSlicing(_self_.ptr(), &(_139713_d), &(_140213_l), &(_140220_r), &(_139635_s));
	if (_1ab22aaec_IsConst(_139713_d.ptr())) {
		(*(_139713_d))._field_Decl=false;
		(*(_139713_d))._field_Model=jule::Any((*(_139713_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_139713_d))._field_Decl) {
		(*(_139713_d))._field_Decl=false;
	} else {
		jule::Ptr<_1ab113d04_SlicingExprModel> _142017_model = jule::new_ptr<_1ab113d04_SlicingExprModel>(_1ab113d04_SlicingExprModel{._field_Token=(*(_139635_s))._field_Token, ._field_Expr=(*(_139713_d))._field_Model, ._field_Left=(*(_140213_l))._field_Model, });;
		if ((_140220_r != nullptr)) {
			(*(_142017_model))._field_Right=(*(_140220_r))._field_Model;
		};
		(*(_139713_d))._field_Model=jule::Any(_142017_model, &__jule_any_type91);
	};
	return _139713_d;;
}



inline void _1ab23abd9_castPtr(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab25aa1c_TypeKind> _143330_t, jule::Ptr<_1ab22a228_Data> _143348_d, jule::Ptr<_1ab0c1e7c_Token> _143358_errorToken) {
	(*(_143348_d))._field_Constant=nullptr;
	jule::Ptr<_1ab267122_Sptr> _14359_sptr = _1ab25d404_Sptr((*(_143348_d))._field_Kind.ptr());;
	if ((_14359_sptr != nullptr)) {
		if ((!(_1ab25b226_Equal((*(_1ab25d68a_Ptr(_143330_t.ptr())))._field_Elem, (*(_14359_sptr))._field_Elem)))) {
			_1ab22c46c_pushErr(_self_, _143358_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_143348_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str(_143330_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_1ab22ce62_isUnsafe(_self_)))) {
		_1ab22c46c_pushErr(_self_, _143358_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab2635e6_Prim> _14489_prim = _1ab25d16d_Prim((*(_143348_d))._field_Kind.ptr());;
	if (((_1ab25d68a_Ptr((*(_143348_d))._field_Kind.ptr()) == nullptr) && ((_14489_prim == nullptr) || (!(_1d8bce3b9_IsInt(_1ab263937_Str(_14489_prim.ptr()))))))) {
		_1ab22c46c_pushErr(_self_, _143358_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_143348_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str(_143330_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _1ab23b107_castStruct(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab25aa1c_TypeKind> _145433_t, jule::Ptr<_1ab22a228_Data> _145451_d, jule::Ptr<_1ab0c1e7c_Token> _145461_errorToken) {
	(*(_145451_d))._field_Constant=nullptr;
	jule::Ptr<_1ab131195_Trait> _145613_tr = _1ab25e977_Trait((*(_145451_d))._field_Kind.ptr());;
	if ((_145613_tr == nullptr)) {
		_1ab22c46c_pushErr(_self_, _145461_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_145451_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str(_145433_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1ab10acb8_StructIns> _146213_s = _1ab25e6e1_Struct(_145433_t.ptr());;
	_1bc5c28bc_pushReference(_self_, &(_146213_s));
	if ((!(_1ab109679_IsImplements((*(_146213_s))._field_Decl.ptr(), _145613_tr)))) {
		_1ab22c46c_pushErr(_self_, _145461_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_145451_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str(_145433_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _1ab23b525_castRef(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab25aa1c_TypeKind> _147030_t, jule::Ptr<_1ab22a228_Data> _147048_d, jule::Ptr<_1ab0c1e7c_Token> _147058_errorToken) {
	(*(_147048_d))._field_Constant=nullptr;
	jule::Ptr<_1ab267122_Sptr> _147213_sptr = _1ab25d404_Sptr(_147030_t.ptr());;
	jule::Ptr<_1ab26a8d9_Ptr> _147413_ptr = _1ab25d68a_Ptr((*(_147048_d))._field_Kind.ptr());;
	if (((_147413_ptr != nullptr) && _1ab25b226_Equal((*(_147213_sptr))._field_Elem, (*(_147413_ptr))._field_Elem))) {
		if ((!(_1ab22ce62_isUnsafe(_self_)))) {
			_1ab22c46c_pushErr(_self_, _147058_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1ab25e6e1_Struct((*(_147213_sptr))._field_Elem.ptr()) != nullptr)) {
		_1ab23b107_castStruct(_self_, (*(_147213_sptr))._field_Elem, _147048_d, _147058_errorToken);
		return;;
	};
	_1ab22c46c_pushErr(_self_, _147058_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_147048_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str(_147030_t.ptr()), &__jule_any_type4)}));
}



inline void _1ab23b943_castSlc(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab25aa1c_TypeKind> _149230_t, jule::Ptr<_1ab22a228_Data> _149248_d, jule::Ptr<_1ab0c1e7c_Token> _149258_errorToken) {
	jule::Ptr<_1d8bd00bd_Const> _14939_c = (*(_149248_d))._field_Constant;;
	(*(_149248_d))._field_Constant=nullptr;
	if ((_1ab25d921_Enum((*(_149248_d))._field_Kind.ptr()) != nullptr)) {
		if (((_1ab25d16d_Prim((*((*(_1ab25d921_Enum((*(_149248_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1ab266a7d_IsStr(_1ab25d16d_Prim((*((*(_1ab25d921_Enum((*(_149248_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()).ptr()))))) {
			_1ab22c46c_pushErr(_self_, _149258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_149248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str(_149230_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_1ab25d16d_Prim((*(_149248_d))._field_Kind.ptr()) == nullptr) || (!(_1ab266a7d_IsStr(_1ab25d16d_Prim((*(_149248_d))._field_Kind.ptr()).ptr()))))) {
		_1ab22c46c_pushErr(_self_, _149258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_149248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str(_149230_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_149230_t=(*(_1ab25e1c4_Slc(_149230_t.ptr())))._field_Elem;
	jule::Ptr<_1ab2635e6_Prim> _15079_prim = _1ab25d16d_Prim(_149230_t.ptr());;
	if (((_15079_prim == nullptr) || ((!(_1ab264edd_IsU8(_15079_prim.ptr()))) && (!(_1ab2649c1_IsI32(_15079_prim.ptr())))))) {
		_1ab22c46c_pushErr(_self_, _149258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_149248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str(_149230_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	if ((_14939_c != nullptr)) {
		{
			
			if (_1ab264edd_IsU8(_15079_prim.ptr())) {
				_case_begin_1bc5d51c6:;
				{
					jule::Str _151717_s = _1d8bd2246_ReadStr(_14939_c.ptr());;
					jule::Ptr<_1ab112561_SliceExprModel> _151821_model = jule::new_ptr<_1ab112561_SliceExprModel>(_1ab112561_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _151717_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_151717_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bc5d642a:;
						if (it != expr_end) {
							jule::U8 *_152224_b = it;
							{
								jule::Ptr<_1d8bd00bd_Const> _152325_bc = static__1d8bd07c7_NewU64(static_cast<jule::U64>(static_cast<jule::U64>((*(_152224_b)))));;
								(*(_152325_bc))._field_Kind=(*(_15079_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_151821_model))._field_Elems; __jule_push_dest.push(jule::Any(_152325_bc, &__jule_any_type19)); };
							}
							_iter_next_1bc5d642a:;
							++it;
							goto _iter_begin_1bc5d642a;
						}
						_iter_end_1bc5d642a:;
					};
					(*(_149248_d))._field_Model=jule::Any(_151821_model, &__jule_any_type76);
					(*(_149248_d))._field_Decl=true;
				}
			}
			else if (_1ab2649c1_IsI32(_15079_prim.ptr())) {
				_case_begin_1bc5d524d:;
				{
					jule::Slice<jule::I32> _153017_runes = static_cast<jule::Slice<jule::I32>>(_1d8bd2246_ReadStr(_14939_c.ptr()));;
					jule::Ptr<_1ab112561_SliceExprModel> _153121_model = jule::new_ptr<_1ab112561_SliceExprModel>(_1ab112561_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _153017_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_153017_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bc5d931d:;
						if (it != expr_end) {
							jule::I32 *_153524_r = it;
							{
								jule::Ptr<_1d8bd00bd_Const> _153625_rc = static__1d8bd050d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_153524_r)))));;
								(*(_153625_rc))._field_Kind=(*(_15079_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_153121_model))._field_Elems; __jule_push_dest.push(jule::Any(_153625_rc, &__jule_any_type19)); };
							}
							_iter_next_1bc5d931d:;
							++it;
							goto _iter_begin_1bc5d931d;
						}
						_iter_end_1bc5d931d:;
					};
					(*(_149248_d))._field_Model=jule::Any(_153121_model, &__jule_any_type76);
					(*(_149248_d))._field_Decl=true;
				}
			}
			_match_end_1bc5d50b6:;
		};
	};
}



inline void _1ab23bca6_castStr(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab22a228_Data> _154630_d, jule::Ptr<_1ab0c1e7c_Token> _154640_errorToken) {
	if ((_1ab25d921_Enum((*(_154630_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ab133890_Enum> _154817_e = _1ab25d921_Enum((*(_154630_d))._field_Kind.ptr());;
		if (((_1ab25d16d_Prim((*((*(_154817_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1ab266a7d_IsStr(_1ab25d16d_Prim((*((*(_154817_e))._field_Kind))._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1d8bd00bd_Const> _15549_c = (*(_154630_d))._field_Constant;;
	(*(_154630_d))._field_Constant=nullptr;
	if ((_1ab25d16d_Prim((*(_154630_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ab2635e6_Prim> _155713_prim = _1ab25d16d_Prim((*(_154630_d))._field_Kind.ptr());;
		if (((!(_1ab264edd_IsU8(_155713_prim.ptr()))) && (!(_1ab2649c1_IsI32(_155713_prim.ptr()))))) {
			_1ab22c46c_pushErr(_self_, _154640_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ab25add5_Str((*(_154630_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
		if ((_15549_c != nullptr)) {
			{
				
				if (_1ab264edd_IsU8(_155713_prim.ptr())) {
					_case_begin_1bc5e1545:;
					{
						(*(_154630_d))._field_Constant=static__1d8bd0d5a_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1d8bd29e9_AsU64(_15549_c.ptr()))));
						(*(_154630_d))._field_Model=jule::Any((*(_154630_d))._field_Constant, &__jule_any_type19);
						(*(_154630_d))._field_Decl=true;
					}
				}
				else if (_1ab2649c1_IsI32(_155713_prim.ptr())) {
					_case_begin_1bc5e15bc:;
					{
						(*(_154630_d))._field_Constant=static__1d8bd0d5a_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1d8bd2763_AsI64(_15549_c.ptr()))));
						(*(_154630_d))._field_Model=jule::Any((*(_154630_d))._field_Constant, &__jule_any_type19);
						(*(_154630_d))._field_Decl=true;
					}
				}
				_match_end_1bc5e1446:;
			};
		};
		return;;
	};
	jule::Ptr<_1ab267ae5_Slc> _157813_s = _1ab25e1c4_Slc((*(_154630_d))._field_Kind.ptr());;
	if ((_157813_s == nullptr)) {
		_1ab22c46c_pushErr(_self_, _154640_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ab25add5_Str((*(_154630_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1ab25aa1c_TypeKind> _158413_t = (*(_157813_s))._field_Elem;;
	jule::Ptr<_1ab2635e6_Prim> _15859_prim = _1ab25d16d_Prim(_158413_t.ptr());;
	if (((_15859_prim == nullptr) || ((!(_1ab264edd_IsU8(_15859_prim.ptr()))) && (!(_1ab2649c1_IsI32(_15859_prim.ptr())))))) {
		_1ab22c46c_pushErr(_self_, _154640_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ab25add5_Str((*(_154630_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
}



inline void _1ab23c1c4_castInt(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab25aa1c_TypeKind> _159230_t, jule::Ptr<_1ab22a228_Data> _159248_d, jule::Ptr<_1ab0c1e7c_Token> _159258_errorToken) {
	if (_1ab22aaec_IsConst(_159248_d.ptr())) {
		jule::Ptr<_1ab2635e6_Prim> _159413_prim = _1ab25d16d_Prim(_159230_t.ptr());;
		{
			
			if (_1d8bcdce2_IsSigInt((*(_159413_prim))._field_Kind)) {
				_case_begin_1bc5e910d:;
				{
					_1d8bd3038_SetI64((*(_159248_d))._field_Constant.ptr(), static_cast<jule::I64>(_1d8bd2763_AsI64((*(_159248_d))._field_Constant.ptr())));
				}
			}
			else if (_1d8bce100_IsUnsigInt((*(_159413_prim))._field_Kind)) {
				_case_begin_1bc5e9185:;
				{
					_1d8bd32e1_SetU64((*(_159248_d))._field_Constant.ptr(), static_cast<jule::U64>(_1d8bd29e9_AsU64((*(_159248_d))._field_Constant.ptr())));
				}
			}
			_match_end_1bc5e9064:;
		};
	} else {
		(*(_159248_d))._field_Constant=nullptr;
	};
	if ((_1ab25d921_Enum((*(_159248_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ab133890_Enum> _160613_e = _1ab25d921_Enum((*(_159248_d))._field_Kind.ptr());;
		if (_1d8bce9c4_IsNum(_1ab25add5_Str((*((*(_160613_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1ab25d404_Sptr((*(_159248_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ab2635e6_Prim> _161313_prim = _1ab25d16d_Prim(_159230_t.ptr());;
		if ((!(_1ab266561_IsUintptr(_161313_prim.ptr())))) {
			_1ab22c46c_pushErr(_self_, _159258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_159248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str(_159230_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_1ab25d68a_Ptr((*(_159248_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ab2635e6_Prim> _162013_prim = _1ab25d16d_Prim(_159230_t.ptr());;
		if (_1ab266561_IsUintptr(_162013_prim.ptr())) {
		} else if ((!(_1ab22ce62_isUnsafe(_self_)))) {
			_1ab22c46c_pushErr(_self_, _159258_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1ab2635e6_Prim> _16299_prim = _1ab25d16d_Prim((*(_159248_d))._field_Kind.ptr());;
	if (((_16299_prim != nullptr) && _1d8bce9c4_IsNum(_1ab263937_Str(_16299_prim.ptr())))) {
		return;;
	};
	_1ab22c46c_pushErr(_self_, _159258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_159248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str(_159230_t.ptr()), &__jule_any_type4)}));
}



inline void _1ab23c5e2_castNum(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab25aa1c_TypeKind> _163730_t, jule::Ptr<_1ab22a228_Data> _163748_d, jule::Ptr<_1ab0c1e7c_Token> _163758_errorToken) {
	if (_1ab22aaec_IsConst(_163748_d.ptr())) {
		jule::Ptr<_1ab2635e6_Prim> _163913_prim = _1ab25d16d_Prim(_163730_t.ptr());;
		{
			
			if (_1d8bce70a_IsFloat((*(_163913_prim))._field_Kind)) {
				_case_begin_1bc604789:;
				{
					_1d8bd3b0a_SetF64((*(_163748_d))._field_Constant.ptr(), static_cast<jule::F64>(_1d8bd2c80_AsF64((*(_163748_d))._field_Constant.ptr())));
				}
			}
			else if (_1d8bcdce2_IsSigInt((*(_163913_prim))._field_Kind)) {
				_case_begin_1bc604811:;
				{
					_1d8bd3038_SetI64((*(_163748_d))._field_Constant.ptr(), static_cast<jule::I64>(_1d8bd2763_AsI64((*(_163748_d))._field_Constant.ptr())));
				}
			}
			else if (_1d8bce100_IsUnsigInt((*(_163913_prim))._field_Kind)) {
				_case_begin_1bc604888:;
				{
					_1d8bd32e1_SetU64((*(_163748_d))._field_Constant.ptr(), static_cast<jule::U64>(_1d8bd29e9_AsU64((*(_163748_d))._field_Constant.ptr())));
				}
			}
			_match_end_1bc6046ce:;
		};
	} else {
		(*(_163748_d))._field_Constant=nullptr;
	};
	if ((_1ab25d921_Enum((*(_163748_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ab133890_Enum> _165313_e = _1ab25d921_Enum((*(_163748_d))._field_Kind.ptr());;
		if (_1d8bce9c4_IsNum(_1ab25add5_Str((*((*(_165313_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1ab2635e6_Prim> _16599_prim = _1ab25d16d_Prim((*(_163748_d))._field_Kind.ptr());;
	if (((_16599_prim != nullptr) && _1d8bce9c4_IsNum(_1ab263937_Str(_16599_prim.ptr())))) {
		return;;
	};
	_1ab22c46c_pushErr(_self_, _163758_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_163748_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str(_163730_t.ptr()), &__jule_any_type4)}));
}



inline void _1ab23ca10_castPrim(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab25aa1c_TypeKind> _166731_t, jule::Ptr<_1ab22a228_Data> _166749_d, jule::Ptr<_1ab0c1e7c_Token> _166759_errorToken) {
	jule::Ptr<_1ab2635e6_Prim> _16689_prim = _1ab25d16d_Prim(_166731_t.ptr());;
	{
		
		if (_1ab266d14_IsAny(_16689_prim.ptr())) {
			_case_begin_1bc60c5a5:;
			{
				(*(_166749_d))._field_Constant=nullptr;
			}
		}
		else if (_1ab266a7d_IsStr(_16689_prim.ptr())) {
			_case_begin_1bc60c62c:;
			{
				_1ab23bca6_castStr(_self_, _166749_d, _166759_errorToken);
			}
		}
		else if (_1d8bce3b9_IsInt(_1ab263937_Str(_16689_prim.ptr()))) {
			_case_begin_1bc60c220:;
			{
				_1ab23c1c4_castInt(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else if (_1d8bce9c4_IsNum(_1ab263937_Str(_16689_prim.ptr()))) {
			_case_begin_1bc60c297:;
			{
				_1ab23c5e2_castNum(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else {
			_case_begin_1bc60c1a9:;
			{
				_1ab22c46c_pushErr(_self_, _166759_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str(_166731_t.ptr()), &__jule_any_type4)}));
			}
		}
		_match_end_1bc60c154:;
	};
}



inline void _1ab23cd73_castConstant(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _168436_t, jule::Ptr<_1ab22a228_Data>* _168455_d) {
	if ((((*(_168455_d)) == nullptr) || (!(_1ab22aaec_IsConst((*(_168455_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1ab2635e6_Prim> _16889_prim = _1ab25d16d_Prim((*(_168436_t)).ptr());;
	_1ab25684d_castConstByType(&((*(_16889_prim))._field_Kind), _168455_d);
	(*((*(_168455_d))))._field_Model=jule::Any((*((*(_168455_d))))._field_Constant, &__jule_any_type19);
}



inline void _1ab23d291_castTypeEnum(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _169336_t, jule::Ptr<_1ab22a228_Data>* _169355_d, jule::Ptr<_1ab0c1e7c_Token>* _169370_errorToken) {
	jule::I64 _16949_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1ab1b127a_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_169355_d))))._field_Kind), _169336_t, _169370_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _16949_n);
		_1ab22c46c_pushErr(_self_, (*(_169370_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_169355_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str((*(_169336_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_169355_d))))._field_Constant=nullptr;
}



inline void _1ab23d6ae_castTypeEnumT(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _170237_t, jule::Ptr<_1ab22a228_Data>* _170256_d, jule::Ptr<_1ab0c1e7c_Token>* _170271_errorToken) {
	jule::I64 _17039_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1ab1b127a_checkTypeCompatibility((*(_self_))._field_s, _170237_t, &((*((*(_170256_d))))._field_Kind), _170271_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _17039_n);
		_1ab22c46c_pushErr(_self_, (*(_170271_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_170256_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str((*(_170237_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_170256_d))))._field_Constant=nullptr;
}



inline jule::Ptr<_1ab22a228_Data> _1ab23db65_evalCastByTypeNData(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab25aa1c_TypeKind> _171142_t, jule::Ptr<_1ab22a228_Data> _171160_d, jule::Ptr<_1ab0c1e7c_Token> _171174_errorToken) {
	if (((_171160_d != nullptr) && (*(_171160_d))._field_Decl)) {
		_1ab22c46c_pushErr(_self_, _171174_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1ab22a5d0_IsNil(_171160_d.ptr())) {
			_case_begin_1bb7d1a22:;
			{
				if ((!(_1ab25c8ba_NilCompatible(_171142_t.ptr())))) {
					_1ab22c46c_pushErr(_self_, _171174_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4),jule::Any(_1ab25add5_Str(_171142_t.ptr()), &__jule_any_type4)}));
				};
				(*(_171160_d))._field_Constant=nullptr;
			}
		}
		else if (((_1ab25d16d_Prim((*(_171160_d))._field_Kind.ptr()) != nullptr) && _1ab266d14_IsAny(_1ab25d16d_Prim((*(_171160_d))._field_Kind.ptr()).ptr()))) {
			_case_begin_1bb82b72b:;
			{
				if ((_1ab25d921_Enum(_171142_t.ptr()) != nullptr)) {
					_1ab22c46c_pushErr(_self_, _171174_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1ab22c7d0_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1ab25dba7_TypeEnum(_171142_t.ptr()) != nullptr)) {
					_1ab22c46c_pushErr(_self_, _171174_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*(_171160_d))._field_Constant=nullptr;
			}
		}
		else if ((_1ab25dba7_TypeEnum((*(_171160_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb82b792:;
			{
				_1ab23d291_castTypeEnum(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_1ab25dba7_TypeEnum(_171142_t.ptr()) != nullptr)) {
			_case_begin_1bb82ae45:;
			{
				_1ab23d6ae_castTypeEnumT(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_1ab25d68a_Ptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_1bb82aeab:;
			{
				_1ab23abd9_castPtr(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1ab25d404_Sptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_1bb82a65e:;
			{
				_1ab23b525_castRef(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1ab25e1c4_Slc(_171142_t.ptr()) != nullptr)) {
			_case_begin_1bb82a6c5:;
			{
				_1ab23b943_castSlc(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1ab25e6e1_Struct(_171142_t.ptr()) != nullptr)) {
			_case_begin_1bb82324a:;
			{
				_1ab23b107_castStruct(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1ab25d16d_Prim(_171142_t.ptr()) != nullptr)) {
			_case_begin_1bb8232b1:;
			{
				_1ab23ca10_castPrim(_self_, _171142_t, _171160_d, _171174_errorToken);
				_1ab23cd73_castConstant(_self_, &(_171142_t), &(_171160_d));
			}
		}
		else {
			_case_begin_1bb7d19ab:;
			{
				_1ab22c46c_pushErr(_self_, _171174_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str(_171142_t.ptr()), &__jule_any_type4)}));
				_171160_d=nullptr;
			}
		}
		_match_end_1bb7d04c1:;
	};
	if ((_171160_d == nullptr)) {
		return nullptr;;
	};
	(*(_171160_d))._field_Mutable=((*(_171160_d))._field_Mutable || (!(_1ab25c39d_Mutable((*(_171160_d))._field_Kind.ptr()))));
	if (((!((*(_171160_d))._field_Decl)) && ((_1ab25d921_Enum((*(_171160_d))._field_Kind.ptr()) == nullptr) || (!(_1ab25b226_Equal((*((*(_1ab25d921_Enum((*(_171160_d))._field_Kind.ptr())))._field_Kind))._field_Kind, _171142_t)))))) {
		_1ab255c9d_applyCastKind(&(_171160_d), &(_171142_t));
		(*((*(_171160_d))._field_Model.cast_ptr<_1ab1117d5_CastingExprModel>(&__jule_any_type92)))._field_Token=_171174_errorToken;
	} else {
		(*(_171160_d))._field_Kind=_171142_t;
	};
	(*(_171160_d))._field_Decl=false;
	(*(_171160_d))._field_Lvalue=false;
	(*(_171160_d))._field_untyped=false;
	if (_1ab22aaec_IsConst(_171160_d.ptr())) {
		(*((*(_171160_d))._field_Constant))._field_Kind=(*(_1ab25d16d_Prim(_171142_t.ptr())))._field_Kind;
	};
	return _171160_d;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab23e11b_evalCastT(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _178234_t, jule::Ptr<_1ab0db77c_Expr>* _178253_e, jule::Ptr<_1ab0c1e7c_Token>* _178268_et) {
	jule::Ptr<_1ab25aa1c_TypeKind> _178313_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_178313_prefix;
	});;
	if ((_1ab25e1c4_Slc((*(_178234_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_178253_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_1bb8554be:;
				{
					(*(_self_))._field_prefix=(*(_178234_t));
				}
			}
			_match_end_1bb855469:;
		};
	};
	jule::Ptr<_1ab22a228_Data> _179213_d = _1ab24a17c_evalExpr(_self_, (*(_178253_e)));;
	if (((_179213_d == nullptr) || ((*(_self_))._field_prefix != nullptr))) {
		return _179213_d;;
	};
	return _1ab23db65_evalCastByTypeNData(_self_.ptr(), (*(_178234_t)), _179213_d, (*(_178268_et)));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab23e45c_evalCast(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0de0dc_CastExpr> _179932_c) {
	jule::Ptr<_1ab262bde_TypeSymbol> _180013_t = _1ab12582c_buildType((*(_179932_c))._field_Kind);;
	jule::Bool _18019_ok = _1ab1ade37_checkType((*(_self_))._field_s, &(_180013_t), (*(_self_))._field_lookup);;
	if ((!(_18019_ok))) {
		return nullptr;;
	};
	return _1ab23e11b_evalCastT(_self_, &((*(_180013_t))._field_Kind), &((*(_179932_c))._field_Expr), &((*((*(_179932_c))._field_Kind))._field_Token));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab23e79d_evalNsSelection(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0de4b6_NsSelectionExpr> _180834_s) {
	jule::Str _18099_path = _1ab277594_buildLinkPathByTokens(&((*(_180834_s))._field_Ns));;
	jule::Ptr<_1ab184bdd_ImportInfo> _181013_imp = _1ab27a553_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab27883c_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)>([=](jule::Ptr<_1ab184bdd_ImportInfo> _181049_imp) mutable -> jule::Bool {
		if ((((*(_180834_s))._field_Ns.len() == 1LL) && ((*(_181049_imp))._field_Alias == _18099_path))) {
			return true;;
		};
		return (((*(_181049_imp))._field_LinkPath == _18099_path) && _1ab187806_isAccessibleViaSelection(_181049_imp.ptr()));;
	}));;
	if ((_181013_imp == nullptr)) {
		_1ab22c46c_pushErr(_self_, (*(_180834_s))._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_18099_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait<_1ab27a553_Lookup> _182213_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1ab27a553_Lookup>(_181013_imp, 1);
	;
	_1ab22cbcb_disallowBuiltin(_self_);
	jule::Any _182713_def = _1ab2301d9_getDef(_self_, &((*((*(_180834_s))._field_Ident))._field_Kind), false);;
	_1ab22c9cd_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_182213_lookup;
	jule::Ptr<_1ab22a228_Data> _183013_d = _1ab234397_evalDef(_self_, &(_182713_def), (*(_180834_s))._field_Ident);;
	return _183013_d;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab23ec54_evalStructLitExplicit(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab10acb8_StructIns> _183445_s, jule::Slice<jule::Ptr<_1ab0db77c_Expr>> _183513_exprs, jule::Ptr<_1ab0c1e7c_Token> _183533_errorToken) {
	jule::Bool _18369_ok = _1ab1a97e5_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_183445_s))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_183445_s))._field_Generics.len()), _183533_errorToken);;
	if ((!(_18369_ok))) {
		return nullptr;;
	};
	if ((((*(_self_))._field_field != nullptr) && ((*((*((*(_self_))._field_field))._field_Decl))._field_Owner == (*(_183445_s))._field_Decl))) {
		_1ab22c46c_pushErr(_self_.ptr(), _183533_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_183445_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
	};
	_1bc5c28bc_pushReference(_self_.ptr(), &(_183445_s));
	_1ab232593_checkDeprecated(_self_.ptr(), &((*((*(_183445_s))._field_Decl))._field_Directives), _183533_errorToken);
	_1ab21d5a1_structLitChecker _184913_slc = _1ab21d5a1_structLitChecker{._field_e=_self_, ._field_errorToken=_183533_errorToken, ._field_s=_183445_s, };;
	_1ab21ecde_check(&_184913_slc, &(_183513_exprs));
	jule::Ptr<_1ab22a228_Data> _185613_d = jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_183445_s, 0)}), ._field_Mutable=(!((*(_self_))._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1ab110e55_StructLitExprModel>(_1ab110e55_StructLitExprModel{._field_Strct=_183445_s, ._field_Args=_184913_slc._field_args}), &__jule_any_type94), });;
	if ((*((*(_183445_s))._field_Decl))._field_Binded) {
		(*((*(_185613_d))._field_Kind))._field_BindIdent=(*((*(_183445_s))._field_Decl))._field_Ident;
	};
	return _185613_d;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab240095_evalStructLit(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0e17c6_StructLit> _187237_lit) {
	jule::Ptr<_1ab262bde_TypeSymbol> _187313_t = _1ab12582c_buildType((*(_187237_lit))._field_Kind);;
	jule::Bool _18749_ok = _1ab1ade37_checkType((*(_self_))._field_s, &(_187313_t), (*(_self_))._field_lookup);;
	if ((!(_18749_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1ab10acb8_StructIns> _187913_s = _1ab25e6e1_Struct((*(_187313_t))._field_Kind.ptr());;
	if ((_187913_s == nullptr)) {
		if ((_1ab25d404_Sptr((*(_187313_t))._field_Kind.ptr()) != nullptr)) {
			_187913_s=_1ab25e6e1_Struct((*(_1ab25d404_Sptr((*(_187313_t))._field_Kind.ptr())))._field_Elem.ptr());
			if ((_187913_s != nullptr)) {
				goto _julec_label_1bb86a66b;
			};
		};
		_1ab22c46c_pushErr(_self_.ptr(), (*((*(_187237_lit))._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1bb86a66b:;
	jule::Ptr<_1ab22a228_Data> _189213_d = _1ab23ec54_evalStructLitExplicit(_self_, _187913_s, (*(_187237_lit))._field_Exprs, (*((*(_187237_lit))._field_Kind))._field_Token);;
	if ((_1ab25d404_Sptr((*(_187313_t))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ab110e55_StructLitExprModel> _189417_model = (*(_189213_d))._field_Model.cast_ptr<_1ab110e55_StructLitExprModel>(&__jule_any_type94);;
		_1ab2544b6_makeStructLitAlloc(&(_189213_d), &(_189417_model));
	};
	return _189213_d;;
}



inline _1ab26c8ca_typeChecker _1ab24032b_typeChecker(_1ab22be1c_Eval* _self_) {
	return _1ab1acbd3_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1ab22a228_Data> _1ab24066c_evalType(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0d7448_TypeDecl> _190431_t) {
	jule::Ptr<_1ab262bde_TypeSymbol> _190513_tk = _1ab12582c_buildType(_190431_t);;
	jule::Bool _19069_ok = _1ab1ade37_checkType((*(_self_))._field_s, &(_190513_tk), (*(_self_))._field_lookup);;
	if ((!(_19069_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=(*(_190513_tk))._field_Kind, ._field_Model=jule::Any((*(_190513_tk))._field_Kind, &__jule_any_type83), ._field_Decl=true, });;
}



inline void _1ab2409d0_callTypeFn(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0e04a6_FnCallExpr>* _191735_fc, jule::Ptr<_1ab22a228_Data>* _191757_d) {
	if (((*((*(_191735_fc))))._field_Args.len() < 1LL)) {
		_1ab22c46c_pushErr(_self_.ptr(), (*((*(_191735_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_191735_fc))))._field_Args.len() > 1LL)) {
		_1ab22c46c_pushErr(_self_.ptr(), (*((*((*(_191735_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_191757_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_191735_fc))))._field_IsCo) {
		_1ab22c46c_pushErr(_self_.ptr(), (*((*(_191735_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	} else if (((*((*(_191735_fc))))._field_Exception != nullptr)) {
		_1ab22c46c_pushErr(_self_.ptr(), (*((*(_191735_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	};
	if (((*((*(_191735_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1ab0db77c_Expr> _193317_arg = (*((*(_191735_fc))))._field_Args[0LL];;
		(*(_191757_d))=_1ab23e11b_evalCastT(_self_, &((*((*(_191757_d))))._field_Kind), &(_193317_arg), &((*(_193317_arg))._field_Token));
		return;;
	};
	if (((*(_191757_d)) != nullptr)) {
		(*((*(_191757_d))))._field_Decl=false;
	};
}



inline void _1ab240d43_callBuiltinFn(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0e04a6_FnCallExpr>* _194338_fc, jule::Ptr<_1ab22a228_Data>* _194360_d) {
	if ((!(_1ab0e082a_Unhandled((*(_194338_fc)).ptr())))) {
		_1ab22c46c_pushErr(_self_.ptr(), (*((*(_194338_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_194360_d))=(*(_1ab25e45a_Fn((*((*(_194360_d))))._field_Kind.ptr())))._field_caller(&(_self_), _194338_fc, _194360_d);
	if (((*(_194360_d)) == nullptr)) {
		return;;
	};
	(*((*(_194360_d))))._field_Mutable=true;
}



inline void _1ab2411a6_checkFnOfConcurrentCall(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab120d00_FnIns>* _195543_f, jule::Ptr<_1ab0c1e7c_Token> _195554_errorToken) {
	if (_1ab22ce62_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_195543_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab72e397:;
		if (it != expr_end) {
			jule::Ptr<_1ab11ed54_ParamIns> *_195916_p = it;
			{
				if (_1ab11ba43_IsSelf((*((*(_195916_p))))._field_Decl.ptr())) {
					if ((!(_1ab11bcc9_IsRef((*((*(_195916_p))))._field_Decl.ptr())))) {
						_1ab22c46c_pushErr(_self_, _195554_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1ab22c7d0_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*((*((*(_195916_p))))._field_Decl))._field_Reference) {
					_1ab22c46c_pushErr(_self_, _195554_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1ab22c7d0_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1ab72e397:;
			++it;
			goto _iter_begin_1ab72e397;
		}
		_iter_end_1ab72e397:;
	};
}



inline void _1ab2415c4_processExceptionalHandler(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab120d00_FnIns>* _197449_f, jule::Ptr<_1ab0e04a6_FnCallExpr>* _197465_fc, jule::Ptr<_1ab22a228_Data>* _197487_d) {
	jule::Bool _19759_resultNeeded = ((!(_1ab11d36e_IsVoid((*((*(_197449_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1ab16aab4_scopeChecker> _197617_csc = nullptr;;
	jule::Ptr<_1ab1637b0_Scope> _197717_ch = nullptr;;
	jule::Ptr<_1ab112187_FnCallExprModel> _197913_model = (*((*(_197487_d))))._field_Model.cast_ptr<_1ab112187_FnCallExprModel>(&__jule_any_type34);;
	jule::Ptr<_1ab16aab4_scopeChecker> _198313_sc = (*(_self_))._field_lookup.cast_ptr<_1ab16aab4_scopeChecker>(0);;
	_197617_csc=_1ab17c80c_newChildChecker(_198313_sc);
	if (_19759_resultNeeded) {
		(*(_197617_csc))._field_result=(*(_197449_f));
	};
	_197717_ch=_1ab1708aa_getChild(_198313_sc.ptr());
	(*((*((*(_197465_fc))))._field_Exception))._field_Parent=(*(_198313_sc))._field_tree;
	{ jule::Slice<jule::Ptr<_1ab1c7a66_Var>> &__jule_push_dest = (*((*(_197617_csc))._field_table))._field_Vars; __jule_push_dest.push(_1ab25483a_buildErrorVar(&(_197717_ch), _197465_fc)); };
	_1ab170cc8_checkChildSsc(_198313_sc, &((*((*(_197465_fc))))._field_Exception), &(_197717_ch), &(_197617_csc));
	(*(_197913_model))._field_Assigned=_19759_resultNeeded;
	(*(_197913_model))._field_Except=_197717_ch;
	if ((_19759_resultNeeded && ((*(_197617_csc))._field_result != nullptr))) {
		_1ab22c46c_pushErr(_self_, (*((*(_197465_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1ab241937_callFn(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0e04a6_FnCallExpr>* _200131_fc, jule::Ptr<_1ab22a228_Data>* _200153_d) {
	jule::Ptr<_1ab120d00_FnIns> _200213_f = _1ab25e45a_Fn((*((*(_200153_d))))._field_Kind.ptr());;
	if (_1ab122285_IsBuiltin(_200213_f.ptr())) {
		_1ab240d43_callBuiltinFn(_self_, _200131_fc, _200153_d);
		return;;
	};
	if ((_1ab22d1e8_isGlobal(_self_.ptr()) && (*((*(_200213_f))._field_Decl))._field_Exceptional)) {
		_1ab22c46c_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1ab22c7d0_pushSuggestion(_self_.ptr(), jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_200153_d))=nullptr;
		return;;
	};
	if (((!(_1ab11d605_IsMethod((*(_200213_f))._field_Decl.ptr()))) && _1ab27663c_hasDirective(&((*((*(_200213_f))._field_Decl))._field_Directives), jule::Str::lit("test", 4)))) {
		_1ab22c46c_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_200153_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_200153_d))))._field_Mutable)) && _1ab11d605_IsMethod((*(_200213_f))._field_Decl.ptr())) && (!((*((*(_200213_f))._field_Decl))._field_Statically))) && (*((*((*(_200213_f))._field_Decl))._field_Params[0LL]))._field_Mutable)) {
		if ((!((*(_self_))._field_immutable))) {
			_1ab22c46c_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1ab110e55_StructLitExprModel> _202817_lit = _1ab257a6e_isLitBased(&((*((*(_200153_d))))._field_Model));;
			if ((_202817_lit == nullptr)) {
				_1ab22c46c_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1ab21d0b7_checkMutRiskOfStructLit(&((*(_self_))._field_s), &(_202817_lit));
			};
		};
	} else if (((!(_1ab22ce62_isUnsafe(_self_.ptr()))) && (*((*(_200213_f))._field_Decl))._field_Unsafety)) {
		_1ab22c46c_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _204013_dynamicAnnotation = ((((*((*(_200213_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_200213_f))._field_Generics.len() == 0LL)) && ((*(_200213_f))._field_Params.len() > 0LL));;
	if (_204013_dynamicAnnotation) {
		(*(_200213_f))._field_Generics=jule::Slice<jule::Ptr<_1ab259136_InsGeneric>>::alloc((*((*(_200213_f))._field_Decl))._field_Generics.len(), (*((*(_200213_f))._field_Decl))._field_Generics.len());
	} else if (((*(_200213_f))._field_Generics.len() != (*((*(_200213_f))._field_Decl))._field_Generics.len())) {
		_1ab1a97e5_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_200213_f))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_200213_f))._field_Generics.len()), (*((*(_200131_fc))))._field_Token);
		(*(_200153_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ab1a567b_Sema> _204913_old = (*(_self_))._field_s;;
	if (((*((*(_200213_f))._field_Decl))._field_Owner != nullptr)) {
		(*(_self_))._field_s=(*((*((*(_200213_f))._field_Decl))._field_Owner))._field_sema;
	};
	__JULE_DEFER({
		if ((_204913_old != (*(_self_))._field_s)) {
			((*(_204913_old))._field_errors).append((*((*(_self_))._field_s))._field_errors);;
			(*((*(_self_))._field_s))._field_errors=nullptr;
		};
		(*(_self_))._field_s=_204913_old;
	});;
	_1ab21a669_fnCallArgChecker _206213_fcac = _1ab21a669_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_200131_fc))))._field_Args, ._field_errorToken=(*((*(_200131_fc))))._field_Token, ._field_dynamicAnnotation=_204013_dynamicAnnotation, };;
	if ((!(_204013_dynamicAnnotation))) {
		if ((!((*(_200213_f))._field_reloaded))) {
			jule::Bool _207117_ok = _1ab1b33c0_reloadFnInsTypes((*(_self_))._field_s, _200213_f);;
			(*(_200213_f))._field_reloaded=true;
			if ((!(_207117_ok))) {
				(*(_200153_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1ab120d00_FnIns> _207817_existInstance = _1ab11e969_appendInstance((*(_200213_f))._field_Decl.ptr(), &(_200213_f));;
		if ((_207817_existInstance != nullptr)) {
			_200213_f=_207817_existInstance;
		};
	} else if ((!(_1ab1b1b2c_buildFnNonGenericTypeKinds((*(_self_))._field_s, &(_200213_f), &(_206213_fcac._field_ignored))))) {
		(*(_200153_d))=nullptr;
		return;;
	};
	_206213_fcac._field_f=_200213_f;
	jule::Bool _208913_ok = false;;
	if (((*((*(_200213_f))._field_Decl))._field_Owner != nullptr)) {
		std::swap(_204913_old, (*(_self_))._field_s);
		_208913_ok=_1ab21cc21_check(&_206213_fcac);
		std::swap(_204913_old, (*(_self_))._field_s);
	} else {
		_208913_ok=_1ab21cc21_check(&_206213_fcac);
	};
	if (_204013_dynamicAnnotation) {
		if ((!(_208913_ok))) {
			(*(_200153_d))=nullptr;
			return;;
		};
		if ((!(_1ab238cd6_checkGenericFn(_self_, &(_200213_f), &((*((*(_200131_fc))))._field_Token), &((*((*(_200153_d))))._field_Model))))) {
			(*(_200153_d))=nullptr;
			return;;
		};
	};
	jule::Any _210913_callModel = (*((*(_200153_d))))._field_Model;;
	if (_1ab11d36e_IsVoid((*(_200213_f))._field_Decl.ptr())) {
		(*(_200153_d))=_1ab255eac_buildVoidData();
	} else {
		(*((*(_200153_d))))._field_Kind=(*(_200213_f))._field_Result;
		(*((*(_200153_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1ab112187_FnCallExprModel> _211813_model = jule::new_ptr<_1ab112187_FnCallExprModel>(_1ab112187_FnCallExprModel{._field_Token=(*((*(_200131_fc))))._field_Token, ._field_Func=_200213_f, ._field_IsCo=(*((*(_200131_fc))))._field_IsCo, ._field_Expr=_210913_callModel, ._field_Args=_206213_fcac._field_argModels, });;
	(*((*(_200153_d))))._field_Model=jule::Any(_211813_model, &__jule_any_type34);
	(*((*(_200153_d))))._field_Mutable=true;
	if ((*((*(_200213_f))._field_Decl))._field_Exceptional) {
		if ((*((*(_200131_fc))))._field_IsCo) {
			_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1ab1a8629_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1ab0e082a_Unhandled((*(_200131_fc)).ptr())) {
				_case_begin_1ab7543ab:;
				{
					_1ab22c46c_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1ab22c7d0_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1ab0e0ab1_Ignored((*(_200131_fc)).ptr())) {
				_case_begin_1ab754422:;
				{
					goto _match_end_1ab752d9e;
				}
			}
			else {
				_case_begin_1ab752e04:;
				{
					_1ab2415c4_processExceptionalHandler(_self_.ptr(), &(_200213_f), _200131_fc, _200153_d);
				}
			}
			_match_end_1ab752d9e:;
		};
	} else if ((!(_1ab0e082a_Unhandled((*(_200131_fc)).ptr())))) {
		_1ab22c46c_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_200131_fc))))._field_IsCo) {
		_1ab2411a6_checkFnOfConcurrentCall(_self_.ptr(), &((*(_211813_model))._field_Func), (*((*(_200131_fc))))._field_Token);
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab241c78_evalFnCall(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0e04a6_FnCallExpr> _215334_fc) {
	jule::Ptr<_1ab25aa1c_TypeKind> _215413_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_215413_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_215334_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ab758844:;
			{
				if ((*((*((*(_215334_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _1ab348874_builtinCallerError(&(_self_), &(_215334_fc));;
				};
			}
		}
		_match_end_1ab7587de:;
	};
	jule::Ptr<_1ab22a228_Data> _216713_d = _1ab249368_evalExprKind(_self_, (*((*(_215334_fc))._field_Expr))._field_Kind);;
	if ((_216713_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_216713_d))._field_Decl) {
		_1ab2409d0_callTypeFn(_self_, &(_215334_fc), &(_216713_d));
		return _216713_d;;
	};
	if ((_1ab25e45a_Fn((*(_216713_d))._field_Kind.ptr()) == nullptr)) {
		_1ab22c46c_pushErr(_self_.ptr(), (*(_215334_fc))._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ab241937_callFn(_self_, &(_215334_fc), &(_216713_d));
	return _216713_d;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab242174_evalEnumStatic(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab133890_Enum> _218637_enm, jule::Ptr<_1ab0c1e7c_Token> _218649_ident) {
	jule::Ptr<_1ab132d23_EnumItem> _218713_item = _1ab134484_FindItem(_218637_enm.ptr(), (*(_218649_ident))._field_Kind);;
	if ((_218713_item == nullptr)) {
		_1ab22c46c_pushErr(_self_, _218649_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_218637_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_218649_ident))._field_Kind, &__jule_any_type4)}));
	};
	return _1ab2577a5_evalEnumStatic(&(_218637_enm), &(_218713_item));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab242570_evalTypeEnumStatic(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab13509a_TypeEnum> _219441_enm, jule::Ptr<_1ab0c1e7c_Token> _219457_ident) {
	jule::Ptr<_1ab1349c3_TypeEnumItem> _219513_item = _1ab135b5b_FindItem(_219441_enm.ptr(), (*(_219457_ident))._field_Kind);;
	if ((_219513_item == nullptr)) {
		_1ab22c46c_pushErr(_self_, _219457_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_219441_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_219457_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_1ab25d921_Enum((*((*(_219513_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7615d8:;
			{
				return _1ab230a69__evalEnum(_self_, _1ab25d921_Enum((*((*(_219513_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_1ab25dba7_TypeEnum((*((*(_219513_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab76164e:;
			{
				return _1ab2312a6__evalTypeEnum(_self_, _1ab25dba7_TypeEnum((*((*(_219513_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_1ab25e6e1_Struct((*((*(_219513_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7616b5:;
			{
				return _1ab2319e3__evalStruct(_self_, _1ab25e6e1_Struct((*((*(_219513_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1ab75ea37:;
			{
				jule::Ptr<_1ab22a228_Data> _220817_d = jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=(*((*(_219513_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_220817_d))._field_Model=jule::Any((*(_220817_d))._field_Kind, &__jule_any_type83);
				return _220817_d;;
			}
		}
		_match_end_1ab7607a2:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab24296b_evalStructStatic(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab10acb8_StructIns> _221739_s, jule::Ptr<_1ab0c1e7c_Token> _221754_ident) {
	jule::Ptr<_1ab22a228_Data> _221813_d = jule::new_ptr<_1ab22a228_Data>();;
	;
	jule::Ptr<_1ab11cdeb_Fn> _222213_method = _1ab10bd30_FindMethod(_221739_s.ptr(), (*(_221754_ident))._field_Kind, true);;
	if ((_222213_method != nullptr)) {
		if ((!(_1ab1a8a25_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_222213_method))._field_Public, (*(_222213_method))._field_Token)))) {
			_1ab22c46c_pushErr(_self_, _221754_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_221754_ident))._field_Kind, &__jule_any_type4)}));
			_1ab22c7d0_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ab120d00_FnIns> _222917_ins = _1ab11e65b_instance(_222213_method);;
		(*(_222917_ins))._field_Owner=_221739_s;
		_1bc500d6c_pushReference(_self_, &(_222917_ins));
		(*(_221813_d))._field_Model=jule::Any(jule::new_ptr<_1ab1151ce_StructStaticIdentExprModel>(_1ab1151ce_StructStaticIdentExprModel{._field_Structure=_221739_s, ._field_Expr=(*(_221813_d))._field_Model, ._field_Method=_222917_ins}), &__jule_any_type95);
		(*(_221813_d))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_222917_ins, 1)});
		return _221813_d;;
	};
	jule::Ptr<_1ab1c7a66_Var> _224313_sttc = _1ab10c4b2_FindStatic(_221739_s.ptr(), (*(_221754_ident))._field_Kind);;
	if ((_224313_sttc != nullptr)) {
		return _1ab233aa0_evalVar(_self_, _224313_sttc, _221754_ident);;
	};
	_1ab22c46c_pushErr(_self_, _221754_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_221739_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(_221754_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab242e22_evalTraitSubIdent(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab22a228_Data> _225240_d, jule::Ptr<_1ab131195_Trait> _225254_trt, jule::Ptr<_1ab0c1e7c_Token> _225271_ident) {
	jule::Ptr<_1ab11cdeb_Fn> _225313_f = _1ab131d44_FindMethod(_225254_trt.ptr(), (*(_225271_ident))._field_Kind);;
	if ((_225313_f == nullptr)) {
		_1ab22c46c_pushErr(_self_, _225271_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_225254_trt))._field_Ident, &__jule_any_type4),jule::Any((*(_225271_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab11e65b_instance(_225313_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1ab114387_TraitSubIdentExprModel>(_1ab114387_TraitSubIdentExprModel{._field_Token=_225271_ident, ._field_Expr=(*(_225240_d))._field_Model, ._field_Method=_225313_f, ._field_Trt=_225254_trt}), &__jule_any_type96), });;
}



inline jule::Ptr<_1ab22a228_Data> _1ab243483_evalStructSubIdentField(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab22a228_Data>* _227247_d, jule::Ptr<_1ab10acb8_StructIns>* _227262_s, jule::Ptr<_1ab0c1e7c_Token>* _227282_tok, jule::Ptr<_1ab10a218_FieldIns>* _2272100_f) {
	jule::Ptr<_1ab114c28_StructSubIdentExprModel> _227313_model = jule::new_ptr<_1ab114c28_StructSubIdentExprModel>(_1ab114c28_StructSubIdentExprModel{._field_Token=(*(_227282_tok)), ._field_Expr=jule::new_ptr<_1ab22a228_Data>((*((*(_227247_d))))), ._field_Field=(*(_2272100_f)), ._field_Owner=(*(_227262_s))});;
	(*((*(_227247_d))))._field_Model=jule::Any(_227313_model, &__jule_any_type97);
	(*((*(_227247_d))))._field_Kind=(*((*(_2272100_f))))._field_Kind;
	(*((*(_227247_d))))._field_Lvalue=true;
	if (((*((*((*(_2272100_f))))._field_Decl))._field_Mutable && (!((*((*(_227247_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1ab7720cc:;
				{
					jule::Ptr<_1ab16aab4_scopeChecker> _228717_scope = _1ab16dba5_getRoot((*(_self_))._field_lookup.cast_ptr<_1ab16aab4_scopeChecker>(0));;
					(*((*(_227247_d))))._field_Mutable=(((*(_228717_scope))._field_owner != nullptr) && ((*((*(_228717_scope))._field_owner))._field_Owner == (*(_227262_s))));
				}
			}
			_match_end_1ab772077:;
		};
	};
	return (*(_227247_d));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab2439e4_evalStructSubIdent(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab22a228_Data> _229541_d, jule::Ptr<_1ab10acb8_StructIns> _229555_s, jule::Ptr<_1ab0de890_SubIdentExpr> _229574_si, jule::Bool _229593_ref) {
	jule::Ptr<_1ab10a218_FieldIns> _229613_f = _1ab10c171_FindField(_229555_s.ptr(), (*((*(_229574_si))._field_Ident))._field_Kind);;
	if ((_229613_f != nullptr)) {
		if ((!(_1ab1a8a25_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_229613_f))._field_Decl))._field_Public, (*((*(_229613_f))._field_Decl))._field_Token)))) {
			_1ab22c46c_pushErr(_self_, (*(_229574_si))._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_229613_f))._field_Decl))._field_Ident, &__jule_any_type4)}));
			_1ab22c7d0_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1ab243483_evalStructSubIdentField(_self_, &(_229541_d), &(_229555_s), &((*(_229574_si))._field_Ident), &(_229613_f));;
	};
	;
	jule::Ptr<_1ab11cdeb_Fn> _230613_m = _1ab10bd30_FindMethod(_229555_s.ptr(), (*((*(_229574_si))._field_Ident))._field_Kind, false);;
	if ((_230613_m == nullptr)) {
		_1ab22c46c_pushErr(_self_, (*(_229574_si))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_229555_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*((*(_229574_si))._field_Ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_1ab1a8a25_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_230613_m))._field_Public, (*(_230613_m))._field_Token)))) {
		_1ab22c46c_pushErr(_self_, (*(_229574_si))._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_230613_m))._field_Ident, &__jule_any_type4)}));
		_1ab22c7d0_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1ab11bcc9_IsRef((*(_230613_m))._field_Params[0LL].ptr()) && (!(_229593_ref)))) {
		_1ab22c46c_pushErr(_self_, (*(_229574_si))._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1ab232593_checkDeprecated(_self_, &((*(_230613_m))._field_Directives), (*(_229574_si))._field_Ident);
	jule::Ptr<_1ab120d00_FnIns> _232213_ins = _1ab11e65b_instance(_230613_m);;
	(*(_232213_ins))._field_Owner=_229555_s;
	_1bc500d6c_pushReference(_self_, &(_232213_ins));
	jule::Ptr<_1ab22a228_Data> _232513_model = jule::new_ptr<_1ab22a228_Data>((*(_229541_d)));;
	(*(_229541_d))._field_Model=jule::Any(jule::new_ptr<_1ab114c28_StructSubIdentExprModel>(_1ab114c28_StructSubIdentExprModel{._field_Token=(*(_229574_si))._field_Ident, ._field_Expr=_232513_model, ._field_Method=_232213_ins, ._field_Owner=_229555_s}), &__jule_any_type97);
	(*(_229541_d))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_232213_ins, 1)});
	return _229541_d;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab243d35_evalIntTypeStatic(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0c1e7c_Token> _233636_ident) {
	;
	{
		auto &_match_expr{ (*(_233636_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab780739:;
			{
				jule::Ptr<_1d8bd00bd_Const> _234017_c = static__1d8bd050d_NewI64(static_cast<jule::I64>(_1d8bc82d6_MaxI(jule::Str::lit("int", 3))));;
				(*(_234017_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab344870_primInt, ._field_Model=jule::Any(_234017_c, &__jule_any_type19), ._field_Constant=_234017_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab781097:;
			{
				jule::Ptr<_1d8bd00bd_Const> _234817_c = static__1d8bd050d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1d8bc87d1_Min(jule::Str::lit("int", 3)))));;
				(*(_234817_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab344870_primInt, ._field_Model=jule::Any(_234817_c, &__jule_any_type19), ._field_Constant=_234817_c});;
			}
		}
		else {
			_case_begin_1ab7803c6:;
			{
				_1ab22c46c_pushErr(_self_, _233636_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("int", 3), &__jule_any_type4),jule::Any((*(_233636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab780371:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab244176_evalUintTypeStatic(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0c1e7c_Token> _236137_ident) {
	;
	{
		auto &_match_expr{ (*(_236137_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab78385d:;
			{
				jule::Ptr<_1d8bd00bd_Const> _236517_c = static__1d8bd07c7_NewU64(static_cast<jule::U64>(_1d8bc85a0_MaxU(jule::Str::lit("uint", 4))));;
				(*(_236517_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab344496_primUint, ._field_Model=jule::Any(_236517_c, &__jule_any_type19), ._field_Constant=_236517_c});;
			}
		}
		else {
			_case_begin_1ab783b49:;
			{
				_1ab22c46c_pushErr(_self_, _236137_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4),jule::Any((*(_236137_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab783ae4:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab2444b7_evalI8TypeStatic(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0c1e7c_Token> _237835_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_237835_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab786d4a:;
			{
				jule::Ptr<_1d8bd00bd_Const> _238417_c = static__1d8bd050d_NewI64(127LL);;
				(*(_238417_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab344b39_primI8, ._field_Model=jule::Any(_238417_c, &__jule_any_type19), ._field_Constant=_238417_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab7876a8:;
			{
				jule::Ptr<_1d8bd00bd_Const> _239217_c = static__1d8bd050d_NewI64(-128LL);;
				(*(_239217_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab344b39_primI8, ._field_Model=jule::Any(_239217_c, &__jule_any_type19), ._field_Constant=_239217_c});;
			}
		}
		else {
			_case_begin_1ab7869d7:;
			{
				_1ab22c46c_pushErr(_self_, _237835_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4),jule::Any((*(_237835_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab786982:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab244808_evalI16TypeStatic(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0c1e7c_Token> _240536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_240536_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab78a9db:;
			{
				jule::Ptr<_1d8bd00bd_Const> _241117_c = static__1d8bd050d_NewI64(32767LL);;
				(*(_241117_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab344e03_primI16, ._field_Model=jule::Any(_241117_c, &__jule_any_type19), ._field_Constant=_241117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab78b349:;
			{
				jule::Ptr<_1d8bd00bd_Const> _241917_c = static__1d8bd050d_NewI64(-32768LL);;
				(*(_241917_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab344e03_primI16, ._field_Model=jule::Any(_241917_c, &__jule_any_type19), ._field_Constant=_241917_c});;
			}
		}
		else {
			_case_begin_1ab78a678:;
			{
				_1ab22c46c_pushErr(_self_, _240536_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4),jule::Any((*(_240536_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab78a623:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab244b49_evalI32TypeStatic(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0c1e7c_Token> _243236_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_243236_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab78e67c:;
			{
				jule::Ptr<_1d8bd00bd_Const> _243817_c = static__1d8bd050d_NewI64(2147483647LL);;
				(*(_243817_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab3451bc_primI32, ._field_Model=jule::Any(_243817_c, &__jule_any_type19), ._field_Constant=_243817_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab78eeda:;
			{
				jule::Ptr<_1d8bd00bd_Const> _244617_c = static__1d8bd050d_NewI64(-2147483648LL);;
				(*(_244617_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab3451bc_primI32, ._field_Model=jule::Any(_244617_c, &__jule_any_type19), ._field_Constant=_244617_c});;
			}
		}
		else {
			_case_begin_1ab78e319:;
			{
				_1ab22c46c_pushErr(_self_, _243236_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4),jule::Any((*(_243236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab78e2b4:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab244e8a_evalI64TypeStatic(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0c1e7c_Token> _245936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_245936_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab79331d:;
			{
				jule::Ptr<_1d8bd00bd_Const> _246517_c = static__1d8bd050d_NewI64(jule::MAX_I64);;
				(*(_246517_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab345486_primI64, ._field_Model=jule::Any(_246517_c, &__jule_any_type19), ._field_Constant=_246517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab793b7b:;
			{
				jule::Ptr<_1d8bd00bd_Const> _247317_c = static__1d8bd050d_NewI64(jule::MIN_I64);;
				(*(_247317_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab345486_primI64, ._field_Model=jule::Any(_247317_c, &__jule_any_type19), ._field_Constant=_247317_c});;
			}
		}
		else {
			_case_begin_1ab792eaa:;
			{
				_1ab22c46c_pushErr(_self_, _245936_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4),jule::Any((*(_245936_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab792e55:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab2452cb_evalU8TypeStatic(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0c1e7c_Token> _248635_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_248635_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab796a80:;
			{
				jule::Ptr<_1d8bd00bd_Const> _249117_c = static__1d8bd07c7_NewU64(255LLU);;
				(*(_249117_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab345750_primU8, ._field_Model=jule::Any(_249117_c, &__jule_any_type19), ._field_Constant=_249117_c});;
			}
		}
		else {
			_case_begin_1ab7962ee:;
			{
				_1ab22c46c_pushErr(_self_, _248635_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4),jule::Any((*(_248635_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab7966b7:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab24561c_evalU16TypeStatic(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0c1e7c_Token> _250436_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_250436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab799478:;
			{
				jule::Ptr<_1d8bd00bd_Const> _250917_c = static__1d8bd07c7_NewU64(65535LLU);;
				(*(_250917_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab345a19_primU16, ._field_Model=jule::Any(_250917_c, &__jule_any_type19), ._field_Constant=_250917_c});;
			}
		}
		else {
			_case_begin_1ab798be7:;
			{
				_1ab22c46c_pushErr(_self_, _250436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4),jule::Any((*(_250436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab7990b0:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab24595d_evalU32TypeStatic(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0c1e7c_Token> _252236_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_252236_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab79bd71:;
			{
				jule::Ptr<_1d8bd00bd_Const> _252717_c = static__1d8bd07c7_NewU64(4294967295LLU);;
				(*(_252717_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab345cd3_primU32, ._field_Model=jule::Any(_252717_c, &__jule_any_type19), ._field_Constant=_252717_c});;
			}
		}
		else {
			_case_begin_1ab79b5e0:;
			{
				_1ab22c46c_pushErr(_self_, _252236_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4),jule::Any((*(_252236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab79b9a8:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab245c9e_evalU64TypeStatic(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0c1e7c_Token> _254036_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_254036_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab79e769:;
			{
				jule::Ptr<_1d8bd00bd_Const> _254517_c = static__1d8bd07c7_NewU64(jule::MAX_U64);;
				(*(_254517_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab346256_primU64, ._field_Model=jule::Any(_254517_c, &__jule_any_type19), ._field_Constant=_254517_c});;
			}
		}
		else {
			_case_begin_1ab79ded8:;
			{
				_1ab22c46c_pushErr(_self_, _254036_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4),jule::Any((*(_254036_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab79e3a1:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab2460e0_evalF32TypeStatic(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0c1e7c_Token> _255836_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_255836_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab7a28e3:;
			{
				jule::Ptr<_1d8bd00bd_Const> _256517_c = static__1d8bd1124_NewF64(340282346638528860000000000000000000000.0);;
				(*(_256517_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab346520_primF32, ._field_Model=jule::Any(_256517_c, &__jule_any_type19), ._field_Constant=_256517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab7a3251:;
			{
				jule::Ptr<_1d8bd00bd_Const> _257317_c = static__1d8bd1124_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_257317_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab346520_primF32, ._field_Model=jule::Any(_257317_c, &__jule_any_type19), ._field_Constant=_257317_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1ab7a32b7:;
			{
				jule::Ptr<_1d8bd00bd_Const> _258117_c = static__1d8bd1124_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_258117_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab346520_primF32, ._field_Model=jule::Any(_258117_c, &__jule_any_type19), ._field_Constant=_258117_c});;
			}
		}
		else {
			_case_begin_1ab7a2580:;
			{
				_1ab22c46c_pushErr(_self_, _255836_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4),jule::Any((*(_255836_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab7a252a:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab246431_evalF64TypeStatic(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab0c1e7c_Token> _259436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_259436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab7a77b6:;
			{
				jule::Ptr<_1d8bd00bd_Const> _260117_c = static__1d8bd1124_NewF64(jule::MAX_F64);;
				(*(_260117_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab3467d9_primF64, ._field_Model=jule::Any(_260117_c, &__jule_any_type19), ._field_Constant=_260117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab7a8124:;
			{
				jule::Ptr<_1d8bd00bd_Const> _260917_c = static__1d8bd1124_NewF64(jule::MIN_F64);;
				(*(_260917_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab3467d9_primF64, ._field_Model=jule::Any(_260917_c, &__jule_any_type19), ._field_Constant=_260917_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1ab7a818a:;
			{
				jule::Ptr<_1d8bd00bd_Const> _261717_c = static__1d8bd1124_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_261717_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab3467d9_primF64, ._field_Model=jule::Any(_261717_c, &__jule_any_type19), ._field_Constant=_261717_c});;
			}
		}
		else {
			_case_begin_1ab7a7453:;
			{
				_1ab22c46c_pushErr(_self_, _259436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4),jule::Any((*(_259436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab7a73ed:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab24682c_evalPrimStatic(_1ab22be1c_Eval* _self_, jule::Str _263033_kind, jule::Ptr<_1ab0c1e7c_Token> _263044_ident) {
	{
		auto &_match_expr{ _263033_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ab7ab743:;
			{
				return _1ab243d35_evalIntTypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1ab7ab138:;
			{
				return _1ab244176_evalUintTypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ab7ab2e2:;
			{
				return _1ab2444b7_evalI8TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ab7ab358:;
			{
				return _1ab244808_evalI16TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ab7ab3be:;
			{
				return _1ab244b49_evalI32TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ab7ab435:;
			{
				return _1ab244e8a_evalI64TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ab7ac029:;
			{
				return _1ab2452cb_evalU8TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ab7ac090:;
			{
				return _1ab24561c_evalU16TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ab7ac106:;
			{
				return _1ab24595d_evalU32TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ab7ac16c:;
			{
				return _1ab245c9e_evalU64TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ab7ac1d3:;
			{
				return _1ab2460e0_evalF32TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ab7ac249:;
			{
				return _1ab246431_evalF64TypeStatic(_self_, _263044_ident);;
			}
		}
		else {
			_case_begin_1ab7a76ea:;
			{
				_1ab22c46c_pushErr(_self_, _263044_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_263033_kind, &__jule_any_type4),jule::Any((*(_263044_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab7a7695:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab246c28_evalTypeStatic(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab22a228_Data> _266237_d, jule::Ptr<_1ab0de890_SubIdentExpr> _266251_si) {
	{
		
		if ((_1ab25d16d_Prim((*(_266237_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7b1748:;
			{
				return _1ab24682c_evalPrimStatic(_self_, _1ab263937_Str(_1ab25d16d_Prim((*(_266237_d))._field_Kind.ptr()).ptr()), (*(_266251_si))._field_Ident);;
			}
		}
		else if ((_1ab25d921_Enum((*(_266237_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7b246e:;
			{
				return _1ab242174_evalEnumStatic(_self_, _1ab25d921_Enum((*(_266237_d))._field_Kind.ptr()), (*(_266251_si))._field_Ident);;
			}
		}
		else if ((_1ab25dba7_TypeEnum((*(_266237_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7b24d5:;
			{
				return _1ab242570_evalTypeEnumStatic(_self_, _1ab25dba7_TypeEnum((*(_266237_d))._field_Kind.ptr()), (*(_266251_si))._field_Ident);;
			}
		}
		else if ((_1ab25e6e1_Struct((*(_266237_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7b254b:;
			{
				return _1ab24296b_evalStructStatic(_self_, _1ab25e6e1_Struct((*(_266237_d))._field_Kind.ptr()), (*(_266251_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1ab7b1391:;
			{
				_1ab22c46c_pushErr(_self_, (*(_266251_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_266237_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab7b12e7:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab7b9300_comptimeObjSubIdent(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab14bc71_comptimeTypeInfo>* _267857_ct, jule::Ptr<_1ab22a228_Data>* _267877_d, jule::Ptr<_1ab0de890_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1ab22a228_Data> _267913_cd = _1ab152e75_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1ab22c46c_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_1ab22a228_Data> _1ab7bd5ce_comptimeObjSubIdent(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab137e9e_comptimeStructField>* _267857_ct, jule::Ptr<_1ab22a228_Data>* _267877_d, jule::Ptr<_1ab0de890_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1ab22a228_Data> _267913_cd = _1ab1397b9_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1ab22c46c_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_1ab22a228_Data> _1ab7c2847_comptimeObjSubIdent(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab144373_comptimeEnumField>* _267857_ct, jule::Ptr<_1ab22a228_Data>* _267877_d, jule::Ptr<_1ab0de890_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1ab22a228_Data> _267913_cd = _1ab145374_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1ab22c46c_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_1ab22a228_Data> _1ab7c6b04_comptimeObjSubIdent(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab146d15_comptimeParam>* _267857_ct, jule::Ptr<_1ab22a228_Data>* _267877_d, jule::Ptr<_1ab0de890_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1ab22a228_Data> _267913_cd = _1ab148a3c_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1ab22c46c_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_1ab22a228_Data> _1ab7cb0e2_comptimeObjSubIdent(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab1410b7_comptimeStatic>* _267857_ct, jule::Ptr<_1ab22a228_Data>* _267877_d, jule::Ptr<_1ab0de890_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1ab22a228_Data> _267913_cd = _1ab1428d2_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1ab22c46c_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_1ab22a228_Data> _1ab7d035a_comptimeObjSubIdent(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab153283_comptimeValue>* _267857_ct, jule::Ptr<_1ab22a228_Data>* _267877_d, jule::Ptr<_1ab0de890_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1ab22a228_Data> _267913_cd = _1ab1557c4_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1ab22c46c_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_1ab22a228_Data> _1ab7d45c3_comptimeObjSubIdent(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab1571cc_comptimeFile>* _267857_ct, jule::Ptr<_1ab22a228_Data>* _267877_d, jule::Ptr<_1ab0de890_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1ab22a228_Data> _267913_cd = _1ab1589e7_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1ab22c46c_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}



inline __jule_tuple_x_1ab22a228_Data__jule_tuple_bool _1ab2475ca_tryComptimeObjSubIdent(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab22a228_Data>* _268646_d, jule::Ptr<_1ab0de890_SubIdentExpr> _268660_si) {
	__jule_tuple_x_1ab22a228_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1ab261a34_comptimeTypeInfo((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7b77c6:;
			{
				jule::Ptr<_1ab14bc71_comptimeTypeInfo> _268917_ct = _1ab261a34_comptimeTypeInfo((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ab7b9300_comptimeObjSubIdent(_self_, &(_268917_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab260747_comptimeStructField((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7b741e:;
			{
				jule::Ptr<_1ab137e9e_comptimeStructField> _269217_ct = _1ab260747_comptimeStructField((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ab7bd5ce_comptimeObjSubIdent(_self_, &(_269217_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab260c64_comptimeEnumField((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7b7485:;
			{
				jule::Ptr<_1ab144373_comptimeEnumField> _269517_ct = _1ab260c64_comptimeEnumField((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ab7c2847_comptimeObjSubIdent(_self_, &(_269517_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab261281_comptimeParam((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7b74eb:;
			{
				jule::Ptr<_1ab146d15_comptimeParam> _269817_ct = _1ab261281_comptimeParam((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ab7c6b04_comptimeObjSubIdent(_self_, &(_269817_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab262051_comptimeStatic((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7b7562:;
			{
				jule::Ptr<_1ab1410b7_comptimeStatic> _270117_ct = _1ab262051_comptimeStatic((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ab7cb0e2_comptimeObjSubIdent(_self_, &(_270117_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab2622d7_comptimeValue((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7b7b4a:;
			{
				jule::Ptr<_1ab153283_comptimeValue> _270417_ct = _1ab2622d7_comptimeValue((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ab7d035a_comptimeObjSubIdent(_self_, &(_270417_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab26256d_comptimeFile((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7b7bb1:;
			{
				jule::Ptr<_1ab1571cc_comptimeFile> _270717_ct = _1ab26256d_comptimeFile((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ab7d45c3_comptimeObjSubIdent(_self_, &(_270717_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab7b73a8:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ab7b730e:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab2479c6_evalObjSubIdent(_1ab22be1c_Eval* _self_, jule::Ptr<_1ab22a228_Data> _271438_d, jule::Ptr<_1ab0de890_SubIdentExpr> _271452_si) {
	if (_1ab0c48db_IsIgnoreIdent((*((*(_271452_si))._field_Ident))._field_Kind)) {
		_1ab22c46c_pushErr(_self_, (*(_271452_si))._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1ab22a228_Data> _272117_compData;;
		jule::Bool _272127_ok = false;;
		({
			__jule_tuple_x_1ab22a228_Data__jule_tuple_bool __jule_assign_result = _1ab2475ca_tryComptimeObjSubIdent(_self_, &(_271438_d), _271452_si);
			_272117_compData = __jule_assign_result.__jule_result_arg0;
			_272127_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_272127_ok) {
			return _272117_compData;;
		};
	};
	jule::Ptr<_1ab25aa1c_TypeKind> _272713_kind = (*(_271438_d))._field_Kind;;
	{
		
		if ((_1ab25d68a_Ptr((*(_271438_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7d95b7:;
			{
				jule::Ptr<_1ab26a8d9_Ptr> _273013_ptr = _1ab25d68a_Ptr((*(_271438_d))._field_Kind.ptr());;
				if (_1ab26b423_IsUnsafe(_273013_ptr.ptr())) {
					goto _match_end_1ab7d9540;
				};
				if ((!(_1ab22ce62_isUnsafe(_self_)))) {
					_1ab22c46c_pushErr(_self_, (*(_271452_si))._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_272713_kind=(*(_1ab25d68a_Ptr((*(_271438_d))._field_Kind.ptr())))._field_Elem;
				_1ab257d5a_makeImplicitDeref(&(_271438_d), (*(_271452_si))._field_Ident);
			}
		}
		else if ((_1ab25d404_Sptr((*(_271438_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7d963e:;
			{
				_272713_kind=(*(_1ab25d404_Sptr((*(_271438_d))._field_Kind.ptr())))._field_Elem;
				_1ab257d5a_makeImplicitDeref(&(_271438_d), (*(_271452_si))._field_Ident);
			}
		}
		_match_end_1ab7d9540:;
	};
	{
		
		if ((_1ab25e977_Trait((*(_271438_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7dc796:;
			{
				return _1ab242e22_evalTraitSubIdent(_self_, _271438_d, _1ab25e977_Trait((*(_271438_d))._field_Kind.ptr()), (*(_271452_si))._field_Ident);;
			}
		}
		else if ((_1ab25e6e1_Struct(_272713_kind.ptr()) != nullptr)) {
			_case_begin_1ab7dc81d:;
			{
				jule::Ptr<_1ab10acb8_StructIns> _274813_s = _1ab25e6e1_Struct(_272713_kind.ptr());;
				if (_1ab255352_isInstancedStruct(_274813_s)) {
					jule::Bool _275021_usedReferenceElem = (_1ab25d404_Sptr((*(_271438_d))._field_Kind.ptr()) != nullptr);;
					return _1ab2439e4_evalStructSubIdent(_self_, _271438_d, _1ab25e6e1_Struct(_272713_kind.ptr()), _271452_si, _275021_usedReferenceElem);;
				};
			}
		}
		_match_end_1ab7dc741:;
	};
	_1ab22c46c_pushErr(_self_, (*(_271452_si))._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_271438_d))._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab247d17_evalSubIdent(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0de890_SubIdentExpr> _275836_si) {
	jule::Ptr<_1ab25aa1c_TypeKind> _275913_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_275913_prefix;
	});;
	jule::Ptr<_1ab22a228_Data> _276213_d = _1ab249368_evalExprKind(_self_, (*((*(_275836_si))._field_Expr))._field_Kind);;
	if ((_276213_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_276213_d))._field_Decl) {
		return _1ab246c28_evalTypeStatic(_self_.ptr(), _276213_d, _275836_si);;
	};
	return _1ab2479c6_evalObjSubIdent(_self_.ptr(), _276213_d, _275836_si);;
}



inline jule::Ptr<_1ab22a228_Data> _1ab248158_evalTuple(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0dc44d_TupleExpr> _277233_tup) {
	jule::Ptr<_1ab2686d9_Tuple> _277313_tupT = jule::new_ptr<_1ab2686d9_Tuple>();;
	(*(_277313_tupT))._field_Types=jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>>::alloc(0LL, (*(_277233_tup))._field_Expr.len());
	jule::Ptr<_1ab1158a5_TupleExprModel> _277613_model = jule::new_ptr<_1ab1158a5_TupleExprModel>(_1ab1158a5_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1ab22a228_Data>>::alloc(0LL, (*(_277233_tup))._field_Expr.len())});;
	jule::Bool _278013_ok = true;;
	{
		auto expr = &((*(_277233_tup))._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7e67e4:;
		if (it != expr_end) {
			jule::Ptr<_1ab0db77c_Expr> _278121_expr = *it;
			{
				jule::Ptr<_1ab22a228_Data> _278217_d = _1ab24a17c_evalExpr(_self_, _278121_expr);;
				if ((_278217_d == nullptr)) {
					_278013_ok=false;
					goto _iter_next_1ab7e67e4;
				};
				{ jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>> &__jule_push_dest = (*(_277313_tupT))._field_Types; __jule_push_dest.push((*(_278217_d))._field_Kind); };
				{ jule::Slice<jule::Ptr<_1ab22a228_Data>> &__jule_push_dest = (*(_277613_model))._field_Datas; __jule_push_dest.push(_278217_d); };
			}
			_iter_next_1ab7e67e4:;
			++it;
			goto _iter_begin_1ab7e67e4;
		}
		_iter_end_1ab7e67e4:;
	};
	if ((!(_278013_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_277313_tupT, 23)}), ._field_Model=jule::Any(_277613_model, &__jule_any_type81), });;
}



inline jule::Ptr<_1ab22a228_Data> _1ab248554_evalMap(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab269289_Map> _280131_m, jule::Ptr<_1ab0e1c7c_BraceLit> _280144_lit) {
	jule::Ptr<_1ab113771_MapExprModel> _280213_model = jule::new_ptr<_1ab113771_MapExprModel>(_1ab113771_MapExprModel{._field_KeyKind=(*(_280131_m))._field_Key, ._field_ValKind=(*(_280131_m))._field_Val, });;
	{
		auto expr = &((*(_280144_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7ea287:;
		if (it != expr_end) {
			jule::Ptr<_1ab0db77c_Expr> _280721_expr = *it;
			{
				{
					auto &_match_expr{ (*(_280721_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1ab7eb321:;
						{
							goto _match_end_1ab7eae25;
						}
					}
					else {
						_case_begin_1ab7eae7a:;
						{
							_1ab22c46c_pushErr(_self_.ptr(), (*(_280144_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1ab7eae25:;
				};
				jule::Ptr<_1ab0e25a7_KeyValPair> _281717_pair = (*(_280721_expr))._field_Kind.cast_ptr<_1ab0e25a7_KeyValPair>(&__jule_any_type78);;
				jule::Ptr<_1ab22a228_Data> _281917_key = _1ab24a17c_evalExpr(_self_, (*(_281717_pair))._field_Key);;
				if ((_281917_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1ab22a228_Data> _282417_val = _1ab24a17c_evalExpr(_self_, (*(_281717_pair))._field_Val);;
				if ((_282417_val == nullptr)) {
					return nullptr;;
				};
				_1ab1b0cc4_checkAssignType((*(_self_))._field_s, false, &((*(_280131_m))._field_Key), &(_281917_key), (*(_281717_pair))._field_Colon);
				_1ab1b0cc4_checkAssignType((*(_self_))._field_s, false, &((*(_280131_m))._field_Val), &(_282417_val), (*(_281717_pair))._field_Colon);
				{ jule::Slice<jule::Ptr<_1ab1132ba_KeyValPairExprModel>> &__jule_push_dest = (*(_280213_model))._field_Entries; __jule_push_dest.push(jule::new_ptr<_1ab1132ba_KeyValPairExprModel>(_1ab1132ba_KeyValPairExprModel{._field_Key=(*(_281917_key))._field_Model, ._field_Val=(*(_282417_val))._field_Model})); };
			}
			_iter_next_1ab7ea287:;
			++it;
			goto _iter_begin_1ab7ea287;
		}
		_iter_end_1ab7ea287:;
	};
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_280131_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_280213_model, &__jule_any_type98), });;
}



inline jule::Ptr<_1ab22a228_Data> _1ab248895_evalBraceLit(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0e1c7c_BraceLit> _284536_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1ab802239:;
			{
				_1ab22c46c_pushErr(_self_.ptr(), (*(_284536_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ab25ec0d_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ab8022b1:;
			{
				return _1ab248554_evalMap(_self_, _1ab25ec0d_Map((*(_self_))._field_prefix.ptr()), _284536_lit);;
			}
		}
		else if ((_1ab25e6e1_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ab8018a9:;
			{
				return _1ab23ec54_evalStructLitExplicit(_self_, _1ab25e6e1_Struct((*(_self_))._field_prefix.ptr()), (*(_284536_lit))._field_Exprs, (*(_284536_lit))._field_Token);;
			}
		}
		else {
			_case_begin_1ab801502:;
			{
				_1ab22c46c_pushErr(_self_.ptr(), (*(_284536_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab7ea919:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab248bd6_evalAnonFunc(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0e9108_FnDecl> _286036_decl) {
	_1ab26c8ca_typeChecker _286113_tc = _1ab26c8ca_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*(_self_))._field_lookup, ._field_lookup=(*(_self_))._field_lookup, };;
	jule::Ptr<_1ab120d00_FnIns> _286613_ins = _1ab2745a2_buildFunc(&_286113_tc, _286036_decl);;
	if ((_286613_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ab8071ea:;
			{
				jule::Ptr<_1ab16aab4_scopeChecker> _287217_sc = (*(_self_))._field_lookup.cast_ptr<_1ab16aab4_scopeChecker>(0);;
				jule::Ptr<_1ab16aab4_scopeChecker> _287317_scc = _1ab17c80c_newChildChecker(_287217_sc);;
				(*(_287317_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ab16961d_scopeLabel>>>(nullptr);
				(*(_287317_scc))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ab169ba1_scopeGoto>>>(nullptr);
				(*(_287317_scc))._field_owner=nullptr;
				(*(_287317_scc))._field_childIndex=0LL;
				(*(_287317_scc))._field_it=0LLU;
				(*(_287317_scc))._field_cse=0LLU;
				(*(_287317_scc))._field_owner=_286613_ins;
				_1ab1c23ac_checkFnInsSc((*(_self_))._field_s.ptr(), &(_286613_ins), &(_287317_scc));
			}
		}
		else {
			_case_begin_1ab806d76:;
			{
				_1ab1c29c8_checkFnIns((*(_self_))._field_s, &(_286613_ins));
			}
		}
		_match_end_1ab806c77:;
	};
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_286613_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1ab112de1_AnonFnExprModel>(_1ab112de1_AnonFnExprModel{._field_Func=_286613_ins, ._field_Global=_1ab22d1e8_isGlobal(_self_.ptr())}), &__jule_any_type99), });;
}



inline jule::Ptr<_1ab22a228_Data> _1ab249027_evalBinop(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0ded46_BinopExpr> _289533_op) {
	_1ab24c5d0_binaryEval _289613_bs = static__1ab24cbb8_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1ab2635e6_Prim> _289913_prim = _1ab25d16d_Prim((*(_self_))._field_prefix.ptr());;
		if (((_289913_prim == nullptr) || (!(_1d8bce9c4_IsNum(_1ab263937_Str(_289913_prim.ptr())))))) {
			jule::Ptr<_1ab25aa1c_TypeKind> _290121_prefix = (*(_self_))._field_prefix;;
			(*(_self_))._field_prefix=nullptr;
			__JULE_DEFER({
				(*(_self_))._field_prefix=_290121_prefix;
			});;
			return _1ab25365d_eval(&_289613_bs, &(_289533_op));;
		};
	};
	return _1ab25365d_eval(&_289613_bs, &(_289533_op));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab249368_evalExprKind(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Any _291036_kind) {
	{
		auto &_match_expr{ _291036_kind };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ab80ebc5:;
			{
				jule::Ptr<_1ab0dba79_RangeExpr> _291317_e = _291036_kind.cast_ptr<_1ab0dba79_RangeExpr>(&__jule_any_type100);;
				return _1ab249368_evalExprKind(_self_, (*((*(_291317_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ab80e862:;
			{
				return _1ab22e99c_evalLit(_self_.ptr(), _291036_kind.cast_ptr<_1ab0dc827_LitExpr>(&__jule_any_type101));;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ab80ee06:;
			{
				return _1ab2346d8_evalIdent(_self_.ptr(), _291036_kind.cast_ptr<_1ab0dd1a7_IdentExpr>(&__jule_any_type79));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1ab80ee7d:;
			{
				return _1ab234a29_evalUnary(_self_, _291036_kind.cast_ptr<_1ab0dd839_UnaryExpr>(&__jule_any_type87));;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1ab810005:;
			{
				return _1ab234d6a_evalVariadic(_self_, _291036_kind.cast_ptr<_1ab0ddc13_VariadicExpr>(&__jule_any_type75));;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1ab81007c:;
			{
				return _1ab2351ab_evalUnsafe(_self_, _291036_kind.cast_ptr<_1ab0dcc01_UnsafeExpr>(&__jule_any_type102));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ab810159:;
			{
				return _1ab235ce4_evalSliceExpr(_self_, _291036_kind.cast_ptr<_1ab0e2ca0_SliceExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1ab8101d1:;
			{
				return _1ab23948a_evalIndexing(_self_, _291036_kind.cast_ptr<_1ab0e3740_IndexingExpr>(&__jule_any_type103));;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1ab810258:;
			{
				return _1ab23a7bb_evalSlicing(_self_, _291036_kind.cast_ptr<_1ab0e3da0_SlicingExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1ab8102d0:;
			{
				return _1ab23e45c_evalCast(_self_, _291036_kind.cast_ptr<_1ab0de0dc_CastExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1ab810357:;
			{
				return _1ab23e79d_evalNsSelection(_self_.ptr(), _291036_kind.cast_ptr<_1ab0de4b6_NsSelectionExpr>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1ab8103ce:;
			{
				return _1ab240095_evalStructLit(_self_, _291036_kind.cast_ptr<_1ab0e17c6_StructLit>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ab810456:;
			{
				return _1ab24066c_evalType(_self_.ptr(), _291036_kind.cast_ptr<_1ab0d7448_TypeDecl>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1ab8104cd:;
			{
				return _1ab241c78_evalFnCall(_self_, _291036_kind.cast_ptr<_1ab0e04a6_FnCallExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ab810555:;
			{
				return _1ab247d17_evalSubIdent(_self_, _291036_kind.cast_ptr<_1ab0de890_SubIdentExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ab8105cc:;
			{
				return _1ab248158_evalTuple(_self_, _291036_kind.cast_ptr<_1ab0dc44d_TupleExpr>(&__jule_any_type80));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1ab810654:;
			{
				return _1ab248895_evalBraceLit(_self_, _291036_kind.cast_ptr<_1ab0e1c7c_BraceLit>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ab8106cb:;
			{
				return _1ab248bd6_evalAnonFunc(_self_, _291036_kind.cast_ptr<_1ab0e9108_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1ab810753:;
			{
				return _1ab249027_evalBinop(_self_, _291036_kind.cast_ptr<_1ab0ded46_BinopExpr>(&__jule_any_type109));;
			}
		}
		else {
			_case_begin_1ab80e9e9:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab80e994:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab2496a9_eval1(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0db77c_Expr> _295829_expr) {
	jule::Ptr<_1ab22a228_Data> _295913_d = _1ab249368_evalExprKind(_self_, (*(_295829_expr))._field_Kind);;
	if (((_295913_d == nullptr) || ((*(_295913_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1ab25e45a_Fn((*(_295913_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab81b4d9:;
			{
				jule::Ptr<_1ab120d00_FnIns> _296617_f = _1ab25e45a_Fn((*(_295913_d))._field_Kind.ptr());;
				if (_1ab122285_IsBuiltin(_296617_f.ptr())) {
					_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_295829_expr))._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1ab81ab04;
				};
				if (((*(_296617_f))._field_Generics.len() != (*((*(_296617_f))._field_Decl))._field_Generics.len())) {
					_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_295829_expr))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!((*((*(_296617_f))._field_Decl))._field_Statically)) && _1ab11d605_IsMethod((*(_296617_f))._field_Decl.ptr()))) {
					_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_295829_expr))._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1ab81ab04:;
	};
	return _295913_d;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab2499ea_eval(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0db77c_Expr> _298528_expr) {
	jule::Ptr<_1ab22a228_Data> _298613_d = _1ab2496a9_eval1(_self_, _298528_expr);;
	if ((_298613_d == nullptr)) {
		return nullptr;;
	};
	if (((((*(_self_))._field_owner == nullptr) || (!((*((*(_self_))._field_owner))._field_Constant))) && _1ab26022a_comptime((*(_298613_d))._field_Kind.ptr()))) {
		_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), (*(_298528_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _298613_d;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab249d3b_evalExpr1(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0db77c_Expr> _300033_expr) {
	jule::Ptr<_1ab22a228_Data> _300113_d = _1ab2496a9_eval1(_self_, _300033_expr);;
	{
		
		if ((_300113_d == nullptr)) {
			_case_begin_1bc70d1cd:;
			{
				return nullptr;;
			}
		}
		else if ((*(_300113_d))._field_Decl) {
			_case_begin_1bc70d255:;
			{
				_1ab22c46c_pushErr(_self_.ptr(), (*(_300033_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1bc70d112:;
			{
				return _300113_d;;
			}
		}
		_match_end_1bc70d09b:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab24a17c_evalExpr(jule::Ptr<_1ab22be1c_Eval> _self_, jule::Ptr<_1ab0db77c_Expr> _301632_expr) {
	jule::Ptr<_1ab22a228_Data> _301713_d = _1ab2499ea_eval(_self_, _301632_expr);;
	{
		
		if ((_301713_d == nullptr)) {
			_case_begin_1bc70ee7c:;
			{
				return nullptr;;
			}
		}
		else if ((*(_301713_d))._field_Decl) {
			_case_begin_1bc710004:;
			{
				_1ab22c46c_pushErr(_self_.ptr(), (*(_301632_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1bc70edb1:;
			{
				return _301713_d;;
			}
		}
		_match_end_1bc70ed4a:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab22be1c_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1ab24a644_unaryEval static__1ab24aa84_new(jule::Ptr<_1ab22be1c_Eval> _303723_e) {
	return _1ab24a644_unaryEval{._field_e=_303723_e, };;
}



inline void _1ab24ac82_minus(_1ab24a644_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1bc711b3d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ab25d16d_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc71180d:;
			{
				if ((!(_1d8bce9c4_IsNum(_1ab25add5_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ab25e6e1_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc711874:;
			{
				if (((*(_1ab25e6e1_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bc711797:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bc710851:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1ab22aaec_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1d8bd4ac8_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bc71636d:;
				{
					_1d8bd3b0a_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((-(_1d8bd24cc_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1d8bd408e_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bc7163e5:;
				{
					_1d8bd3038_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_1d8bd1993_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1d8bd4325_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bc715ed8:;
				{
					_1d8bd3038_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_1d8bd2763_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1bc715e72:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3075:17"));;
				}
			}
			_match_end_1bc715db7:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ab110581_UnaryExprModel>(_1ab110581_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab22a228_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1ab24ae80_plus(_1ab24a644_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1bc71bb26:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ab25d16d_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc71b7e6:;
			{
				if ((!(_1d8bce9c4_IsNum(_1ab25add5_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ab25e6e1_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc71b85c:;
			{
				if (((*(_1ab25e6e1_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bc71b780:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bc71b6b4:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1ab22aaec_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1d8bd4ac8_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bc721356:;
				{
					_1d8bd3b0a_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((+(_1d8bd24cc_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1d8bd408e_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bc7213cd:;
				{
					_1d8bd3038_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_1d8bd1993_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1d8bd4325_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bc720ec1:;
				{
					_1d8bd3038_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_1d8bd2763_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1bc720e5a:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3120:17"));;
				}
			}
			_match_end_1bc720da0:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ab110581_UnaryExprModel>(_1ab110581_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab22a228_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1ab24b17d_caret(_1ab24a644_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1bc726adc:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ab25d16d_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7267ac:;
			{
				if ((!(_1d8bce3b9_IsInt(_1ab25add5_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ab25e6e1_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc726823:;
			{
				if (((*(_1ab25e6e1_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bc726746:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bc72667a:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1ab22aaec_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1d8bd408e_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bc72b30b:;
				{
					_1d8bd3038_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((~(_1d8bd1993_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1d8bd4325_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bc72b383:;
				{
					_1d8bd32e1_SetU64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::U64>((~(_1d8bd1c29_ReadU64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1bc72ae21:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3163:17"));;
				}
			}
			_match_end_1bc72ad66:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ab110581_UnaryExprModel>(_1ab110581_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab22a228_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1ab24b37b_excl(_1ab24a644_unaryEval* _self_) {
	jule::Ptr<_1ab2635e6_Prim> _31779_t = _1ab25d16d_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_31779_t == nullptr) || (!(_1ab2667e7_IsBool(_31779_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1ab22aaec_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1d8bd45ab_IsBool((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bc732510:;
				{
					_1d8bd3599_SetBool((*((*(_self_))._field_d))._field_Constant.ptr(), (!(_1d8bd1eb0_ReadBool((*((*(_self_))._field_d))._field_Constant.ptr()))));
				}
			}
			else {
				_case_begin_1bc732136:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3191:17"));;
				}
			}
			_match_end_1bc73206a:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ab110581_UnaryExprModel>(_1ab110581_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab22a228_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1ab24b579_star(_1ab24a644_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ab110581_UnaryExprModel>(_1ab110581_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab22a228_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_1ab25d68a_Ptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc735d1b:;
			{
				if ((!(_1ab22ce62_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ab26a8d9_Ptr> _321617_t = _1ab25d68a_Ptr((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (_1ab26b423_IsUnsafe(_321617_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*((*(_self_))._field_d))._field_Kind=(*(_321617_t))._field_Elem;
				(*((*(_self_))._field_d))._field_Mutable=true;
			}
		}
		else if ((_1ab25d404_Sptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7359ec:;
			{
				(*((*(_self_))._field_d))._field_Kind=(*(_1ab25d404_Sptr((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Elem;
			}
		}
		else {
			_case_begin_1bc735986:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bc734a1d:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_Lvalue=true;
}



inline void _1ab24b777_amper(_1ab24a644_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bc73dd79:;
			{
				jule::Ptr<_1ab110e55_StructLitExprModel> _323717_lit = (*((*(_self_))._field_d))._field_Model.cast_ptr<_1ab110e55_StructLitExprModel>(&__jule_any_type94);;
				_1ab2544b6_makeStructLitAlloc(&((*(_self_))._field_d), &(_323717_lit));
			}
		}
		else {
			_case_begin_1bc73b382:;
			{
				{
					
					if (_1ab276906_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1bc73ae31:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab26a8d9_Ptr>(_1ab26a8d9_Ptr{._field_Elem=(*((*(_self_))._field_d))._field_Kind}), 26)});
							(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ab110581_UnaryExprModel>(_1ab110581_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab22a228_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_1bc73b8b0:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1bc73b7e4:;
				};
			}
		}
		_match_end_1bc73b32c:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
}



inline void _1ab24b975_typeDecl(_1ab24a644_unaryEval* _self_) {
	_1ab26c8ca_typeChecker _326113_tc = _1ab26c8ca_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*((*(_self_))._field_e))._field_lookup, ._field_lookup=(*((*(_self_))._field_e))._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bc740441:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab272cba_buildPtrFromType(&_326113_tc, &((*((*(_self_))._field_d))._field_Kind)), 26)});
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Kind, &__jule_any_type83);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bc7439d8:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab272638_buildSptrFromType(&_326113_tc, &((*((*(_self_))._field_d))._field_Kind)), 21)});
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Kind, &__jule_any_type83);
			}
		}
		else {
			_case_begin_1bc741d16:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bc741cb1:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1ab24bb73_evalData(_1ab24a644_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bc747525:;
			{
				jule::Ptr<_1ab25aa1c_TypeKind> _328617_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*((*(_self_))._field_e))._field_prefix=nullptr;
				(*(_self_))._field_d=_1ab2499ea_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*((*(_self_))._field_e))._field_prefix=_328617_prefix;
			}
		}
		else {
			_case_begin_1bc74713a:;
			{
				(*(_self_))._field_d=_1ab2499ea_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1bc7470b3:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab24beb4_eval(_1ab24a644_unaryEval* _self_, jule::Ptr<_1ab0dd839_UnaryExpr> _329527_u) {
	(*(_self_))._field_u=_329527_u;
	_1ab24bb73_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1ab24b975_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1ab25aa1c_TypeKind> _33069_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1bc74bb23:;
			{
				_1ab24ac82_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1bc74b826:;
			{
				_1ab24ae80_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bc74b88c:;
			{
				_1ab24b17d_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1bc74b903:;
			{
				_1ab24b37b_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bc74b969:;
			{
				_1ab24b579_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bc74be75:;
			{
				_1ab24b777_amper(_self_);
			}
		}
		else {
			_case_begin_1bc74b7b0:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1bc74b75a:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1bc74bedb:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1ab25add5_Str(_33069_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_1ab22aaec_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1bc74d74b:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1bc74d6e6:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab24a644_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1ab24c5d0_binaryEval static__1ab24cbb8_newPlain(jule::Ptr<_1ab22be1c_Eval> _334328_e) {
	return _1ab24c5d0_binaryEval{._field_e=_334328_e, };;
}



inline _1ab24c5d0_binaryEval static__1ab24d009_new(jule::Ptr<_1ab22be1c_Eval> _334923_e, jule::Ptr<_1ab0c1e7c_Token> _334937_op) {
	return _1ab24c5d0_binaryEval{._field_e=_334923_e, ._field_op=_334937_op};;
}



inline jule::Bool _1ab24d290_checkTypeCompatibility(_1ab24c5d0_binaryEval* _self_) {
	return _1ab1b127a_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*((*(_self_))._field_r))._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _1ab24d526_checkStructCommonOperatorCompatibility(_1ab24c5d0_binaryEval* _self_) {
	jule::Ptr<_1ab120d00_FnIns> _336317_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1bc7537d9:;
			{
				_336317_overload=(*(_1ab25e6e1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1bc755335:;
			{
				_336317_overload=(*(_1ab25e6e1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1bc75539b:;
			{
				_336317_overload=(*(_1ab25e6e1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1bc753d17:;
			{
				_336317_overload=(*(_1ab25e6e1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1bc753d7d:;
			{
				_336317_overload=(*(_1ab25e6e1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bc753de4:;
			{
				_336317_overload=(*(_1ab25e6e1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bc753e5a:;
			{
				_336317_overload=(*(_1ab25e6e1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bc755489:;
			{
				_336317_overload=(*(_1ab25e6e1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1bc755500:;
			{
				_336317_overload=(*(_1ab25e6e1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bc755566:;
			{
				_336317_overload=(*(_1ab25e6e1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1bc753ca1:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1bc753c4b:;
	};
	if ((_336317_overload == nullptr)) {
		_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1ab11ed54_ParamIns> _339513_p = (*(_336317_overload))._field_Params[1LL];;
	return _1ab1b0cc4_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*(_339513_p))._field_Decl))._field_Reference, &((*(_339513_p))._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1ab22a228_Data> _1ab24d7ac_evalComptimeTypeInfo(_1ab24c5d0_binaryEval* _self_) {
	jule::Ptr<_1ab14bc71_comptimeTypeInfo> _340013_r = _1ab261a34_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_340013_r == nullptr)) {
		_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab14bc71_comptimeTypeInfo> _340513_l = _1ab261a34_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1bc763695:;
			{
				jule::Ptr<_1d8bd00bd_Const> _340817_constant = static__1d8bd0a91_NewBool(_1ab25b226_Equal((*(_340513_l))._field_base, (*(_340013_r))._field_base));;
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, ._field_Model=jule::Any(_340817_constant, &__jule_any_type19), ._field_Constant=_340817_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bc7648b6:;
			{
				jule::Ptr<_1d8bd00bd_Const> _341517_constant = static__1d8bd0a91_NewBool((!(_1ab25b226_Equal((*(_340513_l))._field_base, (*(_340013_r))._field_base))));;
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, ._field_Model=jule::Any(_341517_constant, &__jule_any_type19), ._field_Constant=_341517_constant});;
			}
		}
		else {
			_case_begin_1bc763332:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bc7632cc:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab24da43_evalNil(_1ab24c5d0_binaryEval* _self_) {
	if ((!(_1ab25c8ba_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bc767215:;
			{
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, });;
			}
		}
		else {
			_case_begin_1bc768821:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bc7687bb:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab24dcc9_evalEnum(_1ab24c5d0_binaryEval* _self_) {
	jule::Ptr<_1ab133890_Enum> _344613_enm = _1ab25d921_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bc76ab31:;
			{
				jule::Ptr<_1ab25aa1c_TypeKind> _345017_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1ab25d921_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
					_345017_rkind=(*((*(_1ab25d921_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind))._field_Kind;
				};
				if ((!(_1ab1b127a_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_344613_enm))._field_Kind))._field_Kind), &(_345017_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, });;
			}
		}
		_match_end_1bc76aacb:;
	};
	if (((_1ab25d921_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr) || (_344613_enm != _1ab25d921_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bc7712b8:;
			{
				if ((!(_1d8bce9c4_IsNum(_1ab25add5_Str((*((*(_344613_enm))._field_Kind))._field_Kind.ptr()))))) {
					_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bc772154:;
			{
				jule::Ptr<_1ab132d23_EnumItem> _348013_first = (*(_344613_enm))._field_Items[0LL];;
				{
					
					if (_1d8bd408e_IsI64((*((*((*(_348013_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1bc775333:;
						{
							if ((_1d8bd1993_ReadI64((*((*((*(_348013_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_1bc779557;
							};
							goto _julec_label_1bc777b3d;
						}
					}
					else if (_1d8bd4325_IsU64((*((*((*(_348013_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1bc7753aa:;
						{
							if ((_1d8bd1c29_ReadU64((*((*((*(_348013_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_1bc779557;
							};
							goto _julec_label_1bc777b3d;
						}
					}
					else {
						_case_begin_1bc774e48:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3493:17"));;
						}
					}
					_match_end_1bc774dd2:;
				};
				_julec_label_1bc777b3d:;
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_1ab22c7d0_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1bc779557:;
				goto _case_begin_1bc7721ba;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bc7721ba:;
			{
				if (((_1ab25d16d_Prim((*((*(_344613_enm))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1d8bce3b9_IsInt(_1ab263937_Str(_1ab25d16d_Prim((*((*(_344613_enm))._field_Kind))._field_Kind.ptr()).ptr())))))) {
					_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bc770e55:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bc770e00:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab24e060_evalTypeEnum(_1ab24c5d0_binaryEval* _self_) {
	jule::Ptr<_1ab13509a_TypeEnum> _351313_enm = _1ab25dba7_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1ab24d290_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bc77eb34:;
			{
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, });;
			}
		}
		else {
			_case_begin_1bc77dea7:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab1353db_Str(_351313_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bc77e76b:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab24e2e6_evalSptr(_1ab24c5d0_binaryEval* _self_) {
	if ((!(_1ab24d290_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bc780cab:;
			{
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, });;
			}
		}
		else {
			_case_begin_1bc781a37:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bc7819d2:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab24e57c_evalPtr(_1ab24c5d0_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1bc783e13:;
			{
				if ((!(_1ab24d290_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1bc785134:;
			{
				if ((_1ab25d68a_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1ab26b423_IsUnsafe(_1ab25d68a_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()).ptr())) {
					_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				};
				if ((!(_1ab2556c6_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bc783484:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bc78340c:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab24e813_evalArr(_1ab24c5d0_binaryEval* _self_) {
	if ((!(_1ab24d290_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bc77d3e6:;
			{
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, });;
			}
		}
		else {
			_case_begin_1bc78b03b:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bc78aed6:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab24ea99_evalSlc(_1ab24c5d0_binaryEval* _self_) {
	if ((!(_1ab24d290_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bc78c779:;
			{
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, });;
			}
		}
		else {
			_case_begin_1bc78d505:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bc78d4a0:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab24ed30_evalStruct(_1ab24c5d0_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1bc7905d4:;
			{
				if (((*(_1ab25e6e1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1bc79064a:;
			{
				if (((*(_1ab25e6e1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1bc7906b1:;
			{
				if (((*(_1ab25e6e1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bc790738:;
			{
				if (((*(_1ab25e6e1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bc7907b0:;
			{
				if ((!(_1ab24d290_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, });;
			}
		}
		_match_end_1bc78edca:;
	};
	if ((!(_1ab24d526_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab2500b6_evalTrait(_1ab24c5d0_binaryEval* _self_) {
	if ((!(_1ab24d290_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bc79a29d:;
			{
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, });;
			}
		}
		else {
			_case_begin_1bc79aac8:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bc79aa73:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab25034c_evalAny(_1ab24c5d0_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bc79c668:;
			{
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, });;
			}
		}
		else {
			_case_begin_1bc79c525:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bc79c49d:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab2505d3_evalBool(_1ab24c5d0_binaryEval* _self_) {
	if ((!(_1ab24d290_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1bc79ddea:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bc79eb76:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bc79eb21:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab250869_evalStr(_1ab24c5d0_binaryEval* _self_) {
	jule::Str _371213_rk = _1ab25add5_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_371213_rk.equal("str", 3))) {
		_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_371213_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1bc7a376d:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bc7a454e:;
			{
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, });;
			}
		}
		else {
			_case_begin_1bc7a31a7:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bc7a33a5:;
	};
}



inline void _1ab250a67_setTypeToGreater(_1ab24c5d0_binaryEval* _self_) {
	jule::Ptr<_1ab2635e6_Prim> _37379_lp = _1ab25d16d_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1ab2635e6_Prim> _37389_rp = _1ab25d16d_Prim((*((*(_self_))._field_r))._field_Kind.ptr());;
	if (_1ab22aaec_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1ab22aaec_IsConst((*(_self_))._field_r.ptr())))) {
			(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37389_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1bc7a8993;
	};
	if (_1ab22aaec_IsConst((*(_self_))._field_r.ptr())) {
		(*((*((*(_self_))._field_r))._field_Constant))._field_Kind=(*(_37379_lp))._field_Kind;
		return;;
	};
	_julec_label_1bc7a8993:;
	if (((*((*(_self_))._field_l))._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_1ab22aaec_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37389_rp))._field_Kind;
		};
		(*((*(_self_))._field_l))._field_untyped=false;
		return;;
	} else if (((!((*((*(_self_))._field_l))._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		return;;
	};
	if (_1d8bccc8b_IsGreater((*(_37389_rp))._field_Kind, (*(_37379_lp))._field_Kind)) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_1ab22aaec_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37389_rp))._field_Kind;
		};
	};
}



inline void _1ab250d20_checkModData(_1ab24c5d0_binaryEval* _self_, jule::Ptr<_1ab22a228_Data>* _377036_d) {
	if ((!(_1ab22aaec_IsConst((*(_377036_d)).ptr())))) {
		if (((_1ab25d16d_Prim((*((*(_377036_d))))._field_Kind.ptr()) == nullptr) || (!(_1d8bce3b9_IsInt((*(_1ab25d16d_Prim((*((*(_377036_d))))._field_Kind.ptr())))._field_Kind))))) {
			_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1ab2111ba_sigAssignable(jule::Str::lit("i64", 3), _377036_d)) {
			_case_begin_1bc7b1704:;
			{
				_1d8bd3038_SetI64((*((*(_377036_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1d8bd2763_AsI64((*((*(_377036_d))))._field_Constant.ptr())));
			}
		}
		else if (_1ab211583_unsigAssignable(jule::Str::lit("u64", 3), _377036_d)) {
			_case_begin_1bc7b177b:;
			{
				_1d8bd32e1_SetU64((*((*(_377036_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1d8bd29e9_AsU64((*((*(_377036_d))))._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1bc7b1380:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc7b132a:;
	};
}



inline void _1ab25101d_mod(_1ab24c5d0_binaryEval* _self_) {
	_1ab250d20_checkModData(_self_, &((*(_self_))._field_l));
	_1ab250d20_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1ab251419_numbersAreCompatibile(_1ab24c5d0_binaryEval* _self_, jule::Str* _379237_lk, jule::Str* _379247_rk) {
	if ((!(_1d8bce9c4_IsNum((*(_379247_rk)))))) {
		return false;;
	};
	if ((_1ab22aaec_IsConst((*(_self_))._field_l.ptr()) && (*((*(_self_))._field_l))._field_untyped)) {
		return true;;
	};
	if ((*(_379237_lk)).equal("f32", 3)) {
		if ((_1ab22aaec_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return true;;
		};
		return (*(_379247_rk)).equal("f32", 3);;
	};
	if ((*(_379237_lk)).equal("f64", 3)) {
		if ((_1ab22aaec_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return true;;
		};
		return (*(_379247_rk)).equal("f64", 3);;
	};
	if ((_1ab22aaec_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
		return true;;
	};
	return ((*(_379237_lk)) == (*(_379247_rk)));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab2516a0_evalFloat(_1ab24c5d0_binaryEval* _self_) {
	jule::Str _38189_lk = (*(_1ab25d16d_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38199_rk = (*(_1ab25d16d_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	if ((!(_1ab251419_numbersAreCompatibile(_self_, &(_38189_lk), &(_38199_rk))))) {
		_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38189_lk, &__jule_any_type4),jule::Any(_38199_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1bc7baba3:;
			{
				if (((!(_1ab22aaec_IsConst((*(_self_))._field_l.ptr()))) || (!(_1ab211907_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l)))))) {
					_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38189_lk, &__jule_any_type4),jule::Any(_38199_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_1ab22aaec_IsConst((*(_self_))._field_r.ptr()))) || (!(_1ab211907_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r)))))) {
					_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38189_lk, &__jule_any_type4),jule::Any(_38199_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1d8bd3038_SetI64((*((*(_self_))._field_l))._field_Constant.ptr(), static_cast<jule::I64>(_1d8bd2763_AsI64((*((*(_self_))._field_l))._field_Constant.ptr())));
				_1d8bd32e1_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), static_cast<jule::U64>(_1d8bd29e9_AsU64((*((*(_self_))._field_r))._field_Constant.ptr())));
				if ((!(_1ab254e78_isOkForShifting(&((*(_self_))._field_r))))) {
					_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1bc7bab4d:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bc7bb247:;
			{
				_1ab250a67_setTypeToGreater(_self_);
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, });;
			}
		}
		_match_end_1bc7bb1e2:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1bc7b9de4:;
			{
				_1ab250a67_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bc7c3716:;
			{
				if ((!(_1d8bce3b9_IsInt(_38199_rk)))) {
					_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38189_lk, &__jule_any_type4),jule::Any(_38199_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1ab25101d_mod(_self_);
				_1ab250a67_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1bc7c2061:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bc7c2a56:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab251936_evalInt(_1ab24c5d0_binaryEval* _self_) {
	jule::Str _38829_lk = (*(_1ab25d16d_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38839_rk = (*(_1ab25d16d_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1bc7c6b6a:;
			{
				if (((!(_1d8bce3b9_IsInt(_38829_lk))) || (!(_1d8bce3b9_IsInt(_38839_rk))))) {
					_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38829_lk, &__jule_any_type4),jule::Any(_38839_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_1ab254e78_isOkForShifting(&((*(_self_))._field_r))))) {
					_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1bc7c6ede:;
	};
	if ((!(_1ab251419_numbersAreCompatibile(_self_, &(_38829_lk), &(_38839_rk))))) {
		_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38829_lk, &__jule_any_type4),jule::Any(_38839_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bc7ca289:;
			{
				return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343e13_primBool, });;
			}
		}
		_match_end_1bc7ca234:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bc7c7132:;
			{
				_1ab250a67_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bc7cc412:;
			{
				_1ab25101d_mod(_self_);
				_1ab250a67_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bc7cb488:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bc7cb433:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab251bbc_evalPrim(_1ab24c5d0_binaryEval* _self_) {
	jule::Ptr<_1ab2635e6_Prim> _39399_prim = _1ab25d16d_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1ab2667e7_IsBool(_39399_prim.ptr())) {
			_case_begin_1bc7ce700:;
			{
				return _1ab2505d3_evalBool(_self_);;
			}
		}
		else if (_1ab266a7d_IsStr(_39399_prim.ptr())) {
			_case_begin_1bc7ce777:;
			{
				return _1ab250869_evalStr(_self_);;
			}
		}
		_match_end_1bc7ce656:;
	};
	if ((_1ab25d16d_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr)) {
		_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ab263937_Str(_39399_prim.ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_1d8bce70a_IsFloat((*(_39399_prim))._field_Kind)) {
			_case_begin_1bc7d2109:;
			{
				return _1ab2516a0_evalFloat(_self_);;
			}
		}
		else if (_1d8bce3b9_IsInt((*(_39399_prim))._field_Kind)) {
			_case_begin_1bc7d2181:;
			{
				return _1ab251936_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1bc7d2060:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc7ce832:;
	};
}



inline void _1ab251dba_checkSpecialCases(_1ab24c5d0_binaryEval* _self_) {
	if (((!(_1ab25c117_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1ab25baea_IsNil((*((*(_self_))._field_r))._field_Kind.ptr()))))) {
		_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if (((!(_1ab25c117_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1ab25baea_IsNil((*((*(_self_))._field_l))._field_Kind.ptr()))))) {
		_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab252151_evalOp(_1ab24c5d0_binaryEval* _self_) {
	_1ab251dba_checkSpecialCases(_self_);
	{
		
		if (_1ab25bd81_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1bc7d76e7:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_1ab261a34_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7d70ba:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bc7d7890;
			}
		}
		else if ((_1ab261a34_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7d7890:;
			{
				return _1ab24d7ac_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1ab25d16d_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _1ab266d14_IsAny(_1ab25d16d_Prim((*((*(_self_))._field_r))._field_Kind.ptr()).ptr()))) {
			_case_begin_1bc7d8ab1:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bc7d8b27;
			}
		}
		else if (_1ab25baea_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_1bc7d8b27:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bc7d8c15;
			}
		}
		else if (_1ab25baea_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1bc7d8c15:;
			{
				return _1ab24da43_evalNil(_self_);;
			}
		}
		else if (((_1ab25d16d_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _1ab266d14_IsAny(_1ab25d16d_Prim((*((*(_self_))._field_l))._field_Kind.ptr()).ptr()))) {
			_case_begin_1bc7d8c7b:;
			{
				return _1ab25034c_evalAny(_self_);;
			}
		}
		else if ((_1ab25dba7_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7d8ce2:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bc7d8d58;
			}
		}
		else if ((_1ab25dba7_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7d8d58:;
			{
				return _1ab24e060_evalTypeEnum(_self_);;
			}
		}
		else if ((_1ab25d921_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7d8dbe:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bc7d8e35;
			}
		}
		else if ((_1ab25d921_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7d8e35:;
			{
				return _1ab24dcc9_evalEnum(_self_);;
			}
		}
		else if ((_1ab25d404_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7d8eac:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bc7d9034;
			}
		}
		else if ((_1ab25d404_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7d9034:;
			{
				return _1ab24e2e6_evalSptr(_self_);;
			}
		}
		else if ((_1ab25d68a_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7d90ab:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bc7d9133;
			}
		}
		else if ((_1ab25d68a_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7d9133:;
			{
				return _1ab24e57c_evalPtr(_self_);;
			}
		}
		else if ((_1ab25de3d_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7d91aa:;
			{
				return _1ab24e813_evalArr(_self_);;
			}
		}
		else if ((_1ab25e1c4_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7d9232:;
			{
				return _1ab24ea99_evalSlc(_self_);;
			}
		}
		else if ((_1ab25e977_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7d92a9:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bc7d9331;
			}
		}
		else if ((_1ab25e977_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7d9331:;
			{
				return _1ab2500b6_evalTrait(_self_);;
			}
		}
		else if ((_1ab25e6e1_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7d93a8:;
			{
				return _1ab24ed30_evalStruct(_self_);;
			}
		}
		else if ((_1ab25d16d_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7d9430:;
			{
				return _1ab251bbc_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1bc7d74e9:;
			{
				_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab25add5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bc7d7483:;
	};
}



inline void _1ab252409_evalConst(_1ab24c5d0_binaryEval* _self_, jule::Ptr<_1ab22a228_Data>* _403033_d) {
	{
		
		if (((*(_403033_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1bc7ec29a:;
			{
				return;;
			}
		}
		else if ((!(_1ab22aaec_IsConst((*(_self_))._field_l.ptr()))) || (!(_1ab22aaec_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1bc7ec4ed:;
			{
				(*((*(_403033_d))))._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1bc7ec1bd:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1bc7ee687:;
			{
				(*((*(_403033_d))))._field_Constant=static__1d8bd0a91_NewBool(_1d8bd5b73_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bc7ee6ed:;
			{
				(*((*(_403033_d))))._field_Constant=static__1d8bd0a91_NewBool((!(_1d8bd5b73_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1bc7ee764:;
			{
				(*((*(_403033_d))))._field_Constant=static__1d8bd0a91_NewBool(_1d8bd5832_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1bc7ee7ca:;
			{
				(*((*(_403033_d))))._field_Constant=static__1d8bd0a91_NewBool(_1d8bd54e1_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1bc7ee841:;
			{
				(*((*(_403033_d))))._field_Constant=static__1d8bd0a91_NewBool(_1d8bd6646_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1bc7ee8a7:;
			{
				(*((*(_403033_d))))._field_Constant=static__1d8bd0a91_NewBool(_1d8bd5eb4_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1bc7ee92e:;
			{
				(*((*(_403033_d))))._field_Constant=static__1d8bd0a91_NewBool(_1d8bd6987_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bc7ee9a6:;
			{
				(*((*(_403033_d))))._field_Constant=static__1d8bd0a91_NewBool(_1d8bd6305_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1bc7eea2d:;
			{
				_1d8bd6cc8_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1bc7eeaa5:;
			{
				_1d8bd7119_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bc7eeb2c:;
			{
				_1d8bd745a_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1bc7eeba4:;
			{
				jule::Bool _406913_ok = _1d8bd779b_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_406913_ok)) && (_1d8bd2c80_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
				jule::Ptr<_1ab2635e6_Prim> _407417_prim = _1ab25d16d_Prim((*((*(_403033_d))))._field_Kind.ptr());;
				{
					
					if (_1d8bcdce2_IsSigInt((*(_407417_prim))._field_Kind)) {
						_case_begin_1bc81049a:;
						{
							_1d8bd3038_SetI64((*((*(_403033_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1d8bd2763_AsI64((*((*(_403033_d))))._field_Constant.ptr())));
						}
					}
					else if (_1d8bce100_IsUnsigInt((*(_407417_prim))._field_Kind)) {
						_case_begin_1bc810522:;
						{
							_1d8bd32e1_SetU64((*((*(_403033_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1d8bd29e9_AsU64((*((*(_403033_d))))._field_Constant.ptr())));
						}
					}
					_match_end_1bc810401:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bc7eec2b:;
			{
				jule::Bool _408213_ok = _1d8bd7adc_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_408213_ok)) && (_1d8bd2c80_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1bc7eeca3:;
			{
				_1d8bd826e_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bc7eed2a:;
			{
				_1d8bd7e2d_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bc7eeda2:;
			{
				_1d8bd85b0_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1bc7eee29:;
			{
				_1d8bd8901_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1bc7eeea1:;
			{
				_1d8bd8c42_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		_match_end_1bc7ede4a:;
	};
	(*((*(_403033_d))))._field_Model=jule::Any((*((*(_403033_d))))._field_Constant, &__jule_any_type19);
	_1ab256562_applyCastModelByEnum(_403033_d, _1ab25d921_Enum((*((*(_403033_d))))._field_Kind.ptr()));
}



inline void _1ab2526b2_checkData(_1ab24c5d0_binaryEval* _self_, jule::Ptr<_1ab22a228_Data>* _410733_d) {
	jule::Ptr<_1ab120d00_FnIns> _41089_f = _1ab25e45a_Fn((*((*(_410733_d))))._field_Kind.ptr());;
	if ((((_41089_f != nullptr) && ((*(_41089_f))._field_Decl != nullptr)) && _1ab11d605_IsMethod((*(_41089_f))._field_Decl.ptr()))) {
		_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1ab2528b0_checkDatas(_1ab24c5d0_binaryEval* _self_) {
	_1ab2526b2_checkData(_self_, &((*(_self_))._field_l));
	_1ab2526b2_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1ab252b68_setModel(_1ab24c5d0_binaryEval* _self_, jule::Ptr<_1ab22a228_Data>* _411932_d) {
	if (_1ab22aaec_IsConst((*(_411932_d)).ptr())) {
		if (((_1ab22aaec_IsConst((*(_self_))._field_l.ptr()) && _1ab22aaec_IsConst((*(_self_))._field_r.ptr())) || (((*((*(_self_))._field_l))._field_Model == nullptr) && ((*((*(_self_))._field_r))._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1ab22a228_Data> _412813_l;;
	jule::Ptr<_1ab22a228_Data> _412820_r;;
	({
		jule::Ptr<_1ab22a228_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1ab22a228_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_412813_l = ___jule_assign_arg;
		_412820_r = _1___jule_assign_arg;
	});
	if ((!(_1ab22ae3d_GoodOperand(_412813_l.ptr(), &(_412820_r))))) {
		std::swap(_412813_l, _412820_r);
	};
	(*((*(_411932_d))))._field_Model=jule::Any(jule::new_ptr<_1ab1101a7_BinopExprModel>(_1ab1101a7_BinopExprModel{._field_Left=jule::new_ptr<_1ab10ebac_OperandExprModel>(_1ab10ebac_OperandExprModel{._field_Kind=(*(_412813_l))._field_Kind, ._field_Model=(*(_412813_l))._field_Model}), ._field_Right=jule::new_ptr<_1ab10ebac_OperandExprModel>(_1ab10ebac_OperandExprModel{._field_Kind=(*(_412820_r))._field_Kind, ._field_Model=(*(_412820_r))._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _1ab252e21_postEval(_1ab24c5d0_binaryEval* _self_, jule::Ptr<_1ab22a228_Data>* _414632_d) {
	(*((*(_414632_d))))._field_Lvalue=false;
	_1ab252b68_setModel(_self_, _414632_d);
}



inline jule::Ptr<_1ab22a228_Data> _1ab25331c_solveExplicit(_1ab24c5d0_binaryEval* _self_, jule::Ptr<_1ab22a228_Data>* _415137_l, jule::Ptr<_1ab22a228_Data>* _415152_r) {
	({
		jule::Ptr<_1ab22a228_Data> ___jule_assign_arg = (*(_415137_l));
		jule::Ptr<_1ab22a228_Data> _1___jule_assign_arg = (*(_415152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1ab2528b0_checkDatas(_self_);
	jule::Ptr<_1ab22a228_Data> _415613_d = _1ab252151_evalOp(_self_);;
	({
		jule::Ptr<_1ab22a228_Data> ___jule_assign_arg = (*(_415137_l));
		jule::Ptr<_1ab22a228_Data> _1___jule_assign_arg = (*(_415152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1ab252409_evalConst(_self_, &(_415613_d));
	if ((_415613_d != nullptr)) {
		(*(_415613_d))._field_Mutable=true;
		_1ab252e21_postEval(_self_, &(_415613_d));
	};
	return _415613_d;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab25365d_eval(_1ab24c5d0_binaryEval* _self_, jule::Ptr<_1ab0ded46_BinopExpr>* _417128_op) {
	if (((*((*((*(_417128_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1ab22c46c_pushErr((*(_self_))._field_e.ptr(), (*((*(_417128_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1ab22c7d0_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab22a228_Data> _417813_l = _1ab249d3b_evalExpr1((*(_self_))._field_e, (*((*(_417128_op))))._field_Left);;
	if (((_417813_l == nullptr) || ((*(_417813_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1ab25aa1c_TypeKind> _418313_prefix = (*((*(_self_))._field_e))._field_prefix;;
	(*((*(_self_))._field_e))._field_prefix=(*(_417813_l))._field_Kind;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_418313_prefix;
	});;
	jule::Ptr<_1ab22a228_Data> _418613_r = _1ab249d3b_evalExpr1((*(_self_))._field_e, (*((*(_417128_op))))._field_Right);;
	if (((_418613_r == nullptr) || ((*(_418613_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_417128_op))))._field_Op;
	jule::Ptr<_1ab22a228_Data> _419313_d = _1ab25331c_solveExplicit(_self_, &(_417813_l), &(_418613_r));;
	if ((((_419313_d != nullptr) && (*(_417813_l))._field_IsRune) && (*(_418613_r))._field_IsRune)) {
		(*(_419313_d))._field_IsRune=true;
	};
	return _419313_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab24c5d0_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab259136_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab259c2a_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab25add5_Str(_1ab25aa1c_TypeKind* _self_) {
	if (_1ab25baea_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_1d7ad2eb1_StrBuilder _7413_kind = static__1d7ad327a_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_1d7adba8b_WriteStr(&_7413_kind, jule::Str::lit("...", 3));
	};
	if (_1ab25b864_Binded(_self_)) {
		_1d7adba8b_WriteStr(&_7413_kind, jule::Str::lit("cpp.", 4));
		_1d7adba8b_WriteStr(&_7413_kind, (*(_self_))._field_BindIdent);
	} else {
		_1d7adba8b_WriteStr(&_7413_kind, _1ab25a566_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1ab25a0c1_Str((*(_self_))._field_Kind));
	};
	return _1d7adc383_Str(&_7413_kind);;
}



inline jule::Bool _1ab25b226_Equal(jule::Ptr<_1ab25aa1c_TypeKind> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _9021_other) {
	if (_1ab25baea_IsNil(_self_.ptr())) {
		return _1ab25baea_IsNil(_9021_other.ptr());;
	};
	if (_1ab25b864_Binded(_self_.ptr())) {
		return (_1ab25b864_Binded(_9021_other.ptr()) && ((*(_self_))._field_BindIdent == (*(_9021_other))._field_BindIdent));;
	};
	return _1ab25a566_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1ab25a412_Equal((*(_self_))._field_Kind, _9021_other);;
}



inline jule::Bool _1ab25b864_Binded(_1ab25aa1c_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1ab25baea_IsNil(_1ab25aa1c_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1ab25bd81_Void(_1ab25aa1c_TypeKind* _self_) {
	jule::Ptr<_1ab2635e6_Prim> _1109_prim = _1ab25d16d_Prim(&(*(_self_)));;
	return ((_1109_prim != nullptr) && (*(_1109_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1ab25c117_Comparable(_1ab25aa1c_TypeKind* _self_) {
	{
		_1ab25aa1c_TypeKind* _11717__self = _self_;;
		if ((_1ab25e6e1_Struct(_11717__self) != nullptr)) {
			return (*(_1ab25e6e1_Struct(_11717__self)))._field_Comparable;;
		};
		return (((_1ab25ec0d_Map(_11717__self) == nullptr) && (_1ab25e1c4_Slc(_11717__self) == nullptr)) && (_1ab25e45a_Fn(_11717__self) == nullptr));;
	};
}



inline jule::Bool _1ab25c39d_Mutable(_1ab25aa1c_TypeKind* _self_) {
	{
		_1ab25aa1c_TypeKind* _12817__self = _self_;;
		if ((_1ab25e6e1_Struct(_12817__self) != nullptr)) {
			return (*(_1ab25e6e1_Struct(_12817__self)))._field_Mutable;;
		};
		if ((_1ab25e977_Trait(_12817__self) != nullptr)) {
			return true;;
		};
		if ((_1ab25d16d_Prim(_12817__self) != nullptr)) {
			jule::Ptr<_1ab2635e6_Prim> _13617_p = _1ab25d16d_Prim(_12817__self);;
			return _1ab266d14_IsAny(_13617_p.ptr());;
		};
		if ((_1ab25de3d_Arr(_12817__self) != nullptr)) {
			return _1ab25c39d_Mutable((*(_1ab25de3d_Arr(_12817__self)))._field_Elem.ptr());;
		};
		return (((_1ab25e1c4_Slc(_12817__self) != nullptr) || (_1ab25d68a_Ptr(_12817__self) != nullptr)) || (_1ab25d404_Sptr(_12817__self) != nullptr));;
	};
}



inline jule::Bool _1ab25c634_Ordered(_1ab25aa1c_TypeKind* _self_) {
	{
		_1ab25aa1c_TypeKind* _15117__self = _self_;;
		jule::Ptr<_1ab2635e6_Prim> _15213_prim = _1ab25d16d_Prim(_15117__self);;
		if ((_15213_prim != nullptr)) {
			return (_1d8bce9c4_IsNum((*(_15213_prim))._field_Kind) || _1ab266a7d_IsStr(_15213_prim.ptr()));;
		};
		if ((_1ab25d68a_Ptr(_15117__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1ab10acb8_StructIns> _15913_s = _1ab25e6e1_Struct(_15117__self);;
		if ((_15913_s != nullptr)) {
			return (((((*(_15913_s))._field_Operators._field_Gt != nullptr) && ((*(_15913_s))._field_Operators._field_GtEq != nullptr)) && ((*(_15913_s))._field_Operators._field_Lt != nullptr)) && ((*(_15913_s))._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1ab133890_Enum> _16613_enm = _1ab25d921_Enum(_15117__self);;
		if ((_16613_enm != nullptr)) {
			return _1d8bce9c4_IsNum(_1ab25add5_Str((*((*(_16613_enm))._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1ab25c8ba_NilCompatible(_1ab25aa1c_TypeKind* _self_) {
	{
		_1ab25aa1c_TypeKind* _17717__self = _self_;;
		jule::Ptr<_1ab2635e6_Prim> _17913_prim = _1ab25d16d_Prim(_17717__self);;
		if (((_17913_prim != nullptr) && _1ab266d14_IsAny(_17913_prim.ptr()))) {
			return true;;
		};
		return (((((((_1ab25baea_IsNil(_17717__self) || (_1ab25e45a_Fn(_17717__self) != nullptr)) || (_1ab25d404_Sptr(_17717__self) != nullptr)) || (_1ab25d68a_Ptr(_17717__self) != nullptr)) || (_1ab25e977_Trait(_17717__self) != nullptr)) || (_1ab25e1c4_Slc(_17717__self) != nullptr)) || (_1ab25ec0d_Map(_17717__self) != nullptr)) || (_1ab25dba7_TypeEnum(_17717__self) != nullptr));;
	};
}



inline jule::Bool _1ab25cb51_PerformsRC(_1ab25aa1c_TypeKind* _self_) {
	{
		_1ab25aa1c_TypeKind* _19817__self = _self_;;
		jule::Ptr<_1ab2635e6_Prim> _19913_prim = _1ab25d16d_Prim(_19817__self);;
		if ((_19913_prim != nullptr)) {
			return (_1ab266d14_IsAny(_19913_prim.ptr()) || _1ab266a7d_IsStr(_19913_prim.ptr()));;
		};
		return (((_1ab25d404_Sptr(_19817__self) != nullptr) || (_1ab25e1c4_Slc(_19817__self) != nullptr)) || (_1ab25e977_Trait(_19817__self) != nullptr));;
	};
}



inline jule::Bool _1ab25cdd7_Variadicable(_1ab25aa1c_TypeKind* _self_) {
	{
		_1ab25aa1c_TypeKind* _21017__self = _self_;;
		return (_1ab25e1c4_Slc(_21017__self) != nullptr);;
	};
}



inline jule::Ptr<_1ab2635e6_Prim> _1ab25d16d_Prim(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_1bb1da409:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab2635e6_Prim>(20);;
			}
		}
		else {
			_case_begin_1bb1da74a:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1da6e5:;
	};
}



inline jule::Ptr<_1ab267122_Sptr> _1ab25d404_Sptr(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_1bb1db064:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab267122_Sptr>(21);;
			}
		}
		else {
			_case_begin_1bb1db63b:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1db5d6:;
	};
}



inline jule::Ptr<_1ab26a8d9_Ptr> _1ab25d68a_Ptr(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1bb1dbe22:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab26a8d9_Ptr>(26);;
			}
		}
		else {
			_case_begin_1bb1dc32e:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1dc2c9:;
	};
}



inline jule::Ptr<_1ab133890_Enum> _1ab25d921_Enum(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1bb1dcb26:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab133890_Enum>(3);;
			}
		}
		else {
			_case_begin_1bb1dd033:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1dcecd:;
	};
}



inline jule::Ptr<_1ab13509a_TypeEnum> _1ab25dba7_TypeEnum(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1bb1dd82a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab13509a_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1bb1ddc37:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1ddbd2:;
	};
}



inline jule::Ptr<_1ab269e16_Arr> _1ab25de3d_Arr(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_1bb1de52e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab269e16_Arr>(25);;
			}
		}
		else {
			_case_begin_1bb1de93b:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1de8d6:;
	};
}



inline jule::Ptr<_1ab267ae5_Slc> _1ab25e1c4_Slc(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_1bb1e0233:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab267ae5_Slc>(22);;
			}
		}
		else {
			_case_begin_1bb1e0640:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1e05da:;
	};
}



inline jule::Ptr<_1ab120d00_FnIns> _1ab25e45a_Fn(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1bb1e0e37:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab120d00_FnIns>(1);;
			}
		}
		else {
			_case_begin_1bb1e1344:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1e12de:;
	};
}



inline jule::Ptr<_1ab10acb8_StructIns> _1ab25e6e1_Struct(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bb1e1b3b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab10acb8_StructIns>(0);;
			}
		}
		else {
			_case_begin_1bb1e2048:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1e1ee3:;
	};
}



inline jule::Ptr<_1ab131195_Trait> _1ab25e977_Trait(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1bb1e2840:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab131195_Trait>(2);;
			}
		}
		else {
			_case_begin_1bb1e2c4c:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1e2be7:;
	};
}



inline jule::Ptr<_1ab269289_Map> _1ab25ec0d_Map(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_1bb1e3544:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab269289_Map>(24);;
			}
		}
		else {
			_case_begin_1bb1e3951:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1e38eb:;
	};
}



inline jule::Ptr<_1ab2686d9_Tuple> _1ab25ee94_Tup(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_1bb1e4248:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab2686d9_Tuple>(23);;
			}
		}
		else {
			_case_begin_1bb1e4655:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1e4600:;
	};
}



inline jule::Bool _1ab26022a_comptime(_1ab25aa1c_TypeKind* _self_) {
	return ((((((((((((((_1ab26179d_comptimeTypeInfos(_self_) != nullptr) || (_1ab261a34_comptimeTypeInfo(_self_) != nullptr)) || (_1ab2604b1_comptimeStructFields(_self_) != nullptr)) || (_1ab260747_comptimeStructField(_self_) != nullptr)) || (_1ab2609cd_comptimeEnumFields(_self_) != nullptr)) || (_1ab260c64_comptimeEnumField(_self_) != nullptr)) || (_1ab261cba_comptimeStatics(_self_) != nullptr)) || (_1ab262051_comptimeStatic(_self_) != nullptr)) || (_1ab260eea_comptimeParams(_self_) != nullptr)) || (_1ab261281_comptimeParam(_self_) != nullptr)) || (_1ab261517_comptimeRange(_self_) != nullptr)) || (_1ab2622d7_comptimeValue(_self_) != nullptr)) || (_1ab262804_comptimeFiles(_self_) != nullptr)) || (_1ab26256d_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1ab139b4e_comptimeStructFields> _1ab2604b1_comptimeStructFields(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1bb1e52c1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab139b4e_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1bb1e90e9:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1e9094:;
	};
}



inline jule::Ptr<_1ab137e9e_comptimeStructField> _1ab260747_comptimeStructField(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1bb1e95b1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab137e9e_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1bb1e99bd:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1e9968:;
	};
}



inline jule::Ptr<_1ab145682_comptimeEnumFields> _1ab2609cd_comptimeEnumFields(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1bb1ea2b5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab145682_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_1bb1ea6c2:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1ea66c:;
	};
}



inline jule::Ptr<_1ab144373_comptimeEnumField> _1ab260c64_comptimeEnumField(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1bb1eaeb9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab144373_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_1bb1eb3c6:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1eb371:;
	};
}



inline jule::Ptr<_1ab14907b_comptimeParams> _1ab260eea_comptimeParams(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1bb1ebbbd:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab14907b_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_1bb1ec0ca:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1ec075:;
	};
}



inline jule::Ptr<_1ab146d15_comptimeParam> _1ab261281_comptimeParam(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1bb1ec8c2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab146d15_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_1bb1eccce:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1ecc79:;
	};
}



inline jule::Ptr<_1ab137443_comptimeRange> _1ab261517_comptimeRange(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1bb1ed5c6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab137443_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1bb1ed9d3:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1ed97d:;
	};
}



inline jule::Ptr<_1ab14a676_comptimeTypeInfos> _1ab26179d_comptimeTypeInfos(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1bb1ee2ca:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab14a676_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_1bb1ee6d7:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb1ee682:;
	};
}



inline jule::Ptr<_1ab14bc71_comptimeTypeInfo> _1ab261a34_comptimeTypeInfo(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1bb1eeece:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab14bc71_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_1bb2003db:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb200386:;
	};
}



inline jule::Ptr<_1ab142c78_comptimeStatics> _1ab261cba_comptimeStatics(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1bb200bd3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab142c78_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_1bb2010e0:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb20108a:;
	};
}



inline jule::Ptr<_1ab1410b7_comptimeStatic> _1ab262051_comptimeStatic(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1bb2018d7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab1410b7_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_1bb201ce4:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb201c8e:;
	};
}



inline jule::Ptr<_1ab153283_comptimeValue> _1ab2622d7_comptimeValue(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1bb2025db:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab153283_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_1bb2029e8:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb202993:;
	};
}



inline jule::Ptr<_1ab1571cc_comptimeFile> _1ab26256d_comptimeFile(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_1bb2032e0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab1571cc_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_1bb2036ec:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb203697:;
	};
}



inline jule::Ptr<_1ab155ad2_comptimeFiles> _1ab262804_comptimeFiles(_1ab25aa1c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1bb203ee4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab155ad2_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_1bb204401:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb20439b:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab25aa1c_TypeKind _Src) {
	_Stream << _1ab25add5_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1ab263063_checked(_1ab262bde_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab262bde_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab263937_Str(_1ab2635e6_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1ab263c78_Equal(jule::Ptr<_1ab2635e6_Prim> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _50721_other) {
	jule::Ptr<_1ab2635e6_Prim> _5089_prim = _1ab25d16d_Prim(_50721_other.ptr());;
	if ((_5089_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5089_prim))._field_Kind);;
}



inline jule::Bool _1ab26421d_IsConstraint(_1ab2635e6_Prim* _self_) {
	return ((((!(_1ab266a7d_IsStr(_self_))) && (!(_1ab266d14_IsAny(_self_)))) && (!(_1ab2667e7_IsBool(_self_)))) && (!(_1d8bce9c4_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1ab2644a4_IsI8(_1ab2635e6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1ab26473a_IsI16(_1ab2635e6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1ab2649c1_IsI32(_1ab2635e6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1ab264c57_IsI64(_1ab2635e6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1ab264edd_IsU8(_1ab2635e6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1ab265274_IsU16(_1ab2635e6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1ab26550a_IsU32(_1ab2635e6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1ab265791_IsU64(_1ab2635e6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1ab265a27_IsF32(_1ab2635e6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1ab265cad_IsF64(_1ab2635e6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1ab266044_IsInt(_1ab2635e6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1ab2662ca_IsUint(_1ab2635e6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1ab266561_IsUintptr(_1ab2635e6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1ab2667e7_IsBool(_1ab2635e6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1ab266a7d_IsStr(_1ab2635e6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1ab266d14_IsAny(_1ab2635e6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2635e6_Prim _Src) {
	_Stream << _1ab263937_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab267496_Str(_1ab267122_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1ab25add5_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ab2677d7_Equal(jule::Ptr<_1ab267122_Sptr> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _58421_other) {
	jule::Ptr<_1ab267122_Sptr> _5859_sptr = _1ab25d404_Sptr(_58421_other.ptr());;
	if ((_5859_sptr == nullptr)) {
		return false;;
	};
	return _1ab25b226_Equal((*(_self_))._field_Elem, (*(_5859_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab267122_Sptr _Src) {
	_Stream << _1ab267496_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab268079_Str(_1ab267ae5_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1ab25add5_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ab2683ba_Equal(jule::Ptr<_1ab267ae5_Slc> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _60321_other) {
	jule::Ptr<_1ab267ae5_Slc> _6049_slc = _1ab25e1c4_Slc(_60321_other.ptr());;
	if ((_6049_slc == nullptr)) {
		return false;;
	};
	return _1ab25b226_Equal((*(_self_))._field_Elem, (*(_6049_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab267ae5_Slc _Src) {
	_Stream << _1ab268079_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab268a5d_Str(_1ab2686d9_Tuple* _self_) {
	_1d7ad2eb1_StrBuilder _62013_s = static__1d7ad327a_New(16LL);;
	_1d7adbd44_WriteByte(&_62013_s, '(');
	_1d7adba8b_WriteStr(&_62013_s, _1ab25add5_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bb2144dd:;
		if (it != expr_end) {
			jule::Ptr<_1ab25aa1c_TypeKind> *_62316_t = it;
			{
				_1d7adbd44_WriteByte(&_62013_s, ',');
				_1d7adba8b_WriteStr(&_62013_s, _1ab25add5_Str((*(_62316_t)).ptr()));
			}
			_iter_next_1bb2144dd:;
			++it;
			goto _iter_begin_1bb2144dd;
		}
		_iter_end_1bb2144dd:;
	};
	_1d7adbd44_WriteByte(&_62013_s, ')');
	return _1d7adc383_Str(&_62013_s);;
}



inline jule::Bool _1ab268d9e_Equal(jule::Ptr<_1ab2686d9_Tuple> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _63221_other) {
	jule::Ptr<_1ab2686d9_Tuple> _6339_tup = _1ab25ee94_Tup(_63221_other.ptr());;
	if ((_6339_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6339_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _64013_i = 0LL;;
	for (; (_64013_i < (*(_self_))._field_Types.len()); (_64013_i)++) {
		{
			if ((!(_1ab25b226_Equal((*(_self_))._field_Types[_64013_i], (*(_6339_tup))._field_Types[_64013_i])))) {
				return false;;
			};
		}
	_iter_next_1bb2171c2:;
	}
	_iter_end_1bb2171c2:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2686d9_Tuple _Src) {
	_Stream << _1ab268a5d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab26960d_Str(_1ab269289_Map* _self_) {
	_1d7ad2eb1_StrBuilder _66013_s = static__1d7ad327a_New(16LL);;
	_1d7adba8b_WriteStr(&_66013_s, jule::Str::lit("map[", 4));
	_1d7adba8b_WriteStr(&_66013_s, _1ab25add5_Str((*(_self_))._field_Key.ptr()));
	_1d7adbd44_WriteByte(&_66013_s, ']');
	_1d7adba8b_WriteStr(&_66013_s, _1ab25add5_Str((*(_self_))._field_Val.ptr()));
	return _1d7adc383_Str(&_66013_s);;
}



inline jule::Bool _1ab26994e_Equal(jule::Ptr<_1ab269289_Map> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _66921_other) {
	jule::Ptr<_1ab269289_Map> _6709_m = _1ab25ec0d_Map(_66921_other.ptr());;
	if ((_6709_m == nullptr)) {
		return false;;
	};
	return (_1ab25b226_Equal((*(_self_))._field_Key, (*(_6709_m))._field_Key) && _1ab25b226_Equal((*(_self_))._field_Val, (*(_6709_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab269289_Map _Src) {
	_Stream << _1ab26960d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab26a28a_Str(_1ab269e16_Arr* _self_) {
	_1d7ad2eb1_StrBuilder _68813_s = static__1d7ad327a_New(16LL);;
	_1d7adbd44_WriteByte(&_68813_s, '[');
	_1d7adba8b_WriteStr(&_68813_s, _1d8bbea91_Itoa((*(_self_))._field_N));
	_1d7adbd44_WriteByte(&_68813_s, ']');
	_1d7adba8b_WriteStr(&_68813_s, _1ab25add5_Str((*(_self_))._field_Elem.ptr()));
	return _1d7adc383_Str(&_68813_s);;
}



inline jule::Bool _1ab26a5cb_Equal(jule::Ptr<_1ab269e16_Arr> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _69721_other) {
	jule::Ptr<_1ab269e16_Arr> _6989_arr = _1ab25de3d_Arr(_69721_other.ptr());;
	if ((_6989_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_6989_arr))._field_N) && _1ab25b226_Equal((*(_self_))._field_Elem, (*(_6989_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab269e16_Arr _Src) {
	_Stream << _1ab26a28a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab26ac5d_Str(_1ab26a8d9_Ptr* _self_) {
	if (_1ab26b423_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1ab25add5_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ab26b09e_Equal(jule::Ptr<_1ab26a8d9_Ptr> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _72121_other) {
	jule::Ptr<_1ab26a8d9_Ptr> _7229_ptr = _1ab25d68a_Ptr(_72121_other.ptr());;
	if ((_7229_ptr == nullptr)) {
		return false;;
	};
	return _1ab25b226_Equal((*(_self_))._field_Elem, (*(_7229_ptr))._field_Elem);;
}



inline jule::Bool _1ab26b423_IsUnsafe(_1ab26a8d9_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab26a8d9_Ptr _Src) {
	_Stream << _1ab26ac5d_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab26b8da_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1ab26d117_pushErr(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0c1e7c_Token> _80726_token, jule::Str _80741_fmt, jule::Slice<jule::Any> _80754_args) {
	_1ab1a82b6_pushErr((*(_self_))._field_s.ptr(), _80726_token, _80741_fmt, _80754_args);
}



inline void _1ab26d315_allowBuiltin(_1ab26c8ca_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1ab26d513_disallowBuiltin(_1ab26c8ca_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1bb2261d1_pushReference(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab10acb8_StructIns>* _81940_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1bc5c4a34_Exist((*(_self_))._field_refers.ptr(), (*(_81940_t)))) {
		return;;
	};
	_1ab124c8d_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_81940_t)), &__jule_any_type9));
}

inline void _1bb228920_pushReference(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab131195_Trait>* _81940_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1bb22a68b_Exist((*(_self_))._field_refers.ptr(), (*(_81940_t)))) {
		return;;
	};
	_1ab124c8d_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_81940_t)), &__jule_any_type10));
}



inline void _1ab26da74_pushReferenceByKind(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _82943_k) {
	{
		
		if ((_1ab25e6e1_Struct((*(_82943_k)).ptr()) != nullptr)) {
			_case_begin_1bb224e49:;
			{
				jule::Ptr<_1ab10acb8_StructIns> _83217_t = _1ab25e6e1_Struct((*(_82943_k)).ptr());;
				_1bb2261d1_pushReference(_self_, &(_83217_t));
			}
		}
		else if ((_1ab25e977_Trait((*(_82943_k)).ptr()) != nullptr)) {
			_case_begin_1bb224ec1:;
			{
				jule::Ptr<_1ab131195_Trait> _83517_t = _1ab25e977_Trait((*(_82943_k)).ptr());;
				_1bb228920_pushReference(_self_, &(_83517_t));
			}
		}
		_match_end_1bb224d39:;
	};
}



inline void _1ab26de92_pushCycleError(_1ab26c8ca_typeChecker* _self_, jule::Any _84029_def1, jule::Any _84040_def2, _1d7ad2eb1_StrBuilder* _84056_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _8429_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _84225_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_84225_def)) };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1bb22d00c:;
				{
					return (*((*(_84225_def)).cast_ptr<_1ab259c2a_TypeAlias>(&__jule_any_type66)))._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type65) {
				_case_begin_1bb22d5b2:;
				{
					return (*((*(_84225_def)).cast_ptr<_1ab10803a_Struct>(&__jule_any_type65)))._field_Ident;;
				}
			}
			else {
				_case_begin_1bb22d1a5:;
				{
					return jule::Str();;
				}
			}
			_match_end_1bb22d150:;
		};
	});;
	jule::Slice<jule::U8> _8529_buf = _1d7adcd34_Buf(_84056_message);;
	jule::Str _8539_def1Ident = _8429_getIdent(&(_84029_def1));;
	jule::Str _8549_def2Ident = _8429_getIdent(&(_84040_def2));;
	jule::Str _8559_refersTo = _1d7b8222a_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_8539_def1Ident, &__jule_any_type4),jule::Any(_8549_def2Ident, &__jule_any_type4)}));;
	_1d7adba8b_WriteStr(_84056_message, _1d7abd144_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1d7adba8b_WriteStr(_84056_message, _8559_refersTo);
	_1d7adbd44_WriteByte(_84056_message, '\n');
	_1d7adb7d3_Write(_84056_message, _8529_buf);
}



inline jule::Bool _1ab26e38d_checkCrossCycle(_1ab26c8ca_typeChecker* _self_, jule::Any _86230_decl, _1d7ad2eb1_StrBuilder* _86246_message) {
	{
		auto &_match_expr{ _86230_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1bb2312b8:;
			{
				jule::Ptr<_1ab259c2a_TypeAlias> _86513_ta = _86230_decl.cast_ptr<_1ab259c2a_TypeAlias>(&__jule_any_type66);;
				{
					auto expr = &((*(_86513_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb23194a:;
					if (it != expr_end) {
						jule::Any *_86620_d = it;
						{
							{
								
								if (((*(_86620_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1bb232880:;
									{
										_1ab26de92_pushCycleError(_self_, jule::Any(_86513_ta, &__jule_any_type66), (*(_86620_d)), _86246_message);
										return false;;
									}
								}
								else if ((!(_1ab26e38d_checkCrossCycle(_self_, (*(_86620_d)), _86246_message)))) {
									_case_begin_1bb232907:;
									{
										_1ab26de92_pushCycleError(_self_, jule::Any(_86513_ta, &__jule_any_type66), (*(_86620_d)), _86246_message);
										return false;;
									}
								}
								_match_end_1bb232770:;
							};
						}
						_iter_next_1bb23194a:;
						++it;
						goto _iter_begin_1bb23194a;
					}
					_iter_end_1bb23194a:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bb23132e:;
			{
				jule::Ptr<_1ab10803a_Struct> _87713_s = _86230_decl.cast_ptr<_1ab10803a_Struct>(&__jule_any_type65);;
				{
					auto expr = &((*(_87713_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb234035:;
					if (it != expr_end) {
						jule::Ptr<_1ab10803a_Struct> *_87820_d = it;
						{
							{
								
								if ((__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*(_87820_d))))) {
									_case_begin_1bb23495e:;
									{
										_1ab26de92_pushCycleError(_self_, jule::Any(_87713_s, &__jule_any_type65), jule::Any((*(_87820_d)), &__jule_any_type65), _86246_message);
										return false;;
									}
								}
								else if ((!(_1ab26e38d_checkCrossCycle(_self_, jule::Any((*(_87820_d)), &__jule_any_type65), _86246_message)))) {
									_case_begin_1bb2349d6:;
									{
										_1ab26de92_pushCycleError(_self_, jule::Any(_87713_s, &__jule_any_type65), jule::Any((*(_87820_d)), &__jule_any_type65), _86246_message);
										return false;;
									}
								}
								_match_end_1bb23484e:;
							};
						}
						_iter_next_1bb234035:;
						++it;
						goto _iter_begin_1bb234035;
					}
					_iter_end_1bb234035:;
				};
			}
		}
		_match_end_1bb231263:;
	};
	return true;;
}



inline jule::Bool _1ab26e789_checkIllegalCycles(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0d7a53_IdentTypeDecl>* _89638_ident, jule::Any _89665_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _89665_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bb23693e:;
			{
				if ((*(_89665_decl.cast_ptr<_1ab10803a_Struct>(&__jule_any_type65)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1bb2369a5:;
			{
				if ((*(_89665_decl.cast_ptr<_1ab259c2a_TypeAlias>(&__jule_any_type66)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1bb2368d9:;
	};
	if ((_89665_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1ab26d117_pushErr(_self_, (*((*(_89638_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1d7ad2eb1_StrBuilder _91913_message = static__1d7ad327a_New(32LL);;
	if ((!(_1ab26e38d_checkCrossCycle(_self_, _89665_decl, &(_91913_message))))) {
		jule::Str _92217_errMsg = _1d7adc383_Str(&_91913_message);;
		_1d7adc581_Clear(&_91913_message);
		_1ab26de92_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _89665_decl, &(_91913_message));
		_92217_errMsg+=_1d7adc383_Str(&_91913_message);
		_1ab26d117_pushErr(_self_, (*((*(_89638_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_92217_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1bb23ad1c:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_89665_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bb23ad83:;
			{
				{
					auto &_match_expr{ _89665_decl };
					
					if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1bb23bc96:;
						{
							jule::Ptr<_1ab10803a_Struct> _93821_s = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_1ab10803a_Struct>(&__jule_any_type65);;
							{ jule::Slice<jule::Ptr<_1ab10803a_Struct>> &__jule_push_dest = (*(_93821_s))._field_Depends; __jule_push_dest.push(_89665_decl.cast_ptr<_1ab10803a_Struct>(&__jule_any_type65)); };
						}
					}
					_match_end_1bb23b207:;
				};
			}
		}
		_match_end_1bb23acb7:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1ab25a566_Kind> _1ab26eb85_fromTypeAlias(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0d7a53_IdentTypeDecl>* _94633_decl, jule::Ptr<_1ab259c2a_TypeAlias>* _94660_ta) {
	if ((!(_1ab1a8a25_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_94660_ta))))._field_Public, (*((*(_94660_ta))))._field_Token)))) {
		_1ab26d117_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_94660_ta))))._field_Used=true;
	if (((*((*(_94633_decl))))._field_Generics.len() > 0LL)) {
		_1ab26d117_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb241361:;
			if (it != expr_end) {
				jule::Ptr<_1ab259c2a_TypeAlias> _96320_bg = *it;
				{
					if (((_96320_bg == (*(_94660_ta))) || (((*((*((*(_94660_ta))))._field_Kind))._field_Kind != nullptr) && _1ab25b226_Equal((*((*((*(_94660_ta))))._field_Kind))._field_Kind, (*((*(_96320_bg))._field_Kind))._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1bb241361;
					};
				}
				_iter_next_1bb241361:;
				++it;
				goto _iter_begin_1bb241361;
			}
			_iter_end_1bb241361:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb242054:;
			if (it != expr_end) {
				jule::Ptr<_1ab259c2a_TypeAlias> _97420_bg = *it;
				{
					if ((_97420_bg == (*(_94660_ta)))) {
						_1ab26d117_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_94660_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bb244d26:;
						if (it != expr_end) {
							jule::Ptr<_1ab259c2a_TypeAlias> _97924_dg = *it;
							{
								if ((_97420_bg == _97924_dg)) {
									_1ab26d117_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_1bb244d26:;
							++it;
							goto _iter_begin_1bb244d26;
						}
						_iter_end_1bb244d26:;
					};
				}
				_iter_next_1bb242054:;
				++it;
				goto _iter_begin_1bb242054;
			}
			_iter_end_1bb242054:;
		};
	};
	jule::Bool _98813_ok = _1ab26e789_checkIllegalCycles(_self_, _94633_decl, jule::Any((*(_94660_ta)), &__jule_any_type66));;
	if ((!(_98813_ok))) {
		return nullptr;;
	};
	if (((*((*((*(_94660_ta))))._field_Kind))._field_Kind == nullptr)) {
		_98813_ok=_1ab1b46ce_checkTypeAliasDeclKind((*(_self_))._field_s, _94660_ta, (*(_self_))._field_lookup);
		if ((!(_98813_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_94660_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		{ jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_ownerAlias))._field_Generics; __jule_push_dest.push((*(_94660_ta))); };
	};
	jule::Ptr<_1ab25aa1c_TypeKind> _100713_tk = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Generic=(*((*(_94660_ta))))._field_Generic, ._field_Kind=(*((*((*((*(_94660_ta))))._field_Kind))._field_Kind))._field_Kind});;
	_1ab26da74_pushReferenceByKind(_self_, &(_100713_tk));
	if ((*((*(_94660_ta))))._field_Binded) {
		(*(_100713_tk))._field_BindIdent=(*((*(_94660_ta))))._field_Ident;
	} else {
		(*(_100713_tk))._field_BindIdent=(*((*((*((*(_94660_ta))))._field_Kind))._field_Kind))._field_BindIdent;
	};
	return jule::Trait<_1ab25a566_Kind>(_100713_tk, 19);;
}



inline jule::Ptr<_1ab133890_Enum> _1ab270081_fromEnum(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0d7a53_IdentTypeDecl>* _102028_decl, jule::Ptr<_1ab133890_Enum>* _102055_e) {
	if ((!(_1ab1a8a25_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102055_e))))._field_Public, (*((*(_102055_e))))._field_Token)))) {
		_1ab26d117_pushErr(_self_, (*((*(_102028_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_102028_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102028_decl))))._field_Generics.len() > 0LL)) {
		_1ab26d117_pushErr(_self_, (*((*(_102028_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_102028_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_102055_e));;
}



inline jule::Ptr<_1ab13509a_TypeEnum> _1ab27047c_fromTypeEnum(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0d7a53_IdentTypeDecl>* _103232_decl, jule::Ptr<_1ab13509a_TypeEnum>* _103259_e) {
	if ((!(_1ab1a8a25_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103259_e))))._field_Public, (*((*(_103259_e))))._field_Token)))) {
		_1ab26d117_pushErr(_self_, (*((*(_103232_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_103232_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103232_decl))))._field_Generics.len() > 0LL)) {
		_1ab26d117_pushErr(_self_, (*((*(_103232_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_103232_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_103259_e));;
}



inline jule::Ptr<_1ab131195_Trait> _1ab270878_fromTrait(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0d7a53_IdentTypeDecl>* _104429_decl, jule::Ptr<_1ab131195_Trait>* _104456_t) {
	if ((!(_1ab1a8a25_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104456_t))))._field_Public, (*((*(_104456_t))))._field_Token)))) {
		_1ab26d117_pushErr(_self_, (*((*(_104429_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_104429_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_104429_decl))))._field_Generics.len() > 0LL)) {
		_1ab26d117_pushErr(_self_, (*((*(_104429_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_104429_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_1bb228920_pushReference(_self_, _104456_t);
	return (*(_104456_t));;
}



inline jule::Bool _1ab270c74_checkStructIns(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab10acb8_StructIns>* _105738_ins, jule::Ptr<_1ab0c1e7c_Token>* _105760_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_105738_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_105738_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*((*(_105738_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1ab1c0cc3_precheckStructIns((*(_self_))._field_s, _105738_ins, (*(_105760_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_105738_ins))))._field_Generics.len() > 0LL)) {
		_1ab1c17da_checkStructInsOperators((*(_self_))._field_s, (*(_105738_ins)));
		_1ab1c107b_checkStructIns((*(_self_))._field_s, _105738_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ab27102c_appendUsedStructReference(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab10803a_Struct>* _107849_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bb2575a8:;
			{
				jule::Ptr<_1ab10803a_Struct> _108417_refS = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_1ab10803a_Struct>(&__jule_any_type65);;
				if ((!(_1ab1099ba_IsUses(_108417_refS.ptr(), (*(_107849_s)))))) {
					{ jule::Slice<jule::Ptr<_1ab10803a_Struct>> &__jule_push_dest = (*(_108417_refS))._field_Uses; __jule_push_dest.push((*(_107849_s))); };
				};
			}
		}
		_match_end_1bb257553:;
	};
}



inline jule::Ptr<_1ab10acb8_StructIns> _1ab271428_buildStructInstance(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0d7a53_IdentTypeDecl>* _109143_decl, jule::Ptr<_1ab10803a_Struct>* _109170_s) {
	jule::Ptr<_1ab26b8da_referencer> _109313_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>> _109513_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1bb25a105:;
				{
					jule::Ptr<_1ab16aab4_scopeChecker> _110221_sc = (*(_self_))._field_lookup.cast_ptr<_1ab16aab4_scopeChecker>(0);;
					jule::Ptr<_1ab16aab4_scopeChecker> _110321_hard = _1ab16de3b_getHardRoot(_110221_sc);;
					if ((((*((*(_110321_hard))._field_owner))._field_Owner == nullptr) || ((*((*((*(_110321_hard))._field_owner))._field_Owner))._field_Decl != (*(_109170_s))))) {
						goto _match_end_1bb25a0a0;
					};
					jule::I64 _110717_n = ((*((*(_110321_hard))._field_owner))._field_Generics.len() + (*((*((*(_110321_hard))._field_owner))._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*(_110321_hard))._field_table))._field_TypeAliases.slice(0LL, _110717_n);
				}
			}
			_match_end_1bb25a0a0:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1ab27a553_Lookup> _111713_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1ab10acb8_StructIns> _112113_ins = _1ab10849c_instance((*(_109170_s)));;
	(*(_112113_ins))._field_Generics=jule::Slice<jule::Ptr<_1ab259136_InsGeneric>>::alloc(0LL, (*((*(_109143_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_109143_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb25e725:;
		if (it != expr_end) {
			jule::Ptr<_1ab0d7448_TypeDecl> _112321_g = *it;
			{
				jule::Ptr<_1ab25aa1c_TypeKind> _112417_kind = _1ab274c34_build(_self_, &((*(_112321_g))._field_Kind));;
				if ((_112417_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1ab259136_InsGeneric>> &__jule_push_dest = (*(_112113_ins))._field_Generics; __jule_push_dest.push(jule::new_ptr<_1ab259136_InsGeneric>(_1ab259136_InsGeneric{._field_Kind=_112417_kind, })); };
			}
			_iter_next_1bb25e725:;
			++it;
			goto _iter_begin_1bb25e725;
		}
		_iter_end_1bb25e725:;
	};
	(*(_self_))._field_lookup=_111713_lookup;
	(*(_self_))._field_bannedGenerics=_109513_bannedGenerics;
	(*(_self_))._field_referencer=_109313_referencer;
	return _112113_ins;;
}



inline jule::Ptr<_1ab10acb8_StructIns> _1ab271824_fromStruct(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0d7a53_IdentTypeDecl>* _113934_decl, jule::Ptr<_1ab10803a_Struct>* _113961_s) {
	if ((!(_1ab1a8a25_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_113961_s))))._field_Public, (*((*(_113961_s))))._field_Token)))) {
		_1ab26d117_pushErr(_self_, (*((*(_113934_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_113934_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_113934_decl))))._field_Generics.len() > 0LL)) {
			_1ab26d117_pushErr(_self_, (*((*(_113934_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1ab10acb8_StructIns>(_1ab10acb8_StructIns{._field_Decl=(*(_113961_s)), });;
	};
	jule::Bool _115713_ok = _1ab26e789_checkIllegalCycles(_self_, _113934_decl, jule::Any((*(_113961_s)), &__jule_any_type65));;
	if ((!(_115713_ok))) {
		return nullptr;;
	};
	_1ab27102c_appendUsedStructReference(_self_, _113961_s);
	jule::Ptr<_1ab10acb8_StructIns> _116313_ins = _1ab271428_buildStructInstance(_self_, _113934_decl, _113961_s);;
	if ((_116313_ins == nullptr)) {
		return nullptr;;
	};
	_115713_ok=_1ab1a97e5_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_116313_ins))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_116313_ins))._field_Generics.len()), (*((*(_113934_decl))))._field_Token);
	if ((!(_115713_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1ab10acb8_StructIns> _117313_existInstance = _1ab1087aa_appendInstance((*(_113961_s)).ptr(), &(_116313_ins));;
	if ((_117313_existInstance != nullptr)) {
		if ((!(_1ab1b28ca_checkConstraintsStruct((*(_self_))._field_s, &(_116313_ins), &((*((*(_113934_decl))))._field_Token), _117313_existInstance)))) {
			return nullptr;;
		};
		_1bb2261d1_pushReference(_self_, &(_117313_existInstance));
		return _117313_existInstance;;
	};
	if ((!(_1ab270c74_checkStructIns(_self_, &(_116313_ins), &((*((*(_113934_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1bb2261d1_pushReference(_self_, &(_116313_ins));
	return _116313_ins;;
}



inline jule::Trait<_1ab25a566_Kind> _1ab271b65_getDef(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0d7a53_IdentTypeDecl>* _119730_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb268de4:;
		if (it != expr_end) {
			jule::Ptr<_1ab0e4653_GenericDecl> _119816_g = *it;
			{
				if (((*(_119816_g))._field_Ident == (*((*(_119730_decl))))._field_Ident)) {
					return jule::Trait<_1ab25a566_Kind>(_1ab27793a_buildPrimType((*(_119816_g))._field_Ident), 20);;
				};
			}
			_iter_next_1bb268de4:;
			++it;
			goto _iter_begin_1bb268de4;
		}
		_iter_end_1bb268de4:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb26a203:;
		if (it != expr_end) {
			jule::Ptr<_1ab259c2a_TypeAlias> _120421_g = *it;
			{
				if (((*(_120421_g))._field_Ident == (*((*(_119730_decl))))._field_Ident)) {
					if (((*((*(_119730_decl))))._field_Generics.len() > 0LL)) {
						_1ab26d117_pushErr(_self_, (*((*(_119730_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_119730_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_1ab10acb8_StructIns> _121021_st = _1ab25e6e1_Struct((*((*(_120421_g))._field_Kind))._field_Kind.ptr());;
					if ((_121021_st != nullptr)) {
						jule::Bool _121221_ok = _1ab26e789_checkIllegalCycles(_self_, _119730_decl, jule::Any((*(_121021_st))._field_Decl, &__jule_any_type65));;
						if ((!(_121221_ok))) {
							return nullptr;;
						};
					};
					return (*((*((*(_120421_g))._field_Kind))._field_Kind))._field_Kind;;
				};
			}
			_iter_next_1bb26a203:;
			++it;
			goto _iter_begin_1bb26a203;
		}
		_iter_end_1bb26a203:;
	};
	if ((!((*((*(_119730_decl))))._field_Binded))) {
		jule::Ptr<_1ab133890_Enum> _122217_e = _1ab27a553_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab27a0ad_FindEnum((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident);;
		if ((_122217_e != nullptr)) {
			return jule::Trait<_1ab25a566_Kind>(_1ab270081_fromEnum(_self_, _119730_decl, &(_122217_e)), 3);;
		};
		jule::Ptr<_1ab13509a_TypeEnum> _122717_te = _1ab27a553_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab27a3ee_FindTypeEnum((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident);;
		if ((_122717_te != nullptr)) {
			return jule::Trait<_1ab25a566_Kind>(_1ab27047c_fromTypeEnum(_self_, _119730_decl, &(_122717_te)), 4);;
		};
		jule::Ptr<_1ab131195_Trait> _123217_t = _1ab27a553_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab279c6c_FindTrait((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident);;
		if ((_123217_t != nullptr)) {
			return jule::Trait<_1ab25a566_Kind>(_1ab270878_fromTrait(_self_, _119730_decl, &(_123217_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1ab26d117_pushErr(_self_, (*((*(_119730_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab10803a_Struct> _124113_s = _1ab27a553_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab279530_FindStruct((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident, (*((*(_119730_decl))))._field_Binded);;
	if ((_124113_s != nullptr)) {
		return jule::Trait<_1ab25a566_Kind>(_1ab271824_fromStruct(_self_, _119730_decl, &(_124113_s)), 0);;
	};
	jule::Ptr<_1ab259c2a_TypeAlias> _124613_ta = _1ab27a553_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab279134_FindTypeAlias((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident, (*((*(_119730_decl))))._field_Binded);;
	if (((_124613_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_124613_ta=_1ab346c90_findBuiltinTypeAlias((*((*(_119730_decl))))._field_Ident);
	};
	if ((_124613_ta != nullptr)) {
		return _1ab26eb85_fromTypeAlias(_self_, _119730_decl, &(_124613_ta));;
	};
	_1ab26d117_pushErr(_self_, (*((*(_119730_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_119730_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait<_1ab25a566_Kind> _1ab271ea6_buildIdent(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0d7a53_IdentTypeDecl> _125833_decl) {
	return _1ab271b65_getDef(_self_, &(_125833_decl));;
}



inline jule::Trait<_1ab25a566_Kind> _1ab2722e7_buildSubIdent(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0d7d50_SubIdentTypeDecl> _126236_decl) {
	jule::Trait<_1ab25a566_Kind> _126313_ident = _1ab271ea6_buildIdent(_self_, (*(_126236_decl))._field_Idents[0LL]);;
	if ((_126313_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _126313_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1bb276907:;
			{
				goto _match_end_1bb276374;
			}
		}
		else {
			_case_begin_1bb2763c9:;
			{
				_1ab26d117_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bb276374:;
	};
	jule::Ptr<_1ab13509a_TypeEnum> _127413_t = _126313_ident.cast_ptr<_1ab13509a_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1ab0d7a53_IdentTypeDecl>> _127513_idents = (*(_126236_decl))._field_Idents.slice(1LL);;
	{
		auto expr = &(_127513_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb277694:;
		if (it != expr_end) {
			jule::I64 _127613_i = it - expr->begin();
			jule::Ptr<_1ab0d7a53_IdentTypeDecl> _127616_id = *it;
			{
				jule::Ptr<_1ab1349c3_TypeEnumItem> _127717_item = _1ab135b5b_FindItem(_127413_t.ptr(), (*(_127616_id))._field_Ident);;
				if ((_127717_item == nullptr)) {
					_1ab26d117_pushErr(_self_, (*(_127616_id))._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_127413_t))._field_Ident, &__jule_any_type4),jule::Any((*(_127616_id))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_127513_idents.len() - _127613_i) == 1LL)) {
					_1ab26da74_pushReferenceByKind(_self_, &((*((*(_127717_item))._field_Kind))._field_Kind));
					return jule::Trait<_1ab25a566_Kind>((*((*(_127717_item))._field_Kind))._field_Kind, 19);;
				};
				_127413_t=_1ab25dba7_TypeEnum((*((*(_127717_item))._field_Kind))._field_Kind.ptr());
				if ((_127413_t == nullptr)) {
					_1ab26d117_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1bb277694:;
			++it;
			_127613_i++;
			goto _iter_begin_1bb277694;
		}
		_iter_end_1bb277694:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab267122_Sptr> _1ab272638_buildSptrFromType(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _129641_elem) {
	{
		
		if (((*(_129641_elem)) == nullptr)) {
			_case_begin_1bb27bbd7:;
			{
				return nullptr;;
			}
		}
		else if ((_1ab25e6e1_Struct((*(_129641_elem)).ptr()) != nullptr)) {
			_case_begin_1bb27bc5e:;
			{
				jule::Ptr<_1ab10acb8_StructIns> _130213_s = _1ab25e6e1_Struct((*(_129641_elem)).ptr());;
				if ((((*(_130213_s))._field_Decl != nullptr) && (*((*(_130213_s))._field_Decl))._field_Binded)) {
					_1ab26d117_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1ab25de3d_Arr((*(_129641_elem)).ptr()) != nullptr) && (*(_1ab25de3d_Arr((*(_129641_elem)).ptr())))._field_Auto)) {
			_case_begin_1bb27bcd6:;
			{
				_1ab26d117_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bb277ebe:;
	};
	return jule::new_ptr<_1ab267122_Sptr>(_1ab267122_Sptr{._field_Elem=(*(_129641_elem))});;
}



inline jule::Ptr<_1ab267122_Sptr> _1ab272979_buildSptr(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0d84e3_SptrTypeDecl> _131632_decl) {
	jule::Bool _13179_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13179_cycleRisk;
	});;
	jule::Ptr<_1ab25aa1c_TypeKind> _132113_elem = _1ab275075_checkDecl(_self_, &((*(_131632_decl))._field_Elem));;
	return _1ab272638_buildSptrFromType(_self_, &(_132113_elem));;
}



inline jule::Ptr<_1ab26a8d9_Ptr> _1ab272cba_buildPtrFromType(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _132540_elem) {
	{
		
		if (((*(_132540_elem)) == nullptr)) {
			_case_begin_1bb281901:;
			{
				return nullptr;;
			}
		}
		else if (((_1ab25de3d_Arr((*(_132540_elem)).ptr()) != nullptr) && (*(_1ab25de3d_Arr((*(_132540_elem)).ptr())))._field_Auto)) {
			_case_begin_1bb281978:;
			{
				_1ab26d117_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1ab26a8d9_Ptr>();;
			}
		}
		_match_end_1bb2817e1:;
	};
	return jule::new_ptr<_1ab26a8d9_Ptr>(_1ab26a8d9_Ptr{._field_Elem=(*(_132540_elem))});;
}



inline jule::Ptr<_1ab26a8d9_Ptr> _1ab27310b_buildPtr(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0d8e72_PtrTypeDecl> _134031_decl) {
	jule::Bool _13419_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13419_cycleRisk;
	});;
	jule::Ptr<_1ab25aa1c_TypeKind> _134517_elem = nullptr;;
	if ((!(_1ab0d92d5_IsUnsafe(_134031_decl.ptr())))) {
		_134517_elem=_1ab275075_checkDecl(_self_, &((*(_134031_decl))._field_Elem));
		return _1ab272cba_buildPtrFromType(_self_, &(_134517_elem));;
	};
	return jule::new_ptr<_1ab26a8d9_Ptr>(_1ab26a8d9_Ptr{._field_Elem=_134517_elem});;
}



inline jule::Ptr<_1ab267ae5_Slc> _1ab27344c_buildSlc(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0d8878_SlcTypeDecl> _135731_decl) {
	jule::Bool _13589_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13589_cycleRisk;
	});;
	jule::Ptr<_1ab25aa1c_TypeKind> _136213_elem = _1ab275075_checkDecl(_self_, &((*(_135731_decl))._field_Elem));;
	{
		
		if ((_136213_elem == nullptr)) {
			_case_begin_1bb2865e8:;
			{
				return nullptr;;
			}
		}
		else if (((_1ab25de3d_Arr(_136213_elem.ptr()) != nullptr) && (*(_1ab25de3d_Arr(_136213_elem.ptr())))._field_Auto)) {
			_case_begin_1bb286670:;
			{
				_1ab26d117_pushErr(_self_, (*((*(_135731_decl))._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bb28653d:;
	};
	return jule::new_ptr<_1ab267ae5_Slc>(_1ab267ae5_Slc{._field_Elem=_136213_elem});;
}



inline jule::Ptr<_1ab269e16_Arr> _1ab27378d_buildArr(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0d9714_ArrTypeDecl> _137831_decl) {
	jule::I64 _137913_n = 0LL;;
	if ((!(_1ab0d9a77_AutoSized(_137831_decl.ptr())))) {
		jule::Ptr<_1ab22a228_Data> _138217_size = _1ab24a17c_evalExpr(_1ab1b0763_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*(_137831_decl))._field_Size);;
		if ((_138217_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1ab22aaec_IsConst(_138217_size.ptr())))) {
			_1ab26d117_pushErr(_self_, (*((*(_137831_decl))._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1ab25d16d_Prim((*(_138217_size))._field_Kind.ptr()) == nullptr) || (!(_1d8bce3b9_IsInt((*(_1ab25d16d_Prim((*(_138217_size))._field_Kind.ptr())))._field_Kind))))) {
			_1ab26d117_pushErr(_self_, (*((*(_137831_decl))._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_137913_n=static_cast<jule::I64>(static_cast<jule::I64>(_1d8bd2763_AsI64((*(_138217_size))._field_Constant.ptr())));
		if ((_137913_n < 0LL)) {
			_1ab26d117_pushErr(_self_, (*((*(_137831_decl))._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _140017_max = _1d8bc82d6_MaxI(jule::Str::lit("int", 3));;
			if (((_1d8bc0e27_BitSize != 64LL) && (static_cast<jule::I64>(_137913_n) > _140017_max))) {
				_1ab26d117_pushErr(_self_, (*((*(_137831_decl))._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1ab257431_constoa(&((*(_138217_size))._field_Constant)), &__jule_any_type4),jule::Any(_1d8bbe7c7_FmtInt(_140017_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1ab25aa1c_TypeKind> _140913_elem = _1ab275075_checkDecl(_self_, &((*(_137831_decl))._field_Elem));;
	{
		
		if ((_140913_elem == nullptr)) {
			_case_begin_1bb290a20:;
			{
				return nullptr;;
			}
		}
		else if (((_1ab25de3d_Arr(_140913_elem.ptr()) != nullptr) && (*(_1ab25de3d_Arr(_140913_elem.ptr())))._field_Auto)) {
			_case_begin_1bb290a97:;
			{
				_1ab26d117_pushErr(_self_, (*((*(_137831_decl))._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bb290998:;
	};
	return jule::new_ptr<_1ab269e16_Arr>(_1ab269e16_Arr{._field_Auto=_1ab0d9a77_AutoSized(_137831_decl.ptr()), ._field_N=_137913_n, ._field_Elem=_140913_elem});;
}



inline jule::Ptr<_1ab269289_Map> _1ab273ace_buildMap(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0d9e62_MapTypeDecl> _142731_decl) {
	jule::Bool _14289_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14289_cycleRisk;
	});;
	jule::Ptr<_1ab25aa1c_TypeKind> _143213_key = _1ab275075_checkDecl(_self_, &((*(_142731_decl))._field_Key));;
	if ((_143213_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab25aa1c_TypeKind> _143713_val = _1ab275075_checkDecl(_self_, &((*(_142731_decl))._field_Val));;
	if ((_143713_val == nullptr)) {
		return nullptr;;
	};
	if ((_1ab25d921_Enum(_143713_val.ptr()) != nullptr)) {
		_1ab26d117_pushErr(_self_, (*((*(_142731_decl))._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1ab269289_Map>(_1ab269289_Map{._field_Key=_143213_key, ._field_Val=_143713_val});;
}



inline jule::Ptr<_1ab2686d9_Tuple> _1ab273e20_buildTuple(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0d8b75_TupleTypeDecl> _145133_decl) {
	jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>> _145213_types = jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>>::alloc(0LL, (*(_145133_decl))._field_Types.len());;
	{
		auto expr = &((*(_145133_decl))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb29642c:;
		if (it != expr_end) {
			jule::Ptr<_1ab0d7448_TypeDecl> _145321_t = *it;
			{
				jule::Ptr<_1ab25aa1c_TypeKind> _145417_kind = _1ab275075_checkDecl(_self_, &(_145321_t));;
				if ((_145417_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>> &__jule_push_dest = _145213_types; __jule_push_dest.push(_145417_kind); };
			}
			_iter_next_1bb29642c:;
			++it;
			goto _iter_begin_1bb29642c;
		}
		_iter_end_1bb29642c:;
	};
	return jule::new_ptr<_1ab2686d9_Tuple>(_1ab2686d9_Tuple{._field_Types=_145213_types});;
}



inline jule::Bool _1ab274261_checkFuncTypes(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab120d00_FnIns>* _146438_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_146438_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb297d68:;
		if (it != expr_end) {
			jule::Ptr<_1ab11ed54_ParamIns> _146521_p = *it;
			{
				(*(_146521_p))._field_Kind=_1ab274c34_build(_self_, &((*((*((*((*(_146521_p))._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*(_146521_p))._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1ab1b307e_checkFnParamKind((*(_self_))._field_s, &(_146521_p));
			}
			_iter_next_1bb297d68:;
			++it;
			goto _iter_begin_1bb297d68;
		}
		_iter_end_1bb297d68:;
	};
	if ((!(_1ab11d36e_IsVoid((*((*(_146438_f))))._field_Decl.ptr())))) {
		(*((*(_146438_f))))._field_Result=_1ab274c34_build(_self_, &((*((*((*((*((*((*(_146438_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl))._field_Kind));
		__jule_func_result = ((*((*(_146438_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab120d00_FnIns> _1ab2745a2_buildFunc(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0e9108_FnDecl> _148232_decl) {
	jule::Bool _14839_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14839_cycleRisk;
	});;
	if (((*(_148232_decl))._field_Generics.len() > 0LL)) {
		_1ab26d117_pushErr(_self_, (*(_148232_decl))._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab11cdeb_Fn> _149213_f = _1ab1274bb_buildFunc(_148232_decl);;
	jule::I64 _14949_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1ab1bc374_checkAnonFuncDecl((*(_self_))._field_s, &(_149213_f));
	if ((_14949_n != (*((*(_self_))._field_s))._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1ab120d00_FnIns> _150013_ins = _1ab11e3c5_instanceForce(_149213_f);;
	(*(_150013_ins))._field_Anon=true;
	jule::Bool _15039_ok = _1ab274261_checkFuncTypes(_self_, &(_150013_ins));;
	if ((!(_15039_ok))) {
		return nullptr;;
	};
	return _150013_ins;;
}



inline jule::Trait<_1ab25a566_Kind> _1ab2748e3_buildByNamespace(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0d81e6_NamespaceTypeDecl> _151139_decl) {
	jule::Str _15129_path = _1ab277594_buildLinkPathByTokens(&((*(_151139_decl))._field_Idents));;
	jule::Ptr<_1ab184bdd_ImportInfo> _151313_imp = _1ab27a553_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab27883c_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)>([=](jule::Ptr<_1ab184bdd_ImportInfo> _151349_imp) mutable -> jule::Bool {
		if ((((*(_151139_decl))._field_Idents.len() == 1LL) && ((*(_151349_imp))._field_Alias == _15129_path))) {
			return true;;
		};
		return (((*(_151349_imp))._field_LinkPath == _15129_path) && _1ab187806_isAccessibleViaSelection(_151349_imp.ptr()));;
	}));;
	jule::Str _15209_selfIdent = jule::Str::lit("self", 4);;
	if (((_151313_imp == nullptr) || (!(_1ab18722e_isLookupable(_151313_imp.ptr(), &(_15209_selfIdent)))))) {
		_1ab26d117_pushErr(_self_, (*(_151139_decl))._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_15129_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_1ab26d513_disallowBuiltin(_self_);
	jule::Trait<_1ab27a553_Lookup> _152713_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1ab27a553_Lookup>(_151313_imp, 1);
	jule::Ptr<_1ab25aa1c_TypeKind> _152913_kind = _1ab275075_checkDecl(_self_, &((*(_151139_decl))._field_Kind));;
	(*(_self_))._field_lookup=_152713_lookup;
	_1ab26d315_allowBuiltin(_self_);
	return jule::Trait<_1ab25a566_Kind>(_152913_kind, 19);;
}



inline jule::Ptr<_1ab25aa1c_TypeKind> _1ab274c34_build(_1ab26c8ca_typeChecker* _self_, jule::Any* _153529_declKind) {
	jule::Trait<_1ab25a566_Kind> _153617_kind = nullptr;;
	{
		auto &_match_expr{ (*(_153529_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1bb2a7196:;
			{
				jule::Trait<_1ab25a566_Kind> _153917_t = _1ab271ea6_buildIdent(_self_, (*(_153529_declKind)).cast_ptr<_1ab0d7a53_IdentTypeDecl>(&__jule_any_type20));;
				if ((_153917_t != nullptr)) {
					_153617_kind=_153917_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1bb2a655d:;
			{
				jule::Trait<_1ab25a566_Kind> _154417_t = _1ab2722e7_buildSubIdent(_self_, (*(_153529_declKind)).cast_ptr<_1ab0d7d50_SubIdentTypeDecl>(&__jule_any_type86));;
				if ((_154417_t != nullptr)) {
					_153617_kind=_154417_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1bb2a675b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab267122_Sptr> _155017_t = _1ab272979_buildSptr(_self_, (*(_153529_declKind)).cast_ptr<_1ab0d84e3_SptrTypeDecl>(&__jule_any_type72));;
				if ((_155017_t != nullptr)) {
					_153617_kind=jule::Trait<_1ab25a566_Kind>(_155017_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1bb2a67c2:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab26a8d9_Ptr> _155617_t = _1ab27310b_buildPtr(_self_, (*(_153529_declKind)).cast_ptr<_1ab0d8e72_PtrTypeDecl>(&__jule_any_type71));;
				if ((_155617_t != nullptr)) {
					_153617_kind=jule::Trait<_1ab25a566_Kind>(_155617_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1bb2a6838:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab267ae5_Slc> _156217_t = _1ab27344c_buildSlc(_self_, (*(_153529_declKind)).cast_ptr<_1ab0d8878_SlcTypeDecl>(&__jule_any_type70));;
				if ((_156217_t != nullptr)) {
					_153617_kind=jule::Trait<_1ab25a566_Kind>(_156217_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1bb2a689e:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab269e16_Arr> _156817_t = _1ab27378d_buildArr(_self_, (*(_153529_declKind)).cast_ptr<_1ab0d9714_ArrTypeDecl>(&__jule_any_type69));;
				if ((_156817_t != nullptr)) {
					_153617_kind=jule::Trait<_1ab25a566_Kind>(_156817_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bb2a7273:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab269289_Map> _157417_t = _1ab273ace_buildMap(_self_, (*(_153529_declKind)).cast_ptr<_1ab0d9e62_MapTypeDecl>(&__jule_any_type73));;
				if ((_157417_t != nullptr)) {
					_153617_kind=jule::Trait<_1ab25a566_Kind>(_157417_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1bb2a72d9:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab2686d9_Tuple> _158017_t = _1ab273e20_buildTuple(_self_, (*(_153529_declKind)).cast_ptr<_1ab0d8b75_TupleTypeDecl>(&__jule_any_type74));;
				if ((_158017_t != nullptr)) {
					_153617_kind=jule::Trait<_1ab25a566_Kind>(_158017_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bb2a7350:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab120d00_FnIns> _158617_t = _1ab2745a2_buildFunc(_self_, (*(_153529_declKind)).cast_ptr<_1ab0e9108_FnDecl>(&__jule_any_type14));;
				if ((_158617_t != nullptr)) {
					_153617_kind=jule::Trait<_1ab25a566_Kind>(_158617_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1bb2a73b6:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1ab25a566_Kind> _159217_t = _1ab2748e3_buildByNamespace(_self_, (*(_153529_declKind)).cast_ptr<_1ab0d81e6_NamespaceTypeDecl>(&__jule_any_type90));;
				if ((_159217_t != nullptr)) {
					_153617_kind=_159217_t;
				};
			}
		}
		else {
			_case_begin_1bb2a66e5:;
			{
				_1ab26d117_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bb2a6690:;
	};
	if ((_153617_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _153617_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_1bc873dc1:;
			{
				return _153617_kind.cast_ptr<_1ab25aa1c_TypeKind>(19);;
			}
		}
		else {
			_case_begin_1bb2a765d:;
			{
				jule::Ptr<_1ab25aa1c_TypeKind> _160717_tk = jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=_153617_kind});;
				{
					auto &_match_expr{ _153617_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_1bc872793:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_160717_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1bc87281a:;
						{
							jule::Ptr<_1ab10acb8_StructIns> _161417_s = _153617_kind.cast_ptr<_1ab10acb8_StructIns>(0);;
							if ((((*(_161417_s))._field_Decl != nullptr) && (*((*(_161417_s))._field_Decl))._field_Binded)) {
								(*(_160717_tk))._field_BindIdent=(*((*(_161417_s))._field_Decl))._field_Ident;
							};
						}
					}
					_match_end_1bc87272c:;
				};
				return _160717_tk;;
			}
		}
		_match_end_1bc871e68:;
	};
}



inline jule::Ptr<_1ab25aa1c_TypeKind> _1ab275075_checkDecl(_1ab26c8ca_typeChecker* _self_, jule::Ptr<_1ab0d7448_TypeDecl>* _162333_decl) {
	jule::Ptr<_1ab0c1e7c_Token> _162513_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_162333_decl))))._field_Token;
	jule::Ptr<_1ab25aa1c_TypeKind> _162813_kind = _1ab274c34_build(_self_, &((*((*(_162333_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_162513_errorToken;
	return _162813_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab26c8ca_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1ab2759c1_prim(jule::Str* _165021_ident, jule::Ptr<_1ab2635e6_Prim> _165033_t) {
	return ((*(_165033_t))._field_Kind == (*(_165021_ident)));;
}



inline jule::Bool static__1ab275d45_exist(jule::Str* _165422_ident, jule::Ptr<_1ab25aa1c_TypeKind>* _165439_k) {
	{
		
		if ((_1ab25d16d_Prim((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1bc878b0c:;
			{
				return static__1ab2759c1_prim(_165422_ident, _1ab25d16d_Prim((*(_165439_k)).ptr()));;
			}
		}
		else if ((_1ab25d404_Sptr((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1bc878b84:;
			{
				jule::Ptr<_1ab267122_Sptr> _165917_sptr = _1ab25d404_Sptr((*(_165439_k)).ptr());;
				return static__1ab275d45_exist(_165422_ident, &((*(_165917_sptr))._field_Elem));;
			}
		}
		else if ((_1ab25d68a_Ptr((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1bc878e09:;
			{
				jule::Ptr<_1ab26a8d9_Ptr> _166217_ptr = _1ab25d68a_Ptr((*(_165439_k)).ptr());;
				return static__1ab275d45_exist(_165422_ident, &((*(_166217_ptr))._field_Elem));;
			}
		}
		else if ((_1ab25e1c4_Slc((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1bc878e70:;
			{
				jule::Ptr<_1ab267ae5_Slc> _166517_slc = _1ab25e1c4_Slc((*(_165439_k)).ptr());;
				return static__1ab275d45_exist(_165422_ident, &((*(_166517_slc))._field_Elem));;
			}
		}
		else if ((_1ab25de3d_Arr((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1bc878ed6:;
			{
				jule::Ptr<_1ab269e16_Arr> _166817_arr = _1ab25de3d_Arr((*(_165439_k)).ptr());;
				return static__1ab275d45_exist(_165422_ident, &((*(_166817_arr))._field_Elem));;
			}
		}
		else if ((_1ab25ec0d_Map((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1bc87905d:;
			{
				jule::Ptr<_1ab269289_Map> _167117_m = _1ab25ec0d_Map((*(_165439_k)).ptr());;
				return (static__1ab275d45_exist(_165422_ident, &((*(_167117_m))._field_Key)) || static__1ab275d45_exist(_165422_ident, &((*(_167117_m))._field_Val)));;
			}
		}
		else if ((_1ab25e6e1_Struct((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1bc8790d5:;
			{
				jule::Ptr<_1ab10acb8_StructIns> _167517_s = _1ab25e6e1_Struct((*(_165439_k)).ptr());;
				{
					auto expr = &((*(_167517_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc880053:;
					if (it != expr_end) {
						jule::Ptr<_1ab259136_InsGeneric> _167625_g = *it;
						{
							if (static__1ab275d45_exist(_165422_ident, &((*(_167625_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1bc880053:;
						++it;
						goto _iter_begin_1bc880053;
					}
					_iter_end_1bc880053:;
				};
				return false;;
			}
		}
		else if ((_1ab25e45a_Fn((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1bc8791e5:;
			{
				jule::Ptr<_1ab120d00_FnIns> _168317_f = _1ab25e45a_Fn((*(_165439_k)).ptr());;
				{
					auto expr = &((*(_168317_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc880ce0:;
					if (it != expr_end) {
						jule::Ptr<_1ab11ed54_ParamIns> _168425_p = *it;
						{
							if (_1ab11ba43_IsSelf((*(_168425_p))._field_Decl.ptr())) {
								goto _iter_next_1bc880ce0;
							};
							if (static__1ab275d45_exist(_165422_ident, &((*(_168425_p))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1bc880ce0:;
						++it;
						goto _iter_begin_1bc880ce0;
					}
					_iter_end_1bc880ce0:;
				};
				if (((*(_168317_f))._field_Result != nullptr)) {
					return static__1ab275d45_exist(_165422_ident, &((*(_168317_f))._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1ab25ee94_Tup((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1bc87925b:;
			{
				jule::Ptr<_1ab2686d9_Tuple> _169717_tup = _1ab25ee94_Tup((*(_165439_k)).ptr());;
				{
					auto expr = &((*(_169717_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc8819e4:;
					if (it != expr_end) {
						jule::Ptr<_1ab25aa1c_TypeKind> _169825_t = *it;
						{
							if (static__1ab275d45_exist(_165422_ident, &(_169825_t))) {
								return true;;
							};
						}
						_iter_next_1bc8819e4:;
						++it;
						goto _iter_begin_1bc8819e4;
					}
					_iter_end_1bc8819e4:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1bc8789b9:;
			{
				return false;;
			}
		}
		_match_end_1bc87890e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab27555e_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac8b6451_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa0d87be_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1aa0d97c0_stop(_1aa0d9160_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1aa0d9a56_stopped(_1aa0d9160_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1aa0d9cdc_finished(_1aa0d9160_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1aa0da073_isLastSt(_1aa0d9160_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1aa0da3d6_pushErr(_1aa0d9160_scopeParser* _self_, jule::Ptr<_1ab0c1e7c_Token> _18926_token, jule::Str _18941_fmt) {
	_1aa107b0c_pushErr((*(_self_))._field_p.ptr(), _18926_token, _18941_fmt, jule::Slice<jule::Any>());
}



inline void _1aa0da749_pushSuggestion(_1aa0d9160_scopeParser* _self_, jule::Str _19433_fmt, jule::Slice<jule::Any> _19446_args) {
	_1aa107e70_pushSuggestion((*(_self_))._field_p.ptr(), _19433_fmt, _19446_args);
}



inline void _1aa0daa02_insertAsNext(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _19836_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1aa0d87be_stmt>(_1aa0d87be_stmt{._field_tokens=(*(_19836_tokens)), });
}



inline jule::Ptr<_1aa0d87be_stmt> _1aa0dac88_next(_1aa0d9160_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1ab0e7469_ScopeTree> _1aa0db184_buildScope(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _20834_tokens, jule::Ptr<_1ab0c1e7c_Token> _20856_end) {
	jule::Ptr<_1ab0e7469_ScopeTree> _20913_s = _1d8bd9869_newScope();;
	(*(_20913_s))._field_Parent=(*(_self_))._field_s;
	(*(_20913_s))._field_End=_20856_end;
	_1aa0d9160_scopeParser _21213_ssp = _1aa0d9160_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1aa0e5bb6_build(&_21213_ssp, _20834_tokens, &(_20913_s));
	return _20913_s;;
}



inline jule::Ptr<_1ab0ea1d6_VarDecl> _1aa0db4c5_buildVarSt(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _21934_tokens) {
	jule::Ptr<_1ab0ea1d6_VarDecl> _22013_v = _1aa10a989_buildVar((*(_self_))._field_p, (*(_21934_tokens)));;
	(*(_22013_v))._field_Scope=(*(_self_))._field_s;
	return _22013_v;;
}



inline jule::Ptr<_1ab0ea5b0_RetSt> _1aa0db816_buildRetSt(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _22533_tokens) {
	jule::Ptr<_1ab0ea5b0_RetSt> _22613_st = jule::new_ptr<_1ab0ea5b0_RetSt>(_1ab0ea5b0_RetSt{._field_Token=_22533_tokens[0LL], });;
	if ((_22533_tokens.len() > 1LL)) {
		(_22533_tokens).mut_slice(1LL);;
		(*(_22613_st))._field_Expr=_1aa1082b1_buildExpr((*(_self_))._field_p, &(_22533_tokens));
	};
	return _22613_st;;
}



inline jule::Ptr<_1ab0eac53_Iter> _1aa0dbb57_buildWhileNextIter(_1aa0d9160_scopeParser* _self_, jule::Ptr<_1aa0d87be_stmt>* _23642_s) {
	jule::Ptr<_1ab0eac53_Iter> _23713_it = jule::new_ptr<_1ab0eac53_Iter>(_1ab0eac53_Iter{._field_Token=(*((*(_23642_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _24013_tokens = (*((*(_23642_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1ab0eb57d_WhileKind> _24113_kind = jule::new_ptr<_1ab0eb57d_WhileKind>();;
	if ((_24013_tokens.len() > 0LL)) {
		(*(_24113_kind))._field_Expr=_1aa1082b1_buildExpr((*(_self_))._field_p, &(_24013_tokens));
	};
	if (_1aa0da073_isLastSt(_self_)) {
		_1aa0da3d6_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_24013_tokens=(*(_1aa0dac88_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _25313_stTokens = _1aa1025c9_getBlockExpr(&(_24013_tokens));;
	if ((_25313_stTokens.len() > 0LL)) {
		jule::Ptr<_1aa0d87be_stmt> _25517_stmt = jule::new_ptr<_1aa0d87be_stmt>(_1aa0d87be_stmt{._field_tokens=_25313_stTokens, ._field_terminated=(*((*(_23642_s))))._field_terminated});;
		(*(_24113_kind))._field_NextToken=_25313_stTokens[0LL];
		(*(_24113_kind))._field_Next=_1aa0e5853_buildSt(_self_, &(_25517_stmt));
	};
	jule::I64 _26313_i = _25313_stTokens.len();;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _26413_blockTokens = _1aa10580d_range(&(_26313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_24013_tokens));;
	if ((_26413_blockTokens == nullptr)) {
		_1aa0d97c0_stop(_self_);
		_1aa0da3d6_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1aa0da749_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26313_i < _24013_tokens.len())) {
		_1aa0da3d6_pushErr(_self_, _24013_tokens[_26313_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_23713_it))._field_Scope=_1aa0db184_buildScope(_self_, &(_26413_blockTokens), _24013_tokens[(_26313_i - 1LL)]);
	(*(_23713_it))._field_Kind=jule::Any(_24113_kind, &__jule_any_type37);
	return _23713_it;;
}



inline jule::Ptr<_1ab0eb57d_WhileKind> _1aa0dbe98_buildWhileIterKind(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _28142_tokens) {
	return jule::new_ptr<_1ab0eb57d_WhileKind>(_1ab0eb57d_WhileKind{._field_Expr=_1aa1082b1_buildExpr((*(_self_))._field_p, _28142_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _1aa0dc2d9_getRangeKindKeysTokens(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _28746_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _28813_vars;;
	jule::Slice<_1d7b81cb8_Log> _28819_errs;;
	({
		__jule_tuple_ssx_1ab0c1e7c_Token__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = _1aa10607d_parts(_28746_toks, static_cast<jule::U64>(5LLU), true);
		_28813_vars = __jule_assign_result.__jule_result_arg0;
		_28819_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_28819_errs);;
	return _28813_vars;;
}



inline jule::Ptr<_1ab0ea1d6_VarDecl> _1aa0dc62a_buildRangeKindKey(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _29341_tokens) {
	if (((*(_29341_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1ab0ea1d6_VarDecl> _29713_key = jule::new_ptr<_1ab0ea1d6_VarDecl>(_1ab0ea1d6_VarDecl{._field_Token=(*(_29341_tokens))[0LL], });;
	if (((*((*(_29713_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_29713_key))._field_Mutable=true;
		if (((*(_29341_tokens)).len() == 1LL)) {
			_1aa0da3d6_pushErr(_self_, (*(_29713_key))._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*(_29713_key))._field_Token=(*(_29341_tokens))[1LL];
	} else if (((*(_29341_tokens)).len() > 1LL)) {
		_1aa0da3d6_pushErr(_self_, (*(_29341_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_29713_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1aa0da3d6_pushErr(_self_, (*(_29713_key))._field_Token, jule::Str::lit("invalid syntax", 14));
		_1aa0da749_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_29713_key))._field_Ident=(*((*(_29713_key))._field_Token))._field_Kind;
	return _29713_key;;
}



inline jule::Slice<jule::Ptr<_1ab0ea1d6_VarDecl>> _1aa0dc96b_buildRangeKindKeys(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>>* _31842_parts) {
	jule::Slice<jule::Ptr<_1ab0ea1d6_VarDecl>> _31917_keys = nullptr;;
	{
		auto expr = _31842_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca4ee37:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _32021_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab0ea1d6_VarDecl>> &__jule_push_dest = _31917_keys; __jule_push_dest.push(_1aa0dc62a_buildRangeKindKey(_self_, &(_32021_tokens))); };
			}
			_iter_next_1bca4ee37:;
			++it;
			goto _iter_begin_1bca4ee37;
		}
		_iter_end_1bca4ee37:;
	};
	return _31917_keys;;
}



inline void _1aa0dccce_setupRangeKindKeysPlain(_1aa0d9160_scopeParser* _self_, jule::Ptr<_1ab0ebe85_RangeKind>* _32647_rng, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _32669_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _32713_keyTokens = _1aa0dc2d9_getRangeKindKeysTokens(_self_, _32669_tokens);;
	if ((_32713_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32713_keyTokens.len() > 2LL)) {
		_1aa0da3d6_pushErr(_self_, (*((*(_32647_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1ab0ea1d6_VarDecl>> _33413_keys = _1aa0dc96b_buildRangeKindKeys(_self_, &(_32713_keyTokens));;
	(*((*(_32647_rng))))._field_KeyA=_33413_keys[0LL];
	if ((_33413_keys.len() > 1LL)) {
		(*((*(_32647_rng))))._field_KeyB=_33413_keys[1LL];
	};
}



inline void _1aa0dd142_setupRangeKindKeysExplicit(_1aa0d9160_scopeParser* _self_, jule::Ptr<_1ab0ebe85_RangeKind>* _34150_rng, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _34172_tokens) {
	jule::I64 _34213_i = 0LL;;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _34313_rang = _1aa10580d_range(&(_34213_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34172_tokens);;
	if ((_34213_i < (*(_34172_tokens)).len())) {
		_1aa0da3d6_pushErr(_self_, (*((*(_34150_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_1aa0dccce_setupRangeKindKeysPlain(_self_, _34150_rng, &(_34313_rang));
}



inline void _1aa0dd4a5_setupRangeKindKeys(_1aa0d9160_scopeParser* _self_, jule::Ptr<_1ab0ebe85_RangeKind>* _35042_rng, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _35064_tokens) {
	if (((*((*(_35064_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1aa0dd142_setupRangeKindKeysExplicit(_self_, _35042_rng, _35064_tokens);
		return;;
	};
	_1aa0dccce_setupRangeKindKeysPlain(_self_, _35042_rng, _35064_tokens);
}



inline jule::Ptr<_1ab0ebe85_RangeKind> _1aa0dd95b_buildRangeIterKind(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _35842_var_tokens, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _35914_exprTokens, jule::Ptr<_1ab0c1e7c_Token>* _35941_inToken) {
	jule::Ptr<_1ab0ebe85_RangeKind> _36013_rng = jule::new_ptr<_1ab0ebe85_RangeKind>(_1ab0ebe85_RangeKind{._field_InToken=(*(_35941_inToken)), });;
	if (((*(_35914_exprTokens)).len() == 0LL)) {
		_1aa0da3d6_pushErr(_self_, (*(_36013_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _36013_rng;;
	};
	(*(_36013_rng))._field_Expr=_1aa1082b1_buildExpr((*(_self_))._field_p, _35914_exprTokens);
	if (((*(_35842_var_tokens)).len() > 0LL)) {
		_1aa0dd4a5_setupRangeKindKeys(_self_, &(_36013_rng), _35842_var_tokens);
	};
	return _36013_rng;;
}



inline jule::Any _1aa0ddd57_buildCommonIterKind(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _37443_tokens, jule::Ptr<_1ab0c1e7c_Token>* _37462_err_tok) {
	jule::I64 _37513_braceN = 0LL;;
	{
		auto expr = _37443_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca58bee:;
		if (it != expr_end) {
			jule::I64 _37614_i = it - expr->begin();
			jule::Ptr<_1ab0c1e7c_Token> _37621_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bca59d43:;
						{
							(_37513_braceN)++;
							goto _iter_next_1bca58bee;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bca59dba:;
						{
							(_37513_braceN)--;
						}
					}
					_match_end_1bca59c77:;
				};
				if ((_37513_braceN != 0LL)) {
					goto _iter_next_1bca58bee;
				};
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1bca59958:;
						{
							jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _39321_declTokens = (*(_37443_tokens)).slice(0LL, _37614_i);;
							jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _39421_exprTokens = (*(_37443_tokens)).slice((_37614_i + 1LL));;
							return jule::Any(_1aa0dd95b_buildRangeIterKind(_self_, &(_39321_declTokens), &(_39421_exprTokens), &(_37621_tok)), &__jule_any_type39);;
						}
					}
					_match_end_1bca5b32d:;
				};
			}
			_iter_next_1bca58bee:;
			++it;
			_37614_i++;
			goto _iter_begin_1bca58bee;
		}
		_iter_end_1bca58bee:;
	};
	return jule::Any(_1aa0dbe98_buildWhileIterKind(_self_, _37443_tokens), &__jule_any_type37);;
}



inline jule::Ptr<_1ab0eac53_Iter> _1aa0de198_buildCommonIter(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _40138_tokens) {
	jule::Ptr<_1ab0eac53_Iter> _40213_it = jule::new_ptr<_1ab0eac53_Iter>(_1ab0eac53_Iter{._field_Token=_40138_tokens[0LL], });;
	(_40138_tokens).mut_slice(1LL);;
	if ((_40138_tokens.len() == 0LL)) {
		_1aa0d97c0_stop(_self_);
		_1aa0da3d6_pushErr(_self_, (*(_40213_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1aa0da749_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _41213_exprTokens = _1aa1025c9_getBlockExpr(&(_40138_tokens));;
	if ((_41213_exprTokens.len() > 0LL)) {
		(*(_40213_it))._field_Kind=_1aa0ddd57_buildCommonIterKind(_self_, &(_41213_exprTokens), &((*(_40213_it))._field_Token));
	};
	jule::I64 _41613_i = _41213_exprTokens.len();;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _41713_scopeTokens = _1aa10580d_range(&(_41613_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40138_tokens));;
	if ((_41713_scopeTokens == nullptr)) {
		_1aa0d97c0_stop(_self_);
		_1aa0da3d6_pushErr(_self_, (*(_40213_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1aa0da749_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41613_i < _40138_tokens.len())) {
		_1aa0da3d6_pushErr(_self_, _40138_tokens[_41613_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_40213_it))._field_Scope=_1aa0db184_buildScope(_self_, &(_41713_scopeTokens), _40138_tokens[(_41613_i - 1LL)]);
	return _40213_it;;
}



inline jule::Ptr<_1ab0eac53_Iter> _1aa0de4d9_buildIterSt(_1aa0d9160_scopeParser* _self_, jule::Ptr<_1aa0d87be_stmt>* _43135_st) {
	if ((*((*(_43135_st))))._field_terminated) {
		return _1aa0dbb57_buildWhileNextIter(_self_, _43135_st);;
	};
	return _1aa0de198_buildCommonIter(_self_, (*((*(_43135_st))))._field_tokens);;
}



inline jule::Ptr<_1ab0ec35e_BreakSt> _1aa0de82a_buildBreakSt(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _43836_tokens) {
	jule::Ptr<_1ab0ec35e_BreakSt> _43913_brk = jule::new_ptr<_1ab0ec35e_BreakSt>(_1ab0ec35e_BreakSt{._field_Token=(*(_43836_tokens))[0LL], });;
	if (((*(_43836_tokens)).len() > 1LL)) {
		if (((*((*(_43836_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1aa0da3d6_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1aa0da749_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_43913_brk))._field_Label=(*(_43836_tokens))[1LL];
			if (((*(_43836_tokens)).len() > 2LL)) {
				_1aa0da3d6_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _43913_brk;;
}



inline jule::Ptr<_1ab0ec738_ContSt> _1aa0deb6b_buildContSt(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _45635_tokens) {
	jule::Ptr<_1ab0ec738_ContSt> _45713_cont = jule::new_ptr<_1ab0ec738_ContSt>(_1ab0ec738_ContSt{._field_Token=(*(_45635_tokens))[0LL], });;
	if (((*(_45635_tokens)).len() > 1LL)) {
		if (((*((*(_45635_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1aa0da3d6_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1aa0da749_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_45713_cont))._field_Label=(*(_45635_tokens))[1LL];
			if (((*(_45635_tokens)).len() > 2LL)) {
				_1aa0da3d6_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _45713_cont;;
}



inline jule::Ptr<_1ab0ecbde_If> _1aa0deeac_buildIf(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _47431_tokens) {
	jule::Ptr<_1ab0ecbde_If> _47513_model = jule::new_ptr<_1ab0ecbde_If>(_1ab0ecbde_If{._field_Token=(*(_47431_tokens))[0LL], });;
	((*(_47431_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _47913_exprTokens = _1aa1025c9_getBlockExpr(_47431_tokens);;
	jule::I64 _48013_i = 0LL;;
	if ((_47913_exprTokens.len() == 0LL)) {
		_1aa0da3d6_pushErr(_self_, (*(_47513_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_48013_i=static_cast<jule::I64>(_47913_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _48613_scopeTokens = _1aa10580d_range(&(_48013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47431_tokens);;
	if ((_48613_scopeTokens == nullptr)) {
		_1aa0d97c0_stop(_self_);
		_1aa0da3d6_pushErr(_self_, (*(_47513_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_1aa0da749_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab0c1e7c_Token> _49313_end = (*(_47431_tokens))[(_48013_i - 1LL)];;
	if ((_48013_i < (*(_47431_tokens)).len())) {
		if (((*((*(_47431_tokens))[_48013_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47431_tokens))).mut_slice(_48013_i);;
		} else {
			_1aa0da3d6_pushErr(_self_, (*(_47431_tokens))[_48013_i], jule::Str::lit("invalid syntax", 14));
			(*(_47431_tokens))=nullptr;
		};
	};
	(*(_47513_model))._field_Expr=_1aa1082b1_buildExpr((*(_self_))._field_p, &(_47913_exprTokens));
	(*(_47513_model))._field_Scope=_1aa0db184_buildScope(_self_, &(_48613_scopeTokens), _49313_end);
	return _47513_model;;
}



inline jule::Ptr<_1ab0ed0b8_Else> _1aa0e02ed_buildElse(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _50733_tokens) {
	jule::Ptr<_1ab0ed0b8_Else> _50813_els = jule::new_ptr<_1ab0ed0b8_Else>(_1ab0ed0b8_Else{._field_Token=(*(_50733_tokens))[0LL], });;
	((*(_50733_tokens))).mut_slice(1LL);;
	jule::I64 _51213_i = 0LL;;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _51313_scopeTokens = _1aa10580d_range(&(_51213_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50733_tokens);;
	if ((_51313_scopeTokens == nullptr)) {
		if ((_51213_i < (*(_50733_tokens)).len())) {
			_1aa0da3d6_pushErr(_self_, (*(_50813_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_1aa0d97c0_stop(_self_);
			_1aa0da3d6_pushErr(_self_, (*(_50813_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_1aa0da749_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51213_i < (*(_50733_tokens)).len())) {
		_1aa0da3d6_pushErr(_self_, (*(_50733_tokens))[_51213_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_50813_els))._field_Scope=_1aa0db184_buildScope(_self_, &(_51313_scopeTokens), (*(_50733_tokens))[(_51213_i - 1LL)]);
	return _50813_els;;
}



inline jule::Ptr<_1ab0ed56e_Conditional> _1aa0e063e_buildIfElseChain(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _53139_tokens) {
	jule::Ptr<_1ab0ed56e_Conditional> _53213_chain = jule::new_ptr<_1ab0ed56e_Conditional>(_1ab0ed56e_Conditional{._field_Head=_1aa0deeac_buildIf(_self_, &(_53139_tokens)), });;
	if (((*(_53213_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53139_tokens.len() != 0LL)) {
		{
			if (((*(_53139_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1bca7417b;
			};
			if (((_53139_tokens.len() > 1LL) && ((*(_53139_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53139_tokens).mut_slice(1LL);;
				jule::Ptr<_1ab0ecbde_If> _54421_elif = _1aa0deeac_buildIf(_self_, &(_53139_tokens));;
				{ jule::Slice<jule::Ptr<_1ab0ecbde_If>> &__jule_push_dest = (*(_53213_chain))._field_Tail; __jule_push_dest.push(_54421_elif); };
				goto _iter_next_1bca7417b;
			};
			(*(_53213_chain))._field_Default=_1aa0e02ed_buildElse(_self_, &(_53139_tokens));
			goto _iter_end_1bca7417b;
		}
	_iter_next_1bca7417b:;
	}
	_iter_end_1bca7417b:;;
	return _53213_chain;;
}



inline jule::Ptr<_1ab0db77c_Expr> _1aa0e0980_buildCoCallSt(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _55436_tokens) {
	jule::Ptr<_1ab0c1e7c_Token> _5559_token = _55436_tokens[0LL];;
	(_55436_tokens).mut_slice(1LL);;
	jule::Ptr<_1ab0db77c_Expr> _55713_e = _1aa1082b1_buildExpr((*(_self_))._field_p, &(_55436_tokens));;
	if ((_55713_e == nullptr)) {
		return _55713_e;;
	};
	{
		auto &_match_expr{ (*(_55713_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1bca7815d:;
			{
				(*((*(_55713_e))._field_Kind.cast_ptr<_1ab0e04a6_FnCallExpr>(&__jule_any_type107)))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1bca786d0:;
			{
				_1aa0da3d6_pushErr(_self_, _5559_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_1bca7867a:;
	};
	return _55713_e;;
}



inline jule::Ptr<_1ab0e4e06_GotoSt> _1aa0e0cc1_buildGotoSt(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _57035_tokens) {
	jule::Ptr<_1ab0e4e06_GotoSt> _57113_gt = jule::new_ptr<_1ab0e4e06_GotoSt>(_1ab0e4e06_GotoSt{._field_Token=(*(_57035_tokens))[0LL], });;
	if (((*(_57035_tokens)).len() == 1LL)) {
		_1aa0da3d6_pushErr(_self_, (*(_57113_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57035_tokens)).len() > 2LL)) {
		_1aa0da3d6_pushErr(_self_, (*(_57035_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1ab0c1e7c_Token> _58013_identToken = (*(_57035_tokens))[1LL];;
	if (((*(_58013_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1aa0da3d6_pushErr(_self_, _58013_identToken, jule::Str::lit("invalid syntax", 14));
		_1aa0da749_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57113_gt;;
	};
	(*(_57113_gt))._field_Label=_58013_identToken;
	return _57113_gt;;
}



inline jule::Ptr<_1ab0e5203_FallSt> _1aa0e1112_buildFallSt(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _59035_tokens) {
	jule::Ptr<_1ab0e5203_FallSt> _59113_fll = jule::new_ptr<_1ab0e5203_FallSt>(_1ab0e5203_FallSt{._field_Token=(*(_59035_tokens))[0LL]});;
	if (((*(_59035_tokens)).len() > 1LL)) {
		_1aa0da3d6_pushErr(_self_, (*(_59035_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _59113_fll;;
}



inline jule::Ptr<_1ab0edcab_TypeAliasDecl> _1aa0e1453_buildTypeAliasSt(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _60040_tokens) {
	jule::Ptr<_1ab0edcab_TypeAliasDecl> _60113_tad = _1aa109a54_buildTypeAliasDecl((*(_self_))._field_p, _60040_tokens);;
	(*(_60113_tad))._field_Scope=(*(_self_))._field_s;
	return _60113_tad;;
}



inline void _1aa0e192b_pushCaseExpr(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _60635_tokens, jule::Ptr<_1ab0c1e7c_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1ab0db77c_Expr>>* _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I64 _61317_i = 0LL;;
		jule::Ptr<_1ab0d7448_TypeDecl> _61417_t;;
		jule::Bool _61420_ok = false;;
		({
			__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType((*(_self_))._field_p, &(_60635_tokens), (&(_61317_i)), true);
			_61417_t = __jule_assign_result.__jule_result_arg0;
			_61420_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61420_ok) {
			{ jule::Slice<jule::Ptr<_1ab0db77c_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(jule::new_ptr<_1ab0db77c_Expr>(_1ab0db77c_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61417_t, &__jule_any_type88)})); };
			if ((_61317_i < _60635_tokens.len())) {
				_1aa0da3d6_pushErr(_self_, _60635_tokens[_61317_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1ab0db77c_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(_1aa1082b1_buildExpr((*(_self_))._field_p, &(_60635_tokens))); };
}



inline jule::Slice<jule::Ptr<_1ab0db77c_Expr>> _1aa0e1dd2_buildCaseExprs(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _63038_tokens, jule::Ptr<_1ab0c1e7c_Token>* _63061_colon, jule::Bool _63076_typeMatch) {
	jule::Slice<jule::Ptr<_1ab0db77c_Expr>> _63113_exprs = jule::Slice<jule::Ptr<_1ab0db77c_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63313_braceN = 0LL;;
	jule::I64 _63413_j = 0LL;;
	{
		auto expr = _63038_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca8408c:;
		if (it != expr_end) {
			jule::I64 _63514_i = it - expr->begin();
			jule::Ptr<_1ab0c1e7c_Token> _63521_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63521_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1bca85544:;
						{
							(_63313_braceN)++;
							goto _iter_next_1bca8408c;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1bca855bb:;
						{
							(_63313_braceN)--;
							goto _iter_next_1bca8408c;
						}
					}
					_match_end_1bca85478:;
				};
				if ((_63313_braceN != 0LL)) {
					goto _iter_next_1bca8408c;
				};
				{
					
					if (((*(_63521_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1bca86974:;
						{
							jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _65417_exprTokens = (*(_63038_tokens)).slice(_63413_j, _63514_i);;
							if ((_65417_exprTokens.len() == 0LL)) {
								_1aa0da3d6_pushErr(_self_, _63521_tok, jule::Str::lit("expression missing", 18));
							} else {
								_1aa0e192b_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63413_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63113_exprs));
							};
							_63413_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if (((*(_63521_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1bca869eb:;
						{
							(*(_63061_colon))=_63521_tok;
							_1aa0e192b_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63413_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63113_exprs));
							((*(_63038_tokens))).mut_slice((_63514_i + 1LL));;
							return _63113_exprs;;
						}
					}
					_match_end_1bca86457:;
				};
			}
			_iter_next_1bca8408c:;
			++it;
			_63514_i++;
			goto _iter_begin_1bca8408c;
		}
		_iter_end_1bca8408c:;
	};
	_1aa0da3d6_pushErr(_self_, (*(_63038_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_63038_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_1ab0e7469_ScopeTree> _1aa0e2223_buildCaseScope(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _67338_tokens) {
	jule::I64 _67413_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67617_i = 0LL;;
			jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _67717_next;;
			({
				__jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_bool __jule_assign_result = _1aa0d857c_skipSt(&(_67617_i), (*(_67338_tokens)).slice(_67413_n));
				_67717_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67717_next.len() == 0LL)) {
				goto _iter_end_1bca89aba;
			};
			jule::Ptr<_1ab0c1e7c_Token> _68113_tok = _67717_next[0LL];;
			if (((*(_68113_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_67413_n+=_67617_i;
				goto _iter_next_1bca89aba;
			};
			jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _68617_scopeTokens = (*(_67338_tokens)).slice(0LL, _67413_n);;
			jule::Ptr<_1ab0e7469_ScopeTree> _68717_scope = _1aa0db184_buildScope(_self_, &(_68617_scopeTokens), (*(_67338_tokens))[_67413_n]);;
			((*(_67338_tokens))).mut_slice(_67413_n);;
			return _68717_scope;;
		}
	_iter_next_1bca89aba:;
	}
	_iter_end_1bca89aba:;;
	jule::Ptr<_1ab0c1e7c_Token> _69117_end;;
	if (((*(_67338_tokens)).len() > 0LL)) {
		_69117_end=(*(_67338_tokens))[((*(_67338_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1ab0e7469_ScopeTree> _69513_scope = _1aa0db184_buildScope(_self_, _67338_tokens, _69117_end);;
	(*(_67338_tokens))=nullptr;
	return _69513_scope;;
}



inline __jule_tuple_x_1ab0ee262_Case__jule_tuple_bool _1aa0e261e_buildCase(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _70033_tokens, jule::Bool _70051_typeMatch) {
	__jule_tuple_x_1ab0ee262_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ab0ee262_Case> _70113_c = jule::new_ptr<_1ab0ee262_Case>(_1ab0ee262_Case{._field_Token=(*(_70033_tokens))[0LL], });;
	((*(_70033_tokens))).mut_slice(1LL);;
	jule::Ptr<_1ab0c1e7c_Token> _70517_colon = nullptr;;
	(*(_70113_c))._field_Exprs=_1aa0e1dd2_buildCaseExprs(_self_, _70033_tokens, &(_70517_colon), _70051_typeMatch);
	(*(_70113_c))._field_Scope=_1aa0e2223_buildCaseScope(_self_, _70033_tokens);
	if (((*((*(_70113_c))._field_Scope))._field_End == nullptr)) {
		(*((*(_70113_c))._field_Scope))._field_End=_70517_colon;
	};
	jule::Bool _7119_isDefault = ((*(_70113_c))._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70113_c;
	__jule_func_result.__jule_result_arg1 = _7119_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1ab0ee262_Case__jule_tuple_x_1ab0ed0b8_Else _1aa0e2a1a_buildCases(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _71533_tokens, jule::Bool _71551_typeMatch) {
	__jule_tuple_sx_1ab0ee262_Case__jule_tuple_x_1ab0ed0b8_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1ab0ee262_Case>> _71617_cases = nullptr;;
	jule::Ptr<_1ab0ed0b8_Else> _71717_def = nullptr;;
	jule::Bool _71813_defNotLast = false;;
	while ((_71533_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1ab0c1e7c_Token> _72017_tok = _71533_tokens[0LL];;
			if (((*(_72017_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1aa0da3d6_pushErr(_self_, _72017_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_1bca91eac;
			};
			jule::Ptr<_1ab0ee262_Case> _72517_c;;
			jule::Bool _72520_isDefault = false;;
			({
				__jule_tuple_x_1ab0ee262_Case__jule_tuple_bool __jule_assign_result = _1aa0e261e_buildCase(_self_, &(_71533_tokens), _71551_typeMatch);
				_72517_c = __jule_assign_result.__jule_result_arg0;
				_72520_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72520_isDefault) {
				(*(_72517_c))._field_Token=_72017_tok;
				if ((_71717_def == nullptr)) {
					_71717_def=jule::new_ptr<_1ab0ed0b8_Else>(_1ab0ed0b8_Else{._field_Token=(*(_72517_c))._field_Token, ._field_Scope=(*(_72517_c))._field_Scope});
				} else {
					_1aa0da3d6_pushErr(_self_, _72017_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_71813_defNotLast=(_71813_defNotLast || (_71717_def != nullptr));
				{ jule::Slice<jule::Ptr<_1ab0ee262_Case>> &__jule_push_dest = _71617_cases; __jule_push_dest.push(_72517_c); };
			};
		}
	_iter_next_1bca91eac:;
	}
	_iter_end_1bca91eac:;;
	if (_71813_defNotLast) {
		_1aa0da3d6_pushErr(_self_, (*(_71717_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71617_cases;
	__jule_func_result.__jule_result_arg1 = _71717_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab0ee99e_MatchCase> _1aa0e2d5b_buildMatchCase(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _74937_tokens) {
	jule::Ptr<_1ab0ee99e_MatchCase> _75013_m = jule::new_ptr<_1ab0ee99e_MatchCase>(_1ab0ee99e_MatchCase{._field_Token=_74937_tokens[0LL], });;
	(_74937_tokens).mut_slice(1LL);;
	if (((_74937_tokens.len() > 0LL) && ((*(_74937_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_75013_m))._field_TypeMatch=true;
		(_74937_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _76013_exprTokens = _1aa1025c9_getBlockExpr(&(_74937_tokens));;
	if ((_76013_exprTokens.len() > 0LL)) {
		(*(_75013_m))._field_Expr=_1aa1082b1_buildExpr((*(_self_))._field_p, &(_76013_exprTokens));
	} else if ((*(_75013_m))._field_TypeMatch) {
		_1aa0da3d6_pushErr(_self_, (*(_75013_m))._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I64 _76713_i = _76013_exprTokens.len();;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _76813_blockToks = _1aa10580d_range(&(_76713_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_74937_tokens));;
	if ((_76813_blockToks == nullptr)) {
		_1aa0d97c0_stop(_self_);
		_1aa0da3d6_pushErr(_self_, (*(_75013_m))._field_Token, jule::Str::lit("body is not exist", 17));
		_1aa0da749_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76713_i < _74937_tokens.len())) {
		_1aa0da3d6_pushErr(_self_, _74937_tokens[_76713_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_75013_m))._field_End=_74937_tokens[(_76713_i - 1LL)];
	({
		__jule_tuple_sx_1ab0ee262_Case__jule_tuple_x_1ab0ed0b8_Else __jule_assign_result = _1aa0e2a1a_buildCases(_self_, _76813_blockToks, (*(_75013_m))._field_TypeMatch);
		(*(_75013_m))._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*(_75013_m))._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75013_m;;
}



inline jule::Ptr<_1ab0e7469_ScopeTree> _1aa0e319c_buildScopeSt(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _78235_tokens) {
	jule::Bool _78313_isUnsafe = false;;
	jule::Bool _78413_isDeferred = false;;
	jule::Ptr<_1ab0c1e7c_Token> _78513_token = _78235_tokens[0LL];;
	if (((*(_78513_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_78313_isUnsafe=true;
		(_78235_tokens).mut_slice(1LL);;
		if ((_78235_tokens.len() == 0LL)) {
			_1aa0da3d6_pushErr(_self_, _78513_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_78513_token=_78235_tokens[0LL];
		if (((*(_78513_token))._field_Id == static_cast<jule::U64>(33LLU))) {
			_78413_isDeferred=true;
			(_78235_tokens).mut_slice(1LL);;
			if ((_78235_tokens.len() == 0LL)) {
				_1aa0da3d6_pushErr(_self_, _78513_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_78513_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_78413_isDeferred=true;
		(_78235_tokens).mut_slice(1LL);;
		if ((_78235_tokens.len() == 0LL)) {
			_1aa0da3d6_pushErr(_self_, _78513_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81113_i = 0LL;;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _81213_scopeTokens = _1aa10580d_range(&(_81113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78235_tokens));;
	if ((_81213_scopeTokens == nullptr)) {
		_1aa0da3d6_pushErr(_self_, _78513_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_81113_i < _78235_tokens.len())) {
		_1aa0da3d6_pushErr(_self_, _78235_tokens[_81113_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1ab0e7469_ScopeTree> _81913_scope = _1aa0db184_buildScope(_self_, &(_81213_scopeTokens), _78235_tokens[(_81113_i - 1LL)]);;
	(*(_81913_scope))._field_Unsafety=_78313_isUnsafe;
	(*(_81913_scope))._field_Deferred=_78413_isDeferred;
	return _81913_scope;;
}



inline jule::Ptr<_1ab0e4a2c_LabelSt> _1aa0e34dd_buildLabelSt(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _82536_tokens) {
	jule::Ptr<_1ab0e4a2c_LabelSt> _82613_lbl = jule::new_ptr<_1ab0e4a2c_LabelSt>(_1ab0e4a2c_LabelSt{._field_Token=(*(_82536_tokens))[0LL], ._field_Ident=(*((*(_82536_tokens))[0LL]))._field_Kind});;
	if (((*(_82536_tokens)).len() > 2LL)) {
		((*(_82536_tokens))).mut_slice(2LL);;
		_1aa0daa02_insertAsNext(_self_, _82536_tokens);
	};
	return _82613_lbl;;
}



inline __jule_tuple__1ab0e6aa6_StmtData__jule_tuple_bool _1aa0e382e_buildIdSt(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _84033_tokens) {
	__jule_tuple__1ab0e6aa6_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84033_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1ab0c1e7c_Token> _84513_token = (*(_84033_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_84513_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1bcaa6389:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1aa0e34dd_buildLabelSt(_self_, _84033_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bcaa6a1b:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1aa103c7e_assignInfo> _1aa0e3b70_buildAssignInfo(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _85439_tokens) {
	jule::Ptr<_1aa103c7e_assignInfo> _85513_info = jule::new_ptr<_1aa103c7e_assignInfo>(_1aa103c7e_assignInfo{._field_ok=true});;
	jule::I64 _85813_braceN = 0LL;;
	{
		auto expr = _85439_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcaa7d6e:;
		if (it != expr_end) {
			jule::I64 _85914_i = it - expr->begin();
			jule::Ptr<_1ab0c1e7c_Token> _85921_token = *it;
			{
				{
					auto &_match_expr{ (*(_85921_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bcaa8c0a:;
						{
							(_85813_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bcaa8c82:;
						{
							(_85813_braceN)--;
						}
					}
					_match_end_1bcaa8b3e:;
				};
				{
					
					if ((_85813_braceN > 0LL)) {
						_case_begin_1bcaa9aeb:;
						{
							goto _iter_next_1bcaa7d6e;
						}
					}
					else if (((!(_1ab0c6dd8_IsAssignOp((*(_85921_token))._field_Id))) && ((*(_85921_token))._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1bcaa9b73:;
						{
							goto _iter_next_1bcaa7d6e;
						}
					}
					_match_end_1bcaa9a74:;
				};
				(*(_85513_info))._field_l=(*(_85439_tokens)).slice(0LL, _85914_i);
				if (((*(_85513_info))._field_l.len() == 0LL)) {
					(*(_85513_info))._field_ok=false;
				};
				(*(_85513_info))._field_setter=_85921_token;
				if (((_85914_i + 1LL) >= (*(_85439_tokens)).len())) {
					(*(_85513_info))._field_r=nullptr;
					(*(_85513_info))._field_ok=_1ab0c6b1e_IsPostfixOp((*((*(_85513_info))._field_setter))._field_Id);
					goto _iter_end_1bcaa7d6e;
				};
				(*(_85513_info))._field_r=(*(_85439_tokens)).slice((_85914_i + 1LL));
				if (_1ab0c6b1e_IsPostfixOp((*((*(_85513_info))._field_setter))._field_Id)) {
					if (((*(_85513_info))._field_r.len() > 0LL)) {
						_1aa0da3d6_pushErr(_self_, (*(_85513_info))._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*(_85513_info))._field_r=nullptr;
					};
				};
				goto _iter_end_1bcaa7d6e;
			}
			_iter_next_1bcaa7d6e:;
			++it;
			_85914_i++;
			goto _iter_begin_1bcaa7d6e;
		}
		_iter_end_1bcaa7d6e:;
	};
	return _85513_info;;
}



inline jule::Ptr<_1ab0e5863_AssignLeft> _1aa0e3eb1_buildAssignL(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _89936_tokens) {
	jule::Ptr<_1ab0e5863_AssignLeft> _90013_l = jule::new_ptr<_1ab0e5863_AssignLeft>(_1ab0e5863_AssignLeft{._field_Token=(*(_89936_tokens))[0LL], });;
	if (((*((*(_89936_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_90013_l))._field_Ident=(*((*(_90013_l))._field_Token))._field_Kind;
	};
	(*(_90013_l))._field_Expr=_1aa1082b1_buildExpr((*(_self_))._field_p, _89936_tokens);
	return _90013_l;;
}



inline jule::Slice<jule::Ptr<_1ab0e5863_AssignLeft>> _1aa0e4302_buildAssignLs(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>>* _91037_parts) {
	jule::Slice<jule::Ptr<_1ab0e5863_AssignLeft>> _91117_lefts = nullptr;;
	{
		auto expr = _91037_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcab251b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _91221_part = *it;
			{
				jule::Ptr<_1ab0e5863_AssignLeft> _91317_l = _1aa0e3eb1_buildAssignL(_self_, &(_91221_part));;
				{ jule::Slice<jule::Ptr<_1ab0e5863_AssignLeft>> &__jule_push_dest = _91117_lefts; __jule_push_dest.push(_91317_l); };
			}
			_iter_next_1bcab251b:;
			++it;
			goto _iter_begin_1bcab251b;
		}
		_iter_end_1bcab251b:;
	};
	return _91117_lefts;;
}



inline __jule_tuple_x_1ab0e5de6_AssignSt__jule_tuple_bool _1aa0e4643_buildPlainAssign(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _91940_tokens) {
	__jule_tuple_x_1ab0e5de6_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1aa103c7e_assignInfo> _92013_info = _1aa0e3b70_buildAssignInfo(_self_, _91940_tokens);;
	if ((!((*(_92013_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab0e5de6_AssignSt> _92513_assign = jule::new_ptr<_1ab0e5de6_AssignSt>(_1ab0e5de6_AssignSt{._field_Setter=(*(_92013_info))._field_setter, });;
	if (((*((*(_92013_info))._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_92513_assign))._field_Declarative=true;
		(*(_92513_assign))._field_Right=_1aa1082b1_buildExpr((*(_self_))._field_p, &((*(_92013_info))._field_r));
		jule::Bool _93313_ok = _1aa0e4a3e_buildDeclAssign1(_self_, &((*(_92013_info))._field_l), &(_92513_assign));;
		__jule_func_result.__jule_result_arg0 = _92513_assign;
		__jule_func_result.__jule_result_arg1 = _93313_ok;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _93713_parts;;
	jule::Slice<_1d7b81cb8_Log> _93720_errs;;
	({
		__jule_tuple_ssx_1ab0c1e7c_Token__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = _1aa10607d_parts(&((*(_92013_info))._field_l), static_cast<jule::U64>(5LLU), true);
		_93713_parts = __jule_assign_result.__jule_result_arg0;
		_93720_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93720_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_93720_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*(_92513_assign))._field_Left=_1aa0e4302_buildAssignLs(_self_, &(_93713_parts));
	if (((*(_92013_info))._field_r != nullptr)) {
		(*(_92513_assign))._field_Right=_1aa1082b1_buildExpr((*(_self_))._field_p, &((*(_92013_info))._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _92513_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1aa0e4a3e_buildDeclAssign1(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _95140_lefts, jule::Ptr<_1ab0e5de6_AssignSt>* _95162_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _95313_parts;;
	jule::Slice<_1d7b81cb8_Log> _95320_errs;;
	({
		__jule_tuple_ssx_1ab0c1e7c_Token__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = _1aa10607d_parts(_95140_lefts, static_cast<jule::U64>(5LLU), true);
		_95313_parts = __jule_assign_result.__jule_result_arg0;
		_95320_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95320_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_95320_errs);;
		return false;;
	};
	{
		auto expr = &(_95313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcabb019:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _95921_part = *it;
			{
				jule::Bool _96017_isMut = false;;
				jule::Bool _96117_isRef = false;;
				jule::Ptr<_1ab0c1e7c_Token> _96313_token = _95921_part[0LL];;
				if (((*(_96313_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_96017_isMut=true;
					(_95921_part).mut_slice(1LL);;
					if ((_95921_part.len() == 0LL)) {
						_1aa0da3d6_pushErr(_self_, _96313_token, jule::Str::lit("invalid syntax", 14));
						goto _iter_next_1bcabb019;
					};
				};
				if (((*(_95921_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_96117_isRef=true;
					(_95921_part).mut_slice(1LL);;
					if ((_95921_part.len() == 0LL)) {
						_1aa0da3d6_pushErr(_self_, _96313_token, jule::Str::lit("invalid syntax", 14));
						goto _iter_next_1bcabb019;
					};
				};
				if ((((*(_95921_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_95921_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1aa0da3d6_pushErr(_self_, _96313_token, jule::Str::lit("invalid syntax", 14));
					goto _iter_next_1bcabb019;
				};
				jule::Ptr<_1ab0e5863_AssignLeft> _98717_l = _1aa0e3eb1_buildAssignL(_self_, &(_95921_part));;
				(*(_98717_l))._field_Mutable=_96017_isMut;
				(*(_98717_l))._field_Reference=_96117_isRef;
				{ jule::Slice<jule::Ptr<_1ab0e5863_AssignLeft>> &__jule_push_dest = (*((*(_95162_assign))))._field_Left; __jule_push_dest.push(_98717_l); };
			}
			_iter_next_1bcabb019:;
			++it;
			goto _iter_begin_1bcabb019;
		}
		_iter_end_1bcabb019:;
	};
	return true;;
}



inline __jule_tuple_x_1ab0e5de6_AssignSt__jule_tuple_bool _1aa0e4d80_buildDeclAssign(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _99638_tokens) {
	__jule_tuple_x_1ab0e5de6_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99638_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_99638_tokens).mut_slice(1LL);;
	jule::Ptr<_1ab0c1e7c_Token> _100213_token = _99638_tokens[0LL];;
	if (((*(_100213_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab0e5de6_AssignSt> _100713_assign = jule::new_ptr<_1ab0e5de6_AssignSt>(_1ab0e5de6_AssignSt{._field_Declarative=true, });;
	jule::I64 _101113_i = 0LL;;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _101213_rang = _1aa10580d_range(&(_101113_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_99638_tokens));;
	if ((_101213_rang == nullptr)) {
		_1aa0da3d6_pushErr(_self_, _100213_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_101113_i + 1LL) < _99638_tokens.len())) {
		(*(_100713_assign))._field_Setter=_99638_tokens[_101113_i];
		if (((*((*(_100713_assign))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1aa0da3d6_pushErr(_self_, (*(_100713_assign))._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_101113_i)++;
		jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _102217_exprTokens = _99638_tokens.slice(_101113_i);;
		(*(_100713_assign))._field_Right=_1aa1082b1_buildExpr((*(_self_))._field_p, &(_102217_exprTokens));
	};
	jule::Bool _10269_ok = _1aa0e4a3e_buildDeclAssign1(_self_, &(_101213_rang), &(_100713_assign));;
	__jule_func_result.__jule_result_arg0 = _100713_assign;
	__jule_func_result.__jule_result_arg1 = _10269_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ab0e5de6_AssignSt__jule_tuple_bool _1aa0e51c1_buildAssignSt(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _103037_tokens) {
	__jule_tuple_x_1ab0e5de6_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1aa104136_checkAssignTokens(_103037_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_103037_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1bcac8004:;
			{
				({
					__jule_tuple_x_1ab0e5de6_AssignSt__jule_tuple_bool __jule_assign_result = _1aa0e4d80_buildDeclAssign(_self_, (*(_103037_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bcac7b08:;
			{
				({
					__jule_tuple_x_1ab0e5de6_AssignSt__jule_tuple_bool __jule_assign_result = _1aa0e4643_buildPlainAssign(_self_, _103037_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bcac7a92:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ab0dc151_UseExpr> _1aa0e5512_buildUseExpr(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _104536_tokens) {
	if (((*(_104536_tokens)).len() == 1LL)) {
		_1aa0da3d6_pushErr(_self_, (*(_104536_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1ab0dc151_UseExpr> _105013_ue = jule::new_ptr<_1ab0dc151_UseExpr>(_1ab0dc151_UseExpr{._field_Token=(*(_104536_tokens))[0LL], });;
	((*(_104536_tokens))).mut_slice(1LL);;
	(*(_105013_ue))._field_Expr=_1aa1082b1_buildExpr((*(_self_))._field_p, _104536_tokens);
	return _105013_ue;;
}



inline jule::Any _1aa0e5853_buildSt(_1aa0d9160_scopeParser* _self_, jule::Ptr<_1aa0d87be_stmt>* _105831_st) {
	jule::Ptr<_1ab0c1e7c_Token> _105913_token = (*((*(_105831_st))))._field_tokens[0LL];;
	if (((*(_105913_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _106117_s = jule::Any(nullptr);;
		jule::Bool _106120_ok = false;;
		({
			__jule_tuple__1ab0e6aa6_StmtData__jule_tuple_bool __jule_assign_result = _1aa0e382e_buildIdSt(_self_, &((*((*(_105831_st))))._field_tokens));
			_106117_s = __jule_assign_result.__jule_result_arg0;
			_106120_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_106120_ok) {
			return _106117_s;;
		};
	};
	jule::Ptr<_1ab0e5de6_AssignSt> _106713_s;;
	jule::Bool _106716_ok = false;;
	({
		__jule_tuple_x_1ab0e5de6_AssignSt__jule_tuple_bool __jule_assign_result = _1aa0e51c1_buildAssignSt(_self_, &((*((*(_105831_st))))._field_tokens));
		_106713_s = __jule_assign_result.__jule_result_arg0;
		_106716_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106716_ok) {
		return jule::Any(_106713_s, &__jule_any_type58);;
	};
	{
		auto &_match_expr{ (*(_105913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1bcacd1d5:;
			{
				return jule::Any(_1aa0e5512_buildUseExpr(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1bcaccb85:;
			{
				return jule::Any(_1aa0db4c5_buildVarSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1bcacd3e4:;
			{
				return jule::Any(_1aa0db816_buildRetSt(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1bcacd45a:;
			{
				return jule::Any(_1aa0de4d9_buildIterSt(_self_, _105831_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1bcacd4c1:;
			{
				return jule::Any(_1aa0de82a_buildBreakSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1bcacd537:;
			{
				return jule::Any(_1aa0deb6b_buildContSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1bcacd5ae:;
			{
				return jule::Any(_1aa0e063e_buildIfElseChain(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1bcacd636:;
			{
				return jule::Any(_1aa0e0980_buildCoCallSt(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1bcacd6ad:;
			{
				return jule::Any(_1aa0e0cc1_buildGotoSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1bcacd735:;
			{
				return jule::Any(_1aa0e1112_buildFallSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bcacd7ac:;
			{
				return jule::Any(_1aa0e1453_buildTypeAliasSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1bcacd834:;
			{
				return jule::Any(_1aa0e2d5b_buildMatchCase(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1bcacd8ab:;
			{
				if (((*((*(_105831_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1bcaccee8;
				};
				if ((((*((*((*(_105831_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_105831_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1aa0e319c_buildScopeSt(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type51);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1bcacd933:;
			{
				return jule::Any(_1aa0e319c_buildScopeSt(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1bcacd9aa:;
			{
				return jule::Any(_1aa0e319c_buildScopeSt(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		_match_end_1bcaccee8:;
	};
	jule::Ptr<_1ab0db77c_Expr> _111313_expr = _1aa1082b1_buildExpr((*(_self_))._field_p, &((*((*(_105831_st))))._field_tokens));;
	if ((_111313_expr != nullptr)) {
		return jule::Any(_111313_expr, &__jule_any_type52);;
	};
	_1aa0da3d6_pushErr(_self_, _105913_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _1aa0e5bb6_build(_1aa0d9160_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _112129_tokens, jule::Ptr<_1ab0e7469_ScopeTree>* _112152_s) {
	if (((*(_112152_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1aa0d8b76_splitStmts(_112129_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_112152_s));
	while (((!(_1aa0da073_isLastSt(_self_))) && (!(_1aa0d9cdc_finished(_self_))))) {
		{
			jule::Ptr<_1aa0d87be_stmt> _112917_st = _1aa0dac88_next(_self_);;
			jule::Any _113017_data = _1aa0e5853_buildSt(_self_, &(_112917_st));;
			if ((_113017_data != nullptr)) {
				{ jule::Slice<_1ab0e6d09_Stmt> &__jule_push_dest = (*((*(_self_))._field_s))._field_Stmts; __jule_push_dest.push(_1ab0e6d09_Stmt{._field_Token=(*(_112917_st))._field_tokens[0LL], ._field_Data=_113017_data}); };
			};
			if (_1aa0d9a56_stopped(_self_)) {
				goto _iter_end_1bcad971e;
			};
		}
	_iter_next_1bcad971e:;
	}
	_iter_end_1bcad971e:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa0d9160_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1aa0e7091_pushErr(_1aa0e6788_exprBuilder* _self_, jule::Ptr<_1ab0c1e7c_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_1aa107b0c_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _1aa0e7404_pushSuggestion(_1aa0e6788_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_1aa107e70_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_1ab0dc44d_TupleExpr> _1aa0e7745_buildTuple(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>>* _5434_parts) {
	jule::Ptr<_1ab0dc44d_TupleExpr> _5513_tuple = jule::new_ptr<_1ab0dc44d_TupleExpr>(_1ab0dc44d_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1ab0db77c_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb07099:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _5821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab0db77c_Expr>> &__jule_push_dest = (*(_5513_tuple))._field_Expr; __jule_push_dest.push(_1aa101b39_buildFromTokens(_self_, _5821_part)); };
			}
			_iter_next_1bcb07099:;
			++it;
			goto _iter_begin_1bcb07099;
		}
		_iter_end_1bcb07099:;
	};
	return _5513_tuple;;
}



inline jule::Ptr<_1ab0dc827_LitExpr> _1aa0e7a86_buildLit(_1aa0e6788_exprBuilder* _self_, jule::Ptr<_1ab0c1e7c_Token> _6427_token) {
	return jule::new_ptr<_1ab0dc827_LitExpr>(_1ab0dc827_LitExpr{._field_Token=_6427_token, ._field_Value=(*(_6427_token))._field_Kind});;
}



inline jule::Any _1aa0e8218_buildSingle(_1aa0e6788_exprBuilder* _self_, jule::Ptr<_1ab0c1e7c_Token> _7534_token) {
	{
		auto &_match_expr{ (*(_7534_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1bcb09068:;
			{
				return jule::Any(_1aa0e7a86_buildLit(_self_, _7534_token), &__jule_any_type101);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1bcb090e0:;
			{
				return jule::Any(jule::new_ptr<_1ab0ddc13_VariadicExpr>(_1ab0ddc13_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type75);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1bcb09167:;
			{
				return jule::Any(_1aa103025_buildIdentExpr(&(_7534_token)), &__jule_any_type79);;
			}
		}
		_match_end_1bcb08e8b:;
	};
	_1aa0e7091_pushErr(_self_, _7534_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ab0dd1a7_IdentExpr> _1aa0e8559_buildBindIdent(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _9238_tokens) {
	if (((*((*(_9238_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9238_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1aa0e7091_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa0e7404_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab0c1e7c_Token> _10013_token = (*(_9238_tokens))[2LL];;
	if (((*(_10013_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1aa0e7091_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa0e7404_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab0dd1a7_IdentExpr> _10613_expr = _1aa103025_buildIdentExpr(&(_10013_token));;
	(*(_10613_expr))._field_Binded=true;
	return _10613_expr;;
}



inline jule::Ptr<_1ab0dd839_UnaryExpr> _1aa0e889a_buildUnary(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _11133_tokens) {
	jule::Ptr<_1ab0c1e7c_Token> _11213_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_1aa0e7091_pushErr(_self_, _11213_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1ab0c26b9_IsUnaryOp((*(_11213_op))._field_Id)))) {
		_1aa0e7091_pushErr(_self_, _11213_op, jule::Str::lit("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_11213_op))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(_11133_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1ab0dd839_UnaryExpr>(_1ab0dd839_UnaryExpr{._field_Op=_11213_op, ._field_Expr=_1aa101b39_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_1ab0de890_SubIdentExpr> _1aa0e8bdb_buildObjSubIdent(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _13239_tokens) {
	jule::I64 _13313_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_1ab0c1e7c_Token> _13413_identToken = _13239_tokens[_13313_i];;
	(_13313_i)--;
	(_13239_tokens).mut_slice(0LL, _13313_i);;
	if ((_13239_tokens.len() == 0LL)) {
		_1aa0e7091_pushErr(_self_, _13413_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab0de890_SubIdentExpr>(_1ab0de890_SubIdentExpr{._field_Expr=_1aa101b39_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13413_identToken});;
}



inline jule::Ptr<_1ab0de4b6_NsSelectionExpr> _1aa0e902c_buildNsSubIdent(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _14739_tokens) {
	jule::Ptr<_1ab0de4b6_NsSelectionExpr> _14813_ns = jule::new_ptr<_1ab0de4b6_NsSelectionExpr>();;
	if ((((*(_14739_tokens)).len() == 3LL) && ((*((*(_14739_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*(_14813_ns))._field_Ns=(*(_14739_tokens)).slice(0LL, 1LL);
		(*(_14813_ns))._field_Ident=(*(_14739_tokens))[2LL];
	} else {
		{
			auto expr = _14739_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bcb15508:;
			if (it != expr_end) {
				jule::I64 _15418_i = it - expr->begin();
				jule::Ptr<_1ab0c1e7c_Token> _15425_token = *it;
				{
					if (((_15418_i & 1LL) == 0LL)) {
						if (((*(_15425_token))._field_Id != static_cast<jule::U64>(1LLU))) {
							_1aa0e7091_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							_1aa0e7404_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
						};
						{ jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> &__jule_push_dest = (*(_14813_ns))._field_Ns; __jule_push_dest.push(_15425_token); };
					} else if (((*(_15425_token))._field_Id != static_cast<jule::U64>(19LLU))) {
						_1aa0e7091_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1aa0e7404_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1bcb15508:;
				++it;
				_15418_i++;
				goto _iter_begin_1bcb15508;
			}
			_iter_end_1bcb15508:;
		};
		(*(_14813_ns))._field_Ident=(*(_14813_ns))._field_Ns[((*(_14813_ns))._field_Ns.len() - 1LL)];
		(*(_14813_ns))._field_Ns=(*(_14813_ns))._field_Ns.slice(0LL, ((*(_14813_ns))._field_Ns.len() - 1LL));
	};
	return _14813_ns;;
}



inline jule::Ptr<_1ab0d7448_TypeDecl> _1aa0e936d_buildType(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _17233_tokens) {
	jule::I64 _17313_i = 0LL;;
	jule::Ptr<_1ab0d7448_TypeDecl> _17413_t;;
	jule::Bool _17416_ok = false;;
	({
		__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType((*(_self_))._field_p, _17233_tokens, (&(_17313_i)), false);
		_17413_t = __jule_assign_result.__jule_result_arg0;
		_17416_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17416_ok))) {
		_1aa0e7091_pushErr(_self_, (*(_17233_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17313_i < (*(_17233_tokens)).len())) {
		_1aa0e7091_pushErr(_self_, (*(_17233_tokens))[_17313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17413_t;;
}



inline jule::Any _1aa0e96ae_buildSubIdent(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _18637_tokens) {
	jule::I64 _1879_i = ((*(_18637_tokens)).len() - 2LL);;
	jule::Ptr<_1ab0c1e7c_Token> _1889_token = (*(_18637_tokens))[_1879_i];;
	{
		auto &_match_expr{ (*(_1889_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1bcb1c1d0:;
			{
				return jule::Any(_1aa0e8bdb_buildObjSubIdent(_self_, (*(_18637_tokens))), &__jule_any_type85);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1bcb1c90b:;
			{
				return jule::Any(_1aa0e902c_buildNsSubIdent(_self_, _18637_tokens), &__jule_any_type89);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1bcb1c972:;
			{
				return jule::Any(_1aa0e936d_buildType(_self_, _18637_tokens), &__jule_any_type88);;
			}
		}
		_match_end_1bcb1c7eb:;
	};
	_1aa0e7091_pushErr(_self_, _1889_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ab0ddc13_VariadicExpr> _1aa0e9a00_buildVariadic(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _20236_tokens) {
	jule::Ptr<_1ab0c1e7c_Token> _20313_token = _20236_tokens[(_20236_tokens.len() - 1LL)];;
	(_20236_tokens).mut_slice(0LL, (_20236_tokens.len() - 1LL));;
	return jule::new_ptr<_1ab0ddc13_VariadicExpr>(_1ab0ddc13_VariadicExpr{._field_Token=_20313_token, ._field_Expr=_1aa101b39_buildFromTokens(_self_, _20236_tokens)});;
}



inline jule::Ptr<_1ab0dba79_RangeExpr> _1aa0e9d41_buildBetweenParentheses(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _21146_tokens) {
	if ((_21146_tokens.len() == 2LL)) {
		_1aa0e7091_pushErr(_self_, _21146_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_1aa0e7404_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21146_tokens).mut_slice(1LL, (_21146_tokens.len() - 1LL));;
	return jule::new_ptr<_1ab0dba79_RangeExpr>(_1ab0dba79_RangeExpr{._field_Expr=_1aa101b39_buildFromTokens(_self_, _21146_tokens)});;
}



inline jule::Ptr<_1ab0de0dc_CastExpr> _1aa0ea182_tryBuildCast(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _22336_tokens) {
	jule::I64 _22413_rangeN = 0LL;;
	{
		auto expr = _22336_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb226e1:;
		if (it != expr_end) {
			jule::I64 _22513_i = it - expr->begin();
			jule::Ptr<_1ab0c1e7c_Token> _22516_token = *it;
			{
				{
					auto &_match_expr{ (*(_22516_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bcb234d3:;
						{
							(_22413_rangeN)++;
							goto _iter_next_1bcb226e1;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bcb2355a:;
						{
							(_22413_rangeN)--;
						}
					}
					_match_end_1bcb23417:;
				};
				if ((_22413_rangeN > 0LL)) {
					goto _iter_next_1bcb226e1;
				} else if (((_22513_i + 1LL) == (*(_22336_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _24417_typeTokens = (*(_22336_tokens)).slice(0LL, (_22513_i + 1LL));;
				jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _24517_exprTokens = (*(_22336_tokens)).slice((_22513_i + 1LL));;
				if ((_24517_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1ab0c1e7c_Token> _25213_tok = _24517_exprTokens[0LL];;
				if (((*(_25213_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1ab0de0dc_CastExpr> _25717_cast = jule::new_ptr<_1ab0de0dc_CastExpr>(_1ab0de0dc_CastExpr{});;
				if ((_24517_exprTokens.len() == 2LL)) {
					_1aa0e7091_pushErr(_self_, _24517_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_1aa0e7404_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_24417_typeTokens.len() == 2LL)) {
					_1aa0e7091_pushErr(_self_, _24417_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_1aa0e7404_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_24417_typeTokens).mut_slice(1LL, (_24417_typeTokens.len() - 1LL));;
					jule::I64 _27121_typeIndex = 0LL;;
					jule::Ptr<_1ab0d7448_TypeDecl> _27221_t;;
					jule::Bool _27224_ok = false;;
					({
						__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType((*(_self_))._field_p, &(_24417_typeTokens), (&(_27121_typeIndex)), true);
						_27221_t = __jule_assign_result.__jule_result_arg0;
						_27224_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27224_ok && (_27121_typeIndex < _24417_typeTokens.len()))) {
						_1aa0e7091_pushErr(_self_, _24417_typeTokens[_27121_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_27224_ok))) {
						return _25717_cast;;
					};
					(*(_25717_cast))._field_Kind=_27221_t;
					if ((_24517_exprTokens.len() > 2LL)) {
						jule::I64 _28225_j = 0LL;;
						_1aa10580d_range(&(_28225_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_24517_exprTokens));
						if ((_28225_j < _24517_exprTokens.len())) {
							return nullptr;;
						};
						(_24517_exprTokens).mut_slice(0LL, _28225_j);;
						(*(_25717_cast))._field_Expr=_1aa101b39_buildFromTokens(_self_, _24517_exprTokens);
					};
				};
				return _25717_cast;;
			}
			_iter_next_1bcb226e1:;
			++it;
			_22513_i++;
			goto _iter_begin_1bcb226e1;
		}
		_iter_end_1bcb226e1:;
	};
	return nullptr;;
}



inline void _1aa0ea5a0_pushArg(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0db77c_Expr>>* _29731_args, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _29750_tokens, jule::Ptr<_1ab0c1e7c_Token> _29768_err_token) {
	if ((_29750_tokens.len() == 0LL)) {
		_1aa0e7091_pushErr(_self_, _29768_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa0e7404_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1ab0db77c_Expr>> &__jule_push_dest = (*(_29731_args)); __jule_push_dest.push(_1aa101b39_buildFromTokens(_self_, _29750_tokens)); };
}



inline jule::Slice<jule::Ptr<_1ab0db77c_Expr>> _1aa0ea8e1_buildArgs(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _30632_tokens) {
	if ((_30632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab0db77c_Expr>> _31217_args = nullptr;;
	jule::I64 _31313_last = 0LL;;
	jule::I64 _31413_rangeN = 0LL;;
	(_30632_tokens).mut_slice(1LL, (_30632_tokens.len() - 1LL));;
	{
		auto expr = &(_30632_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb347ad:;
		if (it != expr_end) {
			jule::I64 _31613_i = it - expr->begin();
			jule::Ptr<_1ab0c1e7c_Token> _31616_token = *it;
			{
				{
					auto &_match_expr{ (*(_31616_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bcb3588b:;
						{
							(_31413_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bcb35913:;
						{
							(_31413_rangeN)--;
						}
					}
					_match_end_1bcb357c0:;
				};
				if (((_31413_rangeN > 0LL) || ((*(_31616_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1bcb347ad;
				};
				_1aa0ea5a0_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last, _31613_i), _31616_token);
				_31313_last=static_cast<jule::I64>((_31613_i + 1LL));
			}
			_iter_next_1bcb347ad:;
			++it;
			_31613_i++;
			goto _iter_begin_1bcb347ad;
		}
		_iter_end_1bcb347ad:;
	};
	if ((_31313_last < _30632_tokens.len())) {
		if ((_31313_last == 0LL)) {
			if ((_30632_tokens.len() > 0LL)) {
				_1aa0ea5a0_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[_31313_last]);
			};
		} else {
			_1aa0ea5a0_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[(_31313_last - 1LL)]);
		};
	};
	return _31217_args;;
}



inline jule::Ptr<_1ab0e04a6_FnCallExpr> _1aa0eb1d8_buildFnCall(_1aa0e6788_exprBuilder* _self_, jule::Ptr<_1ab0c1e7c_Token>* _37235_token, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _37255_expr, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _37276_args) {
	return jule::new_ptr<_1ab0e04a6_FnCallExpr>(_1ab0e04a6_FnCallExpr{._field_Token=(*(_37235_token)), ._field_Expr=_1aa101b39_buildFromTokens(_self_, (*(_37255_expr))), ._field_Args=_1aa0ea8e1_buildArgs(_self_, (*(_37276_args))), });;
}



inline jule::Any _1aa0eb529_buildParenthesesRange(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _38045_tokens) {
	jule::Ptr<_1ab0c1e7c_Token> _38113_token = (*(_38045_tokens))[0LL];;
	if (((*(_38113_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1ab0de0dc_CastExpr> _38317_expr = _1aa0ea182_tryBuildCast(_self_, _38045_tokens);;
		if ((_38317_expr != nullptr)) {
			return jule::Any(_38317_expr, &__jule_any_type105);;
		};
	};
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _38813_exprTokens;;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _38829_args_tokens;;
	({
		__jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_sx_1ab0c1e7c_Token __jule_assign_result = _1aa105ac7_rangeLast(_38045_tokens);
		_38813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_38829_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_38813_exprTokens.len() == 0LL)) {
		return jule::Any(_1aa0e9d41_buildBetweenParentheses(_self_, _38829_args_tokens), &__jule_any_type100);;
	};
	return jule::Any(_1aa0eb1d8_buildFnCall(_self_, &(_38113_token), &(_38813_exprTokens), &(_38829_args_tokens)), &__jule_any_type107);;
}



inline jule::Ptr<_1ab0dcc01_UnsafeExpr> _1aa0eb86a_buildUnsafeExpr(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _39738_tokens) {
	jule::Ptr<_1ab0c1e7c_Token> _39813_token = _39738_tokens[0LL];;
	(_39738_tokens).mut_slice(1LL);;
	jule::I64 _40013_i = 0LL;;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _40113_rangeTokens = _1aa10580d_range(&(_40013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_39738_tokens));;
	if ((_40113_rangeTokens.len() == 0LL)) {
		_1aa0e7091_pushErr(_self_, _39738_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab0dcc01_UnsafeExpr>(_1ab0dcc01_UnsafeExpr{._field_Token=_39813_token, ._field_Expr=_1aa101b39_buildFromTokens(_self_, _40113_rangeTokens)});;
}



inline jule::Ptr<_1ab0e9108_FnDecl> _1aa0ebbab_buildAnonFn(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _41235_tokens) {
	jule::Ptr<_1ab0e9108_FnDecl> _41313_f = _1ac9b3130_buildFn((*(_self_))._field_p, _41235_tokens, false, false);;
	if ((!(_1ab0e946b_IsAnon(_41313_f.ptr())))) {
		_1aa0e7091_pushErr(_self_, (*(_41313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa0e7404_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _41313_f;;
}



inline jule::Any _1aa0ebeec_buildUnsafe(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _42135_tokens) {
	{
		auto &_match_expr{ (*((*(_42135_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1bcb457be:;
			{
				return jule::Any(_1aa0ebbab_buildAnonFn(_self_, _42135_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1bcb45cec:;
			{
				return jule::Any(_1aa0eb86a_buildUnsafeExpr(_self_, (*(_42135_tokens))), &__jule_any_type102);;
			}
		}
		_match_end_1bcb45c31:;
	};
}



inline void _1aa0ec41a_pushRangeLitPart(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _43139_part, jule::Ptr<_1ab0c1e7c_Token> _4329_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>>* _43234_parts) {
	if ((_43139_part.len() == 0LL)) {
		_1aa0e7091_pushErr(_self_, _4329_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa0e7404_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> &__jule_push_dest = (*(_43234_parts)); __jule_push_dest.push(_43139_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _1aa0ec75b_getBraceRangeLitExprParts(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _44248_tokens) {
	if ((_44248_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _44817_parts = nullptr;;
	jule::I64 _45013_last = 0LL;;
	jule::I64 _45113_rangeN = 0LL;;
	(_44248_tokens).mut_slice(1LL, (_44248_tokens.len() - 1LL));;
	{
		auto expr = &(_44248_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb49608:;
		if (it != expr_end) {
			jule::I64 _45313_i = it - expr->begin();
			jule::Ptr<_1ab0c1e7c_Token> _45316_token = *it;
			{
				{
					auto &_match_expr{ (*(_45316_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bcb4a6d6:;
						{
							(_45113_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bcb4a75d:;
						{
							(_45113_rangeN)--;
						}
					}
					_match_end_1bcb4a61a:;
				};
				if (((_45113_rangeN > 0LL) || ((*(_45316_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1bcb49608;
				};
				_1aa0ec41a_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last, _45313_i), _45316_token, &(_44817_parts));
				_45013_last=static_cast<jule::I64>((_45313_i + 1LL));
			}
			_iter_next_1bcb49608:;
			++it;
			_45313_i++;
			goto _iter_begin_1bcb49608;
		}
		_iter_end_1bcb49608:;
	};
	if ((_45013_last < _44248_tokens.len())) {
		if ((_45013_last == 0LL)) {
			if ((_44248_tokens.len() > 0LL)) {
				_1aa0ec41a_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[_45013_last], &(_44817_parts));
			};
		} else {
			_1aa0ec41a_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[(_45013_last - 1LL)], &(_44817_parts));
		};
	};
	return _44817_parts;;
}



inline jule::Ptr<_1ab0e0e9b_FieldExprPair> _1aa0eca9c_buildFieldExprPair(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _48441_tokens) {
	if (((_48441_tokens.len() - 2LL) == 0LL)) {
		_1aa0e7091_pushErr(_self_, _48441_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab0e0e9b_FieldExprPair> _48913_pair = jule::new_ptr<_1ab0e0e9b_FieldExprPair>(_1ab0e0e9b_FieldExprPair{._field_Field=_48441_tokens[0LL], });;
	(_48441_tokens).mut_slice(2LL);;
	(*(_48913_pair))._field_Expr=_1aa101b39_buildFromTokens(_self_, _48441_tokens);
	return _48913_pair;;
}



inline jule::Ptr<_1ab0db77c_Expr> _1aa0ecddd_buildStructLitExpr(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _49742_tokens) {
	jule::Ptr<_1ab0c1e7c_Token> _49813_token = (*(_49742_tokens))[0LL];;
	if ((((*(_49813_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_49742_tokens)).len() > 1LL))) {
		_49813_token=(*(_49742_tokens))[1LL];
		if (((*(_49813_token))._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1ab0db77c_Expr>(_1ab0db77c_Expr{._field_Token=_49813_token, ._field_End=(*(_49742_tokens))[((*(_49742_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1aa0eca9c_buildFieldExprPair(_self_, (*(_49742_tokens))), &__jule_any_type77)});;
		};
	};
	return _1aa101b39_buildFromTokens(_self_, (*(_49742_tokens)));;
}



inline jule::Slice<jule::Ptr<_1ab0db77c_Expr>> _1aa0ed22e_buildStructLitExprs(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _51243_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _51313_parts = _1aa0ec75b_getBraceRangeLitExprParts(_self_, (*(_51243_tokens)));;
	if ((_51313_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab0db77c_Expr>> _51813_pairs = jule::Slice<jule::Ptr<_1ab0db77c_Expr>>::alloc(0LL, _51313_parts.len());;
	{
		auto expr = &(_51313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb538cb:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _51921_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab0db77c_Expr>> &__jule_push_dest = _51813_pairs; __jule_push_dest.push(_1aa0ecddd_buildStructLitExpr(_self_, &(_51921_part))); };
			}
			_iter_next_1bcb538cb:;
			++it;
			goto _iter_begin_1bcb538cb;
		}
		_iter_end_1bcb538cb:;
	};
	return _51813_pairs;;
}



inline jule::Ptr<_1ab0e17c6_StructLit> _1aa0ed570_buildTypedStructLiteral(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _52546_tokens) {
	jule::I64 _52613_i = 0LL;;
	jule::Ptr<_1ab0d7448_TypeDecl> _52713_t;;
	jule::Bool _52716_ok = false;;
	({
		__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType((*(_self_))._field_p, &(_52546_tokens), (&(_52613_i)), true);
		_52713_t = __jule_assign_result.__jule_result_arg0;
		_52716_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_52716_ok))) {
		return nullptr;;
	} else if ((_52613_i >= _52546_tokens.len())) {
		_1aa0e7091_pushErr(_self_, _52546_tokens[_52613_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_52546_tokens).mut_slice(_52613_i);;
	jule::Ptr<_1ab0c1e7c_Token> _5369_token = _52546_tokens[0LL];;
	if (((*(_5369_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1aa0e7091_pushErr(_self_, _5369_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab0e17c6_StructLit>(_1ab0e17c6_StructLit{._field_End=_52546_tokens[(_52546_tokens.len() - 1LL)], ._field_Kind=_52713_t, ._field_Exprs=_1aa0ed22e_buildStructLitExprs(_self_, &(_52546_tokens))});;
}



inline jule::Ptr<_1ab0db77c_Expr> _1aa0ed8b1_buildBraceLitPart(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _54941_tokens) {
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _55013_l;;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _55020_r;;
	({
		__jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_sx_1ab0c1e7c_Token __jule_assign_result = _1aa102992_splitDelim(_54941_tokens, static_cast<jule::U64>(8LLU));
		_55013_l = __jule_assign_result.__jule_result_arg0;
		_55020_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_55013_l != nullptr)) {
		return jule::new_ptr<_1ab0db77c_Expr>(_1ab0db77c_Expr{._field_Token=(*(_54941_tokens))[0LL], ._field_End=(*(_54941_tokens))[((*(_54941_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1ab0e25a7_KeyValPair>(_1ab0e25a7_KeyValPair{._field_Key=_1aa101b39_buildFromTokens(_self_, _55013_l), ._field_Val=_1aa101b39_buildFromTokens(_self_, _55020_r), ._field_Colon=(*(_54941_tokens))[_55013_l.len()]}), &__jule_any_type78)});;
	};
	return _1aa101b39_buildFromTokens(_self_, (*(_54941_tokens)));;
}



inline jule::Ptr<_1ab0e1c7c_BraceLit> _1aa0edc02_buildBraceLit(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _56637_tokens) {
	jule::Ptr<_1ab0e1c7c_BraceLit> _56713_lit = jule::new_ptr<_1ab0e1c7c_BraceLit>(_1ab0e1c7c_BraceLit{._field_Token=(*(_56637_tokens))[0LL], ._field_End=(*(_56637_tokens))[((*(_56637_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _57213_parts = _1aa0ec75b_getBraceRangeLitExprParts(_self_, (*(_56637_tokens)));;
	if ((_57213_parts == nullptr)) {
		return _56713_lit;;
	};
	(*(_56713_lit))._field_Exprs=jule::Slice<jule::Ptr<_1ab0db77c_Expr>>::alloc(0LL, _57213_parts.len());
	{
		auto expr = &(_57213_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb5c792:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _57821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab0db77c_Expr>> &__jule_push_dest = (*(_56713_lit))._field_Exprs; __jule_push_dest.push(_1aa0ed8b1_buildBraceLitPart(_self_, &(_57821_part))); };
			}
			_iter_next_1bcb5c792:;
			++it;
			goto _iter_begin_1bcb5c792;
		}
		_iter_end_1bcb5c792:;
	};
	return _56713_lit;;
}



inline jule::Any _1aa0ee043_buildBraceRange(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _58539_tokens) {
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _58613_exprTokens;;
	jule::I64 _58625_rangeN = 0;;
	({
		__jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_int __jule_assign_result = _1aa1032de_getRangeExprTokens(_58539_tokens);
		_58613_exprTokens = __jule_assign_result.__jule_result_arg0;
		_58625_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_58613_exprTokens.len() == 0LL)) {
			_case_begin_1bcb5d430:;
			{
				return jule::Any(_1aa0edc02_buildBraceLit(_self_, _58539_tokens), &__jule_any_type108);;
			}
		}
		else if ((_58625_rangeN > 0LL)) {
			_case_begin_1bcb5e134:;
			{
				_1aa0e7091_pushErr(_self_, (*(_58539_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bcb5d540:;
	};
	jule::Ptr<_1ab0c1e7c_Token> _5979_elseToken = _58613_exprTokens[(_58613_exprTokens.len() - 1LL)];;
	if (((*(_58613_exprTokens[(_58613_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_58613_exprTokens).mut_slice(0LL, (_58613_exprTokens.len() - 1LL));;
		jule::Any _60017_d = _1aa1014a7_build(_self_, &(_58613_exprTokens));;
		if ((_60017_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _60017_d };
			
			if (_match_expr.type == &__jule_any_type107) {
				_case_begin_1bcb62027:;
				{
					((*(_58539_tokens))).mut_slice((_58613_exprTokens.len() + 1LL));;
					jule::I64 _60721_i = 0LL;;
					jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _60821_rangeTokens = _1aa10580d_range(&(_60721_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _58539_tokens);;
					jule::Ptr<_1ab0e04a6_FnCallExpr> _60921_model = _60017_d.cast_ptr<_1ab0e04a6_FnCallExpr>(&__jule_any_type107);;
					if (_1ab0e0ab1_Ignored(_60921_model.ptr())) {
						_1aa0e7091_pushErr(_self_, _5979_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1aa0e7404_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*(_60921_model))._field_Exception=_1aa108ca6_buildScope((*(_self_))._field_p, &(_60821_rangeTokens), (*(_58539_tokens))[(_60721_i - 1LL)]);
					return _60017_d;;
				}
			}
			else {
				_case_begin_1bcb619e9:;
				{
					_1aa0e7091_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1bcb61994:;
		};
	};
	{
		auto &_match_expr{ (*(_58613_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1bcb65a42:;
			{
				return _1aa0ebeec_buildUnsafe(_self_, _58539_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1bcb6616e:;
			{
				return jule::Any(_1aa0ebbab_buildAnonFn(_self_, _58539_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1bcb661d5:;
			{
				return jule::Any(_1aa0ed570_buildTypedStructLiteral(_self_, (*(_58539_tokens))), &__jule_any_type106);;
			}
		}
		else {
			_case_begin_1bcb624cd:;
			{
				_1aa0e7091_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bcb65525:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _1aa0ee384_getEnumerableParts(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _63741_tokens) {
	(_63741_tokens).mut_slice(1LL, (_63741_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _63913_parts;;
	jule::Slice<_1d7b81cb8_Log> _63920_errors;;
	({
		__jule_tuple_ssx_1ab0c1e7c_Token__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = _1aa10607d_parts(&(_63741_tokens), static_cast<jule::U64>(5LLU), true);
		_63913_parts = __jule_assign_result.__jule_result_arg0;
		_63920_errors = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_63920_errors);;
	return _63913_parts;;
}



inline jule::Ptr<_1ab0e2ca0_SliceExpr> _1aa0ee6c5_buildSlice(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _64433_tokens) {
	jule::Ptr<_1ab0e2ca0_SliceExpr> _64513_slc = jule::new_ptr<_1ab0e2ca0_SliceExpr>(_1ab0e2ca0_SliceExpr{._field_Token=_64433_tokens[0LL], ._field_End=_64433_tokens[(_64433_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _65013_parts = _1aa0ee384_getEnumerableParts(_self_, _64433_tokens);;
	if ((_65013_parts.len() == 0LL)) {
		return _64513_slc;;
	};
	(*(_64513_slc))._field_Exprs=jule::Slice<jule::Ptr<_1ab0db77c_Expr>>::alloc(0LL, _65013_parts.len());
	{
		auto expr = &(_65013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb6aa7a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _65621_p = *it;
			{
				if ((_65621_p.len() == 0LL)) {
					goto _iter_next_1bcb6aa7a;
				};
				{ jule::Slice<jule::Ptr<_1ab0db77c_Expr>> &__jule_push_dest = (*(_64513_slc))._field_Exprs; __jule_push_dest.push(_1aa101b39_buildFromTokens(_self_, _65621_p)); };
			}
			_iter_next_1bcb6aa7a:;
			++it;
			goto _iter_begin_1bcb6aa7a;
		}
		_iter_end_1bcb6aa7a:;
	};
	return _64513_slc;;
}



inline jule::Ptr<_1ab0e3740_IndexingExpr> _1aa0eeb7b_buildIndexing(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _66636_exprTokens, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _66713_tokens, jule::Ptr<_1ab0c1e7c_Token> _66735_errorToken) {
	jule::Ptr<_1ab0c1e7c_Token> _66813_end = _66713_tokens[(_66713_tokens.len() - 1LL)];;
	(_66713_tokens).mut_slice(1LL, (_66713_tokens.len() - 1LL));;
	if ((_66713_tokens.len() == 0LL)) {
		_1aa0e7091_pushErr(_self_, _66735_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab0db77c_Expr> _67413_expr = _1aa101b39_buildFromTokens(_self_, _66636_exprTokens);;
	if ((_67413_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab0db77c_Expr> _67813_index = _1aa101b39_buildFromTokens(_self_, _66713_tokens);;
	if ((_67813_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab0e3740_IndexingExpr>(_1ab0e3740_IndexingExpr{._field_Token=_66735_errorToken, ._field_End=_66813_end, ._field_Expr=_67413_expr, ._field_Index=_67813_index});;
}



inline jule::Ptr<_1ab0e3da0_SlicingExpr> _1aa100297_buildSlicing(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _69036_exprTokens, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _69063_start, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _69114_to, jule::Ptr<_1ab0c1e7c_Token>* _69133_errorToken, jule::Ptr<_1ab0c1e7c_Token> _69157_end) {
	jule::Ptr<_1ab0e3da0_SlicingExpr> _69213_slc = jule::new_ptr<_1ab0e3da0_SlicingExpr>(_1ab0e3da0_SlicingExpr{._field_Token=(*(_69133_errorToken)), ._field_End=_69157_end, ._field_Expr=_1aa101b39_buildFromTokens(_self_, (*(_69036_exprTokens))), });;
	if (((*(_69063_start)).len() > 0LL)) {
		(*(_69213_slc))._field_Start=_1aa101b39_buildFromTokens(_self_, (*(_69063_start)));
	};
	if (((*(_69114_to)).len() > 0LL)) {
		(*(_69213_slc))._field_To=_1aa101b39_buildFromTokens(_self_, (*(_69114_to)));
	};
	return _69213_slc;;
}



inline jule::Any _1aa1005d8_buildBracketRange(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _70640_tokens) {
	jule::Ptr<_1ab0c1e7c_Token> _70713_errorToken = _70640_tokens[0LL];;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _70813_exprTokens;;
	jule::I64 _70825_rangeN = 0;;
	({
		__jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_int __jule_assign_result = _1aa1032de_getRangeExprTokens(&(_70640_tokens));
		_70813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_70825_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_70813_exprTokens.len() == 0LL)) {
		return jule::Any(_1aa0ee6c5_buildSlice(_self_, _70640_tokens), &__jule_any_type93);;
	} else if ((_70825_rangeN > 0LL)) {
		_1aa0e7091_pushErr(_self_, _70713_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_70640_tokens).mut_slice(_70813_exprTokens.len());;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _72313_splitTokens = _70640_tokens.slice(1LL, (_70640_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _72413_start;;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _72424_to;;
	({
		__jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_sx_1ab0c1e7c_Token __jule_assign_result = _1aa102992_splitDelim(&(_72313_splitTokens), static_cast<jule::U64>(8LLU));
		_72413_start = __jule_assign_result.__jule_result_arg0;
		_72424_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_72413_start != nullptr) || (_72424_to != nullptr))) {
		return jule::Any(_1aa100297_buildSlicing(_self_, &(_70813_exprTokens), &(_72413_start), &(_72424_to), &(_70713_errorToken), _70640_tokens[(_70640_tokens.len() - 1LL)]), &__jule_any_type104);;
	};
	return jule::Any(_1aa0eeb7b_buildIndexing(_self_, _70813_exprTokens, _70640_tokens, _70713_errorToken), &__jule_any_type103);;
}



inline jule::Any _1aa100929_buildExclRight(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _73138_tokens) {
	jule::Ptr<_1ab0c1e7c_Token> _7329_token = (*(_73138_tokens))[((*(_73138_tokens)).len() - 1LL)];;
	((*(_73138_tokens))).mut_slice(0LL, ((*(_73138_tokens)).len() - 1LL));;
	jule::Any _73413_d = _1aa1014a7_build(_self_, _73138_tokens);;
	if ((_73413_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _73413_d };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1bcb77889:;
			{
				(*(_73413_d.cast_ptr<_1ab0e04a6_FnCallExpr>(&__jule_any_type107)))._field_Exception=jule::new_ptr<_1ab0e7469_ScopeTree>(_1ab0e7469_ScopeTree{._field_Deferred=true, });
				return _73413_d;;
			}
		}
		_match_end_1bcb77614:;
	};
	_1aa0e7091_pushErr(_self_, _7329_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1aa100c6a_buildData(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _74933_tokens) {
	{
		auto _match_expr{ (*(_74933_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1bcb7902d:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1bcb79094:;
			{
				return _1aa0e8218_buildSingle(_self_, (*(_74933_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1bcb7911b:;
			{
				if (((*((*(_74933_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1aa0e8559_buildBindIdent(_self_, _74933_tokens), &__jule_any_type79);;
				};
			}
		}
		_match_end_1bcb78d41:;
	};
	jule::Ptr<_1ab0c1e7c_Token> _76113_token = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
	if (((*(_76113_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1aa0e9a00_buildVariadic(_self_, (*(_74933_tokens))), &__jule_any_type75);;
	};
	_76113_token=(*(_74933_tokens))[0LL];
	if (_1ab0c26b9_IsUnaryOp((*(_76113_token))._field_Id)) {
		if (((*(_74933_tokens)).len() > 1LL)) {
			_76113_token=(*(_74933_tokens))[1LL];
			if (((*(_76113_token))._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1aa0e936d_buildType(_self_, _74933_tokens), &__jule_any_type88);;
			};
		};
		return jule::Any(_1aa0e889a_buildUnary(_self_, (*(_74933_tokens))), &__jule_any_type87);;
	};
	if (((*(_74933_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_76113_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1bcb7d6a3:;
				{
					if (((*(_74933_tokens)).len() > 3LL)) {
						jule::Ptr<_1ab0c1e7c_Token> _78721_t = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
						if (((*(_78721_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1bcb7d5e8;
						};
					};
					jule::Ptr<_1ab0c1e7c_Token> _79317_next = (*(_74933_tokens))[1LL];;
					if (((*(_79317_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1bcb7d5e8;
					};
					return jule::Any(_1aa0e936d_buildType(_self_, _74933_tokens), &__jule_any_type88);;
				}
			}
			_match_end_1bcb7d5e8:;
		};
	};
	_76113_token=(*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_76113_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1bcb813dc:;
			{
				return _1aa0e96ae_buildSubIdent(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1bcb81453:;
			{
				return _1aa100929_buildExclRight(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1bcb814b9:;
			{
				return _1aa0eb529_buildParenthesesRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1bcb81530:;
			{
				return _1aa0ee043_buildBraceRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1bcb815a7:;
			{
				return _1aa1005d8_buildBracketRange(_self_, (*(_74933_tokens)));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1bcb8162e:;
			{
				return jule::Any(_1aa0e936d_buildType(_self_, _74933_tokens), &__jule_any_type88);;
			}
		}
		_match_end_1bcb81310:;
	};
	_1aa0e7091_pushErr(_self_, _76113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1aa101166_buildBinop(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _82134_tokens, jule::I64 _82152_i) {
	jule::Ptr<_1ab0c1e7c_Token> _82213_op = (*(_82134_tokens))[_82152_i];;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _82313_leftTokens = (*(_82134_tokens)).slice(0LL, _82152_i);;
	if ((_1aa102002_isTypeOp(&((*(_82213_op))._field_Id)) && _1aa102310_isTypeRange(&(_82313_leftTokens)))) {
		return jule::Any(_1aa0e936d_buildType(_self_, _82134_tokens), &__jule_any_type88);;
	};
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _82813_rightTokens = (*(_82134_tokens)).slice((_82152_i + 1LL));;
	if ((_82313_leftTokens.len() == 0LL)) {
		_1aa0e7091_pushErr(_self_, (*(_82134_tokens))[_82152_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa0e7404_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_82813_rightTokens.len() == 0LL)) {
		_1aa0e7091_pushErr(_self_, (*(_82134_tokens))[_82152_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa0e7404_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1ab0ded46_BinopExpr>(_1ab0ded46_BinopExpr{._field_Left=_1aa101b39_buildFromTokens(_self_, _82313_leftTokens), ._field_Right=_1aa101b39_buildFromTokens(_self_, _82813_rightTokens), ._field_Op=_82213_op}), &__jule_any_type109);;
}



inline jule::Any _1aa1014a7_build(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _84629_tokens) {
	if (((*((*(_84629_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1aa0e936d_buildType(_self_, _84629_tokens), &__jule_any_type88);;
	};
	jule::I64 _8509_i = _1aa102c5b_findLowestPrecOp(_84629_tokens);;
	if ((_8509_i == -1LL)) {
		return _1aa100c6a_buildData(_self_, _84629_tokens);;
	};
	return _1aa101166_buildBinop(_self_, _84629_tokens, _8509_i);;
}



inline jule::Any _1aa1017e8_buildKind(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _85733_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _85813_parts;;
	jule::Slice<_1d7b81cb8_Log> _85820_errors;;
	({
		__jule_tuple_ssx_1ab0c1e7c_Token__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = _1aa10607d_parts(_85733_tokens, static_cast<jule::U64>(5LLU), true);
		_85813_parts = __jule_assign_result.__jule_result_arg0;
		_85820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_85820_errors != nullptr)) {
		((*((*(_self_))._field_p))._field_errors).append(_85820_errors);;
		return nullptr;;
	} else if ((_85813_parts.len() > 1LL)) {
		return jule::Any(_1aa0e7745_buildTuple(_self_, &(_85813_parts)), &__jule_any_type80);;
	};
	return _1aa1014a7_build(_self_, _85733_tokens);;
}



inline jule::Ptr<_1ab0db77c_Expr> _1aa101b39_buildFromTokens(_1aa0e6788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _86838_tokens) {
	if ((_86838_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _87213_kind = _1aa1017e8_buildKind(_self_, &(_86838_tokens));;
	if ((_87213_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab0db77c_Expr>(_1ab0db77c_Expr{._field_Token=_86838_tokens[0LL], ._field_End=_86838_tokens[(_86838_tokens.len() - 1LL)], ._field_Kind=_87213_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa0e6788_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa103c7e_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1aa107458_stop(_1aa10715b_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1aa1076de_stopped(_1aa10715b_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1aa107b0c_pushErr(_1aa10715b_parser* _self_, jule::Ptr<_1ab0c1e7c_Token> _22426_token, jule::Str _22441_fmt, jule::Slice<jule::Any> _22454_args) {
	{ jule::Slice<_1d7b81cb8_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1aa106776_compilerErr(&(_22426_token), &(_22441_fmt), _22454_args)); };
}



inline void _1aa107e70_pushSuggestion(_1aa10715b_parser* _self_, jule::Str _22933_fmt, jule::Slice<jule::Any> _22946_args) {
	{
		_1aa106b1c_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _22933_fmt, _22946_args);
	};
}



inline jule::Ptr<_1ab0db77c_Expr> _1aa1082b1_buildExpr(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _23334_tokens) {
	return _1aa101b39_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_23334_tokens)));;
}



inline jule::Ptr<_1ab0d6865_Directive> _1aa108602_buildDirective(_1aa10715b_parser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _23737_tokens) {
	if ((_23737_tokens.len() == 1LL)) {
		_1aa107b0c_pushErr(_self_, _23737_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_23737_tokens[1LL]))._field_Column != ((*(_23737_tokens[0LL]))._field_Column + 1LL))) {
		_1aa107b0c_pushErr(_self_, _23737_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab0d6865_Directive>(_1ab0d6865_Directive{._field_Tag=_23737_tokens[1LL], ._field_Args=_23737_tokens.slice(2LL)});;
}



inline void _1aa1088aa_pushDirective(_1aa10715b_parser* _self_, jule::Ptr<_1ab0d6865_Directive> _25236_d) {
	if ((_25236_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcbac3c4:;
		if (it != expr_end) {
			jule::Ptr<_1ab0d6865_Directive> _25716_pd = *it;
			{
				if (((*((*(_25236_d))._field_Tag))._field_Kind == (*((*(_25716_pd))._field_Tag))._field_Kind)) {
					return;;
				};
			}
			_iter_next_1bcbac3c4:;
			++it;
			goto _iter_begin_1bcbac3c4;
		}
		_iter_end_1bcbac3c4:;
	};
	{ jule::Slice<jule::Ptr<_1ab0d6865_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_25236_d); };
}



inline jule::Ptr<_1ab0e7469_ScopeTree> _1aa108ca6_buildScope(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _26535_tokens, jule::Ptr<_1ab0c1e7c_Token> _26557_end) {
	jule::Ptr<_1ab0e7469_ScopeTree> _26613_s = _1d8bd9869_newScope();;
	(*(_26613_s))._field_End=_26557_end;
	_1aa0d9160_scopeParser _26813_sp = _1aa0d9160_scopeParser{._field_p=_self_, };;
	_1aa0e5bb6_build(&_26813_sp, _26535_tokens, &(_26613_s));
	return _26613_s;;
}



inline __jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool _1aa10925c__buildType(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _27542_tokens, jule::I64* _27613_i, jule::Bool _27622_err) {
	__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1ac9bd5e1_typeBuilder _27713_tb = _1ac9bd5e1_typeBuilder{._field_p=_self_, ._field_tokens=(*(_27542_tokens)), ._field_i=_27613_i, ._field_err=_27622_err};;
	jule::Ptr<_1ab0d7448_TypeDecl> _28313_decl;;
	jule::Bool _28319_ok = false;;
	({
		__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9c15c2_build(&_27713_tb);
		_28313_decl = __jule_assign_result.__jule_result_arg0;
		_28319_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _28313_decl;
	__jule_func_result.__jule_result_arg1 = _28319_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool _1aa109713_buildType(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _28841_tokens, jule::I64* _28913_i, jule::Bool _28922_err) {
	__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ab0c1e7c_Token> _2909_token = (*(_28841_tokens))[(*(_28913_i))];;
	jule::Ptr<_1ab0d7448_TypeDecl> _29113_t;;
	jule::Bool _29116_ok = false;;
	({
		__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa10925c__buildType(_self_, _28841_tokens, _28913_i, _28922_err);
		_29113_t = __jule_assign_result.__jule_result_arg0;
		_29116_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_28922_err && (!(_29116_ok)))) {
		_1aa107b0c_pushErr(_self_.ptr(), _2909_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _29113_t;
	__jule_func_result.__jule_result_arg1 = _29116_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab0edcab_TypeAliasDecl> _1aa109a54_buildTypeAliasDecl(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _29843_tokens) {
	jule::I64 _29913_i = 1LL;;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab0edcab_TypeAliasDecl> _30413_tad = jule::new_ptr<_1ab0edcab_TypeAliasDecl>(_1ab0edcab_TypeAliasDecl{._field_Token=(*(_29843_tokens))[1LL], ._field_Ident=(*((*(_29843_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_1ab0c1e7c_Token> _30813_token = (*(_29843_tokens))[_29913_i];;
	if (((*(_30813_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1aa107b0c_pushErr(_self_.ptr(), _30813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_29913_i)++;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	_30813_token=(*(_29843_tokens))[_29913_i];
	if (((*(_30813_token))._field_Id != static_cast<jule::U64>(8LLU))) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	(_29913_i)++;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	jule::Ptr<_1ab0d7448_TypeDecl> _32913_t;;
	jule::Bool _32916_ok = false;;
	({
		__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType(_self_, _29843_tokens, (&(_29913_i)), true);
		_32913_t = __jule_assign_result.__jule_result_arg0;
		_32916_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_30413_tad))._field_Kind=_32913_t;
	if ((_32916_ok && (_29913_i < (*(_29843_tokens)).len()))) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_29843_tokens))[_29913_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_30413_tad))._field_Public=_1ab1a2777_IsPub((*(_30413_tad))._field_Ident);
	return _30413_tad;;
}



inline void _1aa109db7_buildVarTypeAndExpr(jule::Ptr<_1aa10715b_parser> _self_, jule::Ptr<_1ab0ea1d6_VarDecl>* _33844_v, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _33862_tokens) {
	jule::I64 _33913_i = 0LL;;
	jule::Ptr<_1ab0c1e7c_Token> _34013_tok = (*(_33862_tokens))[_33913_i];;
	if (((*(_34013_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_33913_i)++;
		if (((_33913_i >= (*(_33862_tokens)).len()) || ((*((*(_33862_tokens))[_33913_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1aa107b0c_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1ab0d7448_TypeDecl> _34717_t;;
		jule::Bool _34720_ok = false;;
		({
			__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType(_self_, _33862_tokens, (&(_33913_i)), true);
			_34717_t = __jule_assign_result.__jule_result_arg0;
			_34720_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_34720_ok) {
			(*((*(_33844_v))))._field_Kind=_34717_t;
			if ((_33913_i >= (*(_33862_tokens)).len())) {
				return;;
			};
			_34013_tok=(*(_33862_tokens))[_33913_i];
		};
	};
	if (((*(_34013_tok))._field_Id != static_cast<jule::U64>(71LLU))) {
		_1aa107b0c_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _36213_exprTokens = (*(_33862_tokens)).slice((_33913_i + 1LL));;
	if ((_36213_exprTokens.len() == 0LL)) {
		_1aa107b0c_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_33844_v))))._field_Expr=_1aa1082b1_buildExpr(_self_, &(_36213_exprTokens));
}



inline void _1aa10a22a_buildVarCommon(jule::Ptr<_1aa10715b_parser> _self_, jule::Ptr<_1ab0ea1d6_VarDecl>* _37039_v, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _37056_tokens) {
	(*((*(_37039_v))))._field_Token=_37056_tokens[0LL];
	if (((*((*((*(_37039_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1aa107b0c_pushErr(_self_.ptr(), (*((*(_37039_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_37039_v))))._field_Ident=(*((*((*(_37039_v))))._field_Token))._field_Kind;
	(*((*(_37039_v))))._field_Public=_1ab1a2777_IsPub((*((*(_37039_v))))._field_Ident);
	(*((*(_37039_v))))._field_Kind=nullptr;
	if ((_37056_tokens.len() > 1LL)) {
		(_37056_tokens).mut_slice(1LL);;
		_1aa109db7_buildVarTypeAndExpr(_self_, _37039_v, &(_37056_tokens));
	};
}



inline void _1aa10a648_buildVarBegin(_1aa10715b_parser* _self_, jule::Ptr<_1ab0ea1d6_VarDecl>* _38637_v, jule::I64* _38655_i, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _38664_tokens) {
	jule::Ptr<_1ab0c1e7c_Token> _3879_tok = (*(_38664_tokens))[(*(_38655_i))];;
	{
		auto &_match_expr{ (*(_3879_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1bcbc690a:;
			{
				(*((*(_38637_v))))._field_Statically=true;
				goto _case_begin_1bcbc6d8e;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1bcbc6d8e:;
			{
				((*(_38655_i)))++;
				if (((*(_38655_i)) >= (*(_38664_tokens)).len())) {
					_1aa107b0c_pushErr(_self_, _3879_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*((*(_38664_tokens))[(*(_38655_i))]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_38637_v))))._field_Mutable=true;
					((*(_38655_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1bcbc65ca:;
			{
				((*(_38655_i)))++;
				(*((*(_38637_v))))._field_Constant=true;
			}
		}
		else {
			_case_begin_1bcbc6564:;
			{
				_1aa107b0c_pushErr(_self_, _3879_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1bcbc650e:;
	};
	if (((*(_38655_i)) >= (*(_38664_tokens)).len())) {
		_1aa107b0c_pushErr(_self_, _3879_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1ab0ea1d6_VarDecl> _1aa10a989_buildVar(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _41632_tokens) {
	jule::I64 _41713_i = 0LL;;
	jule::Ptr<_1ab0ea1d6_VarDecl> _41813_v = jule::new_ptr<_1ab0ea1d6_VarDecl>(_1ab0ea1d6_VarDecl{._field_Token=_41632_tokens[0LL], });;
	_1aa10a648_buildVarBegin(_self_.ptr(), &(_41813_v), &(_41713_i), &(_41632_tokens));
	if ((_41713_i >= _41632_tokens.len())) {
		return nullptr;;
	};
	(_41632_tokens).mut_slice(_41713_i);;
	if (((*(_41632_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_41813_v))._field_Reference=true;
		if ((_41632_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_41632_tokens).mut_slice(1LL);;
	};
	_1aa10a22a_buildVarCommon(_self_, &(_41813_v), _41632_tokens);
	return _41813_v;;
}



inline jule::Ptr<_1ab0e4653_GenericDecl> _1aa10acca_buildGeneric(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _43837_tokens) {
	jule::Ptr<_1ab0e4653_GenericDecl> _43913_g = jule::new_ptr<_1ab0e4653_GenericDecl>(_1ab0e4653_GenericDecl{._field_Token=(*(_43837_tokens))[0LL], });;
	if (((*((*(_43913_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_43913_g))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_43913_g))._field_Ident=(*((*(_43913_g))._field_Token))._field_Kind;
	if (((*(_43837_tokens)).len() > 1LL)) {
		if (((*((*(_43837_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1aa107b0c_pushErr(_self_.ptr(), (*(_43837_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_43837_tokens)).len() == 2LL)) {
			_1aa107b0c_pushErr(_self_.ptr(), (*(_43837_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _45617_constraintTokens = (*(_43837_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _45717_parts;;
		jule::Slice<_1d7b81cb8_Log> _45724_errors;;
		({
			__jule_tuple_ssx_1ab0c1e7c_Token__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = _1aa10607d_parts(&(_45617_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_45717_parts = __jule_assign_result.__jule_result_arg0;
			_45724_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_45724_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_45724_errors);;
			return nullptr;;
		};
		(*(_43913_g))._field_Constraint=jule::new_ptr<_1ab0e419c_Constraint>(_1ab0e419c_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>>::alloc(0LL, _45717_parts.len())});
		{
			auto expr = &(_45717_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bcbd2eee:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _46325_part = *it;
				{
					jule::I64 _46421_i = 0LL;;
					jule::Ptr<_1ab0d7448_TypeDecl> _46521_kind;;
					({
						__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType(_self_, &(_46325_part), (&(_46421_i)), true);
						_46521_kind = __jule_assign_result.__jule_result_arg0;
					});
					{ jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> &__jule_push_dest = (*((*(_43913_g))._field_Constraint))._field_Mask; __jule_push_dest.push(_46521_kind); };
					if ((_46421_i < _46325_part.len())) {
						_1aa107b0c_pushErr(_self_.ptr(), _46325_part[_46421_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1bcbd2eee:;
				++it;
				goto _iter_begin_1bcbd2eee;
			}
			_iter_end_1bcbd2eee:;
		};
	};
	return _43913_g;;
}



inline jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>> _1aa10b1c6_buildGenerics(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _47538_tokens, jule::Ptr<_1ab0c1e7c_Token>* _47557_errorToken) {
	if (((*(_47538_tokens)).len() == 0LL)) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_47557_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _48113_parts;;
	jule::Slice<_1d7b81cb8_Log> _48120_errors;;
	({
		__jule_tuple_ssx_1ab0c1e7c_Token__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = _1aa10607d_parts(_47538_tokens, static_cast<jule::U64>(5LLU), true);
		_48113_parts = __jule_assign_result.__jule_result_arg0;
		_48120_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_48120_errors.len() > 0LL)) {
		((*(_self_))._field_errors).append(_48120_errors);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>> _48713_generics = jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>>::alloc(0LL, _48113_parts.len());;
	{
		auto expr = &(_48113_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcbd77ea:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _48821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>> &__jule_push_dest = _48713_generics; __jule_push_dest.push(_1aa10acca_buildGeneric(_self_, &(_48821_part))); };
			}
			_iter_next_1bcbd77ea:;
			++it;
			goto _iter_begin_1bcbd77ea;
		}
		_iter_end_1bcbd77ea:;
	};
	return _48713_generics;;
}



inline jule::Ptr<_1ab0e7ba6_ParamDecl> _1aa10b517_buildSelfParam(_1aa10715b_parser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _49537_tokens) {
	if ((_49537_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1ab0e7ba6_ParamDecl> _50013_param = jule::new_ptr<_1ab0e7ba6_ParamDecl>();;
	jule::I64 _50313_i = 0LL;;
	if (((*(_49537_tokens[_50313_i]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_50013_param))._field_Mutable=true;
		(_50313_i)++;
		if ((_50313_i >= _49537_tokens.len())) {
			_1aa107b0c_pushErr(_self_, _49537_tokens[(_50313_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	_1d7ad2eb1_StrBuilder _51313_ident = static__1d7ad327a_New(5LL);;
	if (((*(_49537_tokens[_50313_i]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_1d7adba8b_WriteStr(&_51313_ident, jule::Str::lit("&", 1));
		(_50313_i)++;
		if ((_50313_i >= _49537_tokens.len())) {
			_1aa107b0c_pushErr(_self_, _49537_tokens[(_50313_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (((*(_49537_tokens[_50313_i]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_1d7adba8b_WriteStr(&_51313_ident, jule::Str::lit("self", 4));
		(*(_50013_param))._field_Token=_49537_tokens[_50313_i];
		(_50313_i)++;
		if ((_50313_i < _49537_tokens.len())) {
			_1aa107b0c_pushErr(_self_, _49537_tokens[_50313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*(_50013_param))._field_Ident=_1d7adc383_Str(&_51313_ident);
	return _50013_param;;
}



inline void _1aa10b935_paramTypeBegin(_1aa10715b_parser* _self_, jule::Ptr<_1ab0e7ba6_ParamDecl>* _53738_param, jule::I64* _53762_i, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _53771_tokens) {
	for (; ((*(_53762_i)) < (*(_53771_tokens)).len()); ((*(_53762_i)))++) {
		{
			jule::Ptr<_1ab0c1e7c_Token> _53913_token = (*(_53771_tokens))[(*(_53762_i))];;
			if (((*(_53913_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_53738_param))))._field_Variadic) {
				_1aa107b0c_pushErr(_self_, _53913_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1bcbe046d;
			};
			(*((*(_53738_param))))._field_Variadic=true;
		}
	_iter_next_1bcbe046d:;
	}
	_iter_end_1bcbe046d:;;
}



inline void _1aa10bc98_buildParamType(jule::Ptr<_1aa10715b_parser> _self_, jule::Ptr<_1ab0e7ba6_ParamDecl>* _55239_param, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _55263_tokens) {
	jule::I64 _55313_i = 0LL;;
	_1aa10b935_paramTypeBegin(_self_.ptr(), _55239_param, &(_55313_i), _55263_tokens);
	if ((_55313_i >= (*(_55263_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType(_self_, _55263_tokens, (&(_55313_i)), true);
		(*((*(_55239_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_55313_i < (*(_55263_tokens)).len())) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_55263_tokens))[_55313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1aa10c10b_buildParamBody(jule::Ptr<_1aa10715b_parser> _self_, jule::Ptr<_1ab0e7ba6_ParamDecl>* _56539_param, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _56562_tokens) {
	jule::Ptr<_1ab0c1e7c_Token> _56613_tok = _56562_tokens[0LL];;
	if ((_56562_tokens.len() == 1LL)) {
		(*((*(_56539_param))))._field_Ident=(*(_56613_tok))._field_Kind;
		return;;
	} else if ((_56562_tokens.len() < 3LL)) {
		_1aa107b0c_pushErr(_self_.ptr(), _56613_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_56562_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_56539_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1aa10bc98_buildParamType(_self_, _56539_param, &(_56562_tokens));
		return;;
	};
	(*((*(_56539_param))))._field_Ident=(*(_56613_tok))._field_Kind;
	(_56562_tokens).mut_slice(2LL);;
	_1aa10bc98_buildParamType(_self_, _56539_param, &(_56562_tokens));
}



inline jule::Ptr<_1ab0e7ba6_ParamDecl> _1aa10c44c_buildParam(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _58534_tokens) {
	jule::Ptr<_1ab0e7ba6_ParamDecl> _58613_param = jule::new_ptr<_1ab0e7ba6_ParamDecl>(_1ab0e7ba6_ParamDecl{._field_Token=_58534_tokens[0LL], });;
	if (((*((*(_58613_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_58613_param))._field_Mutable=true;
		if ((_58534_tokens.len() == 1LL)) {
			_1aa107b0c_pushErr(_self_.ptr(), _58534_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_58534_tokens).mut_slice(1LL);;
		(*(_58613_param))._field_Token=_58534_tokens[0LL];
	};
	if ((_58534_tokens.len() >= 3LL)) {
		if (((*((*(_58613_param))._field_Token))._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_58534_tokens.len() == 1LL)) {
				_1aa107b0c_pushErr(_self_.ptr(), _58534_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_58534_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_58534_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*(_58613_param))._field_Reference=true;
				(_58534_tokens).mut_slice(1LL);;
				(*(_58613_param))._field_Token=_58534_tokens[0LL];
			};
		};
	};
	if (((*((*(_58613_param))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		(*(_58613_param))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1aa10bc98_buildParamType(_self_, &(_58613_param), &(_58534_tokens));
	} else {
		_1aa10c10b_buildParamBody(_self_, &(_58613_param), _58534_tokens);
	};
	return _58613_param;;
}



inline void _1aa10c705_checkParams(_1aa10715b_parser* _self_, jule::Slice<jule::Ptr<_1ab0e7ba6_ParamDecl>>* _62835_params) {
	{
		auto expr = _62835_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcbeebdb:;
		if (it != expr_end) {
			jule::Ptr<_1ab0e7ba6_ParamDecl> _62921_param = *it;
			{
				if ((_1ab0e802a_IsSelf(_62921_param.ptr()) || ((*(_62921_param))._field_Kind != nullptr))) {
					goto _iter_next_1bcbeebdb;
				};
				if (((*(_62921_param))._field_Token == nullptr)) {
					_1aa107b0c_pushErr(_self_, (*(_62921_param))._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*(_62921_param))._field_Kind=jule::new_ptr<_1ab0d7448_TypeDecl>(_1ab0d7448_TypeDecl{._field_Token=(*(_62921_param))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1ab0d7a53_IdentTypeDecl>(_1ab0d7a53_IdentTypeDecl{._field_Token=(*(_62921_param))._field_Token, ._field_Ident=(*((*(_62921_param))._field_Token))._field_Kind, }), &__jule_any_type20)});
					(*(_62921_param))._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_1bcbeebdb:;
			++it;
			goto _iter_begin_1bcbeebdb;
		}
		_iter_end_1bcbeebdb:;
	};
}



inline jule::Slice<jule::Ptr<_1ab0e7ba6_ParamDecl>> _1aa10cb01_buildParams(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _64836_tokens, jule::Bool _64854_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _64913_parts;;
	jule::Slice<_1d7b81cb8_Log> _64920_errs;;
	({
		__jule_tuple_ssx_1ab0c1e7c_Token__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = _1aa10607d_parts(_64836_tokens, static_cast<jule::U64>(5LLU), true);
		_64913_parts = __jule_assign_result.__jule_result_arg0;
		_64920_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_64920_errs);;
	if ((_64913_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab0e7ba6_ParamDecl>> _65517_params = nullptr;;
	if ((_64854_method && (_64913_parts.len() > 0LL))) {
		jule::Ptr<_1ab0e7ba6_ParamDecl> _65717_param = _1aa10b517_buildSelfParam(_self_.ptr(), _64913_parts[0LL]);;
		if (((_65717_param != nullptr) && _1ab0e802a_IsSelf(_65717_param.ptr()))) {
			{ jule::Slice<jule::Ptr<_1ab0e7ba6_ParamDecl>> &__jule_push_dest = _65517_params; __jule_push_dest.push(_65717_param); };
			(_64913_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_64913_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc0641d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _66421_part = *it;
			{
				jule::Ptr<_1ab0e7ba6_ParamDecl> _66517_param = _1aa10c44c_buildParam(_self_, _66421_part);;
				if ((_66517_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1ab0e7ba6_ParamDecl>> &__jule_push_dest = _65517_params; __jule_push_dest.push(_66517_param); };
				};
			}
			_iter_next_1bcc0641d:;
			++it;
			goto _iter_begin_1bcc0641d;
		}
		_iter_end_1bcc0641d:;
	};
	_1aa10c705_checkParams(_self_.ptr(), &(_65517_params));
	return _65517_params;;
}



inline __jule_tuple_x_1ab0da33b_RetTypeDecl__jule_tuple_bool _1ac9b22c7_buildMultiRetType(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _67542_tokens, jule::I64* _67565_i) {
	__jule_tuple_x_1ab0da33b_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1ab0da33b_RetTypeDecl>();
	((*(_67565_i)))++;
	if (((*(_67565_i)) >= (*(_67542_tokens)).len())) {
		((*(_67565_i)))--;
		({
			__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType(_self_, _67542_tokens, _67565_i, false);
			(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_67565_i)))--;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _68513_rangeTokens = _1aa10580d_range(_67565_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _67542_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _68713_parts;;
	jule::Slice<_1d7b81cb8_Log> _68720_errs;;
	({
		__jule_tuple_ssx_1ab0c1e7c_Token__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = _1aa10607d_parts(&(_68513_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_68713_parts = __jule_assign_result.__jule_result_arg0;
		_68720_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_68720_errs);;
	if ((_68713_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> _69313_types = jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>>::alloc(0LL, _68713_parts.len());;
	(*(__jule_func_result.__jule_result_arg0))._field_Idents=jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>::alloc(0LL, _68713_parts.len());
	{
		auto expr = &(_68713_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc0b632:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _69521_part = *it;
			{
				jule::Ptr<_1ab0c1e7c_Token> _69617_token = _69521_part[0LL];;
				jule::I64 _69717_offset = 0LL;;
				if ((_69521_part.len() > 1LL)) {
					_69617_token=_69521_part[1LL];
					if (((*(_69617_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_69717_offset=2LL;
						if ((_69521_part.len() < 3LL)) {
							_1aa107b0c_pushErr(_self_.ptr(), _69617_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1bcc0b632;
						};
					};
				};
				_69617_token=_69521_part[0LL];
				if ((_69717_offset != 2LL)) {
					jule::Ptr<_1ab0c1e7c_Token> _71321_newToken = jule::new_ptr<_1ab0c1e7c_Token>((*(_69617_token)));;
					(*(_71321_newToken))._field_Kind=jule::Str::lit("<anonymous>", 11);
					{ jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_71321_newToken); };
				} else {
					{ jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_69617_token); };
				};
				jule::Ptr<_1ab0d7448_TypeDecl> _72017_tk;;
				({
					__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType(_self_, &(_69521_part), (&(_69717_offset)), true);
					_72017_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_69717_offset < _69521_part.len())) {
					_1aa107b0c_pushErr(_self_.ptr(), _69521_part[_69717_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> &__jule_push_dest = _69313_types; __jule_push_dest.push(_72017_tk); };
			}
			_iter_next_1bcc0b632:;
			++it;
			goto _iter_begin_1bcc0b632;
		}
		_iter_end_1bcc0b632:;
	};
	if ((_69313_types.len() > 1LL)) {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=jule::new_ptr<_1ab0d7448_TypeDecl>(_1ab0d7448_TypeDecl{._field_Token=(*(_67542_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1ab0d8b75_TupleTypeDecl>(_1ab0d8b75_TupleTypeDecl{._field_Types=_69313_types}), &__jule_any_type74)});
	} else {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=_69313_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ab0da33b_RetTypeDecl__jule_tuple_bool _1ac9b26c3_buildRetType(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _74337_tokens, jule::I64* _74360_i) {
	__jule_tuple_x_1ab0da33b_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1ab0da33b_RetTypeDecl>();
	if (((*(_74360_i)) >= (*(_74337_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1ab0c1e7c_Token> _74913_token = (*(_74337_tokens))[(*(_74360_i))];;
	{
		auto &_match_expr{ (*(_74913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1bcc148b0:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1bcc14937:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1bcc149ae:;
			{
				if ((((*(_74360_i)) + 1LL) >= (*(_74337_tokens)).len())) {
					_1aa107b0c_pushErr(_self_.ptr(), _74913_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_74360_i)))++;
				_74913_token=(*(_74337_tokens))[(*(_74360_i))];
				{
					auto &_match_expr{ (*(_74913_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bcc1674c:;
						{
							({
								__jule_tuple_x_1ab0da33b_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ac9b22c7_buildMultiRetType(_self_, _74337_tokens, _74360_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1bcc167c4:;
						{
							_1aa107b0c_pushErr(_self_.ptr(), _74913_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1bcc166d6:;
				};
				({
					__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType(_self_, _74337_tokens, _74360_i, true);
					(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1bcc14838:;
	};
	((*(_74360_i)))++;
	_1aa107b0c_pushErr(_self_.ptr(), _74913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1ab0e9108_FnDecl> _1ac9b2b79_buildFnPrototype(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _78241_tokens, jule::I64* _78264_i, jule::Bool _78272_method) {
	jule::Ptr<_1ab0e9108_FnDecl> _78313_f = jule::new_ptr<_1ab0e9108_FnDecl>(_1ab0e9108_FnDecl{._field_Token=(*(_78241_tokens))[(*(_78264_i))], });;
	if (((*((*(_78313_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*(_78313_f))._field_Statically=true;
		((*(_78264_i)))++;
		if (((*(_78264_i)) >= (*(_78241_tokens)).len())) {
			_1aa107b0c_pushErr(_self_.ptr(), (*(_78313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78313_f))._field_Token=(*(_78241_tokens))[(*(_78264_i))];
	};
	if (((*((*(_78313_f))._field_Token))._field_Id == static_cast<jule::U64>(31LLU))) {
		(*(_78313_f))._field_Unsafety=true;
		((*(_78264_i)))++;
		if (((*(_78264_i)) >= (*(_78241_tokens)).len())) {
			_1aa107b0c_pushErr(_self_.ptr(), (*(_78313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78313_f))._field_Token=(*(_78241_tokens))[(*(_78264_i))];
	};
	((*(_78264_i)))++;
	if (((*(_78264_i)) >= (*(_78241_tokens)).len())) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_78313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab0c1e7c_Token> _8169_tok = (*(_78241_tokens))[(*(_78264_i))];;
	if (((*(_8169_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_78264_i)))++;
		if (((*(_78264_i)) >= (*(_78241_tokens)).len())) {
			_1aa107b0c_pushErr(_self_.ptr(), (*(_78313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78313_f))._field_Ident=(*(_8169_tok))._field_Kind;
	} else {
		(*(_78313_f))._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_1ab0c1e7c_Token> _8289_errorToken = (*(_78241_tokens))[(*(_78264_i))];;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _82913_genericsTokens = _1aa10580d_range(_78264_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _78241_tokens);;
	if ((_82913_genericsTokens != nullptr)) {
		(*(_78313_f))._field_Generics=_1aa10b1c6_buildGenerics(_self_, &(_82913_genericsTokens), &(_8289_errorToken));
	};
	if (((*((*(_78241_tokens))[(*(_78264_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_78241_tokens))[(*(_78264_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _83913_paramsToks = _1aa10580d_range(_78264_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _78241_tokens);;
	if ((_83913_paramsToks.len() > 0LL)) {
		(*(_78313_f))._field_Params=_1aa10cb01_buildParams(_self_, &(_83913_paramsToks), _78272_method);
	};
	if (((*(_78264_i)) < (*(_78241_tokens)).len())) {
		jule::Ptr<_1ab0c1e7c_Token> _84513_token = (*(_78241_tokens))[(*(_78264_i))];;
		if (((*(_84513_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*(_78313_f))._field_Exceptional=true;
			((*(_78264_i)))++;
		};
	};
	(*(_78313_f))._field_Public=_1ab1a2777_IsPub((*(_78313_f))._field_Ident);
	({
		__jule_tuple_x_1ab0da33b_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ac9b26c3_buildRetType(_self_, _78241_tokens, _78264_i);
		(*(_78313_f))._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _78313_f;;
}



inline jule::Ptr<_1ab0e9108_FnDecl> _1ac9b3130_buildFn(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _85932_tokens, jule::Bool _85950_method, jule::Bool _85964_prototype) {
	jule::I64 _86013_i = 0LL;;
	jule::Ptr<_1ab0e9108_FnDecl> _86113_f = _1ac9b2b79_buildFnPrototype(_self_, _85932_tokens, &(_86013_i), _85950_method);;
	if (_85964_prototype) {
		if ((_86013_i < (*(_85932_tokens)).len())) {
			_1aa107b0c_pushErr(_self_.ptr(), (*(_85932_tokens))[(_86013_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _86113_f;;
	} else if ((_86113_f == nullptr)) {
		return _86113_f;;
	};
	if ((_86013_i >= (*(_85932_tokens)).len())) {
		_1aa107458_stop(_self_.ptr());
		_1aa107b0c_pushErr(_self_.ptr(), (*(_86113_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _87713_blockTokens = _1aa10580d_range(&(_86013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _85932_tokens);;
	if ((_87713_blockTokens != nullptr)) {
		(*(_86113_f))._field_Scope=_1aa108ca6_buildScope(_self_, &(_87713_blockTokens), (*(_85932_tokens))[(_86013_i - 1LL)]);
		(*((*(_86113_f))._field_Scope))._field_Unsafety=(*(_86113_f))._field_Unsafety;
		if ((_86013_i < (*(_85932_tokens)).len())) {
			_1aa107b0c_pushErr(_self_.ptr(), (*(_85932_tokens))[_86013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1aa107458_stop(_self_.ptr());
		_1aa107b0c_pushErr(_self_.ptr(), (*(_86113_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _86113_f;;
}



inline jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _1ac9b3471_getUseDeclSelectors(_1aa10715b_parser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _89342_tokens) {
	jule::I64 _89413_i = 0LL;;
	_89342_tokens=_1aa10580d_range(&(_89413_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_89342_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _89613_parts;;
	jule::Slice<_1d7b81cb8_Log> _89620_errs;;
	({
		__jule_tuple_ssx_1ab0c1e7c_Token__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = _1aa10607d_parts(&(_89342_tokens), static_cast<jule::U64>(5LLU), true);
		_89613_parts = __jule_assign_result.__jule_result_arg0;
		_89620_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_89620_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_89620_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _90213_selectors = jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>::alloc(0LL, _89613_parts.len());;
	{
		auto expr = &(_89613_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc2d91d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _90321_part = *it;
			{
				if ((_90321_part.len() > 1LL)) {
					_1aa107b0c_pushErr(_self_, _90321_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ab0c1e7c_Token> _90717_tok = _90321_part[0LL];;
				if ((((*(_90717_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_90717_tok))._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1aa107b0c_pushErr(_self_, _90717_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1aa107e70_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1bcc2d91d;
				};
				{ jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> &__jule_push_dest = _90213_selectors; __jule_push_dest.push(_90717_tok); };
			}
			_iter_next_1bcc2d91d:;
			++it;
			goto _iter_begin_1bcc2d91d;
		}
		_iter_end_1bcc2d91d:;
	};
	return _90213_selectors;;
}



inline void _1ac9b37d4_buildBindUseDecl(_1aa10715b_parser* _self_, jule::Ptr<_1ab1002b8_UseDecl>* _91840_decl, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _91857_tokens) {
	if (((*(_91857_tokens)).len() > 1LL)) {
		_1aa107b0c_pushErr(_self_, (*(_91857_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab0c1e7c_Token> _9229_token = (*(_91857_tokens))[0LL];;
	if ((((*(_9229_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*(_9229_token))._field_Kind[0LL] != '`') && ((*(_9229_token))._field_Kind[0LL] != '\"')))) {
		_1aa107b0c_pushErr(_self_, _9229_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_91840_decl))))._field_Binded=true;
	(*((*(_91840_decl))))._field_LinkPath=(*(_9229_token))._field_Kind.slice(1LL, ((*(_9229_token))._field_Kind.len() - 1LL));
}



inline jule::Str _1ac9b3b25_useDeclTokstoa(_1aa10715b_parser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _93134_tokens) {
	jule::I64 _93213_n = 0LL;;
	{
		auto expr = _93134_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc35639:;
		if (it != expr_end) {
			jule::Ptr<_1ab0c1e7c_Token> *_93316_token = it;
			{
				if ((((*((*(_93316_token))))._field_Id != static_cast<jule::U64>(1LLU)) && ((*((*(_93316_token))))._field_Id != static_cast<jule::U64>(19LLU)))) {
					_1aa107b0c_pushErr(_self_, (*(_93316_token)), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_93213_n+=(*((*(_93316_token))))._field_Kind.len();
			}
			_iter_next_1bcc35639:;
			++it;
			goto _iter_begin_1bcc35639;
		}
		_iter_end_1bcc35639:;
	};
	_1d7ad2eb1_StrBuilder _93913_s = static__1d7ad327a_New(_93213_n);;
	{
		auto expr = _93134_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc3555c:;
		if (it != expr_end) {
			jule::Ptr<_1ab0c1e7c_Token> *_94016_token = it;
			{
				_1d7adba8b_WriteStr(&_93913_s, (*((*(_94016_token))))._field_Kind);
			}
			_iter_next_1bcc3555c:;
			++it;
			goto _iter_begin_1bcc3555c;
		}
		_iter_end_1bcc3555c:;
	};
	return _1d7adc383_Str(&_93913_s);;
}



inline void _1ac9b3e88_buildStdUseDecl(_1aa10715b_parser* _self_, jule::Ptr<_1ab1002b8_UseDecl>* _94639_decl, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _94659_tokens) {
	(*((*(_94639_decl))))._field_Std=true;
	jule::Ptr<_1ab0c1e7c_Token> _94913_token = _94659_tokens[0LL];;
	if ((_94659_tokens.len() < 3LL)) {
		_1aa107b0c_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_94659_tokens).mut_slice(2LL);;
	_94913_token=_94659_tokens[(_94659_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_94913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1bcc39be3:;
			{
				_1aa107b0c_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1bcc39c6a:;
			{
				jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _96221_selectors = nullptr;;
				({
					__jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_sx_1ab0c1e7c_Token __jule_assign_result = _1aa105ac7_rangeLast(&(_94659_tokens));
					_94659_tokens = __jule_assign_result.__jule_result_arg0;
					_96221_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_94639_decl))))._field_Selected=_1ac9b3471_getUseDeclSelectors(_self_, _96221_selectors);
				if ((_94659_tokens.len() == 0LL)) {
					_1aa107b0c_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94913_token=_94659_tokens[(_94659_tokens.len() - 1LL)];
				if (((*(_94913_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1aa107b0c_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94659_tokens).mut_slice(0LL, (_94659_tokens.len() - 1LL));;
				if ((_94659_tokens.len() == 0LL)) {
					_1aa107b0c_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bcc39ce2:;
			{
				(_94659_tokens).mut_slice(0LL, (_94659_tokens.len() - 1LL));;
				if ((_94659_tokens.len() == 0LL)) {
					_1aa107b0c_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94913_token=_94659_tokens[(_94659_tokens.len() - 1LL)];
				if (((*(_94913_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1aa107b0c_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94659_tokens).mut_slice(0LL, (_94659_tokens.len() - 1LL));;
				if ((_94659_tokens.len() == 0LL)) {
					_1aa107b0c_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_94639_decl))))._field_Full=true;
			}
		}
		_match_end_1bcc39b6b:;
	};
	if (((_94659_tokens.len() == 1LL) && ((*(_94659_tokens[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*((*(_94639_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_94639_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1ac9b3b25_useDeclTokstoa(_self_, &(_94659_tokens)));
	};
}



inline void _1ac9b42eb_buildIdentUseDecl(_1aa10715b_parser* _self_, jule::Ptr<_1ab1002b8_UseDecl>* _100441_decl, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _100461_tokens) {
	(*((*(_100441_decl))))._field_Std=false;
	jule::Ptr<_1ab0c1e7c_Token> _100713_token = _100461_tokens[(_100461_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_100713_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1bcc435ae:;
			{
				_1aa107b0c_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1bcc443a1:;
			{
				jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _101321_selectors = nullptr;;
				({
					__jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_sx_1ab0c1e7c_Token __jule_assign_result = _1aa105ac7_rangeLast(&(_100461_tokens));
					_100461_tokens = __jule_assign_result.__jule_result_arg0;
					_101321_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_100441_decl))))._field_Selected=_1ac9b3471_getUseDeclSelectors(_self_, _101321_selectors);
				if ((_100461_tokens.len() == 0LL)) {
					_1aa107b0c_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100713_token=_100461_tokens[(_100461_tokens.len() - 1LL)];
				if (((*(_100713_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1aa107b0c_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_100461_tokens).mut_slice(0LL, (_100461_tokens.len() - 1LL));;
				if ((_100461_tokens.len() == 0LL)) {
					_1aa107b0c_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bcc44417:;
			{
				(_100461_tokens).mut_slice(0LL, (_100461_tokens.len() - 1LL));;
				if ((_100461_tokens.len() == 0LL)) {
					_1aa107b0c_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100713_token=_100461_tokens[(_100461_tokens.len() - 1LL)];
				if (((*(_100713_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1aa107b0c_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_100461_tokens).mut_slice(0LL, (_100461_tokens.len() - 1LL));;
				if ((_100461_tokens.len() == 0LL)) {
					_1aa107b0c_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_100441_decl))))._field_Full=true;
			}
		}
		_match_end_1bcc44291:;
	};
	(*((*(_100441_decl))))._field_LinkPath=_1ac9b3b25_useDeclTokstoa(_self_, &(_100461_tokens));
}



inline void _1ac9b465e_parseUseDecl(_1aa10715b_parser* _self_, jule::Ptr<_1ab1002b8_UseDecl>* _105236_decl, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _105256_tokens) {
	if ((*((*(_105236_decl))))._field_Binded) {
		_1ac9b37d4_buildBindUseDecl(_self_, _105236_decl, &(_105256_tokens));
		return;;
	};
	jule::Ptr<_1ab0c1e7c_Token> _105813_token = _105256_tokens[0LL];;
	if (((*(_105813_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1aa107b0c_pushErr(_self_, _105813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_105256_tokens.len() > 2LL) && ((*(_105256_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_105236_decl))))._field_Alias=(*(_105813_token))._field_Kind;
		if (((*(_105256_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1aa107b0c_pushErr(_self_, _105813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1aa107e70_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_105256_tokens).mut_slice(2LL);;
		_105813_token=_105256_tokens[0LL];
	};
	;
	{
		
		if ((*(_105813_token))._field_Kind.equal("std", 3)) {
			_case_begin_1bcc51226:;
			{
				_1ac9b3e88_buildStdUseDecl(_self_, _105236_decl, _105256_tokens);
			}
		}
		else {
			_case_begin_1bcc50c92:;
			{
				_1ac9b42eb_buildIdentUseDecl(_self_, _105236_decl, _105256_tokens);
			}
		}
		_match_end_1bcc50c2b:;
	};
}



inline jule::Ptr<_1ab1002b8_UseDecl> _1ac9b4a5a_buildUseDecl(_1aa10715b_parser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _108635_tokens, jule::Bool _108653_binded) {
	jule::Ptr<_1ab1002b8_UseDecl> _108713_decl = jule::new_ptr<_1ab1002b8_UseDecl>(_1ab1002b8_UseDecl{._field_Token=_108635_tokens[0LL], ._field_Binded=_108653_binded, });;
	if ((_108635_tokens.len() < 2LL)) {
		_1aa107b0c_pushErr(_self_, (*(_108713_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_108635_tokens).mut_slice(1LL);;
	_1ac9b465e_parseUseDecl(_self_, &(_108713_decl), _108635_tokens);
	return _108713_decl;;
}



inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9b4e56_buildTypeEnumItemKind(jule::Ptr<_1aa10715b_parser> _self_, jule::I64* _110046_i, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _110059_tokens) {
	jule::I64 _110113_braceN = 0LL;;
	jule::I64 _11029_exprStart = (*(_110046_i));;
	for (; ((*(_110046_i)) < (*(_110059_tokens)).len()); ((*(_110046_i)))++) {
		{
			jule::Ptr<_1ab0c1e7c_Token> _110413_t = (*(_110059_tokens))[(*(_110046_i))];;
			{
				auto &_match_expr{ (*(_110413_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1bcc54e50:;
					{
						(_110113_braceN)++;
						goto _iter_next_1bcc543b1;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1bcc54ec7:;
					{
						(_110113_braceN)--;
					}
				}
				_match_end_1bcc54dd9:;
			};
			if ((_110113_braceN > 0LL)) {
				goto _iter_next_1bcc543b1;
			};
			if ((((*(_110413_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_110046_i)) + 1LL) >= (*(_110059_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _112025_kindTokens = nullptr;;
				if (((*(_110413_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_112025_kindTokens=(*(_110059_tokens)).slice(_11029_exprStart, (*(_110046_i)));
				} else {
					_112025_kindTokens=(*(_110059_tokens)).slice(_11029_exprStart);
				};
				jule::I64 _112621_j = 0LL;;
				jule::Ptr<_1ab0d7448_TypeDecl> _112721_kind;;
				({
					__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType(_self_, &(_112025_kindTokens), (&(_112621_j)), true);
					_112721_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_112621_j < _112025_kindTokens.len())) {
					_1aa107b0c_pushErr(_self_.ptr(), _112025_kindTokens[_112621_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _112721_kind;;
			};
		}
	_iter_next_1bcc543b1:;
	}
	_iter_end_1bcc543b1:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1ab101b5a_TypeEnumItemDecl>> _1ac9b5297_buildTypeEnumItems(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _113743_tokens) {
	jule::Slice<jule::Ptr<_1ab101b5a_TypeEnumItemDecl>> _113813_items = jule::Slice<jule::Ptr<_1ab101b5a_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _113913_i = 0LL;;
	for (; (_113913_i < (*(_113743_tokens)).len()); (_113913_i)++) {
		{
			jule::Ptr<_1ab0c1e7c_Token> _114117_t = (*(_113743_tokens))[_113913_i];;
			jule::Ptr<_1ab101b5a_TypeEnumItemDecl> _114217_item = jule::new_ptr<_1ab101b5a_TypeEnumItemDecl>();;
			(*(_114217_item))._field_Token=_114117_t;
			if ((((*((*(_114217_item))._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_113743_tokens)).len() - _113913_i) > 2LL))) {
				_114117_t=(*(_113743_tokens))[(_113913_i + 1LL)];
				if (((*(_114117_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*(_114217_item))._field_Ident=(*((*(_114217_item))._field_Token))._field_Kind;
					_113913_i+=2LL;
					if (((_113913_i >= (*(_113743_tokens)).len()) || ((*((*(_113743_tokens))[_113913_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1aa107b0c_pushErr(_self_.ptr(), _114117_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1bcc59c9b;
					};
				};
			};
			(*(_114217_item))._field_Kind=_1ac9b4e56_buildTypeEnumItemKind(_self_, &(_113913_i), _113743_tokens);
			{ jule::Slice<jule::Ptr<_1ab101b5a_TypeEnumItemDecl>> &__jule_push_dest = _113813_items; __jule_push_dest.push(_114217_item); };
		}
	_iter_next_1bcc59c9b:;
	}
	_iter_end_1bcc59c9b:;;
	return _113813_items;;
}



inline jule::Ptr<_1ab1022ba_TypeEnumDecl> _1ac9b55d8_buildTypeEnumDecl(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _116142_tokens) {
	jule::I64 _116213_i = 1LL;;
	jule::Ptr<_1ab1022ba_TypeEnumDecl> _116313_e = jule::new_ptr<_1ab1022ba_TypeEnumDecl>(_1ab1022ba_TypeEnumDecl{._field_Token=(*(_116142_tokens))[_116213_i], });;
	if (((*((*(_116313_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_116313_e))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_116313_e))._field_Ident=(*((*(_116313_e))._field_Token))._field_Kind;
	_116213_i+=3LL;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _117313_itemTokens = _1aa10580d_range(&(_116213_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _116142_tokens);;
	if ((_117313_itemTokens == nullptr)) {
		_1aa107458_stop(_self_.ptr());
		_1aa107b0c_pushErr(_self_.ptr(), (*(_116313_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _116313_e;;
	} else if ((_116213_i < (*(_116142_tokens)).len())) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_116142_tokens))[_116213_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_116313_e))._field_Public=_1ab1a2777_IsPub((*(_116313_e))._field_Ident);
	(*(_116313_e))._field_End=(*(_116142_tokens))[(_116213_i - 1LL)];
	(*(_116313_e))._field_Items=_1ac9b5297_buildTypeEnumItems(_self_, &(_117313_itemTokens));
	return _116313_e;;
}



inline jule::Ptr<_1ab0db77c_Expr> _1ac9b59d4_buildEnumItemExpr(jule::Ptr<_1aa10715b_parser> _self_, jule::I64* _118842_i, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _118855_tokens) {
	jule::I64 _118913_braceN = 0LL;;
	jule::I64 _11909_exprStart = (*(_118842_i));;
	for (; ((*(_118842_i)) < (*(_118855_tokens)).len()); ((*(_118842_i)))++) {
		{
			jule::Ptr<_1ab0c1e7c_Token> _119213_t = (*(_118855_tokens))[(*(_118842_i))];;
			{
				auto &_match_expr{ (*(_119213_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1bcc6677a:;
					{
						(_118913_braceN)++;
						goto _iter_next_1bcc65bdb;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1bcc66802:;
					{
						(_118913_braceN)--;
					}
				}
				_match_end_1bcc66714:;
			};
			if ((_118913_braceN > 0LL)) {
				goto _iter_next_1bcc65bdb;
			};
			if ((((*(_119213_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_118842_i)) + 1LL) >= (*(_118855_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _120825_exprTokens = nullptr;;
				if (((*(_119213_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_120825_exprTokens=(*(_118855_tokens)).slice(_11909_exprStart, (*(_118842_i)));
				} else {
					_120825_exprTokens=(*(_118855_tokens)).slice(_11909_exprStart);
				};
				return _1aa1082b1_buildExpr(_self_, &(_120825_exprTokens));;
			};
		}
	_iter_next_1bcc65bdb:;
	}
	_iter_end_1bcc65bdb:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1ab10076e_EnumItemDecl>> _1ac9b5d25_buildEnumItems(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _122039_tokens) {
	jule::Slice<jule::Ptr<_1ab10076e_EnumItemDecl>> _122113_items = jule::Slice<jule::Ptr<_1ab10076e_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _122213_i = 0LL;;
	for (; (_122213_i < (*(_122039_tokens)).len()); (_122213_i)++) {
		{
			jule::Ptr<_1ab0c1e7c_Token> _122417_t = (*(_122039_tokens))[_122213_i];;
			jule::Ptr<_1ab10076e_EnumItemDecl> _122517_item = jule::new_ptr<_1ab10076e_EnumItemDecl>();;
			(*(_122517_item))._field_Token=_122417_t;
			if (((*((*(_122517_item))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1aa107b0c_pushErr(_self_.ptr(), (*(_122517_item))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*(_122517_item))._field_Ident=(*((*(_122517_item))._field_Token))._field_Kind;
			if ((((_122213_i + 1LL) >= (*(_122039_tokens)).len()) || ((*((*(_122039_tokens))[(_122213_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_122213_i + 1LL) < (*(_122039_tokens)).len())) {
					(_122213_i)++;
				};
				{ jule::Slice<jule::Ptr<_1ab10076e_EnumItemDecl>> &__jule_push_dest = _122113_items; __jule_push_dest.push(_122517_item); };
				goto _iter_next_1bcc6a493;
			};
			(_122213_i)++;
			_122417_t=(*(_122039_tokens))[_122213_i];
			(_122213_i)++;
			if (((*(_122417_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1aa107b0c_pushErr(_self_.ptr(), _122417_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1bcc6a493;
			};
			if (((_122213_i >= (*(_122039_tokens)).len()) || ((*((*(_122039_tokens))[_122213_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1aa107b0c_pushErr(_self_.ptr(), _122417_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1bcc6a493;
			};
			(*(_122517_item))._field_Expr=_1ac9b59d4_buildEnumItemExpr(_self_, &(_122213_i), _122039_tokens);
			{ jule::Slice<jule::Ptr<_1ab10076e_EnumItemDecl>> &__jule_push_dest = _122113_items; __jule_push_dest.push(_122517_item); };
		}
	_iter_next_1bcc6a493:;
	}
	_iter_end_1bcc6a493:;;
	return _122113_items;;
}



inline jule::Ptr<_1ab101330_EnumDecl> _1ac9b6166_buildEnumDecl(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _125738_tokens) {
	if (((*(_125738_tokens)).len() < 3LL)) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_125738_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab101330_EnumDecl> _126213_e = jule::new_ptr<_1ab101330_EnumDecl>(_1ab101330_EnumDecl{._field_Token=(*(_125738_tokens))[1LL], });;
	if (((*((*(_126213_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_126213_e))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_126213_e))._field_Ident=(*((*(_126213_e))._field_Token))._field_Kind;
	jule::I64 _127013_i = 2LL;;
	if (((*((*(_125738_tokens))[_127013_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_127013_i)++;
		if ((_127013_i >= (*(_125738_tokens)).len())) {
			_1aa107b0c_pushErr(_self_.ptr(), (*(_125738_tokens))[(_127013_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _126213_e;;
		};
		({
			__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType(_self_, _125738_tokens, (&(_127013_i)), true);
			(*(_126213_e))._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_127013_i >= (*(_125738_tokens)).len())) {
			_1aa107458_stop(_self_.ptr());
			_1aa107b0c_pushErr(_self_.ptr(), (*(_126213_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _126213_e;;
		};
	} else {
		(*(_126213_e))._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _128713_itemTokens = _1aa10580d_range(&(_127013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _125738_tokens);;
	if ((_128713_itemTokens == nullptr)) {
		_1aa107458_stop(_self_.ptr());
		_1aa107b0c_pushErr(_self_.ptr(), (*(_126213_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _126213_e;;
	} else if ((_127013_i < (*(_125738_tokens)).len())) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_125738_tokens))[_127013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_126213_e))._field_Public=_1ab1a2777_IsPub((*(_126213_e))._field_Ident);
	(*(_126213_e))._field_End=(*(_125738_tokens))[(_127013_i - 1LL)];
	(*(_126213_e))._field_Items=_1ac9b5d25_buildEnumItems(_self_, &(_128713_itemTokens));
	return _126213_e;;
}



inline jule::Any _1ac9b64a7_buildNodeEnumDecl(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _130242_tokens) {
	if ((((*(_130242_tokens)).len() > 3LL) && ((*((*(_130242_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_130242_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1ac9b55d8_buildTypeEnumDecl(_self_, _130242_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1ac9b6166_buildEnumDecl(_self_, _130242_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1ab102584_FieldDecl> _1ac9b67e8_buildField(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _131134_tokens) {
	jule::Ptr<_1ab102584_FieldDecl> _131213_f = jule::new_ptr<_1ab102584_FieldDecl>();;
	(*(_131213_f))._field_Mutable=((*(_131134_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*(_131213_f))._field_Mutable) {
		if ((_131134_tokens.len() == 1LL)) {
			_1aa107b0c_pushErr(_self_.ptr(), _131134_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_131134_tokens).mut_slice(1LL);;
	};
	(*(_131213_f))._field_Token=_131134_tokens[0LL];
	if (((*((*(_131213_f))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_131213_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_131213_f))._field_Ident=(*((*(_131213_f))._field_Token))._field_Kind;
	if ((_131134_tokens.len() == 1LL)) {
		_1aa107b0c_pushErr(_self_.ptr(), _131134_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_131134_tokens.len() < 3LL) || ((*(_131134_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1aa107b0c_pushErr(_self_.ptr(), _131134_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_131134_tokens).mut_slice(2LL);;
	jule::I64 _134013_i = 0LL;;
	({
		__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType(_self_, &(_131134_tokens), (&(_134013_i)), true);
		(*(_131213_f))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_134013_i < _131134_tokens.len())) {
		jule::Ptr<_1ab0c1e7c_Token> _134313_token = _131134_tokens[_134013_i];;
		if (((*(_134313_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1aa107b0c_pushErr(_self_.ptr(), _131134_tokens[_134013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_134013_i)++;
		if ((_134013_i >= _131134_tokens.len())) {
			_1aa107b0c_pushErr(_self_.ptr(), _134313_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_131134_tokens).mut_slice(_134013_i);;
		(*(_131213_f))._field_Default=_1aa1082b1_buildExpr(_self_, &(_131134_tokens));
	};
	(*(_131213_f))._field_Public=_1ab1a2777_IsPub((*(_131213_f))._field_Ident);
	return _131213_f;;
}



inline jule::Slice<jule::Ptr<_1ab102584_FieldDecl>> _1ac9b6b39_buildStructDeclFields(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _136045_tokens) {
	jule::Slice<jule::Ptr<_1ab102584_FieldDecl>> _136117_fields = nullptr;;
	jule::Slice<jule::Ptr<_1aa0d87be_stmt>> _136213_stmts = _1aa0d8b76_splitStmts(&(_136045_tokens));;
	{
		auto expr = &(_136213_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc8da5a:;
		if (it != expr_end) {
			jule::Ptr<_1aa0d87be_stmt> _136321_stmt = *it;
			{
				_136045_tokens=(*(_136321_stmt))._field_tokens;
				jule::Ptr<_1ab102584_FieldDecl> _136517_f = _1ac9b67e8_buildField(_self_, _136045_tokens);;
				{ jule::Slice<jule::Ptr<_1ab102584_FieldDecl>> &__jule_push_dest = _136117_fields; __jule_push_dest.push(_136517_f); };
			}
			_iter_next_1bcc8da5a:;
			++it;
			goto _iter_begin_1bcc8da5a;
		}
		_iter_end_1bcc8da5a:;
	};
	return _136117_fields;;
}



inline jule::Ptr<_1ab102e7a_StructDecl> _1ac9b6e7a_buildStructDecl(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _137140_tokens) {
	if (((*(_137140_tokens)).len() < 3LL)) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_137140_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _137713_i = 1LL;;
	jule::Ptr<_1ab102e7a_StructDecl> _137813_s = jule::new_ptr<_1ab102e7a_StructDecl>(_1ab102e7a_StructDecl{._field_Token=(*(_137140_tokens))[_137713_i], });;
	if (((*((*(_137813_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_137813_s))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_137713_i)++;
	if ((_137713_i >= (*(_137140_tokens)).len())) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_137140_tokens))[_137713_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _137813_s;;
	};
	(*(_137813_s))._field_Ident=(*((*(_137813_s))._field_Token))._field_Kind;
	jule::Ptr<_1ab0c1e7c_Token> _13929_errorToken = (*(_137140_tokens))[_137713_i];;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _139313_genericsTokens = _1aa10580d_range(&(_137713_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _137140_tokens);;
	if ((_139313_genericsTokens != nullptr)) {
		(*(_137813_s))._field_Generics=_1aa10b1c6_buildGenerics(_self_, &(_139313_genericsTokens), &(_13929_errorToken));
	};
	if ((_137713_i >= (*(_137140_tokens)).len())) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_137140_tokens))[(_137713_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137813_s;;
	};
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _140313_bodyTokens = _1aa10580d_range(&(_137713_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _137140_tokens);;
	if ((_140313_bodyTokens == nullptr)) {
		_1aa107458_stop(_self_.ptr());
		_1aa107b0c_pushErr(_self_.ptr(), (*(_137813_s))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137813_s;;
	};
	if ((_137713_i < (*(_137140_tokens)).len())) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_137140_tokens))[_137713_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_137813_s))._field_Public=_1ab1a2777_IsPub((*(_137813_s))._field_Ident);
	(*(_137813_s))._field_Fields=_1ac9b6b39_buildStructDeclFields(_self_, _140313_bodyTokens);
	(*(_137813_s))._field_End=(*(_137140_tokens))[(_137713_i - 1LL)];
	return _137813_s;;
}



inline void _1ac9b7233_checkMethodReceiver(_1aa10715b_parser* _self_, jule::Ptr<_1ab0e9108_FnDecl>* _141939_f) {
	if ((*((*(_141939_f))))._field_Statically) {
		if ((((*((*(_141939_f))))._field_Params.len() > 0LL) && _1ab0e802a_IsSelf((*((*(_141939_f))))._field_Params[0LL].ptr()))) {
			_1aa107b0c_pushErr(_self_, (*((*(_141939_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_141939_f))))._field_Params.len() == 0LL)) {
		_1aa107b0c_pushErr(_self_, (*((*(_141939_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab0e7ba6_ParamDecl> _14319_param = (*((*(_141939_f))))._field_Params[0LL];;
	if ((!(_1ab0e802a_IsSelf(_14319_param.ptr())))) {
		_1aa107b0c_pushErr(_self_, (*((*(_141939_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ac9b7596_buildTraitBody(jule::Ptr<_1aa10715b_parser> _self_, jule::Ptr<_1ab1036b7_TraitDecl>* _143839_t, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _143858_tokens) {
	jule::Slice<jule::Ptr<_1aa0d87be_stmt>> _143913_stmts = _1aa0d8b76_splitStmts(&(_143858_tokens));;
	{
		auto expr = &(_143913_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc9d817:;
		if (it != expr_end) {
			jule::Ptr<_1aa0d87be_stmt> _144021_stmt = *it;
			{
				_143858_tokens=(*(_144021_stmt))._field_tokens;
				if ((_143858_tokens.len() == 0LL)) {
					goto _iter_next_1bcc9d817;
				};
				{
					auto &_match_expr{ (*(_143858_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1bcca1cc1:;
						{
							jule::Ptr<_1ab0e9108_FnDecl> _144721_f = _1ac9b3130_buildFn(_self_, &(_143858_tokens), true, true);;
							if ((_144721_f == nullptr)) {
								goto _match_end_1bcc9eb15;
							};
							_1ac9b7233_checkMethodReceiver(_self_.ptr(), &(_144721_f));
							if (((*(_144721_f))._field_Generics.len() > 0LL)) {
								_1aa107b0c_pushErr(_self_.ptr(), (*(_144721_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1ab0e9108_FnDecl>> &__jule_push_dest = (*((*(_143839_t))))._field_Methods; __jule_push_dest.push(_144721_f); };
						}
					}
					else {
						_case_begin_1bcc9e3d9:;
						{
							jule::I64 _145721_i = 0LL;;
							jule::Ptr<_1ab0d7448_TypeDecl> _145821_ti;;
							jule::Bool _145825_ok = false;;
							({
								__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType(_self_, &(_143858_tokens), (&(_145721_i)), true);
								_145821_ti = __jule_assign_result.__jule_result_arg0;
								_145825_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_145825_ok))) {
								goto _match_end_1bcc9eb15;
							};
							if ((_145721_i < _143858_tokens.len())) {
								_1aa107b0c_pushErr(_self_.ptr(), _143858_tokens[_145721_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> &__jule_push_dest = (*((*(_143839_t))))._field_Inherits; __jule_push_dest.push(_145821_ti); };
						}
					}
					_match_end_1bcc9eb15:;
				};
			}
			_iter_next_1bcc9d817:;
			++it;
			goto _iter_begin_1bcc9d817;
		}
		_iter_end_1bcc9d817:;
	};
}



inline jule::Ptr<_1ab1036b7_TraitDecl> _1ac9b78d7_buildTraitDecl(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _147039_tokens) {
	if (((*(_147039_tokens)).len() < 3LL)) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_147039_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab1036b7_TraitDecl> _147513_t = jule::new_ptr<_1ab1036b7_TraitDecl>(_1ab1036b7_TraitDecl{._field_Token=(*(_147039_tokens))[1LL], });;
	if (((*((*(_147513_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_147513_t))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_147513_t))._field_Ident=(*((*(_147513_t))._field_Token))._field_Kind;
	jule::I64 _148313_i = 2LL;;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _148413_bodyTokens = _1aa10580d_range(&(_148313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _147039_tokens);;
	if ((_148413_bodyTokens == nullptr)) {
		_1aa107458_stop(_self_.ptr());
		_1aa107b0c_pushErr(_self_.ptr(), (*(_147513_t))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_148313_i < (*(_147039_tokens)).len())) {
		_1aa107b0c_pushErr(_self_.ptr(), (*(_147039_tokens))[_148313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_147513_t))._field_Public=_1ab1a2777_IsPub((*(_147513_t))._field_Ident);
	_1ac9b7596_buildTraitBody(_self_, &(_147513_t), _148413_bodyTokens);
	(*(_147513_t))._field_End=(*(_147039_tokens))[(_148313_i - 1LL)];
	return _147513_t;;
}



inline jule::Ptr<_1ab0e9108_FnDecl> _1ac9b7c28_buildBindFn(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _150035_tokens) {
	(_150035_tokens).mut_slice(1LL);;
	jule::Ptr<_1ab0e9108_FnDecl> _150213_f = _1ac9b3130_buildFn(_self_, &(_150035_tokens), false, true);;
	if ((_150213_f != nullptr)) {
		(*(_150213_f))._field_Public=false;
		(*(_150213_f))._field_Binded=true;
	};
	return _150213_f;;
}



inline jule::Ptr<_1ab0ea1d6_VarDecl> _1ac9b8069_buildBindVar(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _151036_tokens) {
	(_151036_tokens).mut_slice(1LL);;
	jule::Ptr<_1ab0ea1d6_VarDecl> _151213_v = _1aa10a989_buildVar(_self_, _151036_tokens);;
	if ((_151213_v != nullptr)) {
		(*(_151213_v))._field_Public=false;
		(*(_151213_v))._field_Binded=true;
		if (((*(_151213_v))._field_Expr != nullptr)) {
			_1aa107b0c_pushErr(_self_.ptr(), (*(_151213_v))._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _151213_v;;
}



inline jule::Ptr<_1ab102e7a_StructDecl> _1ac9b83aa_buildBindStruct(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _152339_tokens) {
	(_152339_tokens).mut_slice(1LL);;
	jule::Ptr<_1ab102e7a_StructDecl> _152513_s = _1ac9b6e7a_buildStructDecl(_self_, &(_152339_tokens));;
	if ((_152513_s != nullptr)) {
		(*(_152513_s))._field_Public=false;
		{
			auto expr = &((*(_152513_s))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bccb0483:;
			if (it != expr_end) {
				jule::Ptr<_1ab102584_FieldDecl> _152825_f = *it;
				{
					(*(_152825_f))._field_Public=true;
				}
				_iter_next_1bccb0483:;
				++it;
				goto _iter_begin_1bccb0483;
			}
			_iter_end_1bccb0483:;
		};
		(*(_152513_s))._field_Binded=true;
	};
	return _152513_s;;
}



inline jule::Ptr<_1ab0edcab_TypeAliasDecl> _1ac9b86eb_buildBindTypeAlias(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _153742_tokens) {
	(_153742_tokens).mut_slice(1LL);;
	jule::Ptr<_1ab0edcab_TypeAliasDecl> _153913_t = _1aa109a54_buildTypeAliasDecl(_self_, &(_153742_tokens));;
	if ((_153913_t != nullptr)) {
		(*(_153913_t))._field_Public=false;
		(*(_153913_t))._field_Binded=true;
	};
	return _153913_t;;
}



inline jule::Ptr<_1ab1002b8_UseDecl> _1ac9b8a3c_buildBindUse(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _154736_tokens) {
	if ((_154736_tokens.len() == 1LL)) {
		_1aa107b0c_pushErr(_self_.ptr(), _154736_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_154736_tokens).mut_slice(1LL);;
	;
	return _1ac9b4a5a_buildUseDecl(_self_.ptr(), _154736_tokens, true);;
}



inline jule::Any _1ac9b8d7d_buildBind(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _155834_tokens) {
	jule::Ptr<_1ab0c1e7c_Token> _155913_token = (*(_155834_tokens))[0LL];;
	if (((*(_155834_tokens)).len() == 1LL)) {
		_1aa107b0c_pushErr(_self_.ptr(), _155913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_155913_token=(*(_155834_tokens))[1LL];
	{
		auto &_match_expr{ (*(_155913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1bccb6159:;
			{
				return jule::Any(_1ac9b7c28_buildBindFn(_self_, (*(_155834_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1bccb5d5c:;
			{
				return jule::Any(_1ac9b8069_buildBindVar(_self_, (*(_155834_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1bccb5dc3:;
			{
				return jule::Any(_1ac9b83aa_buildBindStruct(_self_, (*(_155834_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bccb5e39:;
			{
				return jule::Any(_1ac9b86eb_buildBindTypeAlias(_self_, (*(_155834_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1bccb5ce6:;
			{
				_1aa107b0c_pushErr(_self_.ptr(), _155913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bccb5c91:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab0e9108_FnDecl> _1ac9b91be_getMethod(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _158234_tokens) {
	jule::I64 _158313_i = 0LL;;
	jule::Ptr<_1ab0c1e7c_Token> _158413_token = (*(_158234_tokens))[_158313_i];;
	if (((*(_158413_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_158313_i + 1LL) >= (*(_158234_tokens)).len())) {
			_1aa107b0c_pushErr(_self_.ptr(), _158413_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_158313_i)++;
		_158413_token=(*(_158234_tokens))[_158313_i];
	};
	if (((*(_158413_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_158313_i + 1LL) >= (*(_158234_tokens)).len())) {
			_1aa107b0c_pushErr(_self_.ptr(), _158413_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_158313_i)++;
		_158413_token=(*(_158234_tokens))[_158313_i];
	};
	if (((*(_158413_token))._field_Id != static_cast<jule::U64>(29LLU))) {
		_1aa107b0c_pushErr(_self_.ptr(), _158413_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ac9b3130_buildFn(_self_, _158234_tokens, true, false);;
}



inline void _1ac9b9532_parseImplBody(jule::Ptr<_1aa10715b_parser> _self_, jule::Ptr<_1ab103d27_Impl>* _161138_ipl, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _161155_tokens) {
	jule::Slice<jule::Ptr<_1aa0d87be_stmt>> _161213_stmts = _1aa0d8b76_splitStmts(_161155_tokens);;
	{
		auto expr = &(_161213_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bccbd260:;
		if (it != expr_end) {
			jule::Ptr<_1aa0d87be_stmt> _161321_stmt = *it;
			{
				(*(_161155_tokens))=(*(_161321_stmt))._field_tokens;
				jule::Ptr<_1ab0c1e7c_Token> _161517_token = (*(_161155_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_161517_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1bccbd8ae:;
						{
							_1aa1088aa_pushDirective(_self_.ptr(), _1aa108602_buildDirective(_self_.ptr(), (*(_161155_tokens))));
							goto _iter_next_1bccbd260;
						}
					}
					_match_end_1bccbe382:;
				};
				{
					auto &_match_expr{ (*(_161517_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1bccbe9ae:;
						{
							jule::Ptr<_1ab0ea1d6_VarDecl> _162421_v = _1aa10a989_buildVar(_self_, (*(_161155_tokens)));;
							if ((_162421_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1ab0ea1d6_VarDecl>> &__jule_push_dest = (*((*(_161138_ipl))))._field_Statics; __jule_push_dest.push(_162421_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1bccbe4b4:;
						{
							jule::Ptr<_1ab0e9108_FnDecl> _163121_f = _1ac9b91be_getMethod(_self_, _161155_tokens);;
							if ((_163121_f != nullptr)) {
								_1ac9b7233_checkMethodReceiver(_self_.ptr(), &(_163121_f));
								_1ac9b9e6c_applyFnMeta(_self_.ptr(), &(_163121_f));
								{ jule::Slice<jule::Ptr<_1ab0e9108_FnDecl>> &__jule_push_dest = (*((*(_161138_ipl))))._field_Methods; __jule_push_dest.push(_163121_f); };
							};
						}
					}
					else {
						_case_begin_1bccbe904:;
						{
							_1aa107b0c_pushErr(_self_.ptr(), _161517_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1bccbd260;
						}
					}
					_match_end_1bccbe89e:;
				};
			}
			_iter_next_1bccbd260:;
			++it;
			goto _iter_begin_1bccbd260;
		}
		_iter_end_1bccbd260:;
	};
}



inline jule::Ptr<_1ab103d27_Impl> _1ac9b9873_buildImpl(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _164433_tokens) {
	jule::Ptr<_1ab0c1e7c_Token> _164513_token = _164433_tokens[0LL];;
	if ((_164433_tokens.len() < 2LL)) {
		_1aa107b0c_pushErr(_self_.ptr(), _164513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _165113_i = 1LL;;
	jule::Ptr<_1ab0d7448_TypeDecl> _165313_base;;
	jule::Bool _165323_ok = false;;
	({
		__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType(_self_, &(_164433_tokens), (&(_165113_i)), true);
		_165313_base = __jule_assign_result.__jule_result_arg0;
		_165323_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_165323_ok))) {
		return nullptr;;
	};
	if ((_165113_i >= _164433_tokens.len())) {
		_1aa107b0c_pushErr(_self_.ptr(), _164513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab103d27_Impl> _166213_ipl = jule::new_ptr<_1ab103d27_Impl>(_1ab103d27_Impl{._field_Base=_165313_base, });;
	_164513_token=_164433_tokens[_165113_i];
	if (((*(_164513_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*(_164513_token))._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_166213_ipl))._field_Base, (*(_166213_ipl))._field_Dest);
			goto _julec_label_1bc85b42a;
		};
		_1aa107458_stop(_self_.ptr());
		_1aa107b0c_pushErr(_self_.ptr(), _164513_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_165113_i)++;
	if ((_165113_i >= _164433_tokens.len())) {
		_1aa107458_stop(_self_.ptr());
		_1aa107b0c_pushErr(_self_.ptr(), _164513_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType(_self_, &(_164433_tokens), (&(_165113_i)), true);
		(*(_166213_ipl))._field_Dest = __jule_assign_result.__jule_result_arg0;
		_165323_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_165323_ok))) {
		return nullptr;;
	};
	if ((_165113_i >= _164433_tokens.len())) {
		_1aa107458_stop(_self_.ptr());
		_1aa107b0c_pushErr(_self_.ptr(), _164513_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1bc85b42a:;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _170013_bodyTokens = _1aa10580d_range(&(_165113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_164433_tokens));;
	if ((_170013_bodyTokens == nullptr)) {
		_1aa107458_stop(_self_.ptr());
		_1aa107b0c_pushErr(_self_.ptr(), _164513_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_165113_i < _164433_tokens.len())) {
		_1aa107b0c_pushErr(_self_.ptr(), _164433_tokens[_165113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_166213_ipl))._field_End=_164433_tokens[(_165113_i - 1LL)];
	_1ac9b9532_parseImplBody(_self_, &(_166213_ipl), &(_170013_bodyTokens));
	return _166213_ipl;;
}



inline jule::Any _1ac9b9bb4_buildNodeData(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _171538_tokens) {
	jule::Ptr<_1ab0c1e7c_Token> _171613_token = (*(_171538_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_171613_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1bc860440:;
			{
				jule::Ptr<_1ab0e9108_FnDecl> _172017_f = _1ac9b3130_buildFn(_self_, _171538_tokens, false, false);;
				if ((_172017_f != nullptr)) {
					(*(_172017_f))._field_Global=true;
				};
				return jule::Any(_172017_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1bc85ec47:;
			{
				return jule::Any(_1aa10a989_buildVar(_self_, (*(_171538_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bc860a7d:;
			{
				return jule::Any(_1aa109a54_buildTypeAliasDecl(_self_, _171538_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1bc860110:;
			{
				return _1ac9b64a7_buildNodeEnumDecl(_self_, _171538_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1bc860176:;
			{
				return jule::Any(_1ac9b6e7a_buildStructDecl(_self_, _171538_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1bc8601dc:;
			{
				return jule::Any(_1ac9b78d7_buildTraitDecl(_self_, _171538_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1bc860253:;
			{
				return jule::Any(_1ac9b9873_buildImpl(_self_, (*(_171538_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1bc860b7c:;
			{
				return _1ac9b8d7d_buildBind(_self_, _171538_tokens);;
			}
		}
		else {
			_case_begin_1bc860099:;
			{
				_1aa107b0c_pushErr(_self_.ptr(), _171613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc860044:;
	};
}



inline void _1ac9b9e6c_applyFnMeta(_1aa10715b_parser* _self_, jule::Ptr<_1ab0e9108_FnDecl>* _174835_f) {
	(*((*(_174835_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1ac9ba225_applyMeta(_1aa10715b_parser* _self_, _1ab0d6447_Node* _175333_node) {
	{
		auto &_match_expr{ (*(_175333_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bcde8c70:;
			{
				jule::Ptr<_1ab0ea1d6_VarDecl> _175617_v = (*(_175333_node))._field_Data.cast_ptr<_1ab0ea1d6_VarDecl>(&__jule_any_type16);;
				if ((_175617_v == nullptr)) {
					return;;
				};
				(*(_175617_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bcde8cd6:;
			{
				jule::Ptr<_1ab0e9108_FnDecl> _176317_f = (*(_175333_node))._field_Data.cast_ptr<_1ab0e9108_FnDecl>(&__jule_any_type14);;
				if ((_176317_f == nullptr)) {
					return;;
				};
				_1ac9b9e6c_applyFnMeta(_self_, &(_176317_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bcde8d5d:;
			{
				jule::Ptr<_1ab102e7a_StructDecl> _176917_sd = (*(_175333_node))._field_Data.cast_ptr<_1ab102e7a_StructDecl>(&__jule_any_type13);;
				if ((_176917_sd == nullptr)) {
					return;;
				};
				(*(_176917_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1bcde8c1a:;
	};
}



inline void _1ac9ba4cd_pushUseDecl(jule::Ptr<_1aa10715b_parser> _self_, jule::Ptr<_1ab1002b8_UseDecl>* _177836_decl) {
	{ jule::Slice<jule::Ptr<_1ab1002b8_UseDecl>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_UseDecls; __jule_push_dest.push((*(_177836_decl))); };
	if (((*((*(_self_))._field_ast))._field_Nodes.len() > 0LL)) {
		_1aa107b0c_pushErr(_self_.ptr(), (*((*(_177836_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1aa107e70_pushSuggestion(_self_.ptr(), jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ac9ba81e_pushMetaNodes(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _178638_tokens) {
	{
		auto &_match_expr{ (*((*(_178638_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1bcdeeb44:;
			{
				;
				jule::Ptr<_1ab1002b8_UseDecl> _179017_decl = _1ac9b4a5a_buildUseDecl(_self_.ptr(), (*(_178638_tokens)), false);;
				_1ac9ba4cd_pushUseDecl(_self_, &(_179017_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1bcdeebbb:;
			{
				if ((((*(_178638_tokens)).len() > 1LL) && ((*((*(_178638_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1ab1002b8_UseDecl> _179521_decl = _1ac9b8a3c_buildBindUse(_self_, (*(_178638_tokens)));;
					_1ac9ba4cd_pushUseDecl(_self_, &(_179521_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1bcdeec43:;
			{
				_1aa1088aa_pushDirective(_self_.ptr(), _1aa108602_buildDirective(_self_.ptr(), (*(_178638_tokens))));
				return true;;
			}
		}
		_match_end_1bcdeea23:;
	};
	return false;;
}



inline _1ab0d6447_Node _1ac9bab60_parseNode(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _180634_st) {
	_1ab0d6447_Node _180713_node = _1ab0d6447_Node{._field_Token=(*(_180634_st))[0LL], };;
	if (_1ac9ba81e_pushMetaNodes(_self_, _180634_st)) {
		return _180713_node;;
	};
	jule::Any _181513_data = _1ac9b9bb4_buildNodeData(_self_, _180634_st);;
	if ((_181513_data == nullptr)) {
		return _180713_node;;
	};
	_180713_node._field_Data=_181513_data;
	_1ac9ba225_applyMeta(_self_.ptr(), &(_180713_node));
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_1aa107b0c_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*(_self_))._field_directives=nullptr;
	return _180713_node;;
}



inline void _1ac9bae18_appendNode(jule::Ptr<_1aa10715b_parser> _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _183035_st) {
	if (((*(_183035_st)).len() == 0LL)) {
		return;;
	};
	_1ab0d6447_Node _183413_node = _1ac9bab60_parseNode(_self_, _183035_st);;
	if (((_183413_node._field_Data == nullptr) || _1aa1076de_stopped(_self_.ptr()))) {
		return;;
	};
	{ jule::Slice<_1ab0d6447_Node> &__jule_push_dest = (*((*(_self_))._field_ast))._field_Nodes; __jule_push_dest.push(_183413_node); };
}



inline void _1ac9bb3e1_removeRange(_1aa10715b_parser* _self_, jule::I64 _184130_i, jule::U64 _184138_id, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _184152_tokens, jule::Slice<jule::I64>* _184175_ranges) {
	jule::U64 _18429_close = _1aa106347_getCloseOfBrace(_184138_id);;
	for (; (_184130_i >= 0LL); (_184130_i)--) {
		{
			jule::Ptr<_1ab0c1e7c_Token> _184413_tok = (*(_184152_tokens))[(*(_184175_ranges))[_184130_i]];;
			if (((*(_184413_tok))._field_Id != _18429_close)) {
				goto _iter_next_1bce09148;
			};
			(*(_184175_ranges))=jule::append((*(_184175_ranges)).slice(0LL, _184130_i),(*(_184175_ranges)).slice((_184130_i + 1LL)));
			goto _iter_end_1bce09148;
		}
	_iter_next_1bce09148:;
	}
	_iter_end_1bce09148:;;
}



inline void _1ac9bb80e_pushWrongOrderCloseErr(_1aa10715b_parser* _self_, jule::Ptr<_1ab0c1e7c_Token>* _185342_t, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _185354_tokens, jule::Slice<jule::I64>* _185373_ranges) {
	{
		auto &_match_expr{ (*((*(_185354_tokens))[(*(_185373_ranges))[((*(_185373_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1bce0b612:;
			{
				_1aa107b0c_pushErr(_self_, (*(_185342_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1bce0b689:;
			{
				_1aa107b0c_pushErr(_self_, (*(_185342_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1bce0b711:;
			{
				_1aa107b0c_pushErr(_self_, (*(_185342_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bce0b4e1:;
	};
}



inline void _1ac9bbcd7_pushRangeClose(_1aa10715b_parser* _self_, jule::Ptr<_1ab0c1e7c_Token> _186433_t, jule::U64 _186444_left, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _186460_tokens, jule::Slice<jule::I64>* _186483_ranges) {
	jule::I64 _18659_n = (*(_186483_ranges)).len();;
	if ((_18659_n == 0LL)) {
		{
			auto &_match_expr{ (*(_186433_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1bce0e0a4:;
				{
					_1aa107b0c_pushErr(_self_, _186433_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1bce0e12b:;
				{
					_1aa107b0c_pushErr(_self_, _186433_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1bce0e1a3:;
				{
					_1aa107b0c_pushErr(_self_, _186433_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1bce0dec7:;
		};
		return;;
	} else if (((*((*(_186460_tokens))[(*(_186483_ranges))[(_18659_n - 1LL)]]))._field_Id != _186444_left)) {
		_1ac9bb80e_pushWrongOrderCloseErr(_self_, &(_186433_t), _186460_tokens, _186483_ranges);
	};
	_1ac9bb3e1_removeRange(_self_, static_cast<jule::I64>((_18659_n - 1LL)), (*(_186433_t))._field_Id, _186460_tokens, _186483_ranges);
}



inline void _1ac9bc090_checkRanges(_1aa10715b_parser* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _188231_tokens) {
	jule::Slice<jule::I64> _188317_ranges = nullptr;;
	{
		auto expr = _188231_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bce121ea:;
		if (it != expr_end) {
			jule::I64 _188513_i = it - expr->begin();
			jule::Ptr<_1ab0c1e7c_Token> *_188516_token = it;
			{
				{
					auto &_match_expr{ (*((*(_188516_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1bce1300e:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _188317_ranges; __jule_push_dest.push(_188513_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bce13086:;
						{
							_1ac9bbcd7_pushRangeClose(_self_, (*(_188516_token)), static_cast<jule::U64>(74LLU), _188231_tokens, &(_188317_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1bce1310d:;
						{
							_1ac9bbcd7_pushRangeClose(_self_, (*(_188516_token)), static_cast<jule::U64>(72LLU), _188231_tokens, &(_188317_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1bce13185:;
						{
							_1ac9bbcd7_pushRangeClose(_self_, (*(_188516_token)), static_cast<jule::U64>(76LLU), _188231_tokens, &(_188317_ranges));
						}
					}
					_match_end_1bce12e21:;
				};
			}
			_iter_next_1bce121ea:;
			++it;
			_188513_i++;
			goto _iter_begin_1bce121ea;
		}
		_iter_end_1bce121ea:;
	};
	{
		auto expr = &(_188317_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bce12184:;
		if (it != expr_end) {
			jule::I64 _190016_i = *it;
			{
				jule::Ptr<_1ab0c1e7c_Token> _190113_token = (*(_188231_tokens))[_190016_i];;
				{
					auto &_match_expr{ (*(_190113_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bce15a28:;
						{
							_1aa107b0c_pushErr(_self_, _190113_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1bce15aa0:;
						{
							_1aa107b0c_pushErr(_self_, _190113_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1bce15b27:;
						{
							_1aa107b0c_pushErr(_self_, _190113_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1bce159a1:;
				};
			}
			_iter_next_1bce12184:;
			++it;
			goto _iter_begin_1bce12184;
		}
		_iter_end_1bce12184:;
	};
}



inline void _1ac9bc348_parse(jule::Ptr<_1aa10715b_parser> _self_, jule::Ptr<_1ab0c7746_File>* _191330_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1ab0d55ab_Ast>(_1ab0d55ab_Ast{._field_File=(*(_191330_f)), });
	(*(_self_))._field_ep=jule::new_ptr<_1aa0e6788_exprBuilder>(_1aa0e6788_exprBuilder{._field_p=_self_});
	_1ac9bc090_checkRanges(_self_.ptr(), &((*((*(_191330_f))))._field_Tokens));
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1aa0d87be_stmt>> _192613_stmts = _1aa0d8b76_splitStmts(&((*((*(_191330_f))))._field_Tokens));;
	jule::I64 _192913_i = 0LL;;
	for (; (_192913_i < _192613_stmts.len()); (_192913_i)++) {
		{
			jule::Ptr<_1aa0d87be_stmt> _193117_stmt = _192613_stmts[_192913_i];;
			if (((*(_193117_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*(_193117_stmt))._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1bce1917a;
			};
			if ((!(_1d7b83a34_IsTopDirective((*((*(_193117_stmt))._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1bce1917a;
			};
			{ jule::Slice<jule::Ptr<_1ab0d6865_Directive>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_TopDirectives; __jule_push_dest.push(_1aa108602_buildDirective(_self_.ptr(), (*(_193117_stmt))._field_tokens)); };
		}
	_iter_next_1bce1917a:;
	}
	_iter_end_1bce1917a:;;
	(*(_self_))._field_errors=nullptr;
	for (; (_192913_i < _192613_stmts.len()); (_192913_i)++) {
		{
			jule::Ptr<_1aa0d87be_stmt> _194817_stmt = _192613_stmts[_192913_i];;
			_1ac9bae18_appendNode(_self_, &((*(_194817_stmt))._field_tokens));
			if (_1aa1076de_stopped(_self_.ptr())) {
				goto _iter_end_1bce1b974;
			};
		}
	_iter_next_1bce1b974:;
	}
	_iter_end_1bce1b974:;;
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_1aa107b0c_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1aa10715b_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1ac9bdb85_pushErr(_1ac9bd5e1_typeBuilder* _self_, jule::Ptr<_1ab0c1e7c_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1aa107b0c_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1ac9bdee8_pushSuggestion(_1ac9bd5e1_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1aa107e70_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9be27e_buildNamespace(_1ac9bd5e1_typeBuilder* _self_) {
	jule::Ptr<_1ab0d7448_TypeDecl> _5513_t = jule::new_ptr<_1ab0d7448_TypeDecl>(_1ab0d7448_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1ab0d81e6_NamespaceTypeDecl> _5913_nst = jule::new_ptr<_1ab0d81e6_NamespaceTypeDecl>();;
	jule::I64 _6013_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1ab0c1e7c_Token> _6217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6013_n & 1LL) == 0LL)) {
				if (((*(_6217_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_1ac9bdb85_pushErr(_self_, _6217_token, jule::Str::lit("invalid syntax", 14));
					_1ac9bdee8_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> &__jule_push_dest = (*(_5913_nst))._field_Idents; __jule_push_dest.push(_6217_token); };
			} else if (((*(_6217_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1bce22c11;
			};
			(_6013_n)++;
		}
	_iter_next_1bce22c11:;
	}
	_iter_end_1bce22c11:;;
	(*(_5913_nst))._field_Idents=(*(_5913_nst))._field_Idents.slice(0LL, ((*(_5913_nst))._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	(*(_5913_nst))._field_Kind=_1ac9bea32_buildIdent(_self_);
	(*(_5513_t))._field_Kind=jule::Any(_5913_nst, &__jule_any_type90);
	return _5513_t;;
}



inline jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> _1ac9be515_buildGenerics(_1ac9bd5e1_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1ab0c1e7c_Token> _889_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_889_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _9313_parts = _1ac9be79b_identGenerics(_self_);;
	if ((_9313_parts.len() == 0LL)) {
		_1ac9bdb85_pushErr(_self_, _889_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> _9913_types = jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>>::alloc(0LL, _9313_parts.len());;
	{
		auto expr = &(_9313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bce29b4c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _10021_part = *it;
			{
				jule::I64 _10117_j = 0LL;;
				jule::Ptr<_1ab0d7448_TypeDecl> _10217_t;;
				({
					__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType((*(_self_))._field_p, &(_10021_part), (&(_10117_j)), true);
					_10217_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10117_j < _10021_part.len())) {
					_1ac9bdb85_pushErr(_self_, _10021_part[_10117_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>> &__jule_push_dest = _9913_types; __jule_push_dest.push(_10217_t); };
			}
			_iter_next_1bce29b4c:;
			++it;
			goto _iter_begin_1bce29b4c;
		}
		_iter_end_1bce29b4c:;
	};
	return _9913_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _1ac9be79b_identGenerics(_1ac9bd5e1_typeBuilder* _self_) {
	jule::I64 _1129_first = (*((*(_self_))._field_i));;
	jule::I64 _11313_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1ab0c1e7c_Token> _11513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_11513_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1bce2cbd8:;
					{
						(_11313_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1bce2cc60:;
					{
						(_11313_rangeN)--;
					}
				}
				_match_end_1bce2cb72:;
			};
			if ((_11313_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1bce2bd6e;
			};
		}
	_iter_next_1bce2bd6e:;
	}
	_iter_end_1bce2bd6e:;;
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _12713_tokens = (*(_self_))._field_tokens.slice((_1129_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _12813_parts;;
	jule::Slice<_1d7b81cb8_Log> _12820_errors;;
	({
		__jule_tuple_ssx_1ab0c1e7c_Token__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = _1aa10607d_parts(&(_12713_tokens), static_cast<jule::U64>(5LLU), true);
		_12813_parts = __jule_assign_result.__jule_result_arg0;
		_12820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		((*((*(_self_))._field_p))._field_errors).append(_12820_errors);;
	};
	return _12813_parts;;
}



inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9bea32_buildIdent(_1ac9bd5e1_typeBuilder* _self_) {
	jule::Bool _13613_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13613_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1ac9be27e_buildNamespace(_self_);;
	};
	jule::Ptr<_1ab0c1e7c_Token> _14013_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1ab0d7a53_IdentTypeDecl> _14113_it = jule::new_ptr<_1ab0d7a53_IdentTypeDecl>(_1ab0d7a53_IdentTypeDecl{._field_Token=_14013_token, ._field_Ident=(*(_14013_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1ab0d7448_TypeDecl> _14713_itd = jule::new_ptr<_1ab0d7448_TypeDecl>(_1ab0d7448_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_14113_it, &__jule_any_type20)});;
	if (((!(_13613_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_14113_it))._field_Generics=_1ac9be515_buildGenerics(_self_);
		return _14713_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1ac9bdb85_pushErr(_self_, _14013_token, jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ac9bdb85_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	jule::Ptr<_1ab0d7d50_SubIdentTypeDecl> _16413_sit = jule::new_ptr<_1ab0d7d50_SubIdentTypeDecl>();;
	{ jule::Slice<jule::Ptr<_1ab0d7a53_IdentTypeDecl>> &__jule_push_dest = (*(_16413_sit))._field_Idents; __jule_push_dest.push(_14113_it); };
	jule::Ptr<_1ab0d7448_TypeDecl> _16613_ident = _1ac9bea32_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_16613_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1bce378c4:;
			{
				{ jule::Slice<jule::Ptr<_1ab0d7a53_IdentTypeDecl>> &__jule_push_dest = (*(_16413_sit))._field_Idents; __jule_push_dest.push((*(_16613_ident))._field_Kind.cast_ptr<_1ab0d7a53_IdentTypeDecl>(&__jule_any_type20)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1bce3793a:;
			{
				((*(_16413_sit))._field_Idents).append((*((*(_16613_ident))._field_Kind.cast_ptr<_1ab0d7d50_SubIdentTypeDecl>(&__jule_any_type86)))._field_Idents);;
			}
		}
		_match_end_1bce3786e:;
	};
	return jule::new_ptr<_1ab0d7448_TypeDecl>(_1ab0d7448_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_16413_sit, &__jule_any_type86)});;
}



inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9becb8_buildCppLink(_1ac9bd5e1_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1ac9bdb85_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1ab0d7448_TypeDecl> _18513_t = _1ac9bea32_buildIdent(_self_);;
	(*((*(_18513_t))._field_Kind.cast_ptr<_1ab0d7a53_IdentTypeDecl>(&__jule_any_type20)))._field_Binded=true;
	return _18513_t;;
}



inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9c004e_buildFn(_1ac9bd5e1_typeBuilder* _self_) {
	jule::Ptr<_1ab0c1e7c_Token> _19113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1ab0e9108_FnDecl> _19213_f = _1ac9b2b79_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19213_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab0e946b_IsAnon(_19213_f.ptr())))) {
		_1ac9bdb85_pushErr(_self_, (*(_19213_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_1ab0d7448_TypeDecl>(_1ab0d7448_TypeDecl{._field_Token=_19113_token, ._field_Kind=jule::Any(_19213_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9c02d5_buildPtr(_1ac9bd5e1_typeBuilder* _self_) {
	jule::Ptr<_1ab0c1e7c_Token> _20613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ac9bdb85_pushErr(_self_, _20613_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1ab0d7448_TypeDecl>(_1ab0d7448_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1ab0d8e72_PtrTypeDecl>(_1ab0d8e72_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type71)});;
	};
	jule::Ptr<_1ab0d7448_TypeDecl> _22313_elem = _1ac9c133b_step(_self_);;
	if ((_22313_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab0d7448_TypeDecl>(_1ab0d7448_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1ab0d8e72_PtrTypeDecl>(_1ab0d8e72_PtrTypeDecl{._field_Elem=_22313_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9c056b_buildSptr(_1ac9bd5e1_typeBuilder* _self_) {
	jule::Ptr<_1ab0c1e7c_Token> _23713_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ac9bdb85_pushErr(_self_, _23713_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1ab0d7448_TypeDecl> _24413_elem = _1ac9c133b_step(_self_);;
	if ((_24413_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab0d7448_TypeDecl>(_1ab0d7448_TypeDecl{._field_Token=_23713_token, ._field_Kind=jule::Any(jule::new_ptr<_1ab0d84e3_SptrTypeDecl>(_1ab0d84e3_SptrTypeDecl{._field_Elem=_24413_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9c0802_buildSlc(_1ac9bd5e1_typeBuilder* _self_) {
	jule::Ptr<_1ab0c1e7c_Token> _25813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1ab0d7448_TypeDecl> _26013_elem = _1ac9c133b_step(_self_);;
	if ((_26013_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab0d7448_TypeDecl>(_1ab0d7448_TypeDecl{._field_Token=_25813_token, ._field_Kind=jule::Any(jule::new_ptr<_1ab0d8878_SlcTypeDecl>(_1ab0d8878_SlcTypeDecl{._field_Elem=_26013_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9c0a88_buildArr(_1ac9bd5e1_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _27313_exprTokens = _1aa10580d_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ac9bdb85_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1ab0d7448_TypeDecl> _27913_elem = _1ac9c133b_step(_self_);;
	if ((_27913_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab0d9714_ArrTypeDecl> _28413_arrt = jule::new_ptr<_1ab0d9714_ArrTypeDecl>(_1ab0d9714_ArrTypeDecl{._field_Elem=_27913_elem, });;
	jule::Ptr<_1ab0c1e7c_Token> _28813_token = _27313_exprTokens[0LL];;
	if (((_27313_exprTokens.len() == 1LL) && ((*(_28813_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_28413_arrt))._field_Size=_1aa1082b1_buildExpr((*(_self_))._field_p, &(_27313_exprTokens));
	};
	return jule::new_ptr<_1ab0d7448_TypeDecl>(_1ab0d7448_TypeDecl{._field_Token=_28813_token, ._field_Kind=jule::Any(_28413_arrt, &__jule_any_type69)});;
}



inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9c0d1e_buildMap(_1ac9bd5e1_typeBuilder* _self_) {
	jule::Ptr<_1ab0c1e7c_Token> _30213_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ac9bdb85_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _31013_keyTokens = _1aa10580d_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ac9bdb85_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_31013_keyTokens.len() == 0LL)) {
		_1ac9bdb85_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1ab0d9e62_MapTypeDecl> _31913_mapt = jule::new_ptr<_1ab0d9e62_MapTypeDecl>();;
	jule::I64 _32013_j = 0LL;;
	jule::Ptr<_1ab0d7448_TypeDecl> _32113_keyt;;
	jule::Bool _32123_ok = false;;
	({
		__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType((*(_self_))._field_p, &(_31013_keyTokens), (&(_32013_j)), (*(_self_))._field_err);
		_32113_keyt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	} else if ((_32013_j < _31013_keyTokens.len())) {
		_1ac9bdb85_pushErr(_self_, _31013_keyTokens[_32013_j], jule::Str::lit("invalid syntax", 14));
	};
	(*(_31913_mapt))._field_Key=_32113_keyt;
	jule::Ptr<_1ab0d7448_TypeDecl> _32913_valt;;
	({
		__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa109713_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32913_valt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	};
	(*(_31913_mapt))._field_Val=_32913_valt;
	return jule::new_ptr<_1ab0d7448_TypeDecl>(_1ab0d7448_TypeDecl{._field_Token=_30213_mapToken, ._field_Kind=jule::Any(_31913_mapt, &__jule_any_type73)});;
}



inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9c10a5_buildEnumerable(_1ac9bd5e1_typeBuilder* _self_) {
	jule::Ptr<_1ab0c1e7c_Token> _34113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1ac9bdb85_pushErr(_self_, _34113_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34113_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_34113_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1ac9c0802_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1ac9c0a88_buildArr(_self_);;
}



inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9c133b_step(_1ac9bd5e1_typeBuilder* _self_) {
	jule::Ptr<_1ab0c1e7c_Token> _3569_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3569_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1bce55bbc:;
			{
				return _1ac9bea32_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1bce55c33:;
			{
				return _1ac9becb8_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1bce551b6:;
			{
				return _1ac9c004e_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bce5522c:;
			{
				return _1ac9c02d5_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bce55293:;
			{
				return _1ac9c056b_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1bce55309:;
			{
				return jule::new_ptr<_1ab0d7448_TypeDecl>(_1ab0d7448_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1ab0d84e3_SptrTypeDecl>(_1ab0d84e3_SptrTypeDecl{._field_Elem=_1ac9c056b_buildSptr(_self_)}), &__jule_any_type72)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1bce55cbb:;
			{
				return _1ac9c10a5_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1bce55d32:;
			{
				return _1ac9c0d1e_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1bce55150:;
			{
				((*((*(_self_))._field_i)))++;
				_1ac9bdb85_pushErr(_self_, _3569_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1bce550ea:;
	};
}



inline __jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool _1ac9c15c2_build(_1ac9bd5e1_typeBuilder* _self_) {
	__jule_tuple_x_1ab0d7448_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ab0d7448_TypeDecl> _38813_root = _1ac9c133b_step(_self_);;
	if ((_38813_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1ac9bcd2c_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38813_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac9bd5e1_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab4645a5_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1ab4660ac_pushErr(_1ab465a5c_directiveEval* _self_, jule::Ptr<_1ab0c1e7c_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_1d7b81cb8_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1d7b81cb8_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2126_t))._field_Row, ._field_Column=(*(_2126_t))._field_Column, ._field_Path=(*((*(_2126_t))._field_File))._field_Path, ._field_Text=_1d7b8222a_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _1ab4664a8_splitOperans(_1ab465a5c_directiveEval* _self_, jule::U64 _3331_op, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _3413_parts = jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3513_i = 0LL;;
	jule::I64 _3613_rangeN = 0LL;;
	jule::I64 _3713_last = 0LL;;
	for (; (_3513_i < ((*(_3349_tokens)).len() - 1LL)); (_3513_i)++) {
		{
			jule::Ptr<_1ab0c1e7c_Token> _3913_b = (*(_3349_tokens))[_3513_i];;
			{
				auto &_match_expr{ (*(_3913_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1bce79570:;
					{
						(_3613_rangeN)++;
						goto _iter_next_1bce7898c;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1bce795e7:;
					{
						(_3613_rangeN)--;
					}
				}
				_match_end_1bce79509:;
			};
			if (((_3613_rangeN > 0LL) || ((*(_3913_b))._field_Id != _3331_op))) {
				goto _iter_next_1bce7898c;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last, _3513_i)); };
			_3713_last=static_cast<jule::I64>((_3513_i + 1LL));
		}
	_iter_next_1bce7898c:;
	}
	_iter_end_1bce7898c:;;
	if ((_3713_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last)); };
	} else {
		_1ab4660ac_pushErr(_self_, (*(_3349_tokens))[(_3713_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3413_parts;;
}



inline jule::Bool _1ab4667e9_evalDirectiveIdent(_1ab465a5c_directiveEval* _self_, jule::Str _6433_ident) {
	if ((_6433_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bce7c067:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_1bce7c067:;
			++it;
			goto _iter_begin_1bce7c067;
		}
		_iter_end_1bce7c067:;
	};
	return false;;
}



inline jule::Bool _1ab466b3a_evalDirectivePart(_1ab465a5c_directiveEval* _self_, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _7840_part) {
	jule::Bool _799_logicalNot = ((*(_7840_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_799_logicalNot) {
		(_7840_part).mut_slice(1LL);;
	};
	if ((_7840_part.len() > 1LL)) {
		_1ab4660ac_pushErr(_self_, _7840_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8913_result = _1ab4667e9_evalDirectiveIdent(_self_, (*(_7840_part[0LL]))._field_Kind);;
	if (_799_logicalNot) {
		_8913_result=(!(_8913_result));
	};
	return _8913_result;;
}



inline jule::Bool _1ab466dc1_eval(_1ab465a5c_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1ab4660ac_pushErr(_self_, (*((*(_self_))._field_d))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10213_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _10413_logicalOrParts = _1ab4664a8_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*((*(_self_))._field_d))._field_Args));;
	if ((_10413_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10413_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bce8219e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _10921_part = *it;
			{
				jule::Bool _11017_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _11117_logicalAndParts = _1ab4664a8_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10921_part));;
				if ((_11117_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11117_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bce835ce:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_1ab0c1e7c_Token> _11717_first = _11625_andPart[0LL];;
							if (((*(_11717_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1ab0c1e7c_Token> _11921_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if (((*(_11921_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1ab4660ac_pushErr(_self_, _11717_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11625_andPart).mut_slice(1LL, (_11625_andPart.len() - 1LL));;
							};
							_11017_and=(_11017_and && _1ab466b3a_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_1bce835ce:;
						++it;
						goto _iter_begin_1bce835ce;
					}
					_iter_end_1bce835ce:;
				};
				_10213_result=(_10213_result || _11017_and);
			}
			_iter_next_1bce8219e:;
			++it;
			goto _iter_begin_1bce8219e;
		}
		_iter_end_1bce8219e:;
	};
	return _10213_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab465a5c_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac9c2727_JuleImporter> static__1ac9c2b23_New(_1ab4645a5_CompileInfo _5819_info) {
	jule::Ptr<_1ac9c2727_JuleImporter> _5913_imp = jule::new_ptr<_1ac9c2727_JuleImporter>(_1ac9c2727_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1d7c936d2_PathStdlib}), });;
	_1ab464e35_initVars(&((*(_5913_imp))._field_vars), &(_5819_info));
	return _5913_imp;;
}



inline jule::Slice<jule::Ptr<_1ab184bdd_ImportInfo>> _1ac9c2da9_AllPackages(_1ac9c2727_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1ac9c32e9_SetModPath(_1ac9c2727_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1ac9c3580_GetModPath(_1ac9c2727_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1ac9c38c1_ModById(_1ac9c2727_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1ab184bdd_ImportInfo> _1ac9c3c12_GetImport(_1ac9c2727_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bce89849:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _8821_p = *it;
			{
				if (((*(_8821_p))._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1bce89849:;
			++it;
			goto _iter_begin_1bce89849;
		}
		_iter_end_1bce89849:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1ab0d55ab_Ast__jule_tuple_s_1d7b81cb8_Log _1ac9c410d_ImportPackage(_1ac9c2727_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1ab0d55ab_Ast__jule_tuple_s_1d7b81cb8_Log __jule_func_result;
	jule::Slice<jule::Ptr<_202527127_DirEntry>> _9713_dirents = ({
		auto except = static__1d7ae328a_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_1d7b81cb8_Log>::make({_1ac9c223d_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_202527127_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10213_newMod = _1ab1a1b2d_FindModuleFileDeep(_9632_path);;
		if ((_10213_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10213_newMod;
			jule::Slice<_1d7b81cb8_Log> _10521_errs = _1ab1a1de7_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_10521_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10521_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1ab0d55ab_Ast>> _11213_asts = jule::Slice<jule::Ptr<_1ab0d55ab_Ast>>::alloc(0LL, _9713_dirents.len());;
	{
		auto expr = &(_9713_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bce8ac68:;
		if (it != expr_end) {
			jule::Ptr<_202527127_DirEntry> _11316_dirent = *it;
			{
				if ((_20252b34b_IsDir((*(_11316_dirent))._field_Stat.ptr()) || (!(_1d7abe233_HasSuffix((*(_11316_dirent))._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1bce8ac68;
				};
				jule::Str _11913__path = _1d7ae0133_Join(jule::Slice<jule::Str>::make({_9632_path,(*(_11316_dirent))._field_Name}));;
				jule::Ptr<_1ab0c7746_File> _12017_file = _1ab0c8add_NewFileSet(_11913__path);;
				_1ab0c7b31_Fill(_12017_file.ptr(), _1ac9c1e63_readBuff((*(_12017_file))._field_Path));
				jule::Slice<_1d7b81cb8_Log> _12217_errors = _1ab0d5204_Lex(_12017_file, static_cast<jule::I64>(0LL));;
				if ((_12217_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12217_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1ac8b6451_FileInfo> _12717_finfo = _1ac90c8e8_ParseFile(_12017_file);;
				if (((*(_12717_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*(_12717_finfo))._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1ab46374c_isPassFileAnnotation((*(_11316_dirent))._field_Name)))) {
					goto _iter_next_1bce8ac68;
				};
				jule::Bool _13713_r = false;;
				jule::Slice<_1d7b81cb8_Log> _13720_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = _1ac9c47e5_isPassBuildDirectives(_self_, &((*(_12717_finfo))._field_Ast));
					_13713_r = __jule_assign_result.__jule_result_arg0;
					_13720_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13720_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13720_logs;
					return __jule_func_result;;
				};
				if ((!(_13713_r))) {
					goto _iter_next_1bce8ac68;
				};
				{ jule::Slice<jule::Ptr<_1ab0d55ab_Ast>> &__jule_push_dest = _11213_asts; __jule_push_dest.push((*(_12717_finfo))._field_Ast); };
			}
			_iter_next_1bce8ac68:;
			++it;
			goto _iter_begin_1bce8ac68;
		}
		_iter_end_1bce8ac68:;
	};
	__jule_func_result.__jule_result_arg0 = _11213_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ac9c43b6_Imported(_1ac9c2727_JuleImporter* _self_, jule::Ptr<_1ab184bdd_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bce8d650:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _15516_p = *it;
			{
				if ((((*(_15516_p))._field_Binded == (*(_15331_imp))._field_Binded) && ((*(_15516_p))._field_LinkPath == (*(_15331_imp))._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1bce8d650:;
			++it;
			goto _iter_begin_1bce8d650;
		}
		_iter_end_1bce8d650:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bce9558b:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						(*(_15331_imp))._field_ModId=_16217_i;
						goto _julec_label_1bce972c4;
					};
				}
				_iter_next_1bce9558b:;
				++it;
				_16217_i++;
				goto _iter_begin_1bce9558b;
			}
			_iter_end_1bce9558b:;
		};
		(*(_15331_imp))._field_ModId=static_cast<jule::I64>((*(_self_))._field_mods.len());
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1bce972c4:;
	};
	{ jule::Slice<jule::Ptr<_1ab184bdd_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1d7b81cb8_Log _1ac9c47e5_isPassBuildDirectives(_1ac9c2727_JuleImporter* _self_, jule::Ptr<_1ab0d55ab_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_1d7b81cb8_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17945_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bce98704:;
		if (it != expr_end) {
			jule::Ptr<_1ab0d6865_Directive> _18021_td = *it;
			{
				if ((!(*((*(_18021_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1bce98704;
				};
				_1ab465a5c_directiveEval _18417_de = _1ab465a5c_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18813_result = _1ab466dc1_eval(&_18417_de);;
				if ((_18417_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18417_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18813_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1bce98704:;
			++it;
			goto _iter_begin_1bce98704;
		}
		_iter_end_1bce98704:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac9c2727_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac9c793b_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bceb9390_isCommonOrdered(jule::Slice<jule::Ptr<_1ab10803a_Struct>> _1834_s, jule::Ptr<_1ab10803a_Struct> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bceba3d5:;
		if (it != expr_end) {
			jule::Ptr<_1ab10803a_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bcebad31:;
					if (it != expr_end) {
						jule::Ptr<_1ab10803a_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1bcebad31:;
						++it;
						goto _iter_begin_1bcebad31;
					}
					_iter_end_1bcebad31:;
				};
			}
			_iter_next_1bceba3d5:;
			++it;
			goto _iter_begin_1bceba3d5;
		}
		_iter_end_1bceba3d5:;
	};
	return true;;
}

inline jule::Bool _1bcebddab_isCommonOrdered(jule::Slice<jule::Ptr<_1ab1c7a66_Var>> _1834_s, jule::Ptr<_1ab1c7a66_Var> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcebedac:;
		if (it != expr_end) {
			jule::Ptr<_1ab1c7a66_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bcec0808:;
					if (it != expr_end) {
						jule::Ptr<_1ab1c7a66_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1bcec0808:;
						++it;
						goto _iter_begin_1bcec0808;
					}
					_iter_end_1bcec0808:;
				};
			}
			_iter_next_1bcebedac:;
			++it;
			goto _iter_begin_1bcebedac;
		}
		_iter_end_1bcebedac:;
	};
	return true;;
}



inline void _1bceb5ea2_orderCommon(jule::Slice<jule::Ptr<_1ab10803a_Struct>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bceb6c83:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1bceb9390_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1bceb7c0c:;
				}
				_iter_end_1bceb7c0c:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1bceb6c83;
				};
				(_3213_n)--;
			}
			_iter_next_1bceb6c83:;
			++it;
			goto _iter_begin_1bceb6c83;
		}
		_iter_end_1bceb6c83:;
	};
}

inline void _1bceb9c31_orderCommon(jule::Slice<jule::Ptr<_1ab1c7a66_Var>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcebbcdd:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1bcebddab_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1bcebc728:;
				}
				_iter_end_1bcebc728:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1bcebbcdd;
				};
				(_3213_n)--;
			}
			_iter_next_1bcebbcdd:;
			++it;
			goto _iter_begin_1bcebbcdd;
		}
		_iter_end_1bcebbcdd:;
	};
}



inline void static__1ac9c8596_orderStructures(jule::Slice<jule::Ptr<_1ab10803a_Struct>>* _5136_structs) {
	_1bceb5ea2_orderCommon(_5136_structs);
}



inline void static__1ac9c87c7_orderVars(jule::Slice<jule::Ptr<_1ab1c7a66_Var>>* _5730_vars) {
	_1bceb9c31_orderCommon(_5730_vars);
}





std::ostream &operator<<(std::ostream &_Stream, _1ac9c7ba0_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1acaedd81_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1acb387e4_optimizeChild(jule::Ptr<_1acb3833d_scopeDeadCode> _self_, jule::Ptr<_1ab1637b0_Scope>* _3938_s) {
	jule::Ptr<_1acb3833d_scopeDeadCode> _4013_sdc = jule::new_ptr<_1acb3833d_scopeDeadCode>(_1acb3833d_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*((*(_3938_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_1acb3b20e_optimizeStmts(_4013_sdc);
	};
}



inline void _1acb38a9c_optimizeBodyChildExceptional(jule::Ptr<_1acb3833d_scopeDeadCode> _self_, jule::Ptr<_1ab1637b0_Scope>* _5053_s) {
	jule::Ptr<_1acb3833d_scopeDeadCode> _5113_sdc = jule::new_ptr<_1acb3833d_scopeDeadCode>(_1acb3833d_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*((*(_5053_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, ._field_except=true});;
	{
		_1acb3b20e_optimizeStmts(_5113_sdc);
	};
}



inline void _1acb38d55_optimizeBodyChild(jule::Ptr<_1acb3833d_scopeDeadCode> _self_, jule::Ptr<_1ab1637b0_Scope>* _6142_s) {
	jule::Ptr<_1acb3833d_scopeDeadCode> _6213_sdc = jule::new_ptr<_1acb3833d_scopeDeadCode>(_1acb3833d_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*((*(_6142_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_1acb3b20e_optimizeStmts(_6213_sdc);
	};
}



inline void _1acb3910d_optimizeExprModel(jule::Ptr<_1acb3833d_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1acb3c595_exprDeadCode _729_edc = static__1acb3cbd3_new(&(_self_));;
	_1acb43b0c_optimize(&_729_edc, _7142_model);
}



inline void _1acb3930b_eliminateFollowed(_1acb3833d_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1acb3833d_scopeDeadCode> _8313_parent = (*(_self_))._field_parent;;
	while ((_8313_parent != nullptr)) {
		{
			{
				(*((*(_8313_parent))._field_stmts))=(*((*(_8313_parent))._field_stmts)).slice(0LL, ((*(_8313_parent))._field_i + 1LL));
			};
			_8313_parent=(*(_8313_parent))._field_parent;
		}
	_iter_next_1bd03bdc4:;
	}
	_iter_end_1bd03bdc4:;;
}



inline void _1acb395b4_pushGoto(jule::Ptr<_1acb3833d_scopeDeadCode> _self_, jule::Ptr<_1ab16652c_GotoSt> _9232_gt) {
	jule::I64 _9313_i = 0LL;;
	for (; (_9313_i < (*((*(_self_))._field_labels)).len()); (_9313_i)++) {
		{
			if (((*(_9232_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_9313_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1bd040119:;
	}
	_iter_end_1bd040119:;;
	{ jule::Slice<jule::Ptr<_1ab16652c_GotoSt>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(_9232_gt); };
}



inline void _1acb3986c_pushLabel(jule::Ptr<_1acb3833d_scopeDeadCode> _self_, jule::Ptr<_1ab166153_Label> _10233_l) {
	jule::I64 _10313_i = 0LL;;
	while ((_10313_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_10233_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_10313_i]))._field_Ident)) {
				jule::copy(((*((*(_self_))._field_gotos)).slice(_10313_i)), ((*((*(_self_))._field_gotos)).slice((_10313_i + 1LL))));
				(*((*(_self_))._field_gotos))=(*((*(_self_))._field_gotos)).slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));
				goto _iter_next_1bd0421d7;
			};
			(_10313_i)++;
		}
	_iter_next_1bd0421d7:;
	}
	_iter_end_1bd0421d7:;;
	{ jule::Slice<jule::Ptr<_1ab166153_Label>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(_10233_l); };
}



inline void _1acb39b25_optimizeRangeIter(jule::Ptr<_1acb3833d_scopeDeadCode> _self_, jule::Ptr<_1ab1655e7_RangeIter> _11541_it) {
	_1acb3910d_optimizeExprModel(_self_, &((*((*(_11541_it))._field_Expr))._field_Model));
	_1acb38d55_optimizeBodyChild(_self_, &((*(_11541_it))._field_Scope));
}



inline void _1acb39dcd_optimizeWhileIter(jule::Ptr<_1acb3833d_scopeDeadCode> _self_, jule::Ptr<_1ab164b9b_WhileIter> _12041_it) {
	_1acb3910d_optimizeExprModel(_self_, &((*(_12041_it))._field_Expr));
	if (((*(_12041_it))._field_Next != nullptr)) {
		_1acb3b011_optimizeStmt(_self_, (*(_12041_it))._field_Next);
	};
	_1acb38d55_optimizeBodyChild(_self_, &((*(_12041_it))._field_Scope));
}



inline void _1acb3a186_optimizeInfIter(jule::Ptr<_1acb3833d_scopeDeadCode> _self_, jule::Ptr<_1ab1646e5_InfIter> _12839_it) {
	_1acb38d55_optimizeBodyChild(_self_, &((*(_12839_it))._field_Scope));
}



inline void _1acb3a43e_optimizeConditional(jule::Ptr<_1acb3833d_scopeDeadCode> _self_, jule::Ptr<_1ab1643e8_Conditional> _13243_c) {
	{
		auto expr = &((*(_13243_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd049068:;
		if (it != expr_end) {
			jule::Ptr<_1ab163bcd_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1acb3910d_optimizeExprModel(_self_, &((*(_13321_case))._field_Expr));
					_1acb38d55_optimizeBodyChild(_self_, &((*(_13321_case))._field_Scope));
				};
			}
			_iter_next_1bd049068:;
			++it;
			goto _iter_begin_1bd049068;
		}
		_iter_end_1bd049068:;
	};
	if (((*(_13243_c))._field_Default != nullptr)) {
		if (((*(_13243_c))._field_Elifs.len() == 0LL)) {
			_1acb387e4_optimizeChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		} else {
			_1acb38d55_optimizeBodyChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		};
	};
}



inline void _1acb3a6e7_optimizeMatch(jule::Ptr<_1acb3833d_scopeDeadCode> _self_, jule::Ptr<_1ab1678e6_Match> _15037_m) {
	{
		auto expr = &((*(_15037_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd052439:;
		if (it != expr_end) {
			jule::Ptr<_1ab16852e_Case> _15121_case = *it;
			{
				{
					auto expr = &((*(_15121_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd052d85:;
					if (it != expr_end) {
						jule::Ptr<_1ab22a228_Data> _15225_expr = *it;
						{
							_1acb3910d_optimizeExprModel(_self_, &((*(_15225_expr))._field_Model));
						}
						_iter_next_1bd052d85:;
						++it;
						goto _iter_begin_1bd052d85;
					}
					_iter_end_1bd052d85:;
				};
				_1acb38d55_optimizeBodyChild(_self_, &((*(_15121_case))._field_Scope));
			}
			_iter_next_1bd052439:;
			++it;
			goto _iter_begin_1bd052439;
		}
		_iter_end_1bd052439:;
	};
	if (((*(_15037_m))._field_Default != nullptr)) {
		if (((*(_15037_m))._field_Cases.len() == 0LL)) {
			_1acb387e4_optimizeChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		} else {
			_1acb38d55_optimizeBodyChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		};
	};
}



inline void _1acb3a9a0_optimizeAssign(jule::Ptr<_1acb3833d_scopeDeadCode> _self_, jule::Ptr<_1ab166dac_Assign> _16838_assign) {
	_1acb3910d_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_L))._field_Model));
	_1acb3910d_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_R))._field_Model));
}



inline void _1acb3ac58_optimizeMultiAssign(jule::Ptr<_1acb3833d_scopeDeadCode> _self_, jule::Ptr<_1ab167286_MultiAssign> _17343_assign) {
	{
		auto expr = &((*(_17343_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd057296:;
		if (it != expr_end) {
			jule::Ptr<_1ab22a228_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1acb3910d_optimizeExprModel(_self_, &((*(_17421_l))._field_Model));
				};
			}
			_iter_next_1bd057296:;
			++it;
			goto _iter_begin_1bd057296;
		}
		_iter_end_1bd057296:;
	};
	_1acb3910d_optimizeExprModel(_self_, &((*(_17343_assign))._field_R));
}



inline void _1acb3b011_optimizeStmt(jule::Ptr<_1acb3833d_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bd058e46:;
			{
				jule::Ptr<_1ab1637b0_Scope> _18517_scope = _18236_st.cast_ptr<_1ab1637b0_Scope>(&__jule_any_type22);;
				if ((*(_18517_scope))._field_Deferred) {
					_1acb3b53e_eliminateDeadCodeOfScope(_18517_scope);
				} else {
					_1acb387e4_optimizeChild(_self_, &(_18517_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bd058eac:;
			{
				_1acb39b25_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1ab1655e7_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1bd059023:;
			{
				_1acb39dcd_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1ab164b9b_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bd05909a:;
			{
				_1acb3a186_optimizeInfIter(_self_, _18236_st.cast_ptr<_1ab1646e5_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bd059122:;
			{
				_1acb3a43e_optimizeConditional(_self_, _18236_st.cast_ptr<_1ab1643e8_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bd059199:;
			{
				_1acb3a6e7_optimizeMatch(_self_, _18236_st.cast_ptr<_1ab1678e6_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1bd059221:;
			{
				_1acb3a9a0_optimizeAssign(_self_, _18236_st.cast_ptr<_1ab166dac_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1bd059298:;
			{
				_1acb3ac58_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1ab167286_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bd059320:;
			{
				jule::Ptr<_1ab22a228_Data> _20617_d = _18236_st.cast_ptr<_1ab22a228_Data>(&__jule_any_type24);;
				if ((*(_self_))._field_except) {
					goto _match_end_1bd058d03;
				};
				{
					auto &_match_expr{ (*(_20617_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type29) {
						_case_begin_1bd05e589:;
						{
							_1acb3930b_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1bd05ec2c:;
						{
							_1acb3910d_optimizeExprModel(_self_, &((*(_20617_d))._field_Model));
						}
					}
					_match_end_1bd05ebc7:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1bd059397:;
			{
				_1acb3930b_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bd05941e:;
			{
				_1acb395b4_pushGoto(_self_, _18236_st.cast_ptr<_1ab16652c_GotoSt>(&__jule_any_type42));
				_1acb3930b_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1bd059496:;
			{
				_1acb3986c_pushLabel(_self_, _18236_st.cast_ptr<_1ab166153_Label>(&__jule_any_type21));
			}
		}
		_match_end_1bd058d03:;
	};
}



inline void _1acb3b20e_optimizeStmts(jule::Ptr<_1acb3833d_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_stmts)).len()); ((*(_self_))._field_i)++) {
		{
			_1acb3b011_optimizeStmt(_self_, (*((*(_self_))._field_stmts))[(*(_self_))._field_i]);
		}
	_iter_next_1bd062416:;
	}
	_iter_end_1bd062416:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1acb3833d_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1acb3c595_exprDeadCode static__1acb3cbd3_new(jule::Ptr<_1acb3833d_scopeDeadCode>* _4824_s) {
	return _1acb3c595_exprDeadCode{._field_s=(*(_4824_s))};;
}



inline void _1acb3ce8b_binary(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab1101a7_BinopExprModel> _5425_m) {
	_1acb43b0c_optimize(_self_, &((*((*(_5425_m))._field_Left))._field_Model));
	_1acb43b0c_optimize(_self_, &((*((*(_5425_m))._field_Right))._field_Model));
}



inline void _1acb3d244_unary(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab110581_UnaryExprModel> _5924_m) {
	_1acb43b0c_optimize(_self_, &((*((*(_5924_m))._field_Expr))._field_Model));
}



inline void _1acb3d4ec_structureLit(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab110e55_StructLitExprModel> _6331_m) {
	{
		auto expr = &((*(_6331_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd065e97:;
		if (it != expr_end) {
			jule::Ptr<_1ab110aae_StructArgExprModel> _6421_arg = *it;
			{
				_1acb43b0c_optimize(_self_, &((*((*(_6421_arg))._field_Expr))._field_Model));
			}
			_iter_next_1bd065e97:;
			++it;
			goto _iter_begin_1bd065e97;
		}
		_iter_end_1bd065e97:;
	};
}



inline void _1acb3d7a5_allocStructure(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab111252_AllocStructLitExprModel> _6933_m) {
	_1acb3d4ec_structureLit(_self_, (*(_6933_m))._field_Lit);
}



inline void _1acb3da5d_casting(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab1117d5_CastingExprModel> _7326_m) {
	_1acb43b0c_optimize(_self_, &((*(_7326_m))._field_Expr));
}



inline void _1acb3dd16_args(_1acb3c595_exprDeadCode* _self_, jule::Slice<jule::Any>* _7724_args) {
	{
		auto expr = _7724_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd06842d:;
		if (it != expr_end) {
			jule::Any _7821_arg = *it;
			{
				_1acb43b0c_optimize(_self_, &(_7821_arg));
			}
			_iter_next_1bd06842d:;
			++it;
			goto _iter_begin_1bd06842d;
		}
		_iter_end_1bd06842d:;
	};
}



inline void _1acb3e0be_funcCall(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab112187_FnCallExprModel> _8327_m) {
	_1acb43b0c_optimize(_self_, &((*(_8327_m))._field_Expr));
	_1acb3dd16_args(_self_, &((*(_8327_m))._field_Args));
	if (((*(_8327_m))._field_Except != nullptr)) {
		_1acb38a9c_optimizeBodyChildExceptional((*(_self_))._field_s, &((*(_8327_m))._field_Except));
	};
}



inline void _1acb3e377_slice(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab112561_SliceExprModel> _9124_m) {
	_1acb3dd16_args(_self_, &((*(_9124_m))._field_Elems));
}



inline void _1acb3e630_array(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab1155a8_ArrayExprModel> _9524_m) {
	if ((((*(_9524_m))._field_Elems.len() == 2LL) && ((*(_9524_m))._field_Elems[1LL] == nullptr))) {
		_1acb43b0c_optimize(_self_, &((*(_9524_m))._field_Elems[0LL]));
	};
	_1acb3dd16_args(_self_, &((*(_9524_m))._field_Elems));
}



inline void _1acb3e8d8_indexing(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab112a17_IndexingExprModel> _10227_m) {
	_1acb43b0c_optimize(_self_, &((*((*(_10227_m))._field_Expr))._field_Model));
	_1acb43b0c_optimize(_self_, &((*((*(_10227_m))._field_Index))._field_Model));
}



inline void _1acb3eb91_anonFunc(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab112de1_AnonFnExprModel> _10727_m) {
	_1acb3b53e_eliminateDeadCodeOfScope((*((*(_10727_m))._field_Func))._field_Scope);
}



inline void _1acb3ee49_mapExpr(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab113771_MapExprModel> _11126_m) {
	{
		auto expr = &((*(_11126_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd06eac7:;
		if (it != expr_end) {
			jule::Ptr<_1ab1132ba_KeyValPairExprModel> _11221_pair = *it;
			{
				_1acb43b0c_optimize(_self_, &((*(_11221_pair))._field_Key));
				_1acb43b0c_optimize(_self_, &((*(_11221_pair))._field_Val));
			}
			_iter_next_1bd06eac7:;
			++it;
			goto _iter_begin_1bd06eac7;
		}
		_iter_end_1bd06eac7:;
	};
}



inline void _1acb40202_slicing(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab113d04_SlicingExprModel> _11826_m) {
	_1acb43b0c_optimize(_self_, &((*(_11826_m))._field_Expr));
	_1acb43b0c_optimize(_self_, &((*(_11826_m))._field_Left));
	if (((*(_11826_m))._field_Right != nullptr)) {
		_1acb43b0c_optimize(_self_, &((*(_11826_m))._field_Right));
	};
}



inline void _1acb404aa_traitSub(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab114387_TraitSubIdentExprModel> _12627_m) {
	_1acb43b0c_optimize(_self_, &((*(_12627_m))._field_Expr));
}



inline void _1acb40763_structureSub(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab114c28_StructSubIdentExprModel> _13031_m) {
	_1acb43b0c_optimize(_self_, &((*((*(_13031_m))._field_Expr))._field_Model));
}



inline void _1acb40a1b_tuple(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab1158a5_TupleExprModel> _13424_m) {
	{
		auto expr = &((*(_13424_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd073bca:;
		if (it != expr_end) {
			jule::Ptr<_1ab22a228_Data> _13521_d = *it;
			{
				_1acb43b0c_optimize(_self_, &((*(_13521_d))._field_Model));
			}
			_iter_next_1bd073bca:;
			++it;
			goto _iter_begin_1bd073bca;
		}
		_iter_end_1bd073bca:;
	};
}



inline void _1acb40cc4_newCall(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab116532_BuiltinNewCallExprModel> _14026_m) {
	if (((*(_14026_m))._field_Init != nullptr)) {
		_1acb43b0c_optimize(_self_, &((*(_14026_m))._field_Init));
	};
}



inline void _1acb4107c_outCall(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab115c7e_BuiltinOutCallExprModel> _14626_m) {
	_1acb43b0c_optimize(_self_, &((*(_14626_m))._field_Expr));
}



inline void _1acb41335_outlnCall(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab116158_BuiltinOutlnCallExprModel> _15028_m) {
	_1acb43b0c_optimize(_self_, &((*(_15028_m))._field_Expr));
}



inline void _1acb415dd_panicCall(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab11690b_BuiltinPanicCallExprModel> _15428_m) {
	_1acb43b0c_optimize(_self_, &((*(_15428_m))._field_Expr));
}



inline void _1acb41896_assertCall(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab116db2_BuiltinAssertCallExprModel> _15829_m) {
	_1acb43b0c_optimize(_self_, &((*(_15829_m))._field_Expr));
}



inline void _1acb41b4e_errorCall(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab1189b8_BuiltinErrorCallExprModel> _16228_m) {
	_1acb43b0c_optimize(_self_, &((*((*(_16228_m))._field_Err))._field_Model));
}



inline void _1acb41e07_makeCall(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab117368_BuiltinMakeCallExprModel> _16627_m) {
	if (((*(_16627_m))._field_Len != nullptr)) {
		_1acb43b0c_optimize(_self_, &((*(_16627_m))._field_Len));
	};
	if (((*(_16627_m))._field_Cap != nullptr)) {
		_1acb43b0c_optimize(_self_, &((*(_16627_m))._field_Cap));
	};
}



inline void _1acb421b0_appendCall(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab117742_BuiltinAppendCallExprModel> _17529_m) {
	_1acb43b0c_optimize(_self_, &((*(_17529_m))._field_Dest));
	_1acb43b0c_optimize(_self_, &((*(_17529_m))._field_Elements));
}



inline void _1acb42468_lenCall(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab117a3e_BuiltinLenCallExprModel> _18026_m) {
	_1acb43b0c_optimize(_self_, &((*((*(_18026_m))._field_Expr))._field_Model));
}



inline void _1acb42721_capCall(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab117d3b_BuiltinCapCallExprModel> _18426_m) {
	_1acb43b0c_optimize(_self_, &((*((*(_18426_m))._field_Expr))._field_Model));
}



inline void _1acb429c9_deleteCall(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab118215_BuiltinDeleteCallExprModel> _18829_m) {
	_1acb43b0c_optimize(_self_, &((*((*(_18829_m))._field_Dest))._field_Model));
	if (((*(_18829_m))._field_Key != nullptr)) {
		_1acb43b0c_optimize(_self_, &((*((*(_18829_m))._field_Key))._field_Model));
	};
}



inline void _1acb42c82_sizeof(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab114574_SizeofExprModel> _19525_m) {
	_1acb43b0c_optimize(_self_, &((*(_19525_m))._field_Expr));
}



inline void _1acb4303a_alignof(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab1191e4_AlignofExprModel> _19926_m) {
	_1acb43b0c_optimize(_self_, &((*(_19926_m))._field_Expr));
}



inline void _1acb432e3_integratedToStr(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab1197dd_IntegratedToStrExprModel> _20334_m) {
	_1acb43b0c_optimize(_self_, &((*(_20334_m))._field_Expr));
}



inline void _1acb4359b_free(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab119eb4_FreeExprModel> _20723_m) {
	_1acb43b0c_optimize(_self_, &((*(_20723_m))._field_Expr));
}



inline void _1acb43854_backendEmit(_1acb3c595_exprDeadCode* _self_, jule::Ptr<_1ab119bb7_BackendEmitExprModel> _21130_m) {
	_1acb3dd16_args(_self_, &((*(_21130_m))._field_Exprs));
}



inline void _1acb43b0c_optimize(_1acb3c595_exprDeadCode* _self_, jule::Any* _21528_model) {
	{
		auto &_match_expr{ (*(_21528_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1bd082238:;
			{
				_1acb3ce8b_binary(_self_, (*(_21528_model)).cast_ptr<_1ab1101a7_BinopExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bd08229e:;
			{
				_1acb3d244_unary(_self_, (*(_21528_model)).cast_ptr<_1ab110581_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bd082315:;
			{
				_1acb3d4ec_structureLit(_self_, (*(_21528_model)).cast_ptr<_1ab110e55_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bd08238c:;
			{
				_1acb3d7a5_allocStructure(_self_, (*(_21528_model)).cast_ptr<_1ab111252_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1bd082414:;
			{
				_1acb3da5d_casting(_self_, (*(_21528_model)).cast_ptr<_1ab1117d5_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bd08248b:;
			{
				_1acb3e0be_funcCall(_self_, (*(_21528_model)).cast_ptr<_1ab112187_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bd082513:;
			{
				_1acb3e377_slice(_self_, (*(_21528_model)).cast_ptr<_1ab112561_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1bd08258a:;
			{
				_1acb3e630_array(_self_, (*(_21528_model)).cast_ptr<_1ab1155a8_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bd082612:;
			{
				_1acb3e8d8_indexing(_self_, (*(_21528_model)).cast_ptr<_1ab112a17_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bd082689:;
			{
				_1acb3eb91_anonFunc(_self_, (*(_21528_model)).cast_ptr<_1ab112de1_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bd082711:;
			{
				_1acb3ee49_mapExpr(_self_, (*(_21528_model)).cast_ptr<_1ab113771_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bd082788:;
			{
				_1acb40202_slicing(_self_, (*(_21528_model)).cast_ptr<_1ab113d04_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bd082810:;
			{
				_1acb404aa_traitSub(_self_, (*(_21528_model)).cast_ptr<_1ab114387_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bd082887:;
			{
				_1acb40763_structureSub(_self_, (*(_21528_model)).cast_ptr<_1ab114c28_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1bd08290e:;
			{
				_1acb40a1b_tuple(_self_, (*(_21528_model)).cast_ptr<_1ab1158a5_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bd082986:;
			{
				_1acb4107c_outCall(_self_, (*(_21528_model)).cast_ptr<_1ab115c7e_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1bd082a0d:;
			{
				_1acb41335_outlnCall(_self_, (*(_21528_model)).cast_ptr<_1ab116158_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1bd082a85:;
			{
				_1acb40cc4_newCall(_self_, (*(_21528_model)).cast_ptr<_1ab116532_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1bd082b0c:;
			{
				_1acb415dd_panicCall(_self_, (*(_21528_model)).cast_ptr<_1ab11690b_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1bd082b84:;
			{
				_1acb41896_assertCall(_self_, (*(_21528_model)).cast_ptr<_1ab116db2_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bd082c0b:;
			{
				_1acb41b4e_errorCall(_self_, (*(_21528_model)).cast_ptr<_1ab1189b8_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1bd082c83:;
			{
				_1acb41e07_makeCall(_self_, (*(_21528_model)).cast_ptr<_1ab117368_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bd082d0a:;
			{
				_1acb421b0_appendCall(_self_, (*(_21528_model)).cast_ptr<_1ab117742_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1bd082d82:;
			{
				_1acb42468_lenCall(_self_, (*(_21528_model)).cast_ptr<_1ab117a3e_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1bd082e09:;
			{
				_1acb42721_capCall(_self_, (*(_21528_model)).cast_ptr<_1ab117d3b_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1bd082e81:;
			{
				_1acb429c9_deleteCall(_self_, (*(_21528_model)).cast_ptr<_1ab118215_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1bd083008:;
			{
				_1acb42c82_sizeof(_self_, (*(_21528_model)).cast_ptr<_1ab114574_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1bd083080:;
			{
				_1acb4303a_alignof(_self_, (*(_21528_model)).cast_ptr<_1ab1191e4_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1bd083107:;
			{
				_1acb432e3_integratedToStr(_self_, (*(_21528_model)).cast_ptr<_1ab1197dd_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1bd08317e:;
			{
				_1acb4359b_free(_self_, (*(_21528_model)).cast_ptr<_1ab119eb4_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bd083206:;
			{
				_1acb43854_backendEmit(_self_, (*(_21528_model)).cast_ptr<_1ab119bb7_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1bd081e91:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1acb3c595_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab355551_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab35596e_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab355c6b_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab356299_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab35682c_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab356b29_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab356e26_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab357355_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab35772e_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab3588c8_scopeOptimizer> static__1ab358e17_new(jule::Ptr<_1ab1637b0_Scope> _4623_scope) {
	return jule::new_ptr<_1ab3588c8_scopeOptimizer>(_1ab3588c8_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _1ab3591c0_setCurrentStmt(_1ab3588c8_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _1ab3593bd_removeCurrent(_1ab3588c8_scopeOptimizer* _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*((*(_self_))._field_scope))._field_Stmts.slice(0LL, (*(_self_))._field_i),(*((*(_self_))._field_scope))._field_Stmts.slice(((*(_self_))._field_i + 1LL)));
}



inline void _1ab359676_optimizeData(_1ab3588c8_scopeOptimizer* _self_, jule::Ptr<_1ab22a228_Data> _6135_d) {
	{
		auto &_match_expr{ (*(_6135_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bd0d5d19:;
			{
				jule::Ptr<_1ab112187_FnCallExprModel> _6417_m = (*(_6135_d))._field_Model.cast_ptr<_1ab112187_FnCallExprModel>(&__jule_any_type34);;
				if (_2014c4290_Production) {
					if (((!(_1ab122285_IsBuiltin((*(_6417_m))._field_Func.ptr()))) && _1ab35cc2e_isStdPackage(&((*((*((*((*((*(_6417_m))._field_Func))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("debug", 5)))) {
						_1ab3591c0_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1bd0d5cb4:;
	};
	static__1ab3600e9_optimize(&((*(_6135_d))._field_Model));
}



inline void _1ab35992e_optimizeVar(_1ab3588c8_scopeOptimizer* _self_, jule::Ptr<_1ab1c7a66_Var> _7634_v) {
	if (((*(_7634_v))._field_Value != nullptr)) {
		static__1ab3600e9_optimize(&((*((*((*(_7634_v))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1ab359bd7_optimizeConditional(_1ab3588c8_scopeOptimizer* _self_, jule::Ptr<_1ab1643e8_Conditional> _8242_c) {
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd0da58d:;
		if (it != expr_end) {
			jule::Ptr<_1ab163bcd_If> _8321_elif = *it;
			{
				static__1ab3600e9_optimize(&((*(_8321_elif))._field_Expr));
				_1ab35c5ad_optimizeChild(_self_, (*(_8321_elif))._field_Scope);
			}
			_iter_next_1bd0da58d:;
			++it;
			goto _iter_begin_1bd0da58d;
		}
		_iter_end_1bd0da58d:;
	};
	if (((*(_8242_c))._field_Default != nullptr)) {
		_1ab35c5ad_optimizeChild(_self_, (*((*(_8242_c))._field_Default))._field_Scope);
	};
	if ((!(_1ab368b80_Cond))) {
		return;;
	};
	jule::Bool _9513_constCase = false;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd0dc5d4:;
		if (it != expr_end) {
			jule::I64 _9814_i = it - expr->begin();
			jule::Ptr<_1ab163bcd_If> _9821_elif = *it;
			{
				if ((!(_1ab35d03c_isConstantValidConditionalCase(&(_9821_elif))))) {
					goto _iter_next_1bd0dc5d4;
				};
				_9513_constCase=true;
				(*(_8242_c))._field_Elifs=(*(_8242_c))._field_Elifs.slice(0LL, _9814_i);
				(*(_8242_c))._field_Default=jule::new_ptr<_1ab163eca_Else>(_1ab163eca_Else{._field_Scope=(*(_9821_elif))._field_Scope});
				goto _iter_end_1bd0dc5d4;
			}
			_iter_next_1bd0dc5d4:;
			++it;
			_9814_i++;
			goto _iter_begin_1bd0dc5d4;
		}
		_iter_end_1bd0dc5d4:;
	};
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ab163bcd_If>* _11513_i = (&((*(_8242_c))._field_Elifs[0LL]));;
	jule::Ptr<_1ab163bcd_If>* _1169_end = (&((*(_8242_c))._field_Elifs[((*(_8242_c))._field_Elifs.len() - 1LL)]));;
	for (; (_11513_i <= _1169_end); (_11513_i)++) {
		{
			{
				if (_1ab35d911_isUnreachableConditionalCase(&((*(_11513_i))))) {
					(*(_11513_i))=nullptr;
				};
			};
		}
	_iter_next_1bd0e0c36:;
	}
	_iter_end_1bd0e0c36:;;
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9513_constCase))) {
		return;;
	};
	jule::I64 _13413_only = -1LL;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd0e2144:;
		if (it != expr_end) {
			jule::I64 _13513_j = it - expr->begin();
			jule::Ptr<_1ab163bcd_If> _13516_elif = *it;
			{
				if ((_13516_elif != nullptr)) {
					if ((_13413_only != -1LL)) {
						return;;
					};
					_13413_only=_13513_j;
				};
			}
			_iter_next_1bd0e2144:;
			++it;
			_13513_j++;
			goto _iter_begin_1bd0e2144;
		}
		_iter_end_1bd0e2144:;
	};
	if ((_13413_only != -1LL)) {
		_1ab3591c0_setCurrentStmt(_self_, jule::Any((*((*(_8242_c))._field_Elifs[_13413_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1ab35a105_buildDefaultConstantTrueCase(_1ab3588c8_scopeOptimizer* _self_, jule::Ptr<_1ab16852e_Case> _15151_case, jule::I64* _15169_i, jule::Ptr<_1ab1678e6_Match>* _15182_m) {
	(*(_15151_case))._field_Exprs=nullptr;
	jule::I64 _1539_start = (*(_15169_i));;
	_julec_label_1bd0e4ac5:;
	for (;;) {
		{
			if (((*((*(_15151_case))._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1bd0e460d;
			};
			jule::Any *_15918_stmt = &((*((*(_15151_case))._field_Scope))._field_Stmts[((*((*(_15151_case))._field_Scope))._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15918_stmt)) };
				
				if (_match_expr.type == &__jule_any_type48) {
					_case_begin_1bd0e6a0b:;
					{
						((*(_15169_i)))++;
						if (((*(_15169_i)) >= (*((*(_15182_m))))._field_Cases.len())) {
							(*(_15918_stmt))=jule::Any((*((*((*(_15182_m))))._field_Default))._field_Scope, &__jule_any_type22);
							goto _iter_end_1bd0e460d;
						};
						_15151_case=(*((*(_15182_m))))._field_Cases[(*(_15169_i))];
						(*(_15918_stmt))=jule::Any((*(_15151_case))._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1bd0e6b60:;
					{
						goto _iter_end_1bd0e460d;
					}
				}
				_match_end_1bd0e6b0a:;
			};
		}
	_iter_next_1bd0e460d:;
	}
	_iter_end_1bd0e460d:;;
	(*((*(_15182_m))))._field_Default=(*((*(_15182_m))))._field_Cases[_1539_start];
	(*((*(_15182_m))))._field_Cases=(*((*(_15182_m))))._field_Cases.slice(0LL, _1539_start);
}



inline void _1ab35a3ad_optimizeMatch(_1ab3588c8_scopeOptimizer* _self_, jule::Ptr<_1ab1678e6_Match> _17736_m) {
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd0e9525:;
		if (it != expr_end) {
			jule::Ptr<_1ab16852e_Case> _17821_case = *it;
			{
				{
					auto expr = &((*(_17821_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd0e9e71:;
					if (it != expr_end) {
						jule::Ptr<_1ab22a228_Data> _17925_expr = *it;
						{
							static__1ab3600e9_optimize(&((*(_17925_expr))._field_Model));
						}
						_iter_next_1bd0e9e71:;
						++it;
						goto _iter_begin_1bd0e9e71;
					}
					_iter_end_1bd0e9e71:;
				};
				_1ab35c5ad_optimizeChild(_self_, (*(_17821_case))._field_Scope);
			}
			_iter_next_1bd0e9525:;
			++it;
			goto _iter_begin_1bd0e9525;
		}
		_iter_end_1bd0e9525:;
	};
	if (((*(_17736_m))._field_Default != nullptr)) {
		_1ab35c5ad_optimizeChild(_self_, (*((*(_17736_m))._field_Default))._field_Scope);
	};
	if ((!(_1ab368b80_Cond))) {
		return;;
	};
	jule::Bool _19213_constCase = false;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd0ebba9:;
		if (it != expr_end) {
			jule::I64 _19518_i = it - expr->begin();
			jule::Ptr<_1ab16852e_Case> _19525_case = *it;
			{
				if ((!(_1ab35d647_isConstantValidMatchCase(&(_19525_case))))) {
					goto _iter_next_1bd0ebba9;
				};
				_19213_constCase=true;
				_1ab35a105_buildDefaultConstantTrueCase(_self_, _19525_case, &(_19518_i), &(_17736_m));
				goto _iter_end_1bd0ebba9;
			}
			_iter_next_1bd0ebba9:;
			++it;
			_19518_i++;
			goto _iter_begin_1bd0ebba9;
		}
		_iter_end_1bd0ebba9:;
	};
	if (((*(_17736_m))._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ab16852e_Case>* _20913_i = (&((*(_17736_m))._field_Cases[0LL]));;
	jule::Ptr<_1ab16852e_Case>* _2109_end = (&((*(_17736_m))._field_Cases[((*(_17736_m))._field_Cases.len() - 1LL)]));;
	for (; (_20913_i <= _2109_end); (_20913_i)++) {
		{
			{
				if (_1ab35dbca_isUnreachableMatchCase(&((*(_20913_i))))) {
					(*(_20913_i))=nullptr;
				};
			};
		}
	_iter_next_1bd0ee7b1:;
	}
	_iter_end_1bd0ee7b1:;;
	if ((!(_19213_constCase))) {
		return;;
	};
	jule::I64 _22413_only = -1LL;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd0eea7a:;
		if (it != expr_end) {
			jule::I64 _22513_j = it - expr->begin();
			jule::Ptr<_1ab16852e_Case> _22516_case = *it;
			{
				if ((_22516_case != nullptr)) {
					if ((_22413_only != -1LL)) {
						return;;
					};
					_22413_only=_22513_j;
				};
			}
			_iter_next_1bd0eea7a:;
			++it;
			_22513_j++;
			goto _iter_begin_1bd0eea7a;
		}
		_iter_end_1bd0eea7a:;
	};
	if ((_22413_only != -1LL)) {
		_1ab3591c0_setCurrentStmt(_self_, jule::Any((*((*(_17736_m))._field_Cases[_22413_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1ab35a666_optimizeRangeIter(_1ab3588c8_scopeOptimizer* _self_, jule::Ptr<_1ab1655e7_RangeIter> _24140_it) {
	static__1ab3600e9_optimize(&((*((*(_24140_it))._field_Expr))._field_Model));
	_1ab35c5ad_optimizeChild(_self_, (*(_24140_it))._field_Scope);
}



inline void _1ab35a91e_optimizeWhileIter(_1ab3588c8_scopeOptimizer* _self_, jule::Ptr<_1ab164b9b_WhileIter> _24640_it) {
	static__1ab3600e9_optimize(&((*(_24640_it))._field_Expr));
	_1ab35c305_optimizeStmt(_self_, (*(_24640_it))._field_Next);
	_1ab35c5ad_optimizeChild(_self_, (*(_24640_it))._field_Scope);
}



inline jule::Bool _1ab35ac60_substr(_1ab3588c8_scopeOptimizer* _self_, jule::Ptr<_1ab166dac_Assign> _25229_a) {
	if (((*((*(_25229_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_25229_a))._field_R))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bd105696:;
			{
				jule::Ptr<_1ab113d04_SlicingExprModel> _25817_sem = (*((*(_25229_a))._field_R))._field_Model.cast_ptr<_1ab113d04_SlicingExprModel>(&__jule_any_type91);;
				if (((*(_25817_sem))._field_Expr == (*((*(_25229_a))._field_L))._field_Model)) {
					_1ab3591c0_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ab35682c_MutSlicingExprModel>(_1ab35682c_MutSlicingExprModel{._field_Token=(*(_25817_sem))._field_Token, ._field_Expr=(*(_25817_sem))._field_Expr, ._field_Left=(*(_25817_sem))._field_Left, ._field_Right=(*(_25817_sem))._field_Right}), &__jule_any_type120));
					return true;;
				};
			}
		}
		_match_end_1bd105641:;
	};
	return false;;
}



inline jule::Bool _1ab35b0a1_strAssign(_1ab3588c8_scopeOptimizer* _self_, jule::Ptr<_1ab166dac_Assign> _27232_a) {
	if ((!(_1ab368e49_Str))) {
		return false;;
	};
	jule::Ptr<_1ab2635e6_Prim> _2769_lp = _1ab25d16d_Prim((*((*(_27232_a))._field_L))._field_Kind.ptr());;
	if (((_2769_lp == nullptr) || (!(_1ab266a7d_IsStr(_2769_lp.ptr()))))) {
		return false;;
	};
	return _1ab35ac60_substr(_self_, _27232_a);;
}



inline jule::Bool _1ab35b3e2_sliceAssign(_1ab3588c8_scopeOptimizer* _self_, jule::Ptr<_1ab166dac_Assign> _28334_a) {
	if (((!(_1ab369213_Slice)) || (_1ab25e1c4_Slc((*((*(_28334_a))._field_L))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1ab35ac60_substr(_self_, _28334_a);;
}



inline void _1ab35b69a_optimizeAssign(_1ab3588c8_scopeOptimizer* _self_, jule::Ptr<_1ab166dac_Assign> _29137_assign) {
	if ((((*((*(_29137_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1ab3548e6_equalModels((*((*(_29137_assign))._field_L))._field_Model, (*((*(_29137_assign))._field_R))._field_Model))) {
		_1ab3593bd_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return;;
	};
	{
		
		if (_1ab35b0a1_strAssign(_self_, _29137_assign) || _1ab35b3e2_sliceAssign(_self_, _29137_assign)) {
			_case_begin_1bd10c747:;
			{
				return;;
			}
		}
		_match_end_1bd10b3a0:;
	};
	static__1ab3600e9_optimize(&((*((*(_29137_assign))._field_L))._field_Model));
	static__1ab3600e9_optimize(&((*((*(_29137_assign))._field_R))._field_Model));
	{
		auto &_match_expr{ (*((*(_29137_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1bd10e0b7:;
			{
				if ((_1ab367e59_Math && (_1ab25e6e1_Struct((*((*(_29137_assign))._field_L))._field_Kind.ptr()) == nullptr))) {
					(*((*(_29137_assign))._field_Op))._field_Kind=(*((*(_29137_assign))._field_Op))._field_Kind.slice(0LL, ((*((*(_29137_assign))._field_Op))._field_Kind.len() - 1LL));
					jule::Any _31321_model = jule::Any(jule::new_ptr<_1ab1101a7_BinopExprModel>(_1ab1101a7_BinopExprModel{._field_Left=(*(_29137_assign))._field_L, ._field_Right=(*(_29137_assign))._field_R, ._field_Op=(*(_29137_assign))._field_Op}), &__jule_any_type111);;
					static__1ab3600e9_optimize(&(_31321_model));
					{
						auto &_match_expr{ _31321_model };
						
						if (_match_expr.type == &__jule_any_type111) {
							_case_begin_1bd112032:;
							{
								(*(_29137_assign))._field_R=jule::new_ptr<_1ab10ebac_OperandExprModel>((*((*(_29137_assign))._field_R)));
								(*((*(_29137_assign))._field_Op))._field_Id=static_cast<jule::U64>(71LLU);
								(*((*(_29137_assign))._field_Op))._field_Kind=jule::Str::lit("=", 1);
								(*((*(_29137_assign))._field_R))._field_Model=_31321_model;
								return;;
							}
						}
						_match_end_1bd111d45:;
					};
					(*((*(_29137_assign))._field_Op))._field_Kind+=jule::Str::lit("=", 1);
					return;;
				};
			}
		}
		_match_end_1bd10e062:;
	};
	if (_1ab367b4b_Append) {
		{
			auto &_match_expr{ (*((*(_29137_assign))._field_R))._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1bd114cd2:;
				{
					jule::Ptr<_1ab117742_BuiltinAppendCallExprModel> _33521_m = (*((*(_29137_assign))._field_R))._field_Model.cast_ptr<_1ab117742_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_1ab366d9d_areSameLvalueExprModel(&((*((*(_29137_assign))._field_L))._field_Model), &((*(_33521_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_33521_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type76) {
							_case_begin_1bd116de4:;
							{
								_1ab3591c0_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ab357355_PushToSliceExprModel>(_1ab357355_PushToSliceExprModel{._field_Dest=(*(_33521_m))._field_Dest, ._field_Elems=(*(_33521_m))._field_Elements.cast_ptr<_1ab112561_SliceExprModel>(&__jule_any_type76)}), &__jule_any_type121));
							}
						}
						else {
							_case_begin_1bd116a2b:;
							{
								_1ab3591c0_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ab35772e_AppendToSliceExprModel>(_1ab35772e_AppendToSliceExprModel{._field_Dest=(*((*(_29137_assign))._field_L))._field_Model, ._field_Slice=(*(_33521_m))._field_Elements}), &__jule_any_type122));
							}
						}
						_match_end_1bd1169c6:;
					};
				}
			}
			_match_end_1bd114c7c:;
		};
	};
}



inline jule::Bool _1ab35b9db_tryOptimizeSwap(_1ab3588c8_scopeOptimizer* _self_, jule::Ptr<_1ab167286_MultiAssign>* _35739_assign) {
	if (((!(_1ab3694cc_Assign)) || ((*((*(_35739_assign))))._field_L.len() != 2LL))) {
		return false;;
	};
	jule::Ptr<_1ab1158a5_TupleExprModel> _36117_tup;;
	{
		auto &_match_expr{ (*((*(_35739_assign))))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1bd119666:;
			{
				_36117_tup=(*((*(_35739_assign))))._field_R.cast_ptr<_1ab1158a5_TupleExprModel>(&__jule_any_type81);
			}
		}
		_match_end_1bd119611:;
	};
	if (((_36117_tup == nullptr) || ((*(_36117_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1ab3548e6_equalModels((*((*((*(_35739_assign))))._field_L[0LL]))._field_Model, (*((*(_36117_tup))._field_Datas[0LL]))._field_Model) && _1ab3548e6_equalModels((*((*((*(_35739_assign))))._field_L[1LL]))._field_Model, (*((*(_36117_tup))._field_Datas[1LL]))._field_Model))) {
		_1ab3593bd_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return true;;
	};
	if (((!(_1ab3548e6_equalModels((*((*((*(_35739_assign))))._field_L[0LL]))._field_Model, (*((*(_36117_tup))._field_Datas[1LL]))._field_Model))) || (!(_1ab3548e6_equalModels((*((*((*(_35739_assign))))._field_L[1LL]))._field_Model, (*((*(_36117_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1ab355551_SwapExprModel> _38313_model = jule::new_ptr<_1ab355551_SwapExprModel>(_1ab355551_SwapExprModel{._field_Left=(*((*(_35739_assign))))._field_L[0LL], ._field_Right=(*((*(_35739_assign))))._field_L[1LL]});;
	static__1ab3600e9_optimize(&((*((*(_38313_model))._field_Left))._field_Model));
	static__1ab3600e9_optimize(&((*((*(_38313_model))._field_Right))._field_Model));
	_1ab3591c0_setCurrentStmt(_self_, jule::Any(_38313_model, &__jule_any_type123));
	return true;;
}



inline void _1ab35bc94_optimizeMultiAssign(_1ab3588c8_scopeOptimizer* _self_, jule::Ptr<_1ab167286_MultiAssign> _39342_assign) {
	if (_1ab35b9db_tryOptimizeSwap(_self_, &(_39342_assign))) {
		return;;
	};
	{
		auto expr = &((*(_39342_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1219ae:;
		if (it != expr_end) {
			jule::Ptr<_1ab22a228_Data> _39821_l = *it;
			{
				if ((_39821_l != nullptr)) {
					static__1ab3600e9_optimize(&((*(_39821_l))._field_Model));
				};
			}
			_iter_next_1bd1219ae:;
			++it;
			goto _iter_begin_1bd1219ae;
		}
		_iter_end_1bd1219ae:;
	};
	static__1ab3600e9_optimize(&((*(_39342_assign))._field_R));
}



inline void _1ab35c04c_optimizeRet(_1ab3588c8_scopeOptimizer* _self_, jule::Ptr<_1ab168ead_RetSt> _40634_r) {
	static__1ab3600e9_optimize(&((*(_40634_r))._field_Expr));
}



inline void _1ab35c305_optimizeStmt(_1ab3588c8_scopeOptimizer* _self_, jule::Any _41035_stmt) {
	{
		auto &_match_expr{ _41035_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bd123ae3:;
			{
				_1ab35c5ad_optimizeChild(_self_, _41035_stmt.cast_ptr<_1ab1637b0_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bd123b59:;
			{
				_1ab359676_optimizeData(_self_, _41035_stmt.cast_ptr<_1ab22a228_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd123bc0:;
			{
				_1ab35992e_optimizeVar(_self_, _41035_stmt.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bd123c47:;
			{
				_1ab359bd7_optimizeConditional(_self_, _41035_stmt.cast_ptr<_1ab1643e8_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bd123cbe:;
			{
				_1ab35a666_optimizeRangeIter(_self_, _41035_stmt.cast_ptr<_1ab1655e7_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1bd123d46:;
			{
				_1ab35a91e_optimizeWhileIter(_self_, _41035_stmt.cast_ptr<_1ab164b9b_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bd123dbd:;
			{
				_1ab35c5ad_optimizeChild(_self_, (*(_41035_stmt.cast_ptr<_1ab1646e5_InfIter>(&__jule_any_type36)))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1bd123e45:;
			{
				_1ab35b69a_optimizeAssign(_self_, _41035_stmt.cast_ptr<_1ab166dac_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1bd123ebc:;
			{
				_1ab35bc94_optimizeMultiAssign(_self_, _41035_stmt.cast_ptr<_1ab167286_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bd124044:;
			{
				_1ab35a3ad_optimizeMatch(_self_, _41035_stmt.cast_ptr<_1ab1678e6_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1bd1240bb:;
			{
				_1ab35c04c_optimizeRet(_self_, _41035_stmt.cast_ptr<_1ab168ead_RetSt>(&__jule_any_type50));
			}
		}
		_match_end_1bd1239b1:;
	};
}



inline void _1ab35c5ad_optimizeChild(_1ab3588c8_scopeOptimizer* _self_, jule::Ptr<_1ab1637b0_Scope> _43736_child) {
	jule::Ptr<_1ab3588c8_scopeOptimizer> _43813_so = static__1ab358e17_new(_43736_child);;
	_1ab35c7ab_optimize(_43813_so.ptr());
}



inline void _1ab35c7ab_optimize(_1ab3588c8_scopeOptimizer* _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_scope))._field_Stmts.len()); ((*(_self_))._field_i)++) {
		{
			_1ab35c305_optimizeStmt(_self_, (*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]);
		}
	_iter_next_1bd129764:;
	}
	_iter_end_1bd129764:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab3588c8_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1ab3600e9_optimize(jule::Any* _5629_model) {
	if (_1acb4413a_exprEnabled) {
		jule::Ptr<_1ab35ea55_exprOptimizer> _5917_exop = jule::new_ptr<_1ab35ea55_exprOptimizer>(_1ab35ea55_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_5629_model))});;
		_1ab366562_do(_5917_exop.ptr());
	};
}



inline jule::Bool _1ab36043a_strCond(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab1101a7_BinopExprModel> _6626_m) {
	jule::Ptr<_1ab2635e6_Prim> _679_lp = _1ab25d16d_Prim((*((*(_6626_m))._field_Left))._field_Kind.ptr());;
	if (((_679_lp == nullptr) || (!(_1ab266a7d_IsStr(_679_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*(_6626_m))._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*((*(_6626_m))._field_Op))._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bd1397eb:;
			{
				std::swap((*(_6626_m))._field_Left, (*(_6626_m))._field_Right);
				goto _julec_label_1bd13b215;
			}
		}
		_match_end_1bd139796:;
	};
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bd138432:;
			{
				goto _match_end_1bd13aeb2;
			}
		}
		else {
			_case_begin_1bd13b017:;
			{
				return false;;
			}
		}
		_match_end_1bd13aeb2:;
	};
	_julec_label_1bd13b215:;
	jule::Ptr<_1d8bd00bd_Const> _8613_c = (*((*(_6626_m))._field_Right))._field_Model.cast_ptr<_1d8bd00bd_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1bd13c3c0:;
			{
				if ((_1d8bd2246_ReadStr(_8613_c.ptr())).empty()) {
					jule::Any _9021_model = jule::Any(jule::new_ptr<_1ab35596e_EmptyCompareExprModel>(_1ab35596e_EmptyCompareExprModel{._field_Expr=(*((*(_6626_m))._field_Left))._field_Model, ._field_Neg=false}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9021_model))))));
					goto _match_end_1bd13c359;
				};
				jule::Any _9717_model = jule::Any(jule::new_ptr<_1ab356299_StrCompExprModel>(_1ab356299_StrCompExprModel{._field_Left=(*((*(_6626_m))._field_Left))._field_Model, ._field_Right=_8613_c, ._field_NotEq=false}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9717_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bd13c447:;
			{
				if ((_1d8bd2246_ReadStr(_8613_c.ptr())).empty()) {
					jule::Any _10521_model = jule::Any(jule::new_ptr<_1ab35596e_EmptyCompareExprModel>(_1ab35596e_EmptyCompareExprModel{._field_Expr=(*((*(_6626_m))._field_Left))._field_Model, ._field_Neg=true}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_10521_model))))));
					goto _match_end_1bd13c359;
				};
				jule::Any _11217_model = jule::Any(jule::new_ptr<_1ab356299_StrCompExprModel>(_1ab356299_StrCompExprModel{._field_Left=(*((*(_6626_m))._field_Left))._field_Model, ._field_Right=_8613_c, ._field_NotEq=true}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_11217_model))))));
			}
		}
		_match_end_1bd13c359:;
	};
	return true;;
}



inline void _1ab3606e3_binary(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab1101a7_BinopExprModel> _12225_m) {
	static__1ab3600e9_optimize(&((*((*(_12225_m))._field_Left))._field_Model));
	static__1ab3600e9_optimize(&((*((*(_12225_m))._field_Right))._field_Model));
	{
		auto &_match_expr{ (*((*(_12225_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bd13b0e4:;
			{
				goto _match_end_1bd144828;
			}
		}
		else {
			_case_begin_1bd14487d:;
			{
				return;;
			}
		}
		_match_end_1bd144828:;
	};
	if ((_1ab368b80_Cond && _1ab36043a_strCond(_self_, _12225_m))) {
		return;;
	};
	if ((!(_1ab367e59_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_12225_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bd145a7c:;
			{
				jule::Bool _14213_ok = false;;
				jule::U64 _14217_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1ab3669d5_checkForBitShiftOpt(&((*(_12225_m))._field_Left), &((*(_12225_m))._field_Right));
					_14213_ok = __jule_assign_result.__jule_result_arg0;
					_14217_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_14213_ok) {
					(*((*(_12225_m))._field_Op))._field_Id=static_cast<jule::U64>(56LLU);
					(*((*(_12225_m))._field_Op))._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_1d8bd00bd_Const> _14621_c = (*((*(_12225_m))._field_Right))._field_Model.cast_ptr<_1d8bd00bd_Const>(&__jule_any_type19);;
					_1d8bd32e1_SetU64(_14621_c.ptr(), _14217_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1bd145b04:;
			{
				jule::Bool _15113_ok = false;;
				jule::U64 _15117_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1ab3669d5_checkForBitShiftOpt(&((*(_12225_m))._field_Left), &((*(_12225_m))._field_Right));
					_15113_ok = __jule_assign_result.__jule_result_arg0;
					_15117_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15113_ok) {
					(*((*(_12225_m))._field_Op))._field_Id=static_cast<jule::U64>(57LLU);
					(*((*(_12225_m))._field_Op))._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_1d8bd00bd_Const> _15521_c = (*((*(_12225_m))._field_Right))._field_Model.cast_ptr<_1d8bd00bd_Const>(&__jule_any_type19);;
					_1d8bd32e1_SetU64(_15521_c.ptr(), _15117_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bd145b7b:;
			{
				jule::Ptr<_1d8bd00bd_Const> _16017_c = (*((*(_12225_m))._field_Right))._field_Model.cast_ptr<_1d8bd00bd_Const>(&__jule_any_type19);;
				jule::F64 _16113_d = _1d8bd2c80_AsF64(_16017_c.ptr());;
				if ((_16113_d == 2LL)) {
					(*((*(_12225_m))._field_Op))._field_Id=static_cast<jule::U64>(65LLU);
					(*((*(_12225_m))._field_Op))._field_Kind=jule::Str::lit("&", 1);
					_1d8bd3038_SetI64(_16017_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1bd145a05:;
	};
	jule::Any _16813_model = jule::Any(jule::new_ptr<_1ab356b29_UnsafeBinopExprModel>(_1ab356b29_UnsafeBinopExprModel{._field_Node=_12225_m}), &__jule_any_type126);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_16813_model))))));
}



inline void _1ab36099b_unary(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab110581_UnaryExprModel> _17224_m) {
	static__1ab3600e9_optimize(&((*((*(_17224_m))._field_Expr))._field_Model));
	if ((!(_1ab3687a6_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_17224_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bd14dea3:;
			{
				{
					auto &_match_expr{ (*((*(_17224_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1bd150a98:;
						{
							jule::Ptr<_1ab110581_UnaryExprModel> _18121_um = (*((*(_17224_m))._field_Expr))._field_Model.cast_ptr<_1ab110581_UnaryExprModel>(&__jule_any_type110);;
							if (((*((*(_18121_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*(_18121_um))._field_Expr))._field_Model;
							};
						}
					}
					_match_end_1bd150a43:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bd14ee3d:;
			{
				{
					auto &_match_expr{ (*((*(_17224_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1bd152bbb:;
						{
							jule::Ptr<_1ab1c7a66_Var> _18921_v = (*((*(_17224_m))._field_Expr))._field_Model.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8);;
							if ((*(_18921_v))._field_Reference) {
								jule::Any _19125_model = jule::Any(jule::new_ptr<_1ab355c6b_RefExprModel>(_1ab355c6b_RefExprModel{._field_Var=_18921_v}), &__jule_any_type127);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_19125_model))))));
							};
						}
					}
					_match_end_1bd152b66:;
				};
			}
		}
		_match_end_1bd14ed2d:;
	};
}



inline void _1ab360c54_structureLit(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab110e55_StructLitExprModel> _19831_m) {
	{
		auto expr = &((*(_19831_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1545b3:;
		if (it != expr_end) {
			jule::Ptr<_1ab110aae_StructArgExprModel> _19921_arg = *it;
			{
				static__1ab3600e9_optimize(&((*((*(_19921_arg))._field_Expr))._field_Model));
			}
			_iter_next_1bd1545b3:;
			++it;
			goto _iter_begin_1bd1545b3;
		}
		_iter_end_1bd1545b3:;
	};
}



inline void _1ab36100c_allocStructure(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab111252_AllocStructLitExprModel> _20433_m) {
	_1ab360c54_structureLit(_self_, (*(_20433_m))._field_Lit);
}



inline void _1ab3612b5_casting(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab1117d5_CastingExprModel> _20826_m) {
	static__1ab3600e9_optimize(&((*(_20826_m))._field_Expr));
}



inline void _1ab36156d_args(_1ab35ea55_exprOptimizer* _self_, jule::Slice<jule::Any>* _21224_args) {
	{
		auto expr = _21224_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd15665e:;
		if (it != expr_end) {
			jule::I64 _21314_i = it - expr->begin();
			jule::Any _21321_arg = *it;
			{
				static__1ab3600e9_optimize(&(_21321_arg));
				(*(_21224_args))[_21314_i]=_21321_arg;
			}
			_iter_next_1bd15665e:;
			++it;
			_21314_i++;
			goto _iter_begin_1bd15665e;
		}
		_iter_end_1bd15665e:;
	};
}



inline void _1ab361826_scope(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab1637b0_Scope>* _21925_s) {
	jule::Ptr<_1ab3588c8_scopeOptimizer> _22013_scopt = static__1ab358e17_new((*(_21925_s)));;
	_1ab35c7ab_optimize(_22013_scopt.ptr());
}



inline void _1ab361ace_funcCall(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab112187_FnCallExprModel> _22427_m) {
	static__1ab3600e9_optimize(&((*(_22427_m))._field_Expr));
	_1ab36156d_args(_self_, &((*(_22427_m))._field_Args));
	if (((*(_22427_m))._field_Except != nullptr)) {
		_1ab361826_scope(_self_, &((*(_22427_m))._field_Except));
	};
}



inline void _1ab361d87_slice(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab112561_SliceExprModel> _23224_m) {
	_1ab36156d_args(_self_, &((*(_23224_m))._field_Elems));
}



inline void _1ab362140_array(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab1155a8_ArrayExprModel> _23624_m) {
	if ((((*(_23624_m))._field_Elems.len() == 2LL) && ((*(_23624_m))._field_Elems[1LL] == nullptr))) {
		jule::Any _23817_elem = (*(_23624_m))._field_Elems[0LL];;
		static__1ab3600e9_optimize(&(_23817_elem));
		(*(_23624_m))._field_Elems[0LL]=_23817_elem;
	};
	_1ab36156d_args(_self_, &((*(_23624_m))._field_Elems));
}



inline void _1ab3623e8_indexing(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab112a17_IndexingExprModel> _24527_m) {
	static__1ab3600e9_optimize(&((*((*(_24527_m))._field_Expr))._field_Model));
	static__1ab3600e9_optimize(&((*((*(_24527_m))._field_Index))._field_Model));
	if ((!(_1ab368223_Access))) {
		return;;
	};
	jule::Bool _2519_array = (_1ab25de3d_Arr((*((*(_24527_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_2519_array && _1ab22aaec_IsConst((*(_24527_m))._field_Index.ptr()))) {
		jule::Any _25417_model = jule::Any(jule::new_ptr<_1ab356e26_UnsafeIndexingExprModel>(_1ab356e26_UnsafeIndexingExprModel{._field_Node=_24527_m}), &__jule_any_type128);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_25417_model))))));
		return;;
	};
	{
		auto &_match_expr{ (*((*(_24527_m))._field_Index))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd1603b0:;
			{
				jule::Ptr<_1ab1c7a66_Var> _26013_i = (*((*(_24527_m))._field_Index))._field_Model.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8);;
				if (((*(_26013_i))._field_Mutable || ((*(_26013_i))._field_IterRelation == nullptr))) {
					goto _match_end_1bd16035a;
				};
				{
					auto &_match_expr{ (*((*(_24527_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1bd16200a:;
						{
							jule::Ptr<_1ab1c7a66_Var> _26617_r = (*((*(_24527_m))._field_Expr))._field_Model.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8);;
							if (((*((*(_26013_i))._field_IterRelation))._field_Range == _26617_r)) {
								jule::Any _26925_model = jule::Any(jule::new_ptr<_1ab356e26_UnsafeIndexingExprModel>(_1ab356e26_UnsafeIndexingExprModel{._field_Node=_24527_m}), &__jule_any_type128);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_26925_model))))));
							};
						}
					}
					_match_end_1bd161ea5:;
				};
			}
		}
		_match_end_1bd16035a:;
	};
}



inline void _1ab3626a1_anonFunc(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab112de1_AnonFnExprModel> _27627_m) {
	_1ab361826_scope(_self_, &((*((*(_27627_m))._field_Func))._field_Scope));
}



inline void _1ab362959_mapExpr(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab113771_MapExprModel> _28026_m) {
	{
		auto expr = &((*(_28026_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd16488c:;
		if (it != expr_end) {
			jule::Ptr<_1ab1132ba_KeyValPairExprModel> _28121_pair = *it;
			{
				static__1ab3600e9_optimize(&((*(_28121_pair))._field_Key));
				static__1ab3600e9_optimize(&((*(_28121_pair))._field_Val));
			}
			_iter_next_1bd16488c:;
			++it;
			goto _iter_begin_1bd16488c;
		}
		_iter_end_1bd16488c:;
	};
}



inline void _1ab362c12_slicing(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab113d04_SlicingExprModel> _28726_m) {
	static__1ab3600e9_optimize(&((*(_28726_m))._field_Expr));
	static__1ab3600e9_optimize(&((*(_28726_m))._field_Left));
	if (((*(_28726_m))._field_Right != nullptr)) {
		static__1ab3600e9_optimize(&((*(_28726_m))._field_Right));
	};
}



inline void _1ab362eba_traitSub(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab114387_TraitSubIdentExprModel> _29527_m) {
	static__1ab3600e9_optimize(&((*(_29527_m))._field_Expr));
}



inline void _1ab363273_structureSub(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab114c28_StructSubIdentExprModel> _29931_m) {
	static__1ab3600e9_optimize(&((*((*(_29931_m))._field_Expr))._field_Model));
}



inline void _1ab36352b_tuple(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab1158a5_TupleExprModel> _30324_m) {
	{
		auto expr = &((*(_30324_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd167bd1:;
		if (it != expr_end) {
			jule::Ptr<_1ab22a228_Data> _30421_d = *it;
			{
				static__1ab3600e9_optimize(&((*(_30421_d))._field_Model));
			}
			_iter_next_1bd167bd1:;
			++it;
			goto _iter_begin_1bd167bd1;
		}
		_iter_end_1bd167bd1:;
	};
}



inline void _1ab3637d4_newCall(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab116532_BuiltinNewCallExprModel> _30926_m) {
	if (((*(_30926_m))._field_Init != nullptr)) {
		static__1ab3600e9_optimize(&((*(_30926_m))._field_Init));
	};
}



inline void _1ab363a8c_outCall(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab115c7e_BuiltinOutCallExprModel> _31526_m) {
	static__1ab3600e9_optimize(&((*(_31526_m))._field_Expr));
}



inline void _1ab363d45_outlnCall(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab116158_BuiltinOutlnCallExprModel> _31928_m) {
	static__1ab3600e9_optimize(&((*(_31928_m))._field_Expr));
}



inline void _1ab3640ed_panicCall(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab11690b_BuiltinPanicCallExprModel> _32328_m) {
	static__1ab3600e9_optimize(&((*(_32328_m))._field_Expr));
}



inline void _1ab3643a6_assertCall(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab116db2_BuiltinAssertCallExprModel> _32729_m) {
	static__1ab3600e9_optimize(&((*(_32729_m))._field_Expr));
}



inline void _1ab36465e_errorCall(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab1189b8_BuiltinErrorCallExprModel> _33128_m) {
	static__1ab3600e9_optimize(&((*((*(_33128_m))._field_Err))._field_Model));
}



inline void _1ab364917_makeCall(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab117368_BuiltinMakeCallExprModel> _33527_m) {
	if (((*(_33527_m))._field_Len != nullptr)) {
		static__1ab3600e9_optimize(&((*(_33527_m))._field_Len));
	};
	if (((*(_33527_m))._field_Cap != nullptr)) {
		static__1ab3600e9_optimize(&((*(_33527_m))._field_Cap));
	};
}



inline void _1ab364bc0_appendCall(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab117742_BuiltinAppendCallExprModel> _34429_m) {
	static__1ab3600e9_optimize(&((*(_34429_m))._field_Dest));
	static__1ab3600e9_optimize(&((*(_34429_m))._field_Elements));
}



inline void _1ab364e78_lenCall(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab117a3e_BuiltinLenCallExprModel> _34926_m) {
	static__1ab3600e9_optimize(&((*((*(_34926_m))._field_Expr))._field_Model));
}



inline void _1ab365231_capCall(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab117d3b_BuiltinCapCallExprModel> _35326_m) {
	static__1ab3600e9_optimize(&((*((*(_35326_m))._field_Expr))._field_Model));
}



inline void _1ab3654d9_deleteCall(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab118215_BuiltinDeleteCallExprModel> _35729_m) {
	static__1ab3600e9_optimize(&((*((*(_35729_m))._field_Dest))._field_Model));
	if (((*(_35729_m))._field_Key != nullptr)) {
		static__1ab3600e9_optimize(&((*((*(_35729_m))._field_Key))._field_Model));
	};
}



inline void _1ab365792_sizeof(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab114574_SizeofExprModel> _36425_m) {
	static__1ab3600e9_optimize(&((*(_36425_m))._field_Expr));
}



inline void _1ab365a4a_alignof(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab1191e4_AlignofExprModel> _36826_m) {
	static__1ab3600e9_optimize(&((*(_36826_m))._field_Expr));
}



inline void _1ab365d03_integratedToStr(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab1197dd_IntegratedToStrExprModel> _37234_m) {
	static__1ab3600e9_optimize(&((*(_37234_m))._field_Expr));
}



inline void _1ab3660ab_free(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab119eb4_FreeExprModel> _37623_m) {
	static__1ab3600e9_optimize(&((*(_37623_m))._field_Expr));
}



inline void _1ab366364_backendEmit(_1ab35ea55_exprOptimizer* _self_, jule::Ptr<_1ab119bb7_BackendEmitExprModel> _38030_m) {
	_1ab36156d_args(_self_, &((*(_38030_m))._field_Exprs));
}



inline void _1ab366562_do(_1ab35ea55_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1bd172eb6:;
			{
				_1ab3606e3_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1101a7_BinopExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bd17302c:;
			{
				_1ab36099b_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab110581_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bd173093:;
			{
				_1ab360c54_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab110e55_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bd17311a:;
			{
				_1ab36100c_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab111252_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1bd173192:;
			{
				_1ab3612b5_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1117d5_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bd173219:;
			{
				_1ab361ace_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab112187_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bd173291:;
			{
				_1ab361d87_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab112561_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1bd173318:;
			{
				_1ab362140_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1155a8_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bd173390:;
			{
				_1ab3623e8_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab112a17_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bd173417:;
			{
				_1ab3626a1_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab112de1_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bd17348e:;
			{
				_1ab362959_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab113771_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bd173516:;
			{
				_1ab362c12_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab113d04_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bd17358d:;
			{
				_1ab362eba_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab114387_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bd173615:;
			{
				_1ab363273_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab114c28_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1bd17368c:;
			{
				_1ab36352b_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1158a5_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bd173714:;
			{
				_1ab363a8c_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab115c7e_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1bd17378b:;
			{
				_1ab363d45_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab116158_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1bd173813:;
			{
				_1ab3637d4_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab116532_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1bd17388a:;
			{
				_1ab3640ed_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab11690b_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1bd173912:;
			{
				_1ab3643a6_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab116db2_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bd173989:;
			{
				_1ab36465e_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1189b8_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1bd173a11:;
			{
				_1ab364917_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab117368_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bd173a88:;
			{
				_1ab364bc0_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab117742_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1bd173b10:;
			{
				_1ab364e78_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab117a3e_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1bd173b87:;
			{
				_1ab365231_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab117d3b_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1bd173c0e:;
			{
				_1ab3654d9_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab118215_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1bd173c86:;
			{
				_1ab365792_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab114574_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1bd173d0d:;
			{
				_1ab365a4a_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1191e4_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1bd173d85:;
			{
				_1ab365d03_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1197dd_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1bd173e0c:;
			{
				_1ab3660ab_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab119eb4_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bd173e84:;
			{
				_1ab366364_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab119bb7_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1bd172c1e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab35ea55_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1acb44657_Optimizer> static__1acb44aca_New(jule::Ptr<_1ac9c51db_IR>* _2624_ir) {
	return jule::new_ptr<_1acb44657_Optimizer>(_1acb44657_Optimizer{._field_ir=(*(_2624_ir))});;
}



inline void _1acb44d83_optimizeGlobal(_1acb44657_Optimizer* _self_, jule::Ptr<_1ab1c7a66_Var>* _3238_v) {
	if ((!((*((*(_3238_v))))._field_Binded))) {
		static__1ab3600e9_optimize(&((*((*((*((*(_3238_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1acb4513b_optimizeFunction(_1acb44657_Optimizer* _self_, jule::Ptr<_1ab11cdeb_Fn>* _3840_func) {
	if ((*((*(_3840_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3840_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd188152:;
		if (it != expr_end) {
			jule::Ptr<_1ab120d00_FnIns> _4221_ins = *it;
			{
				jule::Ptr<_1ab3588c8_scopeOptimizer> _4317_so = static__1ab358e17_new((*(_4221_ins))._field_Scope);;
				_1ab35c7ab_optimize(_4317_so.ptr());
			}
			_iter_next_1bd188152:;
			++it;
			goto _iter_begin_1bd188152;
		}
		_iter_end_1bd188152:;
	};
}



inline void _1acb453e4_optimizeStruct(_1acb44657_Optimizer* _self_, jule::Ptr<_1ab10803a_Struct>* _4838_s) {
	if ((*((*(_4838_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4838_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd188b14:;
		if (it != expr_end) {
			jule::Ptr<_1ab10acb8_StructIns> _5221_ins = *it;
			{
				{
					auto expr = &((*(_5221_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd18a220:;
					if (it != expr_end) {
						jule::Ptr<_1ab10a218_FieldIns> _5325_f = *it;
						{
							if (((*(_5325_f))._field_Default != nullptr)) {
								static__1ab3600e9_optimize(&((*((*(_5325_f))._field_Default))._field_Model));
							};
						}
						_iter_next_1bd18a220:;
						++it;
						goto _iter_begin_1bd18a220;
					}
					_iter_end_1bd18a220:;
				};
				{
					auto expr = &((*(_5221_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd18b6d8:;
					if (it != expr_end) {
						jule::Ptr<_1ab11cdeb_Fn> _5825_m = *it;
						{
							_1acb4513b_optimizeFunction(_self_, &(_5825_m));
						}
						_iter_next_1bd18b6d8:;
						++it;
						goto _iter_begin_1bd18b6d8;
					}
					_iter_end_1bd18b6d8:;
				};
			}
			_iter_next_1bd188b14:;
			++it;
			goto _iter_begin_1bd188b14;
		}
		_iter_end_1bd188b14:;
	};
}



inline void _1acb4569c_optimizeGlobals(_1acb44657_Optimizer* _self_, jule::Ptr<_1ab187b14_Package>* _6439_p) {
	{
		auto expr = &((*((*(_6439_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd18ba3a:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _6521_f = *it;
			{
				{
					auto expr = &((*(_6521_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd18c7c7:;
					if (it != expr_end) {
						jule::Ptr<_1ab1c7a66_Var> _6625_v = *it;
						{
							_1acb44d83_optimizeGlobal(_self_, &(_6625_v));
						}
						_iter_next_1bd18c7c7:;
						++it;
						goto _iter_begin_1bd18c7c7;
					}
					_iter_end_1bd18c7c7:;
				};
			}
			_iter_next_1bd18ba3a:;
			++it;
			goto _iter_begin_1bd18ba3a;
		}
		_iter_end_1bd18ba3a:;
	};
}



inline void _1acb45955_optimizeFunctions(_1acb44657_Optimizer* _self_, jule::Ptr<_1ab187b14_Package>* _7241_p) {
	{
		auto expr = &((*((*(_7241_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd18ce8c:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _7321_f = *it;
			{
				{
					auto expr = &((*(_7321_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd18dc18:;
					if (it != expr_end) {
						jule::Ptr<_1ab11cdeb_Fn> _7425_func = *it;
						{
							_1acb4513b_optimizeFunction(_self_, &(_7425_func));
						}
						_iter_next_1bd18dc18:;
						++it;
						goto _iter_begin_1bd18dc18;
					}
					_iter_end_1bd18dc18:;
				};
			}
			_iter_next_1bd18ce8c:;
			++it;
			goto _iter_begin_1bd18ce8c;
		}
		_iter_end_1bd18ce8c:;
	};
}



inline void _1acb45c0d_optimizeStructs(_1acb44657_Optimizer* _self_, jule::Ptr<_1ab187b14_Package>* _8039_p) {
	{
		auto expr = &((*((*(_8039_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd18e3cd:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _8121_f = *it;
			{
				{
					auto expr = &((*(_8121_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd190159:;
					if (it != expr_end) {
						jule::Ptr<_1ab10803a_Struct> _8225_s = *it;
						{
							_1acb453e4_optimizeStruct(_self_, &(_8225_s));
						}
						_iter_next_1bd190159:;
						++it;
						goto _iter_begin_1bd190159;
					}
					_iter_end_1bd190159:;
				};
			}
			_iter_next_1bd18e3cd:;
			++it;
			goto _iter_begin_1bd18e3cd;
		}
		_iter_end_1bd18e3cd:;
	};
}



inline void _1acb45eb6_optimizePackage(_1acb44657_Optimizer* _self_, jule::Ptr<_1ab187b14_Package>* _8839_p) {
	_1acb4569c_optimizeGlobals(_self_, _8839_p);
	_1acb45955_optimizeFunctions(_self_, _8839_p);
	_1acb45c0d_optimizeStructs(_self_, _8839_p);
}



inline void _1acb461b4_Optimize(_1acb44657_Optimizer* _self_) {
	_1acb46439_detectEnabled();
	if (_1ab367882_Deadcode) {
		_1acb36935_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1acb44448_scopeEnabled || _1acb4413a_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd191c60:;
			if (it != expr_end) {
				jule::Ptr<_1ab184bdd_ImportInfo> _10425_u = *it;
				{
					if ((!((*(_10425_u))._field_Binded))) {
						_1acb45eb6_optimizePackage(_self_, &((*(_10425_u))._field_Package));
					};
				}
				_iter_next_1bd191c60:;
				++it;
				goto _iter_begin_1bd191c60;
			}
			_iter_end_1bd191c60:;
		};
		_1acb45eb6_optimizePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	};
	if (_1ab367882_Deadcode) {
		_1acb3bece_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1acb44657_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1acb6b66d_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__1acb6c96b_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1acb6b66d_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1acb6c77e_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1acb6e176_LogFlat(_1d7b81cb8_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1acb6e3a7_LogError(_1d7b81cb8_Log* _1925_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1acb6b66d_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1d8bbea91_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1d8bbea91_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3617_line = _1d7ac5888_TrimLeft((*(_1925_l))._field_Line, jule::Str::lit("\r\n\v\b ", 5));;
		jule::I64 _3717_offset = (((*(_1925_l))._field_Line.len() - _3617_line.len()) + 1LL);;
		jule::I64 _3817_oldLen = _3617_line.len();;
		_3617_line=_1d7ac5888_TrimLeft(_3617_line, jule::Str::lit("\t", 1));
		if ((_3817_oldLen != _3617_line.len())) {
			_3717_offset+=((_3817_oldLen - _3617_line.len()) << 3LLU);
		};
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _4413_row = _1d8bbea91_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4413_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_3617_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_1d7abd144_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(_4413_row.len())));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_1d7abd144_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(((*(_1925_l))._field_Column - _3717_offset))));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_1d7abd144_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(_4413_row.len())));
			jule::out(jule::Str::lit(" | ", 3));
			static__1acb6c96b_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__1acb6e5d8_Log(_1d7b81cb8_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1bd19ed39:;
			{
				static__1acb6e176_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1bd19edb1:;
			{
				static__1acb6e3a7_LogError(_6520_l);
			}
		}
		_match_end_1bd19e92c:;
	};
}



inline void static__1acb6e819_PrintLogs(jule::Slice<_1d7b81cb8_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd19aa5a:;
		if (it != expr_end) {
			_1d7b81cb8_Log *_7616_l = it;
			{
				static__1acb6e5d8_Log(_7616_l);
			}
			_iter_next_1bd19aa5a:;
			++it;
			goto _iter_begin_1bd19aa5a;
		}
		_iter_end_1bd19aa5a:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_1d8bbea91_Itoa(static_cast<jule::I64>((*(_7526_logs)).len())));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1acb6ddac_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad2c4c3d_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1ad2c5414_Time static__1ad2c57bb_Unix(jule::U64 _9120_sec) {
	return _1ad2c5414_Time{._field_sec=_9120_sec};;
}



inline _1ad2c5414_Time static__1ad2c59ca_Now(void) {
	return static__1ad2c57bb_Unix(static_cast<jule::U64>(_1ad2c7504_unix()));;
}



inline _1ad2c4c3d_AbsTime _1ad2c71b3_Abs(_1ad2c5414_Time* _self_) {
	jule::U64 _1279_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12813_days = (_1279_secs / 86400LLU);;
	jule::U64 _12913_remSecs = (_1279_secs % 86400LL);;
	if ((_12913_remSecs < 0LLU)) {
		_12913_remSecs+=86400LLU;
		(_12813_days)--;
	};
	jule::U64 _13513_qcCycles = (_12813_days / 146097LLU);;
	jule::U64 _13613_remDays = (_12813_days % 146097LL);;
	if ((_13613_remDays < 0LLU)) {
		_13613_remDays+=146097LLU;
		(_13513_qcCycles)--;
	};
	jule::U64 _14213_cCycles = (_13613_remDays / 36524LLU);;
	if ((_14213_cCycles == 4LLU)) {
		(_14213_cCycles)--;
	};
	_13613_remDays-=(_14213_cCycles * 36524LLU);
	jule::U64 _14813_qCycles = (_13613_remDays / 1461LLU);;
	if ((_14813_qCycles == 25LLU)) {
		(_14813_qCycles)--;
	};
	_13613_remDays-=(_14813_qCycles * 1461LLU);
	jule::U64 _15413_remYears = (_13613_remDays / 365LLU);;
	if ((_15413_remYears == 4LLU)) {
		(_15413_remYears)--;
	};
	_13613_remDays-=(_15413_remYears * 365LLU);
	jule::U64 _16013_leap = static_cast<jule::U64>(0LLU);;
	if (((_15413_remYears == 0LLU) && ((_14813_qCycles > 0LLU) || (_14213_cCycles == 0LLU)))) {
		_16013_leap=1LLU;
	};
	jule::U64 _16413_yDay = (((_13613_remDays + 31LLU) + 28LLU) + _16013_leap);;
	if ((_16413_yDay >= (365LLU + _16013_leap))) {
		_16413_yDay-=(365LLU + _16013_leap);
	};
	jule::U64 _16913_months = static_cast<jule::U64>(0LLU);;
	for (; (_1ad2c4215_mdays[static_cast<jule::I64>(_16913_months)] <= _13613_remDays); (_16913_months)++) {
		{
			_13613_remDays-=_1ad2c4215_mdays[static_cast<jule::I64>(_16913_months)];
		}
	_iter_next_1bd1d41ae:;
	}
	_iter_end_1bd1d41ae:;;
	_1ad2c4c3d_AbsTime _17413_t = _1ad2c4c3d_AbsTime{};;
	_17413_t._field_Year=static_cast<jule::U64>(((((_15413_remYears + (4LLU * _14813_qCycles)) + (100LLU * _14213_cCycles)) + (400LLU * _13513_qcCycles)) + 100LLU));
	_17413_t._field_Month=static_cast<jule::U64>((_16913_months + 2LLU));
	if ((_17413_t._field_Month >= 12LLU)) {
		_17413_t._field_Month-=12LLU;
		(_17413_t._field_Year)++;
	};
	_17413_t._field_Month+=1LLU;
	_17413_t._field_Year+=1900LLU;
	_17413_t._field_Day=static_cast<jule::U64>((_13613_remDays + 1LLU));
	_17413_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12813_days) % 7LL));
	if ((_17413_t._field_WeekDay < 0LLU)) {
		_17413_t._field_WeekDay+=7LLU;
	};
	_17413_t._field_YearDay=_16413_yDay;
	_17413_t._field_Hour=static_cast<jule::U64>((_12913_remSecs / 3600LLU));
	_17413_t._field_Minute=static_cast<jule::U64>(((_12913_remSecs / 60LLU) % 60LL));
	_17413_t._field_Second=static_cast<jule::U64>((_12913_remSecs % 60LL));
	return _17413_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad2c5414_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad1ed53a_scopeCoder> static__1ad1edb56_new(jule::Ptr<_1ad2ce8b3_ObjectCoder>* _6524_oc) {
	return jule::new_ptr<_1ad1ed53a_scopeCoder>(_1ad1ed53a_scopeCoder{._field_oc=(*(_6524_oc))});;
}



inline void _1bd2732a3_iterHead(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab1655e7_RangeIter>* _7232_it, jule::Bool* _7244_ref, jule::Str* _7256_begin) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad2d0265_addIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1ab367574_Copy && _1ad204b90_isCopyOptimizable(&((*((*(_7232_it))))._field_Expr)))) {
		(*(_7244_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_7232_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1bd27499c:;
				{
					jule::Ptr<_1ab1c7a66_Var> _8117_v = (*((*((*(_7232_it))))._field_Expr))._field_Model.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8);;
					if ((*(_8117_v))._field_Reference) {
						_1ad214a18_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7232_it))))._field_Expr))._field_Model);
						goto _match_end_1bd276c9b;
					};
					goto _case_begin_1bd276d01;
				}
			}
			else {
				_case_begin_1bd276d01:;
				{
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1ad214a18_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7232_it))))._field_Expr))._field_Model);
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1bd276c9b:;
		};
	} else {
		_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7232_it))))._field_Expr))._field_Model);
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_7244_ref))) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_7244_ref))) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, (*(_7256_begin)));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1ad2d0265_addIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
}



inline void _1ad1ee32c_rangeIndexIter(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab1655e7_RangeIter>* _12139_it) {
	jule::Str _1229_begin = static__1ad21d2e6_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12139_it)))));;
	jule::Str _1239_next = static__1ad21d879_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12139_it)))));;
	jule::Bool _12513_ref = false;;
	_1bd2732a3_iterHead(_self_, _12139_it, &(_12513_ref), &(_1229_begin));
	if (((*((*(_12139_it))))._field_KeyA != nullptr)) {
		_1ad2d7932_varInitExpr((*(_self_))._field_oc, &((*((*(_12139_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12513_ref) {
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
			} else {
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
			};
		}));
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ad2d0661_indent((*(_self_))._field_oc);
	};
	if (((*((*(_12139_it))))._field_KeyB != nullptr)) {
		(*((*((*(_12139_it))))._field_KeyB))._field_Reference=(_1ab367574_Copy && _1ad205058_isIterCopyOptimizable(&((*((*(_12139_it))))._field_Expr), &((*((*(_12139_it))))._field_KeyB)));
		_1ad2d7932_varInitExpr((*(_self_))._field_oc, &((*((*(_12139_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*((*((*(_12139_it))))._field_KeyB))._field_Reference) {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				} else {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("*it", 3));
				};
			};
		}));
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ad2d0661_indent((*(_self_))._field_oc);
	};
	_1ad20451e_scope(_self_, (*((*(_12139_it))))._field_Scope);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, _1239_next);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1ad2d0661_indent((*(_self_))._field_oc);
	if (((*((*(_12139_it))))._field_KeyA != nullptr)) {
		_1ad2d0067_write((*(_self_))._field_oc, static__1ad21d02c_var((*((*(_12139_it))))._field_KeyA));
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1ad2d0661_indent((*(_self_))._field_oc);
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1ad2d0067_write((*(_self_))._field_oc, _1229_begin);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ad2d0463_doneIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21d5b0_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12139_it))))));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ad2d0463_doneIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad1ee5d5_rangeHashmapIter(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab1655e7_RangeIter>* _18441_it) {
	jule::Str _1859_begin = static__1ad21d2e6_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18441_it)))));;
	jule::Str _1869_next = static__1ad21d879_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18441_it)))));;
	jule::Bool _18813_ref = false;;
	_1bd2732a3_iterHead(_self_, _18441_it, &(_18813_ref), &(_1859_begin));
	if (((*((*(_18441_it))))._field_KeyA != nullptr)) {
		_1ad2d7932_varInitExpr((*(_self_))._field_oc, &((*((*(_18441_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("it->first", 9));
		}));
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ad2d0661_indent((*(_self_))._field_oc);
	};
	if (((*((*(_18441_it))))._field_KeyB != nullptr)) {
		_1ad2d7932_varInitExpr((*(_self_))._field_oc, &((*((*(_18441_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("it->second", 10));
		}));
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ad2d0661_indent((*(_self_))._field_oc);
	};
	_1ad20451e_scope(_self_, (*((*(_18441_it))))._field_Scope);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, _1869_next);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1ad2d0067_write((*(_self_))._field_oc, _1859_begin);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ad2d0463_doneIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21d5b0_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18441_it))))));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ad2d0463_doneIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad1ee88d_ifCase(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab163bcd_If> _22730_i) {
	if (((*(_22730_i))._field_Expr != nullptr)) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_22730_i))._field_Expr);
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1ad20451e_scope(_self_, (*(_22730_i))._field_Scope);
}



inline void _1ad1eeb46_conditional(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab1643e8_Conditional> _23635_c) {
	jule::Bool _23713_writed = false;;
	{
		auto expr = &((*(_23635_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd2a53c3:;
		if (it != expr_end) {
			jule::Ptr<_1ab163bcd_If> _23821_elif = *it;
			{
				if ((_23821_elif == nullptr)) {
					goto _iter_next_1bd2a53c3;
				};
				if (_23713_writed) {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_23713_writed=true;
				_1ad1ee88d_ifCase(_self_, _23821_elif);
			}
			_iter_next_1bd2a53c3:;
			++it;
			goto _iter_begin_1bd2a53c3;
		}
		_iter_end_1bd2a53c3:;
	};
	if (((*(_23635_c))._field_Default != nullptr)) {
		if (_23713_writed) {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1ad20451e_scope(_self_, (*((*(_23635_c))._field_Default))._field_Scope);
	};
}



inline void _1ad1eedee_infIter(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab1646e5_InfIter> _25631_it) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1ad2d0265_addIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad20451e_scope(_self_, (*(_25631_it))._field_Scope);
	_1ad2d0463_doneIndent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21d879_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25631_it))));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21d5b0_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25631_it))));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1ad2001a7_whileIter(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab164b9b_WhileIter> _27333_it) {
	if ((((*(_27333_it))._field_Expr != nullptr) && ((*(_27333_it))._field_Next == nullptr))) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_27333_it))._field_Expr);
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(") {\n", 4));
	} else {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_27333_it))._field_Expr != nullptr)) {
			_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_27333_it))._field_Expr);
		};
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*(_27333_it))._field_Next != nullptr)) {
			_1ad203ead_st(_self_, (*(_27333_it))._field_Next);
		};
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(") {\n", 4));
	};
	_1ad2d0265_addIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad20451e_scope(_self_, (*(_27333_it))._field_Scope);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ad2d0463_doneIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21d879_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27333_it))));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21d5b0_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27333_it))));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1ad200460_rangeIter(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab1655e7_RangeIter> _30633_it) {
	{
		
		if ((_1ab25e1c4_Slc((*((*(_30633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd2b9a25:;
			{
				_1ad1ee32c_rangeIndexIter(_self_, &(_30633_it));
			}
		}
		else if ((_1ab25de3d_Arr((*((*(_30633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd2b96e5:;
			{
				_1ad1ee32c_rangeIndexIter(_self_, &(_30633_it));
			}
		}
		else if ((_1ab25ec0d_Map((*((*(_30633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd2b975b:;
			{
				_1ad1ee5d5_rangeHashmapIter(_self_, &(_30633_it));
			}
		}
		else {
			_case_begin_1bd2b967e:;
			{
				_1ad1ee32c_rangeIndexIter(_self_, &(_30633_it));
			}
		}
		_match_end_1bd2b95b3:;
	};
}



inline void _1ad200718_cont(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab16597c_ContSt> _31924_c) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21d879_iterNext((*(_31924_c))._field_It));
}



inline void _1ad2009c1_label(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab166153_Label> _32425_l) {
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21db43_label(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_32425_l))));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1ad200c79_gotoSt(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab16652c_GotoSt> _32926_gt) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21db43_label(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_32926_gt))._field_Label))));
}



inline void _1ad201032_postfix(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab166906_Postfix> _33431_p) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_33431_p))._field_Expr);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1ad2d0067_write((*(_self_))._field_oc, (*(_33431_p))._field_Op);
}



inline void _1ad2012da_assign(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab166dac_Assign> _34130_a) {
	_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34130_a))._field_L))._field_Model);
	_1ad2d0067_write((*(_self_))._field_oc, (*((*(_34130_a))._field_Op))._field_Kind);
	_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34130_a))._field_R))._field_Model);
}



inline void _1ad201593_mapLookupAssign(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab167286_MultiAssign>* _34740_a) {
	jule::Ptr<_1ab112a17_IndexingExprModel> _34813_iem = (*((*(_34740_a))))._field_R.cast_ptr<_1ab112a17_IndexingExprModel>(&__jule_any_type45);;
	_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34813_iem))._field_Expr))._field_Model);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".lookup(", 8));
	_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34813_iem))._field_Index))._field_Model);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_34740_a))))._field_L[0LL] != nullptr)) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_34740_a))))._field_L[0LL]))._field_Model);
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_34740_a))))._field_L[1LL] != nullptr)) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_34740_a))))._field_L[1LL]))._field_Model);
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad20184b_multiAssignTup(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab167286_MultiAssign>* _37039_a) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1ad2d0265_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1ab1158a5_TupleExprModel> _37413_tup = (*((*(_37039_a))))._field_R.cast_ptr<_1ab1158a5_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_37413_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd2d0376:;
		if (it != expr_end) {
			jule::I64 _37614_i = it - expr->begin();
			jule::Ptr<_1ab22a228_Data> _37621_r = *it;
			{
				_1ad2d0661_indent((*(_self_))._field_oc);
				jule::Ptr<_1ab22a228_Data> _37817_l = (*((*(_37039_a))))._field_L[_37614_i];;
				if ((_37817_l != nullptr)) {
					{
						auto &_match_expr{ (*(_37817_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1bd2d3016:;
							{
								jule::Ptr<_1ab1c7a66_Var> _38225_v = (*(_37817_l))._field_Model.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8);;
								if (((*(_38225_v))._field_Reference && (!(_1ab1c7deb_IsInitialized(_38225_v.ptr()))))) {
									_1ad2d0067_write((*(_self_))._field_oc, static__1ad21d02c_var(_38225_v));
									_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
									_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_37621_r))._field_Model);
									_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_37039_a))))._field_L[_37614_i]=nullptr;
									goto _iter_next_1bd2d0376;
								};
							}
						}
						_match_end_1bd2d2eb1:;
					};
					_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_37817_l))._field_Kind));
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					_1ad2d0067_write((*(_self_))._field_oc, static__1ad21b3c1_toOut(&(_1ad1ece0d_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37614_i))));
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_37621_r))._field_Model);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bd2d0376:;
			++it;
			_37614_i++;
			goto _iter_begin_1bd2d0376;
		}
		_iter_end_1bd2d0376:;
	};
	{
		auto expr = &((*((*(_37039_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd2d8e73:;
		if (it != expr_end) {
			jule::I64 _40314_i = it - expr->begin();
			jule::Ptr<_1ab22a228_Data> _40321_l = *it;
			{
				if ((_40321_l == nullptr)) {
					goto _iter_next_1bd2d8e73;
				};
				_1ad2d0661_indent((*(_self_))._field_oc);
				_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_40321_l))._field_Model);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1ad2d0067_write((*(_self_))._field_oc, static__1ad21b3c1_toOut(&(_1ad1ece0d_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40314_i))));
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bd2d8e73:;
			++it;
			_40314_i++;
			goto _iter_begin_1bd2d8e73;
		}
		_iter_end_1bd2d8e73:;
	};
	_1ad2d0463_doneIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ad201b04_multiAssignFn(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab167286_MultiAssign>* _41938_a) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1ad2d0265_addIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	jule::Ptr<_1ab112187_FnCallExprModel> _42413_f = (*((*(_41938_a))))._field_R.cast_ptr<_1ab112187_FnCallExprModel>(&__jule_any_type34);;
	_1ad2e99cc_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*((*(_42413_f))._field_Func))._field_Result));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_41938_a))))._field_R);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	{
		auto expr = &((*((*(_41938_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd2e2333:;
		if (it != expr_end) {
			jule::I64 _43014_i = it - expr->begin();
			jule::Ptr<_1ab22a228_Data> _43021_l = *it;
			{
				if ((_43021_l != nullptr)) {
					_1ad2d0661_indent((*(_self_))._field_oc);
					_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_43021_l))._field_Model);
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
					_1ad2d0067_write((*(_self_))._field_oc, _1d8bbea91_Itoa(_43014_i));
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				};
			}
			_iter_next_1bd2e2333:;
			++it;
			_43014_i++;
			goto _iter_begin_1bd2e2333;
		}
		_iter_end_1bd2e2333:;
	};
	_1ad2d0463_doneIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ad201dac_multiAssign(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab167286_MultiAssign> _44535_a) {
	{
		auto &_match_expr{ (*(_44535_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bd2e7646:;
			{
				_1ad201593_mapLookupAssign(_self_, &(_44535_a));
				return;;
			}
		}
		_match_end_1bd2e75e1:;
	};
	{
		auto &_match_expr{ (*(_44535_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1bd2e7adb:;
			{
				_1ad20184b_multiAssignTup(_self_, &(_44535_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bd2e72b1:;
			{
				_1ad201b04_multiAssignFn(_self_, &(_44535_a));
			}
		}
		else {
			_case_begin_1bd2e7a31:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:459:13"));;
			}
		}
		_match_end_1bd2e79cb:;
	};
}



inline jule::Fn<void(void)> _1ad2021ed_matchExpr(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab1678e6_Match> _46333_m) {
	if ((!(_1ab22aaec_IsConst((*(_46333_m))._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
		});;
	};
	if (((!(_1d8bd45ab_IsBool((*((*(_46333_m))._field_Expr))._field_Constant.ptr()))) || (!(_1d8bd1eb0_ReadBool((*((*(_46333_m))._field_Expr))._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_46333_m))._field_Expr))._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1ad202561_case(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab1678e6_Match> _47328_m, jule::Ptr<_1ab16852e_Case> _47343_c) {
	if ((((*(_47343_c))._field_Exprs.len() != 0LL) && (!((*(_47328_m))._field_Comptime)))) {
		if ((((*(_47328_m))._field_Cases.len() > 0LL) && ((*(_47328_m))._field_Cases[0LL] == _47343_c))) {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*(_47343_c))._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd2ee670:;
			if (it != expr_end) {
				jule::I64 _48018_i = it - expr->begin();
				jule::Ptr<_1ab22a228_Data> _48025_expr = *it;
				{
					{
						
						if ((!((*(_47328_m))._field_TypeMatch))) {
							_case_begin_1bd25443d:;
							{
								jule::Fn<void(void)> _48321_caseExpr = _1ad2021ed_matchExpr(_self_, _47328_m);;
								if (_1ab22ae3d_GoodOperand((*(_47328_m))._field_Expr.ptr(), &(_48025_expr))) {
									if ((_48321_caseExpr != nullptr)) {
										_48321_caseExpr();
										_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
									};
									_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_48025_expr))._field_Model);
								} else {
									_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_48025_expr))._field_Model);
									if ((_48321_caseExpr != nullptr)) {
										_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_48321_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1bd301155:;
							{
								_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1ab25aa1c_TypeKind> _49925_tk = (*(_48025_expr))._field_Model.cast_ptr<_1ab25aa1c_TypeKind>(&__jule_any_type83);;
								if ((_1ab25e977_Trait((*((*(_47328_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1ad2080d3_boolean((*((*(_self_))._field_oc))._field_ec, (_1ab25d404_Sptr((*(_48025_expr))._field_Kind.ptr()) != nullptr));
									_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									_1ad2d0067_write((*(_self_))._field_oc, _1d8bbea91_Itoa(static_cast<jule::I64>(_1ad2d1b4b_findTypeOffset((*(_self_))._field_oc.ptr(), _1ab25e977_Trait((*((*(_47328_m))._field_Expr))._field_Kind.ptr()), (*(_48025_expr))._field_Kind))));
									_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _50725_j = _1ad2d0ce3_pushAnyType((*(_self_))._field_oc, _49925_tk);;
									_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1ad2d0067_write((*(_self_))._field_oc, _1d8bbea91_Itoa(_50725_j));
								};
							}
						}
						_match_end_1bd301089:;
					};
					if ((((*(_47343_c))._field_Exprs.len() - _48018_i) > 1LL)) {
						_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1bd2ee670:;
				++it;
				_48018_i++;
				goto _iter_begin_1bd2ee670;
			}
			_iter_end_1bd2ee670:;
		};
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_47328_m))._field_Default == _47343_c) && ((*(_47328_m))._field_Cases.len() != 0LL))) {
		_1ad2d0661_indent((*(_self_))._field_oc);
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1ad2d0265_addIndent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21e1c6_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_47343_c))));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_47343_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1ad2d0661_indent((*(_self_))._field_oc);
		_1ad20451e_scope(_self_, (*(_47343_c))._field_Scope);
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1ad2d0463_doneIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad202819_matchSt(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab1678e6_Match> _54131_m) {
	if ((((*(_54131_m))._field_Cases.len() == 0LL) && ((*(_54131_m))._field_Default == nullptr))) {
		return;;
	};
	if (((*(_54131_m))._field_Comptime && (((*(_54131_m))._field_Default == nullptr) || ((*((*((*(_54131_m))._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad2d0265_addIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	if (((!((*(_54131_m))._field_Comptime)) && (!(_1ab22aaec_IsConst((*(_54131_m))._field_Expr.ptr()))))) {
		if ((_1ab367574_Copy && _1ad204b90_isCopyOptimizable(&((*(_54131_m))._field_Expr)))) {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_54131_m))._field_Expr))._field_Model);
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1ad2d0661_indent((*(_self_))._field_oc);
	};
	if (((*(_54131_m))._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*(_54131_m))._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd32055e:;
			if (it != expr_end) {
				jule::Ptr<_1ab16852e_Case> _56925_c = *it;
				{
					if ((_56925_c == nullptr)) {
						goto _iter_next_1bd32055e;
					};
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1ad2d0661_indent((*(_self_))._field_oc);
					_1ad202561_case(_self_, _54131_m, _56925_c);
				}
				_iter_next_1bd32055e:;
				++it;
				goto _iter_begin_1bd32055e;
			}
			_iter_end_1bd32055e:;
		};
	};
	if (((*(_54131_m))._field_Default != nullptr)) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ad202561_case(_self_, _54131_m, (*(_54131_m))._field_Default);
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21de0c_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_54131_m))));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ad2d0463_doneIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad202ac2_fallSt(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab168b28_FallSt> _59626_f) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21e1c6_caseBegin((*(_59626_f))._field_DestCase));
}



inline void _1ad202d7a_breakSt(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab165d56_BreakSt> _60127_b) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_60127_b))._field_It != 0LLU)) {
		_1ad2d0067_write((*(_self_))._field_oc, static__1ad21d5b0_iterEnd((*(_60127_b))._field_It));
	} else {
		_1ad2d0067_write((*(_self_))._field_oc, static__1ad21de0c_matchEnd((*(_60127_b))._field_Mtch));
	};
}



inline void _1ad203133_setResult(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab168ead_RetSt> _61033_r) {
	if (((*((*((*((*(_61033_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_61033_r))._field_Expr);
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1ad2d0661_indent((*(_self_))._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1ab22a228_Data>> _61813_datas = (*((*(_61033_r))._field_Expr.cast_ptr<_1ab1158a5_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
	{
		auto expr = &(_61813_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd32d57d:;
		if (it != expr_end) {
			jule::I64 _61913_i = it - expr->begin();
			jule::Ptr<_1ab22a228_Data> _61916_data = *it;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1ad2d0067_write((*(_self_))._field_oc, _1d8bbea91_Itoa(_61913_i));
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_61916_data))._field_Model);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				_1ad2d0661_indent((*(_self_))._field_oc);
			}
			_iter_next_1bd32d57d:;
			++it;
			_61913_i++;
			goto _iter_begin_1bd32d57d;
		}
		_iter_end_1bd32d57d:;
	};
}



inline void _1ad2033db_retSt(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab168ead_RetSt> _62929_r) {
	if (_1ab11d36e_IsVoid((*((*(_62929_r))._field_Func))._field_Decl.ptr())) {
		if ((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Exceptional) {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional();", 31));
			return;;
		};
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Exceptional) {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*(_62929_r))._field_Func))._field_Result));
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(), ", 15));
			_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_62929_r))._field_Expr);
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
		} else {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_62929_r))._field_Expr);
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_62929_r))._field_Expr != nullptr)) {
		_1ad203133_setResult(_self_, _62929_r);
	};
	if ((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Exceptional) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1ad2e99cc_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*((*(_62929_r))._field_Func))._field_Result));
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1ad203694_var(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab1c7a66_Var> _66527_v) {
	if ((!((*(_66527_v))._field_Constant))) {
		_1ad2d7bda_var((*(_self_))._field_oc, _66527_v);
	};
}



inline void _1ad20394c_mutSlicing(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab35682c_MutSlicingExprModel> _67134_m) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67134_m))._field_Expr);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_2014c4290_Production))) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1ad2d2267_locInfo((*(_self_))._field_oc, &((*(_67134_m))._field_Token));
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67134_m))._field_Left);
	if (((*(_67134_m))._field_Right != nullptr)) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67134_m))._field_Right);
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1ad203c05_swap(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab355551_SwapExprModel> _68828_m) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_68828_m))._field_Left))._field_Model);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ad20a9ed_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_68828_m))._field_Right))._field_Model);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad203ead_st(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Any _69726_st) {
	if ((_69726_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _69726_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bd348004:;
			{
				_1ad20451e_scope(_self_, _69726_st.cast_ptr<_1ab1637b0_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd348a93:;
			{
				_1ad203694_var(_self_, _69726_st.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bd348b09:;
			{
				_1ad214a18_model((*((*(_self_))._field_oc))._field_ec, (*(_69726_st.cast_ptr<_1ab22a228_Data>(&__jule_any_type24)))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bd348b70:;
			{
				_1ad1eeb46_conditional(_self_, _69726_st.cast_ptr<_1ab1643e8_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bd348bd6:;
			{
				_1ad1eedee_infIter(_self_, _69726_st.cast_ptr<_1ab1646e5_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1bd348c4c:;
			{
				_1ad2001a7_whileIter(_self_, _69726_st.cast_ptr<_1ab164b9b_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bd348cb3:;
			{
				_1ad200460_rangeIter(_self_, _69726_st.cast_ptr<_1ab1655e7_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1bd348d29:;
			{
				_1ad200718_cont(_self_, _69726_st.cast_ptr<_1ab16597c_ContSt>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1bd348d90:;
			{
				_1ad2009c1_label(_self_, _69726_st.cast_ptr<_1ab166153_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bd348e06:;
			{
				_1ad200c79_gotoSt(_self_, _69726_st.cast_ptr<_1ab16652c_GotoSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1bd348e6c:;
			{
				_1ad201032_postfix(_self_, _69726_st.cast_ptr<_1ab166906_Postfix>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1bd348ed3:;
			{
				_1ad2012da_assign(_self_, _69726_st.cast_ptr<_1ab166dac_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1bd349049:;
			{
				_1ad201dac_multiAssign(_self_, _69726_st.cast_ptr<_1ab167286_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bd3490b0:;
			{
				_1ad202819_matchSt(_self_, _69726_st.cast_ptr<_1ab1678e6_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1bd349137:;
			{
				_1ad202ac2_fallSt(_self_, _69726_st.cast_ptr<_1ab168b28_FallSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1bd3491ae:;
			{
				_1ad202d7a_breakSt(_self_, _69726_st.cast_ptr<_1ab165d56_BreakSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1bd349236:;
			{
				_1ad2033db_retSt(_self_, _69726_st.cast_ptr<_1ab168ead_RetSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1bd3492ad:;
			{
				_1ad2127a2_pushToSlice((*((*(_self_))._field_oc))._field_ec, _69726_st.cast_ptr<_1ab357355_PushToSliceExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1bd349335:;
			{
				_1ad212a5a_appendToSlice((*((*(_self_))._field_oc))._field_ec, _69726_st.cast_ptr<_1ab35772e_AppendToSliceExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1bd3493ac:;
			{
				_1ad20394c_mutSlicing(_self_, _69726_st.cast_ptr<_1ab35682c_MutSlicingExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1bd349434:;
			{
				_1ad203c05_swap(_self_, _69726_st.cast_ptr<_1ab355551_SwapExprModel>(&__jule_any_type123));
			}
		}
		else {
			_case_begin_1bd3480ae:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1bd347b5d:;
	};
}



inline void _1ad204266_scopeStmts(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab1637b0_Scope>* _74935_s) {
	{
		auto expr = &((*((*(_74935_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd34a963:;
		if (it != expr_end) {
			jule::Any _75021_st = *it;
			{
				_1ad2d0661_indent((*(_self_))._field_oc);
				_1ad203ead_st(_self_, _75021_st);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bd34a963:;
			++it;
			goto _iter_begin_1bd34a963;
		}
		_iter_end_1bd34a963:;
	};
}



inline void _1ad20451e_scope(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab1637b0_Scope> _75829_s) {
	_1ad2d0265_addIndent((*(_self_))._field_oc);
	if ((*(_75829_s))._field_Deferred) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad204266_scopeStmts(_self_, &(_75829_s));
	_1ad2d0463_doneIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*(_75829_s))._field_Deferred) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1ad2047c7_funcScope(jule::Ptr<_1ad1ed53a_scopeCoder> _self_, jule::Ptr<_1ab120d00_FnIns> _77433_f) {
	if (((*(_77433_f))._field_Scope == nullptr)) {
		return;;
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad2d0265_addIndent((*(_self_))._field_oc);
	if ((!(_1ab11d36e_IsVoid((*(_77433_f))._field_Decl.ptr())))) {
		jule::Ptr<_1ab2686d9_Tuple> _78117_tup = _1ab25ee94_Tup((*(_77433_f))._field_Result.ptr());;
		if ((_78117_tup != nullptr)) {
			_1ad2d0661_indent((*(_self_))._field_oc);
			_1ad2e9306_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), _78117_tup);
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*(_78117_tup))._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bd35e603:;
				if (it != expr_end) {
					jule::I64 _78622_i = it - expr->begin();
					jule::Ptr<_1ab25aa1c_TypeKind> _78629_t = *it;
					{
						if (_1ad2ebdca_shouldInitialized(&(_78629_t))) {
							_1ad2d0661_indent((*(_self_))._field_oc);
							_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1ad2d0067_write((*(_self_))._field_oc, _1d8bbea91_Itoa(_78622_i));
							_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1ad214cc1_initExpr((*((*(_self_))._field_oc))._field_ec, _78629_t);
							_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1bd35e603:;
					++it;
					_78622_i++;
					goto _iter_begin_1bd35e603;
				}
				_iter_end_1bd35e603:;
			};
		} else if (((*((*((*(_77433_f))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
			_1ad2d0661_indent((*(_self_))._field_oc);
			_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_77433_f))._field_Result));
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1ad2ebdca_shouldInitialized(&((*(_77433_f))._field_Result))) {
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1ad214cc1_initExpr((*((*(_self_))._field_oc))._field_ec, (*(_77433_f))._field_Result);
			};
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1ad204266_scopeStmts(_self_, &((*(_77433_f))._field_Scope));
	if (((*((*(_77433_f))._field_Decl))._field_Exceptional && _1ab11d36e_IsVoid((*(_77433_f))._field_Decl.ptr()))) {
		_1ad2d0661_indent((*(_self_))._field_oc);
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional();\n", 32));
	};
	_1ad2d0463_doneIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1ad1ed53a_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad2076a9_exprCoder> static__1ad207a72_new(jule::Ptr<_1ad2ce8b3_ObjectCoder>* _10524_oc) {
	return jule::new_ptr<_1ad2076a9_exprCoder>(_1ad2076a9_exprCoder{._field_oc=(*(_10524_oc))});;
}



inline void _1ad207d2a_string(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1d8bd00bd_Const>* _11127_c) {
	jule::Str _1129_content = _1d8bd2246_ReadStr((*(_11127_c)).ptr());;
	if ((_1129_content.len() == 0LL)) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1179_len = _1d8bbe7c7_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_1129_content.len())), 10LL);;
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1ad215ab3_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), _1129_content);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ad2d0067_write((*(_self_))._field_oc, _1179_len);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad2080d3_boolean(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Bool _12627_b) {
	if (_12627_b) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1ad2082d1_nilLit(jule::Ptr<_1ad2076a9_exprCoder> _self_) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1ad208622_ftoaSpecialCases(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::F64* _13837_x) {
	{
		
		if (_1d8b7334c_IsNaN((*(_13837_x)))) {
			_case_begin_1bd384381:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1d8b73957_IsInf((*(_13837_x)), 1LL)) {
			_case_begin_1bd384408:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1d8b73957_IsInf((*(_13837_x)), -1LL)) {
			_case_begin_1bd384480:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1bd3842a4:;
			{
				return false;;
			}
		}
		_match_end_1bd3841d8:;
	};
	return true;;
}



inline void _1ad2088ca_float32(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1d8bd00bd_Const>* _15228_c) {
	jule::F64 _1539_x = _1d8bd2c80_AsF64((*(_15228_c)).ptr());;
	if (_1ad208622_ftoaSpecialCases(_self_, &(_1539_x))) {
		return;;
	};
	{
		
		if ((_1539_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1bd38785c:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1539_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1bd3875a4:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1bd38753d:;
			{
				_1ad215e59_ftoa(&((*((*(_self_))._field_oc))._field_Obj), _1539_x, 32LL);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1bd38730c:;
	};
}



inline void _1ad208b83_float64(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1d8bd00bd_Const>* _17128_c) {
	jule::F64 _1729_x = _1d8bd2c80_AsF64((*(_17128_c)).ptr());;
	if (_1ad208622_ftoaSpecialCases(_self_, &(_1729_x))) {
		return;;
	};
	{
		
		if ((_1729_x == jule::MAX_F64)) {
			_case_begin_1bd38ac6c:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1729_x == jule::MIN_F64)) {
			_case_begin_1bd38b4ed:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1bd38a94d:;
			{
				_1ad215e59_ftoa(&((*((*(_self_))._field_oc))._field_Obj), _1729_x, 64LL);
			}
		}
		_match_end_1bd38a71c:;
	};
}



inline void _1ad208e3b_constant(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1d8bd00bd_Const> _18932_c) {
	{
		
		if (_1d8bd4842_IsStr(_18932_c.ptr())) {
			_case_begin_1bd38d137:;
			{
				_1ad207d2a_string(_self_, &(_18932_c));
			}
		}
		else if (_1d8bd45ab_IsBool(_18932_c.ptr())) {
			_case_begin_1bd38cc2a:;
			{
				_1ad2080d3_boolean(_self_, _1d8bd1eb0_ReadBool(_18932_c.ptr()));
			}
		}
		else if (_1d8bd4ac8_IsF64(_18932_c.ptr())) {
			_case_begin_1bd38cca2:;
			{
				{
					
					if ((*(_18932_c))._field_Kind.equal("f32", 3)) {
						_case_begin_1bd3907dd:;
						{
							_1ad2088ca_float32(_self_, &(_18932_c));
						}
					}
					else {
						_case_begin_1bd390359:;
						{
							_1ad208b83_float64(_self_, &(_18932_c));
						}
					}
					_match_end_1bd39029e:;
				};
			}
		}
		else if (_1d8bd408e_IsI64(_18932_c.ptr())) {
			_case_begin_1bd38cd29:;
			{
				_1ad216245_itoa(&((*((*(_self_))._field_oc))._field_Obj), static_cast<jule::I64>(_1d8bd1993_ReadI64(_18932_c.ptr())));
			}
		}
		else if (_1d8bd4325_IsU64(_18932_c.ptr())) {
			_case_begin_1bd38cda1:;
			{
				_1ad216531_utoa(&((*((*(_self_))._field_oc))._field_Obj), static_cast<jule::U64>(_1d8bd1c29_ReadU64(_18932_c.ptr())));
			}
		}
		else if (_1d8bd4d5e_IsNil(_18932_c.ptr())) {
			_case_begin_1bd38d7db:;
			{
				_1ad2082d1_nilLit(_self_);
			}
		}
		else {
			_case_begin_1bd38cba3:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1bd38cad7:;
	};
}



inline void _1ad209359_divByZeroBinary(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab0c1e7c_Token>* _21336_op, jule::Ptr<_1ab10ebac_OperandExprModel>* _21353_l, jule::Ptr<_1ab10ebac_OperandExprModel>* _21380_r) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_21336_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1bd3944c3:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1bd39454a:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_1bd39445c:;
	};
	if ((!(_2014c4290_Production))) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1ad2d2267_locInfo((*(_self_))._field_oc, _21336_op);
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\",", 2));
	};
	_1ad20a9ed_possibleRefExpr(_self_, (*((*(_21353_l))))._field_Model);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1ad20a9ed_possibleRefExpr(_self_, (*((*(_21380_r))))._field_Model);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad209612_unsafeBinary(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab1101a7_BinopExprModel> _23536_m) {
	if ((((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)))) {
		if (_1ad216e8d_isAny(&((*((*(_23536_m))._field_Left))._field_Kind))) {
			if (((!(_1ab25baea_IsNil((*((*(_23536_m))._field_Right))._field_Kind.ptr()))) && (!(_1ad216e8d_isAny(&((*((*(_23536_m))._field_Right))._field_Kind)))))) {
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				if (((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU))) {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
				};
				jule::I64 _24521_i = _1ad2d0ce3_pushAnyType((*(_self_))._field_oc, (*((*(_23536_m))._field_Right))._field_Kind);;
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("__jule_any_type", 15));
				_1ad2d0067_write((*(_self_))._field_oc, _1d8bbea91_Itoa(_24521_i));
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("_compare(", 9));
				_1ad20a9ed_possibleRefExpr(_self_, (*((*(_23536_m))._field_Left))._field_Model);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1ad20a9ed_possibleRefExpr(_self_, (*((*(_23536_m))._field_Right))._field_Model);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			};
		};
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad20a9ed_possibleRefExpr(_self_, (*((*(_23536_m))._field_Left))._field_Model);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ad2d0067_write((*(_self_))._field_oc, (*((*(_23536_m))._field_Op))._field_Kind);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ad20a9ed_possibleRefExpr(_self_, (*((*(_23536_m))._field_Right))._field_Model);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad2098ba_binary(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab1101a7_BinopExprModel> _26630_m) {
	{
		auto &_match_expr{ (*((*(_26630_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bd3a54c3:;
			{
				if ((_1ab25e6e1_Struct((*((*(_26630_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1ad209359_divByZeroBinary(_self_, &((*(_26630_m))._field_Op), &((*(_26630_m))._field_Left), &((*(_26630_m))._field_Right));
					return;;
				};
			}
		}
		_match_end_1bd3a5418:;
	};
	_1ad209612_unsafeBinary(_self_, _26630_m);
}



inline void _1ad209b73_var(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab1c7a66_Var> _27827_m) {
	if ((*(_27827_m))._field_Binded) {
		jule::Ptr<_1ab0d6865_Directive> _28013_d = _1ad2eb748_findDirective(&((*(_27827_m))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_28013_d != nullptr)) {
			_1ad2d0067_write((*(_self_))._field_oc, _1ad2dbb56_concatAllParts((*(_28013_d))._field_Args));
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21d02c_var(_27827_m));
}



inline void _1ad209e2b_structureIns(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab10acb8_StructIns> _28936_m) {
	_1ad2d0067_write((*(_self_))._field_oc, _1ad2e30be_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), _28936_m));
}



inline void _1ad20a1d4_unary(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab110581_UnaryExprModel> _29329_m) {
	{
		auto &_match_expr{ (*((*(_29329_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bd3ab6a5:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_1ad20a9ed_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bd3ab72c:;
			{
				if ((_2014c4290_Production || (_1ab25d404_Sptr((*((*(_29329_m))._field_Expr))._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1bd3ab5d9;
				};
				_1ad20a9ed_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".get(\"", 6));
				_1ad2d2267_locInfo((*(_self_))._field_oc, &((*(_29329_m))._field_Op));
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1bd3ab5d9:;
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad2d0067_write((*(_self_))._field_oc, (*((*(_29329_m))._field_Op))._field_Kind);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad20a9ed_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1ad20a48c_structureLit(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab110e55_StructLitExprModel> _31736_m) {
	if ((*((*((*(_31736_m))._field_Strct))._field_Decl))._field_Binded) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21c999_structureIns(&((*(_31736_m))._field_Strct)));
	if ((*((*((*(_31736_m))._field_Strct))._field_Decl))._field_Binded) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	if (((*(_31736_m))._field_Args.len() > 0LL)) {
		_julec_label_1bd3b64e5:;
		{
			auto expr = &((*((*(_31736_m))._field_Strct))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd3b6627:;
			if (it != expr_end) {
				jule::I64 _33017_i = it - expr->begin();
				jule::Ptr<_1ab10a218_FieldIns> _33020_f = *it;
				{
					{
						auto expr = &((*(_31736_m))._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bd3b74a2:;
						if (it != expr_end) {
							jule::Ptr<_1ab110aae_StructArgExprModel> _33129_arg = *it;
							{
								if (((*(_33129_arg))._field_Field == _33020_f)) {
									_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
									_1ad2d0067_write((*(_self_))._field_oc, static__1ad21cc63_field(&((*((*(_33129_arg))._field_Field))._field_Decl)));
									_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
									_1ad20a9ed_possibleRefExpr(_self_, (*((*(_33129_arg))._field_Expr))._field_Model);
									if ((((*((*(_31736_m))._field_Strct))._field_Fields.len() - _33017_i) > 1LL)) {
										_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									};
									goto _iter_next_1bd3b6627;
								};
							}
							_iter_next_1bd3b74a2:;
							++it;
							goto _iter_begin_1bd3b74a2;
						}
						_iter_end_1bd3b74a2:;
					};
				}
				_iter_next_1bd3b6627:;
				++it;
				_33017_i++;
				goto _iter_begin_1bd3b6627;
			}
			_iter_end_1bd3b6627:;
		};
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad20a745_allocStructure(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab111252_AllocStructLitExprModel> _34838_m) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21c999_structureIns(&((*((*(_34838_m))._field_Lit))._field_Strct)));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1ad20a48c_structureLit(_self_, (*(_34838_m))._field_Lit);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad20a9ed_possibleRefExpr(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Any _35635_expr) {
	{
		auto &_match_expr{ _35635_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd3beb6e:;
			{
				jule::Ptr<_1ab1c7a66_Var> _35913_v = _35635_expr.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8);;
				if ((*(_35913_v))._field_Reference) {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1ad214a18_model(_self_, _35635_expr);
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1bd3beb19:;
	};
	_1ad214a18_model(_self_, _35635_expr);
}



inline void _1ad20ae1b_castTraitFromTrait(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab1117d5_CastingExprModel>* _37043_m, jule::Ptr<_1ab131195_Trait> _37069_t1, jule::Ptr<_1ab131195_Trait> _37085_t2) {
	_1ad20a9ed_possibleRefExpr(_self_, (*((*(_37043_m))))._field_Expr);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".mask<", 6));
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21c14c_traitDecl(_37069_t1));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1ad2d1eae_pushAndWriteMaskMapper((*(_self_))._field_oc, _37069_t1, _37085_t2);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad20b1c4_casting(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab1117d5_CastingExprModel> _38531_m) {
	{
		
		if (_1ad216e8d_isAny(&((*(_38531_m))._field_Kind))) {
			_case_begin_1bd3c51c4:;
			{
				if (_1ab25baea_IsNil((*(_38531_m))._field_ExprKind.ptr())) {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1ab25dba7_TypeEnum((*(_38531_m))._field_ExprKind.ptr()) != nullptr)) {
					_1ad20a9ed_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
					return;;
				};
				jule::I64 _39613_i = _1ad2d0ce3_pushAnyType((*(_self_))._field_oc, (*(_38531_m))._field_ExprKind);;
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*(_38531_m))._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1bd3c8260:;
						{
							jule::Ptr<_1ab2635e6_Prim> _40017_prim = _1ab25d16d_Prim((*(_38531_m))._field_ExprKind.ptr());;
							if (((_40017_prim != nullptr) && _1d8bce3b9_IsInt((*(_40017_prim))._field_Kind))) {
								_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1ad2d0067_write((*(_self_))._field_oc, _1ad2e0341_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _40017_prim));
								_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1ad20a9ed_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
								_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1bd3c8aac;
							};
							goto _case_begin_1bd3c8b12;
						}
					}
					else {
						_case_begin_1bd3c8b12:;
						{
							_1ad20a9ed_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
						}
					}
					_match_end_1bd3c8aac:;
				};
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1ad2d0067_write((*(_self_))._field_oc, _1d8bbea91_Itoa(_39613_i));
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1ad216e8d_isAny(&((*(_38531_m))._field_ExprKind))) {
			_case_begin_1bd3c524b:;
			{
				_1ad20a9ed_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_1ab25d404_Sptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_1ab25d404_Sptr((*(_38531_m))._field_Kind.ptr())))._field_Elem));
				} else {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38531_m))._field_Kind));
				};
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_2014c4290_Production))) {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ad2d2267_locInfo((*(_self_))._field_oc, &((*(_38531_m))._field_Token));
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1ad2d0067_write((*(_self_))._field_oc, _1d8bbea91_Itoa(static_cast<jule::I64>(_1ad2d0ce3_pushAnyType((*(_self_))._field_oc, (*(_38531_m))._field_Kind))));
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1ab25d68a_Ptr((*(_38531_m))._field_ExprKind.ptr()) != nullptr) || (_1ab25d68a_Ptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd3c52c3:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38531_m))._field_Kind));
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1ad20a9ed_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1ab25e977_Trait((*(_38531_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1bd3c534a:;
			{
				if ((_1ab25e977_Trait((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_1ad20ae1b_castTraitFromTrait(_self_, &(_38531_m), _1ab25e977_Trait((*(_38531_m))._field_Kind.ptr()), _1ab25e977_Trait((*(_38531_m))._field_ExprKind.ptr()));
					return;;
				};
				_1ad20a9ed_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_1ab25d404_Sptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_1ab25d404_Sptr((*(_38531_m))._field_Kind.ptr())))._field_Elem));
				} else {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38531_m))._field_Kind));
				};
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_2014c4290_Production))) {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ad2d2267_locInfo((*(_self_))._field_oc, &((*(_38531_m))._field_Token));
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ad2d0067_write((*(_self_))._field_oc, _1d8bbea91_Itoa(static_cast<jule::I64>(_1ad2d1b4b_findTypeOffset((*(_self_))._field_oc.ptr(), _1ab25e977_Trait((*(_38531_m))._field_ExprKind.ptr()), (*(_38531_m))._field_Kind))));
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1ab25e977_Trait((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd3c53c2:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38531_m))._field_Kind));
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1ad20a9ed_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1ad2d0067_write((*(_self_))._field_oc, _1d8bbea91_Itoa(static_cast<jule::I64>(_1ad2d1b4b_findTypeOffset((*(_self_))._field_oc.ptr(), _1ab25e977_Trait((*(_38531_m))._field_Kind.ptr()), (*(_38531_m))._field_ExprKind))));
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1bd3c5081:;
	};
	jule::Ptr<_1ab2635e6_Prim> _4779_prim = _1ab25d16d_Prim((*(_38531_m))._field_Kind.ptr());;
	jule::Ptr<_1ab2635e6_Prim> _4789_eprim = _1ab25d16d_Prim((*(_38531_m))._field_ExprKind.ptr());;
	if ((((_4789_eprim != nullptr) && (_4779_prim != nullptr)) && _1ab266a7d_IsStr(_4779_prim.ptr()))) {
		if (_1ab264edd_IsU8(_4789_eprim.ptr())) {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_1ad20a9ed_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38531_m))._field_Kind));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1ad20a9ed_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad20b47c_models(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Slice<jule::Any> _49630_args) {
	if ((_49630_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_49630_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd400980:;
		if (it != expr_end) {
			jule::I64 _50014_i = it - expr->begin();
			jule::Any _50021_a = *it;
			{
				_1ad20a9ed_possibleRefExpr(_self_, _50021_a);
				if (((_49630_args.len() - _50014_i) > 1LL)) {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
				};
			}
			_iter_next_1bd400980:;
			++it;
			_50014_i++;
			goto _iter_begin_1bd400980;
		}
		_iter_end_1bd400980:;
	};
}



inline void _1ad20b735_args(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab112187_FnCallExprModel>* _50829_m) {
	jule::I64 _50913_j = 0LL;;
	if (((((*((*((*(_50829_m))))._field_Func))._field_Owner != nullptr) && (!((*((*((*((*(_50829_m))))._field_Func))._field_Decl))._field_Statically))) || (((*((*((*(_50829_m))))._field_Func))._field_Params.len() > 0LL) && _1ab11ba43_IsSelf((*((*((*((*(_50829_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_50913_j)++;
	};
	{
		auto expr = &((*((*(_50829_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd403785:;
		if (it != expr_end) {
			jule::I64 _51413_i = it - expr->begin();
			jule::Any _51416_arg = *it;
			{
				jule::Ptr<_1ab11ed54_ParamIns> _51513_p = (*((*((*(_50829_m))))._field_Func))._field_Params[_50913_j];;
				if ((((*(_51513_p))._field_Decl != nullptr) && (*((*(_51513_p))._field_Decl))._field_Reference)) {
					{
						auto &_match_expr{ _51416_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1bd406403:;
							{
								jule::Ptr<_1ab1c7a66_Var> _51921_v = _51416_arg.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8);;
								if ((*(_51921_v))._field_Reference) {
									_1ad214a18_model(_self_, _51416_arg);
									goto _julec_label_1bd409736;
								};
							}
						}
						_match_end_1bd40639d:;
					};
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1ad214a18_model(_self_, _51416_arg);
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1bd409736;
				};
				_1ad20a9ed_possibleRefExpr(_self_, _51416_arg);
				_julec_label_1bd409736:;
				if ((((*((*(_50829_m))))._field_Args.len() - _51413_i) > 1LL)) {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_50913_j)++;
			}
			_iter_next_1bd403785:;
			++it;
			_51413_i++;
			goto _iter_begin_1bd403785;
		}
		_iter_end_1bd403785:;
	};
}



inline void _1ad20b9dd_modelForCall(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Any _53936_expr) {
	{
		auto &_match_expr{ _53936_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd40b0d9:;
			{
				_1ad20ec22_funcIns(_self_, _53936_expr.cast_ptr<_1ab120d00_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bd40b161:;
			{
				jule::Ptr<_1ab114c28_StructSubIdentExprModel> _54517_ssie = _53936_expr.cast_ptr<_1ab114c28_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_54517_ssie))._field_Method != nullptr)) {
					_1ad20ec22_funcIns(_self_, (*(_54517_ssie))._field_Method);
					return;;
				};
			}
		}
		_match_end_1bd40b073:;
	};
	_1ad20a9ed_possibleRefExpr(_self_, _53936_expr);
}



inline void _1ad20bc96_pushCallInf(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab112187_FnCallExprModel>* _55432_m) {
	if ((_2014c4290_Production || (!((*((*((*(_55432_m))))._field_Func))._field_Anon)))) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*((*((*(_55432_m))))._field_Func))._field_Anon) {
		{
			auto &_match_expr{ (*((*(_55432_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1bd40e906:;
				{
					if ((*((*((*((*((*((*(_55432_m))))._field_Expr.cast_ptr<_1ab114c28_StructSubIdentExprModel>(&__jule_any_type97)))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1bd40e8a1:;
		};
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1ad2d2267_locInfo((*(_self_))._field_oc, &((*((*(_55432_m))))._field_Token));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_55432_m))))._field_Args.len() != 0LL)) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1ad20c0d7_isWrapped(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab112187_FnCallExprModel>* _57734_m) {
	if ((((!(_1ab122285_IsBuiltin((*((*(_57734_m))))._field_Func.ptr()))) && ((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _1ab11ba43_IsSelf((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_57734_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1bd414697:;
				{
					jule::Ptr<_1ab114c28_StructSubIdentExprModel> _58121_ssie = (*((*(_57734_m))))._field_Expr.cast_ptr<_1ab114c28_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_1ab11bcc9_IsRef((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1ab25d404_Sptr((*((*(_58121_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1bd416138:;
							{
								goto _match_end_1bd4153ce;
							}
						}
						else {
							_case_begin_1bd415445:;
							{
								if ((_1ab25e6e1_Struct((*((*(_58121_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*((*(_58121_ssie))._field_Expr))._field_Lvalue))) {
										_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1ad214a18_model(_self_, (*((*(_58121_ssie))._field_Expr))._field_Model);
										_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1bd4153ce:;
					};
				}
			}
			_match_end_1bd414642:;
		};
	};
	return false;;
}



inline void _1ad20c390_pureFuncCall(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab112187_FnCallExprModel>* _60137_m) {
	jule::Bool _6029_wrapped = _1ad20c0d7_isWrapped(_self_, _60137_m);;
	_1ad20b9dd_modelForCall(_self_, (*((*(_60137_m))))._field_Expr);
	if ((!(_1ab122285_IsBuiltin((*((*(_60137_m))))._field_Func.ptr())))) {
		if (((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Binded && ((*((*((*(_60137_m))))._field_Func))._field_Generics.len() > 0LL))) {
			if ((!(_1ad2ebb11_hasDirective(&((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Directives), jule::Str::lit("cdef", 4))))) {
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*((*((*(_60137_m))))._field_Func))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd41c4a2:;
					if (it != expr_end) {
						jule::I64 _60826_i = it - expr->begin();
						jule::Ptr<_1ab259136_InsGeneric> _60833_g = *it;
						{
							_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_60833_g))._field_Kind));
							if ((((*((*((*(_60137_m))))._field_Func))._field_Generics.len() - _60826_i) > 1LL)) {
								_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1bd41c4a2:;
						++it;
						_60826_i++;
						goto _iter_begin_1bd41c4a2;
					}
					_iter_end_1bd41c4a2:;
				};
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1ad20bc96_pushCallInf(_self_, _60137_m);
	jule::Bool _61913_locinfo = false;;
	if ((((!(_1ab122285_IsBuiltin((*((*(_60137_m))))._field_Func.ptr()))) && ((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _1ab11ba43_IsSelf((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_60137_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1bd422bb1:;
				{
					jule::Ptr<_1ab114c28_StructSubIdentExprModel> _62321_ssie = (*((*(_60137_m))))._field_Expr.cast_ptr<_1ab114c28_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_1ab11bcc9_IsRef((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1bd427226:;
							{
								_1ad20a9ed_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1ab110581_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
							}
						}
						else if ((_1ab25d404_Sptr((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1bd423a4c:;
							{
								_1ad20a9ed_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1ab110581_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
								if ((!(_2014c4290_Production))) {
									_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									_1ad2d2267_locInfo((*(_self_))._field_oc, &((*((*(_60137_m))))._field_Token));
									_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
								};
								_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1bd4239d6:;
							{
								if ((_1ab25e6e1_Struct((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_62321_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1bd4242ab:;
											{
												jule::Ptr<_1ab1c7a66_Var> _64229_v = (*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8);;
												if ((*(_64229_v))._field_Reference) {
													goto _match_end_1bd4247c8;
												};
												goto _case_begin_1bd42482d;
											}
										}
										else {
											_case_begin_1bd42482d:;
											{
												_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1bd4247c8:;
									};
								};
								if (_6029_wrapped) {
									_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1ab25d68a_Ptr((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) == nullptr)) {
									_1ad214a18_model(_self_, (*((*(_62321_ssie))._field_Expr))._field_Model);
								} else {
									_1ad20a9ed_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1ab110581_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1bd423970:;
					};
					if (((*((*(_60137_m))))._field_Args.len() > 0LL)) {
						_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1bd422c38:;
				{
					_1ad20a9ed_possibleRefExpr(_self_, (*((*((*(_60137_m))))._field_Expr.cast_ptr<_1ab114387_TraitSubIdentExprModel>(&__jule_any_type96)))._field_Expr);
					if ((!(_2014c4290_Production))) {
						_61913_locinfo=true;
					};
					if (((*((*(_60137_m))))._field_Args.len() > 0LL)) {
						_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1bd422b4a:;
		};
	};
	_1ad20b735_args(_self_, _60137_m);
	if (_61913_locinfo) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", \"", 3));
		_1ad2d2267_locInfo((*(_self_))._field_oc, &((*((*(_60137_m))))._field_Token));
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_6029_wrapped) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1ad20c648_coFuncCall(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab112187_FnCallExprModel>* _68735_m) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad2d0265_addIndent((*(_self_))._field_oc);
	_1d7ad2eb1_StrBuilder _69013_head = static__1d7ad327a_New(32LL);;
	_1d7adba8b_WriteStr(&_69013_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_68735_m))))._field_Func))._field_Owner != nullptr)) {
		_1d7adba8b_WriteStr(&_69013_head, jule::Str::lit("_self_", 6));
		if (((*((*(_68735_m))))._field_Args.len() > 0LL)) {
			_1d7adba8b_WriteStr(&_69013_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_68735_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd4382c0:;
		if (it != expr_end) {
			jule::I64 _69813_i = it - expr->begin();
			jule::Any _69816_arg = *it;
			{
				if ((_69813_i > 0LL)) {
					_1d7adba8b_WriteStr(&_69013_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _69816_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1bd4397ee:;
						{
							jule::Ptr<_1ab1c7a66_Var> _70421_v = _69816_arg.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8);;
							_1d7adba8b_WriteStr(&_69013_head, static__1ad21d02c_var(_70421_v));
							goto _iter_next_1bd4382c0;
						}
					}
					_match_end_1bd43905c:;
				};
				jule::Str _70813_name = (jule::Str::lit("_co_arg_", 8) + _1d8bbea91_Itoa(_69813_i));;
				_1d7adba8b_WriteStr(&_69013_head, _70813_name);
				_1ad2d0661_indent((*(_self_))._field_oc);
				_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*((*((*(_68735_m))))._field_Func))._field_Params[_69813_i]))._field_Kind));
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*((*((*(_68735_m))))._field_Func))._field_Params[_69813_i]))._field_Decl))._field_Reference) {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
				};
				_1ad2d0067_write((*(_self_))._field_oc, _70813_name);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1ad20a9ed_possibleRefExpr(_self_, _69816_arg);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _72013_argS = jule::Any(_70813_name, &__jule_any_type4);;
				(*((*(_68735_m))))._field_Args[_69813_i]=(*(((jule::Any*)((&(_72013_argS))))));
			}
			_iter_next_1bd4382c0:;
			++it;
			_69813_i++;
			goto _iter_begin_1bd4382c0;
		}
		_iter_end_1bd4382c0:;
	};
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1d7adb7d3_Write(&(*((*(_self_))._field_oc))._field_Obj, _1d7adcd34_Buf(&_69013_head));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1ad2d0265_addIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad20c390_pureFuncCall(_self_, _68735_m);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ad2d0463_doneIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1ad2d0463_doneIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad20c9ab_writeUseExpr(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab120d00_FnIns>* _73837_f, jule::Ptr<_1ab22a228_Data> _73852_d) {
	if ((_1ab25ee94_Tup((*(_73852_d))._field_Kind.ptr()) == nullptr)) {
		_1ad20a9ed_possibleRefExpr(_self_, (*(_73852_d))._field_Model);
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1ab1158a5_TupleExprModel> _74413_tup = (*(_73852_d))._field_Model.cast_ptr<_1ab1158a5_TupleExprModel>(&__jule_any_type81);;
	_1ad2e9306_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), _1ab25ee94_Tup((*((*(_73837_f))))._field_Result.ptr()));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*(_74413_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd445e8c:;
		if (it != expr_end) {
			jule::I64 _74713_i = it - expr->begin();
			jule::Ptr<_1ab22a228_Data> _74716_data = *it;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1ad2d0067_write((*(_self_))._field_oc, _1d8bbea91_Itoa(_74713_i));
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1ad20a9ed_possibleRefExpr(_self_, (*(_74716_data))._field_Model);
				if ((((*(_74413_tup))._field_Datas.len() - _74713_i) > 1LL)) {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1bd445e8c:;
			++it;
			_74713_i++;
			goto _iter_begin_1bd445e8c;
		}
		_iter_end_1bd445e8c:;
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1ad20cc64_funcCall(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab112187_FnCallExprModel> _75932_m) {
	if ((*(_75932_m))._field_IsCo) {
		_1ad20c648_coFuncCall(_self_, &(_75932_m));
		return;;
	};
	if (((_1ab122285_IsBuiltin((*(_75932_m))._field_Func.ptr()) || (!((*((*((*(_75932_m))._field_Func))._field_Decl))._field_Exceptional))) || (((*(_75932_m))._field_Except != nullptr) && ((*((*(_75932_m))._field_Except))._field_Stmts.len() == 0LL)))) {
		_1ad20c390_pureFuncCall(_self_, &(_75932_m));
		return;;
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1ad2d0265_addIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1ad20c390_pureFuncCall(_self_, &(_75932_m));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ad2d0661_indent((*(_self_))._field_oc);
	if (((*(_75932_m))._field_Except != nullptr)) {
		if ((((*((*(_75932_m))._field_Func))._field_Result == nullptr) || (!((*(_75932_m))._field_Assigned)))) {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1ad20451e_scope((*((*(_self_))._field_oc))._field_sc, (*(_75932_m))._field_Except);
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _78517_forwarded = _1ad21690a_isForwarded(&((*(_75932_m))._field_Except));;
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_78517_forwarded) {
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _79021_stmt = (*((*(_75932_m))._field_Except))._field_Stmts[((*((*(_75932_m))._field_Except))._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _79021_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1bd455ad4:;
					{
						(*((*(_75932_m))._field_Except))._field_Stmts=(*((*(_75932_m))._field_Except))._field_Stmts.slice(0LL, ((*((*(_75932_m))._field_Except))._field_Stmts.len() - 1LL));
						_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1ad2d0265_addIndent((*(_self_))._field_oc);
						_1ad204266_scopeStmts((*((*(_self_))._field_oc))._field_sc, &((*(_75932_m))._field_Except));
						_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1ad2d0661_indent((*(_self_))._field_oc);
						_1ad20c9ab_writeUseExpr(_self_, &((*(_75932_m))._field_Func), _79021_stmt.cast_ptr<_1ab22a228_Data>(&__jule_any_type24));
						_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1ad2d0463_doneIndent((*(_self_))._field_oc);
						_1ad2d0661_indent((*(_self_))._field_oc);
						_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1bd457971:;
					{
						_1ad20451e_scope((*((*(_self_))._field_oc))._field_sc, (*(_75932_m))._field_Except);
					}
				}
				_match_end_1bd45791b:;
			};
			if (_78517_forwarded) {
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1ad214cc1_initExpr(_self_, (*((*(_75932_m))._field_Func))._field_Result);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1ad2d0463_doneIndent((*(_self_))._field_oc);
	} else {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1ad2d2267_locInfo((*(_self_))._field_oc, &((*(_75932_m))._field_Token));
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1ab11d36e_IsVoid((*((*(_75932_m))._field_Func))._field_Decl.ptr())))) {
			_1ad2d0661_indent((*(_self_))._field_oc);
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1ad2d0463_doneIndent((*(_self_))._field_oc);
	};
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ad20d01c_slice(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab112561_SliceExprModel> _83029_m) {
	if (((*(_83029_m))._field_Elems.len() == 0LL)) {
		_1ad2d0067_write((*(_self_))._field_oc, _1ad2e1b28_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_83029_m))._field_ElemKind));
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1ad2d0067_write((*(_self_))._field_oc, _1ad2e1b28_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_83029_m))._field_ElemKind));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("::make({", 8));
	_1ad20b47c_models(_self_, (*(_83029_m))._field_Elems);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ad20d2c5_indexing(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab112a17_IndexingExprModel> _84232_m) {
	_1ad20a9ed_possibleRefExpr(_self_, (*((*(_84232_m))._field_Expr))._field_Model);
	{
		
		if (_2014c4290_Production || (_1ab25d68a_Ptr((*((*(_84232_m))._field_Expr))._field_Kind.ptr()) != nullptr) || (_1ab25ec0d_Map((*((*(_84232_m))._field_Expr))._field_Kind.ptr()) != nullptr) || _1ad216bc4_isExprComesFromBind(&((*(_84232_m))._field_Expr))) {
			_case_begin_1bca32711:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1ad20a9ed_possibleRefExpr(_self_, (*((*(_84232_m))._field_Index))._field_Model);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1bd4698d9:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1ad2d2267_locInfo((*(_self_))._field_oc, &((*(_84232_m))._field_Token));
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1ad20a9ed_possibleRefExpr(_self_, (*((*(_84232_m))._field_Index))._field_Model);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1bd469873:;
	};
}



inline void _1ad20d57d_unsafeIndexing(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab356e26_UnsafeIndexingExprModel> _86238_m) {
	_1ad20a9ed_possibleRefExpr(_self_, (*((*((*(_86238_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_2014c4290_Production || (_1ab25d68a_Ptr((*((*((*(_86238_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr) || (_1ab25ec0d_Map((*((*((*(_86238_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bbb19c39:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1ad20a9ed_possibleRefExpr(_self_, (*((*((*(_86238_m))._field_Node))._field_Index))._field_Model);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1bbb33956:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".__at(", 6));
				_1ad20a9ed_possibleRefExpr(_self_, (*((*((*(_86238_m))._field_Node))._field_Index))._field_Model);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1bbb33901:;
	};
}



inline void _1ad20d836_anonFunc(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab112de1_AnonFnExprModel> _87932_m) {
	_1ad2d0067_write((*(_self_))._field_oc, _1ad2e48c8_func((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_87932_m))._field_Func));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("([=]", 4));
	_1ad2d75be_paramsIns((*(_self_))._field_oc, &((*((*(_87932_m))._field_Func))._field_Params));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" mutable -> ", 12));
	_1ad2e4246_funcInsResult((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*(_87932_m))._field_Func));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ad2047c7_funcScope((*((*(_self_))._field_oc))._field_sc, (*(_87932_m))._field_Func);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad20dade_mapExpr(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab113771_MapExprModel> _89031_m) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_89031_m))._field_KeyKind));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_89031_m))._field_ValKind));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(">({", 3));
	if (((*(_89031_m))._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*(_89031_m))._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc622b5e:;
			if (it != expr_end) {
				jule::I64 _89718_i = it - expr->begin();
				jule::Ptr<_1ab1132ba_KeyValPairExprModel> _89725_pair = *it;
				{
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
					_1ad20a9ed_possibleRefExpr(_self_, (*(_89725_pair))._field_Key);
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					_1ad20a9ed_possibleRefExpr(_self_, (*(_89725_pair))._field_Val);
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					if ((((*(_89031_m))._field_Entries.len() - _89718_i) > 1LL)) {
						_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1bc622b5e:;
				++it;
				_89718_i++;
				goto _iter_begin_1bc622b5e;
			}
			_iter_end_1bc622b5e:;
		};
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ad20dd97_slicing(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab113d04_SlicingExprModel> _91131_m) {
	_1ad20a9ed_possibleRefExpr(_self_, (*(_91131_m))._field_Expr);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_2014c4290_Production))) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1ad2d2267_locInfo((*(_self_))._field_oc, &((*(_91131_m))._field_Token));
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1ad20a9ed_possibleRefExpr(_self_, (*(_91131_m))._field_Left);
	if (((*(_91131_m))._field_Right != nullptr)) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ad20a9ed_possibleRefExpr(_self_, (*(_91131_m))._field_Right);
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad20e150_traitSub(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab114387_TraitSubIdentExprModel> _92732_m) {
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21c14c_traitDecl((*(_92732_m))._field_Trt));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("[(", 2));
	_1ad20a9ed_possibleRefExpr(_self_, (*(_92732_m))._field_Expr);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(").type_offset].", 15));
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21bab9_func(&((*(_92732_m))._field_Method)));
}



inline void _1ad20e408_structureSub(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab114c28_StructSubIdentExprModel> _93636_m) {
	_1ad20a9ed_possibleRefExpr(_self_, (*((*(_93636_m))._field_Expr))._field_Model);
	if (((*(_93636_m))._field_Field == nullptr)) {
		return;;
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21cc63_field(&((*((*(_93636_m))._field_Field))._field_Decl)));
}



inline void _1ad20e6b1_array(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab1155a8_ArrayExprModel> _94529_m) {
	_1ad2d0067_write((*(_self_))._field_oc, _1ad2e3410_array((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_94529_m))._field_Kind));
	if (((*(_94529_m))._field_Elems.len() == 0LL)) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*(_94529_m))._field_Elems.len() == 2LL) && ((*(_94529_m))._field_Elems[1LL] == nullptr))) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1ad20a9ed_possibleRefExpr(_self_, (*(_94529_m))._field_Elems[0LL]);
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("({", 2));
	_1ad20b47c_models(_self_, (*(_94529_m))._field_Elems);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
	return;;
}



inline void _1ad20e969_funcInsCommon(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab120d00_FnIns> _96837_m) {
	_1ad2d0067_write((*(_self_))._field_oc, _1ad2e48c8_func((*((*(_self_))._field_oc))._field_tc.ptr(), _96837_m));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad20ec22_funcIns(_self_, _96837_m);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad20ec22_funcIns(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab120d00_FnIns> _97531_m) {
	if ((((*(_97531_m))._field_Decl != nullptr) && (*((*(_97531_m))._field_Decl))._field_Binded)) {
		jule::Ptr<_1ab0d6865_Directive> _97713_d = _1ad2eb748_findDirective(&((*((*(_97531_m))._field_Decl))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_97713_d != nullptr)) {
			_1ad2d0067_write((*(_self_))._field_oc, _1ad2dbb56_concatAllParts((*(_97713_d))._field_Args));
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21bd83_funcIns(&(_97531_m)));
}



inline void _1ad20eeca_tuple(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab1158a5_TupleExprModel> _98629_m) {
	{
		auto expr = &((*(_98629_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd48214e:;
		if (it != expr_end) {
			jule::I64 _98714_i = it - expr->begin();
			jule::Ptr<_1ab22a228_Data> _98721_d = *it;
			{
				_1ad20a9ed_possibleRefExpr(_self_, (*(_98721_d))._field_Model);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
				if ((((*(_98629_m))._field_Datas.len() - _98714_i) > 1LL)) {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1ad2d0661_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1bd48214e:;
			++it;
			_98714_i++;
			goto _iter_begin_1bd48214e;
		}
		_iter_end_1bd48214e:;
	};
}



inline void _1ad210283_newCall(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab116532_BuiltinNewCallExprModel> _99731_m) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_99731_m))._field_Kind));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*(_99731_m))._field_Init != nullptr)) {
		_1ad20a9ed_possibleRefExpr(_self_, (*(_99731_m))._field_Init);
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad21053b_outCall(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab115c7e_BuiltinOutCallExprModel> _100731_m) {
	if (((*(_100731_m))._field_Debug && _2014c4290_Production)) {
		return;;
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_1ad20a9ed_possibleRefExpr(_self_, (*(_100731_m))._field_Expr);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad2107e4_outlnCall(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab116158_BuiltinOutlnCallExprModel> _101633_m) {
	if (((*(_101633_m))._field_Debug && _2014c4290_Production)) {
		return;;
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_1ad20a9ed_possibleRefExpr(_self_, (*(_101633_m))._field_Expr);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad210a9c_panicCall(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab11690b_BuiltinPanicCallExprModel> _102533_m) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_1ad20a9ed_possibleRefExpr(_self_, (*(_102533_m))._field_Expr);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1ad2d2267_locInfo((*(_self_))._field_oc, &((*(_102533_m))._field_Token));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1ad210d55_assertCall(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab116db2_BuiltinAssertCallExprModel> _103334_m) {
	if (_2014c4290_Production) {
		return;;
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1ad20a9ed_possibleRefExpr(_self_, (*(_103334_m))._field_Expr);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_1ad215ab3_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), (*(_103334_m))._field_Log);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1ad2d2267_locInfo((*(_self_))._field_oc, &((*(_103334_m))._field_Token));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1ad21110d_errorCall(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab1189b8_BuiltinErrorCallExprModel> _104633_m) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1ab11d36e_IsVoid((*((*(_104633_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_104633_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1bd4939ce:;
				{
					jule::Ptr<_1ab1c7a66_Var> _105117_v = (*((*(_104633_m))._field_Err))._field_Model.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8);;
					if ((*(_105117_v))._field_Ident.equal("error", 5)) {
						_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1bd493979:;
		};
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1ad2e99cc_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*((*(_104633_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_104633_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1bd497d02:;
				{
					jule::Ptr<_1ab1c7a66_Var> _106317_v = (*((*(_104633_m))._field_Err))._field_Model.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8);;
					if ((*(_106317_v))._field_Ident.equal("error", 5)) {
						_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1bd497c9c:;
		};
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(", 12));
	};
	_1ad20a9ed_possibleRefExpr(_self_, (*((*(_104633_m))._field_Err))._field_Model);
	jule::I64 _10729_i = _1ad2d0ce3_pushAnyType((*(_self_))._field_oc, (*((*(_104633_m))._field_Err))._field_Kind);;
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1ad2d0067_write((*(_self_))._field_oc, _1d8bbea91_Itoa(_10729_i));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1ad2113b6_copyCall(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab1185de_BuiltinCopyCallExprModel> _107832_m) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::copy((", 12));
	_1ad20a9ed_possibleRefExpr(_self_, (*((*(_107832_m))._field_Dest))._field_Model);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_1ab25d16d_Prim((*((*(_107832_m))._field_Dest))._field_Kind.ptr()) != nullptr)) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", (", 3));
	_1ad20a9ed_possibleRefExpr(_self_, (*((*(_107832_m))._field_Src))._field_Model);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_1ab25d16d_Prim((*((*(_107832_m))._field_Src))._field_Kind.ptr()) != nullptr)) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad21166e_lenCall(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab117a3e_BuiltinLenCallExprModel> _109431_m) {
	_1ad20a9ed_possibleRefExpr(_self_, (*((*(_109431_m))._field_Expr))._field_Model);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1ad211927_capCall(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab117d3b_BuiltinCapCallExprModel> _109931_m) {
	_1ad20a9ed_possibleRefExpr(_self_, (*((*(_109931_m))._field_Expr))._field_Model);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1ad211bd0_deleteCall(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab118215_BuiltinDeleteCallExprModel> _110434_m) {
	_1ad20a9ed_possibleRefExpr(_self_, (*((*(_110434_m))._field_Dest))._field_Model);
	if (((*(_110434_m))._field_Key != nullptr)) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".del(", 5));
		_1ad20a9ed_possibleRefExpr(_self_, (*((*(_110434_m))._field_Key))._field_Model);
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _1ad211e88_makeCallSlice(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab117368_BuiltinMakeCallExprModel>* _111538_m) {
	jule::Ptr<_1ab267ae5_Slc> _111613_slice = _1ab25e1c4_Slc((*((*(_111538_m))))._field_Kind.ptr());;
	_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*(_111538_m))))._field_Kind));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1ad20a9ed_possibleRefExpr(_self_, (*((*(_111538_m))))._field_Len);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_111538_m))))._field_Cap != nullptr)) {
		_1ad20a9ed_possibleRefExpr(_self_, (*((*(_111538_m))))._field_Cap);
	} else {
		_1ad20a9ed_possibleRefExpr(_self_, (*((*(_111538_m))))._field_Len);
	};
	if (_1ad2ebdca_shouldInitialized(&((*(_111613_slice))._field_Elem))) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ad214cc1_initExpr(_self_, (*(_111613_slice))._field_Elem);
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad212241_makeCallStr(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab117368_BuiltinMakeCallExprModel>* _113336_m) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1ad20a9ed_possibleRefExpr(_self_, (*((*(_113336_m))))._field_Len);
	if (((*((*(_113336_m))))._field_Cap != nullptr)) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ad20a9ed_possibleRefExpr(_self_, (*((*(_113336_m))))._field_Cap);
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad2124e9_makeCall(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab117368_BuiltinMakeCallExprModel> _114432_m) {
	if ((_1ab25e1c4_Slc((*(_114432_m))._field_Kind.ptr()) != nullptr)) {
		_1ad211e88_makeCallSlice(_self_, &(_114432_m));
		return;;
	};
	_1ad212241_makeCallStr(_self_, &(_114432_m));
}



inline void _1ad2127a2_pushToSlice(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab357355_PushToSliceExprModel> _115235_m) {
	;
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1ad2d0067_write((*(_self_))._field_oc, _1ad2e1b28_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*(_115235_m))._field_Elems))._field_ElemKind));
	jule::Bool _116013_ptr = false;;
	{
		auto &_match_expr{ (*(_115235_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bd4b316e:;
			{
				jule::Ptr<_1ab110581_UnaryExprModel> _116417_u = (*(_115235_m))._field_Dest.cast_ptr<_1ab110581_UnaryExprModel>(&__jule_any_type110);;
				if ((_1ab25d68a_Ptr((*((*(_116417_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1ad20a9ed_possibleRefExpr(_self_, (*((*(_116417_u))._field_Expr))._field_Model);
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_116013_ptr=true;
					goto _match_end_1bd4b4deb;
				};
				goto _case_begin_1bd4b4e51;
			}
		}
		else {
			_case_begin_1bd4b4e51:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1ad20a9ed_possibleRefExpr(_self_, (*(_115235_m))._field_Dest);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1bd4b4deb:;
	};
	if (((*((*(_115235_m))._field_Elems))._field_Elems.len() == 1LL)) {
		if (_116013_ptr) {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1ad20a9ed_possibleRefExpr(_self_, (*((*(_115235_m))._field_Elems))._field_Elems[0LL]);
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_116013_ptr) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1ad2d0067_write((*(_self_))._field_oc, _1d8bbea91_Itoa(static_cast<jule::I64>((*((*(_115235_m))._field_Elems))._field_Elems.len())));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*((*(_115235_m))._field_Elems))._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd4bca2a:;
		if (it != expr_end) {
			jule::Any _119821_e = *it;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_116013_ptr) {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1ad20a9ed_possibleRefExpr(_self_, _119821_e);
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1bd4bca2a:;
			++it;
			goto _iter_begin_1bd4bca2a;
		}
		_iter_end_1bd4bca2a:;
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad212a5a_appendToSlice(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab35772e_AppendToSliceExprModel> _121237_m) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad20a9ed_possibleRefExpr(_self_, (*(_121237_m))._field_Dest);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1ad20a9ed_possibleRefExpr(_self_, (*(_121237_m))._field_Slice);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1ad212d13_appendCall(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab117742_BuiltinAppendCallExprModel> _122034_m) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1ad20a9ed_possibleRefExpr(_self_, (*(_122034_m))._field_Dest);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1ad20a9ed_possibleRefExpr(_self_, (*(_122034_m))._field_Elements);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad2130bb_sizeof(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab114574_SizeofExprModel> _122830_m) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1ad20a9ed_possibleRefExpr(_self_, (*(_122830_m))._field_Expr);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad213374_alignof(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab1191e4_AlignofExprModel> _123431_m) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1ad20a9ed_possibleRefExpr(_self_, (*(_123431_m))._field_Expr);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad21362c_runeLit(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab1194e1_RuneExprModel> _124027_m) {
	if (((*(_124027_m))._field_Code <= 127LL)) {
		_1d7adbd44_WriteByte(&(*((*(_self_))._field_oc))._field_Obj, '\'');
		jule::Str _124317_b = _1ad215497_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>((*(_124027_m))._field_Code)));;
		if (_124317_b.equal("'", 1)) {
			_1d7adbd44_WriteByte(&(*((*(_self_))._field_oc))._field_Obj, '\\');
		};
		_1d7adba8b_WriteStr(&(*((*(_self_))._field_oc))._field_Obj, _124317_b);
		_1d7adbd44_WriteByte(&(*((*(_self_))._field_oc))._field_Obj, '\'');
		return;;
	};
	_1ad216245_itoa(&((*((*(_self_))._field_oc))._field_Obj), static_cast<jule::I64>(static_cast<jule::I64>((*(_124027_m))._field_Code)));
}



inline void _1ad2138d5_structureStatic(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab1151ce_StructStaticIdentExprModel> _125439_m) {
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21bd83_funcIns(&((*(_125439_m))._field_Method)));
}



inline void _1ad213b8d_integratedToStr(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab1197dd_IntegratedToStrExprModel> _125839_m) {
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_1ad20a9ed_possibleRefExpr(_self_, (*(_125839_m))._field_Expr);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad213e46_backendEmit(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab119bb7_BackendEmitExprModel> _126435_m) {
	if (((*(_126435_m))._field_Exprs.len() == 0LL)) {
		_1ad2d0067_write((*(_self_))._field_oc, (*(_126435_m))._field_Code);
		return;;
	};
	jule::I64 _12699_n = _1d7adc817_Len(&(*((*(_self_))._field_oc))._field_Obj);;
	jule::Slice<jule::Any> _127013_args = jule::Slice<jule::Any>::alloc((*(_126435_m))._field_Exprs.len(), (*(_126435_m))._field_Exprs.len());;
	{
		auto expr = &((*(_126435_m))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd4d0488:;
		if (it != expr_end) {
			jule::I64 _127114_i = it - expr->begin();
			jule::Any _127121_expr = *it;
			{
				_1ad20a9ed_possibleRefExpr(_self_, _127121_expr);
				jule::Slice<jule::U8> _127317_buf = _1d7adcd34_Buf(&(*((*(_self_))._field_oc))._field_Obj);;
				_127013_args[_127114_i]=jule::Any(static_cast<jule::Str>(_127317_buf.slice(_12699_n)), &__jule_any_type4);
				{
					_1d7add0dc_SetBuf(&(*((*(_self_))._field_oc))._field_Obj, _127317_buf.slice(0LL, _12699_n));
				};
			}
			_iter_next_1bd4d0488:;
			++it;
			_127114_i++;
			goto _iter_begin_1bd4d0488;
		}
		_iter_end_1bd4d0488:;
	};
	_1ad2d0067_write((*(_self_))._field_oc, _1ab3421b9_Format((*(_126435_m))._field_Code, _127013_args));
}



inline void _1ad2141ee_free(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab119eb4_FreeExprModel> _128028_m) {
	_1ad20a9ed_possibleRefExpr(_self_, (*(_128028_m))._field_Expr);
	if (_2014c3aec_RC) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1ad2144a7_strComp(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab356299_StrCompExprModel> _128931_m) {
	if ((*(_128931_m))._field_NotEq) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _12939_s = _1d8bd2246_ReadStr((*(_128931_m))._field_Right.ptr());;
	_1ad20a9ed_possibleRefExpr(_self_, (*(_128931_m))._field_Left);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1ad215ab3_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), _12939_s);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ad2d0067_write((*(_self_))._field_oc, _1d8bbea91_Itoa(static_cast<jule::I64>(_12939_s.len())));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*(_128931_m))._field_NotEq) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1ad214760_emptyCompare(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab35596e_EmptyCompareExprModel> _130536_m) {
	if ((*(_130536_m))._field_Neg) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad20a9ed_possibleRefExpr(_self_, (*(_130536_m))._field_Expr);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1ad214a18_model(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Any _131429_m) {
	{
		auto &_match_expr{ _131429_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bd4dda90:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, _131429_m.cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1bd4dd52e:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _131429_m.cast_ptr<_1ab25aa1c_TypeKind>(&__jule_any_type83)));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bd4dd73d:;
			{
				_1ad208e3b_constant(_self_, _131429_m.cast_ptr<_1d8bd00bd_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd4dd7a4:;
			{
				_1ad209b73_var(_self_, _131429_m.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bd4dd82b:;
			{
				_1ad209e2b_structureIns(_self_, _131429_m.cast_ptr<_1ab10acb8_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd4dd8a3:;
			{
				_1ad20e969_funcInsCommon(_self_, _131429_m.cast_ptr<_1ab120d00_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1bd4de585:;
			{
				_1ad209612_unsafeBinary(_self_, (*(_131429_m.cast_ptr<_1ab356b29_UnsafeBinopExprModel>(&__jule_any_type126)))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1bd4de60c:;
			{
				_1ad2098ba_binary(_self_, _131429_m.cast_ptr<_1ab1101a7_BinopExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bd4de684:;
			{
				_1ad20a1d4_unary(_self_, _131429_m.cast_ptr<_1ab110581_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bd4de70b:;
			{
				_1ad20a48c_structureLit(_self_, _131429_m.cast_ptr<_1ab110e55_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bd4de783:;
			{
				_1ad20a745_allocStructure(_self_, _131429_m.cast_ptr<_1ab111252_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1bd4de80a:;
			{
				_1ad20b1c4_casting(_self_, _131429_m.cast_ptr<_1ab1117d5_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bd4de882:;
			{
				_1ad20cc64_funcCall(_self_, _131429_m.cast_ptr<_1ab112187_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bd4de909:;
			{
				_1ad20d01c_slice(_self_, _131429_m.cast_ptr<_1ab112561_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1bd4de981:;
			{
				_1ad20e6b1_array(_self_, _131429_m.cast_ptr<_1ab1155a8_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1bd4dea08:;
			{
				_1ad20d57d_unsafeIndexing(_self_, _131429_m.cast_ptr<_1ab356e26_UnsafeIndexingExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bd4dea80:;
			{
				_1ad20d2c5_indexing(_self_, _131429_m.cast_ptr<_1ab112a17_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bd4deb07:;
			{
				_1ad20d836_anonFunc(_self_, _131429_m.cast_ptr<_1ab112de1_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bd4deb7e:;
			{
				_1ad20dade_mapExpr(_self_, _131429_m.cast_ptr<_1ab113771_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bd4dec06:;
			{
				_1ad20dd97_slicing(_self_, _131429_m.cast_ptr<_1ab113d04_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bd4dec7d:;
			{
				_1ad20e150_traitSub(_self_, _131429_m.cast_ptr<_1ab114387_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bd4ded05:;
			{
				_1ad20e408_structureSub(_self_, _131429_m.cast_ptr<_1ab114c28_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1bd4ded7c:;
			{
				_1ad20eeca_tuple(_self_, _131429_m.cast_ptr<_1ab1158a5_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bd4dee04:;
			{
				_1ad21053b_outCall(_self_, _131429_m.cast_ptr<_1ab115c7e_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1bd4dee7b:;
			{
				_1ad2107e4_outlnCall(_self_, _131429_m.cast_ptr<_1ab116158_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1bd4e0003:;
			{
				_1ad210283_newCall(_self_, _131429_m.cast_ptr<_1ab116532_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1bd4e007a:;
			{
				_1ad210a9c_panicCall(_self_, _131429_m.cast_ptr<_1ab11690b_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1bd4e0102:;
			{
				_1ad210d55_assertCall(_self_, _131429_m.cast_ptr<_1ab116db2_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bd4e0179:;
			{
				_1ad21110d_errorCall(_self_, _131429_m.cast_ptr<_1ab1189b8_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1bd4e0201:;
			{
				_1ad2124e9_makeCall(_self_, _131429_m.cast_ptr<_1ab117368_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bd4e0278:;
			{
				_1ad212d13_appendCall(_self_, _131429_m.cast_ptr<_1ab117742_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1bd4e0300:;
			{
				_1ad2113b6_copyCall(_self_, _131429_m.cast_ptr<_1ab1185de_BuiltinCopyCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1bd4e0377:;
			{
				_1ad21166e_lenCall(_self_, _131429_m.cast_ptr<_1ab117a3e_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1bd4e03ee:;
			{
				_1ad211927_capCall(_self_, _131429_m.cast_ptr<_1ab117d3b_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1bd4e0476:;
			{
				_1ad211bd0_deleteCall(_self_, _131429_m.cast_ptr<_1ab118215_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1bd4e04ed:;
			{
				_1ad2130bb_sizeof(_self_, _131429_m.cast_ptr<_1ab114574_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1bd4e0575:;
			{
				_1ad213374_alignof(_self_, _131429_m.cast_ptr<_1ab1191e4_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1bd4e05ec:;
			{
				_1ad21362c_runeLit(_self_, _131429_m.cast_ptr<_1ab1194e1_RuneExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1bd4e0674:;
			{
				_1ad2138d5_structureStatic(_self_, _131429_m.cast_ptr<_1ab1151ce_StructStaticIdentExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1bd4e06eb:;
			{
				_1ad213b8d_integratedToStr(_self_, _131429_m.cast_ptr<_1ab1197dd_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bd4e0773:;
			{
				_1ad213e46_backendEmit(_self_, _131429_m.cast_ptr<_1ab119bb7_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1bd4e07ea:;
			{
				_1ad2141ee_free(_self_, _131429_m.cast_ptr<_1ab119eb4_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1bd4e0872:;
			{
				_1ad2144a7_strComp(_self_, _131429_m.cast_ptr<_1ab356299_StrCompExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1bd4e08e9:;
			{
				_1ad209b73_var(_self_, (*(_131429_m.cast_ptr<_1ab355c6b_RefExprModel>(&__jule_any_type127)))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1bd4e0971:;
			{
				_1ad214760_emptyCompare(_self_, _131429_m.cast_ptr<_1ab35596e_EmptyCompareExprModel>(&__jule_any_type124));
			}
		}
		else {
			_case_begin_1bd4dd6c7:;
			{
				_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1bd4dd672:;
	};
}



inline void _1ad214cc1_initExpr(jule::Ptr<_1ad2076a9_exprCoder> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _141132_t) {
	if (_1ab25c8ba_NilCompatible(_141132_t.ptr())) {
		if ((_1ab25d68a_Ptr(_141132_t.ptr()) != nullptr)) {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _141132_t));
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1ab2686d9_Tuple> _142113_tup = _1ab25ee94_Tup(_141132_t.ptr());;
	if ((_142113_tup != nullptr)) {
		_1ad2e9306_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), _142113_tup);
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*(_142113_tup))._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd50bea9:;
			if (it != expr_end) {
				jule::I64 _142518_i = it - expr->begin();
				jule::Ptr<_1ab25aa1c_TypeKind> _142525_tt = *it;
				{
					if ((!(_1ad2ebdca_shouldInitialized(&(_142525_tt))))) {
						goto _iter_next_1bd50bea9;
					};
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1ad2d0067_write((*(_self_))._field_oc, _1d8bbea91_Itoa(_142518_i));
					_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1ad214cc1_initExpr(_self_, _142525_tt);
					if ((((*(_142113_tup))._field_Types.len() - _142518_i) > 1LL)) {
						_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1bd50bea9:;
				++it;
				_142518_i++;
				goto _iter_begin_1bd50bea9;
			}
			_iter_end_1bd50bea9:;
		};
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1ab133890_Enum> _144013_enm = _1ab25d921_Enum(_141132_t.ptr());;
	if ((_144013_enm != nullptr)) {
		_1ad214a18_model(_self_, (*((*((*((*(_144013_enm))._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1ab2635e6_Prim> _14459_prim = _1ab25d16d_Prim(_141132_t.ptr());;
	if ((_14459_prim != nullptr)) {
		if (_1d8bce9c4_IsNum((*(_14459_prim))._field_Kind)) {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1ab2667e7_IsBool(_14459_prim.ptr())) {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1ab266a7d_IsStr(_14459_prim.ptr())) {
			_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1ab25de3d_Arr(_141132_t.ptr()) != nullptr)) {
		jule::Ptr<_1ab269e16_Arr> _145717_arr = _1ab25de3d_Arr(_141132_t.ptr());;
		_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _141132_t));
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1ad214cc1_initExpr(_self_, (*(_145717_arr))._field_Elem);
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	jule::Ptr<_1ab10acb8_StructIns> _146413_s = _1ab25e6e1_Struct(_141132_t.ptr());;
	if ((((_146413_s != nullptr) && (*((*(_146413_s))._field_Decl))._field_Binded) && (_1ad2eb748_findDirective(&((*((*(_146413_s))._field_Decl))._field_Directives), jule::Str::lit("typedef", 7)) == nullptr))) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _141132_t));
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1ad2d0067_write((*(_self_))._field_oc, _1ad2e4c19_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _141132_t));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1ad2076a9_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad217d3a_TestCoder> static__1ad21827a_New(jule::Ptr<_1ad2ce8b3_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_1ad217d3a_TestCoder>(_1ad217d3a_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_1ab184bdd_ImportInfo> _1ad218511_findTestingPackage(jule::Ptr<_1ad217d3a_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd51bbcd:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _3521_imp = *it;
			{
				if ((*(_3521_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3521_imp;;
				};
			}
			_iter_next_1bd51bbcd:;
			++it;
			goto _iter_begin_1bd51bbcd;
		}
		_iter_end_1bd51bbcd:;
	};
	return nullptr;;
}



inline void _1ad2187b9_appendTest(jule::Ptr<_1ad217d3a_TestCoder> _self_, jule::Ptr<_1ab120d00_FnIns> _4334_f) {
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad219006_callTmReset(_self_);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1ad215ab3_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), (*((*(_4334_f))._field_Decl))._field_Ident);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21bd83_funcIns(&(_4334_f)));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1ad218a72_appendPackageTests(jule::Ptr<_1ad217d3a_TestCoder> _self_, jule::Ptr<_1ab187b14_Package>* _5843_p) {
	{
		auto expr = &((*((*(_5843_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd52361e:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _5921_file = *it;
			{
				{
					auto expr = &((*(_5921_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd52406a:;
					if (it != expr_end) {
						jule::Ptr<_1ab11cdeb_Fn> _6025_f = *it;
						{
							if (_1ad2ebb11_hasDirective(&((*(_6025_f))._field_Directives), jule::Str::lit("test", 4))) {
								_1ad2187b9_appendTest(_self_, (*(_6025_f))._field_Instances[0LL]);
							};
						}
						_iter_next_1bd52406a:;
						++it;
						goto _iter_begin_1bd52406a;
					}
					_iter_end_1bd52406a:;
				};
			}
			_iter_next_1bd52361e:;
			++it;
			goto _iter_begin_1bd52361e;
		}
		_iter_end_1bd52361e:;
	};
}



inline jule::Bool _1ad218d08_readyTestingPackage(jule::Ptr<_1ad217d3a_TestCoder> _self_) {
	jule::Ptr<_1ab184bdd_ImportInfo> _6913_p = _1ad218511_findTestingPackage(_self_);;
	if ((_6913_p == nullptr)) {
		return false;;
	};
	(*(_self_))._field_t=(*(_1ab185dba_FindStruct(_6913_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*(_self_))._field_tmReset=_1ab10bd30_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*(_self_))._field_tmFailed=_1ab10bd30_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("Failed", 6), false);
	(*(_self_))._field_tmSkipped=_1ab10bd30_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1ad219006_callTmReset(jule::Ptr<_1ad217d3a_TestCoder> _self_) {
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21bab9_func(&((*(_self_))._field_tmReset)));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1ad219204_callTmFailed(jule::Ptr<_1ad217d3a_TestCoder> _self_) {
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21bab9_func(&((*(_self_))._field_tmFailed)));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1ad219402_callTmSkipped(jule::Ptr<_1ad217d3a_TestCoder> _self_) {
	_1ad2d0067_write((*(_self_))._field_oc, static__1ad21bab9_func(&((*(_self_))._field_tmSkipped)));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1ad219600_Serialize(jule::Ptr<_1ad217d3a_TestCoder> _self_) {
	_1ad2db260_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1ad2db062_end((*(_self_))._field_oc);
	});;
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1ad2d0265_addIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	if ((!(_1ad218d08_readyTestingPackage(_self_)))) {
		_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		_1ad2d0463_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_1ad2d0067_write((*(_self_))._field_oc, _1ad2e09c3_asSptr((*((*(_self_))._field_oc))._field_tc.ptr(), _1ad2e30be_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_self_))._field_t)));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1ad2d0067_write((*(_self_))._field_oc, _1ad2e30be_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_self_))._field_t));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1ad2d0265_addIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1ad219204_callTmFailed(_self_);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1ad219402_callTmSkipped(_self_);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1ad2d0463_doneIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1ad218a72_appendPackageTests(_self_, &((*((*((*(_self_))._field_oc))._field_ir))._field_Main));
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1ad2d0463_doneIndent((*(_self_))._field_oc);
	_1ad2d0661_indent((*(_self_))._field_oc);
	_1ad2d0067_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1ad217d3a_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__1ad21b04c_writeIdentTo(_1d7ad2eb1_StrBuilder* _3333_buf, jule::Str* _3351_ident) {
	{
		auto expr = _3351_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd53de20:;
		if (it != expr_end) {
			jule::U8 *_3416_b = it;
			{
				if (((*(_3416_b)) >= 128LLU)) {
					goto _julec_label_1bd53e261;
				};
			}
			_iter_next_1bd53de20:;
			++it;
			goto _iter_begin_1bd53de20;
		}
		_iter_end_1bd53de20:;
	};
	_1d7adba8b_WriteStr(_3333_buf, (*(_3351_ident)));
	return;;
	_julec_label_1bd53e261:;
	{
		auto expr = static_cast<jule::Slice<jule::I32>>((*(_3351_ident)));
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bd5402c8:;
		if (it != expr_end) {
			jule::I32 _4416_r = *it;
			{
				if ((_4416_r < 128LL)) {
					_1d7adbd44_WriteByte(_3333_buf, static_cast<jule::U8>(static_cast<jule::U8>(_4416_r)));
					goto _iter_next_1bd5402c8;
				};
				_1d7adba8b_WriteStr(_3333_buf, _1d8bbe7c7_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_4416_r)), 15LL));
			}
			_iter_next_1bd5402c8:;
			++it;
			goto _iter_begin_1bd5402c8;
		}
		_iter_end_1bd5402c8:;
	};
}



inline jule::Str static__1ad21b3c1_toOut(jule::Str* _6122_ident, jule::Uintptr _6134_addr) {
	if ((_6134_addr != 0LLU)) {
		_1d7ad2eb1_StrBuilder _6317_obj = static__1d7ad327a_New(40LL);;
		_1d7adbd44_WriteByte(&_6317_obj, '_');
		_1d7adba8b_WriteStr(&_6317_obj, _1d8bbe40e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_6134_addr)), 15LL));
		_1d7adbd44_WriteByte(&_6317_obj, '_');
		static__1ad21b04c_writeIdentTo(&(_6317_obj), _6122_ident);
		return _1d7adc383_Str(&_6317_obj);;
	};
	_1d7ad2eb1_StrBuilder _7013_obj = static__1d7ad327a_New(static_cast<jule::I64>(((*(_6122_ident)).len() + 1LL)));;
	_1d7adbd44_WriteByte(&_7013_obj, '_');
	static__1ad21b04c_writeIdentTo(&(_7013_obj), _6122_ident);
	return _1d7adc383_Str(&_7013_obj);;
}



inline jule::Str static__1ad21b800_toLocal(jule::I64 _8223_row, jule::I64 _8233_col, jule::Str* _8244_ident) {
	_1d7ad2eb1_StrBuilder _8313_obj = static__1d7ad327a_New(40LL);;
	_1d7adbd44_WriteByte(&_8313_obj, '_');
	_1d7adba8b_WriteStr(&_8313_obj, _1d8bbea91_Itoa(_8223_row));
	_1d7adba8b_WriteStr(&_8313_obj, _1d8bbea91_Itoa(_8233_col));
	_1d7adbd44_WriteByte(&_8313_obj, '_');
	static__1ad21b04c_writeIdentTo(&(_8313_obj), _8244_ident);
	return _1d7adc383_Str(&_8313_obj);;
}



inline jule::Str static__1ad21bab9_func(jule::Ptr<_1ab11cdeb_Fn>* _9321_f) {
	{
		
		if ((*((*(_9321_f))))._field_Binded) {
			_case_begin_1bd5468ea:;
			{
				return (*((*(_9321_f))))._field_Ident;;
			}
		}
		else if ((*((*(_9321_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1bd546158:;
			{
				return jule::Str::lit("entry_point", 11);;
			}
		}
		else if (_1ab11d605_IsMethod((*(_9321_f)).ptr())) {
			_case_begin_1bd5461be:;
			{
				jule::Str _10017_obj = static__1ad21b3c1_toOut(&((*((*(_9321_f))))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_9321_f)))));;
				if ((*((*(_9321_f))))._field_Statically) {
					_10017_obj=(jule::Str::lit("static_", 7) + _10017_obj);
					return _10017_obj;;
				};
				return _10017_obj;;
			}
		}
		else {
			_case_begin_1bd5460e2:;
			{
				return static__1ad21b3c1_toOut(&((*((*(_9321_f))))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_9321_f)))));;
			}
		}
		_match_end_1bd5453cc:;
	};
}



inline jule::Str static__1ad21bd83_funcIns(jule::Ptr<_1ab120d00_FnIns>* _11224_f) {
	if (_1ab122285_IsBuiltin((*(_11224_f)).ptr())) {
		return (jule::Str::lit("jule::", 6) + (*((*((*(_11224_f))))._field_Decl))._field_Ident);;
	};
	if (((*((*((*(_11224_f))))._field_Decl))._field_Binded || ((*((*(_11224_f))))._field_Generics.len() == 0LL))) {
		return static__1ad21bab9_func(&((*((*(_11224_f))))._field_Decl));;
	};
	return static__1ad21b3c1_toOut(&((*((*((*(_11224_f))))._field_Decl))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11224_f)))));;
}



inline jule::Str static__1ad21c14c_traitDecl(jule::Ptr<_1ab131195_Trait> _12525_t) {
	return static__1ad21b3c1_toOut(&((*(_12525_t))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12525_t)));;
}



inline jule::Str static__1ad21c416_param(jule::Ptr<_1ab11b427_Param>* _13022_p) {
	if ((_1ab0c4ba5_IsAnonIdent((*((*(_13022_p))))._field_Ident) || _1ab0c48db_IsIgnoreIdent((*((*(_13022_p))))._field_Ident))) {
		return jule::Str();;
	};
	if (_1ab11ba43_IsSelf((*(_13022_p)).ptr())) {
		return jule::Str::lit("_self_", 6);;
	};
	if (((*((*(_13022_p))))._field_Token == nullptr)) {
		return static__1ad21b800_toLocal(0LL, 0LL, &((*((*(_13022_p))))._field_Ident));;
	};
	return static__1ad21b800_toLocal((*((*((*(_13022_p))))._field_Token))._field_Row, (*((*((*(_13022_p))))._field_Token))._field_Column, &((*((*(_13022_p))))._field_Ident));;
}



inline jule::Str static__1ad21c6d0_structure(jule::Ptr<_1ab10803a_Struct>* _14426_s) {
	if ((*((*(_14426_s))))._field_Binded) {
		if (_1ad2ebb11_hasDirective(&((*((*(_14426_s))))._field_Directives), jule::Str::lit("typedef", 7))) {
			return (*((*(_14426_s))))._field_Ident;;
		};
		return (jule::Str::lit("struct ", 7) + (*((*(_14426_s))))._field_Ident);;
	};
	return static__1ad21b3c1_toOut(&((*((*(_14426_s))))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_14426_s)))));;
}



inline jule::Str static__1ad21c999_structureIns(jule::Ptr<_1ab10acb8_StructIns>* _15529_s) {
	if (((*((*((*(_15529_s))))._field_Decl))._field_Binded || ((*((*(_15529_s))))._field_Generics.len() == 0LL))) {
		return static__1ad21c6d0_structure(&((*((*(_15529_s))))._field_Decl));;
	};
	return static__1ad21b3c1_toOut(&((*((*((*(_15529_s))))._field_Decl))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_15529_s)))));;
}



inline jule::Str static__1ad21cc63_field(jule::Ptr<_1ab105147_Field>* _16322_f) {
	if ((*((*((*(_16322_f))))._field_Owner))._field_Binded) {
		return (*((*(_16322_f))))._field_Ident;;
	};
	_1d7ad2eb1_StrBuilder _16713_obj = static__1d7ad327a_New(static_cast<jule::I64>((7LL + (*((*(_16322_f))))._field_Ident.len())));;
	_1d7adba8b_WriteStr(&_16713_obj, jule::Str::lit("_field_", 7));
	static__1ad21b04c_writeIdentTo(&(_16713_obj), &((*((*(_16322_f))))._field_Ident));
	return _1d7adc383_Str(&_16713_obj);;
}



inline jule::Str static__1ad21d02c_var(jule::Ptr<_1ab1c7a66_Var> _17423_v) {
	{
		
		if ((*(_17423_v))._field_Binded) {
			_case_begin_1bd553a39:;
			{
				return (*(_17423_v))._field_Ident;;
			}
		}
		else if ((*(_17423_v))._field_Ident.equal("error", 5)) {
			_case_begin_1bd553aa0:;
			{
				return jule::Str::lit("except.error", 12);;
			}
		}
		else if ((*(_17423_v))._field_Ident.equal("self", 4)) {
			_case_begin_1bd553b16:;
			{
				return jule::Str::lit("_self_", 6);;
			}
		}
		else if (((*(_17423_v))._field_RetOrder == -1LL)) {
			_case_begin_1bd553b7c:;
			{
				return jule::Str::lit("__jule_func_result", 18);;
			}
		}
		else if (((*(_17423_v))._field_RetOrder >= 0LL)) {
			_case_begin_1bd553e13:;
			{
				return (jule::Str::lit("__jule_func_result.__jule_result_arg", 36) + _1d8bbea91_Itoa((*(_17423_v))._field_RetOrder));;
			}
		}
		else if (((*(_17423_v))._field_Scope != nullptr)) {
			_case_begin_1bd553e79:;
			{
				return static__1ad21b800_toLocal((*((*(_17423_v))._field_Token))._field_Row, (*((*(_17423_v))._field_Token))._field_Column, &((*(_17423_v))._field_Ident));;
			}
		}
		else {
			_case_begin_1bd5539c3:;
			{
				return static__1ad21b3c1_toOut(&((*(_17423_v))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_17423_v)));;
			}
		}
		_match_end_1bd55371a:;
	};
}



inline jule::Str static__1ad21d2e6_iterBegin(jule::Uintptr _19625_it) {
	_1d7ad2eb1_StrBuilder _19713_obj = static__1d7ad327a_New(30LL);;
	_1d7adba8b_WriteStr(&_19713_obj, jule::Str::lit("_iter_begin_", 12));
	_1d7adba8b_WriteStr(&_19713_obj, _1d8bbe40e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19625_it)), 15LL));
	return _1d7adc383_Str(&_19713_obj);;
}



inline jule::Str static__1ad21d5b0_iterEnd(jule::Uintptr _20423_it) {
	_1d7ad2eb1_StrBuilder _20513_obj = static__1d7ad327a_New(30LL);;
	_1d7adba8b_WriteStr(&_20513_obj, jule::Str::lit("_iter_end_", 10));
	_1d7adba8b_WriteStr(&_20513_obj, _1d8bbe40e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20423_it)), 15LL));
	return _1d7adc383_Str(&_20513_obj);;
}



inline jule::Str static__1ad21d879_iterNext(jule::Uintptr _21224_it) {
	_1d7ad2eb1_StrBuilder _21313_obj = static__1d7ad327a_New(30LL);;
	_1d7adba8b_WriteStr(&_21313_obj, jule::Str::lit("_iter_next_", 11));
	_1d7adba8b_WriteStr(&_21313_obj, _1d8bbe40e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_21224_it)), 15LL));
	return _1d7adc383_Str(&_21313_obj);;
}



inline jule::Str static__1ad21db43_label(jule::Uintptr _22021_u) {
	_1d7ad2eb1_StrBuilder _22113_obj = static__1d7ad327a_New(30LL);;
	_1d7adba8b_WriteStr(&_22113_obj, jule::Str::lit("_julec_label_", 13));
	_1d7adba8b_WriteStr(&_22113_obj, _1d8bbe40e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_22021_u)), 15LL));
	return _1d7adc383_Str(&_22113_obj);;
}



inline jule::Str static__1ad21de0c_matchEnd(jule::Uintptr _22824_m) {
	_1d7ad2eb1_StrBuilder _22913_obj = static__1d7ad327a_New(30LL);;
	_1d7adba8b_WriteStr(&_22913_obj, jule::Str::lit("_match_end_", 11));
	_1d7adba8b_WriteStr(&_22913_obj, _1d8bbe40e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_22824_m)), 15LL));
	return _1d7adc383_Str(&_22913_obj);;
}



inline jule::Str static__1ad21e1c6_caseBegin(jule::Uintptr _23625_c) {
	_1d7ad2eb1_StrBuilder _23713_obj = static__1d7ad327a_New(30LL);;
	_1d7adba8b_WriteStr(&_23713_obj, jule::Str::lit("_case_begin_", 12));
	_1d7adba8b_WriteStr(&_23713_obj, _1d8bbe40e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_23625_c)), 15LL));
	return _1d7adc383_Str(&_23713_obj);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad21aa1e_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad2ccd9a_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad2cd472_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "ti:" << _Src._field_ti << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad2cd84b_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad2dde00_Str(_1ad2dda6a_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1ad2de241_Equal(jule::Ptr<_1ad2dda6a_customType> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _4021_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad2dda6a_customType _Src) {
	_Stream << _1ad2dde00_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1ad2de670_typeCoder> static__1ad2debae_new(jule::Ptr<_1ad2ce8b3_ObjectCoder>* _6424_oc) {
	jule::Ptr<_1ad2de670_typeCoder> _6513_tc = jule::new_ptr<_1ad2de670_typeCoder>(_1ad2de670_typeCoder{._field_oc=(*(_6424_oc)), });;
	(*(_6513_tc))._field_rc=static__1ad2e7920_new(&(_6513_tc));
	return _6513_tc;;
}



inline jule::Str _1ad2e0000_toType(_1ad2de670_typeCoder* _self_, jule::Str _7129_id) {
	if ((!_7129_id.equal("uintptr", 7))) {
		_7129_id=_1d8bc1c3b_RealKindOf(_7129_id);
	};
	_1d7ad2eb1_StrBuilder _7513_obj = static__1d7ad327a_New(32LL);;
	_1d7adba8b_WriteStr(&_7513_obj, jule::Str::lit("jule::", 6));
	if (((97LL <= _7129_id[0LL]) && (_7129_id[0LL] <= 122LLU))) {
		_1d7adbd44_WriteByte(&_7513_obj, static_cast<jule::U8>((_7129_id[0LL] - 32LLU)));
	} else {
		_1d7adbd44_WriteByte(&_7513_obj, _7129_id[0LL]);
	};
	_1d7adba8b_WriteStr(&_7513_obj, _7129_id.slice(1LL));
	return _1d7adc383_Str(&_7513_obj);;
}



inline jule::Str _1ad2e0341_prim(_1ad2de670_typeCoder* _self_, jule::Ptr<_1ab2635e6_Prim> _8723_p) {
	return _1ad2e0000_toType(_self_, _1ab263937_Str(_8723_p.ptr()));;
}



inline jule::Str _1ad2e0682_tuple(_1ad2de670_typeCoder* _self_, jule::Ptr<_1ab2686d9_Tuple> _9228_t) {
	_1d7ad2eb1_StrBuilder _9313_obj = static__1d7ad327a_New(32LL);;
	_1d7adba8b_WriteStr(&_9313_obj, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*(_9228_t))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6b26e2:;
		if (it != expr_end) {
			jule::I64 _9514_i = it - expr->begin();
			jule::Ptr<_1ab25aa1c_TypeKind> _9521_tk = *it;
			{
				_1d7adba8b_WriteStr(&_9313_obj, _1ad2e4c19_kind(_self_, _9521_tk));
				if ((((*(_9228_t))._field_Types.len() - _9514_i) > 1LL)) {
					_1d7adbd44_WriteByte(&_9313_obj, ',');
				};
			}
			_iter_next_1bd6b26e2:;
			++it;
			_9514_i++;
			goto _iter_begin_1bd6b26e2;
		}
		_iter_end_1bd6b26e2:;
	};
	_1d7adbd44_WriteByte(&_9313_obj, '>');
	return _1d7adc383_Str(&_9313_obj);;
}



inline jule::Str _1ad2e09c3_asSptr(_1ad2de670_typeCoder* _self_, jule::Str _10625_elem) {
	_1d7ad2eb1_StrBuilder _10713_obj = static__1d7ad327a_New(static_cast<jule::I64>((11LL + _10625_elem.len())));;
	_1d7adba8b_WriteStr(&_10713_obj, jule::Str::lit("jule::Ptr<", 10));
	_1d7adba8b_WriteStr(&_10713_obj, _10625_elem);
	_1d7adbd44_WriteByte(&_10713_obj, '>');
	return _1d7adc383_Str(&_10713_obj);;
}



inline jule::Str _1ad2e0d14_sptr(_1ad2de670_typeCoder* _self_, jule::Ptr<_1ab267122_Sptr> _11527_sptr) {
	return _1ad2e09c3_asSptr(_self_, _1ad2e4c19_kind(_self_, (*(_11527_sptr))._field_Elem));;
}



inline jule::Str _1ad2e1155_ptr(_1ad2de670_typeCoder* _self_, jule::Ptr<_1ab26a8d9_Ptr> _12026_p) {
	;
	if (_1ab26b423_IsUnsafe(_12026_p.ptr())) {
		return jule::Str::lit("void*", 5);;
	};
	return (_1ad2e4c19_kind(_self_, (*(_12026_p))._field_Elem) + jule::Str::lit("*", 1));;
}



inline jule::Str _1ad2e1496_enumDecl(_1ad2de670_typeCoder* _self_, jule::Ptr<_1ab133890_Enum> _12931_e) {
	return _1ad2e4c19_kind(_self_, (*((*(_12931_e))._field_Kind))._field_Kind);;
}



inline jule::Str _1ad2e17d7_typeEnumDecl(_1ad2de670_typeCoder* _self_, jule::Ptr<_1ab13509a_TypeEnum> _13435_e) {
	return jule::Str::lit("jule::Any", 9);;
}



inline jule::Str _1ad2e1b28_asSlice(_1ad2de670_typeCoder* _self_, jule::Ptr<_1ab25aa1c_TypeKind> _13830_elem) {
	_1d7ad2eb1_StrBuilder _13913_obj = static__1d7ad327a_New(45LL);;
	_1d7adba8b_WriteStr(&_13913_obj, jule::Str::lit("jule::Slice<", 12));
	_1d7adba8b_WriteStr(&_13913_obj, _1ad2e4c19_kind(_self_, _13830_elem));
	_1d7adbd44_WriteByte(&_13913_obj, '>');
	return _1d7adc383_Str(&_13913_obj);;
}



inline jule::Str _1ad2e1e69_slice(_1ad2de670_typeCoder* _self_, jule::Ptr<_1ab267ae5_Slc> _14728_s) {
	return _1ad2e1b28_asSlice(_self_, (*(_14728_s))._field_Elem);;
}



inline jule::Str _1ad2e22aa_mapType(_1ad2de670_typeCoder* _self_, jule::Ptr<_1ab269289_Map> _15230_m) {
	_1d7ad2eb1_StrBuilder _15313_obj = static__1d7ad327a_New(43LL);;
	_1d7adba8b_WriteStr(&_15313_obj, jule::Str::lit("jule::Map<", 10));
	_1d7adba8b_WriteStr(&_15313_obj, _1ad2e4c19_kind(_self_, (*(_15230_m))._field_Key));
	_1d7adbd44_WriteByte(&_15313_obj, ',');
	_1d7adba8b_WriteStr(&_15313_obj, _1ad2e4c19_kind(_self_, (*(_15230_m))._field_Val));
	_1d7adbd44_WriteByte(&_15313_obj, '>');
	return _1d7adc383_Str(&_15313_obj);;
}



inline jule::Str _1ad2e25eb_traitIdent(_1ad2de670_typeCoder* _self_, jule::Str _16229_ident) {
	_1d7ad2eb1_StrBuilder _16313_obj = static__1d7ad327a_New(static_cast<jule::I64>((13LL + _16229_ident.len())));;
	_1d7adba8b_WriteStr(&_16313_obj, jule::Str::lit("jule::Trait<", 12));
	_1d7adba8b_WriteStr(&_16313_obj, _16229_ident);
	_1d7adbd44_WriteByte(&_16313_obj, '>');
	return _1d7adc383_Str(&_16313_obj);;
}



inline jule::Str _1ad2e293c_traitDecl(_1ad2de670_typeCoder* _self_, jule::Ptr<_1ab131195_Trait> _17128_t) {
	return _1ad2e25eb_traitIdent(_self_, static__1ad21c14c_traitDecl(_17128_t));;
}



inline jule::Str _1ad2e2c7d_structure(_1ad2de670_typeCoder* _self_, jule::Ptr<_1ab10803a_Struct> _17628_s) {
	_1d7ad2eb1_StrBuilder _17713_rep = static__1d7ad327a_New(32LL);;
	if (((*(_17628_s))._field_Binded && (!(_1ad2ebb11_hasDirective(&((*(_17628_s))._field_Directives), jule::Str::lit("typedef", 7)))))) {
		_1d7adba8b_WriteStr(&_17713_rep, jule::Str::lit("struct ", 7));
	};
	_1d7adba8b_WriteStr(&_17713_rep, static__1ad21c6d0_structure(&(_17628_s)));
	return _1d7adc383_Str(&_17713_rep);;
}



inline jule::Str _1ad2e30be_structureIns(_1ad2de670_typeCoder* _self_, jule::Ptr<_1ab10acb8_StructIns> _18635_s) {
	if ((*((*(_18635_s))._field_Decl))._field_Binded) {
		_1d7ad2eb1_StrBuilder _18817_ident = static__1d7ad327a_New(32LL);;
		_1d7adba8b_WriteStr(&_18817_ident, static__1ad21c999_structureIns(&(_18635_s)));
		if (((*(_18635_s))._field_Generics.len() > 0LL)) {
			_1d7adbd44_WriteByte(&_18817_ident, '<');
			{
				auto expr = &((*(_18635_s))._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bd6c205e:;
				if (it != expr_end) {
					jule::I64 _19222_i = it - expr->begin();
					jule::Ptr<_1ab259136_InsGeneric> _19229_g = *it;
					{
						_1d7adba8b_WriteStr(&_18817_ident, _1ad2e4c19_kind(_self_, (*(_19229_g))._field_Kind));
						if ((((*(_18635_s))._field_Generics.len() - _19222_i) > 1LL)) {
							_1d7adbd44_WriteByte(&_18817_ident, ',');
						};
					}
					_iter_next_1bd6c205e:;
					++it;
					_19222_i++;
					goto _iter_begin_1bd6c205e;
				}
				_iter_end_1bd6c205e:;
			};
			_1d7adbd44_WriteByte(&_18817_ident, '>');
		};
		jule::Ptr<_1ab0d6865_Directive> _20013_d = _1ad2eb748_findDirective(&((*((*(_18635_s))._field_Decl))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_20013_d != nullptr)) {
			jule::Str _20221_buf = _1d7adc383_Str(&_18817_ident);;
			_1d7adc581_Clear(&_18817_ident);
			_1d7adba8b_WriteStr(&_18817_ident, _1ad2dbb56_concatAllParts((*(_20013_d))._field_Args));
			_1d7adba8b_WriteStr(&_18817_ident, jule::Str::lit("::", 2));
			_1d7adba8b_WriteStr(&_18817_ident, _20221_buf);
		};
		return _1d7adc383_Str(&_18817_ident);;
	};
	return static__1ad21c999_structureIns(&(_18635_s));;
}



inline jule::Str _1ad2e3410_array(_1ad2de670_typeCoder* _self_, jule::Ptr<_1ab269e16_Arr> _21428_a) {
	_1d7ad2eb1_StrBuilder _21513_obj = static__1d7ad327a_New(45LL);;
	_1d7adba8b_WriteStr(&_21513_obj, jule::Str::lit("jule::Array<", 12));
	_1d7adba8b_WriteStr(&_21513_obj, _1ad2e4c19_kind(_self_, (*(_21428_a))._field_Elem));
	_1d7adbd44_WriteByte(&_21513_obj, ',');
	_1d7adba8b_WriteStr(&_21513_obj, _1d8bbea91_Itoa((*(_21428_a))._field_N));
	_1d7adbd44_WriteByte(&_21513_obj, '>');
	return _1d7adc383_Str(&_21513_obj);;
}



inline jule::Str _1ad2e3a92_paramIns(_1ad2de670_typeCoder* _self_, jule::Ptr<_1ab11ed54_ParamIns>* _24132_p) {
	_1d7ad2eb1_StrBuilder _24213_obj = static__1d7ad327a_New(32LL);;
	if ((*((*((*(_24132_p))))._field_Decl))._field_Variadic) {
		_1d7adba8b_WriteStr(&_24213_obj, jule::Str::lit("jule::Slice<", 12));
		_1d7adba8b_WriteStr(&_24213_obj, _1ad2e4c19_kind(_self_, (*((*(_24132_p))))._field_Kind));
		_1d7adbd44_WriteByte(&_24213_obj, '>');
	} else {
		_1d7adba8b_WriteStr(&_24213_obj, _1ad2e4c19_kind(_self_, (*((*(_24132_p))))._field_Kind));
	};
	if ((*((*((*(_24132_p))))._field_Decl))._field_Reference) {
		_1d7adbd44_WriteByte(&_24213_obj, '*');
	};
	return _1d7adc383_Str(&_24213_obj);;
}



inline void _1ad2e4246_funcInsResult(_1ad2de670_typeCoder* _self_, _1d7ad2eb1_StrBuilder* _27137_s, jule::Ptr<_1ab120d00_FnIns>* _27157_f) {
	if (_1ab11d36e_IsVoid((*((*(_27157_f))))._field_Decl.ptr())) {
		if ((*((*((*(_27157_f))))._field_Decl))._field_Exceptional) {
			_1d7adba8b_WriteStr(_27137_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_1d7adba8b_WriteStr(_27137_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*((*((*(_27157_f))))._field_Decl))._field_Exceptional) {
		_1d7adba8b_WriteStr(_27137_s, jule::Str::lit("jule::Exceptional<", 18));
		_1ad2e99cc_codeMut1((*(_self_))._field_rc.ptr(), _27137_s, &((*((*(_27157_f))))._field_Result));
		_1d7adbd44_WriteByte(_27137_s, '>');
		return;;
	};
	_1ad2e99cc_codeMut1((*(_self_))._field_rc.ptr(), _27137_s, &((*((*(_27157_f))))._field_Result));
}



inline jule::Str _1ad2e4587_anonFunc(_1ad2de670_typeCoder* _self_, jule::Ptr<_1ab120d00_FnIns> _28931_f) {
	if ((((*(_28931_f))._field_Result != nullptr) && (_1ab25ee94_Tup((*(_28931_f))._field_Result.ptr()) != nullptr))) {
		_1ad2d109b_pushResultIns((*(_self_))._field_oc, &(_28931_f));
	};
	_1d7ad2eb1_StrBuilder _29313_decl = static__1d7ad327a_New(20LL);;
	_1ad2e4246_funcInsResult(_self_, &(_29313_decl), &(_28931_f));
	_1d7adbd44_WriteByte(&_29313_decl, '(');
	if (((*(_28931_f))._field_Params.len() > 0LL)) {
		{
			auto expr = &((*(_28931_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd6d6c22:;
			if (it != expr_end) {
				jule::I64 _29718_i = it - expr->begin();
				jule::Ptr<_1ab11ed54_ParamIns> _29725_param = *it;
				{
					if (_1ab11ba43_IsSelf((*(_29725_param))._field_Decl.ptr())) {
						goto _iter_next_1bd6d6c22;
					};
					_1d7adba8b_WriteStr(&_29313_decl, _1ad2e3a92_paramIns(_self_, &(_29725_param)));
					if ((((*(_28931_f))._field_Params.len() - _29718_i) > 1LL)) {
						_1d7adbd44_WriteByte(&_29313_decl, ',');
					};
				}
				_iter_next_1bd6d6c22:;
				++it;
				_29718_i++;
				goto _iter_begin_1bd6d6c22;
			}
			_iter_end_1bd6d6c22:;
		};
	} else {
		_1d7adba8b_WriteStr(&_29313_decl, jule::Str::lit("void", 4));
	};
	_1d7adbd44_WriteByte(&_29313_decl, ')');
	return _1d7adc383_Str(&_29313_decl);;
}



inline jule::Str _1ad2e48c8_func(_1ad2de670_typeCoder* _self_, jule::Ptr<_1ab120d00_FnIns> _31427_f) {
	_1d7ad2eb1_StrBuilder _31513_obj = static__1d7ad327a_New(42LL);;
	_1d7adba8b_WriteStr(&_31513_obj, jule::Str::lit("jule::Fn<", 9));
	_1d7adba8b_WriteStr(&_31513_obj, _1ad2e4587_anonFunc(_self_, _31427_f));
	_1d7adbd44_WriteByte(&_31513_obj, '>');
	return _1d7adc383_Str(&_31513_obj);;
}



inline jule::Str _1ad2e4c19_kind(_1ad2de670_typeCoder* _self_, jule::Ptr<_1ab25aa1c_TypeKind> _32327_k) {
	{
		
		if ((_1ab25e6e1_Struct(_32327_k.ptr()) != nullptr)) {
			_case_begin_1bd6db2a9:;
			{
				return _1ad2e30be_structureIns(_self_, _1ab25e6e1_Struct(_32327_k.ptr()));;
			}
		}
		else if (_1ab25b864_Binded(_32327_k.ptr())) {
			_case_begin_1bd6db331:;
			{
				return (*(_32327_k))._field_BindIdent;;
			}
		}
		else if ((_1ab25d16d_Prim(_32327_k.ptr()) != nullptr)) {
			_case_begin_1bd6db3a8:;
			{
				return _1ad2e0341_prim(_self_, _1ab25d16d_Prim(_32327_k.ptr()));;
			}
		}
		else if ((_1ab25ee94_Tup(_32327_k.ptr()) != nullptr)) {
			_case_begin_1bd6db430:;
			{
				return _1ad2e0682_tuple(_self_, _1ab25ee94_Tup(_32327_k.ptr()));;
			}
		}
		else if ((_1ab25d404_Sptr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1bd6db4a7:;
			{
				return _1ad2e0d14_sptr(_self_, _1ab25d404_Sptr(_32327_k.ptr()));;
			}
		}
		else if ((_1ab25d68a_Ptr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1bd6db52e:;
			{
				return _1ad2e1155_ptr(_self_, _1ab25d68a_Ptr(_32327_k.ptr()));;
			}
		}
		else if ((_1ab25d921_Enum(_32327_k.ptr()) != nullptr)) {
			_case_begin_1bd6db5a6:;
			{
				return _1ad2e1496_enumDecl(_self_, _1ab25d921_Enum(_32327_k.ptr()));;
			}
		}
		else if ((_1ab25dba7_TypeEnum(_32327_k.ptr()) != nullptr)) {
			_case_begin_1bd6db62d:;
			{
				return _1ad2e17d7_typeEnumDecl(_self_, _1ab25dba7_TypeEnum(_32327_k.ptr()));;
			}
		}
		else if ((_1ab25e1c4_Slc(_32327_k.ptr()) != nullptr)) {
			_case_begin_1bd6db6a5:;
			{
				return _1ad2e1e69_slice(_self_, _1ab25e1c4_Slc(_32327_k.ptr()));;
			}
		}
		else if ((_1ab25ec0d_Map(_32327_k.ptr()) != nullptr)) {
			_case_begin_1bd6db72c:;
			{
				return _1ad2e22aa_mapType(_self_, _1ab25ec0d_Map(_32327_k.ptr()));;
			}
		}
		else if ((_1ab25e977_Trait(_32327_k.ptr()) != nullptr)) {
			_case_begin_1bd6db7a4:;
			{
				return _1ad2e293c_traitDecl(_self_, _1ab25e977_Trait(_32327_k.ptr()));;
			}
		}
		else if ((_1ab25de3d_Arr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1bd6db82b:;
			{
				return _1ad2e3410_array(_self_, _1ab25de3d_Arr(_32327_k.ptr()));;
			}
		}
		else if ((_1ab25e45a_Fn(_32327_k.ptr()) != nullptr)) {
			_case_begin_1bd6db8a3:;
			{
				return _1ad2e48c8_func(_self_, _1ab25e45a_Fn(_32327_k.ptr()));;
			}
		}
		_match_end_1bd6db0cd:;
	};
	{
		auto &_match_expr{ (*(_32327_k))._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_1bc62b580:;
			{
				return (*((*(_32327_k))._field_Kind.cast_ptr<_1ad2dda6a_customType>(27)))._field_kind;;
			}
		}
		else {
			_case_begin_1bd6e49bb:;
			{
				return jule::Str::lit("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1bd6e4966:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ad2de670_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad2e7447_resultCoder> static__1ad2e7920_new(jule::Ptr<_1ad2de670_typeCoder>* _37724_tc) {
	return jule::new_ptr<_1ad2e7447_resultCoder>(_1ad2e7447_resultCoder{._field_tc=(*(_37724_tc))});;
}



inline void _1ad2e7c83_ptr(_1ad2e7447_resultCoder* _self_, _1d7ad2eb1_StrBuilder* _38127_s, jule::Ptr<_1ab26a8d9_Ptr> _38146_p) {
	_1d7adba8b_WriteStr(_38127_s, jule::Str::lit("p", 1));
	_1ad2e9669_codeMut(_self_, _38127_s, &((*(_38146_p))._field_Elem));
}



inline void _1ad2e80e6_sptr(_1ad2e7447_resultCoder* _self_, _1d7ad2eb1_StrBuilder* _38628_s, jule::Ptr<_1ab267122_Sptr> _38647_p) {
	_1d7adba8b_WriteStr(_38628_s, jule::Str::lit("x", 1));
	_1ad2e9669_codeMut(_self_, _38628_s, &((*(_38647_p))._field_Elem));
}



inline void _1ad2e8459_mapType(_1ad2e7447_resultCoder* _self_, _1d7ad2eb1_StrBuilder* _39131_s, jule::Ptr<_1ab269289_Map> _39150_p) {
	_1d7adba8b_WriteStr(_39131_s, jule::Str::lit("m", 1));
	_1ad2e9669_codeMut(_self_, _39131_s, &((*(_39150_p))._field_Key));
	_1ad2e9669_codeMut(_self_, _39131_s, &((*(_39150_p))._field_Val));
}



inline void _1ad2e87bc_slice(_1ad2e7447_resultCoder* _self_, _1d7ad2eb1_StrBuilder* _39729_s, jule::Ptr<_1ab267ae5_Slc> _39748_slc) {
	_1d7adba8b_WriteStr(_39729_s, jule::Str::lit("s", 1));
	_1ad2e9669_codeMut(_self_, _39729_s, &((*(_39748_slc))._field_Elem));
}



inline void _1ad2e8b30_arr(_1ad2e7447_resultCoder* _self_, _1d7ad2eb1_StrBuilder* _40227_s, jule::Ptr<_1ab269e16_Arr> _40246_arr) {
	_1d7adba8b_WriteStr(_40227_s, jule::Str::lit("a", 1));
	_1d7adba8b_WriteStr(_40227_s, _1d8bbe7c7_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_40246_arr))._field_N)), 16LL));
	_1ad2e9669_codeMut(_self_, _40227_s, &((*(_40246_arr))._field_Elem));
}



inline void _1ad2e8e93_func(_1ad2e7447_resultCoder* _self_, _1d7ad2eb1_StrBuilder* _40828_s, jule::Ptr<_1ab120d00_FnIns> _40847_f) {
	_1d7adba8b_WriteStr(_40828_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_40847_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc633466:;
		if (it != expr_end) {
			jule::Ptr<_1ab11ed54_ParamIns> _41021_p = *it;
			{
				if ((*((*(_41021_p))._field_Decl))._field_Reference) {
					_1d7adba8b_WriteStr(_40828_s, jule::Str::lit("r", 1));
				};
				_1ad2e9669_codeMut(_self_, _40828_s, &((*(_41021_p))._field_Kind));
			}
			_iter_next_1bc633466:;
			++it;
			goto _iter_begin_1bc633466;
		}
		_iter_end_1bc633466:;
	};
	if (((*(_40847_f))._field_Result != nullptr)) {
		_1ad2e9669_codeMut(_self_, _40828_s, &((*(_40847_f))._field_Result));
	};
}



inline void _1ad2e9306_tup(_1ad2e7447_resultCoder* _self_, _1d7ad2eb1_StrBuilder* _42127_s, jule::Ptr<_1ab2686d9_Tuple> _42146_tup) {
	{
		auto expr = &((*(_42146_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc635b0b:;
		if (it != expr_end) {
			jule::Ptr<_1ab25aa1c_TypeKind> _42221_t = *it;
			{
				_1d7adba8b_WriteStr(_42127_s, jule::Str::lit("__jule_tuple_", 13));
				_1ad2e9669_codeMut(_self_, _42127_s, &(_42221_t));
			}
			_iter_next_1bc635b0b:;
			++it;
			goto _iter_begin_1bc635b0b;
		}
		_iter_end_1bc635b0b:;
	};
}



inline void _1ad2e9669_codeMut(_1ad2e7447_resultCoder* _self_, _1d7ad2eb1_StrBuilder* _42831_s, jule::Ptr<_1ab25aa1c_TypeKind>* _42851_t) {
	{
		auto &_match_expr{ (*((*(_42851_t))))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1bc636d71:;
			{
				_1ad2e7c83_ptr(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1ab26a8d9_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_1bc637239:;
			{
				_1ad2e80e6_sptr(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1ab267122_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_1bc6372a0:;
			{
				_1ad2e8459_mapType(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1ab269289_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_1bc637316:;
			{
				_1ad2e87bc_slice(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1ab267ae5_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_1bc63738d:;
			{
				_1ad2e8b30_arr(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1ab269e16_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1bc637822:;
			{
				_1ad2e8e93_func(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1ab120d00_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1bc637899:;
			{
				jule::Ptr<_1ab133890_Enum> _44313_te = (*((*(_42851_t))))._field_Kind.cast_ptr<_1ab133890_Enum>(3);;
				_1d7adba8b_WriteStr(_42831_s, static__1ad21b3c1_toOut(&((*(_44313_te))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44313_te))));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1bc637921:;
			{
				jule::Ptr<_1ab13509a_TypeEnum> _44613_te = (*((*(_42851_t))))._field_Kind.cast_ptr<_1ab13509a_TypeEnum>(4);;
				_1d7adba8b_WriteStr(_42831_s, static__1ad21b3c1_toOut(&((*(_44613_te))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44613_te))));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1bc637998:;
			{
				jule::Ptr<_1ab10acb8_StructIns> _44917_si = (*((*(_42851_t))))._field_Kind.cast_ptr<_1ab10acb8_StructIns>(0);;
				_1d7adba8b_WriteStr(_42831_s, static__1ad21c999_structureIns(&(_44917_si)));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1bc637a20:;
			{
				jule::Ptr<_1ab131195_Trait> _45217_trt = (*((*(_42851_t))))._field_Kind.cast_ptr<_1ab131195_Trait>(2);;
				_1d7adba8b_WriteStr(_42831_s, static__1ad21c14c_traitDecl(_45217_trt));
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_1bc637a97:;
			{
				_1d7adba8b_WriteStr(_42831_s, (*((*((*(_42851_t))))._field_Kind.cast_ptr<_1ab2635e6_Prim>(20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_1bc637b1e:;
			{
				_1ad2e9306_tup(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1ab2686d9_Tuple>(23));
			}
		}
		else {
			_case_begin_1bc6371c3:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:459:13"));;
			}
		}
		_match_end_1bc63716d:;
	};
}



inline void _1ad2e99cc_codeMut1(_1ad2e7447_resultCoder* _self_, _1d7ad2eb1_StrBuilder* _46332_s, jule::Ptr<_1ab25aa1c_TypeKind>* _46352_t) {
	jule::Ptr<_1ab2686d9_Tuple> _46413_tup = _1ab25ee94_Tup((*(_46352_t)).ptr());;
	if ((_46413_tup != nullptr)) {
		_1ad2e9306_tup(_self_, _46332_s, _46413_tup);
	} else {
		_1d7adba8b_WriteStr(_46332_s, _1ad2e4c19_kind((*(_self_))._field_tc.ptr(), (*(_46352_t))));
	};
}



inline jule::Str _1ad2e9cda_code(_1ad2e7447_resultCoder* _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _47228_t) {
	_1d7ad2eb1_StrBuilder _47313_s = static__1d7ad327a_New(20LL);;
	_1ad2e9669_codeMut(_self_, &(_47313_s), _47228_t);
	return _1d7adc383_Str(&_47313_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad2e7447_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1bd6ed057_Name(_1bd6ed211_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bd6ed4ec_What(_1bd6ed211_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bd6ed640_Reset(_1bd6ed211_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bd6ed783_Short(_1bd6ed211_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd6ed211_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bd7016a9_Name(_1bd701a72_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bd7017ec_What(_1bd701a72_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bd701d5d_Reset(_1bd701a72_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bd701ea1_Short(_1bd701a72_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd701a72_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bd704da5_Name(_1bd70526d_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bd704ee8_What(_1bd70526d_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bd705559_Reset(_1bd70526d_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bd70569c_Short(_1bd70526d_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd70526d_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bd7085e5_Name(_1bd7089ad_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bd708738_What(_1bd7089ad_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bd708c99_Reset(_1bd7089ad_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bd708ddc_Short(_1bd7089ad_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd7089ad_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bd70bce1_Name(_1bd70c1a9_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bd70be34_What(_1bd70c1a9_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bd70c495_Reset(_1bd70c1a9_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bd70c5d8_Short(_1bd70c1a9_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd70c1a9_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad4c4b85_FlagSet> static__1ad4c4e71_New(void) {
	return jule::new_ptr<_1ad4c4b85_FlagSet>(_1ad4c4b85_FlagSet{._field_flags=jule::Slice<jule::Trait<_1ad4c30d4_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1ad4c30d4_CommonFlag> _1ad4c53e4_FindFlag(_1ad4c4b85_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd716944:;
		if (it != expr_end) {
			jule::Trait<_1ad4c30d4_CommonFlag> _7221_flag = *it;
			{
				if ((_1ad4c30d4_CommonFlag_mptr_data[(_7221_flag).type_offset]._1ad490ea3_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1bd716944:;
			++it;
			goto _iter_begin_1bd716944;
		}
		_iter_end_1bd716944:;
	};
	return nullptr;;
}



inline jule::Trait<_1ad4c30d4_CommonFlag> _1ad4c5735_FindFlagShort(_1ad4c4b85_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd71824d:;
		if (it != expr_end) {
			jule::Trait<_1ad4c30d4_CommonFlag> _8221_flag = *it;
			{
				if ((_1ad4c30d4_CommonFlag_mptr_data[(_8221_flag).type_offset]._1ad49114b_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1bd71824d:;
			++it;
			goto _iter_begin_1bd71824d;
		}
		_iter_end_1bd71824d:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1ad4c5d0c_Parse(_1ad4c4b85_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1ad4c7616_argParser _11613_ap = _1ad4c7616_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1ad4c8b12_parse(&_11613_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11613_ap._field_content);;
}



inline jule::Ptr<_1bd70c1a9_Flag> _1bd779149_addFlagCommon(_1ad4c4b85_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1bd77a90e:;
			{
				goto _match_end_1bd77a898;
			}
		}
		_match_end_1bd77a898:;
	};
	if ((_1ad4c53e4_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1ad4c5735_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1bd70c1a9_Flag> _14813_flag = jule::new_ptr<_1bd70c1a9_Flag>(_1bd70c1a9_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1ad4c30d4_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1ad4c30d4_CommonFlag>(_14813_flag, 4)); };
	return _14813_flag;;
}

inline jule::Ptr<_1bd7089ad_Flag> _1bd78130a_addFlagCommon(_1ad4c4b85_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1bd782a7b:;
			{
				goto _match_end_1bd782a15;
			}
		}
		_match_end_1bd782a15:;
	};
	if ((_1ad4c53e4_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1ad4c5735_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1bd7089ad_Flag> _14813_flag = jule::new_ptr<_1bd7089ad_Flag>(_1bd7089ad_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1ad4c30d4_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1ad4c30d4_CommonFlag>(_14813_flag, 3)); };
	return _14813_flag;;
}



inline void _1bd777389_AddVar(_1ad4c4b85_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1bd70c1a9_Flag> _17613_flag = _1bd779149_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	(*(_17613_flag))._field_default=(*(_17532_var));
	(*(_17613_flag))._field_data=_17532_var;
}

inline void _1bd77e58e_AddVar(_1ad4c4b85_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1bd7089ad_Flag> _17613_flag = _1bd78130a_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	(*(_17613_flag))._field_default=(*(_17532_var));
	(*(_17613_flag))._field_data=_17532_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad4c4b85_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1bd71ea5c_parseInteger(_1ad4c7616_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_19031_s))).empty()) {
			_case_begin_1bd722510:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1d7abd93b_HasPrefix((*(_19031_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1bd722a82:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1d7abd93b_HasPrefix((*(_19031_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1bd722862:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1d7abd93b_HasPrefix((*(_19031_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1bd7228c8:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1bd7221d0:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bd722169:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bd72209d:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1bd727290_parseInteger(_1ad4c7616_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_19031_s))).empty()) {
			_case_begin_1bd729bee:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1d7abd93b_HasPrefix((*(_19031_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1bd72a271:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1d7abd93b_HasPrefix((*(_19031_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1bd72a051:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1d7abd93b_HasPrefix((*(_19031_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1bd72a0b7:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1bd7298be:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bd729858:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bd72978c:;
	};
	return __jule_func_result;;
}



inline jule::Str _1ad4c7e30_getData(_1ad4c7616_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1ad4c81a5_processFlag(_1ad4c7616_argParser* _self_, jule::Trait<_1ad4c30d4_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1bd71c1ec:;
			{
				jule::Ptr<_1bd7089ad_Flag> _22017_bf = (*(_21735_flag)).cast_ptr<_1bd7089ad_Flag>(3);;
				(*((*(_22017_bf))._field_data))=(!((*(_22017_bf))._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1bd71c197:;
	};
	jule::Str _2259_data = _1ad4c7e30_getData(_self_);;
	if ((_2259_data).empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1ad4c30d4_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1ad490ea3_Name((*(_21735_flag)))) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bd71dcd1:;
			{
				jule::Ptr<_1bd6ed211_Flag> _23217_intf = (*(_21735_flag)).cast_ptr<_1bd6ed211_Flag>(0);;
				jule::Bool _23327_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1bd71ea5c_parseInteger(_self_, &(_2259_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23365_s, jule::I64 _23373_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1d8bad233_ParseInt(_23365_s, _23373_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_23217_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23327_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23327_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1ad4c30d4_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1ad490ea3_Name((*(_21735_flag)))) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1bd71dd47:;
			{
				jule::Ptr<_1bd701a72_Flag> _24017_uintf = (*(_21735_flag)).cast_ptr<_1bd701a72_Flag>(1);;
				jule::Bool _24128_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1bd727290_parseInteger(_self_, &(_2259_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _24166_s, jule::I64 _24174_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1d8bacc7c_ParseUint(_24166_s, _24174_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_24017_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24128_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24128_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1ad4c30d4_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1ad490ea3_Name((*(_21735_flag)))) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1bd71ddad:;
			{
				jule::Ptr<_1bd70526d_Flag> _24817_ff = (*(_21735_flag)).cast_ptr<_1bd70526d_Flag>(2);;
				(*((*(_24817_ff))._field_data))=static_cast<jule::F64>(({
					auto except = _1d8bb4b74_ParseFloat(_2259_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1ad4c30d4_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1ad490ea3_Name((*(_21735_flag)))) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1bd71de24:;
			{
				(*((*((*(_21735_flag)).cast_ptr<_1bd70c1a9_Flag>(4)))._field_data))=_2259_data;
			}
		}
		_match_end_1bd71d4ea:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ad4c845d_singleDash(_1ad4c7616_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Slice<jule::I32> _2619_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_2619_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd731772:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_1ad4c30d4_CommonFlag> _26317_flag = _1ad4c5735_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26317_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_26216_r)))), &__jule_any_type4));
				};
				({
					auto except = _1ad4c81a5_processFlag(_self_, &(_26317_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1bd731772:;
			++it;
			goto _iter_begin_1bd731772;
		}
		_iter_end_1bd731772:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ad4c8716_doubleDash(_1ad4c7616_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Trait<_1ad4c30d4_CommonFlag> _27613_flag = _1ad4c53e4_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27613_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4));
	};
	({
		auto except = _1ad4c81a5_processFlag(_self_, &(_27613_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ad4c8914_tryArg(_1ad4c7616_argParser* _self_) {
	jule::Str _2849_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_2849_arg[0LL] == '-')) {
		if (((_2849_arg.len() > 1LL) && (_2849_arg[1LL] == '-'))) {
			({
				auto except = _1ad4c8716_doubleDash(_self_, &(_2849_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1ad4c845d_singleDash(_self_, &(_2849_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2849_arg); };
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ad4c8b12_parse(_1ad4c7616_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1ad4c8914_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1bd73cccd:;
	}
	_iter_end_1bd73cccd:;;
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _1ad4c7616_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad2ce8b3_ObjectCoder> static__1ad2cecae_New(jule::Ptr<_1ac9c51db_IR>* _9324_ir, _1ad2ccd9a_SerializationInfo _9333_info) {
	jule::Ptr<_1ad2ce8b3_ObjectCoder> _9413_oc = jule::new_ptr<_1ad2ce8b3_ObjectCoder>(_1ad2ce8b3_ObjectCoder{._field_ir=(*(_9324_ir)), ._field_info=_9333_info, });;
	(*(_9413_oc))._field_ec=static__1ad207a72_new(&(_9413_oc));
	(*(_9413_oc))._field_sc=static__1ad1edb56_new(&(_9413_oc));
	(*(_9413_oc))._field_tc=static__1ad2debae_new(&(_9413_oc));
	return _9413_oc;;
}



inline void _1ad2d0067_write(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Str _10425_s) {
	_1d7adba8b_WriteStr(&(*(_self_))._field_Obj, _10425_s);
}



inline void _1ad2d0265_addIndent(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_indentBuffer; __jule_push_dest.push(9LLU); };
}



inline void _1ad2d0463_doneIndent(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=(*(_self_))._field_indentBuffer.slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));
}



inline void _1ad2d0661_indent(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	_1d7adb7d3_Write(&(*(_self_))._field_Obj, (*(_self_))._field_indentBuffer);
}



inline jule::I64 _1ad2d09a2_findAnyType(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab25aa1c_TypeKind>* _12336_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5789e8:;
		if (it != expr_end) {
			jule::I64 _12414_i = it - expr->begin();
			jule::Ptr<_1ab25aa1c_TypeKind> _12421_at = *it;
			{
				if (_1ab25b226_Equal(_12421_at, (*(_12336_t)))) {
					return _12414_i;;
				};
			}
			_iter_next_1bd5789e8:;
			++it;
			_12414_i++;
			goto _iter_begin_1bd5789e8;
		}
		_iter_end_1bd5789e8:;
	};
	return -1LL;;
}



inline jule::I64 _1ad2d0ce3_pushAnyType(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _13235_t) {
	if ((_1ab25d921_Enum(_13235_t.ptr()) != nullptr)) {
		_13235_t=(*((*(_1ab25d921_Enum(_13235_t.ptr())))._field_Kind))._field_Kind;
	};
	jule::I64 _13613_i = _1ad2d09a2_findAnyType(_self_, &(_13235_t));;
	if ((_13613_i != -1LL)) {
		return _13613_i;;
	};
	_13613_i=static_cast<jule::I64>((*(_self_))._field_anyTypeMap.len());
	{ jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>> &__jule_push_dest = (*(_self_))._field_anyTypeMap; __jule_push_dest.push(_13235_t); };
	jule::Str _1429_si = _1d8bbea91_Itoa(_13613_i);;
	if ((_1ab25d404_Sptr(_13235_t.ptr()) != nullptr)) {
		jule::Str _14413_elem_kind = _1ad2e4c19_kind((*(_self_))._field_tc.ptr(), (*(_1ab25d404_Sptr(_13235_t.ptr())))._field_Elem);;
		jule::Str _14513_kind = _1ad2e09c3_asSptr((*(_self_))._field_tc.ptr(), _14413_elem_kind);;
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _14413_elem_kind);
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58));
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _14513_kind);
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _17113_comparable = _1ab25c117_Comparable(_13235_t.ptr());;
		jule::Str _17213_kind = _1ad2e4c19_kind((*(_self_))._field_tc.ptr(), _13235_t);;
		if (_17213_kind.equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1ab25add5_Str(_13235_t.ptr()));
		};
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (_17113_comparable) {
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(alloc) == *reinterpret_cast<", 31));
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(other); }\n", 13));
		};
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1ab25d68a_Ptr(_13235_t.ptr()) == nullptr)) {
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("const ", 6));
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
		} else {
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("* const", 7));
		};
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc, ", 10));
		if (_17113_comparable) {
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_17113_comparable) {
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _13613_i;;
}



inline void _1ad2d109b_pushResultIns(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab120d00_FnIns>* _24038_f) {
	jule::Str _2419_s = _1ad2e9cda_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_24038_f))))._field_Result));;
	jule::Bool _24212_ok = false;;
	(*(_self_))._field_resultMap.lookup(_2419_s, nullptr, &(_24212_ok));
	if (_24212_ok) {
		return;;
	};
	(*(_self_))._field_resultMap[_2419_s]=false;
	_1d7adba8b_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("struct ", 7));
	_1d7adba8b_WriteStr(&(*(_self_))._field_resultDecls, _2419_s);
	_1d7adba8b_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1ab25ee94_Tup((*((*(_24038_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd598342:;
		if (it != expr_end) {
			jule::I64 _25014_i = it - expr->begin();
			jule::Ptr<_1ab25aa1c_TypeKind> _25021_t = *it;
			{
				_1d7adbd44_WriteByte(&(*(_self_))._field_resultDecls, 9LLU);
				_1d7adba8b_WriteStr(&(*(_self_))._field_resultDecls, _1ad2e4c19_kind((*(_self_))._field_tc.ptr(), _25021_t));
				_1d7adbd44_WriteByte(&(*(_self_))._field_resultDecls, ' ');
				_1d7adba8b_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_1d7adba8b_WriteStr(&(*(_self_))._field_resultDecls, _1d8bbea91_Itoa(_25014_i));
				_1d7adba8b_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bd598342:;
			++it;
			_25014_i++;
			goto _iter_begin_1bd598342;
		}
		_iter_end_1bd598342:;
	};
	_1d7adba8b_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1ad2d1354_pushResult(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab11cdeb_Fn>* _26135_f) {
	if ((_1ab11d36e_IsVoid((*(_26135_f)).ptr()) || ((*((*((*(_26135_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _26513_n = (*((*(_26135_f))))._field_Instances.len();;
	if (((*((*(_26135_f))))._field_Generics.len() == 0LL)) {
		_26513_n=1LL;
	};
	{
		auto expr = (*((*(_26135_f))))._field_Instances.slice(0LL, _26513_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bd59d5cd:;
		if (it != expr_end) {
			jule::Ptr<_1ab120d00_FnIns> _26921_ins = *it;
			{
				_1ad2d109b_pushResultIns(_self_, &(_26921_ins));
			}
			_iter_next_1bd59d5cd:;
			++it;
			goto _iter_begin_1bd59d5cd;
		}
		_iter_end_1bd59d5cd:;
	};
}



inline jule::I64 _1ad2d1750_findTypeOffsetS(_1ad2ce8b3_ObjectCoder* _self_, jule::Ptr<_1ab131195_Trait> _27430_t, jule::Ptr<_1ab10acb8_StructIns> _27445_s) {
	if (((*(_27430_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd59eab8:;
		if (it != expr_end) {
			jule::Ptr<_1ad2cd472_traitHash> *_27816_hash = it;
			{
				if ((((*((*(_27816_hash))))._field_t == _27430_t) && ((*((*(_27816_hash))))._field_s == _27445_s))) {
					return (*((*(_27816_hash))))._field_i;;
				};
			}
			_iter_next_1bd59eab8:;
			++it;
			goto _iter_begin_1bd59eab8;
		}
		_iter_end_1bd59eab8:;
	};
	return -1LL;;
}



inline jule::I64 _1ad2d1b4b_findTypeOffset(_1ad2ce8b3_ObjectCoder* _self_, jule::Ptr<_1ab131195_Trait> _28629_t, jule::Ptr<_1ab25aa1c_TypeKind> _28644_k) {
	if (((*(_28629_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1ab10acb8_StructIns> _29017_s = nullptr;;
	if ((_1ab25d404_Sptr(_28644_k.ptr()) != nullptr)) {
		_28644_k=(*(_1ab25d404_Sptr(_28644_k.ptr())))._field_Elem;
	};
	_29017_s=_1ab25e6e1_Struct(_28644_k.ptr());
	if ((_29017_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I64>(_1ad2d1750_findTypeOffsetS(_self_, _28629_t, _29017_s));;
}



inline void _1ad2d1eae_pushAndWriteMaskMapper(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab131195_Trait> _30146_t1, jule::Ptr<_1ab131195_Trait> _30162_t2) {
	_1d7ad2eb1_StrBuilder _30213_ident = static__1d7ad327a_New(32LL);;
	_1d7adba8b_WriteStr(&_30213_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_1d7adba8b_WriteStr(&_30213_ident, _1d8bbe40e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30162_t2))), 15LL));
	_1d7adba8b_WriteStr(&_30213_ident, jule::Str::lit("_to_", 4));
	_1d7adba8b_WriteStr(&_30213_ident, _1d8bbe40e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30146_t1))), 15LL));
	_1d7adb7d3_Write(&(*(_self_))._field_Obj, _1d7adcd34_Buf(&_30213_ident));
	{
		auto expr = &((*(_self_))._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5a5085:;
		if (it != expr_end) {
			_1ad2cd84b_traitCast _31016_m = *it;
			{
				if (((_31016_m._field_t1 == _30146_t1) && (_31016_m._field_t2 == _30162_t2))) {
					return;;
				};
			}
			_iter_next_1bd5a5085:;
			++it;
			goto _iter_begin_1bd5a5085;
		}
		_iter_end_1bd5a5085:;
	};
	{ jule::Slice<_1ad2cd84b_traitCast> &__jule_push_dest = (*(_self_))._field_traitCastMap; __jule_push_dest.push(_1ad2cd84b_traitCast{._field_t1=_30146_t1, ._field_t2=_30162_t2}); };
	;
	_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Int", 9));
	_1d7adbd44_WriteByte(&(*(_self_))._field_anyObj, ' ');
	_1d7adb7d3_Write(&(*(_self_))._field_anyObj, _1d7adcd34_Buf(&_30213_ident));
	_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("(const jule::Int offset) noexcept { ", 36));
	{
		auto expr = &((*(_30146_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5a8ac2:;
		if (it != expr_end) {
			jule::Ptr<_1ab10803a_Struct> _32921_s1 = *it;
			{
				{
					auto expr = &((*(_30162_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd5a940d:;
					if (it != expr_end) {
						jule::Ptr<_1ab10803a_Struct> _33020_s2 = *it;
						{
							if ((_32921_s1 == _33020_s2)) {
								{
									auto expr = &((*(_32921_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1bd5aa266:;
									if (it != expr_end) {
										jule::Ptr<_1ab10acb8_StructIns> _33233_s1i = *it;
										{
											jule::I64 _33325_i1 = _1ad2d1750_findTypeOffsetS(_self_.ptr(), _30146_t1, _33233_s1i);;
											jule::I64 _33425_i2 = _1ad2d1750_findTypeOffsetS(_self_.ptr(), _30162_t2, _33233_s1i);;
											_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("if (offset == ", 14));
											_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _1d8bbea91_Itoa(_33425_i2));
											_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(") return ", 9));
											_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _1d8bbea91_Itoa(_33325_i1));
											_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1bd5aa266:;
										++it;
										goto _iter_begin_1bd5aa266;
									}
									_iter_end_1bd5aa266:;
								};
							};
						}
						_iter_next_1bd5a940d:;
						++it;
						goto _iter_begin_1bd5a940d;
					}
					_iter_end_1bd5a940d:;
				};
			}
			_iter_next_1bd5a8ac2:;
			++it;
			goto _iter_begin_1bd5a8ac2;
		}
		_iter_end_1bd5a8ac2:;
	};
	_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" return ", 8));
	_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, _1d8bbea91_Itoa(0LL));
	_1d7adba8b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("; }\n", 4));
}



inline void _1ad2d2267_locInfo(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab0c1e7c_Token>* _35028_t) {
	jule::Str *_35110_loc = &((*((*((*(_35028_t))))._field_File))._field_Path);;
	if (_2014c4290_Production) {
		{
			
			if (_1d7abd93b_HasPrefix((*(_35110_loc)), _1d7c936d2_PathStdlib)) {
				_case_begin_1bd5b0128:;
				{
					_1ad215783_cstrBytes(&((*(_self_))._field_Obj), (*(_35110_loc)).slice((_1d7ae0d26_Dir(_1d7c936d2_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1d7abd93b_HasPrefix((*(_35110_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1bd5b018e:;
				{
					_1ad215783_cstrBytes(&((*(_self_))._field_Obj), (*(_35110_loc)).slice((_1d7ae0d26_Dir((*((*(_self_))._field_ir))._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1bd5aeb94:;
				{
					_1ad215783_cstrBytes(&((*(_self_))._field_Obj), (*(_35110_loc)));
				}
			}
			_match_end_1bd5aeac8:;
		};
	} else {
		_1ad215783_cstrBytes(&((*(_self_))._field_Obj), (*(_35110_loc)));
	};
	_1ad2d0067_write(_self_, jule::Str::lit(":", 1));
	_1ad2d0067_write(_self_, _1d8bbea91_Itoa((*((*(_35028_t))))._field_Row));
	_1ad2d0067_write(_self_, jule::Str::lit(":", 1));
	_1ad2d0067_write(_self_, _1d8bbea91_Itoa((*((*(_35028_t))))._field_Column));
}



inline void _1ad2d2465_head(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	_1ad2c5414_Time _3779_time = static__1ad2c59ca_Now();;
	_1ad2c4c3d_AbsTime _3789_abs = _1ad2c71b3_Abs(&_3779_time);;
	_1ad2d0067_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1ad2d0067_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1ad2d0067_write(_self_, jule::Str::lit("jule0.0.15 @master", 18));
	_1ad2d0067_write(_self_, jule::Str::lit("\n", 1));
	_1ad2d0067_write(_self_, jule::Str::lit("// Date: ", 9));
	_1ad2d0067_write(_self_, _1d8bbe40e_FmtUint(_3789_abs._field_Day, 10LL));
	_1ad2d0067_write(_self_, jule::Str::lit("/", 1));
	_1ad2d0067_write(_self_, _1d8bbe40e_FmtUint(_3789_abs._field_Month, 10LL));
	_1ad2d0067_write(_self_, jule::Str::lit("/", 1));
	_1ad2d0067_write(_self_, _1d8bbe40e_FmtUint(_3789_abs._field_Year, 10LL));
	_1ad2d0067_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1ad2d0067_write(_self_, (*(_self_))._field_info._field_Compiler);
	_1ad2d0067_write(_self_, jule::Str::lit(" ", 1));
	_1ad2d0067_write(_self_, (*(_self_))._field_info._field_CompilerCommand);
	_1ad2d0067_write(_self_, jule::Str::lit("\n\n", 2));
	if (_2014c4290_Production) {
		_1ad2d0067_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_2014c3aec_RC))) {
		_1ad2d0067_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_2014c3ec6_Safety))) {
		_1ad2d0067_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1ad2d2663_links(_self_);
	_1ad2d0067_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1ad2d0067_write(_self_, _1d7c93eeb_PathApi);
	_1ad2d0067_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _1ad2d2663_links(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5bb530:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _41516_used = *it;
			{
				{
					
					if ((!((*(_41516_used))._field_Binded))) {
						_case_begin_1bd5bc2de:;
						{
							goto _iter_next_1bd5bb530;
						}
					}
					else if (_1d7b74abe_IsStdHeaderPath((*(_41516_used))._field_Path)) {
						_case_begin_1bd5bc366:;
						{
							_1ad2d0067_write(_self_, jule::Str::lit("#include ", 9));
							_1ad2d0067_write(_self_, (*(_41516_used))._field_Path);
							_1ad2d0067_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1d7b74d77_IsValidHeaderExt(_1d7ae03ec_Ext((*(_41516_used))._field_Path))) {
						_case_begin_1bd5bc3dd:;
						{
							_1ad2d0067_write(_self_, jule::Str::lit("#include \"", 10));
							_1ad2d0067_write(_self_, (*(_41516_used))._field_Path);
							_1ad2d0067_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1bd5bc1bd:;
				};
			}
			_iter_next_1bd5bb530:;
			++it;
			goto _iter_begin_1bd5bb530;
		}
		_iter_end_1bd5bb530:;
	};
}



inline void _1ad2d291b_prepareStructure(_1ad2ce8b3_ObjectCoder* _self_, jule::Ptr<_1ab10803a_Struct>* _43140_s) {
	{
		auto expr = &((*((*(_43140_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5be577:;
		if (it != expr_end) {
			jule::Ptr<_1ab10acb8_StructIns> _43221_ins = *it;
			{
				{
					auto expr = &((*(_43221_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd5c0b94:;
					if (it != expr_end) {
						jule::Ptr<_1ab11cdeb_Fn> _43325_m = *it;
						{
							if ((*(_43325_m))._field_Statically) {
								goto _iter_next_1bd5c0b94;
							};
							{
								auto expr = &((*(_43325_m))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bd5c1a52:;
								if (it != expr_end) {
									jule::Ptr<_1ab120d00_FnIns> _43729_mins = *it;
									{
										jule::Ptr<_1ab11ed54_ParamIns> _43825_p = (*(_43729_mins))._field_Params[0LL];;
										if ((!(_1ab11bcc9_IsRef((*(_43825_p))._field_Decl.ptr())))) {
											(*(_43825_p))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ad2dda6a_customType>(_1ad2dda6a_customType{._field_kind=(_1ad2e4c19_kind((*(_self_))._field_tc.ptr(), (*(_43825_p))._field_Kind) + jule::Str::lit("*", 1))}), 27)});
										} else {
											(*(_43825_p))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ad2dda6a_customType>(_1ad2dda6a_customType{._field_kind=_1ad2e4c19_kind((*(_self_))._field_tc.ptr(), (*(_43825_p))._field_Kind)}), 27)});
										};
									}
									_iter_next_1bd5c1a52:;
									++it;
									goto _iter_begin_1bd5c1a52;
								}
								_iter_end_1bd5c1a52:;
							};
						}
						_iter_next_1bd5c0b94:;
						++it;
						goto _iter_begin_1bd5c0b94;
					}
					_iter_end_1bd5c0b94:;
				};
			}
			_iter_next_1bd5be577:;
			++it;
			goto _iter_begin_1bd5be577;
		}
		_iter_end_1bd5be577:;
	};
}



inline void _1ad2d2b19_prepareStructures(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5c2239:;
		if (it != expr_end) {
			jule::Ptr<_1ab10803a_Struct> _45821_s = *it;
			{
				if (((*(_45821_s))._field_Token != nullptr)) {
					_1ad2d291b_prepareStructure(_self_.ptr(), &(_45821_s));
				};
			}
			_iter_next_1bd5c2239:;
			++it;
			goto _iter_begin_1bd5c2239;
		}
		_iter_end_1bd5c2239:;
	};
}



inline void _1ad2d2dc2_iterPackages(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1ab187b14_Package>*)> _46532_f) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5c456b:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _46621_used = *it;
			{
				if ((!((*(_46621_used))._field_Binded))) {
					_46532_f(&((*(_46621_used))._field_Package));
				};
			}
			_iter_next_1bd5c456b:;
			++it;
			goto _iter_begin_1bd5c456b;
		}
		_iter_end_1bd5c456b:;
	};
	_46532_f(&((*((*(_self_))._field_ir))._field_Main));
}



inline void _1ad2d30c0_buildTraitMap(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	_1ad2d2dc2_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ab187b14_Package>*)>([=](jule::Ptr<_1ab187b14_Package>* _47535_pkg) mutable -> void {
		_1ad2db848_iterFiles(_47535_pkg, jule::Fn<void(jule::Ptr<_1ab224d9e_SymbolTable>*)>([=](jule::Ptr<_1ab224d9e_SymbolTable>* _47636_file) mutable -> void {
			{
				auto expr = &((*((*(_47636_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bd5c9b59:;
				if (it != expr_end) {
					jule::Ptr<_1ab131195_Trait> _47729_t = *it;
					{
						if (((*(_47729_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_47729_t))._field_Implemented.len() == 0LL)) {
							jule::Ptr<_1ad2cd472_traitHash> _48229_hash = jule::new_ptr<_1ad2cd472_traitHash>(_1ad2cd472_traitHash{._field_t=_47729_t, ._field_s=nullptr, ._field_i=0LL});;
							_1d7ad2eb1_StrBuilder _48729_b = static__1d7ad327a_New(static_cast<jule::I64>((*(_47729_t))._field_Ident.len()));;
							static__1ad21b04c_writeIdentTo(&(_48729_b), &((*(_47729_t))._field_Ident));
							(*(_48229_hash))._field_ti=_1d7adc383_Str(&_48729_b);
							{ jule::Slice<jule::Ptr<_1ad2cd472_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_48229_hash); };
							goto _iter_next_1bd5c9b59;
						};
						jule::I64 _49325_i = 0LL;;
						{
							auto expr = &((*(_47729_t))._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1bd5d03bd:;
							if (it != expr_end) {
								jule::Ptr<_1ab10803a_Struct> _49433_s = *it;
								{
									{
										auto expr = &((*(_49433_s))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1bd5d39dc:;
										if (it != expr_end) {
											jule::Ptr<_1ab10acb8_StructIns> _49537_ins = *it;
											{
												jule::Ptr<_1ad2cd472_traitHash> _49633_hash = jule::new_ptr<_1ad2cd472_traitHash>(_1ad2cd472_traitHash{._field_t=_47729_t, ._field_s=_49537_ins, ._field_i=_49325_i});;
												_1d7ad2eb1_StrBuilder _50133_b = static__1d7ad327a_New(static_cast<jule::I64>((*(_47729_t))._field_Ident.len()));;
												static__1ad21b04c_writeIdentTo(&(_50133_b), &((*(_47729_t))._field_Ident));
												(*(_49633_hash))._field_ti=_1d7adc383_Str(&_50133_b);
												{ jule::Slice<jule::Ptr<_1ad2cd472_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_49633_hash); };
												(_49325_i)++;
											}
											_iter_next_1bd5d39dc:;
											++it;
											goto _iter_begin_1bd5d39dc;
										}
										_iter_end_1bd5d39dc:;
									};
								}
								_iter_next_1bd5d03bd:;
								++it;
								goto _iter_begin_1bd5d03bd;
							}
							_iter_end_1bd5d03bd:;
						};
						_1ad2dc5e6_pushMethodsFromInherits(&(_47729_t), &(_47729_t));
					}
					_iter_next_1bd5c9b59:;
					++it;
					goto _iter_begin_1bd5c9b59;
				}
				_iter_end_1bd5c9b59:;
			};
		}));
	}));
}



inline void _1ad2d32bd_traitDecls(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	_1ad2d2dc2_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ab187b14_Package>*)>([=](jule::Ptr<_1ab187b14_Package>* _51735_pkg) mutable -> void {
		_1ad2db848_iterFiles(_51735_pkg, jule::Fn<void(jule::Ptr<_1ab224d9e_SymbolTable>*)>([=](jule::Ptr<_1ab224d9e_SymbolTable>* _51836_file) mutable -> void {
			{
				auto expr = &((*((*(_51836_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bd5d7408:;
				if (it != expr_end) {
					jule::Ptr<_1ab131195_Trait> _51929_t = *it;
					{
						if (((*(_51929_t))._field_Token == nullptr)) {
							return;;
						};
						_1ad2d0661_indent(_self_);
						_1ad2d0067_write(_self_, jule::Str::lit("struct ", 7));
						_1ad2d0067_write(_self_, static__1ad21c14c_traitDecl(_51929_t));
						_1ad2d0067_write(_self_, jule::Str::lit("{};\n", 4));
					}
					_iter_next_1bd5d7408:;
					++it;
					goto _iter_begin_1bd5d7408;
				}
				_iter_end_1bd5d7408:;
			};
		}));
	}));
}



inline void _1ad2d3576_structurePlainDecl(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab10803a_Struct>* _53243_s) {
	{
		auto expr = &((*((*(_53243_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5d02d0:;
		if (it != expr_end) {
			jule::Ptr<_1ab10acb8_StructIns> _53321_ins = *it;
			{
				_1ad2d0067_write(_self_, jule::Str::lit("struct ", 7));
				_1ad2d0067_write(_self_, static__1ad21c999_structureIns(&(_53321_ins)));
				_1ad2d0067_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bd5d02d0:;
			++it;
			goto _iter_begin_1bd5d02d0;
		}
		_iter_end_1bd5d02d0:;
	};
}



inline void _1ad2d3774_structurePlainDecls(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5d97d4:;
		if (it != expr_end) {
			jule::Ptr<_1ab10803a_Struct> _54121_s = *it;
			{
				if (((*(_54121_s))._field_Token != nullptr)) {
					_1ad2d3576_structurePlainDecl(_self_, &(_54121_s));
				};
			}
			_iter_next_1bd5d97d4:;
			++it;
			goto _iter_begin_1bd5d97d4;
		}
		_iter_end_1bd5d97d4:;
	};
}



inline void _1ad2d3a2c_fieldDecl(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab10a218_FieldIns>* _54834_f) {
	_1ad2d0067_write(_self_, _1ad2e4c19_kind((*(_self_))._field_tc.ptr(), (*((*(_54834_f))))._field_Kind));
	_1ad2d0067_write(_self_, jule::Str::lit(" ", 1));
	_1ad2d0067_write(_self_, static__1ad21cc63_field(&((*((*(_54834_f))))._field_Decl)));
	if (((*((*(_54834_f))))._field_Default == nullptr)) {
		if (_1ad2ebdca_shouldInitialized(&((*((*(_54834_f))))._field_Kind))) {
			_1ad2d0067_write(_self_, jule::Str::lit(" = ", 3));
			_1ad214cc1_initExpr((*(_self_))._field_ec, (*((*(_54834_f))))._field_Kind);
		};
	} else {
		_1ad2d0067_write(_self_, jule::Str::lit(" = ", 3));
		_1ad20a9ed_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_54834_f))))._field_Default))._field_Model);
	};
	_1ad2d0067_write(_self_, jule::Str::lit(";", 1));
}



inline void _1ad2d3cd5_structureDestructor(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab10acb8_StructIns>* _56644_s) {
	;
	jule::Ptr<_1ab11cdeb_Fn> _5699_disposeMethod = _1ab10bd30_FindMethod((*(_56644_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _57013_disposed = static__1ab1c8eb8_Dispose(_5699_disposeMethod);;
	if ((!(_57013_disposed))) {
		return;;
	};
	_1ad2d0067_write(_self_, jule::Str::lit("~", 1));
	_1ad2d0067_write(_self_, static__1ad21c999_structureIns(_56644_s));
	_1ad2d0067_write(_self_, jule::Str::lit("(void) { ", 9));
	_1ad2d0067_write(_self_, static__1ad21bab9_func(&(_5699_disposeMethod)));
	_1ad2d0067_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1ad2d4148_structureOperatorEq(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Str* _58240_ident, jule::Ptr<_1ab10acb8_StructIns>* _58257_s) {
	if ((!((*((*(_58257_s))))._field_Comparable))) {
		return;;
	};
	if (((*((*(_58257_s))))._field_Operators._field_Eq != nullptr)) {
		_1ad2d48c9_structureOperator(_self_, _58240_ident, &((*((*(_58257_s))))._field_Operators._field_Eq), jule::Str::lit("==", 2));
		return;;
	};
	_1ad2d0661_indent(_self_);
	if (_1ab3684dc_Inline) {
		_1ad2d0067_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1ad2d0067_write(_self_, jule::Str::lit("bool operator==(", 16));
	_1ad2d0067_write(_self_, (*(_58240_ident)));
	_1ad2d0067_write(_self_, jule::Str::lit(" _other) {", 10));
	if (((*((*(_58257_s))))._field_Fields.len() > 0LL)) {
		_1ad2d0265_addIndent(_self_);
		_1ad2d0067_write(_self_, jule::Str::lit("\n", 1));
		_1ad2d0661_indent(_self_);
		_1ad2d0067_write(_self_, jule::Str::lit("return ", 7));
		_1ad2d0265_addIndent(_self_);
		jule::Bool _60517_writed = false;;
		{
			auto expr = &((*((*(_58257_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd5e8859:;
			if (it != expr_end) {
				jule::Ptr<_1ab10a218_FieldIns> _60625_f = *it;
				{
					jule::Ptr<_1ab10acb8_StructIns> _60817_strct = _1ab25e6e1_Struct((*(_60625_f))._field_Kind.ptr());;
					if ((((_60817_strct != nullptr) && ((*(_60817_strct))._field_Decl != nullptr)) && (*((*(_60817_strct))._field_Decl))._field_Binded)) {
						goto _iter_next_1bd5e8859;
					};
					if (_60517_writed) {
						_1ad2d0067_write(_self_, jule::Str::lit(" &&", 3));
					};
					_60517_writed=true;
					_1ad2d0067_write(_self_, jule::Str::lit("\n", 1));
					_1ad2d0661_indent(_self_);
					_1ad2d0067_write(_self_, jule::Str::lit("this->", 6));
					jule::Str _61917_fIdent = static__1ad21cc63_field(&((*(_60625_f))._field_Decl));;
					_1ad2d0067_write(_self_, _61917_fIdent);
					_1ad2d0067_write(_self_, jule::Str::lit(" == _other.", 11));
					_1ad2d0067_write(_self_, _61917_fIdent);
				}
				_iter_next_1bd5e8859:;
				++it;
				goto _iter_begin_1bd5e8859;
			}
			_iter_end_1bd5e8859:;
		};
		_1ad2d0463_doneIndent(_self_);
		if ((!(_60517_writed))) {
			_1ad2d0067_write(_self_, jule::Str::lit("true", 4));
		};
		_1ad2d0067_write(_self_, jule::Str::lit(";\n", 2));
		_1ad2d0463_doneIndent(_self_);
		_1ad2d0661_indent(_self_);
		_1ad2d0067_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1ad2d0067_write(_self_, jule::Str::lit(" return true; }", 15));
	};
	_1ad2d0067_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1ad2d44ab_structureOperatorNotEq(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Str* _63843_ident, jule::Ptr<_1ab10acb8_StructIns>* _63860_s) {
	if ((!((*((*(_63860_s))))._field_Comparable))) {
		return;;
	};
	_1ad2d0661_indent(_self_);
	if (_1ab3684dc_Inline) {
		_1ad2d0067_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1ad2d0067_write(_self_, jule::Str::lit("bool operator!=(", 16));
	_1ad2d0067_write(_self_, (*(_63843_ident)));
	_1ad2d0067_write(_self_, jule::Str::lit(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1ad2d48c9_structureOperator(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Str* _65238_ident, jule::Ptr<_1ab120d00_FnIns>* _65255_f, jule::Str _65266_op) {
	if (((*(_65255_f)) == nullptr)) {
		return;;
	};
	jule::Bool _6579_unary = ((*((*(_65255_f))))._field_Params.len() == 1LL);;
	jule::Bool _6589_assignment = _1ab11d36e_IsVoid((*((*(_65255_f))))._field_Decl.ptr());;
	_1ad2d0661_indent(_self_);
	if (_1ab3684dc_Inline) {
		_1ad2d0067_write(_self_, jule::Str::lit("inline ", 7));
	};
	if (_6589_assignment) {
		_1ad2d0067_write(_self_, (*(_65238_ident)));
		_1ad2d0067_write(_self_, jule::Str::lit("&", 1));
	} else {
		if ((_1ab25d16d_Prim((*((*(_65255_f))))._field_Result.ptr()) == nullptr)) {
			_1ad2d0067_write(_self_, (*(_65238_ident)));
		} else {
			_1ad2d0067_write(_self_, jule::Str::lit("jule::Bool", 10));
		};
	};
	_1ad2d0067_write(_self_, jule::Str::lit(" operator", 9));
	_1ad2d0067_write(_self_, _65266_op);
	_1ad2d0067_write(_self_, jule::Str::lit("(", 1));
	if ((!(_6579_unary))) {
		jule::Ptr<_1ab11ed54_ParamIns> _68017_p = (*((*(_65255_f))))._field_Params[1LL];;
		_1ad2d0067_write(_self_, _1ad2e3a92_paramIns((*(_self_))._field_tc.ptr(), &(_68017_p)));
		_1ad2d0067_write(_self_, jule::Str::lit(" _other", 7));
	};
	_1ad2d0067_write(_self_, jule::Str::lit(") { ", 4));
	if ((!(_6589_assignment))) {
		_1ad2d0067_write(_self_, jule::Str::lit("return ", 7));
	};
	_1ad2d0067_write(_self_, static__1ad21bd83_funcIns(_65255_f));
	if ((!(_6579_unary))) {
		_1ad2d0067_write(_self_, jule::Str::lit("(this, _other); ", 16));
		if (_6589_assignment) {
			_1ad2d0067_write(_self_, jule::Str::lit("return *this; ", 14));
		};
		_1ad2d0067_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1ad2d0067_write(_self_, jule::Str::lit("(this); }", 9));
	};
	_1ad2d0067_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1ad2d4b82_structureOperators(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab10acb8_StructIns>* _70143_s) {
	jule::Str _7029_ident = static__1ad21c999_structureIns(_70143_s);;
	_1ad2d4148_structureOperatorEq(_self_, &(_7029_ident), _70143_s);
	_1ad2d44ab_structureOperatorNotEq(_self_, &(_7029_ident), _70143_s);
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Gt), jule::Str::lit(">", 1));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_GtEq), jule::Str::lit(">=", 2));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Lt), jule::Str::lit("<", 1));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_LtEq), jule::Str::lit("<=", 2));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Shl), jule::Str::lit("<<", 2));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Shr), jule::Str::lit(">>", 2));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Add), jule::Str::lit("+", 1));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Sub), jule::Str::lit("-", 1));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Div), jule::Str::lit("/", 1));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Mul), jule::Str::lit("*", 1));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Mod), jule::Str::lit("%", 1));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitAnd), jule::Str::lit("&", 1));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitOr), jule::Str::lit("|", 1));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitXor), jule::Str::lit("^", 1));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Neg), jule::Str::lit("-", 1));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Pos), jule::Str::lit("+", 1));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitNot), jule::Str::lit("~", 1));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_AddAssign), jule::Str::lit("+=", 2));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_SubAssign), jule::Str::lit("-=", 2));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_DivAssign), jule::Str::lit("/=", 2));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_MulAssign), jule::Str::lit("*=", 2));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_ModAssign), jule::Str::lit("%=", 2));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_ShlAssign), jule::Str::lit("<<=", 3));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_ShrAssign), jule::Str::lit(">>=", 3));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitOrAssign), jule::Str::lit("|=", 2));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitAndAssign), jule::Str::lit("&=", 2));
	_1ad2d48c9_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitXorAssign), jule::Str::lit("^=", 2));
}



inline void _1ad2d4e3a_structureInsDecl(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab10acb8_StructIns>* _74041_s) {
	{
		auto expr = &((*((*(_74041_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd61a6b1:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _74121_m = *it;
			{
				if (_1ad2dcb79_isHeadDecl(&(_74121_m))) {
					_1ad2d63d1_funcDecl(_self_, &(_74121_m), false);
				};
			}
			_iter_next_1bd61a6b1:;
			++it;
			goto _iter_begin_1bd61a6b1;
		}
		_iter_end_1bd61a6b1:;
	};
	_1ad2d0067_write(_self_, jule::Str::lit("struct ", 7));
	jule::Str _7489_outIdent = static__1ad21c999_structureIns(_74041_s);;
	_1ad2d0067_write(_self_, _7489_outIdent);
	_1ad2d0067_write(_self_, jule::Str::lit(" {\n", 3));
	_1ad2d0265_addIndent(_self_);
	{
		auto expr = &((*((*(_74041_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd61c3d8:;
		if (it != expr_end) {
			jule::Ptr<_1ab10a218_FieldIns> _75421_f = *it;
			{
				_1ad2d0661_indent(_self_);
				_1ad2d3a2c_fieldDecl(_self_, &(_75421_f));
				_1ad2d0067_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1bd61c3d8:;
			++it;
			goto _iter_begin_1bd61c3d8;
		}
		_iter_end_1bd61c3d8:;
	};
	_1ad2d0661_indent(_self_);
	_1ad2d3cd5_structureDestructor(_self_, _74041_s);
	_1ad2d0067_write(_self_, jule::Str::lit("\n\n", 2));
	_1ad2d4b82_structureOperators(_self_, _74041_s);
	_1ad2d0067_write(_self_, jule::Str::lit("\n", 1));
	_1ad2d0463_doneIndent(_self_);
	_1ad2d0661_indent(_self_);
	_1ad2d0067_write(_self_, jule::Str::lit("};", 2));
}



inline void _1ad2d51e3_structureDecl(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab10803a_Struct>* _77238_s) {
	{
		auto expr = &((*((*(_77238_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd621123:;
		if (it != expr_end) {
			jule::Ptr<_1ab10acb8_StructIns> _77321_ins = *it;
			{
				_1ad2d4e3a_structureInsDecl(_self_, &(_77321_ins));
			}
			_iter_next_1bd621123:;
			++it;
			goto _iter_begin_1bd621123;
		}
		_iter_end_1bd621123:;
	};
}



inline void _1ad2d53e1_structureDecls(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd621981:;
		if (it != expr_end) {
			jule::Ptr<_1ab10803a_Struct> _77921_s = *it;
			{
				if (((*(_77921_s))._field_Token != nullptr)) {
					_1ad2d51e3_structureDecl(_self_, &(_77921_s));
					_1ad2d0067_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1bd621981:;
			++it;
			goto _iter_begin_1bd621981;
		}
		_iter_end_1bd621981:;
	};
}



inline void _1ad2d55de_structureMethodDecls(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd62292c:;
		if (it != expr_end) {
			jule::Ptr<_1ab10803a_Struct> _78821_s = *it;
			{
				if (((*(_78821_s))._field_Token != nullptr)) {
					{
						auto expr = &((*(_78821_s))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bd624973:;
						if (it != expr_end) {
							jule::Ptr<_1ab10acb8_StructIns> _79029_ins = *it;
							{
								{
									auto expr = &((*(_79029_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1bd6253be:;
									if (it != expr_end) {
										jule::Ptr<_1ab11cdeb_Fn> _79133_m = *it;
										{
											if ((!(_1ad2dcb79_isHeadDecl(&(_79133_m))))) {
												_1ad2d1354_pushResult(_self_, &(_79133_m));
												_1ad2d63d1_funcDecl(_self_, &(_79133_m), false);
											};
										}
										_iter_next_1bd6253be:;
										++it;
										goto _iter_begin_1bd6253be;
									}
									_iter_end_1bd6253be:;
								};
							}
							_iter_next_1bd624973:;
							++it;
							goto _iter_begin_1bd624973;
						}
						_iter_end_1bd624973:;
					};
				};
			}
			_iter_next_1bd62292c:;
			++it;
			goto _iter_begin_1bd62292c;
		}
		_iter_end_1bd62292c:;
	};
}



inline void _1ad2d5897_paramsDecls(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1ab11ed54_ParamIns>>* _80336_params) {
	if (((*(_80336_params)).len() == 0LL)) {
		_1ad2d0067_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1ad2d0067_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _80336_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6251c1:;
		if (it != expr_end) {
			jule::I64 _81014_i = it - expr->begin();
			jule::Ptr<_1ab11ed54_ParamIns> _81021_p = *it;
			{
				_1ad2d0067_write(_self_, _1ad2e3a92_paramIns((*(_self_))._field_tc.ptr(), &(_81021_p)));
				if ((((*(_80336_params)).len() - _81014_i) > 1LL)) {
					_1ad2d0067_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1bd6251c1:;
			++it;
			_81014_i++;
			goto _iter_begin_1bd6251c1;
		}
		_iter_end_1bd6251c1:;
	};
	_1ad2d0067_write(_self_, jule::Str::lit(")", 1));
}



inline void _1ad2d5c0a_funcHead(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab120d00_FnIns>* _82033_f, jule::Bool _82044_ptr) {
	if ((((!(_82044_ptr)) && _1ab3684dc_Inline) && (!(_1ab11d88b_IsEntryPoint((*((*(_82033_f))))._field_Decl.ptr()))))) {
		_1ad2d0067_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1ad2e4246_funcInsResult((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Obj), _82033_f);
	if (_82044_ptr) {
		_1ad2d0067_write(_self_, jule::Str::lit("(*", 2));
		_1ad2d0067_write(_self_, static__1ad21bd83_funcIns(_82033_f));
		_1ad2d0067_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1ad2d0067_write(_self_, jule::Str::lit(" ", 1));
		_1ad2d0067_write(_self_, static__1ad21bd83_funcIns(_82033_f));
	};
}



inline void _1ad2d606d_funcDeclIns(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab120d00_FnIns>* _83536_f, jule::Bool _83547_ptr) {
	_1ad2d0661_indent(_self_);
	_1ad2d5c0a_funcHead(_self_, _83536_f, _83547_ptr);
	_1ad2d5897_paramsDecls(_self_, &((*((*(_83536_f))))._field_Params));
	_1ad2d0067_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1ad2d63d1_funcDecl(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab11cdeb_Fn>* _84233_f, jule::Bool _84241_ptr) {
	{
		auto expr = &((*((*(_84233_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd62e86d:;
		if (it != expr_end) {
			jule::Ptr<_1ab120d00_FnIns> _84321_c = *it;
			{
				_1ad2d606d_funcDeclIns(_self_, &(_84321_c), _84241_ptr);
			}
			_iter_next_1bd62e86d:;
			++it;
			goto _iter_begin_1bd62e86d;
		}
		_iter_end_1bd62e86d:;
	};
}



inline void _1ad2d67ee_funcDeclTrait(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab131195_Trait>* _84838_t, jule::Ptr<_1ab11cdeb_Fn>* _84854_f, jule::Bool _84862_ptr) {
	{
		auto expr = &((*((*(_84854_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd630c04:;
		if (it != expr_end) {
			jule::Ptr<_1ab120d00_FnIns> _84921_c = *it;
			{
				jule::Ptr<_1ab25aa1c_TypeKind> _85017_k = (*((*(_84921_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_84921_c))._field_Params[0LL]))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>((*(_84838_t)), 2)});
				_1ad2d606d_funcDeclIns(_self_, &(_84921_c), _84862_ptr);
				(*((*(_84921_c))._field_Params[0LL]))._field_Kind=_85017_k;
			}
			_iter_next_1bd630c04:;
			++it;
			goto _iter_begin_1bd630c04;
		}
		_iter_end_1bd630c04:;
	};
}



inline void _1ad2d69ec_funcDecls(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	_1ad2d2dc2_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ab187b14_Package>*)>([=](jule::Ptr<_1ab187b14_Package>* _85835_pkg) mutable -> void {
		_1ad2db848_iterFiles(_85835_pkg, jule::Fn<void(jule::Ptr<_1ab224d9e_SymbolTable>*)>([=](jule::Ptr<_1ab224d9e_SymbolTable>* _85936_file) mutable -> void {
			{
				auto expr = &((*((*(_85936_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bd635247:;
				if (it != expr_end) {
					jule::Ptr<_1ab11cdeb_Fn> _86029_f = *it;
					{
						if (((!((*(_86029_f))._field_Binded)) && ((*(_86029_f))._field_Token != nullptr))) {
							_1ad2d1354_pushResult(_self_, &(_86029_f));
							_1ad2d63d1_funcDecl(_self_, &(_86029_f), false);
						};
					}
					_iter_next_1bd635247:;
					++it;
					goto _iter_begin_1bd635247;
				}
				_iter_end_1bd635247:;
			};
		}));
	}));
}



inline void _1ad2d6d60_traitDataTypeMethods(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab131195_Trait>* _87045_owner, jule::Ptr<_1ab131195_Trait>* _87065_t) {
	{
		auto expr = &((*((*(_87065_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd634de5:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _87121_m = *it;
			{
				jule::Ptr<_1ab120d00_FnIns> _87217_ins = (*(_87121_m))._field_Instances[0LL];;
				jule::Ptr<_1ab11ed54_ParamIns> _87317_p = (*(_87217_ins))._field_Params[0LL];;
				(*(_87317_p))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>((*(_87065_t)), 2)});
				{
					auto expr = (*(_87217_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1bd6388dd:;
					if (it != expr_end) {
						jule::I64 _87718_i = it - expr.begin();
						jule::Ptr<_1ab11ed54_ParamIns> _87725_ip = *it;
						{
							if (_1ab0c4ba5_IsAnonIdent((*((*(_87725_ip))._field_Decl))._field_Ident)) {
								(*((*(_87725_ip))._field_Decl))._field_Ident=(jule::Str::lit("_", 1) + _1d8bbea91_Itoa(_87718_i));
							};
						}
						_iter_next_1bd6388dd:;
						++it;
						_87718_i++;
						goto _iter_begin_1bd6388dd;
					}
					_iter_end_1bd6388dd:;
				};
				if ((!(_2014c4290_Production))) {
					jule::Ptr<_1ab11ed54_ParamIns> _88321_lp = (*(_87217_ins))._field_Params[((*(_87217_ins))._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ (*((*(_88321_lp))._field_Kind))._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_1bd63d00d:;
							{
								goto _match_end_1bd63b2d6;
							}
						}
						else {
							_case_begin_1bd63b33b:;
							{
								{ jule::Slice<jule::Ptr<_1ab11ed54_ParamIns>> &__jule_push_dest = (*(_87217_ins))._field_Params; __jule_push_dest.push(jule::new_ptr<_1ab11ed54_ParamIns>(_1ab11ed54_ParamIns{._field_Decl=jule::new_ptr<_1ab11b427_Param>(_1ab11b427_Param{._field_Ident=jule::Str::lit("__file", 6)}), ._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ad2dda6a_customType>(_1ad2dda6a_customType{._field_kind=jule::Str::lit("const char*", 11)}), 27)})})); };
							}
						}
						_match_end_1bd63b2d6:;
					};
				};
				_1ad2d1354_pushResult(_self_, &(_87121_m));
				_1ad2d67ee_funcDeclTrait(_self_, _87045_owner, &(_87121_m), true);
			}
			_iter_next_1bd634de5:;
			++it;
			goto _iter_begin_1bd634de5;
		}
		_iter_end_1bd634de5:;
	};
}



inline void _1ad2d705d_traitDataTypes(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	_1ad2d2dc2_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ab187b14_Package>*)>([=](jule::Ptr<_1ab187b14_Package>* _90635_pkg) mutable -> void {
		_1ad2db848_iterFiles(_90635_pkg, jule::Fn<void(jule::Ptr<_1ab224d9e_SymbolTable>*)>([=](jule::Ptr<_1ab224d9e_SymbolTable>* _90736_file) mutable -> void {
			{
				auto expr = &((*((*(_90736_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bd63ee88:;
				if (it != expr_end) {
					jule::Ptr<_1ab131195_Trait> _90829_t = *it;
					{
						if (((*(_90829_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_90829_t))._field_Methods.len() == 0LL)) {
							goto _iter_next_1bd63ee88;
						};
						_1ad2d0067_write(_self_, jule::Str::lit("struct ", 7));
						_1ad2d0067_write(_self_, static__1ad21c14c_traitDecl(_90829_t));
						_1ad2d0067_write(_self_, jule::Str::lit("MptrData", 8));
						_1ad2d0067_write(_self_, jule::Str::lit(" {\n", 3));
						_1ad2d0265_addIndent(_self_);
						_1ad2d6d60_traitDataTypeMethods(_self_, &(_90829_t), &(_90829_t));
						_1ad2d0463_doneIndent(_self_);
						_1ad2d0661_indent(_self_);
						_1ad2d0067_write(_self_, jule::Str::lit("};\n\n", 4));
					}
					_iter_next_1bd63ee88:;
					++it;
					goto _iter_begin_1bd63ee88;
				}
				_iter_end_1bd63ee88:;
			};
		}));
	}));
}



inline void _1ad2d7316_paramIns(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab11ed54_ParamIns>* _92933_p) {
	_1ad2d0067_write(_self_, _1ad2e3a92_paramIns((*(_self_))._field_tc.ptr(), _92933_p));
	_1ad2d0067_write(_self_, jule::Str::lit(" ", 1));
	_1ad2d0067_write(_self_, static__1ad21c416_param(&((*((*(_92933_p))))._field_Decl)));
}



inline void _1ad2d75be_paramsIns(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1ab11ed54_ParamIns>>* _93534_params) {
	if (((*(_93534_params)).len() == 0LL)) {
		_1ad2d0067_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1ad2d0067_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _93534_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd645103:;
		if (it != expr_end) {
			jule::I64 _94114_i = it - expr->begin();
			jule::Ptr<_1ab11ed54_ParamIns> _94121_p = *it;
			{
				_1ad2d7316_paramIns(_self_, &(_94121_p));
				if ((((*(_93534_params)).len() - _94114_i) > 1LL)) {
					_1ad2d0067_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1bd645103:;
			++it;
			_94114_i++;
			goto _iter_begin_1bd645103;
		}
		_iter_end_1bd645103:;
	};
	_1ad2d0067_write(_self_, jule::Str::lit(")", 1));
}



inline void _1ad2d7932_varInitExpr(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab1c7a66_Var>* _95036_v, jule::Fn<void(void)> _95045_init) {
	if ((*((*(_95036_v))))._field_Statically) {
		_1ad2d0067_write(_self_, jule::Str::lit("static ", 7));
	};
	_1ad2d0067_write(_self_, _1ad2e4c19_kind((*(_self_))._field_tc.ptr(), (*((*((*(_95036_v))))._field_Kind))._field_Kind));
	_1ad2d0067_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_95036_v))))._field_Reference) {
		_1ad2d0067_write(_self_, jule::Str::lit("*", 1));
	};
	_1ad2d0067_write(_self_, static__1ad21d02c_var((*(_95036_v))));
	if ((_95045_init != nullptr)) {
		_1ad2d0067_write(_self_, jule::Str::lit(" = ", 3));
		_95045_init();
	};
	_1ad2d0067_write(_self_, jule::Str::lit(";", 1));
}



inline void _1ad2d7bda_var(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab1c7a66_Var> _96827_v) {
	if (_1ab0c48db_IsIgnoreIdent((*(_96827_v))._field_Ident)) {
		return;;
	};
	if ((((*(_96827_v))._field_Value != nullptr) && ((*((*(_96827_v))._field_Value))._field_Expr != nullptr))) {
		if (((*((*((*(_96827_v))._field_Value))._field_Data))._field_Model != nullptr)) {
			if ((*(_96827_v))._field_Reference) {
				_1ad2d7932_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1ad2d0067_write(_self_, jule::Str::lit("&(", 2));
					_1ad214a18_model((*(_self_))._field_ec, (*((*((*(_96827_v))._field_Value))._field_Data))._field_Model);
					_1ad2d0067_write(_self_, jule::Str::lit(")", 1));
				}));
			} else {
				_1ad2d7932_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1ad20a9ed_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_96827_v))._field_Value))._field_Data))._field_Model);
				}));
			};
			return;;
		};
		_1ad2d7932_varInitExpr(_self_, &(_96827_v), nullptr);
		return;;
	};
	if ((*(_96827_v))._field_Reference) {
		_1ad2d7932_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ad2d0067_write(_self_, jule::Str::lit("nullptr", 7));
		}));
		return;;
	};
	if (_1ad2ebdca_shouldInitialized(&((*((*(_96827_v))._field_Kind))._field_Kind))) {
		_1ad2d7932_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ad214cc1_initExpr((*(_self_))._field_ec, (*((*(_96827_v))._field_Kind))._field_Kind);
		}));
		return;;
	};
	_1ad2d7932_varInitExpr(_self_, &(_96827_v), nullptr);
}



inline void _1ad2d7e93_funcIns(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab120d00_FnIns>* _99932_f) {
	_1ad2d5c0a_funcHead(_self_, _99932_f, false);
	_1ad2d75be_paramsIns(_self_, &((*((*(_99932_f))))._field_Params));
	_1ad2d0067_write(_self_, jule::Str::lit(" ", 1));
	_1ad2047c7_funcScope((*(_self_))._field_sc, (*(_99932_f)));
	if (((*((*(_99932_f))))._field_Scope != nullptr)) {
		_1ad2d0067_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1ad2d824b_func(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab11cdeb_Fn>* _100929_f) {
	{
		auto expr = &((*((*(_100929_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd657489:;
		if (it != expr_end) {
			jule::Ptr<_1ab120d00_FnIns> _101021_ins = *it;
			{
				_1ad2d7e93_funcIns(_self_, &(_101021_ins));
			}
			_iter_next_1bd657489:;
			++it;
			goto _iter_begin_1bd657489;
		}
		_iter_end_1bd657489:;
	};
}



inline void _1ad2d85ae_funcTrait(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ad2cd472_traitHash>* _101534_hash, jule::Ptr<_1ab11cdeb_Fn>* _101557_f) {
	jule::Str _10169_ident = (*((*(_101557_f))))._field_Ident;;
	{
		auto expr = &((*((*(_101557_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd658633:;
		if (it != expr_end) {
			jule::Ptr<_1ab120d00_FnIns> _101721_ins = *it;
			{
				(*(_101721_ins))._field_Scope=nullptr;
				_1d7ad2eb1_StrBuilder _102017_s = static__1d7ad327a_New(static_cast<jule::I64>((((((*((*(_101557_f))))._field_Ident.len() + _10169_ident.len()) + (*((*(_101534_hash))))._field_ti.len()) + 2LL) + 4LLU)));;
				_1d7adba8b_WriteStr(&_102017_s, _10169_ident);
				_1d7adbd44_WriteByte(&_102017_s, '_');
				_1d7adba8b_WriteStr(&_102017_s, (*((*(_101534_hash))))._field_ti);
				_1d7adbd44_WriteByte(&_102017_s, '_');
				_1d7adba8b_WriteStr(&_102017_s, _1d8bbea91_Itoa((*((*(_101534_hash))))._field_i));
				(*((*(_101557_f))))._field_Ident=_1d7adc383_Str(&_102017_s);
				jule::Ptr<_1ab25aa1c_TypeKind> _102917_k = (*((*(_101721_ins))._field_Params[0LL]))._field_Kind;;
				(*((*(_101721_ins))._field_Params[0LL]))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>((*((*(_101534_hash))))._field_t, 2)});
				_1ad2d7e93_funcIns(_self_, &(_101721_ins));
				(*((*(_101721_ins))._field_Params[0LL]))._field_Kind=_102917_k;
			}
			_iter_next_1bd658633:;
			++it;
			goto _iter_begin_1bd658633;
		}
		_iter_end_1bd658633:;
	};
	(*((*(_101557_f))))._field_Ident=_10169_ident;
}



inline void _1ad2d8922_traitWrapper(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab11cdeb_Fn>* _103737_m, jule::Ptr<_1ad2cd472_traitHash>* _103750_hash) {
	_1ad2d85ae_funcTrait(_self_, _103750_hash, _103737_m);
	if (((*((*(_103750_hash))))._field_s == nullptr)) {
		if (_2014c4290_Production) {
			_1ad2d0067_write(_self_, jule::Str::lit(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1ad2d0067_write(_self_, jule::Str::lit(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _10499_ptr = (!(_1ab11bcc9_IsRef((*((*(_103737_m))))._field_Params[0LL].ptr())));;
	jule::Ptr<_1ab11cdeb_Fn> _105113_sm = _1ab10bd30_FindMethod((*((*(_103750_hash))))._field_s.ptr(), (*((*(_103737_m))))._field_Ident, false);;
	if (((_105113_sm == nullptr) || ((*(_105113_sm))._field_Instances.len() == 0LL))) {
		return;;
	};
	_1ad2d0265_addIndent(_self_);
	_1ad2d0067_write(_self_, jule::Str::lit("{\n", 2));
	_1ad2d0661_indent(_self_);
	if (((*(_105113_sm))._field_Exceptional || (!(_1ab11d36e_IsVoid(_105113_sm.ptr()))))) {
		_1ad2d0067_write(_self_, jule::Str::lit("return ", 7));
	};
	_1ad2d0067_write(_self_, static__1ad21bab9_func(&(_105113_sm)));
	_1ad2d0067_write(_self_, jule::Str::lit("(", 1));
	if (_10499_ptr) {
		_1ad2d0067_write(_self_, jule::Str::lit("_self_.safe_ptr<", 16));
		_1ad2d0067_write(_self_, _1ad2e30be_structureIns((*(_self_))._field_tc.ptr(), (*((*(_103750_hash))))._field_s));
		_1ad2d0067_write(_self_, jule::Str::lit(">(", 2));
		if ((!(_2014c4290_Production))) {
			_1ad2d0067_write(_self_, jule::Str::lit("_00___file", 10));
		};
		_1ad2d0067_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1ad2d0067_write(_self_, jule::Str::lit("_self_.data.as<", 15));
		_1ad2d0067_write(_self_, _1ad2e2c7d_structure((*(_self_))._field_tc.ptr(), (*(_105113_sm))._field_Owner));
		_1ad2d0067_write(_self_, jule::Str::lit(">()", 3));
	};
	{
		auto expr = (*((*(_103737_m))))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bd664a4b:;
		if (it != expr_end) {
			jule::Ptr<_1ab11b427_Param> _107716_mp = *it;
			{
				_1ad2d0067_write(_self_, jule::Str::lit(", ", 2));
				_1ad2d0067_write(_self_, static__1ad21c416_param(&(_107716_mp)));
			}
			_iter_next_1bd664a4b:;
			++it;
			goto _iter_begin_1bd664a4b;
		}
		_iter_end_1bd664a4b:;
	};
	_1ad2d0067_write(_self_, jule::Str::lit(");\n}\n", 5));
	_1ad2d0463_doneIndent(_self_);
}



inline void _1ad2d8b20_traitWrappers(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd669a73:;
		if (it != expr_end) {
			jule::Ptr<_1ad2cd472_traitHash> _108621_hash = *it;
			{
				{
					auto expr = &((*((*(_108621_hash))._field_t))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd66a49c:;
					if (it != expr_end) {
						jule::Ptr<_1ab11cdeb_Fn> _108725_m = *it;
						{
							_1ad2d8922_traitWrapper(_self_, &(_108725_m), &(_108621_hash));
						}
						_iter_next_1bd66a49c:;
						++it;
						goto _iter_begin_1bd66a49c;
					}
					_iter_end_1bd66a49c:;
				};
			}
			_iter_next_1bd669a73:;
			++it;
			goto _iter_begin_1bd669a73;
		}
		_iter_end_1bd669a73:;
	};
}



inline void _1ad2d8e83_traitDataMethods(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab131195_Trait>* _109341_t, jule::Ptr<_1ad2cd472_traitHash>* _109353_hash) {
	{
		auto expr = &((*((*(_109341_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd66b091:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _109421_m = *it;
			{
				jule::Str _109513_mIdent = static__1ad21bab9_func(&(_109421_m));;
				_1ad2d0661_indent(_self_);
				_1ad2d0067_write(_self_, jule::Str::lit(".", 1));
				_1ad2d0067_write(_self_, _109513_mIdent);
				_1ad2d0067_write(_self_, jule::Str::lit("=", 1));
				_1ad2d0067_write(_self_, _109513_mIdent);
				_1ad2d0067_write(_self_, jule::Str::lit("_", 1));
				_1ad2d0067_write(_self_, (*((*(_109353_hash))))._field_ti);
				_1ad2d0067_write(_self_, jule::Str::lit("_", 1));
				_1ad2d0067_write(_self_, _1d8bbea91_Itoa((*((*(_109353_hash))))._field_i));
				_1ad2d0067_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1bd66b091:;
			++it;
			goto _iter_begin_1bd66b091;
		}
		_iter_end_1bd66b091:;
	};
}



inline void _1ad2d92e6_traitData(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ad2cd472_traitHash>* _110934_hash, jule::Ptr<_1ab131195_Trait>* _110957_old) {
	if (((*((*((*(_110934_hash))))._field_t))._field_Methods.len() == 0LL)) {
		return;;
	};
	jule::Str _11139_ident = static__1ad21c14c_traitDecl((*((*(_110934_hash))))._field_t);;
	if (((*((*(_110934_hash))))._field_t != (*(_110957_old)))) {
		if (((*(_110957_old)) != nullptr)) {
			_1ad2d0463_doneIndent(_self_);
			_1ad2d0661_indent(_self_);
			_1ad2d0067_write(_self_, jule::Str::lit("};\n", 3));
		};
		_1ad2d0067_write(_self_, jule::Str::lit("static ", 7));
		_1ad2d0067_write(_self_, _11139_ident);
		_1ad2d0067_write(_self_, jule::Str::lit("MptrData ", 9));
		_1ad2d0067_write(_self_, _11139_ident);
		_1ad2d0067_write(_self_, jule::Str::lit("_mptr_data[] = {\n", 17));
		(*(_110957_old))=(*((*(_110934_hash))))._field_t;
		_1ad2d0265_addIndent(_self_);
	};
	_1ad2d0661_indent(_self_);
	_1ad2d0067_write(_self_, jule::Str::lit("{\n", 2));
	_1ad2d0265_addIndent(_self_);
	_1ad2d8e83_traitDataMethods(_self_, &((*((*(_110934_hash))))._field_t), _110934_hash);
	_1ad2d0463_doneIndent(_self_);
	_1ad2d0661_indent(_self_);
	_1ad2d0067_write(_self_, jule::Str::lit("},\n", 3));
}



inline void _1ad2d94e4_traitDatas(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	jule::Ptr<_1ab131195_Trait> _113817_old = nullptr;;
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6763cb:;
		if (it != expr_end) {
			jule::Ptr<_1ad2cd472_traitHash> _113921_hash = *it;
			{
				_1ad2d92e6_traitData(_self_, &(_113921_hash), &(_113817_old));
			}
			_iter_next_1bd6763cb:;
			++it;
			goto _iter_begin_1bd6763cb;
		}
		_iter_end_1bd6763cb:;
	};
	if ((_113817_old != nullptr)) {
		_1ad2d0463_doneIndent(_self_);
		_1ad2d0661_indent(_self_);
		_1ad2d0067_write(_self_, jule::Str::lit("};\n", 3));
	};
}



inline void _1ad2d96e2_globals(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd678246:;
		if (it != expr_end) {
			jule::Ptr<_1ab1c7a66_Var> _115021_v = *it;
			{
				_1ad2d0067_write(_self_, _1ad2e4c19_kind((*(_self_))._field_tc.ptr(), (*((*(_115021_v))._field_Kind))._field_Kind));
				_1ad2d0067_write(_self_, jule::Str::lit(" ", 1));
				_1ad2d0067_write(_self_, static__1ad21d02c_var(_115021_v));
				_1ad2d0067_write(_self_, jule::Str::lit(" = ", 3));
				_1ad214a18_model((*(_self_))._field_ec, (*((*((*(_115021_v))._field_Value))._field_Data))._field_Model);
				_1ad2d0067_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bd678246:;
			++it;
			goto _iter_begin_1bd678246;
		}
		_iter_end_1bd678246:;
	};
}



inline void _1ad2d98e0_decls(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	_1ad2d32bd_traitDecls(_self_);
	_1ad2d3774_structurePlainDecls(_self_);
	_1ad2d53e1_structureDecls(_self_);
	(*(_self_))._field_headPos=static_cast<jule::I64>(_1d7adc817_Len(&(*(_self_))._field_Obj));
	_1ad2d55de_structureMethodDecls(_self_);
	_1ad2d69ec_funcDecls(_self_);
	_1ad2d0067_write(_self_, jule::Str::lit("\n\n", 2));
	_1ad2d705d_traitDataTypes(_self_);
	_1ad2d0067_write(_self_, jule::Str::lit("\n\n", 2));
	_1ad2d8b20_traitWrappers(_self_);
	_1ad2d0067_write(_self_, jule::Str::lit("\n\n", 2));
	_1ad2d94e4_traitDatas(_self_);
	_1ad2d0067_write(_self_, jule::Str::lit("\n\n", 2));
	(*(_self_))._field_declPos=static_cast<jule::I64>(_1d7adc817_Len(&(*(_self_))._field_Obj));
	_1ad2d96e2_globals(_self_);
}



inline void _1ad2d9b98_structureMethods(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab10acb8_StructIns>* _117841_s) {
	{
		auto expr = &((*((*(_117841_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd681084:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _117921_f = *it;
			{
				_1ad2d824b_func(_self_, &(_117921_f));
				_1ad2d0067_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1bd681084:;
			++it;
			goto _iter_begin_1bd681084;
		}
		_iter_end_1bd681084:;
	};
}



inline void _1ad2d9e51_structureOstream(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab10acb8_StructIns>* _118541_s) {
	_1ad2d0661_indent(_self_);
	_1ad2d0067_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1ad2d0067_write(_self_, static__1ad21c999_structureIns(_118541_s));
	_1ad2d0067_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_1ad2d0265_addIndent(_self_);
	_1ad2d0661_indent(_self_);
	jule::Ptr<_1ab11cdeb_Fn> _119313_fts = _1ab10bd30_FindMethod((*(_118541_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__1ab1c9282_Str(_119313_fts)) {
		_1ad2d0067_write(_self_, jule::Str::lit("_Stream << ", 11));
		_1ad2d0067_write(_self_, static__1ad21bab9_func(&(_119313_fts)));
		_1ad2d0067_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_1ad2d0067_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_1ad215783_cstrBytes(&((*(_self_))._field_Obj), (*((*((*(_118541_s))))._field_Decl))._field_Ident);
		_1ad2d0067_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_118541_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd685b5a:;
			if (it != expr_end) {
				jule::I64 _120318_i = it - expr->begin();
				jule::Ptr<_1ab10a218_FieldIns> _120325_f = *it;
				{
					_1ad2d0661_indent(_self_);
					_1ad2d0067_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_1ad215783_cstrBytes(&((*(_self_))._field_Obj), (*((*(_120325_f))._field_Decl))._field_Ident);
					_1ad2d0067_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_1ab10acb8_StructIns> _121017_strct = _1ab25e6e1_Struct((*(_120325_f))._field_Kind.ptr());;
					if ((((_121017_strct != nullptr) && ((*(_121017_strct))._field_Decl != nullptr)) && (*((*(_121017_strct))._field_Decl))._field_Binded)) {
						_1ad2d0067_write(_self_, jule::Str::lit(" cpp.", 5));
						_1ad2d0067_write(_self_, static__1ad21cc63_field(&((*(_120325_f))._field_Decl)));
						_1ad2d0067_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_1ad2d0067_write(_self_, jule::Str::lit("\" << _Src.", 10));
						_1ad2d0067_write(_self_, static__1ad21cc63_field(&((*(_120325_f))._field_Decl)));
					};
					if (((_120318_i + 1LL) < (*((*(_118541_s))))._field_Fields.len())) {
						_1ad2d0067_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_1ad2d0067_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_1bd685b5a:;
				++it;
				_120318_i++;
				goto _iter_begin_1bd685b5a;
			}
			_iter_end_1bd685b5a:;
		};
		_1ad2d0661_indent(_self_);
		_1ad2d0067_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_1ad2d0661_indent(_self_);
	_1ad2d0067_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_1ad2d0463_doneIndent(_self_);
	_1ad2d0067_write(_self_, jule::Str::lit("}", 1));
}



inline void _1ad2da209_structureIns(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab10acb8_StructIns>* _123637_s) {
	_1ad2d9b98_structureMethods(_self_, _123637_s);
	_1ad2d0067_write(_self_, jule::Str::lit("\n\n", 2));
	_1ad2d9e51_structureOstream(_self_, _123637_s);
}



inline void _1ad2da4b2_structure(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab10803a_Struct>* _124234_s) {
	{
		auto expr = &((*((*(_124234_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6902d5:;
		if (it != expr_end) {
			jule::Ptr<_1ab10acb8_StructIns> _124321_ins = *it;
			{
				_1ad2da209_structureIns(_self_, &(_124321_ins));
				_1ad2d0067_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1bd6902d5:;
			++it;
			goto _iter_begin_1bd6902d5;
		}
		_iter_end_1bd6902d5:;
	};
}



inline void _1ad2da6b0_structures(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd690b32:;
		if (it != expr_end) {
			jule::Ptr<_1ab10803a_Struct> _125021_s = *it;
			{
				if (((*(_125021_s))._field_Token != nullptr)) {
					_1ad2da4b2_structure(_self_, &(_125021_s));
					_1ad2d0067_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1bd690b32:;
			++it;
			goto _iter_begin_1bd690b32;
		}
		_iter_end_1bd690b32:;
	};
}



inline void _1ad2da8ad_funcs(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	_1ad2d2dc2_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ab187b14_Package>*)>([=](jule::Ptr<_1ab187b14_Package>* _125935_pkg) mutable -> void {
		_1ad2db848_iterFiles(_125935_pkg, jule::Fn<void(jule::Ptr<_1ab224d9e_SymbolTable>*)>([=](jule::Ptr<_1ab224d9e_SymbolTable>* _126036_file) mutable -> void {
			{
				auto expr = &((*((*(_126036_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bd694d9a:;
				if (it != expr_end) {
					jule::Ptr<_1ab11cdeb_Fn> _126129_f = *it;
					{
						if (((!(_2014c3833_Test)) && _1ad2ebb11_hasDirective(&((*(_126129_f))._field_Directives), jule::Str::lit("test", 4)))) {
							goto _iter_next_1bd694d9a;
						};
						if (((!((*(_126129_f))._field_Binded)) && ((*(_126129_f))._field_Token != nullptr))) {
							_1ad2d824b_func(_self_, &(_126129_f));
							_1ad2d0067_write(_self_, jule::Str::lit("\n\n", 2));
						};
					}
					_iter_next_1bd694d9a:;
					++it;
					goto _iter_begin_1bd694d9a;
				}
				_iter_end_1bd694d9a:;
			};
		}));
	}));
}



inline void _1ad2dab66_pushInit(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_, jule::Ptr<_1ab187b14_Package>* _127433_pkg) {
	_1ad2db848_iterFiles(_127433_pkg, jule::Fn<void(jule::Ptr<_1ab224d9e_SymbolTable>*)>([=](jule::Ptr<_1ab224d9e_SymbolTable>* _127532_file) mutable -> void {
		{
			auto expr = &((*((*(_127532_file))))._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd69793b:;
			if (it != expr_end) {
				jule::Ptr<_1ab11cdeb_Fn> _127620_f = *it;
				{
					if ((*(_127620_f))._field_Ident.equal("init", 4)) {
						_1ad2d0661_indent(_self_);
						_1ad2d0067_write(_self_, static__1ad21bab9_func(&(_127620_f)));
						_1ad2d0067_write(_self_, jule::Str::lit("();\n", 4));
					};
				}
				_iter_next_1bd69793b:;
				++it;
				goto _iter_begin_1bd69793b;
			}
			_iter_end_1bd69793b:;
		};
	}));
}



inline void _1ad2dad64_initCaller(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	_1ad2d0067_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1ad2d0265_addIndent(_self_);
	_1ad2d2dc2_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ab187b14_Package>*)>([=](jule::Ptr<_1ab187b14_Package>* _128935_pkg) mutable -> void {
		_1ad2dab66_pushInit(_self_, _128935_pkg);
	}));
	_1ad2d0463_doneIndent(_self_);
	_1ad2d0067_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1ad2db062_end(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	_1ad2d0067_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_2014c3833_Test) {
		_1ad2d0067_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1ad2d0067_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1ad2d0067_write(_self_, jule::Str::lit("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1ad2db260_serializeHead(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	_1ad2d2b19_prepareStructures(_self_);
	_1ad2d30c0_buildTraitMap(_self_);
	_1ad2d2465_head(_self_);
	_1ad2d0067_write(_self_, jule::Str::lit("\n", 1));
	_1ad2d98e0_decls(_self_);
	if ((_1d7adc817_Len(&(*(_self_))._field_resultDecls) > 0LL)) {
		jule::Slice<jule::U8> _132417_head = jule::append(jule::Slice<jule::U8>::alloc(0LL, 0LL, 0),_1d7adcd34_Buf(&(*(_self_))._field_Obj).slice(0LL, (*(_self_))._field_headPos));;
		(_132417_head).append(_1d7adcd34_Buf(&(*(_self_))._field_resultDecls));;
		(*(_self_))._field_declPos+=_1d7adc817_Len(&(*(_self_))._field_resultDecls);
		(_132417_head).append(_1d7adcd34_Buf(&(*(_self_))._field_Obj).slice((*(_self_))._field_headPos));;
		{
			_1d7add0dc_SetBuf(&(*(_self_))._field_Obj, _132417_head);
		};
	};
	_1ad2d0067_write(_self_, jule::Str::lit("\n", 1));
	_1ad2da6b0_structures(_self_);
	_1ad2da8ad_funcs(_self_);
	_1ad2dad64_initCaller(_self_);
	_1ad2d0067_write(_self_, jule::Str::lit("\n\n", 2));
	if ((_1d7adc817_Len(&(*(_self_))._field_anyObj) > 0LL)) {
		jule::Slice<jule::U8> _133817_head = jule::append(jule::Slice<jule::U8>::alloc(0LL, 0LL, 0),_1d7adcd34_Buf(&(*(_self_))._field_Obj).slice(0LL, (*(_self_))._field_declPos));;
		(_133817_head).append(_1d7adcd34_Buf(&(*(_self_))._field_anyObj));;
		(_133817_head).append(_1d7adcd34_Buf(&(*(_self_))._field_Obj).slice((*(_self_))._field_declPos));;
		{
			_1d7add0dc_SetBuf(&(*(_self_))._field_Obj, _133817_head);
		};
	};
}



inline void _1ad2db45d_Serialize(jule::Ptr<_1ad2ce8b3_ObjectCoder> _self_) {
	_1ad2db260_serializeHead(_self_);
	_1ad2db062_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1ad2ce8b3_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1acaee26b_ObjectDeadCode> static__1acaee711_new(jule::Ptr<_1ac9c51db_IR>* _3424_ir) {
	return jule::new_ptr<_1acaee26b_ObjectDeadCode>(_1acaee26b_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1bcee6b3c_isLive(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_, jule::Ptr<_1ab131195_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1ab131195_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bcee88a8:;
			{
				_4117_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1bcee86aa:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcee891e:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1bcee891e:;
			++it;
			_5213_i++;
			goto _iter_begin_1bcee891e;
		}
		_iter_end_1bcee891e:;
	};
	return false;;
}

inline jule::Bool _1bceec68c_isLive(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_, jule::Ptr<_1ab120d00_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1ab120d00_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bceee23d:;
			{
				_4117_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1bceee183:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bceeee53:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1bceeee53:;
			++it;
			_5213_i++;
			goto _iter_begin_1bceeee53;
		}
		_iter_end_1bceeee53:;
	};
	return false;;
}

inline jule::Bool _1bd002b9d_isLive(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_, jule::Ptr<_1ab10acb8_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1ab10acb8_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bd007d29:;
			{
				_4117_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1bd007b92:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd007e06:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1bd007e06:;
			++it;
			_5213_i++;
			goto _iter_begin_1bd007e06;
		}
		_iter_end_1bd007e06:;
	};
	return false;;
}

inline jule::Bool _1bd00a524_isLive(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_, jule::Ptr<_1ab1c7a66_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1ab1c7a66_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bd00c16e:;
			{
				_4117_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1bd00c04d:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd00c108:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1bd00c108:;
			++it;
			_5213_i++;
			goto _iter_begin_1bd00c108;
		}
		_iter_end_1bd00c108:;
	};
	return false;;
}



inline void _1bcee7005_pushLive(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_, jule::Ptr<_1ab131195_Trait> _6035_t) {
	{
		
{
			_case_begin_1bceeaab9:;
			{
				{ jule::Slice<jule::Ptr<_1ab131195_Trait>> &__jule_push_dest = (*(_self_))._field_live._field_traits; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1bceea8bb:;
	};
}

inline void _1bceeca22_pushLive(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_, jule::Ptr<_1ab120d00_FnIns> _6035_t) {
	{
		
{
			_case_begin_1bd001ad1:;
			{
				{ jule::Slice<jule::Ptr<_1ab120d00_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1bd0019b0:;
	};
}

inline void _1bd0038d5_pushLive(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_, jule::Ptr<_1ab10acb8_StructIns> _6035_t) {
	{
		
{
			_case_begin_1bd0051cd:;
			{
				{ jule::Slice<jule::Ptr<_1ab10acb8_StructIns>> &__jule_push_dest = (*(_self_))._field_live._field_structs; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1bd005046:;
	};
}

inline void _1bd00a8dc_pushLive(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_, jule::Ptr<_1ab1c7a66_Var> _6035_t) {
	{
		
{
			_case_begin_1bd00e715:;
			{
				{ jule::Slice<jule::Ptr<_1ab1c7a66_Var>> &__jule_push_dest = (*(_self_))._field_live._field_vars; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1bd00e65a:;
	};
}



inline void _1acb34867_setReferencesAsLive(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_, jule::Ptr<_1ab123eac_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7713_i = 0LL;;
	for (; (_7713_i < _1ab124694_Len((*(_7344_rs)).ptr())); (_7713_i)++) {
		{
			jule::Any _7917_ref = _1ab1249d5_At((*(_7344_rs)).ptr(), _7713_i);;
			{
				auto &_match_expr{ _7917_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1bcee59c6:;
					{
						jule::Ptr<_1ab131195_Trait> _8221_t = _7917_ref.cast_ptr<_1ab131195_Trait>(&__jule_any_type10);;
						if (_1bcee6b3c_isLive(_self_, &(_8221_t))) {
							goto _iter_next_1bcee4db0;
						};
						_1bcee7005_pushLive(_self_, _8221_t);
						{
							auto expr = &((*(_8221_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1bcee7e07:;
							if (it != expr_end) {
								jule::Ptr<_1ab11cdeb_Fn> _8729_ins = *it;
								{
									{
										auto expr = &((*(_8729_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1bceea635:;
										if (it != expr_end) {
											jule::Ptr<_1ab120d00_FnIns> _8833_mins = *it;
											{
												if (_1bceec68c_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1bceea635;
												};
												_1bceeca22_pushLive(_self_, _8833_mins);
												_1acb34867_setReferencesAsLive(_self_, &((*(_8833_mins))._field_Refers));
											}
											_iter_next_1bceea635:;
											++it;
											goto _iter_begin_1bceea635;
										}
										_iter_end_1bceea635:;
									};
								}
								_iter_next_1bcee7e07:;
								++it;
								goto _iter_begin_1bcee7e07;
							}
							_iter_end_1bcee7e07:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1bcee5a3c:;
					{
						jule::Ptr<_1ab120d00_FnIns> _9721_f = _7917_ref.cast_ptr<_1ab120d00_FnIns>(&__jule_any_type7);;
						if (_1bceec68c_isLive(_self_, &(_9721_f))) {
							goto _match_end_1bcee5267;
						};
						if ((((*(_9721_f))._field_Owner != nullptr) && (!((*((*(_9721_f))._field_Decl))._field_Statically)))) {
							if ((!(_1bd002b9d_isLive(_self_, &((*(_9721_f))._field_Owner))))) {
								_1bd0038d5_pushLive(_self_, (*(_9721_f))._field_Owner);
								_1acb34867_setReferencesAsLive(_self_, &((*((*(_9721_f))._field_Owner))._field_Refers));
							};
						};
						_1bceeca22_pushLive(_self_, _9721_f);
						_1acb34867_setReferencesAsLive(_self_, &((*(_9721_f))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1bcee5aa3:;
					{
						jule::Ptr<_1ab1c7a66_Var> _11021_v = _7917_ref.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8);;
						if (_1bd00a524_isLive(_self_, &(_11021_v))) {
							goto _match_end_1bcee5267;
						};
						_1bd00a8dc_pushLive(_self_, _11021_v);
						_1acb34867_setReferencesAsLive(_self_, &((*(_11021_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1bcee5b2a:;
					{
						jule::Ptr<_1ab10acb8_StructIns> _11721_s = _7917_ref.cast_ptr<_1ab10acb8_StructIns>(&__jule_any_type9);;
						if (_1bd002b9d_isLive(_self_, &(_11721_s))) {
							goto _match_end_1bcee5267;
						};
						_1bd0038d5_pushLive(_self_, _11721_s);
						_1acb34867_setReferencesAsLive(_self_, &((*(_11721_s))._field_Refers));
						{
							auto expr = &((*(_11721_s))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1bd010859:;
							if (it != expr_end) {
								jule::Ptr<_1ab11cdeb_Fn> _12329_m = *it;
								{
									{
										auto expr = &((*(_12329_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1bd01253c:;
										if (it != expr_end) {
											jule::Ptr<_1ab120d00_FnIns> _12433_ins = *it;
											{
												if (_1bceec68c_isLive(_self_, &(_12433_ins))) {
													goto _iter_next_1bd01253c;
												};
												if (_1acb3753a_isTraitMethod(&(_11721_s), &(_12433_ins))) {
													_1bceeca22_pushLive(_self_, _12433_ins);
													_1acb34867_setReferencesAsLive(_self_, &((*(_12433_ins))._field_Refers));
												};
											}
											_iter_next_1bd01253c:;
											++it;
											goto _iter_begin_1bd01253c;
										}
										_iter_end_1bd01253c:;
									};
								}
								_iter_next_1bd010859:;
								++it;
								goto _iter_begin_1bd010859;
							}
							_iter_end_1bd010859:;
						};
					}
				}
				_match_end_1bcee5267:;
			};
		}
	_iter_next_1bcee4db0:;
	}
	_iter_end_1bcee4db0:;;
}



inline void _1acb34b20_inits(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_, jule::Ptr<_1ab187b14_Package>* _14130_pkg) {
	{
		auto expr = &((*((*(_14130_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd009ba5:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _14221_file = *it;
			{
				{
					auto expr = &((*(_14221_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd012d89:;
					if (it != expr_end) {
						jule::Ptr<_1ab11cdeb_Fn> _14325_f = *it;
						{
							if ((*(_14325_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1ab120d00_FnIns> _14525_ins = (*(_14325_f))._field_Instances[0LL];;
								{ jule::Slice<jule::Ptr<_1ab120d00_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_14525_ins); };
								_1acb34867_setReferencesAsLive(_self_, &((*(_14525_ins))._field_Refers));
							};
						}
						_iter_next_1bd012d89:;
						++it;
						goto _iter_begin_1bd012d89;
					}
					_iter_end_1bd012d89:;
				};
			}
			_iter_next_1bd009ba5:;
			++it;
			goto _iter_begin_1bd009ba5;
		}
		_iter_end_1bd009ba5:;
	};
}



inline void _1acb34dc8_collectLivePackage(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_, jule::Ptr<_1ab187b14_Package>* _15343_pkg) {
	_1acb34b20_inits(_self_, _15343_pkg);
	if (_2014c3833_Test) {
		{
			auto expr = &((*((*(_15343_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd016ba1:;
			if (it != expr_end) {
				jule::Ptr<_1ab224d9e_SymbolTable> _15925_file = *it;
				{
					{
						auto expr = &((*(_15925_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bd0175ec:;
						if (it != expr_end) {
							jule::Ptr<_1ab11cdeb_Fn> _16029_f = *it;
							{
								if (_1acb37172_hasDirective(&((*(_16029_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_1ab120d00_FnIns> _16229_ins = (*(_16029_f))._field_Instances[0LL];;
									{ jule::Slice<jule::Ptr<_1ab120d00_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_16229_ins); };
									_1acb34867_setReferencesAsLive(_self_, &((*(_16229_ins))._field_Refers));
								};
							}
							_iter_next_1bd0175ec:;
							++it;
							goto _iter_begin_1bd0175ec;
						}
						_iter_end_1bd0175ec:;
					};
				}
				_iter_next_1bd016ba1:;
				++it;
				goto _iter_begin_1bd016ba1;
			}
			_iter_end_1bd016ba1:;
		};
	};
}



inline void _1acb350c6_collectLive(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd0182ac:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _17221_used = *it;
			{
				if ((!((*(_17221_used))._field_Binded))) {
					_1acb34dc8_collectLivePackage(_self_, &((*(_17221_used))._field_Package));
				};
			}
			_iter_next_1bd0182ac:;
			++it;
			goto _iter_begin_1bd0182ac;
		}
		_iter_end_1bd0182ac:;
	};
	_1acb34dc8_collectLivePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	jule::Ptr<_1ab11cdeb_Fn> _18013_main = _1ab189198_FindFn((*((*(_self_))._field_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	jule::Ptr<_1ab120d00_FnIns> _18113_ins = (*(_18013_main))._field_Instances[0LL];;
	{ jule::Slice<jule::Ptr<_1ab120d00_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_18113_ins); };
	_1acb34867_setReferencesAsLive(_self_, &((*(_18113_ins))._field_Refers));
}



inline void _1acb3537e_removeDeadGlobals(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ab1c7a66_Var>>* _18642_vars) {
	jule::I64 _18713_i = 0LL;;
	while ((_18713_i < (*(_18642_vars)).len())) {
		{
			jule::Ptr<_1ab1c7a66_Var> _18913_v = (*(_18642_vars))[_18713_i];;
			if (_1bd00a524_isLive(_self_, &(_18913_v))) {
				(_18713_i)++;
				goto _iter_next_1bd01d3a0;
			};
			(*(_18642_vars))=jule::append((*(_18642_vars)).slice(0LL, _18713_i),(*(_18642_vars)).slice((_18713_i + 1LL)));
		}
	_iter_next_1bd01d3a0:;
	}
	_iter_end_1bd01d3a0:;;
}



inline void _1acb35637_removeDeadFns(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ab11cdeb_Fn>>* _19838_funcs) {
	jule::I64 _19913_i = 0LL;;
	while ((_19913_i < (*(_19838_funcs)).len())) {
		{
			jule::Ptr<_1ab11cdeb_Fn> _20117_f = (*(_19838_funcs))[_19913_i];;
			jule::I64 _20217_j = 0LL;;
			while ((_20217_j < (*(_20117_f))._field_Instances.len())) {
				{
					jule::Ptr<_1ab120d00_FnIns> _20417_ins = (*(_20117_f))._field_Instances[_20217_j];;
					if (_1bceec68c_isLive(_self_, &(_20417_ins))) {
						(_20217_j)++;
						goto _iter_next_1bd02069e;
					};
					(*(_20117_f))._field_Instances=jule::append((*(_20117_f))._field_Instances.slice(0LL, _20217_j),(*(_20117_f))._field_Instances.slice((_20217_j + 1LL)));
				}
			_iter_next_1bd02069e:;
			}
			_iter_end_1bd02069e:;;
			if (((*(_20117_f))._field_Instances.len() == 0LL)) {
				(*(_19838_funcs))=jule::append((*(_19838_funcs)).slice(0LL, _19913_i),(*(_19838_funcs)).slice((_19913_i + 1LL)));
				goto _iter_next_1bd01d57b;
			};
			(_19913_i)++;
		}
	_iter_next_1bd01d57b:;
	}
	_iter_end_1bd01d57b:;;
}



inline void _1acb358e0_removeDeadStructs(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ab10803a_Struct>>* _21942_structs) {
	jule::I64 _22013_i = 0LL;;
	while ((_22013_i < (*(_21942_structs)).len())) {
		{
			jule::Ptr<_1ab10803a_Struct> _22217_s = (*(_21942_structs))[_22013_i];;
			jule::I64 _22317_j = 0LL;;
			while ((_22317_j < (*(_22217_s))._field_Instances.len())) {
				{
					jule::Ptr<_1ab10acb8_StructIns> _22521_ins = (*(_22217_s))._field_Instances[_22317_j];;
					_1acb35637_removeDeadFns(_self_, &((*(_22521_ins))._field_Methods));
					if ((((*(_22521_ins))._field_Methods.len() != 0LL) || _1bd002b9d_isLive(_self_, &(_22521_ins)))) {
						(_22317_j)++;
						goto _iter_next_1bd023d56;
					};
					(*(_22217_s))._field_Instances=jule::append((*(_22217_s))._field_Instances.slice(0LL, _22317_j),(*(_22217_s))._field_Instances.slice((_22317_j + 1LL)));
				}
			_iter_next_1bd023d56:;
			}
			_iter_end_1bd023d56:;;
			if (((*(_22217_s))._field_Instances.len() == 0LL)) {
				(*(_21942_structs))=jule::append((*(_21942_structs)).slice(0LL, _22013_i),(*(_21942_structs)).slice((_22013_i + 1LL)));
				goto _iter_next_1bd023350;
			};
			(_22013_i)++;
		}
	_iter_next_1bd023350:;
	}
	_iter_end_1bd023350:;;
}



inline void _1acb35b98_removeDeadTraits(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ab131195_Trait>>* _24141_traits) {
	jule::I64 _24213_i = 0LL;;
	while ((_24213_i < (*(_24141_traits)).len())) {
		{
			jule::Ptr<_1ab131195_Trait> _24417_t = (*(_24141_traits))[_24213_i];;
			if ((!(_1bcee6b3c_isLive(_self_, &(_24417_t))))) {
				(*(_24141_traits))=jule::append((*(_24141_traits)).slice(0LL, _24213_i),(*(_24141_traits)).slice((_24213_i + 1LL)));
				goto _iter_next_1bd027563;
			};
			jule::I64 _24917_j = 0LL;;
			while ((_24917_j < (*(_24417_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1ab10803a_Struct> _25117_s = (*(_24417_t))._field_Implemented[_24917_j];;
					if (((*(_25117_s))._field_Instances.len() > 0LL)) {
						(_24917_j)++;
						goto _iter_next_1bd027c5b;
					};
					(*(_24417_t))._field_Implemented=jule::append((*(_24417_t))._field_Implemented.slice(0LL, _24917_j),(*(_24417_t))._field_Implemented.slice((_24917_j + 1LL)));
				}
			_iter_next_1bd027c5b:;
			}
			_iter_end_1bd027c5b:;;
			(_24213_i)++;
		}
	_iter_next_1bd027563:;
	}
	_iter_end_1bd027563:;;
}



inline void _1acb35e51_removeDeadsFile(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_, jule::Ptr<_1ab224d9e_SymbolTable>* _26240_file) {
	_1acb35637_removeDeadFns(_self_, &((*((*(_26240_file))))._field_Funcs));
	_1acb358e0_removeDeadStructs(_self_, &((*((*(_26240_file))))._field_Structs));
	_1acb35b98_removeDeadTraits(_self_, &((*((*(_26240_file))))._field_Traits));
	_1acb3537e_removeDeadGlobals(_self_, &((*((*(_26240_file))))._field_Vars));
}



inline void _1acb36209_removeDeadsPackage(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_, jule::Ptr<_1ab187b14_Package>* _26943_pkg) {
	{
		auto expr = &((*((*(_26943_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd02c6ab:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _27021_file = *it;
			{
				_1acb35e51_removeDeadsFile(_self_, &(_27021_file));
			}
			_iter_next_1bd02c6ab:;
			++it;
			goto _iter_begin_1bd02c6ab;
		}
		_iter_end_1bd02c6ab:;
	};
}



inline void _1acb36407_removeDeads(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd02d019:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _27621_used = *it;
			{
				if ((!((*(_27621_used))._field_Binded))) {
					_1acb36209_removeDeadsPackage(_self_, &((*(_27621_used))._field_Package));
				};
			}
			_iter_next_1bd02d019:;
			++it;
			goto _iter_begin_1bd02d019;
		}
		_iter_end_1bd02d019:;
	};
	_1acb36209_removeDeadsPackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
}



inline void _1acb36605_elimanate(jule::Ptr<_1acaee26b_ObjectDeadCode> _self_) {
	_1acb350c6_collectLive(_self_);
	_1acb36407_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1acaee26b_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1ac9c51db_IR__jule_tuple_s_1d7b81cb8_Log static__1ac9c564d_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1ac9c51db_IR__jule_tuple_s_1d7b81cb8_Log __jule_func_result;
	jule::Ptr<_1ac9c2727_JuleImporter> _2813_importer = static__1ac9c2b23_New(_1ac9c7133_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1ab0d55ab_Ast>> _2913_files;;
	jule::Slice<_1d7b81cb8_Log> _2924_logs;;
	({
		__jule_tuple_sx_1ab0d55ab_Ast__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = _1ac9c410d_ImportPackage(_2813_importer.ptr(), _2721_path, true);
		_2913_files = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Str _339_root = _2721_path;;
	if ((_2913_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab187b14_Package> _3913_pkg;;
	({
		__jule_tuple_x_1ab187b14_Package__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = _1ab27bbd6_AnalyzePackage(_2913_files, jule::Trait<_1ab181cc8_Importer>(_2813_importer, 0), _2732_flags);
		_3913_pkg = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac9c51db_IR> _4413_ir = jule::new_ptr<_1ac9c51db_IR>(_1ac9c51db_IR{._field_Root=_339_root, ._field_Main=_3913_pkg, ._field_Used=_1ac9c2da9_AllPackages(_2813_importer.ptr()), });;
	(*(_4413_ir))._field_Passes=_1ac9c6e24_getAllUniquePasses(&((*(_4413_ir))._field_Main), (*(_4413_ir))._field_Used);
	__jule_func_result.__jule_result_arg0 = _4413_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ac9c5b37_appendStructs(_1ac9c51db_IR* _self_, jule::Ptr<_1ab187b14_Package>* _5633_p, jule::Slice<jule::Ptr<_1ab10803a_Struct>>* _5657_buffer) {
	{
		auto expr = &((*((*(_5633_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bceace99:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &((*(_5721_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bcead8b2:;
					if (it != expr_end) {
						jule::Ptr<_1ab10803a_Struct> _5825_s = *it;
						{
							if ((!((*(_5825_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1ab10803a_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1bcead8b2:;
						++it;
						goto _iter_begin_1bcead8b2;
					}
					_iter_end_1bcead8b2:;
				};
			}
			_iter_next_1bceace99:;
			++it;
			goto _iter_begin_1bceace99;
		}
		_iter_end_1bceace99:;
	};
}



inline jule::Slice<jule::Ptr<_1ab10803a_Struct>> _1ac9c5dbd_GetAllStructures(_1ac9c51db_IR* _self_) {
	jule::Slice<jule::Ptr<_1ab10803a_Struct>> _6917_buffer = nullptr;;
	_1ac9c5b37_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bceae8c4:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _7121_u = *it;
			{
				if ((!((*(_7121_u))._field_Binded))) {
					_1ac9c5b37_appendStructs(_self_, &((*(_7121_u))._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1bceae8c4:;
			++it;
			goto _iter_begin_1bceae8c4;
		}
		_iter_end_1bceae8c4:;
	};
	return _6917_buffer;;
}



inline void _1ac9c6231_appendGlobals(_1ac9c51db_IR* _self_, jule::Ptr<_1ab187b14_Package>* _7933_p, jule::Slice<jule::Ptr<_1ab1c7a66_Var>>* _7957_buffer) {
	{
		auto expr = &((*((*(_7933_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bceb1277:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &((*(_8021_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bceb1b90:;
					if (it != expr_end) {
						jule::Ptr<_1ab1c7a66_Var> _8125_v = *it;
						{
							if (((((*(_8125_v))._field_Token != nullptr) && (!((*(_8125_v))._field_Binded))) && (!((*(_8125_v))._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1ab1c7a66_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1bceb1b90:;
						++it;
						goto _iter_begin_1bceb1b90;
					}
					_iter_end_1bceb1b90:;
				};
			}
			_iter_next_1bceb1277:;
			++it;
			goto _iter_begin_1bceb1277;
		}
		_iter_end_1bceb1277:;
	};
}



inline jule::Slice<jule::Ptr<_1ab1c7a66_Var>> _1ac9c64b7_GetAllGlobals(_1ac9c51db_IR* _self_) {
	jule::Slice<jule::Ptr<_1ab1c7a66_Var>> _9217_buffer = nullptr;;
	_1ac9c6231_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bceb2410:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _9421_u = *it;
			{
				if ((!((*(_9421_u))._field_Binded))) {
					_1ac9c6231_appendGlobals(_self_, &((*(_9421_u))._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1bceb2410:;
			++it;
			goto _iter_begin_1bceb2410;
		}
		_iter_end_1bceb2410:;
	};
	return _9217_buffer;;
}



inline void _1ac9c66b5_Order(_1ac9c51db_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1ac9c5dbd_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1ac9c64b7_GetAllGlobals(_self_);
	static__1ac9c8596_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1ac9c87c7_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}





std::ostream &operator<<(std::ostream &_Stream, _1ac9c51db_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab10b13c_Str(_1ab10acb8_StructIns* _self_) {
	_1d7ad2eb1_StrBuilder _23913_kind = static__1d7ad327a_New(32LL);;
	_1d7adba8b_WriteStr(&_23913_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_1d7adbd44_WriteByte(&_23913_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bbb5787b:;
			if (it != expr_end) {
				jule::I64 _24317_i = it - expr->begin();
				jule::Ptr<_1ab259136_InsGeneric> *_24320_g = it;
				{
					_1d7adba8b_WriteStr(&_23913_kind, _1ab25add5_Str((*((*(_24320_g))))._field_Kind.ptr()));
					if ((_24317_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_1d7adbd44_WriteByte(&_23913_kind, ',');
					};
				}
				_iter_next_1bbb5787b:;
				++it;
				_24317_i++;
				goto _iter_begin_1bbb5787b;
			}
			_iter_end_1bbb5787b:;
		};
		_1d7adbd44_WriteByte(&_23913_kind, ']');
	};
	return _1d7adc383_Str(&_23913_kind);;
}



inline jule::Bool _1ab10b47d_Equal(jule::Ptr<_1ab10acb8_StructIns> _self_, jule::Ptr<_1ab25aa1c_TypeKind> _25521_other) {
	jule::Ptr<_1ab10acb8_StructIns> _2569_s = _1ab25e6e1_Struct(_25521_other.ptr());;
	if ((_2569_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2569_s))._field_Decl)) {
		return false;;
	};
	if (((*(_self_))._field_Generics.len() != (*(_2569_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _26913_i = 0LL;;
	for (; (_26913_i < (*(_self_))._field_Generics.len()); (_26913_i)++) {
		{
			if ((!(_1ab25b226_Equal((*((*(_self_))._field_Generics[_26913_i]))._field_Kind, (*((*(_2569_s))._field_Generics[_26913_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1bbb5bb9e:;
	}
	_iter_end_1bbb5bb9e:;;
	return true;;
}



inline jule::Bool _1ab10b934_Same(_1ab10acb8_StructIns* _self_, jule::Ptr<_1ab10acb8_StructIns> _28319_s) {
	if ((((*(_self_))._field_Decl != (*(_28319_s))._field_Decl) || ((*(_28319_s))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb5da19:;
		if (it != expr_end) {
			jule::I64 _28713_i = it - expr->begin();
			jule::Ptr<_1ab259136_InsGeneric> *_28716_g = it;
			{
				jule::Ptr<_1ab259136_InsGeneric> _28813_g2 = (*(_28319_s))._field_Generics[_28713_i];;
				if ((((*((*((*(_28716_g))))._field_Kind))._field_BindIdent != (*((*(_28813_g2))._field_Kind))._field_BindIdent) || (!(_1ab25b226_Equal((*((*(_28716_g))))._field_Kind, (*(_28813_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1bbb5da19:;
			++it;
			_28713_i++;
			goto _iter_begin_1bbb5da19;
		}
		_iter_end_1bbb5da19:;
	};
	return true;;
}



inline jule::Ptr<_1ab11cdeb_Fn> _1ab10bd30_FindMethod(_1ab10acb8_StructIns* _self_, jule::Str _29829_ident, jule::Bool _29841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb61dc4:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _29921_f = *it;
			{
				if ((((*(_29921_f))._field_Statically == _29841_statically) && ((*(_29921_f))._field_Ident == _29829_ident))) {
					return _29921_f;;
				};
			}
			_iter_next_1bbb61dc4:;
			++it;
			goto _iter_begin_1bbb61dc4;
		}
		_iter_end_1bbb61dc4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab10a218_FieldIns> _1ab10c171_FindField(_1ab10acb8_StructIns* _self_, jule::Str _30928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb631e4:;
		if (it != expr_end) {
			jule::Ptr<_1ab10a218_FieldIns> _31021_f = *it;
			{
				if (((*((*(_31021_f))._field_Decl))._field_Ident == _30928_ident)) {
					return _31021_f;;
				};
			}
			_iter_next_1bbb631e4:;
			++it;
			goto _iter_begin_1bbb631e4;
		}
		_iter_end_1bbb631e4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1c7a66_Var> _1ab10c4b2_FindStatic(_1ab10acb8_StructIns* _self_, jule::Str _32029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb64415:;
		if (it != expr_end) {
			jule::Ptr<_1ab1c7a66_Var> _32121_v = *it;
			{
				if (((*(_32121_v))._field_Ident == _32029_ident)) {
					return _32121_v;;
				};
			}
			_iter_next_1bbb64415:;
			++it;
			goto _iter_begin_1bbb64415;
		}
		_iter_end_1bbb64415:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab10acb8_StructIns _Src) {
	_Stream << _1ab10b13c_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1d7c40e54_Cmd> static__1d7c41372_New(jule::Str _2619_path) {
	return jule::new_ptr<_1d7c40e54_Cmd>(_1d7c40e54_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _1d7c41570_Spawn(_1d7c40e54_Cmd* _self_) {
	({
		auto except = _1d7c91933_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1d7c41a04_Wait(_1d7c40e54_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _1d7c91db7_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _1d7c91933_spawn(_1d7c40e54_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:78:13"));;
	};
	jule::Str _809_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _8113_pipe = jule::Array<signed,2>(0);;
	if ((pipe((&(_8113_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
	};
	if ((_2024e2202_Fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])), F_SETFD, static_cast<jule::I64>((fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])), F_GETFD) | FD_CLOEXEC))) == -1LL)) {
		_2024ea381_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])));
		_2024ea381_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])));
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
	};
	(*(_self_))._field_attrs._field_pid=static_cast<jule::I64>(fork());
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1bae80974:;
			{
				return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1bae7ed91:;
			{
				_2024ea381_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])));
				jule::Slice<jule::Str> _9617_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
				_9617_args[0LL]=_809_path;
				(_9617_args).append((*(_self_))._field_Args);;
				({
					auto except = _1d7c916d0_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
				_1d7c9149e_execvp(&(_809_path), &(_9617_args));
				jule::Str _10113_code = _1d7c8c7b9_Itoa(static_cast<jule::I64>(_2014c49aa_GetLastErrno()));;
				{
					_2024ea7b0_Write(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])), (&(_10113_code[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_10113_code.len())));
				};
				_2024ea381_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])));
				_1d7c931c6_Exit(1LL);
			}
		}
		else {
			_case_begin_1bae7a71b:;
			{
				_2024ea381_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])));
				jule::Array<jule::U8,16> _10721_buf = jule::Array<jule::U8,16>(0);;
				jule::I64 _10813_n = _2024e9eda_Read(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])), (&(_10721_buf[0LL])), 16LLU);;
				_2024ea381_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])));
				if ((_10813_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _11217_code = 0;;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d7c87d58_AtoiBp((&(_10721_buf[0LL])), _10813_n);
						_11217_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional(jule::Any(_1d7c92659_processErrorFromCode(_11217_code), &__jule_any_type0));
				};
			}
		}
		_match_end_1bae7ccb2:;
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1d7c91db7_wait(_1d7c40e54_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:130:13"));;
	};
	jule::I64 _13213_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_13213_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>(jule::Any(_1d7c928ac_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(WEXITSTATUS(_13213_stat)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1d7c40e54_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline void _2024a1a74_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _2024d292e_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	jule::I64 _739_n = 0LL;;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {
			{
			}
		_iter_next_1ad501112:;
		}
		_iter_end_1ad501112:;;
	};
	if ((_739_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _809_buf = jule::Slice<jule::U8>::alloc(_739_n, _739_n, 0);;
	_739_n=0LL;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {
			{
				_809_buf[_739_n]=_6924_s[_739_n];
			}
		_iter_next_1ad501563:;
		}
		_iter_end_1ad501563:;;
	};
	return static_cast<jule::Str>(_809_buf);;
}



inline jule::I64 _2014c49aa_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _2024e2202_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg) {
	return static_cast<jule::I64>(fcntl(_5410_handle, _5423_cmd, _5433_arg));;
}



inline jule::I64 _2024e2576_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return static_cast<jule::I64>(stat(((char*)(_5916_path)), _5933_stat));;
}



inline jule::I64 _2024e29a5_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode) {
	return static_cast<jule::I64>(open(((char*)(_6416_path)), _6429_flag, _6440_mode));;
}



inline jule::U8* _2024e2d29_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _2024e3324_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _2024e35dd_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I64 _2024e38a7_Closedir(DIR* _8124_dir) {
	return static_cast<jule::I64>(closedir(_8124_dir));;
}



inline jule::I64 _2024e42ae_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_9017_path)), _9030_mode));;
}



inline jule::I64 _2024e4578_Rmdir(jule::U8* _9517_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_9517_path))));;
}



inline jule::I64 _2024e4842_Unlink(jule::U8* _9818_path) {
	return static_cast<jule::I64>(unlink(((char*)(_9818_path))));;
}



inline jule::I64 _2024e9eda_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return static_cast<jule::I64>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I64 _2024ea381_Close(jule::I64 _2510_handle) {
	return static_cast<jule::I64>(close(_2510_handle));;
}



inline jule::I64 _2024ea7b0_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return static_cast<jule::I64>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _2024ea9e1_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Str _2025d21c1_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _119_s = jule::Str();;
	{
		_119_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_119_s._len = _1018_n;
		_119_s._slice = _108_b;
	};
	return _119_s;;
}



inline jule::Slice<jule::U8> _1ad554e13_Slice(jule::U8* _2316_e, jule::I64 _2326_n) {
	jule::Slice<jule::U8> _249_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_249_buf.data = jule::Ptr<jule::U8>::make(_2316_e, nullptr);
		_249_buf._len = _2326_n;
		_249_buf._cap = _2326_n;
		_249_buf._slice = _2316_e;
	};
	return _249_buf;;
}



inline jule::Slice<jule::U8> _2025de4ec_StrBytes(jule::Str _4113_s) {
	if ((_4113_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1ad554e13_Slice((&(_4113_s[0LL])), static_cast<jule::I64>(_4113_s.len()));;
}



inline jule::Str _2025de7b6_BytesStr(jule::Slice<jule::U8> _5013_b) {
	if ((_5013_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _2025d21c1_Str((&(_5013_b[0LL])), static_cast<jule::I64>(_5013_b.len()));;
}



inline jule::Str _2025dea80_StrFromBytes(jule::Slice<jule::U8> _5817_b) {
	jule::Str _595_s = _2025de7b6_BytesStr(_5817_b);;
	{
		if (_5817_b.data.ref != nullptr) {
			_595_s.buffer.ref = _5817_b.data.ref;
			_595_s.buffer.add_ref();
		};
	};
	return _595_s;;
}



inline jule::Slice<jule::U8> _2025ded49_BytesFromStr(jule::Str _7017_s) {
	jule::Slice<jule::U8> _719_b = _2025de4ec_StrBytes(_7017_s);;
	{
		if (_7017_s.buffer.ref != nullptr) {
			_719_b.data.ref = _7017_s.buffer.ref;
			_719_b.data.add_ref();
		};
	};
	return _719_b;;
}



inline jule::I64 _2025e0696_getLastOsError(void) {
	jule::I64 _305_err = _2014c49aa_GetLastErrno();;
	{
		auto &_match_expr{ _305_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ad55d207:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ad55cab9:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1ad55cb41:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1ad55cbb8:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ad55ce2c:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ad55ce93:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1ad55d009:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1ad55ca42:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1ad55c9dc:;
	};
}



inline jule::Slice<jule::Str> _20261914d_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _2026195e3_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _20261a03e_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _20261a03e_getwd(void) {
	jule::U8* _119_buff = _2024e2d29_Getcwd(nullptr, 0LLU);;
	if ((_119_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(jule::Any(_2025e0696_getLastOsError(), &__jule_any_type0));
	};
	jule::Str _155_pwd = _2024d292e_BytePtrToStr(_119_buff);;
	{
		_2024a1a74_Free(_119_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _155_pwd);;
}



inline jule::Bool _2038679a5_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_2038c7ae2__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _2038d11e4_isExcludingLatin(_203871c12_Letter, _7613_r);;
}



inline jule::Bool _2038d0567_is16(jule::Slice<_2038cd7c9_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bad250bb:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_2038cd7c9_Range16* _19413_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < (*(_19413_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_19413_range))._field_Hi)) {
							return (((*(_19413_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_19413_range))._field_Lo),(*(_19413_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1bad250bb:;
				++it;
				_19313_i++;
				goto _iter_begin_1bad250bb;
			}
			_iter_end_1bad250bb:;
		};
		return false;;
	};
	jule::I64 _2089_lo = 0LL;;
	jule::I64 _2099_hi = _1919_ranges.len();;
	while ((_2089_lo < _2099_hi)) {
		{
			jule::I64 _2119_m = (_2089_lo + ((_2099_hi - _2089_lo) >> 1LLU));;
			_2038cd7c9_Range16* _2129_range = (&(_1919_ranges[_2119_m]));;
			{
				if ((((*(_2129_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2129_range))._field_Hi))) {
					return (((*(_2129_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_2129_range))._field_Lo),(*(_2129_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2129_range))._field_Lo)) {
					_2099_hi=_2119_m;
				} else {
					_2089_lo=static_cast<jule::I64>((_2119_m + 1LL));
				};
			};
		}
	_iter_next_1bad23d56:;
	}
	_iter_end_1bad23d56:;;
	return false;;
}



inline jule::Bool _2038d08db_is32(jule::Slice<_2038cdd07_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bad2b0b1:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_2038cdd07_Range32* _23113_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < (*(_23113_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_23113_range))._field_Hi)) {
							return (((*(_23113_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_23113_range))._field_Lo),(*(_23113_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1bad2b0b1:;
				++it;
				_23013_i++;
				goto _iter_begin_1bad2b0b1;
			}
			_iter_end_1bad2b0b1:;
		};
		return false;;
	};
	jule::I64 _2459_lo = 0LL;;
	jule::I64 _2469_hi = _2289_ranges.len();;
	while ((_2459_lo < _2469_hi)) {
		{
			jule::I64 _2489_m = (_2459_lo + ((_2469_hi - _2459_lo) >> 1LLU));;
			_2038cdd07_Range32* _2499_range = (&(_2289_ranges[_2489_m]));;
			{
				if ((((*(_2499_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2499_range))._field_Hi))) {
					return (((*(_2499_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2499_range))._field_Lo),(*(_2499_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2499_range))._field_Lo)) {
					_2469_hi=_2489_m;
				} else {
					_2459_lo=static_cast<jule::I64>((_2489_m + 1LL));
				};
			};
		}
	_iter_next_1bad27c28:;
	}
	_iter_end_1bad27c28:;;
	return false;;
}



inline jule::Bool _2038d11e4_isExcludingLatin(jule::Ptr<_2038ce2ad_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_2038cd7c9_Range16> *_28010_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2829_off = (*(_27821_rangeTab))._field_LatinOffset;;
		if ((((*(_28010_R16)).len() > _2829_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28010_R16))[((*(_28010_R16)).len() - 1LL)]._field_Hi)))) {
			return _2038d0567_is16((*(_28010_R16)).slice(_2829_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_2038cdd07_Range32> *_2876_R32 = &((*(_27821_rangeTab))._field_R32);;
	if ((((*(_2876_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2876_R32))[0LL]._field_Lo)))) {
		return _2038d08db_is32((*(_2876_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _2038d14ad_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_2038c7ae2__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _2038d11e4_isExcludingLatin(_203878268_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _1d7a7c884_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1865_p0 = _18215_p[0LL];;
	jule::U8 _1875_x = _1d7a7b6da_first[static_cast<jule::I64>(_1865_p0)];;
	if ((_1875_x >= 240LLU)) {
		jule::I32 _1929_mask = static_cast<jule::I32>(((_1875_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1929_mask))) | (65533LL & _1929_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1955_sz = static_cast<jule::I64>((_1875_x & 7LLU));;
	_1d7a7bc6d_acceptRange _1965_accept = _1d7a7c07b_acceptRanges[static_cast<jule::I64>((_1875_x >> 4LLU))];;
	if ((_18215_p.len() < _1955_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2005_b1 = _18215_p[1LL];;
	if (((_2005_b1 < _1965_accept._field_lo) || (_1965_accept._field_hi < _2005_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1865_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2005_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2075_b2 = _18215_p[2LL];;
	if (((_2075_b2 < 128LLU) || (191LL < _2075_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1865_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2075_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2145_b3 = _18215_p[3LL];;
	if (((_2145_b3 < 128LLU) || (191LL < _2145_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1865_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2075_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2145_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1d7a7cbc5_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2335_s0 = _22918_s[0LL];;
	jule::U8 _2345_x = _1d7a7b6da_first[static_cast<jule::I64>(_2335_s0)];;
	if ((_2345_x >= 240LLU)) {
		jule::I32 _2399_mask = static_cast<jule::I32>(((_2345_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2399_mask))) | (65533LL & _2399_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2425_sz = static_cast<jule::I64>((_2345_x & 7LLU));;
	_1d7a7bc6d_acceptRange _2435_accept = _1d7a7c07b_acceptRanges[static_cast<jule::I64>((_2345_x >> 4LLU))];;
	if ((_22918_s.len() < _2425_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2475_s1 = _22918_s[1LL];;
	if (((_2475_s1 < _2435_accept._field_lo) || (_2435_accept._field_hi < _2475_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2335_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2475_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2545_s2 = _22918_s[2LL];;
	if (((_2545_s2 < 128LLU) || (191LL < _2545_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2335_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2545_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2615_s3 = _22918_s[3LL];;
	if (((_2615_s3 < 128LLU) || (191LL < _2615_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2335_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2545_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2615_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1d7a7ce8e_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2805_end = _27619_p.len();;
	jule::I64 _2819_start = (_2805_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_2819_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2899_lim = (_2805_end - 4LL);;
	if ((_2899_lim < 0LL)) {
		_2899_lim=0LL;
	};
	(_2819_start)--;
	for (; (_2819_start >= _2899_lim); (_2819_start)--) {
		{
			if (_1d7a7e9b8_RuneStart(_27619_p[_2819_start])) {
				goto _iter_end_1bad6b4b9;
			};
		}
	_iter_next_1bad6b4b9:;
	}
	_iter_end_1bad6b4b9:;;
	if ((_2819_start < 0LL)) {
		_2819_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d7a7c884_DecodeRune(_27619_p.slice(_2819_start, _2805_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_2819_start + __jule_func_result.__jule_result_arg1) != _2805_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _1d7a7dce7_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _1d7a7e16b_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1d7a7e16b_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4145_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4145_i <= 2047LLU)) {
			_case_begin_1bad7edb2:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4145_i > 1114111LLU) || ((55296LL <= _4145_i) && (_4145_i <= 57343LLU))) {
			_case_begin_1bad801d1:;
			{
				_41242_r=128LL;
				goto _case_begin_1bad7cd49;
			}
		}
		else if ((_4145_i <= 65535LLU)) {
			_case_begin_1bad7cd49:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1bad7ccd3:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1bad7cc6c:;
	};
}



inline jule::I64 _1d7a7e6ee_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4749_i = 0LL;;
	for (; (_4749_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47613_c = _47317_s[_4749_i];;
			if ((_47613_c < 128LLU)) {
				(_4749_i)++;
				goto _iter_next_1bad8c6a5;
			};
			jule::U8 _4829_x = _1d7a7b6da_first[static_cast<jule::I64>(_47613_c)];;
			if ((_4829_x == 241LLU)) {
				(_4749_i)++;
				goto _iter_next_1bad8c6a5;
			};
			jule::I64 _48713_size = static_cast<jule::I64>((_4829_x & 7LLU));;
			if (((_4749_i + _48713_size) > _47317_s.len())) {
				(_4749_i)++;
				goto _iter_next_1bad8c6a5;
			};
			_1d7a7bc6d_acceptRange _4929_accept = _1d7a7c07b_acceptRanges[static_cast<jule::I64>((_4829_x >> 4LLU))];;
			_47613_c=_47317_s[(_4749_i + 1LL)];
			if (((_47613_c < _4929_accept._field_lo) || (_4929_accept._field_hi < _47613_c))) {
				_48713_size=1LL;
			} else if ((_48713_size == 2LL)) {
			} else {
				_47613_c=_47317_s[(_4749_i + 2LL)];
				if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
					_48713_size=1LL;
				} else if ((_48713_size == 3LL)) {
				} else {
					_47613_c=_47317_s[(_4749_i + 3LL)];
					if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
						_48713_size=1LL;
					};
				};
			};
			_4749_i+=_48713_size;
		}
	_iter_next_1bad8c6a5:;
	}
	_iter_end_1bad8c6a5:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d7a7e9b8_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _1d7aa9d45_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1badab4d7:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_1badab4d7:;
			++it;
			_399_i++;
			goto _iter_begin_1badab4d7;
		}
		_iter_end_1badab4d7:;
	};
	return -1LL;;
}



inline jule::I64 _1d7abc671_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	if ((_5017_s.len() == 0LL)) {
		return -1LL;;
	};
	jule::U8* _545_first = (&(_5017_s[0LL]));;
	jule::U8* _559_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_559_it >= _545_first); (_559_it)--) {
		{
			{
				if (((*(_559_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_559_it - _545_first))));;
				};
			};
		}
	_iter_next_1badace56:;
	}
	_iter_end_1badace56:;;
	return -1LL;;
}



inline jule::I64 _1d7abca17_FindByteStr(jule::Str _6716_s, jule::U8 _6724_b) {
	return static_cast<jule::I64>(_1d7aa9d45_FindByte(_2025de4ec_StrBytes(_6716_s), _6724_b));;
}



inline jule::I64 _1d7abcd8b_FindLastByteStr(jule::Str _7220_s, jule::U8 _7228_b) {
	return static_cast<jule::I64>(_1d7abc671_FindLastByte(_2025de4ec_StrBytes(_7220_s), _7228_b));;
}



inline jule::Str _1d7abd144_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	_1d7ad2eb1_StrBuilder _209_ss = static__1d7ad327a_New(static_cast<jule::I64>((_1211_s.len() * _1223_n)));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_1d7adba8b_WriteStr(&_209_ss, _1211_s);
		}
	_iter_next_1badcad86:;
	}
	_iter_end_1badcad86:;;
	_1d7adbd44_WriteByte(&_209_ss, 0LLU);
	return _2025dea80_StrFromBytes(_1d7adcd34_Buf(&_209_ss).slice(0LL, (_1d7adc817_Len(&_209_ss) - 1LL)));;
}



inline jule::Bool _1d7abd5b7_hasPrefix(jule::Str* _2815_s, jule::Str* _2824_sub, jule::I64 _2838_start) {
	if ((((*(_2824_sub)).len() == 0LL) || (((*(_2815_s)).len() - _2838_start) < (*(_2824_sub)).len()))) {
		return false;;
	};
	jule::I64 _339_i = 0LL;;
	for (; (_339_i < (*(_2824_sub)).len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_339_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2838_start + 1LL));
		_339_i = ___jule_assign_arg;
		_2838_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2815_s))[_2838_start] != (*(_2824_sub))[_339_i])) {
				return false;;
			};
		}
	_iter_next_1badce241:;
	}
	_iter_end_1badce241:;;
	return true;;
}



inline jule::Bool _1d7abd93b_HasPrefix(jule::Str _4314_s, jule::Str _4322_sub) {
	return _1d7abd5b7_hasPrefix(&(_4314_s), &(_4322_sub), 0LL);;
}



inline jule::Bool _1d7abdde2_hasSuffix(jule::Str* _4715_s, jule::Str* _4724_sub, jule::I64 _4738_start) {
	if ((((*(_4724_sub)).len() == 0LL) || (((*(_4715_s)).len() - _4738_start) < (*(_4724_sub)).len()))) {
		return false;;
	};
	_4738_start=static_cast<jule::I64>(((*(_4715_s)).len() - _4738_start));
	jule::I64 _539_i = 0LL;;
	for (; (_539_i < (*(_4724_sub)).len()); (_539_i)++) {
		{
			if (((*(_4715_s))[((_4738_start - _539_i) - 1LL)] != (*(_4724_sub))[(((*(_4724_sub)).len() - _539_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1badd1089:;
	}
	_iter_end_1badd1089:;;
	return true;;
}



inline jule::Bool _1d7abe233_HasSuffix(jule::Str _6314_s, jule::Str _6322_sub) {
	return _1d7abdde2_hasSuffix(&(_6314_s), &(_6322_sub), 0LL);;
}



inline jule::I64 _1d7abe662_FindAt(jule::Str _7111_s, jule::Str _7119_sub, jule::I64 _7133_i) {
	if ((((_7133_i < 0LL) || (_7111_s.len() < _7119_sub.len())) || (_7119_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7133_i < _7111_s.len()); (_7133_i)++) {
		{
			if (_1d7abd5b7_hasPrefix(&(_7111_s), &(_7119_sub), _7133_i)) {
				return _7133_i;;
			};
		}
	_iter_next_1badd3ce5:;
	}
	_iter_end_1badd3ce5:;;
	return -1LL;;
}



inline jule::I64 _1d7ac0025_FindLastAt(jule::Str _9415_s, jule::Str _9423_sub, jule::I64 _9433_i) {
	jule::I64 _959_j = ((_9433_i - _9423_sub.len()) + 1LL);;
	if (((((_9423_sub.len() == 0LL) || (_9433_i < 0LL)) || (_9433_i >= _9415_s.len())) || (_959_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1badd6e91:;
	for (; (_959_j >= 0LL); (_959_j)--) {
		{
			jule::I64 _10113_k = _959_j;;
			jule::I64 _10213_z = 0LL;;
			for (; (_10213_z < _9423_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10113_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10213_z + 1LL));
				_10113_k = ___jule_assign_arg;
				_10213_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9415_s[_10113_k] != _9423_sub[_10213_z])) {
						goto _iter_next_1badd6ad9;
					};
				}
			_iter_next_1badd7986:;
			}
			_iter_end_1badd7986:;;
			return _959_j;;
		}
	_iter_next_1badd6ad9:;
	}
	_iter_end_1badd6ad9:;;
	return -1LL;;
}



inline jule::I64 _1d7ac0399_FindLast(jule::Str _11613_s, jule::Str _11621_sub) {
	return static_cast<jule::I64>(_1d7ac0025_FindLastAt(_11613_s, _11621_sub, static_cast<jule::I64>((_11613_s.len() - 1LL))));;
}



inline jule::I64 _1d7ac1ae8_FindLastByte(jule::Str _18017_s, jule::U8 _18025_b) {
	return static_cast<jule::I64>(_1d7abcd8b_FindLastByteStr(_18017_s, _18025_b));;
}



inline jule::I64 _1d7ac2126_FindRune(jule::Str _18713_s, jule::I32 _18721_r) {
	jule::I64 _1889_i = 0LL;;
	while ((_1889_i < _18713_s.len())) {
		{
			jule::I32 _1909_br = 0;;
			jule::I64 _19013_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d7a7cbc5_DecodeRuneStr(_18713_s.slice(_1889_i));
				_1909_br = __jule_assign_result.__jule_result_arg0;
				_19013_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_18721_r == _1909_br)) {
				return _1889_i;;
			};
			_1889_i+=_19013_n;
		}
	_iter_next_1bade0230:;
	}
	_iter_end_1bade0230:;;
	return -1LL;;
}



inline jule::I64 _1d7ac281e_FindAny(jule::Str _21812_s, jule::Str _21820_runes) {
	jule::I64 _2199_i = 0LL;;
	while ((_2199_i < _21812_s.len())) {
		{
			jule::I32 _2219_r = 0;;
			jule::I64 _22112_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d7a7cbc5_DecodeRuneStr(_21812_s.slice(_2199_i));
				_2219_r = __jule_assign_result.__jule_result_arg0;
				_22112_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1d7ac2126_FindRune(_21820_runes, _2219_r) != -1LL)) {
				return _2199_i;;
			};
			_2199_i+=_22112_n;
		}
	_iter_next_1bade32ee:;
	}
	_iter_end_1bade32ee:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1d7ac30c2_Split(jule::Str _24910_s, jule::Str _24918_sub, jule::I64 _24932_n) {
	jule::I64 _2509_cap = _24932_n;;
	if ((_24932_n < 0LL)) {
		_2509_cap=16LLU;
	};
	jule::Slice<jule::Str> _2549_parts = jule::Slice<jule::Str>::alloc(0LL, _2509_cap);;
	if ((_24932_n == 0LL)) {
		return _2549_parts;;
	};
	if ((_24932_n < 0LL)) {
		_24932_n=static_cast<jule::I64>(_24910_s.len());
	};
	jule::I64 _2619_i = 0LL;;
	for (; (_24932_n > 0LL); (_24932_n)--) {
		{
			jule::I64 _2639_j = _1d7abe662_FindAt(_24910_s, _24918_sub, _2619_i);;
			if ((_2639_j == -1LL)) {
				goto _iter_end_1bade8007;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2549_parts; __jule_push_dest.push(_24910_s.slice(_2619_i, _2639_j)); };
			_2619_i=static_cast<jule::I64>((_2639_j + _24918_sub.len()));
		}
	_iter_next_1bade8007:;
	}
	_iter_end_1bade8007:;;
	if (((_24932_n > 0LL) && (_2619_i < _24910_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2549_parts; __jule_push_dest.push(_24910_s.slice(_2619_i)); };
	};
	return _2549_parts;;
}



inline jule::Bool _1d7ac3446_Contains(jule::Str _27713_s, jule::Str _27721_sub) {
	return (_1d7abe662_FindAt(_27713_s, _27721_sub, 0LL) != -1LL);;
}



inline jule::Bool _1d7ac3eb3_ContainsAny(jule::Str _29216_s, jule::Str _29224_runes) {
	return (_1d7ac281e_FindAny(_29216_s, _29224_runes) != -1LL);;
}



inline jule::I64 _1d7ac4337_Count(jule::Str _29810_s, jule::Str _29818_sub) {
	if ((_29818_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _3029_n = 0LL;;
	jule::I64 _3039_i = 0LL;;
	for (;;) {
		{
			jule::I64 _3059_j = _1d7abe662_FindAt(_29810_s, _29818_sub, _3039_i);;
			if ((_3059_j == -1LL)) {
				goto _iter_end_1badec814;
			};
			(_3029_n)++;
			_3039_i=static_cast<jule::I64>((_3059_j + _29818_sub.len()));
		}
	_iter_next_1badec814:;
	}
	_iter_end_1badec814:;;
	return _3029_n;;
}



inline jule::Str _1d7ac4821_Replace(jule::Str _31812_s, jule::Str _31820_sub, jule::Str _31830_new, jule::I64 _31844_n) {
	if (((_31844_n == 0LL) || (_31820_sub == _31830_new))) {
		return _31812_s;;
	};
	jule::I64 _3235_m = _1d7ac4337_Count(_31812_s, _31820_sub);;
	if ((_3235_m == 0LL)) {
		return _31812_s;;
	};
	if (((_31844_n < 0LL) || (_3235_m < _31844_n))) {
		_31844_n=_3235_m;
	};
	_1d7ad2eb1_StrBuilder _3319_ss = static__1d7ad327a_New(static_cast<jule::I64>((_31812_s.len() + (_31844_n * (_31830_new.len() - _31820_sub.len())))));;
	jule::I64 _3329_i = 0LL;;
	for (; (_31844_n > 0LL); (_31844_n)--) {
		{
			jule::I64 _3349_j = _1d7abe662_FindAt(_31812_s, _31820_sub, _3329_i);;
			if ((_3349_j == -1LL)) {
				goto _iter_end_1bae00b8b;
			};
			_1d7adba8b_WriteStr(&_3319_ss, _31812_s.slice(_3329_i, _3349_j));
			_1d7adba8b_WriteStr(&_3319_ss, _31830_new);
			_3329_i=static_cast<jule::I64>((_3349_j + _31820_sub.len()));
		}
	_iter_next_1bae00b8b:;
	}
	_iter_end_1bae00b8b:;;
	_1d7adba8b_WriteStr(&_3319_ss, _31812_s.slice(_3329_i));
	_1d7adbd44_WriteByte(&_3319_ss, 0LLU);
	return _2025dea80_StrFromBytes(_1d7adcd34_Buf(&_3319_ss).slice(0LL, (_1d7adc817_Len(&_3319_ss) - 1LL)));;
}



inline void _1d7ac5514_trimLeft(jule::Slice<jule::U8>* _37518_s, jule::Str _37529_cutset) {
	jule::I64 _3769_i = 0LL;;
	while ((_3769_i < (*(_37518_s)).len())) {
		{
			jule::I32 _3789_r = 0;;
			jule::I64 _37812_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d7a7c884_DecodeRune((*(_37518_s)).slice(_3769_i));
				_3789_r = __jule_assign_result.__jule_result_arg0;
				_37812_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1d7ac2126_FindRune(_37529_cutset, _3789_r) == -1LL)) {
				((*(_37518_s))).mut_slice(_3769_i);;
				return;;
			};
			_3769_i+=_37812_n;
		}
	_iter_next_1bae066ec:;
	}
	_iter_end_1bae066ec:;;
	(*(_37518_s))=nullptr;
}



inline jule::Str _1d7ac5888_TrimLeft(jule::Str _39013_s, jule::Str _39021_cutset) {
	jule::Slice<jule::U8> _3919_bytes = _2025de4ec_StrBytes(_39013_s);;
	_1d7ac5514_trimLeft(&(_3919_bytes), _39021_cutset);
	return static_cast<jule::Str>(_3919_bytes);;
}



inline void _1d7ac1cb3_trimRight(jule::Slice<jule::U8>* _39619_s, jule::Str _39630_cutset) {
	jule::I64 _3979_i = (*(_39619_s)).len();;
	while ((_3979_i > 0LL)) {
		{
			jule::I32 _3999_r = 0;;
			jule::I64 _39912_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d7a7ce8e_DecodeLastRune((*(_39619_s)).slice(0LL, _3979_i));
				_3999_r = __jule_assign_result.__jule_result_arg0;
				_39912_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1d7ac2126_FindRune(_39630_cutset, _3999_r) == -1LL)) {
				((*(_39619_s))).mut_slice(0LL, _3979_i);;
				return;;
			};
			_3979_i-=_39912_n;
		}
	_iter_next_1bae08ad9:;
	}
	_iter_end_1bae08ad9:;;
	(*(_39619_s))=nullptr;
}



inline jule::Str _1d7ac649e_Trim(jule::Str _4199_s, jule::Str _41917_cutset) {
	jule::Slice<jule::U8> _4209_bytes = _2025de4ec_StrBytes(_4199_s);;
	_1d7ac5514_trimLeft(&(_4209_bytes), _41917_cutset);
	_1d7ac1cb3_trimRight(&(_4209_bytes), _41917_cutset);
	return static_cast<jule::Str>(_4209_bytes);;
}



inline jule::Str _1d7ac6823_Join(jule::Slice<jule::Str> _4289_parts, jule::Str _42823_sep) {
	{
		auto _match_expr{ _4289_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1bae0bb86:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1bae0bc0d:;
			{
				return _4289_parts[0LL];;
			}
		}
		_match_end_1bae0b999:;
	};
	jule::I64 _4359_n = 0LL;;
	{
		auto expr = &(_4289_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae0be94:;
		if (it != expr_end) {
			jule::Str *_43612_part = it;
			{
				_4359_n+=(*(_43612_part)).len();
				(_4359_n)++;
			}
			_iter_next_1bae0be94:;
			++it;
			goto _iter_begin_1bae0be94;
		}
		_iter_end_1bae0be94:;
	};
	_1d7ad2eb1_StrBuilder _4409_s = static__1d7ad327a_New(_4359_n);;
	_1d7adba8b_WriteStr(&_4409_s, _4289_parts[0LL]);
	{
		auto expr = _4289_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bae0cb65:;
		if (it != expr_end) {
			jule::Str *_44212_part = it;
			{
				_1d7adba8b_WriteStr(&_4409_s, _42823_sep);
				_1d7adba8b_WriteStr(&_4409_s, (*(_44212_part)));
			}
			_iter_next_1bae0cb65:;
			++it;
			goto _iter_begin_1bae0cb65;
		}
		_iter_end_1bae0cb65:;
	};
	_1d7adbd44_WriteByte(&_4409_s, 0LLU);
	return _2025dea80_StrFromBytes(_1d7adcd34_Buf(&_4409_s).slice(0LL, (_1d7adc817_Len(&_4409_s) - 1LL)));;
}



inline jule::Str _1d7ade7a3_Clean(jule::Str _10914_path) {
	jule::Str _1105_originalPath = _10914_path;;
	jule::I64 _1115_volLen = _1d7ae25a8_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1115_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1115_volLen > 1LL) && _1d7ae1ed1_IsPathSep(_1105_originalPath[0LL])) && _1d7ae1ed1_IsPathSep(_1105_originalPath[1LL]))) {
			return _1d7aded7a_FromSlash(_1105_originalPath);;
		};
		return (_1105_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1205_rooted = _1d7ae1ed1_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1275_n = _10914_path.len();;
	_1d7add917_lazyBuff _1289_out = _1d7add917_lazyBuff{._field_path=_10914_path, ._field_volAndPath=_1105_originalPath, ._field_volLen=_1115_volLen};;
	jule::I64 _1339_r = 0;;
	jule::I64 _13316_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1339_r = ___jule_assign_arg;
		_13316_dotdot = _1___jule_assign_arg;
	});
	if (_1205_rooted) {
		_1d7ade154_append(&_1289_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1339_r = ___jule_assign_arg;
			_13316_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1339_r < _1275_n)) {
		{
			{
				
				if (_1d7ae1ed1_IsPathSep(_10914_path[_1339_r])) {
					_case_begin_1bae1e58e:;
					{
						(_1339_r)++;
					}
				}
				else if (((_10914_path[_1339_r] == '.') && (((_1339_r + 1LL) == _1275_n) || _1d7ae1ed1_IsPathSep(_10914_path[(_1339_r + 1LL)])))) {
					_case_begin_1bae1b24a:;
					{
						(_1339_r)++;
					}
				}
				else if ((((_10914_path[_1339_r] == '.') && (_10914_path[(_1339_r + 1LL)] == '.')) && (((_1339_r + 2LL) == _1275_n) || _1d7ae1ed1_IsPathSep(_10914_path[(_1339_r + 2LL)])))) {
					_case_begin_1bae1b2b1:;
					{
						_1339_r+=2LL;
						{
							
							if ((_1289_out._field_w > _13316_dotdot)) {
								_case_begin_1bae2230b:;
								{
									(_1289_out._field_w)--;
									while (((_1289_out._field_w > _13316_dotdot) && (!(_1d7ae1ed1_IsPathSep(static_cast<jule::U8>(_1d7addd9b_index(&_1289_out, _1289_out._field_w))))))) {
										{
											(_1289_out._field_w)--;
										}
									_iter_next_1bae22d89:;
									}
									_iter_end_1bae22d89:;;
								}
							}
							else if ((!(_1205_rooted))) {
								_case_begin_1bae226a2:;
								{
									if ((_1289_out._field_w > 0LL)) {
										_1d7ade154_append(&_1289_out, 47LLU);
									};
									_1d7ade154_append(&_1289_out, '.');
									_1d7ade154_append(&_1289_out, '.');
									_13316_dotdot=_1289_out._field_w;
								}
							}
							_match_end_1bae2263b:;
						};
					}
				}
				else {
					_case_begin_1bae1b1d4:;
					{
						if (((_1205_rooted && (_1289_out._field_w != 1LL)) || ((!(_1205_rooted)) && (_1289_out._field_w != 0LL)))) {
							_1d7ade154_append(&_1289_out, 47LLU);
						};
						;
						for (; ((_1339_r < _1275_n) && (!(_1d7ae1ed1_IsPathSep(_10914_path[_1339_r])))); (_1339_r)++) {
							{
								_1d7ade154_append(&_1289_out, _10914_path[_1339_r]);
							}
						_iter_next_1bae1e083:;
						}
						_iter_end_1bae1e083:;;
					}
				}
				_match_end_1bae1ada4:;
			};
		}
	_iter_next_1bae1a7ee:;
	}
	_iter_end_1bae1a7ee:;;
	if ((_1289_out._field_w == 0LL)) {
		_1d7ade154_append(&_1289_out, '.');
	};
	return _1d7aded7a_FromSlash(_1d7ade3da_string(&_1289_out));;
}



inline jule::Str _1d7aded7a_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _1d7ae0133_Join(jule::Slice<jule::Str> _2269_elem) {
	return _1d7ae2bb3_join(_2269_elem);;
}



inline jule::Str _1d7ae03ec_Ext(jule::Str _2318_path) {
	jule::I64 _2329_i = (_2318_path.len() - 1LL);;
	for (; ((_2329_i >= 0LL) && (!(_1d7ae1ed1_IsPathSep(_2318_path[_2329_i])))); (_2329_i)--) {
		{
			if ((_2318_path[_2329_i] == '.')) {
				return _2318_path.slice(_2329_i);;
			};
		}
	_iter_next_1bae26057:;
	}
	_iter_end_1bae26057:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1d7ae06b6_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _2475_abs_path;;
	jule::Bool _24715_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d7ae28e9_abs(_2468_path);
		_2475_abs_path = __jule_assign_result.__jule_result_arg0;
		_24715_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _2475_abs_path;
	__jule_func_result.__jule_result_arg1 = _24715_ok;
	return __jule_func_result;;
}



inline jule::Str _1d7ae0980_Base(jule::Str _25513_path) {
	if ((_25513_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25513_path.len() > 0LL) && _1d7ae1ed1_IsPathSep(_25513_path[(_25513_path.len() - 1LL)]))) {
		{
			(_25513_path).mut_slice(0LL, (_25513_path.len() - 1LL));;
		}
	_iter_next_1bae286ec:;
	}
	_iter_end_1bae286ec:;;
	(_25513_path).mut_slice(_1d7ae10e0_VolumeName(_25513_path).len());;
	jule::I64 _2669_i = (_25513_path.len() - 1LL);;
	while (((_2669_i >= 0LL) && (!(_1d7ae1ed1_IsPathSep(_25513_path[_2669_i]))))) {
		{
			(_2669_i)--;
		}
	_iter_next_1bae29bd7:;
	}
	_iter_end_1bae29bd7:;;
	if ((_2669_i >= 0LL)) {
		(_25513_path).mut_slice((_2669_i + 1LL));;
	};
	if ((_25513_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25513_path;;
}



inline jule::Str _1d7ae0d26_Dir(jule::Str _2868_path) {
	jule::Str _2875_vol = _1d7ae10e0_VolumeName(_2868_path);;
	jule::I64 _2889_i = (_2868_path.len() - 1LL);;
	while (((_2889_i >= _2875_vol.len()) && (!(_1d7ae1ed1_IsPathSep(_2868_path[_2889_i]))))) {
		{
			(_2889_i)--;
		}
	_iter_next_1bae2b9a8:;
	}
	_iter_end_1bae2b9a8:;;
	jule::Str _2925_dir = _1d7ade7a3_Clean(_2868_path.slice(_2875_vol.len(), (_2889_i + 1LL)));;
	if ((_2925_dir.equal(".", 1) && (_2875_vol.len() > 2LL))) {
		return _2875_vol;;
	};
	return (_2875_vol + _2925_dir);;
}



inline jule::Str _1d7ae10e0_VolumeName(jule::Str _30415_path) {
	return _1d7aded7a_FromSlash(_30415_path.slice(0LL, _1d7ae25a8_volumeNameLen(_30415_path)));;
}



inline jule::Bool _1d7ae1ed1_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _1d7ae22de_IsAbs(jule::Str _5310_path) {
	return _1d7abd93b_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I64 _1d7ae25a8_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _1d7ae28e9_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_1d7ae22de_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _1d7ade7a3_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _675_wd = ({
		auto except = _2026195e3_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _1d7ae2bb3_join(jule::Slice<jule::Str>::make({_675_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1d7ae2bb3_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae34d57:;
		if (it != expr_end) {
			jule::I64 _749_i = it - expr->begin();
			jule::Str *_7412_e = it;
			{
				if (!((*(_7412_e))).empty()) {
					return _1d7ade7a3_Clean(_1d7ac6823_Join(_739_elem.slice(_749_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_1bae34d57:;
			++it;
			_749_i++;
			goto _iter_begin_1bae34d57;
		}
		_iter_end_1bae34d57:;
	};
	return jule::Str();;
}



inline jule::I64 _2025256a8_getLastFsError(void) {
	jule::I64 _725_err = _2014c49aa_GetLastErrno();;
	{
		auto &_match_expr{ _725_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1bae4257e:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1bae41c32:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1bae41e30:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1bae41e96:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1bae4200c:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1bae42073:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1bae426b1:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1bae42727:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1bae4278d:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1bae42804:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1bae4287b:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1bae42903:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1bae4297a:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1bae42a02:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1bae42a79:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1bae42b01:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1bae42b78:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1bae42c00:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1bae42c77:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1bae42cee:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1bae42d76:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1bae42ded:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1bae42e75:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1bae42eec:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1bae43074:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1bae430eb:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1bae43173:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1bae431ea:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1bae41db9:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1bae41d64:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1d7c87d58_AtoiBp(jule::U8* _922_b, jule::I64 _936_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _109_neg = ((*(_922_b)) == '-');;
	if (_109_neg) {
		if ((_936_n == 1LL)) {
			return __jule_func_result;;
		};
		(_936_n)--;
		(_922_b)++;
	};
	for (; (_936_n > 0LL); (_936_n)--) {
		{
			if ((('0' <= (*(_922_b))) && ((*(_922_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>(((*(_922_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_922_b)++;
		}
	_iter_next_1bae65690:;
	}
	_iter_end_1bae65690:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_109_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::I64>((-(__jule_func_result.__jule_result_arg0)));
	};
	return __jule_func_result;;
}



inline jule::Str _1d7c8c7b9_Itoa(jule::I64 _89_x) {
	if ((_89_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _1d7c8cac7_Utoa(static_cast<jule::U64>(static_cast<jule::U64>((-(_89_x))))));;
	};
	return _1d7c8cac7_Utoa(static_cast<jule::U64>(static_cast<jule::U64>(_89_x)));;
}



inline jule::Str _1d7c8cac7_Utoa(jule::U64 _1613_x) {
	if ((_1613_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _209_buf = jule::Slice<jule::U8>::alloc(21LL, 21LL, 0);;
	jule::I64 _219_i = (_209_buf.len() - 1LL);;
	while ((_1613_x >= 10LLU)) {
		{
			jule::U64 _239_q = (_1613_x / 10LLU);;
			_209_buf[_219_i]=static_cast<jule::U8>(static_cast<jule::U8>((('0' + _1613_x) - (_239_q * 10LLU))));
			(_219_i)--;
			_1613_x=_239_q;
		}
	_iter_next_1bae6c356:;
	}
	_iter_end_1bae6c356:;;
	_209_buf[_219_i]=static_cast<jule::U8>(static_cast<jule::U8>(('0' + _1613_x)));
	(_209_buf).mut_slice(_219_i);;
	return _2025dea80_StrFromBytes(_209_buf);;
}



inline jule::Slice<char*> _1d7c9112a_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s) {
	jule::Slice<char*> _369_cs = jule::Slice<char*>::alloc(((*(_3525_s)).len() + 1LL), ((*(_3525_s)).len() + 1LL), nullptr);;
	{
		auto expr = _3525_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae89186:;
		if (it != expr_end) {
			jule::I64 _379_i = it - expr->begin();
			{
				_369_cs[_379_i]=((char*)((&((*(_3525_s))[_379_i][0LL]))));
			}
			_iter_next_1bae89186:;
			++it;
			_379_i++;
			goto _iter_begin_1bae89186;
		}
		_iter_end_1bae89186:;
	};
	_369_cs[(_369_cs.len() - 1LL)]=nullptr;
	return _369_cs;;
}



inline jule::I64 _1d7c9149e_execvp(jule::Str* _4412_file, jule::Slice<jule::Str>* _4424_argv) {
	jule::Slice<char*> _455_cargv = _1d7c9112a_strSliceToCstrSlice(_4424_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&((*(_4412_file))[0LL])))), (char*const*)(&(_455_cargv[0LL]))));;
	};
}



inline jule::VoidExceptional _1d7c916d0_setenv(jule::Slice<jule::Str>* _5112_envv) {
	;
	{
		auto expr = _5112_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae8bc5a:;
		if (it != expr_end) {
			jule::Str *_5312_env = it;
			{
				jule::I64 _549_i = _1d7abca17_FindByteStr((*(_5312_env)), '=');;
				if ((_549_i == -1LL)) {
					return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
				};
				{
					jule::Str _5913_key = (*(_5312_env)).slice(0LL, _549_i);;
					if ((((*(_5312_env)).len() - _549_i) == 1LL)) {
						jule::Str _6117_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_5913_key[0LL])))), ((char*)((&(_6117_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
						};
					} else {
						jule::Str _6617_val = (*(_5312_env)).slice((_549_i + 1LL));;
						if ((setenv(((char*)((&(_5913_key[0LL])))), ((char*)((&(_6617_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
						};
					};
				};
			}
			_iter_next_1bae8bc5a:;
			++it;
			goto _iter_begin_1bae8bc5a;
		}
		_iter_end_1bae8bc5a:;
	};
	return jule::VoidExceptional();
}



inline jule::I64 _1d7c92659_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1bae91105:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1bae8c057:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1bae8d069:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1bae90d3b:;
	};
}



inline jule::I64 _1d7c928ac_getLastProcessError(void) {
	return _1d7c92659_processErrorFromCode(static_cast<jule::I64>(_2014c49aa_GetLastErrno()));;
}



inline void _1d7c931c6_Exit(jule::I64 _129_code) {
	_2024ea9e1_Exit(_129_code);
}



inline jule::Str _1d7c933d5_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1d7b74abe_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1d7b74d77_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1d7b74063_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baeb8c65:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1baeb8c65:;
			++it;
			goto _iter_begin_1baeb8c65;
		}
		_iter_end_1baeb8c65:;
	};
	return false;;
}



inline jule::Bool _1d7b75141_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1d7b72d31_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baeb9a02:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1baeb9a02:;
			++it;
			goto _iter_begin_1baeb9a02;
		}
		_iter_end_1baeb9a02:;
	};
	{
		auto expr = &(_1d7b749c0_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baeb9936:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1baeb9936:;
			++it;
			goto _iter_begin_1baeb9936;
		}
		_iter_end_1baeb9936:;
	};
	return false;;
}



inline jule::Str _1d7b8222a_Logf(jule::Str _3169_fmt, jule::Slice<jule::Any> _31622_args) {
	return _1d7b82bba_applyFmt(_3169_fmt, _31622_args);;
}



inline jule::Str _1d7b82538_argToStr(jule::Any _32013_arg) {
	{
		auto &_match_expr{ _32013_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1baeba195:;
			{
				return _32013_arg.cast<jule::Str>(&__jule_any_type4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1baebbb36:;
			{
				return jule::Str::from_byte(_32013_arg.cast<jule::U8>(&__jule_any_type129));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1baebbb9c:;
			{
				return jule::Str::from_rune(_32013_arg.cast<jule::I32>(&__jule_any_type6));;
			}
		}
		else {
			_case_begin_1baebb55e:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1baebb509:;
	};
}



inline jule::I64 _1d7b82802_findNextFmt(jule::Str _33316_fmt) {
	{
		auto expr = &(_33316_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baebc917:;
		if (it != expr_end) {
			jule::I64 _3349_i = it - expr->begin();
			jule::U8 *_33412_b = it;
			{
				if (((*(_33412_b)) == '@')) {
					return _3349_i;;
				};
			}
			_iter_next_1baebc917:;
			++it;
			_3349_i++;
			goto _iter_begin_1baebc917;
		}
		_iter_end_1baebc917:;
	};
	return -1LL;;
}



inline jule::Str _1d7b82bba_applyFmt(jule::Str _34217_fmt, jule::Slice<jule::Any> _34227_args) {
	_1d7ad2eb1_StrBuilder _3439_s = static__1d7ad327a_New(32LL);;
	{
		auto expr = &(_34227_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baebd363:;
		if (it != expr_end) {
			jule::Any *_34412_arg = it;
			{
				jule::I64 _3459_i = _1d7b82802_findNextFmt(_34217_fmt);;
				if ((_3459_i == -1LL)) {
					goto _iter_end_1baebd363;
				};
				_1d7adba8b_WriteStr(&_3439_s, _34217_fmt.slice(0LL, _3459_i));
				_1d7adba8b_WriteStr(&_3439_s, _1d7b82538_argToStr((*(_34412_arg))));
				(_34217_fmt).mut_slice((_3459_i + 1LL));;
			}
			_iter_next_1baebd363:;
			++it;
			goto _iter_begin_1baebd363;
		}
		_iter_end_1baebd363:;
	};
	_1d7adba8b_WriteStr(&_3439_s, _34217_fmt);
	return _1d7adc383_Str(&_3439_s);;
}



inline jule::Bool _1d7b83a34_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _1d7b84e86_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _1d7b85261_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _1d7b8552a_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _1d7b8586b_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _1d7b85b35_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _1d7b85dee_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _1d7b861b8_IsUnix(jule::Str _5511_os) {
	return (_1d7b85261_IsDarwin(_5511_os) || _1d7b8552a_IsLinux(_5511_os));;
}



inline jule::Bool _1d7b8655e_Is32Bit(jule::Str _5812_arch) {
	return _1d7b8586b_IsI386(_5812_arch);;
}



inline jule::Bool _1d7b86828_Is64Bit(jule::Str _6112_arch) {
	return (_1d7b85b35_IsAmd64(_6112_arch) || _1d7b85dee_IsArm64(_6112_arch));;
}



inline void _1d7c946b1_init(void) {
	jule::Str _259_path = _1d7c933d5_Executable();;
	if ((_259_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1d7c93bdd_PathWd=({
			auto except = _2026195e3_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1d7c93935_PathExec=_1d7ae0d26_Dir(_259_path);
		_1d7c936d2_PathStdlib=_1d7ae0133_Join(jule::Slice<jule::Str>::make({_1d7c93935_PathExec,jule::Str::lit("..", 2),jule::Str::lit("std", 3)}));
		_1d7c93eeb_PathApi=_1d7ae0133_Join(jule::Slice<jule::Str>::make({_1d7c93935_PathExec,jule::Str::lit("..", 2),jule::Str::lit("api", 3),jule::Str::lit("jule.hpp", 8)}));
	};
}



inline jule::I64 _1d8b60ca7_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _1d8b686a5_Len64(_6119_x)));;
}



inline jule::I64 _1d8b61c0e_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_1d8b62935_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _1d8b6266b_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1d8b613c3__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _1d8b62935_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1d8b61989__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _1d8b683db_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str::lit("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _1d8b686a5_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str::lit("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1d8b69442_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1d8b6ac4b_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5015_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5025_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5035_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5045_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5055_w0 = (_5015_x0 * _5035_y0);;
	jule::U64 _5065_t = ((_5025_x1 * _5035_y0) + (_5055_w0 >> 32LLU));;
	jule::U64 _5079_w1 = (_5065_t & 4294967295LLU);;
	jule::U64 _5085_w2 = (_5065_t >> 32LLU);;
	_5079_w1+=(_5015_x0 * _5045_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5025_x1 * _5045_y1) + _5085_w2) + (_5079_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _1d8a6ae59_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1d8a6b267_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1d8a6b531_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1d8a6b872_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1d8a6de29_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1bb0a567b:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1d8b73957_IsInf(_4714_f, 0LL) || _1d8b7334c_IsNaN(_4714_f)) {
			_case_begin_1bb0a5703:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1bb0a559e:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1d8b73c21_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _569_x = _1d8a6b531_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_569_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_569_x=static_cast<jule::U64>((_569_x & 9227875636482146303LLU));
	_569_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1d8a6b872_F64FromBits(_569_x));
	return __jule_func_result;;
}



inline jule::F64 _1d8b7303e_NaN(void) {
	return static_cast<jule::F64>(_1d8a6b872_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1d8b7334c_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1d8b73616_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1d8a6b872_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_1d8a6b872_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1d8b73957_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1d8b73c21_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1d8b760ca_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1d8b756e5_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1d8b7334c_IsNaN(_1118_x) || _1d8b73957_IsInf(_1118_x, 1LL)) {
			_case_begin_1bb0e1d7c:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1bb0e1e04:;
			{
				return static_cast<jule::F64>(_1d8b7303e_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1bb0e1e7b:;
			{
				return static_cast<jule::F64>(_1d8b73616_Inf(-1LL));;
			}
		}
		_match_end_1bb0e1cb1:;
	};
	jule::F64 _1339_f1 = 0;;
	jule::I64 _13317_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1d8a6de29_Frexp(_1118_x);
		_1339_f1 = __jule_assign_result.__jule_result_arg0;
		_13317_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1339_f1 < 0.7071067811865476)) {
		_1339_f1*=2LL;
		(_13317_ki)--;
	};
	jule::F64 _1385_f = (_1339_f1 - 1LL);;
	jule::F64 _1395_k = static_cast<jule::F64>(_13317_ki);;
	jule::F64 _1425_s = jule::div(_1385_f,(2LL + _1385_f));;
	jule::F64 _1435_s2 = (_1425_s * _1425_s);;
	jule::F64 _1445_s4 = (_1435_s2 * _1435_s2);;
	jule::F64 _1455_t1 = (_1435_s2 * (0.6666666666666735 + (_1445_s4 * (0.2857142874366239 + (_1445_s4 * (0.1818357216161805 + (_1445_s4 * 0.14798198605116586)))))));;
	jule::F64 _1465_t2 = (_1445_s4 * (0.3999999999940942 + (_1445_s4 * (0.22222198432149784 + (_1445_s4 * 0.15313837699209373)))));;
	jule::F64 _1475_R = (_1455_t1 + _1465_t2);;
	jule::F64 _1485_hfsq = ((0.5 * _1385_f) * _1385_f);;
	return static_cast<jule::F64>(((_1395_k * 0.6931471803691238) - ((_1485_hfsq - ((_1425_s * (_1485_hfsq + _1475_R)) + (_1395_k * 0.00000000019082149292705877))) - _1385_f)));;
}



inline jule::F64 _1d8b760ca_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1d8a6b872_F64FromBits(static_cast<jule::U64>((_1d8a6b531_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1d8b7ccc4_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _465_absF = _1d8b760ca_Abs(_449_f);;
	jule::F64 _479_i = 0LL;;
	if ((_465_absF > 4503599627370496LL)) {
		_479_i=_449_f;
	} else {
		_479_i=static_cast<jule::F64>((_465_absF + 4503599627370496LL));
		_479_i-=4503599627370496LL;
		while ((_479_i > _465_absF)) {
			{
				(_479_i)--;
			}
		_iter_next_1bb156463:;
		}
		_iter_end_1bb156463:;;
		if ((_449_f < 0LL)) {
			_479_i=static_cast<jule::F64>((-(_479_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _479_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _479_i));
	return __jule_func_result;;
}



inline jule::F64 _1d8b7d5cc_Log2(jule::F64 _449_x) {
	jule::F64 _455_frac = 0;;
	jule::I64 _4511_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1d8a6de29_Frexp(_449_x);
		_455_frac = __jule_assign_result.__jule_result_arg0;
		_4511_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_455_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4511_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1d8b756e5_Log(_455_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4511_exp)));;
}



inline jule::Str _1d8ba7c77_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	jule::Slice<jule::U8> _839_bytes = _1d8ba8360_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1d8bab792_max(static_cast<jule::I64>(((_7932_prec + 4LL) + 1LL)), 25LL), 0), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize);;
	{ jule::Slice<jule::U8> &__jule_push_dest = _839_bytes; __jule_push_dest.push(0LLU); };
	return _2025dea80_StrFromBytes(_839_bytes.slice(0LL, (_839_bytes.len() - 1LL)));;
}



inline jule::Slice<jule::U8> _1d8ba8360_genericFtoa(jule::Slice<jule::U8> _8820_dst, jule::F64 _8833_val, jule::U8 _8843_fmt, jule::I64 _8858_prec, jule::I64 _8869_bitSize) {
	jule::U64 _899_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1d8ba6a56_floatInfo> _9013_flt = nullptr;;
	{
		auto &_match_expr{ _8869_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1bb40b680:;
			{
				_899_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1d8a6ae59_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8833_val)))));
				_9013_flt=((jule::Ptr<_1d8ba6a56_floatInfo>)((&(_1d8ba6e41_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1bb40b4a4:;
			{
				_899_bits=static_cast<jule::U64>(_1d8a6b531_F64Bits(_8833_val));
				_9013_flt=((jule::Ptr<_1d8ba6a56_floatInfo>)((&(_1d8ba724e_f64info))));
			}
		}
		else {
			_case_begin_1bb40ad22:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:99:9"));;
			}
		}
		_match_end_1bb40acbc:;
	};
	jule::Bool _1025_neg = ((_899_bits >> ((*(_9013_flt))._field_expbits + (*(_9013_flt))._field_mantbits)) != 0LLU);;
	jule::I64 _1039_exp = (static_cast<jule::I64>((_899_bits >> (*(_9013_flt))._field_mantbits)) & static_cast<jule::I64>(((1LL << (*(_9013_flt))._field_expbits) - 1LL)));;
	jule::U64 _1049_mant = (_899_bits & ((static_cast<jule::U64>(1LLU) << (*(_9013_flt))._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _1039_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << (*(_9013_flt))._field_expbits) - 1LL)))) {
			_case_begin_1bb40ed7b:;
			{
				{
					
					if ((_1049_mant != 0LLU)) {
						_case_begin_1bb411ae7:;
						{
							return jule::append(_8820_dst,_2025de4ec_StrBytes(jule::Str::lit("nan", 3)));;
						}
					}
					else if (_1025_neg) {
						_case_begin_1bb410e48:;
						{
							return jule::append(_8820_dst,_2025de4ec_StrBytes(jule::Str::lit("-inf", 4)));;
						}
					}
					else {
						_case_begin_1bb410dd2:;
						{
							return jule::append(_8820_dst,_2025de4ec_StrBytes(jule::Str::lit("+inf", 4)));;
						}
					}
					_match_end_1bb410d16:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1bb40ee69:;
			{
				(_1039_exp)++;
			}
		}
		else {
			_case_begin_1bb40b1eb:;
			{
				_1049_mant|=(static_cast<jule::U64>(1LLU) << (*(_9013_flt))._field_mantbits);
			}
		}
		_match_end_1bb40e892:;
	};
	_1039_exp+=(*(_9013_flt))._field_bias;
	if ((_8843_fmt == 'b')) {
		return _1d8baa890_fmtB(_8820_dst, _1025_neg, _1049_mant, _1039_exp, &((*(_9013_flt))));;
	};
	if (((_8843_fmt == 'x') || (_8843_fmt == 'X'))) {
		return _1d8bab099_fmtX(_8820_dst, _8858_prec, _8843_fmt, _1025_neg, _1049_mant, _1039_exp, &((*(_9013_flt))));;
	};
	;
	_1d8ba76e4_decimalSlice _1389_digs = _1d8ba76e4_decimalSlice{};;
	jule::Bool _1399_ok = false;;
	jule::Bool _1415_shortest = (_8858_prec < 0LL);;
	if (_1415_shortest) {
		_1389_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1d8bb6747_ryuFtoaShortest(&(_1389_digs), _1049_mant, static_cast<jule::I64>((_1039_exp - static_cast<jule::I64>((*(_9013_flt))._field_mantbits))), &((*(_9013_flt))));
		_1399_ok=true;
		{
			auto &_match_expr{ _8843_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bb419ea7:;
				{
					_8858_prec=static_cast<jule::I64>(_1d8bab792_max(static_cast<jule::I64>((_1389_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bb41a02e:;
				{
					_8858_prec=static_cast<jule::I64>(_1d8bab792_max(static_cast<jule::I64>((_1389_digs._field_nd - _1389_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bb41a0a6:;
				{
					_8858_prec=_1389_digs._field_nd;
				}
			}
			_match_end_1bb40e9b3:;
		};
	} else if ((_8843_fmt != 'f')) {
		jule::I64 _15813_digits = _8858_prec;;
		{
			auto &_match_expr{ _8843_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bb41c0a8:;
				{
					(_15813_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bb41a5d4:;
				{
					if ((_8858_prec == 0LL)) {
						_8858_prec=1LL;
					};
					_15813_digits=_8858_prec;
				}
			}
			else {
				_case_begin_1bb41bc12:;
				{
					_15813_digits=1LL;
				}
			}
			_match_end_1bb41b7a0:;
		};
		if (((_8869_bitSize == 32LL) && (_15813_digits <= 9LL))) {
			_1389_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1d8bb547c_ryuFtoaFixed32(&(_1389_digs), static_cast<jule::U32>(static_cast<jule::U32>(_1049_mant)), static_cast<jule::I64>((_1039_exp - static_cast<jule::I64>((*(_9013_flt))._field_mantbits))), _15813_digits);
			_1399_ok=true;
		} else if ((_15813_digits <= 18LL)) {
			_1389_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1d8bb5922_ryuFtoaFixed64(&(_1389_digs), _1049_mant, static_cast<jule::I64>((_1039_exp - static_cast<jule::I64>((*(_9013_flt))._field_mantbits))), _15813_digits);
			_1399_ok=true;
		};
	};
	if ((!(_1399_ok))) {
		return _1d8ba8a69_bigFtoa(_8820_dst, _8858_prec, _8843_fmt, _1025_neg, _1049_mant, _1039_exp, &((*(_9013_flt))));;
	};
	return _1d8ba9240_fmtDigits(_8820_dst, _1415_shortest, _1025_neg, _1389_digs, _8858_prec, _8843_fmt);;
}



inline jule::Slice<jule::U8> _1d8ba8a69_bigFtoa(jule::Slice<jule::U8> _18816_dst, jule::I64 _18833_prec, jule::U8 _18844_fmt, jule::Bool _18855_neg, jule::U64 _1895_mant, jule::I64 _18916_exp, _1d8ba6a56_floatInfo* _18927_flt) {
	_1d8bba55e_decimal _1909_d = _1d8bba55e_decimal{};;
	_1d8bba916_assign(&_1909_d, _1895_mant);
	_1d8bbabbe_shift(&_1909_d, static_cast<jule::I64>((_18916_exp - static_cast<jule::I64>((*(_18927_flt))._field_mantbits))));
	_1d8ba76e4_decimalSlice _1939_digs = _1d8ba76e4_decimalSlice{};;
	jule::Bool _1945_shortest = (_18833_prec < 0LL);;
	if (_1945_shortest) {
		_1d8ba9691_roundShortest(&(_1909_d), _1895_mant, _18916_exp, _18927_flt);
		_1939_digs=_1d8ba76e4_decimalSlice{._field_d=_1909_d._field_d.slice(0LL), ._field_nd=_1909_d._field_nd, ._field_dp=_1909_d._field_dp, };
		{
			auto &_match_expr{ _18844_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bb422ac5:;
				{
					_18833_prec=static_cast<jule::I64>((_1939_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bb4238a6:;
				{
					_18833_prec=static_cast<jule::I64>(_1d8bab792_max(static_cast<jule::I64>((_1939_digs._field_nd - _1939_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bb42391c:;
				{
					_18833_prec=_1939_digs._field_nd;
				}
			}
			_match_end_1bb423752:;
		};
	} else {
		{
			auto &_match_expr{ _18844_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bb422861:;
				{
					_1d8bbb4d8_round(&_1909_d, static_cast<jule::I64>((_18833_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bb4228d8:;
				{
					_1d8bbb4d8_round(&_1909_d, static_cast<jule::I64>((_1909_d._field_dp + _18833_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bb422960:;
				{
					if ((_18833_prec == 0LL)) {
						_18833_prec=1LL;
					};
					_1d8bbb4d8_round(&_1909_d, _18833_prec);
				}
			}
			_match_end_1bb4250a0:;
		};
		_1939_digs=_1d8ba76e4_decimalSlice{._field_d=_1909_d._field_d.slice(0LL), ._field_nd=_1909_d._field_nd, ._field_dp=_1909_d._field_dp, };
	};
	return _1d8ba9240_fmtDigits(_18816_dst, _1945_shortest, _18855_neg, _1939_digs, _18833_prec, _18844_fmt);;
}



inline jule::Slice<jule::U8> _1d8ba9240_fmtDigits(jule::Slice<jule::U8> _22518_dst, jule::Bool _22531_shortest, jule::Bool _22547_neg, _1d8ba76e4_decimalSlice _2265_digs, jule::I64 _22629_prec, jule::U8 _22640_fmt) {
	{
		auto &_match_expr{ _22640_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1bb4283e4:;
			{
				return _1d8ba9c35_fmtE(_22518_dst, _22547_neg, _2265_digs, _22629_prec, _22640_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1bb42845a:;
			{
				return _1d8baa21e_fmtF(_22518_dst, _22547_neg, _2265_digs, _22629_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1bb4284c1:;
			{
				jule::I64 _23413_eprec = _22629_prec;;
				if (((_23413_eprec > _2265_digs._field_nd) && (_2265_digs._field_nd >= _2265_digs._field_dp))) {
					_23413_eprec=_2265_digs._field_nd;
				};
				if (_22531_shortest) {
					_23413_eprec=6LL;
				};
				jule::I64 _2449_exp = (_2265_digs._field_dp - 1LL);;
				if (((_2449_exp < -4LL) || (_2449_exp >= _23413_eprec))) {
					if ((_22629_prec > _2265_digs._field_nd)) {
						_22629_prec=_2265_digs._field_nd;
					};
					return _1d8ba9c35_fmtE(_22518_dst, _22547_neg, _2265_digs, static_cast<jule::I64>((_22629_prec - 1LL)), static_cast<jule::U8>(((_22640_fmt + 'e') - 'g')));;
				};
				if ((_22629_prec > _2265_digs._field_dp)) {
					_22629_prec=_2265_digs._field_nd;
				};
				return _1d8baa21e_fmtF(_22518_dst, _22547_neg, _2265_digs, static_cast<jule::I64>(_1d8bab792_max(static_cast<jule::I64>((_22629_prec - _2265_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1bb428306:;
	};
	return jule::append(_22518_dst,jule::Slice<jule::U8>::make({'%',_22640_fmt}));;
}



inline void _1d8ba9691_roundShortest(_1d8bba55e_decimal* _26323_d, jule::U64 _26335_mant, jule::I64 _26346_exp, _1d8ba6a56_floatInfo* _26357_flt) {
	if ((_26335_mant == 0LLU)) {
		(*(_26323_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2845_minexp = ((*(_26357_flt))._field_bias + 1LL);;
	if (((_26346_exp > _2845_minexp) && ((332LL * ((*(_26323_d))._field_dp - (*(_26323_d))._field_nd)) >= (100LL * (_26346_exp - static_cast<jule::I64>((*(_26357_flt))._field_mantbits)))))) {
		return;;
	};
	_1d8bba55e_decimal _2939_upper = _1d8bba55e_decimal{};;
	_1d8bba916_assign(&_2939_upper, static_cast<jule::U64>(((_26335_mant << 1LLU) + 1LLU)));
	_1d8bbabbe_shift(&_2939_upper, static_cast<jule::I64>(((_26346_exp - static_cast<jule::I64>((*(_26357_flt))._field_mantbits)) - 1LL)));
	jule::U64 _3039_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3049_explo = 0LL;;
	if (((_26335_mant > (1LLU << (*(_26357_flt))._field_mantbits)) || (_26346_exp == _2845_minexp))) {
		_3039_mantlo=static_cast<jule::U64>((_26335_mant - 1LLU));
		_3049_explo=_26346_exp;
	} else {
		_3039_mantlo=static_cast<jule::U64>(((_26335_mant << 1LLU) - 1LLU));
		_3049_explo=static_cast<jule::I64>((_26346_exp - 1LL));
	};
	_1d8bba55e_decimal _3129_lower = _1d8bba55e_decimal{};;
	_1d8bba916_assign(&_3129_lower, static_cast<jule::U64>(((_3039_mantlo << 1LLU) + 1LLU)));
	_1d8bbabbe_shift(&_3129_lower, static_cast<jule::I64>(((_3049_explo - static_cast<jule::I64>((*(_26357_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3195_inclusive = ((_26335_mant & 1LL) == 0LLU);;
	jule::U8 _3329_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3369_ui = 0LL;;
	for (; ; (_3369_ui)++) {
		{
			jule::I64 _3419_mi = ((_3369_ui - _2939_upper._field_dp) + (*(_26323_d))._field_dp);;
			if ((_3419_mi >= (*(_26323_d))._field_nd)) {
				goto _iter_end_1bb434114;
			};
			jule::I64 _3459_li = ((_3369_ui - _2939_upper._field_dp) + _3129_lower._field_dp);;
			jule::U8 _34613_l = static_cast<jule::U8>(48LLU);;
			if (((_3459_li >= 0LL) && (_3459_li < _3129_lower._field_nd))) {
				_34613_l=_3129_lower._field_d[_3459_li];
			};
			jule::U8 _35013_m = static_cast<jule::U8>(48LLU);;
			if ((_3419_mi >= 0LL)) {
				_35013_m=(*(_26323_d))._field_d[_3419_mi];
			};
			jule::U8 _35413_u = static_cast<jule::U8>(48LLU);;
			if ((_3369_ui < _2939_upper._field_nd)) {
				_35413_u=_2939_upper._field_d[_3369_ui];
			};
			jule::Bool _3629_okdown = ((_34613_l != _35013_m) || (_3195_inclusive && ((_3459_li + 1LL) == _3129_lower._field_nd)));;
			{
				
				if (((_3329_upperdelta == 0LLU) && ((_35013_m + 1LLU) < _35413_u))) {
					_case_begin_1bb43828e:;
					{
						_3329_upperdelta=2LLU;
					}
				}
				else if (((_3329_upperdelta == 0LLU) && (_35013_m != _35413_u))) {
					_case_begin_1bb438316:;
					{
						_3329_upperdelta=1LLU;
					}
				}
				else if (((_3329_upperdelta == 1LLU) && ((_35013_m != '9') || (_35413_u != '0')))) {
					_case_begin_1bb43838d:;
					{
						_3329_upperdelta=2LLU;
					}
				}
				_match_end_1bb4381c3:;
			};
			jule::Bool _3839_okup = ((_3329_upperdelta > 0LLU) && ((_3195_inclusive || (_3329_upperdelta > 1LLU)) || ((_3369_ui + 1LL) < _2939_upper._field_nd)));;
			{
				
				if ((_3629_okdown && _3839_okup)) {
					_case_begin_1bb43abed:;
					{
						_1d8bbb4d8_round(_26323_d, static_cast<jule::I64>((_3419_mi + 1LL)));
						return;;
					}
				}
				else if (_3629_okdown) {
					_case_begin_1bb43ac75:;
					{
						_1d8bbae77_roundDown(_26323_d, static_cast<jule::I64>((_3419_mi + 1LL)));
						return;;
					}
				}
				else if (_3839_okup) {
					_case_begin_1bb43acec:;
					{
						_1d8bbb230_roundUp(_26323_d, static_cast<jule::I64>((_3419_mi + 1LL)));
						return;;
					}
				}
				_match_end_1bb43ab87:;
			};
		}
	_iter_next_1bb434114:;
	}
	_iter_end_1bb434114:;;
}



inline jule::Slice<jule::U8> _1d8ba9c35_fmtE(jule::Slice<jule::U8> _40213_dst, jule::Bool _40226_neg, _1d8ba76e4_decimalSlice _40237_d, jule::I64 _40254_prec, jule::U8 _40265_fmt) {
	if (_40226_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4099_ch = '0';;
	if ((_40237_d._field_nd != 0LL)) {
		_4099_ch=_40237_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.push(_4099_ch); };
	if ((_40254_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.push('.'); };
		jule::I64 _41813_i = 1LL;;
		jule::I64 _4199_m = _1d8bab41d_min(_40237_d._field_nd, static_cast<jule::I64>((_40254_prec + 1LL)));;
		if ((_41813_i < _4199_m)) {
			(_40213_dst).append(_40237_d._field_d.slice(_41813_i, _4199_m));;
			_41813_i=_4199_m;
		};
		for (; (_41813_i <= _40254_prec); (_41813_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1bb43e031:;
		}
		_iter_end_1bb43e031:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.push(_40265_fmt); };
	jule::I64 _4319_exp = (_40237_d._field_dp - 1LL);;
	if ((_40237_d._field_nd == 0LL)) {
		_4319_exp=0LL;
	};
	if ((_4319_exp < 0LL)) {
		_4099_ch='-';
		_4319_exp=static_cast<jule::I64>((-(_4319_exp)));
	} else {
		_4099_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.push(_4099_ch); };
	{
		
		if ((_4319_exp < 10LL)) {
			_case_begin_1bb4437d8:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(_4319_exp) + '0'))); };
			}
		}
		else if ((_4319_exp < 100LL)) {
			_case_begin_1bb4421aa:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4319_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4319_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1bb442144:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4319_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_4319_exp / 10LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4319_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1bb44140c:;
	};
	return _40213_dst;;
}



inline jule::Slice<jule::U8> _1d8baa21e_fmtF(jule::Slice<jule::U8> _45713_dst, jule::Bool _45726_neg, _1d8ba76e4_decimalSlice _45737_d, jule::I64 _45754_prec) {
	if (_45726_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45713_dst; __jule_push_dest.push('-'); };
	};
	if ((_45737_d._field_dp > 0LL)) {
		jule::I64 _46513_m = _1d8bab41d_min(_45737_d._field_nd, _45737_d._field_dp);;
		(_45713_dst).append(_45737_d._field_d.slice(0LL, _46513_m));;
		for (; (_46513_m < _45737_d._field_dp); (_46513_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45713_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1bb445d90:;
		}
		_iter_end_1bb445d90:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45713_dst; __jule_push_dest.push('0'); };
	};
	if ((_45754_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45713_dst; __jule_push_dest.push('.'); };
		jule::I64 _47613_i = 0LL;;
		for (; (_47613_i < _45754_prec); (_47613_i)++) {
			{
				jule::U8 _47817_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47913_j = (_45737_d._field_dp + _47613_i);;
				if (((0LL <= _47913_j) && (_47913_j < _45737_d._field_nd))) {
					_47817_ch=_45737_d._field_d[_47913_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45713_dst; __jule_push_dest.push(_47817_ch); };
			}
		_iter_next_1bb446d19:;
		}
		_iter_end_1bb446d19:;;
	};
	return _45713_dst;;
}



inline jule::Slice<jule::U8> _1d8baa890_fmtB(jule::Slice<jule::U8> _49013_dst, jule::Bool _49026_neg, jule::U64 _49037_mant, jule::I64 _49052_exp, _1d8ba6a56_floatInfo* _49063_flt) {
	if (_49026_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _49013_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1d8bc0740_fmtBits(_49013_dst, _49037_mant, 10LL, false, true);
		_49013_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _49013_dst; __jule_push_dest.push('p'); };
	_49052_exp-=static_cast<jule::I64>((*(_49063_flt))._field_mantbits);
	if ((_49052_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _49013_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1d8bc0740_fmtBits(_49013_dst, static_cast<jule::U64>(static_cast<jule::U64>(_49052_exp)), 10LL, (_49052_exp < 0LL), true);
		_49013_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _49013_dst;;
}



inline jule::Slice<jule::U8> _1d8bab099_fmtX(jule::Slice<jule::U8> _51213_dst, jule::I64 _51226_prec, jule::U8 _51237_fmt, jule::Bool _51248_neg, jule::U64 _5139_mant, jule::I64 _51324_exp, _1d8ba6a56_floatInfo* _51335_flt) {
	if ((_5139_mant == 0LLU)) {
		_51324_exp=0LL;
	};
	_5139_mant<<=(60LLU - (*(_51335_flt))._field_mantbits);
	while (((_5139_mant != 0LLU) && ((_5139_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5139_mant<<=1LLU;
			(_51324_exp)--;
		}
	_iter_next_1bb44a02b:;
	}
	_iter_end_1bb44a02b:;;
	if (((_51226_prec >= 0LL) && (_51226_prec < 15LL))) {
		jule::U64 _5279_shift = static_cast<jule::U64>((_51226_prec << 2LLU));;
		jule::U64 _5289_extra = ((_5139_mant << _5279_shift) & 1152921504606846975LLU);;
		_5139_mant>>=(60LLU - _5279_shift);
		if (((_5289_extra | (_5139_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5139_mant)++;
		};
		_5139_mant<<=(60LLU - _5279_shift);
		if (((_5139_mant & 2305843009213693952LLU) != 0LLU)) {
			_5139_mant>>=1LLU;
			(_51324_exp)++;
		};
	};
	jule::Str _5419_hex = jule::Str();;
	if ((_51237_fmt == 'X')) {
		_5419_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5419_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51248_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51237_fmt); __jule_push_dest.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5139_mant >> 60LLU) & 1LLU))))); };
	_5139_mant<<=4LLU;
	if (((_51226_prec < 0LL) && (_5139_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push('.'); };
		while ((_5139_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push(_5419_hex[static_cast<jule::I64>(((_5139_mant >> 60LLU) & 15LLU))]); };
				_5139_mant<<=4LLU;
			}
		_iter_next_1bb4526d7:;
		}
		_iter_end_1bb4526d7:;;
	} else if ((_51226_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push('.'); };
		jule::I64 _56413_i = 0LL;;
		for (; (_56413_i < _51226_prec); (_56413_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push(_5419_hex[static_cast<jule::I64>(((_5139_mant >> 60LLU) & 15LLU))]); };
				_5139_mant<<=4LLU;
			}
		_iter_next_1bb453980:;
		}
		_iter_end_1bb453980:;;
	};
	jule::U8 _5729_ch = static_cast<jule::U8>(80LLU);;
	if ((_51237_fmt == _1d8bac3ca_lower(_51237_fmt))) {
		_5729_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push(_5729_ch); };
	if ((_51324_exp < 0LL)) {
		_5729_ch='-';
		_51324_exp=static_cast<jule::I64>((-(_51324_exp)));
	} else {
		_5729_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push(_5729_ch); };
	{
		
		if ((_51324_exp < 100LL)) {
			_case_begin_1bb450c24:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51324_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51324_exp % 10LL)) + '0'))); };
			}
		}
		else if ((_51324_exp < 1000LL)) {
			_case_begin_1bb450c8a:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51324_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_51324_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51324_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1bb455d5b:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51324_exp / 1000LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_51324_exp / 100LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_51324_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51324_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1bb453d9d:;
	};
	return _51213_dst;;
}



inline jule::I64 _1d8bab41d_min(jule::I64 _5978_a, jule::I64 _59716_b) {
	if ((_5978_a < _59716_b)) {
		return _5978_a;;
	};
	return _59716_b;;
}



inline jule::I64 _1d8bab792_max(jule::I64 _6048_a, jule::I64 _60416_b) {
	if ((_6048_a > _60416_b)) {
		return _6048_a;;
	};
	return _60416_b;;
}



inline jule::U8 _1d8bac3ca_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__1d8106391_ConvError _1d8bac84d_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1d8106391_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1bb45c170:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1bb45c071:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1d8bac3ca_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1bb45dabc:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1d8bac3ca_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1bb45d9e0:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1d8bac3ca_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1bb45d6b0:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1bb45d649:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1bb45d57d:;
					};
				};
			}
		}
		else {
			_case_begin_1bb45b504:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1bb45b856:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _909_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1bb46285c:;
			{
				_909_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1bb4618a0:;
			{
				_909_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1bb462483:;
			{
				_909_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU));
			}
		}
		_match_end_1bb4623b7:;
	};
	jule::U64 _1009_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1bb463110:;
			{
				_1009_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1bb46250a:;
			{
				_1009_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1bb4630aa:;
	};
	jule::U64 _1089_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb463d25:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11013_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1bb46562e:;
						{
							_11013_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1d8bac3ca_lower(_10912_c)) && (_1d8bac3ca_lower(_10912_c) <= 'z'))) {
						_case_begin_1bb46551e:;
						{
							_11013_d=static_cast<jule::U8>(((_1d8bac3ca_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1bb465145:;
						{
							goto _iter_next_1bb463d25;
						}
					}
					else {
						_case_begin_1bb4650ce:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1bb465068:;
				};
				if ((_11013_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1089_n >= _909_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1329_n1 = (_1089_n + static_cast<jule::U64>(_11013_d));;
				if (((_1329_n1 < _1089_n) || (_1329_n1 > _1009_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n=_1329_n1;
			}
			_iter_next_1bb463d25:;
			++it;
			goto _iter_begin_1bb463d25;
		}
		_iter_end_1bb463d25:;
	};
	__jule_func_result.__jule_result_arg0 = _1089_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1d8bacc7c_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _1475_un = 0;;
	jule::I64 _1479_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1d8106391_ConvError __jule_assign_result = _1d8bac84d_parseUint(&(_14618_s), _14630_base, _14645_bit_size);
		_1475_un = __jule_assign_result.__jule_result_arg0;
		_1479_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1479_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_1479_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _1475_un);;
}



inline jule::Exceptional<jule::I64> _1d8bad233_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	jule::Bool _1789_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1789_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1879_un = 0;;
	jule::I64 _18713_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1d8106391_ConvError __jule_assign_result = _1d8bac84d_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1879_un = __jule_assign_result.__jule_result_arg0;
		_18713_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18713_err != static_cast<jule::I64>(0LL)) && (_18713_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18713_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1965_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_1789_neg)) && (_1879_un >= _1965_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	if ((_1789_neg && (_1879_un > _1965_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	jule::I64 _2039_n = static_cast<jule::I64>(_1879_un);;
	if (_1789_neg) {
		_2039_n=static_cast<jule::I64>((-(_2039_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _2039_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1d8bade26_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1d8a6b872_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _575_clz = _1d8b60ca7_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_575_clz);
	;
	jule::U64 _609_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_575_clz));;
	jule::U64 _639_xHi = 0;;
	jule::U64 _6318_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1d8b6ac4b_Mul64(_4122_man, _1d8baec7e_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_639_xHi = __jule_assign_result.__jule_result_arg0;
		_6318_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_639_xHi & 511LLU) == 511LLU) && ((_6318_xLo + _4122_man) < _4122_man))) {
		jule::U64 _679_yHi = 0;;
		jule::U64 _6714_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1d8b6ac4b_Mul64(_4122_man, _1d8baec7e_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_679_yHi = __jule_assign_result.__jule_result_arg0;
			_6714_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6813_mergedHi = 0;;
		jule::U64 _6823_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _639_xHi;
			jule::U64 _1___jule_assign_arg = (_6318_xLo + _679_yHi);
			_6813_mergedHi = ___jule_assign_arg;
			_6823_mergedLo = _1___jule_assign_arg;
		});
		if ((_6823_mergedLo < _6318_xLo)) {
			(_6813_mergedHi)++;
		};
		if (((((_6813_mergedHi & 511LLU) == 511LLU) && ((_6823_mergedLo + 1LLU) == 0LLU)) && ((_6714_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6813_mergedHi;
			jule::U64 _1___jule_assign_arg = _6823_mergedLo;
			_639_xHi = ___jule_assign_arg;
			_6318_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _795_msb = (_639_xHi >> 63LLU);;
	jule::U64 _809_retMantissa = (_639_xHi >> (_795_msb + 9LLU));;
	_609_retExp2-=(1LLU ^ _795_msb);
	if ((((_6318_xLo == 0LLU) && ((_639_xHi & 511LLU) == 0LLU)) && ((_809_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_809_retMantissa+=(_809_retMantissa & 1LLU);
	_809_retMantissa>>=1LLU;
	if (((_809_retMantissa >> 53LLU) > 0LLU)) {
		_809_retMantissa>>=1LLU;
		_609_retExp2+=1LLU;
	};
	if (((_609_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1039_retBits = ((_609_retExp2 << 52LLU) | (_809_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1039_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1d8a6b872_F64FromBits(_1039_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1d8bae366_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1d8a6b267_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1325_clz = _1d8b60ca7_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1325_clz);
	;
	jule::U64 _1359_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1325_clz));;
	jule::U64 _1389_x_hi = 0;;
	jule::U64 _13819_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1d8b6ac4b_Mul64(_11022_man, _1d8baec7e_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1389_x_hi = __jule_assign_result.__jule_result_arg0;
		_13819_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1389_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13819_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1429_y_hi = 0;;
		jule::U64 _14215_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1d8b6ac4b_Mul64(_11022_man, _1d8baec7e_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1429_y_hi = __jule_assign_result.__jule_result_arg0;
			_14215_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14313_merged_hi = 0;;
		jule::U64 _14324_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _1389_x_hi;
			jule::U64 _1___jule_assign_arg = (_13819_x_lo + _1429_y_hi);
			_14313_merged_hi = ___jule_assign_arg;
			_14324_merged_lo = _1___jule_assign_arg;
		});
		if ((_14324_merged_lo < _13819_x_lo)) {
			(_14313_merged_hi)++;
		};
		if (((((_14313_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14324_merged_lo + 1LLU) == 0LLU)) && ((_14215_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14313_merged_hi;
			jule::U64 _1___jule_assign_arg = _14324_merged_lo;
			_1389_x_hi = ___jule_assign_arg;
			_13819_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1545_msb = (_1389_x_hi >> 63LLU);;
	jule::U64 _1559_retMantissa = (_1389_x_hi >> (_1545_msb + 38LLU));;
	_1359_retExp2-=(1LLU ^ _1545_msb);
	if ((((_13819_x_lo == 0LLU) && ((_1389_x_hi & 274877906943LLU) == 0LLU)) && ((_1559_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1559_retMantissa+=(_1559_retMantissa & 1LLU);
	_1559_retMantissa>>=1LLU;
	if (((_1559_retMantissa >> 24LLU) > 0LLU)) {
		_1559_retMantissa>>=1LLU;
		_1359_retExp2+=1LLU;
	};
	if (((_1359_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1789_retBits = ((_1359_retExp2 << 23LLU) | (_1559_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1789_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_1d8a6b267_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_1789_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1d8bb11ae_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _479_n = _4638_prefix.len();;
	if ((_479_n > _4630_s.len())) {
		_479_n=static_cast<jule::I64>(_4630_s.len());
	};
	jule::I64 _519_i = 0LL;;
	for (; (_519_i < _479_n); (_519_i)++) {
		{
			jule::U8 _5313_c = _4630_s[_519_i];;
			if ((('A' <= _5313_c) && (_5313_c <= 'Z'))) {
				_5313_c+=32LL;
			};
			if ((_5313_c != _4638_prefix[_519_i])) {
				return _519_i;;
			};
		}
	_iter_next_1bb487893:;
	}
	_iter_end_1bb487893:;;
	return _479_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1d8bb14bc_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _739_sign = 1LL;;
	jule::I64 _749_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1bb48abc6:;
			{
				if ((_6912_s[0LL] == '-')) {
					_739_sign=-1LL;
				};
				_749_nsign=1LL;
				{
					jule::Str* _8317_sp = (&(_6912_s));;
					(*(_8317_sp))=(*(_8317_sp)).slice(1LL);
				};
				goto _case_begin_1bb48ac4d;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1bb48ac4d:;
			{
				jule::I64 _8813_caseN = _1d8bb11ae_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _8813_caseN) && (_8813_caseN < 8LL))) {
					_8813_caseN=3LL;
				};
				if (((_8813_caseN == 3LL) || (_8813_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1d8b73616_Inf(_739_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_749_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1bb48acc5:;
			{
				if ((_1d8bb11ae_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1d8b7303e_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1bb48ab0a:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1d8bb1786_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1bb490e95:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1bb49121a:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1bb49114e:;
	};
	jule::U64 _1229_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1239_maxMantDigits = 19LL;;
	jule::U8 _1249_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1d8bac3ca_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1229_base=16LLU;
		_1239_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1249_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1329_sawdot = false;;
	jule::Bool _1339_sawdigits = false;;
	jule::I64 _1349_nd = 0LL;;
	jule::I64 _1359_ndMant = 0LL;;
	jule::I64 _1369_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1389_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1389_c == '_')) {
					_case_begin_1bb4953b7:;
					{
						goto _iter_next_1bb490956;
					}
				}
				else if ((_1389_c == '.')) {
					_case_begin_1bb49543e:;
					{
						if (_1329_sawdot) {
							goto _julec_label_1bb499c6d;
						};
						_1329_sawdot=true;
						_1369_dp=_1349_nd;
						goto _iter_next_1bb490956;
					}
				}
				else if ((('0' <= _1389_c) && (_1389_c <= '9'))) {
					_case_begin_1bb4954b6:;
					{
						_1339_sawdigits=true;
						if (((_1389_c == '0') && (_1349_nd == 0LL))) {
							(_1369_dp)--;
							goto _iter_next_1bb490956;
						};
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1229_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_1389_c - '0'));
							(_1359_ndMant)++;
						} else if ((_1389_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1bb490956;
					}
				}
				else if ((((_1229_base == 16LLU) && ('a' <= _1d8bac3ca_lower(_1389_c))) && (_1d8bac3ca_lower(_1389_c) <= 'f'))) {
					_case_begin_1bb49553d:;
					{
						_1339_sawdigits=true;
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1d8bac3ca_lower(_1389_c) - 'a') + 10LLU));
							(_1359_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1bb490956;
					}
				}
				_match_end_1bb4952da:;
			};
			goto _iter_end_1bb490956;
		}
	_iter_next_1bb490956:;
	}
	_iter_end_1bb490956:;;
	_julec_label_1bb499c6d:;
	if ((!(_1339_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1329_sawdot))) {
		_1369_dp=_1349_nd;
	};
	if ((_1229_base == 16LLU)) {
		_1369_dp*=4LL;
		_1359_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1d8bac3ca_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1249_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _20113_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20113_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _21113_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1bb49cbc7;
				};
				if ((_21113_e < 10000LL)) {
					_21113_e=static_cast<jule::I64>((((_21113_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1bb49cbc7:;
		}
		_iter_end_1bb49cbc7:;;
		_1369_dp+=(_21113_e * _20113_esign);
	} else if ((_1229_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_1369_dp - _1359_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1d8bb3315_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _1d8ba724e_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48616_mantissa));
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1bb4a650a:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1bb4a6582:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1d8bb26aa_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1d8bb26aa_f64pow10[_48635_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1bb4a6609:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1d8bb26aa_f64pow10[(-(_48635_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bb4a5eaa:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1d8bb3744_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _1d8ba6e41_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_52016_mantissa));
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1bb4aa8e9:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1bb4aa971:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1d8bb29eb_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1d8bb29eb_f32pow10[_52035_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1bb4aa9e8:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1d8bb29eb_f32pow10[(-(_52035_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bb4aa399:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1d8106391_ConvError _1d8bb3cd8_atofHex(_1d8ba6a56_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1d8106391_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5575_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5585_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1bb4b068a:;
	}
	_iter_end_1bb4b068a:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1bb4b17ce:;
	}
	_iter_end_1bb4b17ce:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5585_minExp - 2LL)))) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1bb4b15d1:;
	}
	_iter_end_1bb4b15d1:;;
	jule::U64 _5889_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_5889_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5889_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6039_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5575_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits)));
		_55652_exp=static_cast<jule::I64>((_5575_maxExp + 1LL));
		_6039_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6109_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6109_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6109_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _1d8ba6e41_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_1d8a6b267_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_6109_bits)))));
		__jule_func_result.__jule_result_arg1 = _6039_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1d8a6b872_F64FromBits(_6109_bits));
	__jule_func_result.__jule_result_arg1 = _6039_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1d8106391_ConvError _1d8bb41b2_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1d8106391_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6239_val = 0;;
		jule::I64 _62314__n = 0;;
		jule::Bool _62318_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d8bb14bc_special(_62111_s);
			_6239_val = __jule_assign_result.__jule_result_arg0;
			_62314__n = __jule_assign_result.__jule_result_arg1;
			_62318_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62318_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_6239_val));
			__jule_func_result.__jule_result_arg1 = _62314__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6295_mantissa = 0;;
	jule::I64 _62915_exp = 0;;
	jule::Bool _62920_neg = false;;
	jule::Bool _62925_trunc = false;;
	jule::Bool _62932_hex = false;;
	jule::I64 _62937__n = 0;;
	jule::Bool _62945_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d8bb1786_readFloat(&(_62111_s));
		_6295_mantissa = __jule_assign_result.__jule_result_arg0;
		_62915_exp = __jule_assign_result.__jule_result_arg1;
		_62920_neg = __jule_assign_result.__jule_result_arg2;
		_62925_trunc = __jule_assign_result.__jule_result_arg3;
		_62932_hex = __jule_assign_result.__jule_result_arg4;
		_62937__n = __jule_assign_result.__jule_result_arg5;
		_62945_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62937__n;
	if ((!(_62945_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62932_hex) {
		jule::F64 _63613_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1d8106391_ConvError __jule_assign_result = _1d8bb3cd8_atofHex(&(_1d8ba6e41_f32info), _6295_mantissa, _62915_exp, _62920_neg, _62925_trunc);
			_63613_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63613_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62925_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1d8bb3744_atof32exact(_6295_mantissa, _62915_exp, _62920_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62945_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1d8bae366_eiselLemire32(_6295_mantissa, _62915_exp, _62920_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62945_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62945_ok) {
			if ((!(_62925_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65817_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1d8bae366_eiselLemire32(static_cast<jule::U64>((_6295_mantissa + 1LLU)), _62915_exp, _62920_neg);
				_65817_fUp = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62945_ok && (__jule_func_result.__jule_result_arg0 == _65817_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1d8bba55e_decimal _6679_d = _1d8bba55e_decimal{};;
	if ((!(_1d8bb1e29_set(&_6679_d, _2025de4ec_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6715_b = 0;;
	jule::Bool _6718_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1d8bb226a_floatBits(&_6679_d, &(_1d8ba6e41_f32info));
		_6715_b = __jule_assign_result.__jule_result_arg0;
		_6718_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1d8a6b267_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_6715_b))));
	if (_6718_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1d8106391_ConvError _1d8bb447b_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1d8106391_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6819_val = 0;;
		jule::I64 _68114__n = 0;;
		jule::Bool _68118_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d8bb14bc_special(_67911_s);
			_6819_val = __jule_assign_result.__jule_result_arg0;
			_68114__n = __jule_assign_result.__jule_result_arg1;
			_68118_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68118_ok) {
			__jule_func_result.__jule_result_arg0 = _6819_val;
			__jule_func_result.__jule_result_arg1 = _68114__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6875_mantissa = 0;;
	jule::I64 _68715_exp = 0;;
	jule::Bool _68720_neg = false;;
	jule::Bool _68725_trunc = false;;
	jule::Bool _68732_hex = false;;
	jule::I64 _68737__n = 0;;
	jule::Bool _68745_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d8bb1786_readFloat(&(_67911_s));
		_6875_mantissa = __jule_assign_result.__jule_result_arg0;
		_68715_exp = __jule_assign_result.__jule_result_arg1;
		_68720_neg = __jule_assign_result.__jule_result_arg2;
		_68725_trunc = __jule_assign_result.__jule_result_arg3;
		_68732_hex = __jule_assign_result.__jule_result_arg4;
		_68737__n = __jule_assign_result.__jule_result_arg5;
		_68745_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68737__n;
	if ((!(_68745_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68732_hex) {
		({
			__jule_tuple_f64__jule_tuple__1d8106391_ConvError __jule_assign_result = _1d8bb3cd8_atofHex(&(_1d8ba724e_f64info), _6875_mantissa, _68715_exp, _68720_neg, _68725_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68725_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1d8bb3315_atof64exact(_6875_mantissa, _68715_exp, _68720_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68745_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1d8bade26_eiselLemire64(_6875_mantissa, _68715_exp, _68720_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68745_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68745_ok) {
			if ((!(_68725_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71517_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1d8bade26_eiselLemire64(static_cast<jule::U64>((_6875_mantissa + 1LLU)), _68715_exp, _68720_neg);
				_71517_fUp = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68745_ok && (__jule_func_result.__jule_result_arg0 == _71517_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1d8bba55e_decimal _7249_d = _1d8bba55e_decimal{};;
	if ((!(_1d8bb1e29_set(&_7249_d, _2025de4ec_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7285_b = 0;;
	jule::Bool _7288_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1d8bb226a_floatBits(&_7249_d, &(_1d8ba724e_f64info));
		_7285_b = __jule_assign_result.__jule_result_arg0;
		_7288_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1d8a6b872_F64FromBits(_7285_b));
	if (_7288_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1d8106391_ConvError _1d8bb4800_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1d8106391_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7389_f = 0;;
		jule::I64 _73812_n = 0;;
		jule::I64 _73815_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1d8106391_ConvError __jule_assign_result = _1d8bb41b2_atof32((*(_73622_s)));
			_7389_f = __jule_assign_result.__jule_result_arg0;
			_73812_n = __jule_assign_result.__jule_result_arg1;
			_73815_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_7389_f));
		__jule_func_result.__jule_result_arg1 = _73812_n;
		__jule_func_result.__jule_result_arg2 = _73815_err;
		return __jule_func_result;;
	};
	jule::F64 _7415_f = 0;;
	jule::I64 _7418_n = 0;;
	jule::I64 _74111_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1d8106391_ConvError __jule_assign_result = _1d8bb447b_atof64((*(_73622_s)));
		_7415_f = __jule_assign_result.__jule_result_arg0;
		_7418_n = __jule_assign_result.__jule_result_arg1;
		_74111_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _7415_f;
	__jule_func_result.__jule_result_arg1 = _7418_n;
	__jule_func_result.__jule_result_arg2 = _74111_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1d8bb4b74_ParseFloat(jule::Str _76915_s, jule::I64 _76923_bitSize) {
	jule::F64 _7705_f = 0;;
	jule::I64 _7708_n = 0;;
	jule::I64 _77011_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1d8106391_ConvError __jule_assign_result = _1d8bb4800_parseFloatPrefix(&(_76915_s), _76923_bitSize);
		_7705_f = __jule_assign_result.__jule_result_arg0;
		_7708_n = __jule_assign_result.__jule_result_arg1;
		_77011_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7708_n != _76915_s.len()) && ((_77011_err == static_cast<jule::I64>(0LL)) || (_77011_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	if ((_77011_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_77011_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _7705_f);;
}



inline void _1d8bb547c_ryuFtoaFixed32(_1d8ba76e4_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _629_e2 = _4956_exp;;
	jule::I64 _635_b = _1d8b683db_Len32(_4945_mant);;
	if ((_635_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _635_b));
		_629_e2+=(static_cast<jule::I64>(_635_b) - 25LL);
	};
	jule::I64 _745_q = (((-(_1d8bb6a11_mulByLog2Log10(static_cast<jule::I64>((_629_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _799_exact = ((_745_q <= 27LL) && (_745_q >= 0LL));;
	jule::U32 _819_di = 0;;
	jule::I64 _8113_dexp2 = 0;;
	jule::Bool _8124_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d8bb83c5_mult64bitPow10(_4945_mant, _629_e2, _745_q);
		_819_di = __jule_assign_result.__jule_result_arg0;
		_8113_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8124_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8113_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_745_q < 0LL) && (_745_q >= -10LL)) && _1d8bb8b78_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I64>((-(_745_q)))))) {
		_799_exact=true;
		_8124_d0=true;
	};
	jule::U64 _945_extra = static_cast<jule::U64>((-(_8113_dexp2)));;
	jule::U32 _955_extraMask = static_cast<jule::U32>(((1LL << _945_extra) - 1LL));;
	jule::U32 _979_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_819_di >> _945_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_819_di & _955_extraMask));
		_819_di = ___jule_assign_arg;
		_979_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _999_roundUp = false;;
	if (_799_exact) {
		_999_roundUp=(((_979_dfrac > (1LLU << (_945_extra - 1LLU))) || ((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && (!(_8124_d0)))) || (((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && _8124_d0) && ((_819_di & 1LLU) == 1LLU)));
	} else {
		_999_roundUp=((_979_dfrac >> (_945_extra - 1LLU)) == 1LLU);
	};
	if ((_979_dfrac != 0LLU)) {
		_8124_d0=false;
	};
	_1d8bb626e_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_819_di)), (!(_8124_d0)), _999_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_745_q;
}



inline void _1d8bb5922_ryuFtoaFixed64(_1d8ba76e4_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1319_e2 = _12156_exp;;
	jule::I64 _1325_b = _1d8b686a5_Len64(_12145_mant);;
	if ((_1325_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1325_b))));
		_1319_e2+=(static_cast<jule::I64>(_1325_b) - 55LL);
	};
	jule::I64 _1465_q = (((-(_1d8bb6a11_mulByLog2Log10(static_cast<jule::I64>((_1319_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _1519_exact = ((_1465_q <= 55LL) && (_1465_q >= 0LL));;
	jule::U64 _1539_di = 0;;
	jule::I64 _15313_dexp2 = 0;;
	jule::Bool _15324_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d8bb8804_mult128bitPow10(_12145_mant, _1319_e2, _1465_q);
		_1539_di = __jule_assign_result.__jule_result_arg0;
		_15313_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15324_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15313_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1465_q < 0LL) && (_1465_q >= -22LL)) && _1d8bb8b78_divisibleByPow5(_12145_mant, static_cast<jule::I64>((-(_1465_q)))))) {
		_1519_exact=true;
		_15324_d0=true;
	};
	jule::U64 _1665_extra = static_cast<jule::U64>((-(_15313_dexp2)));;
	jule::U64 _1675_extraMask = static_cast<jule::U64>(((1LL << _1665_extra) - 1LL));;
	jule::U64 _1699_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_1539_di >> _1665_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_1539_di & _1675_extraMask));
		_1539_di = ___jule_assign_arg;
		_1699_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1719_roundUp = false;;
	if (_1519_exact) {
		_1719_roundUp=(((_1699_dfrac > (1LLU << (_1665_extra - 1LLU))) || ((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && (!(_15324_d0)))) || (((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && _15324_d0) && ((_1539_di & 1LLU) == 1LLU)));
	} else {
		_1719_roundUp=((_1699_dfrac >> (_1665_extra - 1LLU)) == 1LLU);
	};
	if ((_1699_dfrac != 0LLU)) {
		_15324_d0=false;
	};
	_1d8bb626e_formatDecimal(_12124_d, _1539_di, (!(_15324_d0)), _1719_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1465_q;
}



inline void _1d8bb626e_formatDecimal(_1d8ba76e4_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2015_max = _1d8bb5c63_u64pow10[_20088_prec];;
	jule::I64 _2029_trimmed = 0LL;;
	while ((_20044_m >= _2015_max)) {
		{
			jule::U64 _2049_a = 0;;
			jule::U64 _20412_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2049_a = ___jule_assign_arg;
				_20412_b = _1___jule_assign_arg;
			});
			_20044_m=_2049_a;
			(_2029_trimmed)++;
			if ((_20412_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20412_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20412_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1bb4e37ab:;
	}
	_iter_end_1bb4e37ab:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2015_max)) {
		_20044_m/=10LLU;
		(_2029_trimmed)++;
	};
	jule::U64 _2299_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _2319_v = _20044_m;;
	while ((_2319_v >= 100LLU)) {
		{
			jule::U64 _23313_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _23413_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2319_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) % 100LL)));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2319_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2319_v % 100LL));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			};
			_2299_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_2299_n + 1LLU))]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23413_v2) + 1LLU))];
			(*(_20023_d))._field_d[static_cast<jule::I64>((_2299_n + 0LLU))]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23413_v2) + 0LLU))];
			_2319_v=_23313_v1;
		}
	_iter_next_1bb4e3921:;
	}
	_iter_end_1bb4e3921:;;
	if ((_2319_v > 0LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _2319_v) + 1LLU))];
	};
	if ((_2319_v >= 10LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _2319_v))];
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2029_trimmed)++;
		}
	_iter_next_1bb4ebd7a:;
	}
	_iter_end_1bb4ebd7a:;;
	(*(_20023_d))._field_dp=static_cast<jule::I64>(((*(_20023_d))._field_nd + _2029_trimmed));
}



inline void _1d8bb6747_ryuFtoaShortest(_1d8ba76e4_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1d8ba6a56_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1d8b62935_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1d8bb7825_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2735_ml = 0;;
	jule::U64 _2739_mc = 0;;
	jule::U64 _27313_mu = 0;;
	jule::I64 _27321_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1d8bb7209_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2735_ml = __jule_assign_result.__jule_result_arg0;
		_2739_mc = __jule_assign_result.__jule_result_arg1;
		_27313_mu = __jule_assign_result.__jule_result_arg2;
		_27321_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27321_e2 == 0LL)) {
		_1d8bb7825_ryuDigits(_26125_d, _2735_ml, _2739_mc, _27313_mu, true, false);
		return;;
	};
	jule::I64 _2795_q = (_1d8bb6a11_mulByLog2Log10(static_cast<jule::I64>((-(_27321_e2)))) + 1LL);;
	jule::U64 _2839_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2849_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2859_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2869_dl0 = false;;
	jule::Bool _2879_dc0 = false;;
	jule::Bool _2889_du0 = false;;
	if (((*(_26168_flt)) == _1d8ba6e41_f32info)) {
		jule::U32 _29013_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29113_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29213_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d8bb83c5_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_2735_ml)), _27321_e2, _2795_q);
			_29013_dl32 = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d8bb83c5_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_2739_mc)), _27321_e2, _2795_q);
			_29113_dc32 = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d8bb83c5_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27313_mu)), _27321_e2, _2795_q);
			_29213_du32 = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29013_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29113_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29213_du32));
			_2839_dl = ___jule_assign_arg;
			_2849_dc = _1___jule_assign_arg;
			_2859_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d8bb8804_mult128bitPow10(_2735_ml, _27321_e2, _2795_q);
			_2839_dl = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d8bb8804_mult128bitPow10(_2739_mc, _27321_e2, _2795_q);
			_2849_dc = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d8bb8804_mult128bitPow10(_27313_mu, _27321_e2, _2795_q);
			_2859_du = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27321_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2795_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2869_dl0 = ___jule_assign_arg;
			_2879_dc0 = _1___jule_assign_arg;
			_2889_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2795_q < 0LL) && (_2795_q >= -24LL))) {
		if (_1d8bb8b78_divisibleByPow5(_2735_ml, static_cast<jule::I64>((-(_2795_q))))) {
			_2869_dl0=true;
		};
		if (_1d8bb8b78_divisibleByPow5(_2739_mc, static_cast<jule::I64>((-(_2795_q))))) {
			_2879_dc0=true;
		};
		if (_1d8bb8b78_divisibleByPow5(_27313_mu, static_cast<jule::I64>((-(_2795_q))))) {
			_2889_du0=true;
		};
	};
	jule::U64 _3255_extra = static_cast<jule::U64>((-(_27321_e2)));;
	jule::U64 _3265_extraMask = static_cast<jule::U64>(((1LL << _3255_extra) - 1LL));;
	jule::U64 _3289_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2839_dl >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2839_dl & _3265_extraMask));
		_2839_dl = ___jule_assign_arg;
		_3289_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3309_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2849_dc >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2849_dc & _3265_extraMask));
		_2849_dc = ___jule_assign_arg;
		_3309_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3329_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2859_du >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2859_du & _3265_extraMask));
		_2859_du = ___jule_assign_arg;
		_3329_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3389_uok = ((!(_2889_du0)) || (_3329_fracu > 0LLU));;
	if ((_2889_du0 && (_3329_fracu == 0LLU))) {
		_3389_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3389_uok))) {
		(_2859_du)--;
	};
	jule::Bool _3479_cup = false;;
	if (_2879_dc0) {
		_3479_cup=((_3309_fracc > (1LLU << (_3255_extra - 1LLU))) || ((_3309_fracc == (1LLU << (_3255_extra - 1LLU))) && ((_2849_dc & 1LLU) == 1LLU)));
	} else {
		_3479_cup=((_3309_fracc >> (_3255_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3615_lok = ((_2869_dl0 && (_3289_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3615_lok))) {
		(_2839_dl)++;
	};
	jule::Bool _3665_c0 = (_2879_dc0 && (_3309_fracc == 0LLU));;
	_1d8bb7825_ryuDigits(_26125_d, _2839_dl, _2849_dc, _2859_du, _3665_c0, _3479_cup);
	(*(_26125_d))._field_dp-=_2795_q;
}



inline jule::I64 _1d8bb6a11_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _1d8bb6cca_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1d8bb7209_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1d8ba6a56_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1d8bb7825_ryuDigits(_1d8ba76e4_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4109_lhi = 0;;
	jule::U32 _41014_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1d8bb8e42_divmod1e9(_40936_lower);
		_4109_lhi = __jule_assign_result.__jule_result_arg0;
		_41014_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4115_chi = 0;;
	jule::U32 _41110_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1d8bb8e42_divmod1e9(_40948_central);
		_4115_chi = __jule_assign_result.__jule_result_arg0;
		_41110_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4125_uhi = 0;;
	jule::U32 _41210_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1d8bb8e42_divmod1e9(_40962_upper);
		_4125_uhi = __jule_assign_result.__jule_result_arg0;
		_41210_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4125_uhi == 0LLU)) {
		_1d8bb7e96_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4109_lhi < _4125_uhi)) {
		if ((_41014_llo != 0LLU)) {
			(_4109_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41110_clo == 0LLU));
		_40992_cup=((_41110_clo > 500000000LL) || ((_41110_clo == 500000000LL) && _40992_cup));
		_1d8bb7e96_ryuDigits32(_40919_d, _4109_lhi, _4115_chi, _4125_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42813_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42913_v = _4115_chi;;
		while ((_42913_v > 0LLU)) {
			{
				jule::U32 _43113_v1 = 0;;
				jule::U32 _43117_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42913_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42913_v % 10LL);
					_43113_v1 = ___jule_assign_arg;
					_43117_v2 = _1___jule_assign_arg;
				});
				_42913_v=_43113_v1;
				(_42813_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42813_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43117_v2 + '0')));
			}
		_iter_next_1bb51821a:;
		}
		_iter_end_1bb51821a:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42813_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42813_n)));
		_1d8bb7e96_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, static_cast<jule::I64>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1bb51a97b:;
	}
	_iter_end_1bb51a97b:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1bb51a56e:;
	}
	_iter_end_1bb51a56e:;;
}



inline void _1d8bb7e96_ryuDigits32(_1d8ba76e4_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _4609_trimmed = 0LL;;
	jule::I64 _4639_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _4709_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47113_c = 0;;
			jule::U32 _47120_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47113_c = ___jule_assign_arg;
				_47120_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4729_u = (_4559_upper / 10LLU);;
			if ((_4709_l > _4729_u)) {
				goto _iter_end_1bb51d2a8;
			};
			if (((_4709_l == (_47113_c + 1LLU)) && (_47113_c < _4729_u))) {
				(_47113_c)++;
				_47120_cdigit=0LLU;
				_45539_cup=false;
			};
			(_4609_trimmed)++;
			_45525_c0=(_45525_c0 && (_4639_cNextDigit == 0LL));
			_4639_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47120_cdigit));
			({
				jule::U32 ___jule_assign_arg = _4709_l;
				jule::U32 _1___jule_assign_arg = _47113_c;
				jule::U32 _2___jule_assign_arg = _4729_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1bb51d2a8:;
	}
	_iter_end_1bb51d2a8:;;
	if ((_4609_trimmed > 0LL)) {
		_45539_cup=(((_4639_cNextDigit > 5LL) || ((_4639_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_4639_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_4609_trimmed;
	jule::U32 _5099_v = _45458_central;;
	jule::I64 _5109_n = _45554_endindex;;
	while ((_5109_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5129_v1 = 0;;
			jule::U32 _51213_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_5099_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5099_v % 100LL);
				_5129_v1 = ___jule_assign_arg;
				_51213_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5109_n]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51213_v2) + 1LLU))];
			(*(_45421_d))._field_d[(_5109_n - 1LL)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51213_v2) + 0LLU))];
			_5109_n-=2LL;
			_5099_v=_5129_v1;
		}
	_iter_next_1bb51e045:;
	}
	_iter_end_1bb51e045:;;
	if ((_5109_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5109_n]=static_cast<jule::U8>(static_cast<jule::U8>((_5099_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I64>(((*(_45421_d))._field_nd + _4609_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1d8bb83c5_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _5439_pow = _1d8baec7e_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5439_pow+=1LLU;
	};
	jule::U64 _5485_hi = 0;;
	jule::U64 _5489_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1d8b6ac4b_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _5439_pow);
		_5485_hi = __jule_assign_result.__jule_result_arg0;
		_5489_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1d8bb6cca_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_5485_hi << 7LLU) | (_5489_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_5489_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1d8bb8804_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _5719_pow = _1d8baec7e_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5719_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1d8bb6cca_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5795_l1 = 0;;
	jule::U64 _5799_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1d8b6ac4b_Mul64(_56220_m, _5719_pow[0LL]);
		_5795_l1 = __jule_assign_result.__jule_result_arg0;
		_5799_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5809_h1 = 0;;
	jule::U64 _58013_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1d8b6ac4b_Mul64(_56220_m, _5719_pow[1LL]);
		_5809_h1 = __jule_assign_result.__jule_result_arg0;
		_58013_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5815_mid = 0;;
	jule::U64 _58110_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1d8b69442_Add64(_5795_l1, _58013_h0, 0LLU);
		_5815_mid = __jule_assign_result.__jule_result_arg0;
		_58110_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5809_h1+=_58110_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_5809_h1 << 9LLU) | (_5815_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_5815_mid << 9LLU) == 0LLU) && (_5799_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1d8bb8b78_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5909_i = 0LL;;
	for (; (_5909_i < _58632_k); (_5909_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1bb531c4a:;
	}
	_iter_end_1bb531c4a:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1d8bb8e42_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1d8bbbdac_trim(_1d8bba55e_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1bb53528c:;
	}
	_iter_end_1bb53528c:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1d8bbc198_rightShift(_1d8bba55e_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2859_r = 0LL;;
	jule::I64 _2869_w = 0LL;;
	jule::U64 _2899_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2899_n >> _28432_k) == 0LLU); (_2859_r)++) {
		{
			if ((_2859_r >= (*(_28420_a))._field_nd)) {
				if ((_2899_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_2899_n >> _28432_k) == 0LLU)) {
					{
						_2899_n=static_cast<jule::U64>((_2899_n * 10LLU));
						(_2859_r)++;
					}
				_iter_next_1bb5385ae:;
				}
				_iter_end_1bb5385ae:;;
				goto _iter_end_1bb536d0a;
			};
			jule::U64 _3039_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			_2899_n=static_cast<jule::U64>((((_2899_n * 10LLU) + _3039_c) - '0'));
		}
	_iter_next_1bb536d0a:;
	}
	_iter_end_1bb536d0a:;;
	(*(_28420_a))._field_dp-=(_2859_r - 1LL);
	jule::U64 _3085_mask = (static_cast<jule::U64>((1LL << _28432_k)) - 1LLU);;
	for (; (_2859_r < (*(_28420_a))._field_nd); (_2859_r)++) {
		{
			jule::U64 _3129_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			jule::U64 _3139_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3139_dig + '0')));
			(_2869_w)++;
			_2899_n=static_cast<jule::U64>((((_2899_n * 10LLU) + _3129_c) - '0'));
		}
	_iter_next_1bb53a094:;
	}
	_iter_end_1bb53a094:;;
	while ((_2899_n > 0LLU)) {
		{
			jule::U64 _3229_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			if ((_2869_w < 800LL)) {
				(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3229_dig + '0')));
				(_2869_w)++;
			} else if ((_3229_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2899_n=static_cast<jule::U64>((_2899_n * 10LLU));
		}
	_iter_next_1bb53a32a:;
	}
	_iter_end_1bb53a32a:;;
	(*(_28420_a))._field_nd=_2869_w;
	_1d8bbbdac_trim(_28420_a);
}



inline jule::Bool _1d8bbc64e_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3399_i = 0LL;;
	for (; (_3399_i < (*(_33846_s)).len()); (_3399_i)++) {
		{
			if ((_3399_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3399_i] != (*(_33846_s))[_3399_i])) {
				return (_33821_b[_3399_i] < (*(_33846_s))[_3399_i]);;
			};
		}
	_iter_next_1bb53da9d:;
	}
	_iter_end_1bb53da9d:;;
	return false;;
}



inline void _1d8bbc907_leftShift(_1d8bba55e_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3539_delta = _1d8bb9e65_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1d8bbc64e_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_1d8bb9e65_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))) {
		(_3539_delta)--;
	};
	jule::I64 _3589_r = (*(_35219_a))._field_nd;;
	jule::I64 _3599_w = ((*(_35219_a))._field_nd + _3539_delta);;
	jule::U64 _3629_n = static_cast<jule::U64>(0LLU);;
	(_3589_r)--;
	for (; (_3589_r >= 0LL); (_3589_r)--) {
		{
			_3629_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_3589_r]) - '0') << _35231_k);
			jule::U64 _3669_quo = (_3629_n / 10LLU);;
			jule::U64 _3679_rem = (_3629_n - (10LLU * _3669_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3679_rem + '0')));
			} else if ((_3679_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3669_quo;
		}
	_iter_next_1bb540ab1:;
	}
	_iter_end_1bb540ab1:;;
	while ((_3629_n > 0LLU)) {
		{
			jule::U64 _3799_quo = (_3629_n / 10LLU);;
			jule::U64 _3809_rem = (_3629_n - (10LLU * _3799_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3809_rem + '0')));
			} else if ((_3809_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3799_quo;
		}
	_iter_next_1bb541ed0:;
	}
	_iter_end_1bb541ed0:;;
	(*(_35219_a))._field_nd+=_3539_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3539_delta;
	_1d8bbbdac_trim(_35219_a);
}



inline jule::Bool _1d8bbcc7b_shouldRoundUp(_1d8bba55e_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1d8bbe40e_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1d8bbedd2_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _648_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1d8bc0740_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_648_s = __jule_assign_result.__jule_result_arg1;
	});
	return _648_s;;
}



inline jule::Str _1d8bbe7c7_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1d8bbedd2_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _758_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1d8bc0740_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_758_s = __jule_assign_result.__jule_result_arg1;
	});
	return _758_s;;
}



inline jule::Str _1d8bbea91_Itoa(jule::I64 _809_i) {
	return _1d8bbe7c7_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _1d8bbedd2_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _1d8bc019b_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1d8bc0740_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _1079_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _1089_i = _1079_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14913_us = static_cast<jule::U64>(_10133_u);;
		while ((_14913_us >= 100LLU)) {
			{
				jule::U64 _15113_is = ((_14913_us % 100LL) << 1LLU);;
				_14913_us/=100LLU;
				_1089_i-=2LL;
				_1079_a[(_1089_i + 1LL)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15113_is + 1LLU))];
				_1079_a[(_1089_i + 0LL)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15113_is + 0LLU))];
			}
		_iter_next_1bb57db65:;
		}
		_iter_end_1bb57db65:;;
		jule::U64 _1599_is = (_14913_us << 1LLU);;
		(_1089_i)--;
		_1079_a[_1089_i]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_1599_is + 1LLU))];
		if ((_14913_us >= 10LLU)) {
			(_1089_i)--;
			_1079_a[_1089_i]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_1599_is)];
		};
	} else if (_1d8bc019b_isPowerOfTwo(_10141_base)) {
		jule::U64 _1749_shift = (static_cast<jule::U64>(_1d8b61c0e_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _1759_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _1769_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _1759_b)) {
			{
				(_1089_i)--;
				_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _1769_m))];
				_10133_u>>=_1749_shift;
			}
		_iter_next_1bb585be4:;
		}
		_iter_end_1bb585be4:;;
		(_1089_i)--;
		_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))];
	} else {
		jule::U64 _1879_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _1879_b)) {
			{
				(_1089_i)--;
				jule::U64 _19313_q = jule::div(_10133_u,_1879_b);;
				_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19313_q * _1879_b))))];
				_10133_u=_19313_q;
			}
		_iter_next_1bb58790a:;
		}
		_iter_end_1bb58790a:;;
		(_1089_i)--;
		_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))];
	};
	if (_10152_neg) {
		(_1089_i)--;
		_1079_a[_1089_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_1079_a.slice(_1089_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_1079_a.slice(_1089_i));
	return __jule_func_result;;
}



inline jule::Str _1d8bc1c3b_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1bb59ea32:;
			{
				return _1d8bc1235_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1bb59ea98:;
			{
				return _1d8bc14ee_SysUint;;
			}
		}
		else {
			_case_begin_1bb59e4e3:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1bb59bc1b:;
	};
}



inline jule::I64 _1d8bc2005_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1bb5a0b98:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1bb5a0cca:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1bb5a0d41:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1bb5a0da7:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1bb5a0e1d:;
			{
				return _1d8bc0e27_BitSize;;
			}
		}
		else {
			_case_begin_1bb5a07ad:;
			{
				return -1LL;;
			}
		}
		_match_end_1bb5a0747:;
	};
}



inline jule::Str _1d8bc2346_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1bb5a2859:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1bb5a3261:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1bb5a32c7:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1bb5a333d:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_1bb5a2cee:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bb5a2c88:;
	};
}



inline jule::Str _1d8bc2610_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1bb5a35e6:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1bb5a44d7:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1bb5a454d:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1bb5a45b4:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_1bb5a3e87:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bb5a3e21:;
	};
}



inline jule::Str _1d8bc28c9_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1bb5a487d:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1bb5a576e:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_1bb5a521e:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bb5a51a8:;
	};
}



inline jule::Bool _1d8bc3523_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1d8bb4b74_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1d8bc37dc_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1bb5aa631:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1bb5aa048:;
			{
				return 64LLU;;
			}
		}
		_match_end_1bb5a8b3a:;
	};
}



inline jule::I64 _1d8bc3aa6_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1bb5ab3bd:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1bb5ab478:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1bb5ab4de:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1bb5aa90b:;
			{
				return 64LLU;;
			}
		}
		_match_end_1bb5aae7d:;
	};
}



inline jule::I64 _1d8bc3d70_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1bb5ace2a:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1bb5aced5:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1bb5ad04b:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1bb5ac8db:;
			{
				return 64LLU;;
			}
		}
		_match_end_1bb5ac4ce:;
	};
}



inline void _1d8bc3ee6_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1d7c9457e_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1bb5add93:;
				{
					_1d8bc0e27_BitSize=64LLU;
					_1d8bc1235_SysInt=jule::Str::lit("i64", 3);
					_1d8bc14ee_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1bb5ade2b:;
				{
					_1d8bc0e27_BitSize=32LLU;
					_1d8bc1235_SysInt=jule::Str::lit("i32", 3);
					_1d8bc14ee_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_1bb5add1b:;
		};
	};
}



inline void _1d8bc416c_init(void) {
	_1d8bc3ee6_UpdateTarget();
}



inline jule::I64 _1d8bc7ec8_MinI(jule::Str _6113_k) {
	_6113_k=_1d8bc1c3b_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1bb5ad1c2:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1bb5b1082:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1bb5b10e8:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1bb5b115e:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1bb5ad315:;
			{
				return 0LL;;
			}
		}
		_match_end_1bb5ad2b0:;
	};
}



inline jule::I64 _1d8bc82d6_MaxI(jule::Str _7913_k) {
	_7913_k=_1d8bc1c3b_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1bb5b1406:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1bb5b268d:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1bb5b2704:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1bb5b276a:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1bb5b1d1e:;
			{
				return 0LL;;
			}
		}
		_match_end_1bb5b2528:;
	};
}



inline jule::U64 _1d8bc85a0_MaxU(jule::Str _9713_k) {
	_9713_k=_1d8bc1c3b_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1bb5b2a12:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1bb5b3c99:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1bb5b3d10:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1bb5b3d76:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1bb5b342a:;
			{
				return 0LLU;;
			}
		}
		_match_end_1bb5b3b34:;
	};
}



inline jule::F64 _1d8bc87d1_Min(jule::Str _11512_k) {
	_11512_k=_1d8bc1c3b_RealKindOf(_11512_k);
	jule::I64 _1175_i = _1d8bc7ec8_MinI(_11512_k);;
	if ((_1175_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1175_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1bb5b62c9:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1bb5b5c13:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1bb5b56a2:;
			{
				return 0LL;;
			}
		}
		_match_end_1bb5b596b:;
	};
}



inline jule::F64 _1d8bc8a9a_Max(jule::Str _13312_k) {
	_13312_k=_1d8bc1c3b_RealKindOf(_13312_k);
	jule::I64 _1355_i = _1d8bc82d6_MaxI(_13312_k);;
	if ((_1355_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1355_i));;
	};
	jule::U64 _1395_u = _1d8bc85a0_MaxU(_13312_k);;
	if ((_1395_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1395_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1bb5b8342:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1bb5b7c7b:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1bb5b7671:;
			{
				return 0LL;;
			}
		}
		_match_end_1bb5b79b2:;
	};
}



inline jule::Bool _1d8bc901d_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _1d8bc932b_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _1d8bc95e5_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _1d8bc9936_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _1d8bc9c00_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _1d8bc9eb9_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _1d8bca283_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _1d8bca629_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _1d8bca8e3_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _1d8bcabac_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _1d8bcb031_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1bb5bd864:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1bb5bdb72:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1bb5bdde7:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1bb5bde5d:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1bb5bdec4:;
			{
				return _1d8bc901d_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1bb5be03a:;
			{
				return _1d8bc932b_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1bb5be14a:;
			{
				return _1d8bc95e5_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1bb5be1b1:;
			{
				return _1d8bc9936_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1bb5be227:;
			{
				return _1d8bc9c00_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1bb5be28d:;
			{
				return _1d8bc9eb9_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1bb5be315:;
			{
				return _1d8bca283_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1bb5be38c:;
			{
				return _1d8bca629_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1bb5be414:;
			{
				return _1d8bca8e3_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1bb5be48b:;
			{
				return _1d8bcabac_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1bb5be513:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1bb5be58a:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_1bb5bd9c9:;
			{
				return false;;
			}
		}
		_match_end_1bb5b771a:;
	};
}



inline jule::Bool _1d8bcb2ea_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _1d8bcb5b4_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _1d8bcb87d_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _1d8bcbb47_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _1d8bcc0ba_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _1d8bcc384_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _1d8bcc64d_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _1d8bcc917_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _1d8bccc8b_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1bb5c664c:;
			{
				return _1d8bcdce2_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1bb5c69b0:;
			{
				return _1d8bce100_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1bb5c6a37:;
			{
				return _1d8bce100_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1bb5c6c8a:;
			{
				return _1d8bcb2ea_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1bb5c6d12:;
			{
				return _1d8bcb5b4_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1bb5c6d89:;
			{
				return _1d8bcb87d_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1bb5c6e11:;
			{
				return _1d8bcbb47_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1bb5c6edd:;
			{
				return _1d8bcc0ba_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1bb5c7065:;
			{
				return _1d8bcc384_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1bb5c70dc:;
			{
				return _1d8bcc64d_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1bb5c7164:;
			{
				return _1d8bcc917_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1bb5c71db:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bb5c684a:;
			{
				return false;;
			}
		}
		_match_end_1bb5c67c3:;
	};
}



inline jule::Bool _1d8bcdce2_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1d8bce100_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1d8bce3b9_IsInt(jule::Str _4610_k) {
	return (_1d8bcdce2_IsSigInt(_4610_k) || _1d8bce100_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1d8bce70a_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1d8bce9c4_IsNum(jule::Str _5610_k) {
	return (_1d8bce3b9_IsInt(_5610_k) || _1d8bce70a_IsFloat(_5610_k));;
}



inline jule::Bool _1d8bcec8d_IsSigNum(jule::Str _6113_k) {
	return (_1d8bcdce2_IsSigInt(_6113_k) || _1d8bce70a_IsFloat(_6113_k));;
}



inline void _1d8bd90d8_lshiftUnsig(_1d8bd00bd_Const* _59021_c, _1d8bd00bd_Const* _59032_x) {
	jule::U64 _5915_l = _1d8bd29e9_AsU64(_59021_c);;
	jule::U64 _5925_r = _1d8bd29e9_AsU64(_59032_x);;
	_1d8bd32e1_SetU64(_59021_c, static_cast<jule::U64>((_5915_l << _5925_r)));
}



inline void _1d8bd9418_rshiftUnsig(_1d8bd00bd_Const* _59621_c, _1d8bd00bd_Const* _59632_x) {
	jule::U64 _5975_l = _1d8bd29e9_AsU64(_59621_c);;
	jule::U64 _5985_r = _1d8bd29e9_AsU64(_59632_x);;
	_1d8bd32e1_SetU64(_59621_c, static_cast<jule::U64>((_5975_l >> _5985_r)));
}



inline jule::Bool _1ab0c26b9_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_1ab024d7a_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb67cb65:;
		if (it != expr_end) {
			jule::U64 *_33512_op = it;
			{
				if ((_33414_id == (*(_33512_op)))) {
					return true;;
				};
			}
			_iter_next_1bb67cb65:;
			++it;
			goto _iter_begin_1bb67cb65;
		}
		_iter_end_1bb67cb65:;
	};
	return false;;
}



inline jule::Bool _1ab0c29c7_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_1ab0251bb_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb67cec8:;
		if (it != expr_end) {
			jule::U64 *_34512_op = it;
			{
				if ((_34412_id == (*(_34512_op)))) {
					return true;;
				};
			}
			_iter_next_1bb67cec8:;
			++it;
			goto _iter_begin_1bb67cec8;
		}
		_iter_end_1bb67cec8:;
	};
	return false;;
}



inline jule::Bool _1ab0c30d2_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1ab0c339b_IsRawStr(_36410_k)));;
}



inline jule::Bool _1ab0c339b_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1ab0c3665_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1ab0c408e_IsFloat(jule::Str _38012_k) {
	if (_1d7abd93b_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _1d7ac3eb3_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _1d7ac3eb3_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1ab0c4358_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3935_b = _38810_k[0LL];;
	return ((_3935_b == '.') || (('0' <= _3935_b) && (_3935_b <= '9')));;
}



inline jule::Bool _1ab0c48db_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1ab0c4ba5_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1ab0c5238_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1ab024b05_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb685431:;
		if (it != expr_end) {
			jule::I32 *_42012_cr = it;
			{
				if ((_41912_r == (*(_42012_cr)))) {
					return true;;
				};
			}
			_iter_next_1bb685431:;
			++it;
			goto _iter_begin_1bb685431;
		}
		_iter_end_1bb685431:;
	};
	return false;;
}



inline jule::Bool _1ab0c56ab_IsLetter(jule::I32 _42913_r) {
	return _2038679a5_IsLetter(_42913_r);;
}



inline jule::Bool _1ab0c5c3e_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1ab0c6008_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1ab0c62c2_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1ab0c658b_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1bb68915a:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1bb6891d2:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1bb689259:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bb68908e:;
			{
				return false;;
			}
		}
		_match_end_1bb687ee4:;
	};
}



inline jule::Bool _1ab0c6855_IsAssign(jule::U64 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU))) || (_47313_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1ab0c6b1e_IsPostfixOp(jule::U64 _48516_id) {
	{
		auto expr = &(_1ab0bb43d_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb68aa63:;
		if (it != expr_end) {
			jule::U64 *_48612_op = it;
			{
				if ((_48516_id == (*(_48612_op)))) {
					return true;;
				};
			}
			_iter_next_1bb68aa63:;
			++it;
			goto _iter_begin_1bb68aa63;
		}
		_iter_end_1bb68aa63:;
	};
	return false;;
}



inline jule::Bool _1ab0c6dd8_IsAssignOp(jule::U64 _49515_id) {
	if (_1ab0c6b1e_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1ab0bb73a_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb68cd51:;
		if (it != expr_end) {
			jule::U64 *_49912_op = it;
			{
				if ((_49515_id == (*(_49912_op)))) {
					return true;;
				};
			}
			_iter_next_1bb68cd51:;
			++it;
			goto _iter_begin_1bb68cd51;
		}
		_iter_end_1bb68cd51:;
	};
	return false;;
}



inline jule::Ptr<_1ab0c7746_File> _1ab0c8add_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1ab0c7746_File>(_1ab0c7746_File{._field_Path=_5715_path, });;
}



inline _1d7b81cb8_Log _1ab0ca639_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1ab0c7746_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _1d7b81cb8_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_1d7b8222a_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1ab0caa02_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb69781c:;
		if (it != expr_end) {
			jule::I64 _1149_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1149_i] != _11035_prefix[_1149_i])) {
					return false;;
				};
			}
			_iter_next_1bb69781c:;
			++it;
			_1149_i++;
			goto _iter_begin_1bb69781c;
		}
		_iter_end_1bb69781c:;
	};
	return true;;
}



inline jule::Str _1ab0cad76_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1289_b = (*(_12215_txt))[_12232_i];;
	if ((_1289_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1289_b == '+') || (_1289_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1425_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1289_b=(*(_12215_txt))[_12232_i];
			if (((_1289_b != '_') && (!(_1ab0c5c3e_IsDecimal(_1289_b))))) {
				goto _iter_end_1bb699566;
			};
		}
	_iter_next_1bb699566:;
	}
	_iter_end_1bb699566:;;
	if ((_12232_i == _1425_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1ab0cb23e_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1ab0cad76_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1ab0cb5b3_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1bb69c190:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1689_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1689_b == '_') || _1ab0c5c3e_IsDecimal(_1689_b)) {
					_case_begin_1bb69cc84:;
					{
						goto _iter_next_1bb69bc83;
					}
				}
				else if (_1ab0ccebb_isFloatFmtP(_1689_b, _16036_i)) {
					_case_begin_1bb69cd0b:;
					{
						return _1ab0cb23e_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1bb69cbb8:;
					{
						goto _iter_end_1bb69bc83;
					}
				}
				_match_end_1bb69cb52:;
			};
		}
	_iter_next_1bb69bc83:;
	}
	_iter_end_1bb69bc83:;;
	return jule::Str();;
}



inline jule::Str _1ab0cb937_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1ab0cad76_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1ab0cbcab_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1ab0cad76_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1ab0cc240_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2019_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2019_b == 'e') || (_2019_b == 'E')))) {
				__jule_func_result = _1ab0cad76_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2019_b != '_') && (!(_1ab0c5c3e_IsDecimal(_2019_b))))) {
				goto _iter_end_1bb6a0dca;
			};
		}
	_iter_next_1bb6a0dca:;
	}
	_iter_end_1bb6a0dca:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1ab0cc509_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2179_i = 0LL;;
	_julec_label_1bb6a2b57:;
	for (; (_2179_i < (*(_21615_txt)).len()); (_2179_i)++) {
		{
			jule::U8 _2209_b = (*(_21615_txt))[_2179_i];;
			{
				
				if ((_2209_b == '.')) {
					_case_begin_1bb6a365d:;
					{
						__jule_func_result = _1ab0cc240_floatNum(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((_2209_b == '_')) {
					_case_begin_1bb6a36d5:;
					{
						goto _iter_next_1bb6a2be0;
					}
				}
				else if (_1ab0ccb47_isFloatFmtE(_2209_b, _2179_i)) {
					_case_begin_1bb6a375c:;
					{
						__jule_func_result = _1ab0cad76_floatFmtE(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1ab0c5c3e_IsDecimal(_2209_b)))) {
					_case_begin_1bb6a37d4:;
					{
						goto _iter_end_1bb6a2be0;
					}
				}
				_match_end_1bb6a3581:;
			};
		}
	_iter_next_1bb6a2be0:;
	}
	_iter_end_1bb6a2be0:;;
	if ((_2179_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2179_i));
	return __jule_func_result;;
}



inline jule::Str _1ab0cc7c3_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1ab0caa02_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2489_i = 2LL;;
	for (; (_2489_i < (*(_23915_txt)).len()); (_2489_i)++) {
		{
			if ((((*(_23915_txt))[_2489_i] != '_') && (!(_1ab0c6008_IsBinary((*(_23915_txt))[_2489_i]))))) {
				goto _iter_end_1bb6a64eb;
			};
		}
	_iter_next_1bb6a64eb:;
	}
	_iter_end_1bb6a64eb:;;
	if ((_2489_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2489_i));
	return __jule_func_result;;
}



inline jule::Bool _1ab0ccb47_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1ab0ccebb_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1ab0cd340_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1bb6a9059:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2769_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2769_b == '_') || _1ab0c5c3e_IsDecimal(_2769_b)) {
					_case_begin_1bb6a9d90:;
					{
						goto _iter_next_1bb6a9323;
					}
				}
				else if (_1ab0ccebb_isFloatFmtP(_2769_b, _26938_i)) {
					_case_begin_1bb6a9e17:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1bb6a9cc4:;
					{
						goto _iter_end_1bb6a9323;
					}
				}
				_match_end_1bb6a9c5d:;
			};
		}
	_iter_next_1bb6a9323:;
	}
	_iter_end_1bb6a9323:;;
	return false;;
}



inline jule::Bool _1ab0cd6b4_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1bb6ab1c1:;
			{
				goto _case_begin_1bb6ab248;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1bb6ab248:;
			{
				goto _case_begin_1bb6ab2c0;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1bb6ab2c0:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bb6ab0e4:;
			{
				return true;;
			}
		}
		_match_end_1bb6ab028:;
	};
}



inline jule::Bool _1ab0cda38_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1bb6ace3c:;
			{
				goto _case_begin_1bb6aceb4;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1bb6aceb4:;
			{
				goto _case_begin_1bb6ad03b;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1bb6ad03b:;
			{
				goto _case_begin_1bb6ad28e;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1bb6ad28e:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bb6aca30:;
			{
				return true;;
			}
		}
		_match_end_1bb6ac964:;
	};
}



inline jule::Str _1ab0cdeab_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3269_octalStart = 1LL;;
	jule::Bool _3289_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3269_octalStart)++;
		_3289_o=true;
	};
	jule::I64 _3379_i = _3269_octalStart;;
	for (; (_3379_i < (*(_31814_txt)).len()); (_3379_i)++) {
		{
			jule::U8 _3399_b = (*(_31814_txt))[_3379_i];;
			if ((_3399_b == '.')) {
				if (_3289_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1ab0cc240_floatNum(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (_1ab0ccb47_isFloatFmtE(_3399_b, _3379_i)) {
				__jule_func_result = _1ab0cad76_floatFmtE(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (((_3399_b != '_') && (!(_1ab0c62c2_IsOctal(_3399_b))))) {
				goto _iter_end_1bb6b169e;
			};
		}
	_iter_next_1bb6b169e:;
	}
	_iter_end_1bb6b169e:;;
	if ((_3379_i == _3269_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3379_i));
	return __jule_func_result;;
}



inline jule::Str _1ab0ce275_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3699_i = 2LL;;
	_julec_label_1bb6b576e:;
	for (; (_3699_i < (*(_36012_txt)).len()); (_3699_i)++) {
		{
			jule::U8 _3729_b = (*(_36012_txt))[_3699_i];;
			{
				
				if (_1ab0cd6b4_isFloatFmtDotp(_36012_txt, _3699_i)) {
					_case_begin_1bb6b63c9:;
					{
						__jule_func_result = _1ab0cbcab_floatFmtDotp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1ab0cda38_isFloatFmtDotfp(_36012_txt, _3699_i)) {
					_case_begin_1bb6b6451:;
					{
						__jule_func_result = _1ab0cb937_floatFmtDotfp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1ab0ccebb_isFloatFmtP(_3729_b, _3699_i)) {
					_case_begin_1bb6b64c8:;
					{
						__jule_func_result = _1ab0cb23e_floatFmtP(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1ab0cd340_isFloatFmtDotnp(_36012_txt, _3699_i)) {
					_case_begin_1bb6b6550:;
					{
						__jule_func_result = _1ab0cb5b3_floatFmtDotnp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (((_3729_b != '_') && (!(_1ab0c658b_IsHex(_3729_b))))) {
					_case_begin_1bb6b65c7:;
					{
						goto _iter_end_1bb6b59b1;
					}
				}
				_match_end_1bb6b62db:;
			};
		}
	_iter_next_1bb6b59b1:;
	}
	_iter_end_1bb6b59b1:;;
	if ((_3699_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3699_i));
	return __jule_func_result;;
}



inline jule::Str _1ab0ce5e9_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3999_i = 2LL;;
	for (; (_3999_i < _39328_n); (_3999_i)++) {
		{
			if ((!(_1ab0c658b_IsHex((*(_39315_txt))[_3999_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1bb6b8b4b:;
	}
	_iter_end_1bb6b8b4b:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1ab0ce8b3_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1ab0ce5e9_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1ab0ceb7c_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1ab0ce5e9_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1ab0cee46_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1ab0ce5e9_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1ab0d0210_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1ab0c62c2_IsOctal((*(_42616_txt))[1LL]))) || (!(_1ab0c62c2_IsOctal((*(_42616_txt))[2LL])))) || (!(_1ab0c62c2_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1d7b81cb8_Log> _1ab0d5204_Lex(jule::Ptr<_1ab0c7746_File> _80912_f, jule::I64 _80922_mode) {
	if ((_80912_f == nullptr)) {
		return nullptr;;
	};
	_1ab0d0980_lex _8149_lex = _1ab0d0980_lex{._field_mode=_80922_mode, ._field_file=_80912_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1ab0d3796_newLine(&_8149_lex);
	_1ab0d1574_lex(&_8149_lex);
	if ((_8149_lex._field_errors.len() > 0LL)) {
		return _8149_lex._field_errors;;
	};
	(*(_80912_f))._field_Tokens=_8149_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1ab1a1875_FindModuleFile(jule::Slice<jule::Ptr<_202527127_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb74d692:;
		if (it != expr_end) {
			jule::Ptr<_202527127_DirEntry> *_1412_d = it;
			{
				if (((!(_20252b34b_IsDir((*((*(_1412_d))))._field_Stat.ptr()))) && (*((*(_1412_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1bb74d692:;
			++it;
			goto _iter_begin_1bb74d692;
		}
		_iter_end_1bb74d692:;
	};
	return false;;
}



inline jule::Str _1ab1a1b2d_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_202527127_DirEntry>> _2713_dirents = ({
				auto except = static__1d7ae328a_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1bb74e770;
				} jule::Slice<jule::Ptr<_202527127_DirEntry>>(nullptr);});
			});;
			jule::Bool _319_exist = _1ab1a1875_FindModuleFile(&(_2713_dirents));;
			if (_319_exist) {
				return _2527_path;;
			};
			jule::I64 _369_n = _2527_path.len();;
			_2527_path=_1d7ae0d26_Dir(_2527_path);
			if ((_2527_path.len() == _369_n)) {
				goto _iter_end_1bb74e770;
			};
		}
	_iter_next_1bb74e770:;
	}
	_iter_end_1bb74e770:;;
	return jule::Str();;
}



inline jule::Slice<_1d7b81cb8_Log> _1ab1a1de7_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _485_bytes = ({
		auto except = static__202529833_Read(_1d7ae0133_Join(jule::Slice<jule::Str>::make({(*(_4721_path)),jule::Str::lit("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1d7b81cb8_Log>::make({_1d7b81cb8_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _545_s = _1d7ac649e_Trim(_2025de7b6_BytesStr(_485_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_545_s.len() != 0LL)) {
		return jule::Slice<_1d7b81cb8_Log>::make({_1d7b81cb8_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1ab1a2777_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _119_b = _910_ident[0LL];;
		return (('A' <= _119_b) && (_119_b <= 'Z'));;
	};
	jule::I32 _145_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d7a7cbc5_DecodeRuneStr(_910_ident);
		_145_r = __jule_assign_result.__jule_result_arg0;
	});
	return _2038d14ad_IsUpper(_145_r);;
}



inline jule::Bool _1ab1e1e04_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1ab20e196_ToRune(jule::Str _2011_lit) {
	jule::I32 _219_r = static_cast<jule::I32>(0LL);;
	jule::Slice<jule::U8> _225_bytes = _2025de4ec_StrBytes(_2011_lit).slice(1LL, (_2011_lit.len() - 1LL));;
	if (((_225_bytes[0LL] == '\\') && (_225_bytes.len() > 1LL))) {
		jule::I64 _2413_i = 0LL;;
		_219_r=static_cast<jule::I32>(_1ab20ed9a_runeFromEsqSeq(_225_bytes, &(_2413_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d7a7c884_DecodeRune(_225_bytes);
			_219_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _219_r;;
}



inline jule::Str _1ab20e44e_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1ab20e790_ToStr(jule::Str _4710_lit) {
	if ((_4710_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _539_isPure = true;;
	{
		auto expr = &(_4710_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb75a517:;
		if (it != expr_end) {
			jule::U8 *_5412_b = it;
			{
				if ((((*(_5412_b)) >= 128LLU) || ((*(_5412_b)) == '\\'))) {
					_539_isPure=false;
					goto _iter_end_1bb75a517;
				};
			}
			_iter_next_1bb75a517:;
			++it;
			goto _iter_begin_1bb75a517;
		}
		_iter_end_1bb75a517:;
	};
	if (_539_isPure) {
		return _4710_lit.slice(1LL, (_4710_lit.len() - 1LL));;
	};
	jule::Slice<jule::U8> _675_bytes = _2025de4ec_StrBytes(_4710_lit).slice(1LL, (_4710_lit.len() - 1LL));;
	jule::Slice<jule::U8> _689_s = jule::Slice<jule::U8>::alloc(0LL, _675_bytes.len(), 0);;
	jule::I64 _699_i = 0LL;;
	while ((_699_i < _675_bytes.len())) {
		{
			jule::U8 _719_b = _675_bytes[_699_i];;
			if ((_719_b == '\\')) {
				(_689_s).append(_1ab21021e_strEsqSeq(_675_bytes, &(_699_i)));;
			} else {
				jule::I32 _7513_r = 0;;
				jule::I64 _7516_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d7a7c884_DecodeRune(_675_bytes.slice(_699_i));
					_7513_r = __jule_assign_result.__jule_result_arg0;
					_7516_size = __jule_assign_result.__jule_result_arg1;
				});
				_699_i+=_7516_size;
				_689_s=_1d7a7dce7_AppendRune(_689_s, _7513_r);
			};
		}
	_iter_next_1bb75c492:;
	}
	_iter_end_1bb75c492:;;
	{ jule::Slice<jule::U8> &__jule_push_dest = _689_s; __jule_push_dest.push(0LLU); };
	return _2025dea80_StrFromBytes(_689_s.slice(0LL, (_689_s.len() - 1LL)));;
}



inline __jule_tuple_u8__jule_tuple_bool _1ab20ea59_tryBtoaCommonEsq(jule::Slice<jule::U8> _8421_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8421_bytes.len() < 2LL) || (_8421_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8421_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1bb760451:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1bb7604c8:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1bb760550:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1bb7605c7:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1bb76064e:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1bb7606c6:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1bb76074d:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1bb7607c5:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1bb76084c:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1bb7608c4:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1bb76030d:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1ab20ed9a_runeFromEsqSeq(jule::Slice<jule::U8> _11419_bytes, jule::I64* _11439_i) {
	jule::U8 _1155_b = 0;;
	jule::Bool _1158_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1ab20ea59_tryBtoaCommonEsq(_11419_bytes.slice((*(_11439_i))));
		_1155_b = __jule_assign_result.__jule_result_arg0;
		_1158_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11439_i)))++;
	if (_1158_ok) {
		((*(_11439_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_1155_b));;
	};
	{
		auto &_match_expr{ _11419_bytes[(*(_11439_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1bb76460e:;
			{
				;
				jule::I32 _1259_r = static_cast<jule::I32>(({
					auto except = _1d8bacc7c_ParseUint(_2025de7b6_BytesStr(_11419_bytes.slice(((*(_11439_i)) + 1LL), ((*(_11439_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:125:19"));
					(except.result);
				}));;
				(*(_11439_i))+=5LL;
				return _1259_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1bb764e5b:;
			{
				;
				jule::I32 _1309_r = static_cast<jule::I32>(({
					auto except = _1d8bacc7c_ParseUint(_2025de7b6_BytesStr(_11419_bytes.slice(((*(_11439_i)) + 1LL), ((*(_11439_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:130:19"));
					(except.result);
				}));;
				(*(_11439_i))+=9LL;
				return _1309_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1bb764ec2:;
			{
				;
				jule::Slice<jule::U8> _1359_seq = _11419_bytes.slice(((*(_11439_i)) + 1LL), ((*(_11439_i)) + 3LL));;
				(*(_11439_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1d8bacc7c_ParseUint(_2025de7b6_BytesStr(_1359_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:137:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1bb7639c6:;
			{
				;
				jule::Slice<jule::U8> _1409_seq = _11419_bytes.slice((*(_11439_i)), ((*(_11439_i)) + 3LL));;
				(*(_11439_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1d8bacc7c_ParseUint(_2025de7b6_BytesStr(_1409_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:142:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1bb763971:;
	};
}



inline jule::Slice<jule::U8> _1ab21021e_strEsqSeq(jule::Slice<jule::U8> _14614_bytes, jule::I64* _14634_i) {
	jule::I32 _1475_r = _1ab20ed9a_runeFromEsqSeq(_14614_bytes, _14634_i);;
	if ((_1475_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1475_r))});;
	};
	return _2025ded49_BytesFromStr(jule::Str::from_rune(_1475_r));;
}



inline jule::I64 _1ab33dd75_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64 _1141_i) {
	while ((_1141_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _139_r = 0;;
			jule::I64 _1312_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d7a7c884_DecodeRune((*(_1122_bytes)).slice(_1141_i));
				_139_r = __jule_assign_result.__jule_result_arg0;
				_1312_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_139_r == '{')) {
				return _1141_i;;
			};
			_1141_i+=_1312_size;
		}
	_iter_next_1bb78edba:;
	}
	_iter_end_1bb78edba:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1ab33e1e9_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _285_start = (*(_2724_i));;
	jule::I64 _299_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _319_r = 0;;
			jule::I64 _3112_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d7a7c884_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_319_r = __jule_assign_result.__jule_result_arg0;
				_3112_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3112_size;
			{
				auto &_match_expr{ _319_r };
				
				if (_match_expr == '{') {
					_case_begin_1bb79240b:;
					{
						(_299_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1bb7924d8:;
					{
						(_299_braces)--;
						if ((_299_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_285_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1bb791d34:;
			};
		}
	_iter_next_1bb79166e:;
	}
	_iter_end_1bb79166e:;;
	return nullptr;;
}



inline void _1ab33e4d5_FmtByDefault(_1d7ad2eb1_StrBuilder* _4722_buf, jule::Any* _4740_arg) {
	if (((*(_4740_arg)) == nullptr)) {
		_1d7adba8b_WriteStr(_4722_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4740_arg)) };
		
		if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1bb79393a:;
			{
				_1d7adba8b_WriteStr(_4722_buf, _1d8ba7c77_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F32>(&__jule_any_type130))), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bb794122:;
			{
				_1d7adba8b_WriteStr(_4722_buf, _1d8ba7c77_FmtFloat(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F64>(&__jule_any_type5)), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1bb793ad3:;
			{
				_1d7adba8b_WriteStr(_4722_buf, _1d8bbe7c7_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I8>(&__jule_any_type131)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1bb793b49:;
			{
				_1d7adba8b_WriteStr(_4722_buf, _1d8bbe7c7_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I16>(&__jule_any_type132)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bb794254:;
			{
				_1d7adba8b_WriteStr(_4722_buf, _1d8bbe7c7_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1bb7942ba:;
			{
				_1d7adba8b_WriteStr(_4722_buf, _1d8bbe7c7_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I64>(&__jule_any_type1)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1bb794331:;
			{
				_1d7adba8b_WriteStr(_4722_buf, _1d8bbe40e_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U8>(&__jule_any_type129)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1bb794397:;
			{
				_1d7adba8b_WriteStr(_4722_buf, _1d8bbe40e_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U16>(&__jule_any_type133)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1bb79440d:;
			{
				_1d7adba8b_WriteStr(_4722_buf, _1d8bbe40e_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U32>(&__jule_any_type134)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bb794474:;
			{
				_1d7adba8b_WriteStr(_4722_buf, _1d8bbe40e_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U64>(&__jule_any_type2)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bb7944da:;
			{
				_1d7adba8b_WriteStr(_4722_buf, (*(_4740_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bb794551:;
			{
				if ((*(_4740_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_1d7adba8b_WriteStr(_4722_buf, jule::Str::lit("true", 4));
				} else {
					_1d7adba8b_WriteStr(_4722_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1bb79342e:;
			{
				_1d7adba8b_WriteStr(_4722_buf, jule::to_str((*(_4740_arg))));
			}
		}
		_match_end_1bb7927d5:;
	};
}



inline void _1ab33e903_applyFmtByDefault(_1d7ad2eb1_StrBuilder* _8627_buf, jule::I64* _8649_j, jule::Slice<jule::Any> _8657_args) {
	jule::Any _875_arg = _8657_args[(*(_8649_j))];;
	((*(_8649_j)))++;
	_1ab33e4d5_FmtByDefault(_8627_buf, &(_875_arg));
}



inline void _1ab33ed54_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _1d7ad2eb1_StrBuilder* _9436_buf, jule::I64* _9458_j, jule::Slice<jule::Any> _9466_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1ab33e903_applyFmtByDefault(_9436_buf, _9458_j, _9466_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		_1d7adba8b_WriteStr(_9436_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_1d7adb7d3_Write(_9436_buf, (*(_9418_fmt)));
}



inline jule::Slice<jule::U8> _1ab340195_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args) {
	jule::Slice<jule::U8> _1169_fmtBytes = _2025ded49_BytesFromStr(_11511_fmt);;
	if ((_11521_args.len() == 0LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1209_i = _1ab33dd75_findFormatPrefix(&(_1169_fmtBytes), 0LL);;
	if ((_1209_i == -1LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1249_j = 0LL;;
	jule::I64 _1259_last = 0LL;;
	_1d7ad2eb1_StrBuilder _1269_buf = static__1d7ad327a_New(static_cast<jule::I64>(_11511_fmt.len()));;
	for (; (_1209_i != -1LL); _1209_i=static_cast<jule::I64>(_1ab33dd75_findFormatPrefix(&(_1169_fmtBytes), _1209_i))) {
		{
			_1d7adb7d3_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last, _1209_i));
			jule::Slice<jule::U8> _12913_format = _1ab33e1e9_getFormatRange(&(_1209_i), &(_1169_fmtBytes));;
			if ((_12913_format == nullptr)) {
				goto _iter_next_1bb7a0408;
			};
			_1ab33ed54_applyFmt(&(_12913_format), &(_1269_buf), &(_1249_j), _11521_args);
			if ((_1249_j >= _11521_args.len())) {
				_1d7adb7d3_Write(&_1269_buf, _1169_fmtBytes.slice(_1209_i));
				_1259_last=static_cast<jule::I64>(_1169_fmtBytes.len());
				goto _iter_end_1bb7a0408;
			};
			_1259_last=_1209_i;
		}
	_iter_next_1bb7a0408:;
	}
	_iter_end_1bb7a0408:;;
	if ((_1259_last < _1169_fmtBytes.len())) {
		_1d7adb7d3_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last));
	};
	return _1d7adcd34_Buf(&_1269_buf);;
}



inline jule::Str _1ab3421b9_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	jule::Slice<jule::U8> _329_bytes = _1ab340195_Format(_3111_fmt, _3121_args);;
	{ jule::Slice<jule::U8> &__jule_push_dest = _329_bytes; __jule_push_dest.push(0LLU); };
	return _2025dea80_StrFromBytes(_329_bytes.slice(0LL, (_329_bytes.len() - 1LL)));;
}



inline jule::Bool _1ab1230cc_parameterUsesGenerics(jule::Ptr<_1ab11ed54_ParamIns>* _38431_p, jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>>* _38446_generics) {
	if (_1ab11ba43_IsSelf((*((*(_38431_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1ab276274_kindUsesGenerics(&((*((*(_38431_p))))._field_Kind), _38446_generics);;
}



inline jule::Ptr<_1ab262bde_TypeSymbol> _1ab12582c_buildType(jule::Ptr<_1ab0d7448_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab262bde_TypeSymbol>(_1ab262bde_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1ab22b36c_Value> _1ab125b3a_buildExpr(jule::Ptr<_1ab0db77c_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab125e04_buildTypeAlias(jule::Ptr<_1ab0edcab_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1ab259c2a_TypeAlias>(_1ab259c2a_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*(_11223_decl))._field_Public, ._field_Binded=(*(_11223_decl))._field_Binded, ._field_Token=(*(_11223_decl))._field_Token, ._field_Ident=(*(_11223_decl))._field_Ident, ._field_Kind=_1ab12582c_buildType((*(_11223_decl))._field_Kind), });;
}



inline jule::Ptr<_1ab105147_Field> _1ab126245_buildField(jule::Ptr<_1ab102584_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1ab105147_Field>(_1ab105147_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*(_12319_decl))._field_Public, ._field_Mutable=(*(_12319_decl))._field_Mutable, ._field_Ident=(*(_12319_decl))._field_Ident, ._field_Kind=_1ab12582c_buildType((*(_12319_decl))._field_Kind), ._field_Default=(*(_12319_decl))._field_Default});;
}



inline jule::Slice<jule::Ptr<_1ab105147_Field>> _1ab12650e_buildFields(jule::Slice<jule::Ptr<_1ab102584_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1ab105147_Field>> _1359_fields = jule::Slice<jule::Ptr<_1ab105147_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb982c3:;
		if (it != expr_end) {
			jule::Ptr<_1ab102584_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab105147_Field>> &__jule_push_dest = _1359_fields; __jule_push_dest.push(_1ab126245_buildField(_13617_decl)); };
			}
			_iter_next_1bbb982c3:;
			++it;
			goto _iter_begin_1bbb982c3;
		}
		_iter_end_1bbb982c3:;
	};
	return _1359_fields;;
}



inline jule::Ptr<_1ab10803a_Struct> _1ab1267c8_buildStruct(jule::Ptr<_1ab102e7a_StructDecl> _14220_decl) {
	return jule::new_ptr<_1ab10803a_Struct>(_1ab10803a_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*(_14220_decl))._field_Ident, ._field_Fields=_1ab12650e_buildFields(&((*(_14220_decl))._field_Fields)), ._field_Public=(*(_14220_decl))._field_Public, ._field_Binded=(*(_14220_decl))._field_Binded, ._field_Directives=(*(_14220_decl))._field_Directives, ._field_Generics=(*(_14220_decl))._field_Generics, });;
}



inline jule::Ptr<_1ab11b427_Param> _1ab126a92_buildParam(jule::Ptr<_1ab0e7ba6_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1ab11b427_Param>(_1ab11b427_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*(_15419_decl))._field_Mutable, ._field_Variadic=(*(_15419_decl))._field_Variadic, ._field_Reference=(*(_15419_decl))._field_Reference, ._field_Kind=_1ab12582c_buildType((*(_15419_decl))._field_Kind), ._field_Ident=(*(_15419_decl))._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1ab11b427_Param>> _1ab126e38_buildParams(jule::Slice<jule::Ptr<_1ab0e7ba6_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1ab11b427_Param>> _1669_params = jule::Slice<jule::Ptr<_1ab11b427_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb9c1c8:;
		if (it != expr_end) {
			jule::Ptr<_1ab0e7ba6_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab11b427_Param>> &__jule_push_dest = _1669_params; __jule_push_dest.push(_1ab126a92_buildParam(_16717_decl)); };
			}
			_iter_next_1bbb9c1c8:;
			++it;
			goto _iter_begin_1bbb9c1c8;
		}
		_iter_end_1bbb9c1c8:;
	};
	return _1669_params;;
}



inline jule::Ptr<_1ab11ab96_RetType> _1ab127202_buildRetType(jule::Ptr<_1ab0da33b_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*(_17321_decl))._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab11ab96_RetType>(_1ab11ab96_RetType{._field_Kind=_1ab12582c_buildType((*(_17321_decl))._field_Kind), ._field_Idents=(*(_17321_decl))._field_Idents});;
}



inline jule::Ptr<_1ab11cdeb_Fn> _1ab1274bb_buildFunc(jule::Ptr<_1ab0e9108_FnDecl> _18318_decl) {
	return jule::new_ptr<_1ab11cdeb_Fn>(_1ab11cdeb_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*(_18318_decl))._field_Global, ._field_Unsafety=(*(_18318_decl))._field_Unsafety, ._field_Public=(*(_18318_decl))._field_Public, ._field_Binded=(*(_18318_decl))._field_Binded, ._field_Statically=(*(_18318_decl))._field_Statically, ._field_Exceptional=(*(_18318_decl))._field_Exceptional, ._field_Ident=(*(_18318_decl))._field_Ident, ._field_Directives=(*(_18318_decl))._field_Directives, ._field_Scope=(*(_18318_decl))._field_Scope, ._field_Generics=(*(_18318_decl))._field_Generics, ._field_Result=_1ab127202_buildRetType((*(_18318_decl))._field_Result), ._field_Params=_1ab126e38_buildParams(&((*(_18318_decl))._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1ab11cdeb_Fn>> _1ab127785_buildMethods(jule::Slice<jule::Ptr<_1ab0e9108_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1ab11cdeb_Fn>> _2029_methods = jule::Slice<jule::Ptr<_1ab11cdeb_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbba2123:;
		if (it != expr_end) {
			jule::Ptr<_1ab0e9108_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab11cdeb_Fn>> &__jule_push_dest = _2029_methods; __jule_push_dest.push(_1ab1274bb_buildFunc(_20317_decl)); };
			}
			_iter_next_1bbba2123:;
			++it;
			goto _iter_begin_1bbba2123;
		}
		_iter_end_1bbba2123:;
	};
	return _2029_methods;;
}



inline jule::Slice<jule::Ptr<_1ab262bde_TypeSymbol>> _1ab127a4e_buildTraitInherits(jule::Slice<jule::Ptr<_1ab0d7448_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1ab262bde_TypeSymbol>> _2109_symbols = jule::Slice<jule::Ptr<_1ab262bde_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbba2d05:;
		if (it != expr_end) {
			jule::Ptr<_1ab0d7448_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab262bde_TypeSymbol>> &__jule_push_dest = _2109_symbols; __jule_push_dest.push(_1ab12582c_buildType(_21117_it)); };
			}
			_iter_next_1bbba2d05:;
			++it;
			goto _iter_begin_1bbba2d05;
		}
		_iter_end_1bbba2d05:;
	};
	return _2109_symbols;;
}



inline jule::Ptr<_1ab131195_Trait> _1ab127d18_buildTrait(jule::Ptr<_1ab1036b7_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1ab131195_Trait>(_1ab131195_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*(_21719_decl))._field_Ident, ._field_Public=(*(_21719_decl))._field_Public, ._field_Inherits=_1ab127a4e_buildTraitInherits(&((*(_21719_decl))._field_Inherits)), ._field_Methods=_1ab127785_buildMethods(&((*(_21719_decl))._field_Methods)), });;
}



inline jule::Ptr<_1ab132d23_EnumItem> _1ab1280d2_buildEnumItem(jule::Ptr<_1ab10076e_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1ab132d23_EnumItem>(_1ab132d23_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*(_22722_decl))._field_Ident, ._field_Value=_1ab125b3a_buildExpr((*(_22722_decl))._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1ab132d23_EnumItem>> _1ab12839b_buildEnumItems(jule::Slice<jule::Ptr<_1ab10076e_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1ab132d23_EnumItem>> _2369_items = jule::Slice<jule::Ptr<_1ab132d23_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbba626a:;
		if (it != expr_end) {
			jule::Ptr<_1ab10076e_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab132d23_EnumItem>> &__jule_push_dest = _2369_items; __jule_push_dest.push(_1ab1280d2_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1bbba626a:;
			++it;
			goto _iter_begin_1bbba626a;
		}
		_iter_end_1bbba626a:;
	};
	return _2369_items;;
}



inline jule::Ptr<_1ab133890_Enum> _1ab12881e_buildEnum(jule::Ptr<_1ab101330_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1ab133890_Enum>(_1ab133890_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*(_24318_decl))._field_Public, ._field_Ident=(*(_24318_decl))._field_Ident, ._field_Kind=_1ab12582c_buildType((*(_24318_decl))._field_Kind), ._field_Items=_1ab12839b_buildEnumItems(&((*(_24318_decl))._field_Items))});;
}



inline jule::Ptr<_1ab1349c3_TypeEnumItem> _1ab128ad8_buildTypeEnumItem(jule::Ptr<_1ab101b5a_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1ab1349c3_TypeEnumItem>(_1ab1349c3_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*(_25326_decl))._field_Ident, ._field_Kind=_1ab12582c_buildType((*(_25326_decl))._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1ab1349c3_TypeEnumItem>> _1ab128da2_buildTypeEnumItems(jule::Slice<jule::Ptr<_1ab101b5a_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1ab1349c3_TypeEnumItem>> _2629_items = jule::Slice<jule::Ptr<_1ab1349c3_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbba93b1:;
		if (it != expr_end) {
			jule::Ptr<_1ab101b5a_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab1349c3_TypeEnumItem>> &__jule_push_dest = _2629_items; __jule_push_dest.push(_1ab128ad8_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1bbba93b1:;
			++it;
			goto _iter_begin_1bbba93b1;
		}
		_iter_end_1bbba93b1:;
	};
	return _2629_items;;
}



inline jule::Ptr<_1ab13509a_TypeEnum> _1ab12916b_buildTypeEnum(jule::Ptr<_1ab1022ba_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1ab13509a_TypeEnum>(_1ab13509a_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*(_26922_decl))._field_Public, ._field_Ident=(*(_26922_decl))._field_Ident, ._field_Items=_1ab128da2_buildTypeEnumItems(&((*(_26922_decl))._field_Items))});;
}



inline jule::Ptr<_1ab1c7a66_Var> _1ab129435_buildVar(jule::Ptr<_1ab0ea1d6_VarDecl> _27817_decl) {
	return jule::new_ptr<_1ab1c7a66_Var>(_1ab1c7a66_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*(_27817_decl))._field_Ident, ._field_Binded=(*(_27817_decl))._field_Binded, ._field_Constant=(*(_27817_decl))._field_Constant, ._field_Mutable=(*(_27817_decl))._field_Mutable, ._field_Public=(*(_27817_decl))._field_Public, ._field_Statically=(*(_27817_decl))._field_Statically, ._field_Reference=(*(_27817_decl))._field_Reference, ._field_Kind=_1ab12582c_buildType((*(_27817_decl))._field_Kind), ._field_Value=_1ab125b3a_buildExpr((*(_27817_decl))._field_Expr), ._field_Refers=static__1ab124298_new(), ._field_Directives=(*(_27817_decl))._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1ab1c7a66_Var>> _1ab1296ee_buildVars(jule::Slice<jule::Ptr<_1ab0ea1d6_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1ab1c7a66_Var>> _2969_vars = jule::Slice<jule::Ptr<_1ab1c7a66_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbbadaad:;
		if (it != expr_end) {
			jule::Ptr<_1ab0ea1d6_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab1c7a66_Var>> &__jule_push_dest = _2969_vars; __jule_push_dest.push(_1ab129435_buildVar(_29717_decl)); };
			}
			_iter_next_1bbbadaad:;
			++it;
			goto _iter_begin_1bbbadaad;
		}
		_iter_end_1bbbadaad:;
	};
	return _2969_vars;;
}



inline jule::Ptr<_1ab15d37b_Impl> _1ab1299b8_buildImpl(jule::Ptr<_1ab103d27_Impl> _30318_decl) {
	return jule::new_ptr<_1ab15d37b_Impl>(_1ab15d37b_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*(_30318_decl))._field_Dest, ._field_Methods=_1ab127785_buildMethods(&((*(_30318_decl))._field_Methods)), ._field_Statics=_1ab1296ee_buildVars((*(_30318_decl))._field_Statics)});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab158d6b_buildAsComptimeMethodData(jule::Ptr<_1ab120d00_FnIns>* _141635_f) {
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>((*(_141635_f)), 1)}), });;
}



inline jule::Ptr<_1ab184bdd_ImportInfo> _1ab159179_findComptimePackage(jule::Ptr<_1ab1a567b_Sema>* _142429_s) {
	return _1ab1a5b21_SelectPackage((*(_142429_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_1ab184bdd_ImportInfo>)>([=](jule::Ptr<_1ab184bdd_ImportInfo> _142528_pkg) mutable -> jule::Bool {
		return (*(_142528_pkg))._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab1594ed_buildComptimeTypeInfoData(jule::Ptr<_1ab1a567b_Sema>* _143035_s, jule::Ptr<_1ab25aa1c_TypeKind>* _143050_t) {
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_1ab1a4eb6_pushComptimeTypeInfo((*((*(_143035_s))))._field_meta.ptr(), _143050_t), 15)}), });;
}



inline jule::Ptr<_1ab22a228_Data> _1ab15972e_buildComptimeValue(jule::Ptr<_1ab22a228_Data>* _143828_d) {
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab153283_comptimeValue>(_1ab153283_comptimeValue{._field_data=(*(_143828_d))}), 16)}), });;
}



inline jule::Bool _1ab15c6ee_matchConstraint(jule::Str* _14221_c, jule::Ptr<_1ab25aa1c_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_1bbd60600:;
			{
				jule::Ptr<_1ab2635e6_Prim> _1459_prim = _1ab25d16d_Prim((*(_14234_g)).ptr());;
				if ((_1459_prim == nullptr)) {
					return false;;
				};
				return _1d8bcec8d_IsSigNum((*(_1459_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_1bbd6632b:;
			{
				jule::Ptr<_1ab2635e6_Prim> _1519_prim = _1ab25d16d_Prim((*(_14234_g)).ptr());;
				if ((_1519_prim == nullptr)) {
					return false;;
				};
				return _1d8bce100_IsUnsigInt((*(_1519_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_1bbd66392:;
			{
				jule::Ptr<_1ab2635e6_Prim> _1579_prim = _1ab25d16d_Prim((*(_14234_g)).ptr());;
				if ((_1579_prim == nullptr)) {
					return false;;
				};
				return _1d8bce70a_IsFloat((*(_1579_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_1bbd66507:;
			{
				jule::Ptr<_1ab2635e6_Prim> _1639_prim = _1ab25d16d_Prim((*(_14234_g)).ptr());;
				if ((_1639_prim == nullptr)) {
					return false;;
				};
				return _1d8bce9c4_IsNum((*(_1639_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_1bbd6656d:;
			{
				return _1ab25c39d_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_1bbd665d4:;
			{
				return (!(_1ab25c39d_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_1bbd6664a:;
			{
				return _1ab25c117_Comparable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_1bbd6675a:;
			{
				return _1ab25c634_Ordered((*(_14234_g)).ptr());;
			}
		}
		else {
			_case_begin_1bbd651e8:;
			{
				return false;;
			}
		}
		_match_end_1bbd65193:;
	};
}



inline jule::Bool _1ab15ca0c_isBuiltinConstraint(jule::Str* _18125_ident) {
	{
		auto expr = &(_1ab15a9e9_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd6b980:;
		if (it != expr_end) {
			jule::Str *_18212_bc = it;
			{
				if (((*(_18125_ident)) == (*(_18212_bc)))) {
					return true;;
				};
			}
			_iter_next_1bbd6b980:;
			++it;
			goto _iter_begin_1bbd6b980;
		}
		_iter_end_1bbd6b980:;
	};
	return false;;
}



inline jule::Ptr<_1ab16aab4_scopeChecker> _1ab16058c_newScopeCheckerBase(jule::Ptr<_1ab1a567b_Sema>* _5829_s, jule::Ptr<_1ab120d00_FnIns> _5843_owner) {
	return jule::new_ptr<_1ab16aab4_scopeChecker>(_1ab16aab4_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1ab224d9e_SymbolTable>(), });;
}



inline jule::Ptr<_1ab16aab4_scopeChecker> _1ab160955_newScopeChecker(jule::Ptr<_1ab1a567b_Sema>* _6625_s, jule::Ptr<_1ab120d00_FnIns> _6639_owner) {
	jule::Ptr<_1ab16aab4_scopeChecker> _679_base = _1ab16058c_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_679_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ab16961d_scopeLabel>>>(nullptr);
	(*(_679_base))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ab169ba1_scopeGoto>>>(nullptr);
	return _679_base;;
}



inline jule::Ptr<_1ab16961d_scopeLabel> _1ab160cc9_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1ab16aab4_scopeChecker> _7637_scope) {
	jule::Ptr<_1ab16961d_scopeLabel> _779_label = _1ab16e5bd_findLabelScope(_7637_scope, _7621_ident);;
	while ((_779_label == nullptr)) {
		{
			if ((((*(_7637_scope))._field_parent == nullptr) || ((*(_7637_scope))._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*(_7637_scope))._field_parent;
			_779_label=_1ab16e5bd_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1bbd84ea4:;
	}
	_iter_end_1bbd84ea4:;;
	return _779_label;;
}



inline jule::Bool _1ab161192_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1ab1637b0_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bbd86945:;
			{
				jule::Ptr<_1ab112187_FnCallExprModel> _939_fcem = _9021_Model.cast_ptr<_1ab112187_FnCallExprModel>(&__jule_any_type34);;
				if (((*(_939_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bbd869ab:;
			{
				jule::Ptr<_1ab22a228_Data> _989_d = _9021_Model.cast_ptr<_1ab22a228_Data>(&__jule_any_type24);;
				return _1ab161192_modelIsGotoScope((*(_989_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1bbd868e0:;
	};
	return false;;
}



inline jule::Bool _1ab161516_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1ab1637b0_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bbd8867d:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1ab1637b0_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bbd886e4:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1ab1646e5_InfIter>(&__jule_any_type36)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bbd8876b:;
			{
				jule::Ptr<_1ab1655e7_RangeIter> _1119_it = (*(_10421_stmt)).cast_ptr<_1ab1655e7_RangeIter>(&__jule_any_type40);;
				return (((*(_1119_it))._field_Scope == (*(_10434_sc))) || _1ab161192_modelIsGotoScope((*((*(_1119_it))._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1bbd887e3:;
			{
				jule::Ptr<_1ab164b9b_WhileIter> _1149_it = (*(_10421_stmt)).cast_ptr<_1ab164b9b_WhileIter>(&__jule_any_type38);;
				return ((((*(_1149_it))._field_Scope == (*(_10434_sc))) || _1ab161192_modelIsGotoScope((*(_1149_it))._field_Expr, _10434_sc)) || _1ab161192_modelIsGotoScope((*(_1149_it))._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bbd88a13:;
			{
				jule::Ptr<_1ab1678e6_Match> _1199_m = (*(_10421_stmt)).cast_ptr<_1ab1678e6_Match>(&__jule_any_type47);;
				{
					auto expr = &((*(_1199_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbd8b384:;
					if (it != expr_end) {
						jule::Ptr<_1ab16852e_Case> *_12016_c = it;
						{
							if (((*((*(_12016_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*((*(_12016_c))))._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bbd8d50c:;
								if (it != expr_end) {
									jule::Ptr<_1ab22a228_Data> *_12420_expr = it;
									{
										if (_1ab161192_modelIsGotoScope((*((*(_12420_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1bbd8d50c:;
									++it;
									goto _iter_begin_1bbd8d50c;
								}
								_iter_end_1bbd8d50c:;
							};
						}
						_iter_next_1bbd8b384:;
						++it;
						goto _iter_begin_1bbd8b384;
					}
					_iter_end_1bbd8b384:;
				};
				return (((*(_1199_m))._field_Default != nullptr) && ((*((*(_1199_m))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bbd88a8a:;
			{
				jule::Ptr<_1ab1643e8_Conditional> _1329_c = (*(_10421_stmt)).cast_ptr<_1ab1643e8_Conditional>(&__jule_any_type35);;
				{
					auto expr = &((*(_1329_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbd8cac2:;
					if (it != expr_end) {
						jule::Ptr<_1ab163bcd_If> *_13316_elif = it;
						{
							if ((((*((*(_13316_elif))))._field_Scope == (*(_10434_sc))) || _1ab161192_modelIsGotoScope((*((*(_13316_elif))))._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1bbd8cac2:;
						++it;
						goto _iter_begin_1bbd8cac2;
					}
					_iter_end_1bbd8cac2:;
				};
				return (((*(_1329_c))._field_Default != nullptr) && ((*((*(_1329_c))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bbd88b12:;
			{
				jule::Ptr<_1ab22a228_Data> _1409_d = (*(_10421_stmt)).cast_ptr<_1ab22a228_Data>(&__jule_any_type24);;
				return _1ab161192_modelIsGotoScope((*(_1409_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1bbd7ce7a:;
			{
				return false;;
			}
		}
		_match_end_1bbd8831a:;
	};
}



inline jule::I64 _1ab16188a_countMatchType(jule::Ptr<_1ab1678e6_Match>* _14720_m, jule::Ptr<_1ab25aa1c_TypeKind>* _14732_t) {
	jule::I64 _1489_n = 0LL;;
	jule::Str _1495_kind = _1ab25add5_Str((*(_14732_t)).ptr());;
	_julec_label_1bbd92841:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd92522:;
		if (it != expr_end) {
			jule::Ptr<_1ab16852e_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1bbd92522;
				};
				{
					auto expr = &((*((*(_15112_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbd93677:;
					if (it != expr_end) {
						jule::Ptr<_1ab22a228_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1bbd92522;
							};
							if ((_1495_kind == _1ab25add5_Str((*((*(_15616_expr))))._field_Model.cast_ptr<_1ab25aa1c_TypeKind>(&__jule_any_type83).ptr()))) {
								(_1489_n)++;
							};
						}
						_iter_next_1bbd93677:;
						++it;
						goto _iter_begin_1bbd93677;
					}
					_iter_end_1bbd93677:;
				};
			}
			_iter_next_1bbd92522:;
			++it;
			goto _iter_begin_1bbd92522;
		}
		_iter_end_1bbd92522:;
	};
	return _1489_n;;
}



inline jule::Slice<jule::Ptr<_1ab22a228_Data>> _1ab161b54_getDatasFromTupleData(jule::Ptr<_1ab22a228_Data>* _17131_d) {
	if ((_1ab25ee94_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1bbd97b43:;
				{
					return (*((*((*(_17131_d))))._field_Model.cast_ptr<_1ab1158a5_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
				}
			}
			else {
				_case_begin_1bbd95602:;
				{
					jule::Ptr<_1ab2686d9_Tuple> _17717_t = _1ab25ee94_Tup((*((*(_17131_d))))._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1ab22a228_Data>> _17817_r = jule::Slice<jule::Ptr<_1ab22a228_Data>>::alloc(0LL, (*(_17717_t))._field_Types.len());;
					{
						auto expr = &((*(_17717_t))._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bbd96504:;
						if (it != expr_end) {
							jule::Ptr<_1ab25aa1c_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1ab22a228_Data>> &__jule_push_dest = _17817_r; __jule_push_dest.push(jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1bbd96504:;
							++it;
							goto _iter_begin_1bbd96504;
						}
						_iter_end_1bbd96504:;
					};
					return _17817_r;;
				}
			}
			_match_end_1bbd9559c:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1ab22a228_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1ab162517_checkMut(jule::Ptr<_1ab1a567b_Sema>* _20618_s, jule::Ptr<_1ab22a228_Data>* _20629_left, jule::Ptr<_1ab22a228_Data> _20646_right, jule::Ptr<_1ab0c1e7c_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1bbd9ab02:;
			{
				_1ab1a82b6_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*(_20646_right))._field_Mutable))) && _1ab25c39d_Mutable((*(_20646_right))._field_Kind.ptr()))) {
			_case_begin_1bbd9ab79:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1ab25e6e1_Struct((*(_20646_right))._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1ab1a82b6_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_20646_right))._field_Kind.ptr()), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bbd9aa36:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bbd9a97b:;
	};
}



inline jule::Bool _1ab162a01_checkAssign(jule::Ptr<_1ab1a567b_Sema>* _22521_s, jule::Ptr<_1ab22a228_Data>* _22536_left, jule::Ptr<_1ab22a228_Data> _22553_right, jule::Ptr<_1ab0c1e7c_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab120d00_FnIns> _2265_f = _1ab25e45a_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2265_f != nullptr) && ((*(_2265_f))._field_Decl != nullptr)) && (*((*(_2265_f))._field_Decl))._field_Global)) {
		_1ab1a82b6_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1ab22aaec_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1bbda10e1:;
			{
				_1ab1a82b6_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1ab1a8629_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1bbda1168:;
			{
				_1ab1a82b6_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1ab162517_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1bbda11e0:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bbda1025:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bbda0695:;
	};
}



inline jule::Bool _1ab162cba_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1bbda1432:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1ab0e5de6_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1bbda3610:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bbda1883:;
			{
				return false;;
			}
		}
		_match_end_1bbda3258:;
	};
}



inline jule::Bool _1ab163084_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type46) {
			_case_begin_1bbda3b2c:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bbda4457:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1ab22a228_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1bbda5645:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1bbda55ce:;
						{
							return false;;
						}
					}
					_match_end_1bbda5579:;
				};
			}
		}
		else {
			_case_begin_1bbda4204:;
			{
				return false;;
			}
		}
		_match_end_1bbda419e:;
	};
}



inline jule::Bool _1ab16334d_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bbda4ea2:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bbda5799:;
			{
				return false;;
			}
		}
		_match_end_1bbda4b61:;
	};
}



inline jule::U64 _1ab17cb81_removeEqFromOp(jule::U64 _213819_op) {
	{
		auto &_match_expr{ _213819_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1bbda5c94:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1bbda6822:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1bbda6888:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1bbda69a9:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1bbda6a20:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1bbda6a86:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1bbda6b0d:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1bbda6b85:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1bbda6c51:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1bbda6cb7:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1bbda6514:;
			{
				return _213819_op;;
			}
		}
		_match_end_1bbda649d:;
	};
}



inline jule::Ptr<_1ab1c7a66_Var> _1ab1821c4_findVarInPackage(jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc067eab:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1ab1c7a66_Var> _4813_v = _1ab225784_FindVar(_4717_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_4813_v != nullptr)) {
					return _4813_v;;
				};
			}
			_iter_next_1bc067eab:;
			++it;
			goto _iter_begin_1bc067eab;
		}
		_iter_end_1bc067eab:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab182647_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc069397:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1ab259c2a_TypeAlias> _6013_ta = _1ab225b80_FindTypeAlias(_5917_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_6013_ta != nullptr)) {
					return _6013_ta;;
				};
			}
			_iter_next_1bc069397:;
			++it;
			goto _iter_begin_1bc069397;
		}
		_iter_end_1bc069397:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab10803a_Struct> _1ab182a76_findStructInPackage(jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc06a783:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1ab10803a_Struct> _7213_s = _1ab22607b_FindStruct(_7117_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_7213_s != nullptr)) {
					return _7213_s;;
				};
			}
			_iter_next_1bc06a783:;
			++it;
			goto _iter_begin_1bc06a783;
		}
		_iter_end_1bc06a783:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab11cdeb_Fn> _1ab18302c_findFnInPackage(jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc06bb6e:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1ab11cdeb_Fn> _8413_f = _1ab226477_FindFn(_8317_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_8413_f != nullptr)) {
					return _8413_f;;
				};
			}
			_iter_next_1bc06bb6e:;
			++it;
			goto _iter_begin_1bc06bb6e;
		}
		_iter_end_1bc06bb6e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab131195_Trait> _1ab18336d_findTraitInPackage(jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc06c268:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1ab131195_Trait> _9613_t = _1ab2267b8_FindTrait(_9517_f.ptr(), (*(_9452_ident)));;
				if ((_9613_t != nullptr)) {
					return _9613_t;;
				};
			}
			_iter_next_1bc06c268:;
			++it;
			goto _iter_begin_1bc06c268;
		}
		_iter_end_1bc06c268:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab133890_Enum> _1ab1836e2_findEnumInPackage(jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc06e028:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1ab133890_Enum> _10813_e = _1ab226b09_FindEnum(_10717_f.ptr(), (*(_10651_ident)));;
				if ((_10813_e != nullptr)) {
					return _10813_e;;
				};
			}
			_iter_next_1bc06e028:;
			++it;
			goto _iter_begin_1bc06e028;
		}
		_iter_end_1bc06e028:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab13509a_TypeEnum> _1ab183a66_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc070227:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1ab13509a_TypeEnum> _12013_e = _1ab226e4a_FindTypeEnum(_11917_f.ptr(), (*(_11855_ident)));;
				if ((_12013_e != nullptr)) {
					return _12013_e;;
				};
			}
			_iter_next_1bc070227:;
			++it;
			goto _iter_begin_1bc070227;
		}
		_iter_end_1bc070227:;
	};
	return nullptr;;
}



inline jule::Any _1ab1840a5_defByIdentPackage(jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc071668:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _13017_file = *it;
			{
				jule::Any _13113_def = _1ab227e18_defByIdent(_13017_file.ptr(), _12951_ident, _12963_binded);;
				if ((_13113_def != nullptr)) {
					return _13113_def;;
				};
			}
			_iter_next_1bc071668:;
			++it;
			goto _iter_begin_1bc071668;
		}
		_iter_end_1bc071668:;
	};
	return nullptr;;
}



inline jule::Bool _1ab18a0de_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _1d7abd93b_HasPrefix((*(_35518_f)), _1d7ae0133_Join(jule::Slice<jule::Str>::make({_1d7c936d2_PathStdlib,_35526_p})));;
}



inline jule::Bool _1ab1a2d1b_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bc08215c:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bc0821c3:;
			{
				jule::Ptr<_1ab114c28_StructSubIdentExprModel> _1813_model = (*(_1328_m)).cast_ptr<_1ab114c28_StructSubIdentExprModel>(&__jule_any_type97);;
				return _1ab1a2d1b_isValidModelForRef(&((*((*(_1813_model))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bc082239:;
			{
				jule::Ptr<_1ab114387_TraitSubIdentExprModel> _2113_model = (*(_1328_m)).cast_ptr<_1ab114387_TraitSubIdentExprModel>(&__jule_any_type96);;
				return _1ab1a2d1b_isValidModelForRef(&((*(_2113_model))._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bc0822b1:;
			{
				jule::Ptr<_1ab110581_UnaryExprModel> _2413_unary = (*(_1328_m)).cast_ptr<_1ab110581_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_2413_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1ab25d68a_Ptr((*((*(_2413_unary))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1ab25d404_Sptr((*((*(_2413_unary))._field_Expr))._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1ab1a2d1b_isValidModelForRef(&((*((*(_2413_unary))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bc08249d:;
			{
				jule::Ptr<_1ab112a17_IndexingExprModel> _3813_indexing = (*(_1328_m)).cast_ptr<_1ab112a17_IndexingExprModel>(&__jule_any_type45);;
				return _1ab1a2d1b_isValidModelForRef(&((*((*(_3813_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1bc0820e6:;
			{
				return false;;
			}
		}
		_match_end_1bc081b84:;
	};
}



inline _1d7b81cb8_Log _1ab1a3349_compilerErr(jule::Ptr<_1ab0c1e7c_Token>* _4517_token, jule::Bool _4532_line, jule::Str _4544_fmt, jule::Slice<jule::Any> _4557_args) {
	_1d7b81cb8_Log _469_log = _1d7b81cb8_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4517_token))))._field_Row, ._field_Column=(*((*(_4517_token))))._field_Column, ._field_Path=(*((*((*(_4517_token))))._field_File))._field_Path, ._field_Text=_1d7b8222a_Logf(_4544_fmt, _4557_args), };;
	if (_4532_line) {
		_469_log._field_Line=_1ab0c8725_GetRow((*((*(_4517_token))))._field_File.ptr(), (*((*(_4517_token))))._field_Row);
	};
	return _469_log;;
}



inline jule::Bool _1ab1a36bd_impIsLookupable(jule::Ptr<_1ab184bdd_ImportInfo>* _5921_i, jule::Str* _5938_ident) {
	if ((*((*(_5921_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5921_i))))._field_ImportAll))) {
		if (((*((*(_5921_i))))._field_Selected.len() > 0LL)) {
			return _1ab187570_existIdent((*(_5921_i)).ptr(), (*(_5938_ident)));;
		};
	};
	return (*((*(_5921_i))))._field_ImportAll;;
}



inline void _1ab1a3976_appendRetVars(jule::Slice<jule::Ptr<_1ab1c7a66_Var>>* _7123_dest, jule::Ptr<_1ab120d00_FnIns>* _7142_f) {
	if ((_1ab11d36e_IsVoid((*((*(_7142_f))))._field_Decl.ptr()) || ((*((*(_7142_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ab25aa1c_TypeKind>> _769_types = _1ab121eee_Types((*(_7142_f)).ptr());;
	{
		auto expr = &((*((*((*((*(_7142_f))))._field_Decl))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc08c7b6:;
		if (it != expr_end) {
			jule::I64 _7710_i = it - expr->begin();
			jule::Ptr<_1ab0c1e7c_Token> _7717_ident = *it;
			{
				if ((_1ab0c48db_IsIgnoreIdent((*(_7717_ident))._field_Kind) || _1ab0c4ba5_IsAnonIdent((*(_7717_ident))._field_Kind))) {
					goto _iter_next_1bc08c7b6;
				};
				{ jule::Slice<jule::Ptr<_1ab1c7a66_Var>> &__jule_push_dest = (*(_7123_dest)); __jule_push_dest.push(jule::new_ptr<_1ab1c7a66_Var>(_1ab1c7a66_Var{._field_Scope=(*((*(_7142_f))))._field_Scope, ._field_Token=_7717_ident, ._field_Ident=(*(_7717_ident))._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1ab262bde_TypeSymbol>(_1ab262bde_TypeSymbol{._field_Kind=_769_types[_7710_i]}), ._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>()}), ._field_RetOrder=_7710_i, })); };
			}
			_iter_next_1bc08c7b6:;
			++it;
			_7710_i++;
			goto _iter_begin_1bc08c7b6;
		}
		_iter_end_1bc08c7b6:;
	};
	if ((((*((*((*((*(_7142_f))))._field_Decl))._field_Result))._field_Idents.len() == 1LL) && ((*(_7123_dest)).len() == 1LL))) {
		(*((*(_7123_dest))[((*(_7123_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1ab1a3c62_appendParamVars(jule::Slice<jule::Ptr<_1ab1c7a66_Var>>* _10125_dest, jule::Ptr<_1ab120d00_FnIns>* _10144_f) {
	if (((*((*(_10144_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_10144_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc091e80:;
		if (it != expr_end) {
			jule::Ptr<_1ab11ed54_ParamIns> _10617_p = *it;
			{
				if ((_1ab0c48db_IsIgnoreIdent((*((*(_10617_p))._field_Decl))._field_Ident) || _1ab0c4ba5_IsAnonIdent((*((*(_10617_p))._field_Decl))._field_Ident))) {
					goto _iter_next_1bc091e80;
				};
				jule::Ptr<_1ab1c7a66_Var> _11113_v = jule::new_ptr<_1ab1c7a66_Var>(_1ab1c7a66_Var{._field_Scope=(*((*(_10144_f))))._field_Scope, ._field_Token=(*((*(_10617_p))._field_Decl))._field_Token, ._field_Ident=(*((*(_10617_p))._field_Decl))._field_Ident, ._field_Mutable=(*((*(_10617_p))._field_Decl))._field_Mutable, ._field_Used=true, ._field_Reference=(*((*(_10617_p))._field_Decl))._field_Reference, ._field_Kind=jule::new_ptr<_1ab262bde_TypeSymbol>(), ._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>()}), });;
				{
					
					if (_1ab11ba43_IsSelf((*(_10617_p))._field_Decl.ptr())) {
						_case_begin_1bc096a01:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1ab25a566_Kind>((*((*(_10144_f))))._field_Owner, 0)});
							(*(_11113_v))._field_Reference=(!(_1ab11bcc9_IsRef((*(_10617_p))._field_Decl.ptr())));
							if (_1ab11bcc9_IsRef((*(_10617_p))._field_Decl.ptr())) {
								(*(_11113_v))._field_Ident=(*(_11113_v))._field_Ident.slice(1LL);
								(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab267122_Sptr>(_1ab267122_Sptr{._field_Elem=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_BindIdent=(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_BindIdent, ._field_Kind=(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_Kind})}), 21);
							};
						}
					}
					else if ((*((*(_10617_p))._field_Decl))._field_Variadic) {
						_case_begin_1bc0964c3:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab267ae5_Slc>(_1ab267ae5_Slc{._field_Elem=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_BindIdent=(*((*(_10617_p))._field_Kind))._field_BindIdent, ._field_Kind=(*((*(_10617_p))._field_Kind))._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_1bc096171:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=(*(_10617_p))._field_Kind;
						}
					}
					_match_end_1bc096050:;
				};
				{ jule::Slice<jule::Ptr<_1ab1c7a66_Var>> &__jule_push_dest = (*(_10125_dest)); __jule_push_dest.push(_11113_v); };
			}
			_iter_next_1bc091e80:;
			++it;
			goto _iter_begin_1bc091e80;
		}
		_iter_end_1bc091e80:;
	};
}



inline void _1ab1a404d_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>>* _16134_dest, jule::Ptr<_1ab120d00_FnIns>* _16159_f) {
	jule::I64 _1629_size = (*((*(_16159_f))))._field_Generics.len();;
	if (((*((*((*(_16159_f))))._field_Decl))._field_Owner != nullptr)) {
		_1629_size+=(*((*((*((*(_16159_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	if ((_1629_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_16159_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc09e2ab:;
		if (it != expr_end) {
			jule::I64 _17110_i = it - expr->begin();
			jule::Ptr<_1ab259136_InsGeneric> _17117_g = *it;
			{
				jule::Ptr<_1ab0e4653_GenericDecl> _17213_decl = (*((*((*(_16159_f))))._field_Decl))._field_Generics[_17110_i];;
				{ jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>> &__jule_push_dest = (*(_16134_dest)); __jule_push_dest.push(jule::new_ptr<_1ab259c2a_TypeAlias>(_1ab259c2a_TypeAlias{._field_Scope=(*((*((*(_16159_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_17213_decl))._field_Token, ._field_Ident=(*(_17213_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1ab262bde_TypeSymbol>(_1ab262bde_TypeSymbol{._field_Kind=(*(_17117_g))._field_Kind}), })); };
			}
			_iter_next_1bc09e2ab:;
			++it;
			_17110_i++;
			goto _iter_begin_1bc09e2ab;
		}
		_iter_end_1bc09e2ab:;
	};
	if (((*((*((*(_16159_f))))._field_Decl))._field_Owner != nullptr)) {
		jule::Ptr<_1ab10acb8_StructIns> _18413_owner = (*((*(_16159_f))))._field_Owner;;
		{
			auto expr = &((*(_18413_owner))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc0a0dc3:;
			if (it != expr_end) {
				jule::I64 _18514_i = it - expr->begin();
				jule::Ptr<_1ab259136_InsGeneric> _18521_g = *it;
				{
					jule::Ptr<_1ab0e4653_GenericDecl> _18617_decl = (*((*(_18413_owner))._field_Decl))._field_Generics[_18514_i];;
					{ jule::Slice<jule::Ptr<_1ab259c2a_TypeAlias>> &__jule_push_dest = (*(_16134_dest)); __jule_push_dest.push(jule::new_ptr<_1ab259c2a_TypeAlias>(_1ab259c2a_TypeAlias{._field_Scope=(*((*((*(_16159_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_18617_decl))._field_Token, ._field_Ident=(*(_18617_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1ab262bde_TypeSymbol>(_1ab262bde_TypeSymbol{._field_Kind=(*(_18521_g))._field_Kind}), })); };
				}
				_iter_next_1bc0a0dc3:;
				++it;
				_18514_i++;
				goto _iter_begin_1bc0a0dc3;
			}
			_iter_end_1bc0a0dc3:;
		};
	};
}



inline jule::Ptr<_1ab224d9e_SymbolTable> _1ab1a43c2_findFile(jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>* _19918_files, jule::Ptr<_1ab0c7746_File>* _19942_handler) {
	{
		auto expr = _19918_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0a3a1e:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _20017_fl = *it;
			{
				if (((*(_20017_fl))._field_File == (*(_19942_handler)))) {
					return _20017_fl;;
				};
			}
			_iter_next_1bc0a3a1e:;
			++it;
			goto _iter_begin_1bc0a3a1e;
		}
		_iter_end_1bc0a3a1e:;
	};
	return nullptr;;
}



inline void _1ab1a4878_pushSuggestion(_1d7b81cb8_Log* _20830_log, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args) {
	(*(_20830_log))._field_Suggestion=_1d7b8222a_Logf(_20841_fmt, _20854_args);
}



inline void _1ab1c5d50_pushImplemented(jule::Ptr<_1ab131195_Trait> _286424_t, jule::Ptr<_1ab10803a_Struct>* _286440_d) {
	_julec_label_1bc0a68ce:;
	{
		
		if (((*(_286424_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1bc0a70e9:;
			{
				{
					auto expr = &((*(_286424_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc0a7da8:;
					if (it != expr_end) {
						jule::Ptr<_1ab10803a_Struct> _286816_s = *it;
						{
							if ((_286816_s == (*(_286440_d)))) {
								goto _match_end_1bc0a6aee;
							};
						}
						_iter_next_1bc0a7da8:;
						++it;
						goto _iter_begin_1bc0a7da8;
					}
					_iter_end_1bc0a7da8:;
				};
				goto _case_begin_1bc0a6b65;
			}
		}
		else {
			_case_begin_1bc0a6b65:;
			{
				{ jule::Slice<jule::Ptr<_1ab10803a_Struct>> &__jule_push_dest = (*(_286424_t))._field_Implemented; __jule_push_dest.push((*(_286440_d))); };
			}
		}
		_match_end_1bc0a6aee:;
	};
	{
		auto expr = &((*(_286424_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0a8804:;
		if (it != expr_end) {
			jule::Ptr<_1ab262bde_TypeSymbol> _287717_i = *it;
			{
				_1ab1c5d50_pushImplemented(_1ab25e977_Trait((*(_287717_i))._field_Kind.ptr()), _286440_d);
			}
			_iter_next_1bc0a8804:;
			++it;
			goto _iter_begin_1bc0a8804;
		}
		_iter_end_1bc0a8804:;
	};
}



inline void _1ab1c613b_pushImplements(jule::Ptr<_1ab10803a_Struct>* _288224_s, jule::Ptr<_1ab131195_Trait> _288240_t) {
	_julec_label_1bc0a988d:;
	{
		
		if (((*((*(_288224_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1bc0aa0a8:;
			{
				{
					auto expr = &((*((*(_288224_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc0aad67:;
					if (it != expr_end) {
						jule::Ptr<_1ab131195_Trait> _288616_b = *it;
						{
							if ((_288616_b == _288240_t)) {
								goto _match_end_1bc0a9aad;
							};
						}
						_iter_next_1bc0aad67:;
						++it;
						goto _iter_begin_1bc0aad67;
					}
					_iter_end_1bc0aad67:;
				};
				goto _case_begin_1bc0a9b24;
			}
		}
		else {
			_case_begin_1bc0a9b24:;
			{
				{ jule::Slice<jule::Ptr<_1ab131195_Trait>> &__jule_push_dest = (*((*(_288224_s))))._field_Implements; __jule_push_dest.push(_288240_t); };
			}
		}
		_match_end_1bc0a9aad:;
	};
	{
		auto expr = &((*(_288240_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0ab7b3:;
		if (it != expr_end) {
			jule::Ptr<_1ab262bde_TypeSymbol> _289517_i = *it;
			{
				_1ab1c613b_pushImplements(_288224_s, _1ab25e977_Trait((*(_289517_i))._field_Kind.ptr()));
			}
			_iter_next_1bc0ab7b3:;
			++it;
			goto _iter_begin_1bc0ab7b3;
		}
		_iter_end_1bc0ab7b3:;
	};
}



inline jule::Bool _1ab2109b1_traitHasReferenceReceiver(jule::Ptr<_1ab131195_Trait>* _2731_t) {
	{
		auto expr = &((*((*(_2731_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc338138:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> *_2812_f = it;
			{
				if ((*((*(_2812_f))))._field_Statically) {
					goto _iter_next_1bc338138;
				};
				jule::Ptr<_1ab11b427_Param> _349_p = (*((*(_2812_f))))._field_Params[0LL];;
				if ((_1ab11bcc9_IsRef(_349_p.ptr()) && _1ab11ba43_IsSelf(_349_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1bc338138:;
			++it;
			goto _iter_begin_1bc338138;
		}
		_iter_end_1bc338138:;
	};
	return false;;
}



inline jule::Bool _1ab210d46_floatAssignable(jule::Str* _4221_kind, jule::Ptr<_1ab22a228_Data>* _4233_d) {
	jule::Str _435_value = _1d8ba7c77_FmtFloat(static_cast<jule::F64>(_1d8bd2c80_AsF64((*((*(_4233_d))))._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _1d8bc3523_CheckBitFloat(_435_value, static_cast<jule::I64>(_1d8bc2005_BitsizeOf((*(_4221_kind)))));;
}



inline jule::Bool _1ab2111ba_sigAssignable(jule::Str _4718_kind, jule::Ptr<_1ab22a228_Data>* _4730_d) {
	jule::F64 _485_min = _1d8bc87d1_Min(_4718_kind);;
	jule::F64 _495_max = _1d8bc8a9a_Max(_4718_kind);;
	{
		
		if (_1d8bd4ac8_IsF64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1bc33e89d:;
			{
				jule::F64 _529_x = _1d8bd24cc_ReadF64((*((*(_4730_d))))._field_Constant.ptr());;
				jule::F64 _539_i = 0;;
				jule::F64 _5312_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1d8b7ccc4_Modf(_529_x);
					_539_i = __jule_assign_result.__jule_result_arg0;
					_5312_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5312_frac != 0LL)) {
					return false;;
				};
				return ((_539_i >= _485_min) && (_539_i <= _495_max));;
			}
		}
		else if (_1d8bd4325_IsU64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1bc33e925:;
			{
				jule::F64 _599_x = _1d8bd2c80_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				if ((_599_x <= _495_max)) {
					return true;;
				};
			}
		}
		else if (_1d8bd408e_IsI64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1bc33e99c:;
			{
				jule::F64 _649_x = _1d8bd2c80_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				return ((_485_min <= _649_x) && (_649_x <= _495_max));;
			}
		}
		_match_end_1bc33e76b:;
	};
	return false;;
}



inline jule::Bool _1ab211583_unsigAssignable(jule::Str _7020_kind, jule::Ptr<_1ab22a228_Data>* _7032_d) {
	jule::F64 _715_max = _1d8bc8a9a_Max(_7020_kind);;
	if (((*((*(_7032_d))))._field_IsRune && _7020_kind.equal("u8", 2))) {
		return _1ab1e1e04_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1d8bd1993_ReadI64((*((*(_7032_d))))._field_Constant.ptr()))));;
	};
	{
		
		if (_1d8bd4ac8_IsF64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1bc344d15:;
			{
				jule::F64 _789_x = _1d8bd24cc_ReadF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_789_x < 0LL)) {
					return false;;
				};
				jule::F64 _829_i = 0;;
				jule::F64 _8212_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1d8b7ccc4_Modf(_789_x);
					_829_i = __jule_assign_result.__jule_result_arg0;
					_8212_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8212_frac != 0LL)) {
					return false;;
				};
				return (_829_i <= _715_max);;
			}
		}
		else if (_1d8bd4325_IsU64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1bc344d7b:;
			{
				jule::F64 _889_x = _1d8bd2c80_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_889_x <= _715_max)) {
					return true;;
				};
			}
		}
		else if (_1d8bd408e_IsI64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1bc344de2:;
			{
				jule::F64 _939_x = _1d8bd2c80_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				return ((0LL <= _939_x) && (_939_x <= _715_max));;
			}
		}
		_match_end_1bc3444c9:;
	};
	return false;;
}



inline jule::Bool _1ab211907_intAssignable(jule::Str _9918_kind, jule::Ptr<_1ab22a228_Data>* _9930_d) {
	{
		
		if (_1d8bcdce2_IsSigInt(_9918_kind)) {
			_case_begin_1bc349556:;
			{
				return _1ab2111ba_sigAssignable(_9918_kind, _9930_d);;
			}
		}
		else if (_1d8bce100_IsUnsigInt(_9918_kind)) {
			_case_begin_1bc3495cd:;
			{
				return _1ab211583_unsigAssignable(_9918_kind, _9930_d);;
			}
		}
		else {
			_case_begin_1bc348eb2:;
			{
				return false;;
			}
		}
		_match_end_1bc348654:;
	};
}



inline void _1ab21d0b7_checkMutRiskOfStructLit(jule::Ptr<_1ab1a567b_Sema>* _94433_s, jule::Ptr<_1ab110e55_StructLitExprModel>* _94444_m) {
	{
		auto expr = &((*((*(_94444_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc349db4:;
		if (it != expr_end) {
			jule::Ptr<_1ab110aae_StructArgExprModel> *_94512_arg = it;
			{
				if ((*((*((*((*(_94512_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1bc349db4;
				};
				if (((!((*((*((*(_94512_arg))))._field_Expr))._field_Mutable)) && _1ab25c39d_Mutable((*((*((*(_94512_arg))))._field_Expr))._field_Kind.ptr()))) {
					_1ab1a82b6_pushErr((*(_94433_s)).ptr(), (*((*(_94512_arg))))._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*((*(_94512_arg))))._field_Expr))._field_Kind.ptr()), &__jule_any_type4)}));
				};
			}
			_iter_next_1bc349db4:;
			++it;
			goto _iter_begin_1bc349db4;
		}
		_iter_end_1bc349db4:;
	};
}



inline jule::Ptr<_1ab25aa1c_TypeKind> _1ab223b5b_lenKind(void) {
	return _1ab344870_primInt;;
}



inline jule::Bool _1ab223ead_isGoodValueToInfer(jule::Ptr<_1ab22a228_Data>* _140824_d) {
	return (!(_1ab22a5d0_IsNil((*(_140824_d)).ptr())));;
}



inline jule::Ptr<_1ab0d6865_Directive> _1ab253a8c_findDirective(jule::Slice<jule::Ptr<_1ab0d6865_Directive>>* _420523_directives, jule::Str _420554_d) {
	{
		auto expr = _420523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc478850:;
		if (it != expr_end) {
			jule::Ptr<_1ab0d6865_Directive> _420617_dr = *it;
			{
				if (((*((*(_420617_dr))._field_Tag))._field_Kind == _420554_d)) {
					return _420617_dr;;
				};
			}
			_iter_next_1bc478850:;
			++it;
			goto _iter_begin_1bc478850;
		}
		_iter_end_1bc478850:;
	};
	return nullptr;;
}



inline jule::Any _1ab253e55_findBuiltinsImport(jule::Str* _421424_ident, jule::Ptr<_1ab184bdd_ImportInfo> _421436_imp) {
	return _1ab3480c1_findPackageBuiltinDef(&((*(_421436_imp))._field_LinkPath), _421424_ident);;
}



inline void _1ab254186_fitBitsize(jule::Ptr<_1ab22a228_Data>* _422120_d) {
	jule::Ptr<_1ab2635e6_Prim> _42229_prim = _1ab25d16d_Prim((*((*(_422120_d))))._field_Kind.ptr());;
	jule::I64 _42235_z = _1d8bc2005_BitsizeOf(_1ab263937_Str(_42229_prim.ptr()));;
	if ((_42235_z == 64LLU)) {
		return;;
	};
	jule::I64 _42289_k = 0LL;;
	{
		
		if (_1d8bd408e_IsI64((*((*(_422120_d))))._field_Constant.ptr())) {
			_case_begin_1bc47be08:;
			{
				_42289_k=static_cast<jule::I64>(_1d8bc3aa6_BitsizeOfInt(static_cast<jule::I64>(_1d8bd1993_ReadI64((*((*(_422120_d))))._field_Constant.ptr()))));
				if ((_42289_k > _42235_z)) {
					(*((*((*(_422120_d))))._field_Constant))._field_Kind=_1d8bc2346_IntFromBits(_42289_k);
					(*((*(_422120_d))))._field_Kind=(*((*(_1ab346c90_findBuiltinTypeAlias((*((*((*(_422120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1d8bd4325_IsU64((*((*(_422120_d))))._field_Constant.ptr())) {
			_case_begin_1bc47be80:;
			{
				_42289_k=static_cast<jule::I64>(_1d8bc3d70_BitsizeOfUint(static_cast<jule::U64>(_1d8bd1c29_ReadU64((*((*(_422120_d))))._field_Constant.ptr()))));
				if ((_42289_k > _42235_z)) {
					(*((*((*(_422120_d))))._field_Constant))._field_Kind=_1d8bc2610_UintFromBits(_42289_k);
					(*((*(_422120_d))))._field_Kind=(*((*(_1ab346c90_findBuiltinTypeAlias((*((*((*(_422120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1d8bd4ac8_IsF64((*((*(_422120_d))))._field_Constant.ptr())) {
			_case_begin_1bc47c007:;
			{
				_42289_k=static_cast<jule::I64>(_1d8bc37dc_BitsizeOfFloat(static_cast<jule::F64>(_1d8bd24cc_ReadF64((*((*(_422120_d))))._field_Constant.ptr()))));
				if ((_42289_k > _42235_z)) {
					(*((*((*(_422120_d))))._field_Constant))._field_Kind=_1d8bc28c9_FloatFromBits(_42289_k);
					(*((*(_422120_d))))._field_Kind=(*((*(_1ab346c90_findBuiltinTypeAlias((*((*((*(_422120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1bc47bd3c:;
	};
}



inline void _1ab2544b6_makeStructLitAlloc(jule::Ptr<_1ab22a228_Data>* _425128_d, jule::Ptr<_1ab110e55_StructLitExprModel>* _425143_lit) {
	(*((*(_425128_d))))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab267122_Sptr>(_1ab267122_Sptr{._field_Elem=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>((*((*(_425143_lit))))._field_Strct, 0)})}), 21)});
	(*((*(_425128_d))))._field_Model=jule::Any(jule::new_ptr<_1ab111252_AllocStructLitExprModel>(_1ab111252_AllocStructLitExprModel{._field_Lit=(*(_425143_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_1ab1c7a66_Var> _1ab25483a_buildErrorVar(jule::Ptr<_1ab1637b0_Scope>* _426223_s, jule::Ptr<_1ab0e04a6_FnCallExpr>* _426239_fc) {
	return jule::new_ptr<_1ab1c7a66_Var>(_1ab1c7a66_Var{._field_Scope=(*(_426223_s)), ._field_Token=(*((*(_426239_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_1ab346c90_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>()}), });;
}



inline jule::Any _1ab254bae_findBuiltinsSema(jule::Str* _427722_ident, jule::Ptr<_1ab1a567b_Sema> _427738_s) {
	{
		auto expr = &((*((*(_427738_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc486e46:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _427817_imp = *it;
			{
				if (((*(_427817_imp))._field_ImportAll || _1ab187570_existIdent(_427817_imp.ptr(), (*(_427722_ident))))) {
					jule::Any _428017_def = _1ab253e55_findBuiltinsImport(_427722_ident, _427817_imp);;
					if ((_428017_def != nullptr)) {
						return _428017_def;;
					};
				};
			}
			_iter_next_1bc486e46:;
			++it;
			goto _iter_begin_1bc486e46;
		}
		_iter_end_1bc486e46:;
	};
	jule::Str _42889_ppath = _1ab0c7db7_Dir((*((*(_427738_s))._field_file))._field_File.ptr());;
	if (_1d7abd93b_HasPrefix(_42889_ppath, _1d7c936d2_PathStdlib)) {
		(_42889_ppath).mut_slice(_1d7c936d2_PathStdlib.len());;
		_42889_ppath=(jule::Str::lit("std", 3) + _1d7ac4821_Replace(_42889_ppath, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));
		return _1ab3480c1_findPackageBuiltinDef(&(_42889_ppath), _427722_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1ab254e78_isOkForShifting(jule::Ptr<_1ab22a228_Data>* _430225_d) {
	if (_1ab22aaec_IsConst((*(_430225_d)).ptr())) {
		{
			
			if (_1d8bd408e_IsI64((*((*(_430225_d))))._field_Constant.ptr())) {
				_case_begin_1bc48a521:;
				{
					return (_1d8bd1993_ReadI64((*((*(_430225_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1d8bd4325_IsU64((*((*(_430225_d))))._field_Constant.ptr())) {
				_case_begin_1bc48a598:;
				{
					return true;;
				}
			}
			else if (_1d8bd4ac8_IsF64((*((*(_430225_d))))._field_Constant.ptr())) {
				_case_begin_1bc48a620:;
				{
					return (_1d8bd24cc_ReadF64((*((*(_430225_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1bc48a444:;
				{
					return false;;
				}
			}
			_match_end_1bc48a378:;
		};
	};
	jule::Ptr<_1ab2635e6_Prim> _43155_prim = _1ab25d16d_Prim((*((*(_430225_d))))._field_Kind.ptr());;
	return ((_43155_prim != nullptr) && _1d8bce3b9_IsInt(_1ab263937_Str(_43155_prim.ptr())));;
}



inline jule::Bool _1ab255352_isInstancedStruct(jule::Ptr<_1ab10acb8_StructIns> _431922_s) {
	return ((*((*(_431922_s))._field_Decl))._field_Generics.len() == (*(_431922_s))._field_Generics.len());;
}



inline jule::Bool _1ab2556c6_isPtrArithmeticCompatible(jule::Ptr<_1ab22a228_Data>* _432335_l, jule::Ptr<_1ab22a228_Data>* _432350_r) {
	jule::Ptr<_1ab26a8d9_Ptr> _43245_ptr = _1ab25d68a_Ptr((*((*(_432350_r))))._field_Kind.ptr());;
	if ((_43245_ptr != nullptr)) {
		return _1ab25b226_Equal((*(_1ab25d68a_Ptr((*((*(_432335_l))))._field_Kind.ptr())))._field_Elem, (*(_43245_ptr))._field_Elem);;
	};
	if (_1ab22aaec_IsConst((*(_432350_r)).ptr())) {
		return _1ab211907_intAssignable(jule::Str::lit("int", 3), _432350_r);;
	};
	_1ab211de1_typeCompatibilityChecker _43319_tcc = _1ab211de1_typeCompatibilityChecker{._field_dest=_1ab344870_primInt, ._field_src=(*((*(_432350_r))))._field_Kind, };;
	return _1ab2135a7_check(&_43319_tcc);;
}



inline void _1ab2559b2_applyCastKindModel(jule::Ptr<_1ab22a228_Data>* _433828_d, jule::Ptr<_1ab25aa1c_TypeKind>* _433843_t) {
	(*((*(_433828_d))))._field_Model=jule::Any(jule::new_ptr<_1ab1117d5_CastingExprModel>(_1ab1117d5_CastingExprModel{._field_Expr=(*((*(_433828_d))))._field_Model, ._field_Kind=(*(_433843_t)), ._field_ExprKind=(*((*(_433828_d))))._field_Kind}), &__jule_any_type92);
}



inline void _1ab255c9d_applyCastKind(jule::Ptr<_1ab22a228_Data>* _434623_d, jule::Ptr<_1ab25aa1c_TypeKind>* _434638_t) {
	_1ab2559b2_applyCastKindModel(_434623_d, _434638_t);
	(*((*(_434623_d))))._field_Kind=(*(_434638_t));
}



inline jule::Ptr<_1ab22a228_Data> _1ab255eac_buildVoidData(void) {
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343572_primVoid, });;
}



inline jule::Str _1ab256276_checkDataForIntegerIndexing(jule::Ptr<_1ab22a228_Data>* _435737_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_435737_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1ab25d16d_Prim((*((*(_435737_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1bc494184:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1d8bce3b9_IsInt(_1ab263937_Str(_1ab25d16d_Prim((*((*(_435737_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1bc4941ea:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1ab22aaec_IsConst((*(_435737_d)).ptr())) {
			_case_begin_1bc494261:;
			{
				if ((_1d8bd2c80_AsF64((*((*(_435737_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1ab25d16d_Prim((*((*(_435737_d))))._field_Kind.ptr()) == nullptr) || _1ab22aaec_IsConst((*(_435737_d)).ptr()) || (_1d8bc1c3b_RealKindOf(_1ab263937_Str(_1ab25d16d_Prim((*((*(_435737_d))))._field_Kind.ptr()).ptr())) != _1d8bc1c3b_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_1bc4942d8:;
			{
				_1ab255c9d_applyCastKind(_435737_d, &(_1ab344870_primInt));
			}
		}
		_match_end_1bc493d32:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1ab256562_applyCastModelByEnum(jule::Ptr<_1ab22a228_Data>* _438230_d, jule::Ptr<_1ab133890_Enum> _438244_e) {
	if ((_438244_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab2635e6_Prim> _43865_p = _1ab25d16d_Prim((*((*(_438244_e))._field_Kind))._field_Kind.ptr());;
	if (_1ab266a7d_IsStr(_43865_p.ptr())) {
		return;;
	};
	_1ab2559b2_applyCastKindModel(_438230_d, &((*((*(_438244_e))._field_Kind))._field_Kind));
}



inline void _1ab25684d_castConstByType(jule::Str* _439321_t, jule::Ptr<_1ab22a228_Data>* _439334_d) {
	{
		
		if (_1d8bcdce2_IsSigInt((*(_439321_t)))) {
			_case_begin_1bc499c6c:;
			{
				{
					auto _match_expr{ _1d8bc2005_BitsizeOf(_1d8bc1c3b_RealKindOf((*(_439321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bc49a8c7:;
						{
							_1d8bd3038_SetI64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1d8bd2763_AsI64((*((*(_439334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bc49a93d:;
						{
							_1d8bd3038_SetI64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1d8bd2763_AsI64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1bc49a9a4:;
						{
							_1d8bd3038_SetI64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1d8bd2763_AsI64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1bc49aa1a:;
						{
							_1d8bd3038_SetI64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1d8bd2763_AsI64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1bc49a586:;
				};
			}
		}
		else if (_1d8bce100_IsUnsigInt((*(_439321_t)))) {
			_case_begin_1bc499ce4:;
			{
				{
					auto _match_expr{ _1d8bc2005_BitsizeOf(_1d8bc1c3b_RealKindOf((*(_439321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bc49e997:;
						{
							_1d8bd32e1_SetU64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1d8bd29e9_AsU64((*((*(_439334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bc49ea0d:;
						{
							_1d8bd32e1_SetU64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1d8bd29e9_AsU64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1bc49ea74:;
						{
							_1d8bd32e1_SetU64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1d8bd29e9_AsU64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1bc49eada:;
						{
							_1d8bd32e1_SetU64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1d8bd29e9_AsU64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1bc49a322:;
				};
			}
		}
		else if (_1d8bce70a_IsFloat((*(_439321_t)))) {
			_case_begin_1bc499d6b:;
			{
				{
					auto _match_expr{ _1d8bc2005_BitsizeOf(_1d8bc1c3b_RealKindOf((*(_439321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bc4a3a12:;
						{
							_1d8bd3b0a_SetF64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::F64>(_1d8bd2c80_AsF64((*((*(_439334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bc4a3a89:;
						{
							_1d8bd3b0a_SetF64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1d8bd2c80_AsF64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1bc49ee92:;
				};
			}
		}
		_match_end_1bc499b4b:;
	};
}



inline void _1ab256ce3_updateModelToGenericIns(jule::Any* _442733_m, jule::Ptr<_1ab120d00_FnIns>* _442752_f) {
	{
		auto &_match_expr{ (*(_442733_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bc4a2a44:;
			{
				(*(_442733_m))=jule::Any((*(_442752_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bc4a3da8:;
			{
				(*((*(_442733_m)).cast_ptr<_1ab114c28_StructSubIdentExprModel>(&__jule_any_type97)))._field_Method=(*(_442752_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1bc4a3e1e:;
			{
				(*((*(_442733_m)).cast_ptr<_1ab1151ce_StructStaticIdentExprModel>(&__jule_any_type95)))._field_Method=(*(_442752_f));
			}
		}
		_match_end_1bc4a29de:;
	};
}



inline jule::Bool _1ab257167_pushSubIdentFromExpr(jule::Any _443829_expr, jule::Ptr<_1ab0d7d50_SubIdentTypeDecl>* _443850_t) {
	{
		auto &_match_expr{ _443829_expr };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bc4a7395:;
			{
				jule::Ptr<_1ab0dd1a7_IdentExpr> _444113_e = _443829_expr.cast_ptr<_1ab0dd1a7_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_1ab0d7a53_IdentTypeDecl>> &__jule_push_dest = (*((*(_443850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1ab0d7a53_IdentTypeDecl>(_1ab0d7a53_IdentTypeDecl{._field_Token=(*(_444113_e))._field_Token, ._field_Ident=(*(_444113_e))._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1bc4a740b:;
			{
				jule::Ptr<_1ab0de890_SubIdentExpr> _444713_e = _443829_expr.cast_ptr<_1ab0de890_SubIdentExpr>(&__jule_any_type85);;
				if ((!(_1ab257167_pushSubIdentFromExpr((*((*(_444713_e))._field_Expr))._field_Kind, _443850_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1ab0d7a53_IdentTypeDecl>> &__jule_push_dest = (*((*(_443850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1ab0d7a53_IdentTypeDecl>(_1ab0d7a53_IdentTypeDecl{._field_Token=(*(_444713_e))._field_Ident, ._field_Ident=(*((*(_444713_e))._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_1bc4a732e:;
			{
				return false;;
			}
		}
		_match_end_1bc4a64d7:;
	};
	return true;;
}



inline jule::Str _1ab257431_constoa(jule::Ptr<_1d8bd00bd_Const>* _446113_c) {
	{
		
		if (_1d8bd408e_IsI64((*(_446113_c)).ptr())) {
			_case_begin_1bc4ab223:;
			{
				return _1d8bbe7c7_FmtInt(static_cast<jule::I64>(_1d8bd1993_ReadI64((*(_446113_c)).ptr())), 10LL);;
			}
		}
		else if (_1d8bd4325_IsU64((*(_446113_c)).ptr())) {
			_case_begin_1bc4a797d:;
			{
				return _1d8bbe40e_FmtUint(static_cast<jule::U64>(_1d8bd1c29_ReadU64((*(_446113_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_1bc4a75a4:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bc4ab19b:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab2577a5_evalEnumStatic(jule::Ptr<_1ab133890_Enum>* _447224_enm, jule::Ptr<_1ab132d23_EnumItem>* _447241_item) {
	jule::Ptr<_1ab22a228_Data> _44739_d = jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>((*(_447224_enm)), 3)}), });;
	if (((*(_447241_item)) != nullptr)) {
		(*(_44739_d))._field_Constant=jule::new_ptr<_1d8bd00bd_Const>((*((*((*((*((*(_447241_item))))._field_Value))._field_Data))._field_Constant)));
		(*(_44739_d))._field_Model=jule::Any((*(_44739_d))._field_Constant, &__jule_any_type19);
		_1ab256562_applyCastModelByEnum(&(_44739_d), (*(_447224_enm)));
	};
	return _44739_d;;
}



inline jule::Ptr<_1ab110e55_StructLitExprModel> _1ab257a6e_isLitBased(jule::Any* _448920_m) {
	{
		auto &_match_expr{ (*(_448920_m)) };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bc4ae776:;
			{
				return (*(_448920_m)).cast_ptr<_1ab110e55_StructLitExprModel>(&__jule_any_type94);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bc4ae7dc:;
			{
				return (*((*(_448920_m)).cast_ptr<_1ab111252_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bc4ae853:;
			{
				jule::Ptr<_1ab114c28_StructSubIdentExprModel> _449613_ssi = (*(_448920_m)).cast_ptr<_1ab114c28_StructSubIdentExprModel>(&__jule_any_type97);;
				return _1ab257a6e_isLitBased(&((*((*(_449613_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1bc4ae8b9:;
			{
				jule::Ptr<_1ab1117d5_CastingExprModel> _449913_c = (*(_448920_m)).cast_ptr<_1ab1117d5_CastingExprModel>(&__jule_any_type92);;
				return _1ab257a6e_isLitBased(&((*(_449913_c))._field_Expr));;
			}
		}
		else {
			_case_begin_1bc4ae5ab:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc4ad08d:;
	};
}



inline void _1ab257d5a_makeImplicitDeref(jule::Ptr<_1ab22a228_Data>* _450627_d, jule::Ptr<_1ab0c1e7c_Token> _450641_baseToken) {
	jule::Ptr<_1ab110581_UnaryExprModel> _45079_unary = jule::new_ptr<_1ab110581_UnaryExprModel>(_1ab110581_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab22a228_Data>((*((*(_450627_d))))), ._field_Op=jule::new_ptr<_1ab0c1e7c_Token>((*(_450641_baseToken)))});;
	(*((*(_45079_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*((*(_45079_unary))._field_Op))._field_Kind=jule::Str::lit("*", 1);
	(*((*(_450627_d))))._field_Model=jule::Any(_45079_unary, &__jule_any_type110);
}



inline void _1bc58a17b_updateRefer(jule::Ptr<_1ab123eac_ReferenceStack> _451723_ref, jule::Ptr<_1ab120d00_FnIns>* _451746_old, jule::Ptr<_1ab120d00_FnIns>* _451759_new) {
	{
		auto expr = &((*(_451723_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc58b7ed:;
		if (it != expr_end) {
			jule::I64 _45189_i = it - expr->begin();
			jule::Any _451812_sym = *it;
			{
				if ((__jule_any_type7_compare(_451812_sym, (*(_451746_old))))) {
					(*(_451723_ref))._field_buffer[_45189_i]=jule::Any((*(_451759_new)), &__jule_any_type7);
				};
			}
			_iter_next_1bc58b7ed:;
			++it;
			_45189_i++;
			goto _iter_begin_1bc58b7ed;
		}
		_iter_end_1bc58b7ed:;
	};
}



inline jule::Bool _1ab276274_kindUsesGenerics(jule::Ptr<_1ab25aa1c_TypeKind>* _171026_k, jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>>* _171041_generics) {
	{
		auto expr = _171041_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc82c132:;
		if (it != expr_end) {
			jule::Ptr<_1ab0e4653_GenericDecl> *_171112_g = it;
			{
				if (static__1ab275d45_exist(&((*((*(_171112_g))))._field_Ident), _171026_k)) {
					return true;;
				};
			}
			_iter_next_1bc82c132:;
			++it;
			goto _iter_begin_1bc82c132;
		}
		_iter_end_1bc82c132:;
	};
	return false;;
}



inline jule::Bool _1ab27663c_hasDirective(jule::Slice<jule::Ptr<_1ab0d6865_Directive>>* _172022_directives, jule::Str _172053_tag) {
	{
		auto expr = _172022_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc82c50b:;
		if (it != expr_end) {
			jule::Ptr<_1ab0d6865_Directive> _172117_dr = *it;
			{
				if (((*((*(_172117_dr))._field_Tag))._field_Kind == _172053_tag)) {
					return true;;
				};
			}
			_iter_next_1bc82c50b:;
			++it;
			goto _iter_begin_1bc82c50b;
		}
		_iter_end_1bc82c50b:;
	};
	return false;;
}



inline jule::Bool _1ab276906_canGetPtr(jule::Ptr<_1ab22a228_Data>* _172919_d) {
	{
		
		if ((!((*((*(_172919_d))))._field_Lvalue)) || _1ab22aaec_IsConst((*(_172919_d)).ptr())) {
			_case_begin_1bc82e1bc:;
			{
				return false;;
			}
		}
		else if ((_1ab25e45a_Fn((*((*(_172919_d))))._field_Kind.ptr()) != nullptr) || (_1ab25d921_Enum((*((*(_172919_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc82e244:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bc82d4b8:;
			{
				return true;;
			}
		}
		_match_end_1bc82d6e9:;
	};
}



inline jule::Bool _1ab276c47_isValidForSptrType(jule::Ptr<_1ab25aa1c_TypeKind>* _174128_t) {
	jule::Ptr<_1ab10acb8_StructIns> _17429_s = _1ab25e6e1_Struct((*(_174128_t)).ptr());;
	if ((((_17429_s != nullptr) && ((*(_17429_s))._field_Decl != nullptr)) && (*((*(_17429_s))._field_Decl))._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1ab277011_isValidForRef(jule::Ptr<_1ab25aa1c_TypeKind>* _175023_t) {
	return (_1ab25e45a_Fn((*(_175023_t)).ptr()) == nullptr);;
}



inline jule::Bool _1ab2772ca_isBuiltinStrConvertable(jule::Ptr<_1ab25aa1c_TypeKind>* _175333_t) {
	return ((((!(_1ab25bd81_Void((*(_175333_t)).ptr()))) && (_1ab25e45a_Fn((*(_175333_t)).ptr()) == nullptr)) && (_1ab25ee94_Tup((*(_175333_t)).ptr()) == nullptr)) && (!(_1ab26022a_comptime((*(_175333_t)).ptr()))));;
}



inline jule::Str _1ab277594_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _175727_tokens) {
	if ((((*(_175727_tokens)).len() == 1LL) && ((*((*(_175727_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I64 _17619_n = 0LL;;
	{
		auto expr = _175727_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc834c83:;
		if (it != expr_end) {
			jule::Ptr<_1ab0c1e7c_Token> *_176212_token = it;
			{
				_17619_n+=(*((*(_176212_token))))._field_Kind.len();
				_17619_n+=2LL;
			}
			_iter_next_1bc834c83:;
			++it;
			goto _iter_begin_1bc834c83;
		}
		_iter_end_1bc834c83:;
	};
	_1d7ad2eb1_StrBuilder _17669_s = static__1d7ad327a_New(_17619_n);;
	{
		auto expr = _175727_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc832b2c:;
		if (it != expr_end) {
			jule::I64 _17679_i = it - expr->begin();
			jule::Ptr<_1ab0c1e7c_Token> *_176712_token = it;
			{
				_1d7adba8b_WriteStr(&_17669_s, (*((*(_176712_token))))._field_Kind);
				if ((((*(_175727_tokens)).len() - _17679_i) > 1LL)) {
					_1d7adba8b_WriteStr(&_17669_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1bc832b2c:;
			++it;
			_17679_i++;
			goto _iter_begin_1bc832b2c;
		}
		_iter_end_1bc832b2c:;
	};
	return _1d7adc383_Str(&_17669_s);;
}



inline jule::Ptr<_1ab2635e6_Prim> _1ab27793a_buildPrimType(jule::Str _177618_kind) {
	return jule::new_ptr<_1ab2635e6_Prim>(_1ab2635e6_Prim{._field_Kind=_177618_kind});;
}



inline void _1ab277ee0_applyImplicitCast(jule::Ptr<_1ab25aa1c_TypeKind>* _180427_dest, jule::Ptr<_1ab22a228_Data>* _180449_d) {
	if (_1ab25baea_IsNil((*((*(_180449_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1ab2635e6_Prim> _18085_destPrim = _1ab25d16d_Prim((*(_180427_dest)).ptr());;
	jule::Ptr<_1ab2635e6_Prim> _18095_prim = _1ab25d16d_Prim((*((*(_180449_d))))._field_Kind.ptr());;
	if ((_18085_destPrim != nullptr)) {
		if (_1ab266d14_IsAny(_18085_destPrim.ptr())) {
			if (((_18095_prim == nullptr) || (!(_1ab266d14_IsAny(_18095_prim.ptr()))))) {
				_1ab255c9d_applyCastKind(_180449_d, _180427_dest);
			};
			return;;
		};
		if (((((((!(_1ab25b864_Binded((*((*(_180449_d))))._field_Kind.ptr()))) && (!((*((*((*(_180449_d))))._field_Kind))._field_Variadic))) && (!((*((*(_180449_d))))._field_Lvalue))) && (!(_1ab22aaec_IsConst((*(_180449_d)).ptr())))) && (_18095_prim != nullptr)) && _1d8bce9c4_IsNum((*(_18095_prim))._field_Kind))) {
			_1ab255c9d_applyCastKind(_180449_d, _180427_dest);
		};
		return;;
	};
	jule::Ptr<_1ab131195_Trait> _18285_dt = _1ab25e977_Trait((*(_180427_dest)).ptr());;
	if ((_18285_dt != nullptr)) {
		jule::Ptr<_1ab131195_Trait> _18309_bt = _1ab25e977_Trait((*((*(_180449_d))))._field_Kind.ptr());;
		if (((_18309_bt == nullptr) || (_18309_bt != _18285_dt))) {
			_1ab2559b2_applyCastKindModel(_180449_d, _180427_dest);
			return;;
		};
	};
	if (((_1ab25dba7_TypeEnum((*(_180427_dest)).ptr()) != nullptr) && (_1ab25dba7_TypeEnum((*((*(_180449_d))))._field_Kind.ptr()) == nullptr))) {
		_1ab2559b2_applyCastKindModel(_180449_d, _180427_dest);
		return;;
	};
}



inline jule::Bool _1ab2782a9_validTypeForXof(jule::Ptr<_1ab25aa1c_TypeKind>* _184325_t) {
	return ((!(_1ab25bd81_Void((*(_184325_t)).ptr()))) && (_1ab25e45a_Fn((*(_184325_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1ab224d9e_SymbolTable__jule_tuple_s_1d7b81cb8_Log _1ab27b334_buildSymbols(jule::Ptr<_1ab0d55ab_Ast>* _1622_ast, jule::Trait<_1ab181cc8_Importer>* _1638_importer, jule::Ptr<_1ab12a07e_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1ab224d9e_SymbolTable__jule_tuple_s_1d7b81cb8_Log __jule_func_result;
	jule::Ptr<_1ab12a07e_symbolBuilder> _179_sb = jule::new_ptr<_1ab12a07e_symbolBuilder>(_1ab12a07e_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1ab13056d_build(_179_sb);
	if (((*(_179_sb))._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_179_sb))._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*(_179_sb))._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ab187b14_Package__jule_tuple_s_1d7b81cb8_Log _1ab27b7a7_analyzePackage(jule::Slice<jule::Ptr<_1ab0d55ab_Ast>>* _3024_files, jule::Trait<_1ab181cc8_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1ab187b14_Package__jule_tuple_s_1d7b81cb8_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>> _329_tables = jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8877db:;
		if (it != expr_end) {
			jule::Ptr<_1ab0d55ab_Ast> _3317_f = *it;
			{
				jule::Ptr<_1ab224d9e_SymbolTable> _3413_table;;
				jule::Slice<_1d7b81cb8_Log> _3424_errors;;
				({
					__jule_tuple_x_1ab224d9e_SymbolTable__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = _1ab27b334_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3413_table = __jule_assign_result.__jule_result_arg0;
					_3424_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3424_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3424_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1ab224d9e_SymbolTable>> &__jule_push_dest = _329_tables; __jule_push_dest.push(_3413_table); };
			}
			_iter_next_1bc8877db:;
			++it;
			goto _iter_begin_1bc8877db;
		}
		_iter_end_1bc8877db:;
	};
	jule::Ptr<_1ab1a567b_Sema> _419_sema = jule::new_ptr<_1ab1a567b_Sema>(_1ab1a567b_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1ab1a4a54_commonSemaMeta>()});;
	_1ab1c4090_check(_419_sema, &(_329_tables));
	if (((*(_419_sema))._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*(_419_sema))._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab187b14_Package> _509_pkg = jule::new_ptr<_1ab187b14_Package>(_1ab187b14_Package{._field_Files=(*(_419_sema))._field_files});;
	__jule_func_result.__jule_result_arg0 = _509_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ab187b14_Package__jule_tuple_s_1d7b81cb8_Log _1ab27bbd6_AnalyzePackage(jule::Slice<jule::Ptr<_1ab0d55ab_Ast>> _7423_files, jule::Trait<_1ab181cc8_Importer> _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_1ab187b14_Package__jule_tuple_s_1d7b81cb8_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab187b14_Package> _789_package;;
	jule::Slice<_1d7b81cb8_Log> _7822_logs;;
	({
		__jule_tuple_x_1ab187b14_Package__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = _1ab27b7a7_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_789_package = __jule_assign_result.__jule_result_arg0;
		_7822_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _789_package;
	__jule_func_result.__jule_result_arg1 = _7822_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab120d00_FnIns> _1ab342b48_findBuiltinFunc(jule::Str* _2521_ident) {
	{
		auto &_match_expr{ (*(_2521_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1bc8914c6:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _2820_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab348ca3_builtinCallerOut), });;
				return _2820_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1bc891680:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _3120_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab3491d2_builtinCallerOutln), });;
				return _3120_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1bc891707:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _3420_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab349611_builtinCallerNew), });;
				return _3420_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1bc89177e:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _3720_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab349be9_builtinCallerPanic), });;
				return _3720_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1bc891806:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _4020_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab34a128_builtinCallerMake), });;
				return _4020_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1bc891a59:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _4320_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab34a557_builtinCallerAppend), });;
				return _4320_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1bc891ad1:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _4620_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab34ae70_builtinCallerCopy), });;
				return _4620_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1bc891b58:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _4920_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab34c614_builtinCallerLen), });;
				return _4920_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1bc891bd0:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _5220_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab34cdb7_builtinCallerCap), });;
				return _5220_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1bc891cac:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _5520_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab34d7d0_builtinCallerDelete), });;
				return _5520_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1bc891d34:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _5820_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab34dc0e_builtinCallerAssert), });;
				return _5820_f;;
			}
		}
		else {
			_case_begin_1bc891608:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc88d4e5:;
	};
}



inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab342e56_primTypeAlias(jule::Ptr<_1ab25aa1c_TypeKind>* _6523_k) {
	return jule::new_ptr<_1ab259c2a_TypeAlias>(_1ab259c2a_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1ab262bde_TypeSymbol>(_1ab262bde_TypeSymbol{._field_Kind=(*(_6523_k))}), });;
}



inline jule::Ptr<_1ab1c7a66_Var> _1ab346a5e_findBuiltinVar(jule::Str* _9320_ident) {
	{
		auto &_match_expr{ (*(_9320_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1bc8993d0:;
			{
				static jule::Ptr<_1ab1c7a66_Var> _9620_v = jule::new_ptr<_1ab1c7a66_Var>(_1ab1c7a66_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1ab262bde_TypeSymbol>(_1ab262bde_TypeSymbol{._field_Kind=_1ab343264_primNil}), ._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Constant=static__1d8bd1333_NewNil()})}), });;
				return _9620_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1bc899446:;
			{
				static jule::Ptr<_1ab1c7a66_Var> _11120_v = jule::new_ptr<_1ab1c7a66_Var>(_1ab1c7a66_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1ab346c90_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Constant=static__1d8bd0a91_NewBool(true)})}), });;
				return _11120_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1bc8994ac:;
			{
				static jule::Ptr<_1ab1c7a66_Var> _12420_v = jule::new_ptr<_1ab1c7a66_Var>(_1ab1c7a66_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1ab346c90_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1ab22b36c_Value>(_1ab22b36c_Value{._field_Data=jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Constant=static__1d8bd0a91_NewBool(false)})}), });;
				return _12420_v;;
			}
		}
		else {
			_case_begin_1bc899369:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc89839b:;
	};
}



inline jule::Ptr<_1ab259c2a_TypeAlias> _1ab346c90_findBuiltinTypeAlias(jule::Str _14125_ident) {
	{
		auto &_match_expr{ _14125_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1bc89ca10:;
			{
				static jule::Ptr<_1ab259c2a_TypeAlias> _14420_t = _1ab342e56_primTypeAlias(&(_1ab34383b_primAny));;
				return _14420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1bc89e36e:;
			{
				static jule::Ptr<_1ab259c2a_TypeAlias> _14720_t = _1ab342e56_primTypeAlias(&(_1ab343b49_primStr));;
				return _14720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1bc89e616:;
			{
				static jule::Ptr<_1ab259c2a_TypeAlias> _15020_t = _1ab342e56_primTypeAlias(&(_1ab343e13_primBool));;
				return _15020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1bc89e67c:;
			{
				static jule::Ptr<_1ab259c2a_TypeAlias> _15320_t = _1ab342e56_primTypeAlias(&(_1ab3441cc_primUintptr));;
				return _15320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1bc89e6e3:;
			{
				static jule::Ptr<_1ab259c2a_TypeAlias> _15620_t = _1ab342e56_primTypeAlias(&(_1ab344496_primUint));;
				return _15620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1bc89e759:;
			{
				static jule::Ptr<_1ab259c2a_TypeAlias> _15920_t = _1ab342e56_primTypeAlias(&(_1ab344870_primInt));;
				return _15920_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1bc89e858:;
			{
				static jule::Ptr<_1ab259c2a_TypeAlias> _16220_t = _1ab342e56_primTypeAlias(&(_1ab344b39_primI8));;
				return _16220_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1bc89e8be:;
			{
				static jule::Ptr<_1ab259c2a_TypeAlias> _16520_t = _1ab342e56_primTypeAlias(&(_1ab344e03_primI16));;
				return _16520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1bc89e935:;
			{
				static jule::Ptr<_1ab259c2a_TypeAlias> _16820_t = _1ab342e56_primTypeAlias(&(_1ab345486_primI64));;
				return _16820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1bc89e99b:;
			{
				static jule::Ptr<_1ab259c2a_TypeAlias> _17120_t = _1ab342e56_primTypeAlias(&(_1ab345a19_primU16));;
				return _17120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1bc89ea23:;
			{
				static jule::Ptr<_1ab259c2a_TypeAlias> _17420_t = _1ab342e56_primTypeAlias(&(_1ab345cd3_primU32));;
				return _17420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1bc89ea9a:;
			{
				static jule::Ptr<_1ab259c2a_TypeAlias> _17720_t = _1ab342e56_primTypeAlias(&(_1ab346256_primU64));;
				return _17720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1bc89eb22:;
			{
				static jule::Ptr<_1ab259c2a_TypeAlias> _18020_t = _1ab342e56_primTypeAlias(&(_1ab346520_primF32));;
				return _18020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1bc89eb99:;
			{
				static jule::Ptr<_1ab259c2a_TypeAlias> _18320_t = _1ab342e56_primTypeAlias(&(_1ab3467d9_primF64));;
				return _18320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1bc89ec21:;
			{
				static jule::Ptr<_1ab259c2a_TypeAlias> _18620_t = _1ab342e56_primTypeAlias(&(_1ab345750_primU8));;
				return _18620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1bc89ec98:;
			{
				static jule::Ptr<_1ab259c2a_TypeAlias> _18920_t = _1ab342e56_primTypeAlias(&(_1ab3451bc_primI32));;
				return _18920_t;;
			}
		}
		else {
			_case_begin_1bc89e1c6:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc89cb42:;
	};
}



inline jule::Any _1ab347059_findBuiltinDef(jule::Str* _19620_ident) {
	jule::Ptr<_1ab1c7a66_Var> _1979_v = _1ab346a5e_findBuiltinVar(_19620_ident);;
	if ((_1979_v != nullptr)) {
		return jule::Any(_1979_v, &__jule_any_type8);;
	};
	jule::Ptr<_1ab120d00_FnIns> _2019_f = _1ab342b48_findBuiltinFunc(_19620_ident);;
	if ((_2019_f != nullptr)) {
		return jule::Any(_2019_f, &__jule_any_type7);;
	};
	jule::Ptr<_1ab259c2a_TypeAlias> _2059_ta = _1ab346c90_findBuiltinTypeAlias((*(_19620_ident)));;
	if ((_2059_ta != nullptr)) {
		return jule::Any(_2059_ta, &__jule_any_type66);;
	};
	return nullptr;;
}



inline jule::Any _1ab347323_findBuiltinDefStdDebug(jule::Str* _21228_ident) {
	{
		auto &_match_expr{ (*(_21228_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1bc8a92d0:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _21520_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab352a8c_builtinCallerStdDebugOut), });;
				return jule::Any(_21520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1bc8a9346:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _21820_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab352ebb_builtinCallerStdDebugOutln), });;
				return jule::Any(_21820_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1bc8a8bb4:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc8a7c6d:;
	};
}



inline jule::Any _1ab3475dc_findBuiltinDefStdMem(jule::Str* _22526_ident) {
	{
		auto &_match_expr{ (*(_22526_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1bc8aabd8:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _22820_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab351492_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1bc8aac4e:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _23120_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab3518c1_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1bc8aacb5:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _23420_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab351d00_builtinCallerStdMemFree), });;
				return jule::Any(_23420_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1bc8aab72:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc8aa2ae:;
	};
}



inline jule::Any _1ab347983_findBuiltinDefStdComptime(jule::Str* _24131_ident) {
	{
		auto &_match_expr{ (*(_24131_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1bc8ad108:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _24420_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab34e2d6_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1bc8ad180:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _24720_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab34e69e_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Range", 5)) {
			_case_begin_1bc8ad207:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _25020_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab34ed97_builtinCallerStdComptimeRange), });;
				return jule::Any(_25020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1bc8ad537:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _25320_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab3502c6_builtinCallerStdComptimeLine), });;
				return jule::Any(_25320_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1bc8ad59d:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _25620_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab350705_builtinCallerStdComptimeFile), });;
				return jule::Any(_25620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1bc8ad614:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _25920_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab350b34_builtinCallerStdComptimeFiles), });;
				return jule::Any(_25920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1bc8ad67a:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _26220_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab351063_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_26220_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1bc8ad092:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc8ac6ce:;
	};
}



inline jule::Any _1ab347c4c_findBuiltinDefStdJuleIntegrated(jule::Str* _26937_ident) {
	{
		auto &_match_expr{ (*(_26937_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_1bc8b2dcc:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _27220_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab35222e_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_27220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1bc8b2e43:;
			{
				static jule::Ptr<_1ab120d00_FnIns> _27520_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_Decl=jule::new_ptr<_1ab11cdeb_Fn>(_1ab11cdeb_Fn{._field_Generics=jule::Slice<jule::Ptr<_1ab0e4653_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab35265d_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27520_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1bc8b2d66:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc8b24a3:;
	};
}



inline jule::Any _1ab3480c1_findPackageBuiltinDef(jule::Str* _28727_linkPath, jule::Str* _28743_ident) {
	{
		auto &_match_expr{ (*(_28727_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1bc8b5242:;
			{
				return _1ab347983_findBuiltinDefStdComptime(_28743_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1bc8b52a8:;
			{
				return _1ab347323_findBuiltinDefStdDebug(_28743_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1bc8b531e:;
			{
				return _1ab3475dc_findBuiltinDefStdMem(_28743_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1bc8b5385:;
			{
				return _1ab347c4c_findBuiltinDefStdJuleIntegrated(_28743_ident);;
			}
		}
		else {
			_case_begin_1bc8b5077:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc8b5022:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab348500_builtinCallerCommonPlain(jule::Ptr<_1ab22be1c_Eval>* _30234_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _30249_fc, jule::Ptr<_1ab22a228_Data>* _30271_d) {
	jule::Ptr<_1ab120d00_FnIns> _3039_f = _1ab25e45a_Fn((*((*(_30271_d))))._field_Kind.ptr());;
	_1ab21a669_fnCallArgChecker _3059_fcac = _1ab21a669_fnCallArgChecker{._field_e=(*(_30234_e)), ._field_args=(*((*(_30249_fc))))._field_Args, ._field_errorToken=(*((*(_30249_fc))))._field_Token, ._field_f=_3039_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1ab21cc21_check(&_3059_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1ab112187_FnCallExprModel> _3169_model = jule::new_ptr<_1ab112187_FnCallExprModel>(_1ab112187_FnCallExprModel{._field_Token=(*((*(_30249_fc))))._field_Token, ._field_Func=_3039_f, ._field_Expr=(*((*(_30271_d))))._field_Model, ._field_Args=_3059_fcac._field_argModels, });;
	if (((*(_3039_f))._field_Result == nullptr)) {
		(*(_30271_d))=_1ab255eac_buildVoidData();
	} else {
		(*(_30271_d))=jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=(*(_3039_f))._field_Result, });
	};
	(*((*(_30271_d))))._field_Model=jule::Any(_3169_model, &__jule_any_type34);
	return (*(_30271_d));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab348874_builtinCallerError(jule::Ptr<_1ab22be1c_Eval>* _33528_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _33543_fc) {
	if (((*((*(_33543_fc))))._field_Args.len() < 1LL)) {
		_1ab22c46c_pushErr((*(_33528_e)).ptr(), (*((*(_33543_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_33543_fc))))._field_Args.len() > 1LL)) {
		_1ab22c46c_pushErr((*(_33528_e)).ptr(), (*((*((*(_33543_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab22a228_Data> _3439_expr = _1ab24a17c_evalExpr((*(_33528_e)), (*((*(_33543_fc))))._field_Args[0LL]);;
	if ((_3439_expr == nullptr)) {
		return nullptr;;
	};
	if (_1ab22a5d0_IsNil(_3439_expr.ptr())) {
		_1ab22c46c_pushErr((*(_33528_e)).ptr(), (*((*((*(_33543_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab22a228_Data> _3529_d = _1ab255eac_buildVoidData();;
	(*(_3529_d))._field_Model=jule::Any(jule::new_ptr<_1ab1189b8_BuiltinErrorCallExprModel>(_1ab1189b8_BuiltinErrorCallExprModel{._field_Err=_3439_expr}), &__jule_any_type23);
	return _3529_d;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab348ca3_builtinCallerOut(jule::Ptr<_1ab22be1c_Eval>* _35726_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _35741_fc, jule::Ptr<_1ab22a228_Data>* ) {
	if (((*((*(_35741_fc))))._field_Args.len() < 1LL)) {
		_1ab22c46c_pushErr((*(_35726_e)).ptr(), (*((*(_35741_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_35741_fc))))._field_Args.len() > 1LL)) {
		_1ab22c46c_pushErr((*(_35726_e)).ptr(), (*((*((*(_35741_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab22a228_Data> _3669_expr = _1ab24a17c_evalExpr((*(_35726_e)), (*((*(_35741_fc))))._field_Args[0LL]);;
	if ((_3669_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab2772ca_isBuiltinStrConvertable(&((*(_3669_expr))._field_Kind))))) {
		_1ab22c46c_pushErr((*(_35726_e)).ptr(), (*((*((*(_35741_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab22a228_Data> _3769_d = _1ab255eac_buildVoidData();;
	(*(_3769_d))._field_Model=jule::Any(jule::new_ptr<_1ab115c7e_BuiltinOutCallExprModel>(_1ab115c7e_BuiltinOutCallExprModel{._field_Expr=(*(_3669_expr))._field_Model, }), &__jule_any_type27);
	return _3769_d;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab3491d2_builtinCallerOutln(jule::Ptr<_1ab22be1c_Eval>* _38128_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _38143_fc, jule::Ptr<_1ab22a228_Data>* _38165_d) {
	(*(_38165_d))=_1ab348ca3_builtinCallerOut(_38128_e, _38143_fc, _38165_d);
	if (((*(_38165_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_38165_d))))._field_Model=jule::Any(jule::new_ptr<_1ab116158_BuiltinOutlnCallExprModel>(_1ab116158_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_38165_d))))._field_Model.cast_ptr<_1ab115c7e_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Expr, }), &__jule_any_type28);
	return (*(_38165_d));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab349611_builtinCallerNew(jule::Ptr<_1ab22be1c_Eval>* _39326_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _39341_fc, jule::Ptr<_1ab22a228_Data>* _39363_d) {
	if (((*((*(_39341_fc))))._field_Args.len() < 1LL)) {
		_1ab22c46c_pushErr((*(_39326_e)).ptr(), (*((*(_39341_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_39341_fc))))._field_Args.len() > 2LL)) {
		_1ab22c46c_pushErr((*(_39326_e)).ptr(), (*((*((*(_39341_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab22a228_Data> _4029_t = _1ab249368_evalExprKind((*(_39326_e)), (*((*((*(_39341_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4029_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4029_t))._field_Decl))) {
		_1ab22c46c_pushErr((*(_39326_e)).ptr(), (*((*((*(_39341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1ab276c47_isValidForSptrType(&((*(_4029_t))._field_Kind))))) {
		jule::Ptr<_1ab10acb8_StructIns> _41313_s = _1ab25e6e1_Struct((*(_4029_t))._field_Kind.ptr());;
		if ((((_41313_s != nullptr) && ((*(_41313_s))._field_Decl != nullptr)) && (*((*(_41313_s))._field_Decl))._field_Binded)) {
			_1ab22c46c_pushErr((*(_39326_e)).ptr(), (*((*((*(_39341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_39363_d))))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab267122_Sptr>(_1ab267122_Sptr{._field_Elem=(*(_4029_t))._field_Kind}), 21)});
	if (((*((*(_39341_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1ab25aa1c_TypeKind> _42713_old = (*((*(_39326_e))))._field_prefix;;
		(*((*(_39326_e))))._field_prefix=(*(_4029_t))._field_Kind;
		jule::Ptr<_1ab22a228_Data> _43013_init = _1ab24a17c_evalExpr((*(_39326_e)), (*((*(_39341_fc))))._field_Args[1LL]);;
		(*((*(_39326_e))))._field_prefix=_42713_old;
		if ((_43013_init != nullptr)) {
			jule::Ptr<_1ab0c1e7c_Token> _43517_token = (*((*((*(_39341_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1ab1b42d3_checkValidityForInitExpr((*((*(_39326_e))))._field_s, (!((*((*(_39326_e))))._field_immutable)), false, &((*(_4029_t))._field_Kind), &(_43013_init), &(_43517_token));
			_1ab1b0cc4_checkAssignType((*((*(_39326_e))))._field_s, false, &((*(_4029_t))._field_Kind), &(_43013_init), _43517_token);
			(*((*(_39363_d))))._field_Model=jule::Any(jule::new_ptr<_1ab116532_BuiltinNewCallExprModel>(_1ab116532_BuiltinNewCallExprModel{._field_Kind=(*(_4029_t))._field_Kind, ._field_Init=(*(_43013_init))._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_39363_d))))._field_Model=jule::Any(jule::new_ptr<_1ab116532_BuiltinNewCallExprModel>(_1ab116532_BuiltinNewCallExprModel{._field_Kind=(*(_4029_t))._field_Kind, }), &__jule_any_type113);
	};
	return (*(_39363_d));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab349be9_builtinCallerPanic(jule::Ptr<_1ab22be1c_Eval>* _45528_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _45543_fc, jule::Ptr<_1ab22a228_Data>* ) {
	if (((*((*(_45543_fc))))._field_Args.len() < 1LL)) {
		_1ab22c46c_pushErr((*(_45528_e)).ptr(), (*((*(_45543_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_45543_fc))))._field_Args.len() > 1LL)) {
		_1ab22c46c_pushErr((*(_45528_e)).ptr(), (*((*((*(_45543_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab22a228_Data> _4649_expr = _1ab24a17c_evalExpr((*(_45528_e)), (*((*(_45543_fc))))._field_Args[0LL]);;
	if ((_4649_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1ab25d16d_Prim((*(_4649_expr))._field_Kind.ptr()) == nullptr) || (!(_1ab266a7d_IsStr(_1ab25d16d_Prim((*(_4649_expr))._field_Kind.ptr()).ptr()))))) {
		_1ab22c46c_pushErr((*(_45528_e)).ptr(), (*((*(_45543_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab22a228_Data> _4739_d = _1ab255eac_buildVoidData();;
	(*(_4739_d))._field_Model=jule::Any(jule::new_ptr<_1ab11690b_BuiltinPanicCallExprModel>(_1ab11690b_BuiltinPanicCallExprModel{._field_Token=(*((*(_45543_fc))))._field_Token, ._field_Expr=(*(_4649_expr))._field_Model}), &__jule_any_type29);
	return _4739_d;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab34a128_builtinCallerMake(jule::Ptr<_1ab22be1c_Eval>* _48127_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _48142_fc, jule::Ptr<_1ab22a228_Data>* _48164_d) {
	if (((*((*(_48142_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_48142_fc))))._field_Args.len() == 1LL)) {
			_1ab22c46c_pushErr((*(_48127_e)).ptr(), (*((*(_48142_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_1ab22c46c_pushErr((*(_48127_e)).ptr(), (*((*(_48142_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_48142_fc))))._field_Args.len() > 3LL)) {
		_1ab22c46c_pushErr((*(_48127_e)).ptr(), (*((*((*(_48142_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab22a228_Data> _4949_t = _1ab249368_evalExprKind((*(_48127_e)), (*((*((*(_48142_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4949_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4949_t))._field_Decl))) {
		_1ab22c46c_pushErr((*(_48127_e)).ptr(), (*((*((*(_48142_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1ab25e1c4_Slc((*(_4949_t))._field_Kind.ptr()) == nullptr)) {
		_1ab22c46c_pushErr((*(_48127_e)).ptr(), (*((*((*(_48142_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_4949_t))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_48164_d))))._field_Kind=(*(_4949_t))._field_Kind;
	jule::Ptr<_1ab22a228_Data> _5099_lenExpr = _1ab24a17c_evalExpr(_1ab1b0422_evalp((*((*(_48127_e))))._field_s, (*((*(_48127_e))))._field_lookup, (*(_4949_t))._field_Kind), (*((*(_48142_fc))))._field_Args[1LL]);;
	if ((_5099_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1ab236157_checkIntegerIndexingByData((*(_48127_e)).ptr(), &(_5099_lenExpr), (*((*((*(_48142_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1ab117368_BuiltinMakeCallExprModel> _5169_model = jule::new_ptr<_1ab117368_BuiltinMakeCallExprModel>(_1ab117368_BuiltinMakeCallExprModel{._field_Kind=(*(_4949_t))._field_Kind, ._field_Len=(*(_5099_lenExpr))._field_Model, });;
	(*((*(_48164_d))))._field_Model=jule::Any(_5169_model, &__jule_any_type114);
	if (((*((*(_48142_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1ab22a228_Data> _52213_capExpr = _1ab24a17c_evalExpr(_1ab1b0422_evalp((*((*(_48127_e))))._field_s, (*((*(_48127_e))))._field_lookup, (*(_4949_t))._field_Kind), (*((*(_48142_fc))))._field_Args[2LL]);;
		if ((_52213_capExpr == nullptr)) {
			return (*(_48164_d));;
		};
		_1ab236157_checkIntegerIndexingByData((*(_48127_e)).ptr(), &(_52213_capExpr), (*((*((*(_48142_fc))))._field_Args[2LL]))._field_Token);
		(*(_5169_model))._field_Cap=(*(_52213_capExpr))._field_Model;
	};
	return (*(_48164_d));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab34a557_builtinCallerAppend(jule::Ptr<_1ab22be1c_Eval>* _53229_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _53244_fc, jule::Ptr<_1ab22a228_Data>* _53266_d) {
	if (((*((*(_53244_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_53244_fc))))._field_Args.len() == 1LL)) {
			_1ab22c46c_pushErr((*(_53229_e)).ptr(), (*((*(_53244_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1ab22c46c_pushErr((*(_53229_e)).ptr(), (*((*(_53244_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab22a228_Data> _5429_t = _1ab24a17c_evalExpr((*(_53229_e)), (*((*(_53244_fc))))._field_Args[0LL]);;
	if ((_5429_t == nullptr)) {
		return nullptr;;
	};
	if ((_1ab25e1c4_Slc((*(_5429_t))._field_Kind.ptr()) == nullptr)) {
		_1ab22c46c_pushErr((*(_53229_e)).ptr(), (*((*((*(_53244_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab120d00_FnIns> _5529_f = jule::new_ptr<_1ab120d00_FnIns>(_1ab120d00_FnIns{._field_Params=jule::Slice<jule::Ptr<_1ab11ed54_ParamIns>>::make({jule::new_ptr<_1ab11ed54_ParamIns>(_1ab11ed54_ParamIns{._field_Decl=jule::new_ptr<_1ab11b427_Param>(_1ab11b427_Param{._field_Mutable=true, }), ._field_Kind=(*(_5429_t))._field_Kind}),jule::new_ptr<_1ab11ed54_ParamIns>(_1ab11ed54_ParamIns{._field_Decl=jule::new_ptr<_1ab11b427_Param>(_1ab11b427_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=(*(_1ab25e1c4_Slc((*(_5429_t))._field_Kind.ptr())))._field_Elem})}), ._field_Result=(*(_5429_t))._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1ab22a228_Data>(jule::Ptr<_1ab22be1c_Eval>*,jule::Ptr<_1ab0e04a6_FnCallExpr>*,jule::Ptr<_1ab22a228_Data>*)>(_1ab348500_builtinCallerCommonPlain), });;
	(*((*(_53266_d))))._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(_5529_f, 1)});
	(*(_53266_d))=_1ab348500_builtinCallerCommonPlain(_53229_e, _53244_fc, _53266_d);
	if (((*(_53266_d)) != nullptr)) {
		jule::Ptr<_1ab112187_FnCallExprModel> _57613_model = (*((*(_53266_d))))._field_Model.cast_ptr<_1ab112187_FnCallExprModel>(&__jule_any_type34);;
		(*((*(_53266_d))))._field_Model=jule::Any(jule::new_ptr<_1ab117742_BuiltinAppendCallExprModel>(_1ab117742_BuiltinAppendCallExprModel{._field_Dest=(*(_57613_model))._field_Args[0LL], ._field_Elements=(*(_57613_model))._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_53266_d));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab34aa41_callerCopySlice(jule::Ptr<_1ab22a228_Data>* _58525_dest, jule::Ptr<_1ab22be1c_Eval>* _58543_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _58558_fc, jule::Ptr<_1ab22a228_Data>* _58580_d) {
	if ((!((*((*(_58525_dest))))._field_Mutable))) {
		_1ab22c46c_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab22a228_Data> _5909_src = _1ab24a17c_evalExpr((*(_58543_e)), (*((*(_58558_fc))))._field_Args[1LL]);;
	if ((_5909_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab267ae5_Slc> _5949_slc = _1ab25e1c4_Slc((*(_5909_src))._field_Kind.ptr());;
	if ((_5949_slc != nullptr)) {
		if (((!((*(_5909_src))._field_Mutable)) && _1ab25c39d_Mutable((*(_5949_slc))._field_Elem.ptr()))) {
			_1ab22c46c_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1ab25b226_Equal((*((*(_58525_dest))))._field_Kind, (*(_5909_src))._field_Kind)))) {
			_1ab22c46c_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_58525_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str((*(_5909_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_1ab2635e6_Prim> _6049_destPrim = _1ab25d16d_Prim((*(_1ab25e1c4_Slc((*((*(_58525_dest))))._field_Kind.ptr())))._field_Elem.ptr());;
		jule::Ptr<_1ab2635e6_Prim> _6059_prim = _1ab25d16d_Prim((*(_5909_src))._field_Kind.ptr());;
		if (((((_6049_destPrim == nullptr) || (_6059_prim == nullptr)) || (!(_1ab266a7d_IsStr(_6059_prim.ptr())))) || (!(_1ab264edd_IsU8(_6049_destPrim.ptr()))))) {
			_1ab22c46c_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*((*(_58525_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab25add5_Str((*(_5909_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	};
	(*((*(_58580_d))))._field_Kind=_1ab223b5b_lenKind();
	(*((*(_58580_d))))._field_Model=jule::Any(jule::new_ptr<_1ab1185de_BuiltinCopyCallExprModel>(_1ab1185de_BuiltinCopyCallExprModel{._field_Dest=(*(_58525_dest)), ._field_Src=_5909_src}), &__jule_any_type31);
	return (*(_58580_d));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab34ae70_builtinCallerCopy(jule::Ptr<_1ab22be1c_Eval>* _61927_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _61942_fc, jule::Ptr<_1ab22a228_Data>* _61964_d) {
	if (((*((*(_61942_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_61942_fc))))._field_Args.len() == 1LL)) {
			_1ab22c46c_pushErr((*(_61927_e)).ptr(), (*((*(_61942_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1ab22c46c_pushErr((*(_61927_e)).ptr(), (*((*(_61942_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_61942_fc))))._field_Args.len() > 2LL)) {
		_1ab22c46c_pushErr((*(_61927_e)).ptr(), (*((*((*(_61942_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab22a228_Data> _6329_dest = _1ab24a17c_evalExpr((*(_61927_e)), (*((*(_61942_fc))))._field_Args[0LL]);;
	{
		
		if ((_6329_dest == nullptr)) {
			_case_begin_1bc911403:;
			{
				return nullptr;;
			}
		}
		else if ((_1ab25e1c4_Slc((*(_6329_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc9120c4:;
			{
				return _1ab34aa41_callerCopySlice(&(_6329_dest), _61927_e, _61942_fc, _61964_d);;
			}
		}
		else {
			_case_begin_1bc91106d:;
			{
				_1ab22c46c_pushErr((*(_61927_e)).ptr(), (*((*((*(_61942_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc911018:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab34b2e4_callerLenSlice(jule::Ptr<_1ab22a228_Data>* _64424_expr, jule::Ptr<_1ab22a228_Data>* _64442_d) {
	(*((*(_64442_d))))._field_Kind=_1ab223b5b_lenKind();
	(*((*(_64442_d))))._field_Model=jule::Any(jule::new_ptr<_1ab117a3e_BuiltinLenCallExprModel>(_1ab117a3e_BuiltinLenCallExprModel{._field_Expr=(*(_64424_expr))}), &__jule_any_type115);
	return (*(_64442_d));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab34b668_callerLenMap(jule::Ptr<_1ab22a228_Data>* _65222_expr, jule::Ptr<_1ab22a228_Data>* _65240_d) {
	(*((*(_65240_d))))._field_Kind=_1ab223b5b_lenKind();
	(*((*(_65240_d))))._field_Model=jule::Any(jule::new_ptr<_1ab117a3e_BuiltinLenCallExprModel>(_1ab117a3e_BuiltinLenCallExprModel{._field_Expr=(*(_65222_expr))}), &__jule_any_type115);
	return (*(_65240_d));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab34b9dc_callerLenArr(jule::Ptr<_1ab22a228_Data>* _66022_expr, jule::Ptr<_1ab22a228_Data>* _66040_d) {
	(*((*(_66040_d))))._field_Kind=_1ab223b5b_lenKind();
	(*((*(_66040_d))))._field_Constant=static__1d8bd050d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_1ab25de3d_Arr((*((*(_66022_expr))))._field_Kind.ptr())))._field_N)));
	(*((*(_66040_d))))._field_Model=jule::Any((*((*(_66040_d))))._field_Constant, &__jule_any_type19);
	return (*(_66040_d));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab34bd61_callerLenStr(jule::Ptr<_1ab22a228_Data>* _66722_expr, jule::Ptr<_1ab22a228_Data>* _66740_d) {
	(*((*(_66740_d))))._field_Kind=_1ab223b5b_lenKind();
	if (_1ab22aaec_IsConst((*(_66722_expr)).ptr())) {
		(*((*(_66740_d))))._field_Constant=static__1d8bd050d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1d8bd2246_ReadStr((*((*(_66722_expr))))._field_Constant.ptr()).len())));
		(*((*(_66740_d))))._field_Model=jule::Any((*((*(_66740_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_66740_d))))._field_Model=jule::Any(jule::new_ptr<_1ab117a3e_BuiltinLenCallExprModel>(_1ab117a3e_BuiltinLenCallExprModel{._field_Expr=(*(_66722_expr))}), &__jule_any_type115);
	};
	return (*(_66740_d));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab34c1d5_callerLenComptime(jule::Ptr<_1ab22a228_Data>* _68027_d, jule::I64 _68037_n) {
	(*((*(_68027_d))))._field_Kind=_1ab223b5b_lenKind();
	(*((*(_68027_d))))._field_Constant=static__1d8bd050d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_68037_n)));
	(*((*(_68027_d))))._field_Model=jule::Any((*((*(_68027_d))))._field_Constant, &__jule_any_type19);
	return (*(_68027_d));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab34c614_builtinCallerLen(jule::Ptr<_1ab22be1c_Eval>* _68726_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _68741_fc, jule::Ptr<_1ab22a228_Data>* _68763_d) {
	if (((*((*(_68741_fc))))._field_Args.len() < 1LL)) {
		_1ab22c46c_pushErr((*(_68726_e)).ptr(), (*((*(_68741_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_68741_fc))))._field_Args.len() > 1LL)) {
		_1ab22c46c_pushErr((*(_68726_e)).ptr(), (*((*((*(_68741_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab22a228_Data> _6959_dest = _1ab249d3b_evalExpr1((*(_68726_e)), (*((*(_68741_fc))))._field_Args[0LL]);;
	{
		
		if ((_6959_dest == nullptr)) {
			_case_begin_1bc91d3bb:;
			{
				return nullptr;;
			}
		}
		else if ((_1ab25e1c4_Slc((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc91e08c:;
			{
				return _1ab34b2e4_callerLenSlice(&(_6959_dest), _68763_d);;
			}
		}
		else if ((_1ab25de3d_Arr((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc91e103:;
			{
				return _1ab34b9dc_callerLenArr(&(_6959_dest), _68763_d);;
			}
		}
		else if ((_1ab25ec0d_Map((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc91e169:;
			{
				return _1ab34b668_callerLenMap(&(_6959_dest), _68763_d);;
			}
		}
		else if (((_1ab25d16d_Prim((*(_6959_dest))._field_Kind.ptr()) != nullptr) && _1ab266a7d_IsStr(_1ab25d16d_Prim((*(_6959_dest))._field_Kind.ptr()).ptr()))) {
			_case_begin_1bc91d09c:;
			{
				return _1ab34bd61_callerLenStr(&(_6959_dest), _68763_d);;
			}
		}
		else if ((_1ab2604b1_comptimeStructFields((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc91d113:;
			{
				return _1ab34c1d5_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1ab2604b1_comptimeStructFields((*(_6959_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1ab2609cd_comptimeEnumFields((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc91d179:;
			{
				return _1ab34c1d5_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1ab2609cd_comptimeEnumFields((*(_6959_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1ab26179d_comptimeTypeInfos((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc91d1e0:;
			{
				return _1ab34c1d5_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1ab26179d_comptimeTypeInfos((*(_6959_dest))._field_Kind.ptr())))._field_types.len()));;
			}
		}
		else if ((_1ab260eea_comptimeParams((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc91e235:;
			{
				return _1ab34c1d5_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1ab260eea_comptimeParams((*(_6959_dest))._field_Kind.ptr())))._field_params.len()));;
			}
		}
		else if ((_1ab261cba_comptimeStatics((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc91e29b:;
			{
				return _1ab34c1d5_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1ab261cba_comptimeStatics((*(_6959_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1ab262804_comptimeFiles((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc91e312:;
			{
				return _1ab34c1d5_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1ab262804_comptimeFiles((*(_6959_dest))._field_Kind.ptr())))._field_files.len()));;
			}
		}
		else {
			_case_begin_1bc91d036:;
			{
				_1ab22c46c_pushErr((*(_68726_e)).ptr(), (*((*((*(_68741_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc91ced1:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab34c988_callerCapSlice(jule::Ptr<_1ab22a228_Data>* _72524_expr, jule::Ptr<_1ab22a228_Data>* _72542_d) {
	(*((*(_72542_d))))._field_Kind=_1ab223b5b_lenKind();
	(*((*(_72542_d))))._field_Model=jule::Any(jule::new_ptr<_1ab117d3b_BuiltinCapCallExprModel>(_1ab117d3b_BuiltinCapCallExprModel{._field_Expr=(*(_72524_expr))}), &__jule_any_type116);
	return (*(_72542_d));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab34cdb7_builtinCallerCap(jule::Ptr<_1ab22be1c_Eval>* _73326_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _73341_fc, jule::Ptr<_1ab22a228_Data>* _73363_d) {
	if (((*((*(_73341_fc))))._field_Args.len() < 1LL)) {
		_1ab22c46c_pushErr((*(_73326_e)).ptr(), (*((*(_73341_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_73341_fc))))._field_Args.len() > 1LL)) {
		_1ab22c46c_pushErr((*(_73326_e)).ptr(), (*((*((*(_73341_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab22a228_Data> _7419_dest = _1ab24a17c_evalExpr((*(_73326_e)), (*((*(_73341_fc))))._field_Args[0LL]);;
	{
		
		if ((_7419_dest == nullptr)) {
			_case_begin_1bc92d035:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7419_dest))._field_Decl) {
			_case_begin_1bc92dc06:;
			{
				_1ab22c46c_pushErr((*(_73326_e)).ptr(), (*((*((*(_73341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ab25e1c4_Slc((*(_7419_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc92dc6c:;
			{
				return _1ab34c988_callerCapSlice(&(_7419_dest), _73363_d);;
			}
		}
		else {
			_case_begin_1bc92cba0:;
			{
				_1ab22c46c_pushErr((*(_73326_e)).ptr(), (*((*((*(_73341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc92cb4a:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab34d3a1_callerDeleteMap(jule::Ptr<_1ab22be1c_Eval>* _75625_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _75640_fc, jule::Ptr<_1ab22a228_Data>* _75662_expr, jule::Ptr<_1ab22a228_Data>* _75680_d) {
	if ((!((*((*(_75662_expr))))._field_Mutable))) {
		_1ab22c46c_pushErr((*(_75625_e)).ptr(), (*((*((*(_75640_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_75680_d))=_1ab255eac_buildVoidData();
	jule::Ptr<_1ab118215_BuiltinDeleteCallExprModel> _7619_model = jule::new_ptr<_1ab118215_BuiltinDeleteCallExprModel>(_1ab118215_BuiltinDeleteCallExprModel{._field_Dest=(*(_75662_expr)), });;
	if (((*((*(_75640_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1ab22a228_Data> _76513_key = _1ab24a17c_evalExpr((*(_75625_e)), (*((*(_75640_fc))))._field_Args[1LL]);;
		{
			
			if ((_76513_key == nullptr)) {
				_case_begin_1bc934646:;
				{
					return nullptr;;
				}
			}
			else if ((*(_76513_key))._field_Decl) {
				_case_begin_1bc9333ae:;
				{
					_1ab22c46c_pushErr((*(_75625_e)).ptr(), (*((*((*(_75640_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1bc933348:;
				{
					;
					jule::Ptr<_1ab25aa1c_TypeKind> _77417_keyType = (*(_1ab25ec0d_Map((*((*(_75662_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1ab1b0cc4_checkAssignType((*((*(_75625_e))))._field_s, false, &(_77417_keyType), &(_76513_key), (*((*((*(_75640_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1bc9332d2:;
		};
		(*(_7619_model))._field_Key=_76513_key;
	};
	(*((*(_75680_d))))._field_Model=jule::Any(_7619_model, &__jule_any_type32);
	return (*(_75680_d));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab34d7d0_builtinCallerDelete(jule::Ptr<_1ab22be1c_Eval>* _78529_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _78544_fc, jule::Ptr<_1ab22a228_Data>* _78566_d) {
	if (((*((*(_78544_fc))))._field_Args.len() < 1LL)) {
		_1ab22c46c_pushErr((*(_78529_e)).ptr(), (*((*(_78544_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_78544_fc))))._field_Args.len() > 2LL)) {
		_1ab22c46c_pushErr((*(_78529_e)).ptr(), (*((*((*(_78544_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab22a228_Data> _7939_dest = _1ab24a17c_evalExpr((*(_78529_e)), (*((*(_78544_fc))))._field_Args[0LL]);;
	{
		
		if ((_7939_dest == nullptr)) {
			_case_begin_1bc93a40a:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7939_dest))._field_Decl) {
			_case_begin_1bc93b0cb:;
			{
				_1ab22c46c_pushErr((*(_78529_e)).ptr(), (*((*((*(_78544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ab25ec0d_Map((*(_7939_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc93b142:;
			{
				return _1ab34d3a1_callerDeleteMap(_78529_e, _78544_fc, &(_7939_dest), _78566_d);;
			}
		}
		else {
			_case_begin_1bc93a075:;
			{
				_1ab22c46c_pushErr((*(_78529_e)).ptr(), (*((*((*(_78544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc93a020:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab34dc0e_builtinCallerAssert(jule::Ptr<_1ab22be1c_Eval>* _80829_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _80844_fc, jule::Ptr<_1ab22a228_Data>* ) {
	if (((*((*(_80844_fc))))._field_Args.len() < 1LL)) {
		_1ab22c46c_pushErr((*(_80829_e)).ptr(), (*((*(_80844_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_80844_fc))))._field_Args.len() > 2LL)) {
		_1ab22c46c_pushErr((*(_80829_e)).ptr(), (*((*((*(_80844_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab22a228_Data> _8179_expr = _1ab24a17c_evalExpr((*(_80829_e)), (*((*(_80844_fc))))._field_Args[0LL]);;
	if ((_8179_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1ab25d16d_Prim((*(_8179_expr))._field_Kind.ptr()) == nullptr) || (!(_1ab2667e7_IsBool(_1ab25d16d_Prim((*(_8179_expr))._field_Kind.ptr()).ptr()))))) {
		_1ab22c46c_pushErr((*(_80829_e)).ptr(), (*((*(_80844_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab116db2_BuiltinAssertCallExprModel> _8269_model = jule::new_ptr<_1ab116db2_BuiltinAssertCallExprModel>(_1ab116db2_BuiltinAssertCallExprModel{._field_Token=(*((*(_80844_fc))))._field_Token, ._field_Expr=(*(_8179_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_80844_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1ab22a228_Data> _83413_log = _1ab24a17c_evalExpr((*(_80829_e)), (*((*(_80844_fc))))._field_Args[1LL]);;
		if ((_83413_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1ab22aaec_IsConst(_83413_log.ptr()))) || (_1ab25d16d_Prim((*(_83413_log))._field_Kind.ptr()) == nullptr)) || (!(_1ab266a7d_IsStr(_1ab25d16d_Prim((*(_83413_log))._field_Kind.ptr()).ptr()))))) {
			_1ab22c46c_pushErr((*(_80829_e)).ptr(), (*((*((*(_80844_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4),jule::Any(_1ab25add5_Str((*(_83413_log))._field_Kind.ptr()), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_8269_model))._field_Log=_1d8bd2246_ReadStr((*(_83413_log))._field_Constant.ptr());
	};
	jule::Ptr<_1ab22a228_Data> _8479_d = _1ab255eac_buildVoidData();;
	(*(_8479_d))._field_Model=jule::Any(_8269_model, &__jule_any_type30);
	return _8479_d;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab34e2d6_builtinCallerStdComptimeTypeOf(jule::Ptr<_1ab22be1c_Eval>* _85240_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _85255_fc, jule::Ptr<_1ab22a228_Data>* ) {
	if (((*((*(_85255_fc))))._field_Args.len() < 1LL)) {
		_1ab22c46c_pushErr((*(_85240_e)).ptr(), (*((*(_85255_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_85255_fc))))._field_Args.len() > 1LL)) {
		_1ab22c46c_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab22a228_Data> _8619_d = _1ab249368_evalExprKind((*(_85240_e)), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8619_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab120d00_FnIns> _8655_f = _1ab25e45a_Fn((*(_8619_d))._field_Kind.ptr());;
	if ((_8655_f != nullptr)) {
		if (_1ab122285_IsBuiltin(_8655_f.ptr())) {
			_1ab22c46c_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*(_8655_f))._field_Generics.len() != (*((*(_8655_f))._field_Decl))._field_Generics.len())) {
			_1ab22c46c_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1ab10acb8_StructIns> _8765_s = _1ab25e6e1_Struct((*(_8619_d))._field_Kind.ptr());;
	if (((_8765_s != nullptr) && ((*(_8765_s))._field_Generics.len() != (*((*(_8765_s))._field_Decl))._field_Generics.len()))) {
		_1ab22c46c_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1ab26022a_comptime((*(_8619_d))._field_Kind.ptr())) {
		_1ab22c46c_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_8619_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab1594ed_buildComptimeTypeInfoData(&((*((*(_85240_e))))._field_s), &((*(_8619_d))._field_Kind));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab34e69e_builtinCallerStdComptimeValueOf(jule::Ptr<_1ab22be1c_Eval>* _88841_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _88856_fc, jule::Ptr<_1ab22a228_Data>* ) {
	if (((*((*(_88856_fc))))._field_Args.len() < 1LL)) {
		_1ab22c46c_pushErr((*(_88841_e)).ptr(), (*((*(_88856_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_88856_fc))))._field_Args.len() > 1LL)) {
		_1ab22c46c_pushErr((*(_88841_e)).ptr(), (*((*((*(_88856_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab22a228_Data> _8969_d = _1ab24a17c_evalExpr((*(_88841_e)), (*((*(_88856_fc))))._field_Args[0LL]);;
	if ((_8969_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab223ead_isGoodValueToInfer(&(_8969_d))))) {
		_1ab22c46c_pushErr((*(_88841_e)).ptr(), (*((*((*(_88856_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_8969_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab15972e_buildComptimeValue(&(_8969_d));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab34e968_rangeData(jule::Trait<_1ab137256_comptimeRangeKind> _90818_kind) {
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab137443_comptimeRange>(_1ab137443_comptimeRange{._field_kind=_90818_kind}), 5)}), });;
}



inline jule::Ptr<_1ab22a228_Data> _1ab34ed97_builtinCallerStdComptimeRange(jule::Ptr<_1ab22be1c_Eval>* _91839_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _91854_fc, jule::Ptr<_1ab22a228_Data>* ) {
	if (((*((*(_91854_fc))))._field_Args.len() < 1LL)) {
		_1ab22c46c_pushErr((*(_91839_e)).ptr(), (*((*(_91854_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_91854_fc))))._field_Args.len() > 1LL)) {
		_1ab22c46c_pushErr((*(_91839_e)).ptr(), (*((*((*(_91854_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Range", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab22a228_Data> _9279_d = _1ab249368_evalExprKind((*(_91839_e)), (*((*((*(_91854_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_9279_d == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1ab2604b1_comptimeStructFields((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc95d0cb:;
			{
				return _1ab34e968_rangeData(jule::Trait<_1ab137256_comptimeRangeKind>(_1ab2604b1_comptimeStructFields((*(_9279_d))._field_Kind.ptr()), 0));;
			}
		}
		else if ((_1ab2609cd_comptimeEnumFields((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc95c086:;
			{
				return _1ab34e968_rangeData(jule::Trait<_1ab137256_comptimeRangeKind>(_1ab2609cd_comptimeEnumFields((*(_9279_d))._field_Kind.ptr()), 2));;
			}
		}
		else if ((_1ab26179d_comptimeTypeInfos((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc95c0ec:;
			{
				return _1ab34e968_rangeData(jule::Trait<_1ab137256_comptimeRangeKind>(_1ab26179d_comptimeTypeInfos((*(_9279_d))._field_Kind.ptr()), 4));;
			}
		}
		else if ((_1ab260eea_comptimeParams((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc95c163:;
			{
				return _1ab34e968_rangeData(jule::Trait<_1ab137256_comptimeRangeKind>(_1ab260eea_comptimeParams((*(_9279_d))._field_Kind.ptr()), 3));;
			}
		}
		else if ((_1ab261cba_comptimeStatics((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc95bc23:;
			{
				return _1ab34e968_rangeData(jule::Trait<_1ab137256_comptimeRangeKind>(_1ab261cba_comptimeStatics((*(_9279_d))._field_Kind.ptr()), 1));;
			}
		}
		else if ((_1ab262804_comptimeFiles((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc95bc89:;
			{
				return _1ab34e968_rangeData(jule::Trait<_1ab137256_comptimeRangeKind>(_1ab262804_comptimeFiles((*(_9279_d))._field_Kind.ptr()), 5));;
			}
		}
		else {
			_case_begin_1bc95bbac:;
			{
				_1ab22c46c_pushErr((*(_91839_e)).ptr(), (*((*(_91854_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_9279_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Range", 5), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bc95b904:;
	};
}



inline jule::Ptr<_1ab22a228_Data> _1ab3502c6_builtinCallerStdComptimeLine(jule::Ptr<_1ab22be1c_Eval>* _95038_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _95053_fc, jule::Ptr<_1ab22a228_Data>* ) {
	if (((*((*(_95053_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_95038_e)).ptr(), (*((*((*(_95053_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1d8bd00bd_Const> _9549_constant = static__1d8bd050d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*((*((*(_95053_fc))))._field_Token))._field_Row)));;
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab344870_primInt, ._field_Model=jule::Any(_9549_constant, &__jule_any_type19), ._field_Constant=_9549_constant});;
}



inline jule::Ptr<_1ab22a228_Data> _1ab350705_builtinCallerStdComptimeFile(jule::Ptr<_1ab22be1c_Eval>* _96238_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _96253_fc, jule::Ptr<_1ab22a228_Data>* ) {
	if (((*((*(_96253_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_96238_e)).ptr(), (*((*((*(_96253_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab1571cc_comptimeFile>(_1ab1571cc_comptimeFile{._field_file=(*((*((*(_96238_e))))._field_s))._field_file}), 18)}), });;
}



inline jule::Ptr<_1ab22a228_Data> _1ab350b34_builtinCallerStdComptimeFiles(jule::Ptr<_1ab22be1c_Eval>* _97539_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _97554_fc, jule::Ptr<_1ab22a228_Data>* ) {
	if (((*((*(_97554_fc))))._field_Args.len() > 0LL)) {
		_1ab22c46c_pushErr((*(_97539_e)).ptr(), (*((*((*(_97554_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=jule::new_ptr<_1ab25aa1c_TypeKind>(_1ab25aa1c_TypeKind{._field_Kind=jule::Trait<_1ab25a566_Kind>(jule::new_ptr<_1ab155ad2_comptimeFiles>(_1ab155ad2_comptimeFiles{._field_files=(*((*((*(_97539_e))))._field_s))._field_files}), 17)}), });;
}



inline jule::Ptr<_1ab22a228_Data> _1ab351063_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1ab22be1c_Eval>* _98843_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _98858_fc, jule::Ptr<_1ab22a228_Data>* ) {
	if (((*((*(_98858_fc))))._field_Args.len() > 2LL)) {
		_1ab22c46c_pushErr((*(_98843_e)).ptr(), (*((*((*(_98858_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_98858_fc))))._field_Args.len() == 0LL)) {
		_1ab22c46c_pushErr((*(_98843_e)).ptr(), (*((*(_98858_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_98858_fc))))._field_Args.len() == 1LL)) {
		_1ab22c46c_pushErr((*(_98843_e)).ptr(), (*((*(_98858_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_98858_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bc970385:;
			{
				goto _match_end_1bc96dd89;
			}
		}
		else {
			_case_begin_1bc96de00:;
			{
				_1ab22c46c_pushErr((*(_98843_e)).ptr(), (*((*((*(_98858_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1ab22c7d0_pushSuggestion((*(_98843_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc96dd89:;
	};
	jule::Ptr<_1ab0c1e7c_Token> _10099_ident = (*((*((*((*(_98858_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1ab0dd1a7_IdentExpr>(&__jule_any_type79)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_98843_e))))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bc971661:;
			{
				goto _match_end_1bc971287;
			}
		}
		else {
			_case_begin_1bc9712dc:;
			{
				_1ab22c46c_pushErr((*(_98843_e)).ptr(), (*((*(_98858_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bc971287:;
	};
	jule::Ptr<_1ab16aab4_scopeChecker> _10189_sc = (*((*(_98843_e))))._field_lookup.cast_ptr<_1ab16aab4_scopeChecker>(0);;
	jule::Ptr<_1ab259c2a_TypeAlias> _10199_alias = jule::new_ptr<_1ab259c2a_TypeAlias>(_1ab259c2a_TypeAlias{._field_Scope=(*(_10189_sc))._field_tree, ._field_Public=_1ab1a2777_IsPub((*(_10099_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_10099_ident, ._field_Ident=(*(_10099_ident))._field_Kind, ._field_Kind=jule::new_ptr<_1ab262bde_TypeSymbol>(), });;
	jule::Ptr<_1ab22a228_Data> _10299_t = _1ab2496a9_eval1((*(_98843_e)), (*((*(_98858_fc))))._field_Args[1LL]);;
	if ((_10299_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_10299_t))._field_Decl) {
		(*((*(_10199_alias))._field_Kind))._field_Kind=(*(_10299_t))._field_Kind;
	} else {
		jule::Ptr<_1ab14bc71_comptimeTypeInfo> _103613_cti = _1ab261a34_comptimeTypeInfo((*(_10299_t))._field_Kind.ptr());;
		if ((_103613_cti == nullptr)) {
			_1ab22c46c_pushErr((*(_98843_e)).ptr(), (*((*((*(_98858_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1ab22c7d0_pushSuggestion((*(_98843_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_10199_alias))._field_Kind))._field_Kind=(*(_103613_cti))._field_base;
	};
	_1ab17036b_checkTypeAlias(_10189_sc, &(_10199_alias));
	return _1ab255eac_buildVoidData();;
}



inline jule::Ptr<_1ab22a228_Data> _1ab351492_builtinCallerStdMemSizeOf(jule::Ptr<_1ab22be1c_Eval>* _104835_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _104850_fc, jule::Ptr<_1ab22a228_Data>* ) {
	jule::Ptr<_1ab22a228_Data> _10499_result = jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab344496_primUint, });;
	if (((*((*(_104850_fc))))._field_Args.len() < 1LL)) {
		_1ab22c46c_pushErr((*(_104835_e)).ptr(), (*((*(_104850_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10499_result;;
	};
	if (((*((*(_104850_fc))))._field_Args.len() > 1LL)) {
		_1ab22c46c_pushErr((*(_104835_e)).ptr(), (*((*((*(_104850_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab22a228_Data> _10619_d = _1ab249368_evalExprKind((*(_104835_e)), (*((*((*(_104850_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10619_d == nullptr)) {
		return _10499_result;;
	};
	if ((!(_1ab2782a9_validTypeForXof(&((*(_10619_d))._field_Kind))))) {
		_1ab22c46c_pushErr((*(_104835_e)).ptr(), (*((*((*(_104850_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_10619_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_10499_result))._field_Model=jule::Any(jule::new_ptr<_1ab114574_SizeofExprModel>(_1ab114574_SizeofExprModel{._field_Expr=(*(_10619_d))._field_Model}), &__jule_any_type117);
	return _10499_result;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab3518c1_builtinCallerStdMemAlignOf(jule::Ptr<_1ab22be1c_Eval>* _107336_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _107351_fc, jule::Ptr<_1ab22a228_Data>* ) {
	jule::Ptr<_1ab22a228_Data> _10749_result = jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab344496_primUint, });;
	if (((*((*(_107351_fc))))._field_Args.len() < 1LL)) {
		_1ab22c46c_pushErr((*(_107336_e)).ptr(), (*((*(_107351_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10749_result;;
	};
	if (((*((*(_107351_fc))))._field_Args.len() > 1LL)) {
		_1ab22c46c_pushErr((*(_107336_e)).ptr(), (*((*((*(_107351_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab22a228_Data> _10869_d = _1ab249368_evalExprKind((*(_107336_e)), (*((*((*(_107351_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10869_d == nullptr)) {
		return _10749_result;;
	};
	if ((!(_1ab2782a9_validTypeForXof(&((*(_10869_d))._field_Kind))))) {
		_1ab22c46c_pushErr((*(_107336_e)).ptr(), (*((*((*(_107351_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab25add5_Str((*(_10869_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_10749_result))._field_Model=jule::Any(jule::new_ptr<_1ab1191e4_AlignofExprModel>(_1ab1191e4_AlignofExprModel{._field_Expr=(*(_10869_d))._field_Model}), &__jule_any_type118);
	return _10749_result;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab351d00_builtinCallerStdMemFree(jule::Ptr<_1ab22be1c_Eval>* _109833_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _109848_fc, jule::Ptr<_1ab22a228_Data>* ) {
	if (((*((*(_109848_fc))))._field_Args.len() < 1LL)) {
		_1ab22c46c_pushErr((*(_109833_e)).ptr(), (*((*(_109848_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_109848_fc))))._field_Args.len() > 1LL)) {
		_1ab22c46c_pushErr((*(_109833_e)).ptr(), (*((*((*(_109848_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab22a228_Data> _11079_d = _1ab24a17c_evalExpr((*(_109833_e)), (*((*(_109848_fc))))._field_Args[0LL]);;
	if ((_11079_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab25cb51_PerformsRC((*(_11079_d))._field_Kind.ptr())))) {
		_1ab22c46c_pushErr((*(_109833_e)).ptr(), (*((*((*(_109848_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab22a228_Data> _11169_result = _1ab255eac_buildVoidData();;
	(*(_11169_result))._field_Model=jule::Any(jule::new_ptr<_1ab119eb4_FreeExprModel>(_1ab119eb4_FreeExprModel{._field_Expr=(*(_11079_d))._field_Model}), &__jule_any_type33);
	return _11169_result;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab35222e_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1ab22be1c_Eval>* _112145_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _112160_fc, jule::Ptr<_1ab22a228_Data>* ) {
	if (((*((*(_112160_fc))))._field_Args.len() < 1LL)) {
		_1ab22c46c_pushErr((*(_112145_e)).ptr(), (*((*(_112160_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_112160_fc))))._field_Args.len() > 1LL)) {
		_1ab22c46c_pushErr((*(_112145_e)).ptr(), (*((*((*(_112160_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab22a228_Data> _11309_d = _1ab24a17c_evalExpr((*(_112145_e)), (*((*(_112160_fc))))._field_Args[0LL]);;
	if ((_11309_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab2772ca_isBuiltinStrConvertable(&((*(_11309_d))._field_Kind))))) {
		_1ab22c46c_pushErr((*(_112145_e)).ptr(), (*((*((*(_112160_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab22a228_Data>(_1ab22a228_Data{._field_Kind=_1ab343b49_primStr, ._field_Model=jule::Any(jule::new_ptr<_1ab1197dd_IntegratedToStrExprModel>(_1ab1197dd_IntegratedToStrExprModel{._field_Expr=(*(_11309_d))._field_Model}), &__jule_any_type119), });;
}



inline jule::Ptr<_1ab22a228_Data> _1ab35265d_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1ab22be1c_Eval>* _114844_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _114859_fc, jule::Ptr<_1ab22a228_Data>* _114881_d) {
	if ((!(_1ab22ce62_isUnsafe((*(_114844_e)).ptr())))) {
		_1ab22c46c_pushErr((*(_114844_e)).ptr(), (*((*(_114859_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_114859_fc))))._field_Args.len() < 1LL)) {
		_1ab22c46c_pushErr((*(_114844_e)).ptr(), (*((*(_114859_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab22a228_Data> _11589_argd = _1ab24a17c_evalExpr((*(_114844_e)), (*((*(_114859_fc))))._field_Args[0LL]);;
	if ((_11589_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1ab25d16d_Prim((*(_11589_argd))._field_Kind.ptr()) == nullptr) || (!(_1ab266a7d_IsStr(_1ab25d16d_Prim((*(_11589_argd))._field_Kind.ptr()).ptr()))))) {
		_1ab22c46c_pushErr((*(_114844_e)).ptr(), (*((*((*(_114859_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ab25add5_Str((*(_11589_argd))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_1ab22aaec_IsConst(_11589_argd.ptr()))) || (!(_1d8bd4842_IsStr((*(_11589_argd))._field_Constant.ptr()))))) {
		_1ab22c46c_pushErr((*(_114844_e)).ptr(), (*((*((*(_114859_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab22a228_Data> _11739_r = _1ab255eac_buildVoidData();;
	jule::Ptr<_1ab120d00_FnIns> _11759_f = _1ab25e45a_Fn((*((*(_114881_d))))._field_Kind.ptr());;
	if (((*(_11759_f))._field_Generics.len() > 0LL)) {
		(*(_11739_r))._field_Kind=(*((*(_11759_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1ab119bb7_BackendEmitExprModel> _11809_model = jule::new_ptr<_1ab119bb7_BackendEmitExprModel>(_1ab119bb7_BackendEmitExprModel{._field_Code=_1d8bd2246_ReadStr((*(_11589_argd))._field_Constant.ptr()), });;
	if (((*((*(_114859_fc))))._field_Args.len() > 1LL)) {
		(*(_11809_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_114859_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_114859_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1bc998bd8:;
			if (it != expr_end) {
				jule::Ptr<_1ab0db77c_Expr> _118621_arg = *it;
				{
					_11589_argd=_1ab2496a9_eval1((*(_114844_e)), _118621_arg);
					if ((_11589_argd == nullptr)) {
						return nullptr;;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = (*(_11809_model))._field_Exprs; __jule_push_dest.push((*(_11589_argd))._field_Model); };
				}
				_iter_next_1bc998bd8:;
				++it;
				goto _iter_begin_1bc998bd8;
			}
			_iter_end_1bc998bd8:;
		};
	};
	(*(_11739_r))._field_Model=jule::Any(_11809_model, &__jule_any_type25);
	return _11739_r;;
}



inline jule::Ptr<_1ab22a228_Data> _1ab352a8c_builtinCallerStdDebugOut(jule::Ptr<_1ab22be1c_Eval>* _119934_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _119949_fc, jule::Ptr<_1ab22a228_Data>* _119971_d) {
	(*(_119971_d))=_1ab348ca3_builtinCallerOut(_119934_e, _119949_fc, _119971_d);
	if (((*(_119971_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_119971_d))))._field_Model.cast_ptr<_1ab115c7e_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_119971_d));;
}



inline jule::Ptr<_1ab22a228_Data> _1ab352ebb_builtinCallerStdDebugOutln(jule::Ptr<_1ab22be1c_Eval>* _120836_e, jule::Ptr<_1ab0e04a6_FnCallExpr>* _120851_fc, jule::Ptr<_1ab22a228_Data>* _120873_d) {
	(*(_120873_d))=_1ab3491d2_builtinCallerOutln(_120836_e, _120851_fc, _120873_d);
	if (((*(_120873_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_120873_d))))._field_Model.cast_ptr<_1ab116158_BuiltinOutlnCallExprModel>(&__jule_any_type28)))._field_Debug=true;
	return (*(_120873_d));;
}



inline jule::Ptr<_1ac8b6451_FileInfo> _1ac90c8e8_ParseFile(jule::Ptr<_1ab0c7746_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac8b6451_FileInfo> _279_finf = jule::new_ptr<_1ac8b6451_FileInfo>();;
	({
		__jule_tuple_x_1ab0d55ab_Ast__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = _1ac90cec0_parseFileset(_2318_f);
		(*(_279_finf))._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*(_279_finf))._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*(_279_finf))._field_Errors.len() > 0LL)) {
		(*(_279_finf))._field_Ast=nullptr;
	};
	return _279_finf;;
}



inline __jule_tuple_x_1ab0d55ab_Ast__jule_tuple_s_1d7b81cb8_Log _1ac90cec0_parseFileset(jule::Ptr<_1ab0c7746_File> _5521_f) {
	__jule_tuple_x_1ab0d55ab_Ast__jule_tuple_s_1d7b81cb8_Log __jule_func_result;
	jule::Ptr<_1aa10715b_parser> _569_p = jule::new_ptr<_1aa10715b_parser>();;
	_1ac9bc348_parse(_569_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*(_569_p))._field_ast;
	__jule_func_result.__jule_result_arg1 = (*(_569_p))._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab0e7469_ScopeTree> _1d8bd9869_newScope(void) {
	return jule::new_ptr<_1ab0e7469_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1d8bd9b00_isSt(jule::Ptr<_1ab0c1e7c_Token> _499_current, jule::Ptr<_1ab0c1e7c_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*(_499_current))._field_Row));
	__jule_func_result.__jule_result_arg1=((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1d8bda095_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1ab0c1e7c_Token> _619_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_619_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1ab0c29c7_IsBinOp((*(_619_prev))._field_Id) && ((*(_619_prev))._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1d8bda45d_nextStPos(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _699_braceN = 0LL;;
	jule::I64 _709_i = _6833_start;;
	for (; (_709_i < (*(_6815_tokens)).len()); (_709_i)++) {
		{
			jule::Bool _7213_ok = false;;
			jule::Bool _7313_terminated = false;;
			jule::Ptr<_1ab0c1e7c_Token> _749_tok = (*(_6815_tokens))[_709_i];;
			{
				auto &_match_expr{ (*(_749_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1bca2b078:;
					{
						if (((_699_braceN == 0LL) && (_709_i > _6833_start))) {
							if ((!(_1d8bda095_prevIsIncompleteExpr(_6815_tokens, &(_709_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d8bd9b00_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
									_7213_ok = __jule_assign_result.__jule_result_arg0;
									_7313_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7213_ok) {
									goto _julec_label_1bca2ac04;
								};
							};
						};
						(_699_braceN)++;
						goto _iter_next_1bca29d79;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1bca2b100:;
					{
						(_699_braceN)--;
						if (((_699_braceN == 0LL) && ((_709_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d8bd9b00_isSt((*(_6815_tokens))[(_709_i + 1LL)], _749_tok);
								_7213_ok = __jule_assign_result.__jule_result_arg0;
								_7313_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7213_ok) {
								(_709_i)++;
								goto _julec_label_1bca2ac04;
							};
						};
						goto _iter_next_1bca29d79;
					}
				}
				_match_end_1bca2b012:;
			};
			if ((_699_braceN != 0LL)) {
				goto _iter_next_1bca29d79;
			};
			if ((_709_i > _6833_start)) {
				if (_1d8bda095_prevIsIncompleteExpr(_6815_tokens, &(_709_i))) {
					goto _iter_next_1bca29d79;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d8bd9b00_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d8bd9b00_isSt(_749_tok, _749_tok);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7213_ok))) {
				goto _iter_next_1bca29d79;
			};
			_julec_label_1bca2ac04:;
			if (_7313_terminated) {
				(_709_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _709_i;
			__jule_func_result.__jule_result_arg1 = _7313_terminated;
			return __jule_func_result;;
		}
	_iter_next_1bca29d79:;
	}
	_iter_end_1bca29d79:;;
	__jule_func_result.__jule_result_arg0 = _709_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_bool _1aa0d857c_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _13028_tokens) {
	__jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1315_start = (*(_13016_i));;
	jule::Bool _1329_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d8bda45d_nextStPos(&(_13028_tokens), _1315_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1329_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _1349_stTokens = _13028_tokens.slice(_1315_start, (*(_13016_i)));;
	if (_1329_terminated) {
		if ((_1349_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_bool __jule_assign_result = _1aa0d857c_skipSt(_13016_i, _13028_tokens);
				_1349_stTokens = __jule_assign_result.__jule_result_arg0;
				_1329_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _1349_stTokens;
			__jule_func_result.__jule_result_arg1 = _1329_terminated;
			return __jule_func_result;;
		};
		(_1349_stTokens).mut_slice(0LL, (_1349_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1349_stTokens;
	__jule_func_result.__jule_result_arg1 = _1329_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1aa0d87be_stmt>> _1aa0d8b76_splitStmts(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _15220_tokens) {
	jule::Slice<jule::Ptr<_1aa0d87be_stmt>> _1539_stmts = jule::Slice<jule::Ptr<_1aa0d87be_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _1549_pos = 0LL;;
	while ((_1549_pos < (*(_15220_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _15613_stmt;;
			jule::Bool _15619_terminated = false;;
			({
				__jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_bool __jule_assign_result = _1aa0d857c_skipSt(&(_1549_pos), (*(_15220_tokens)));
				_15613_stmt = __jule_assign_result.__jule_result_arg0;
				_15619_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1aa0d87be_stmt>> &__jule_push_dest = _1539_stmts; __jule_push_dest.push(jule::new_ptr<_1aa0d87be_stmt>(_1aa0d87be_stmt{._field_tokens=_15613_stmt, ._field_terminated=_15619_terminated})); };
		}
	_iter_next_1bca35307:;
	}
	_iter_end_1bca35307:;;
	return _1539_stmts;;
}



inline jule::Bool _1aa102002_isTypeOp(jule::U64* _88514_id) {
	return ((((*(_88514_id)) == static_cast<jule::U64>(65LLU)) || ((*(_88514_id)) == static_cast<jule::U64>(54LLU))) || ((*(_88514_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1aa102310_isTypeRange(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _89221_tokens) {
	jule::Bool _8939_op = false;;
	{
		auto expr = _89221_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcadb534:;
		if (it != expr_end) {
			jule::I64 _8949_i = it - expr->begin();
			jule::Ptr<_1ab0c1e7c_Token> _89412_token = *it;
			{
				if (((*(_89412_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_8939_op) {
						return true;;
					};
					jule::I64 _89917_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _90017_lTokens = (*(_89221_tokens)).slice(_8949_i);;
					{
						auto expr = &(_90017_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bcade24b:;
						if (it != expr_end) {
							jule::Ptr<_1ab0c1e7c_Token> _90120_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90120_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1bcae001b:;
										{
											(_89917_rangeN)++;
											goto _iter_next_1bcade24b;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1bcae0093:;
										{
											(_89917_rangeN)--;
											goto _iter_next_1bcade24b;
										}
									}
									_match_end_1bcadee50:;
								};
								if ((_89917_rangeN == 0LL)) {
									return _1aa102002_isTypeOp(&((*(_90120_lToken))._field_Id));;
								};
							}
							_iter_next_1bcade24b:;
							++it;
							goto _iter_begin_1bcade24b;
						}
						_iter_end_1bcade24b:;
					};
					return true;;
				};
				if ((!(_1aa102002_isTypeOp(&((*(_89412_token))._field_Id))))) {
					return false;;
				};
				_8939_op=true;
			}
			_iter_next_1bcadb534:;
			++it;
			_8949_i++;
			goto _iter_begin_1bcadb534;
		}
		_iter_end_1bcadb534:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _1aa1025c9_getBlockExpr(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _92522_tokens) {
	jule::I64 _9269_braceN = 0LL;;
	jule::I64 _9279_skipToNextBraceClose = 0LL;;
	{
		auto expr = _92522_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcae19bd:;
		if (it != expr_end) {
			jule::I64 _9289_i = it - expr->begin();
			jule::Ptr<_1ab0c1e7c_Token> _92812_tok = *it;
			{
				{
					auto &_match_expr{ (*(_92812_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1bcae28d1:;
						{
							if (((((*(_92522_tokens)).len() - _9289_i) > 1LL) && ((*((*(_92522_tokens))[(_9289_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9279_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1bcae2958:;
						{
							if (((_9269_braceN > 0LL) || (_9279_skipToNextBraceClose > 0LL))) {
								if ((_9279_skipToNextBraceClose > 0LL)) {
									(_9279_skipToNextBraceClose)--;
								};
								(_9269_braceN)++;
								goto _match_end_1bcae27e3;
							};
							return (*(_92522_tokens)).slice(0LL, _9289_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bcae29d0:;
						{
							(_9269_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bcae2a57:;
						{
							(_9269_braceN)--;
						}
					}
					_match_end_1bcae27e3:;
				};
			}
			_iter_next_1bcae19bd:;
			++it;
			_9289_i++;
			goto _iter_begin_1bcae19bd;
		}
		_iter_end_1bcae19bd:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_sx_1ab0c1e7c_Token _1aa102992_splitDelim(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _95720_tokens, jule::U64 _95738_delim) {
	__jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_sx_1ab0c1e7c_Token __jule_func_result;
	jule::I64 _9589_rangeN = 0LL;;
	{
		auto expr = _95720_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcae5b15:;
		if (it != expr_end) {
			jule::I64 _9599_i = it - expr->begin();
			jule::Ptr<_1ab0c1e7c_Token> _95912_token = *it;
			{
				{
					auto &_match_expr{ (*(_95912_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bcae6907:;
						{
							(_9589_rangeN)++;
							goto _iter_next_1bcae5b15;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bcae697e:;
						{
							(_9589_rangeN)--;
						}
					}
					else if (_match_expr == _95738_delim) {
						_case_begin_1bcae6a06:;
						{
							if ((_9589_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _97221_l = (*(_95720_tokens)).slice(0LL, _9599_i);;
								jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _97321_r = (*(_95720_tokens)).slice((_9599_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _97221_l;
								__jule_func_result.__jule_result_arg1 = _97321_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1bcae682a:;
				};
			}
			_iter_next_1bcae5b15:;
			++it;
			_9599_i++;
			goto _iter_begin_1bcae5b15;
		}
		_iter_end_1bcae5b15:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1aa102c5b_findLowestPrecOp(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _98322_tokens) {
	jule::U8 _9889_prec = 255LLU;;
	jule::I64 _9899_precPos = -1LL;;
	jule::I64 _9919_braceN = 0LL;;
	jule::Bool _9929_skipToNextBraceOpen = false;;
	{
		auto expr = _98322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcae9432:;
		if (it != expr_end) {
			jule::I64 _9939_i = it - expr->begin();
			jule::Ptr<_1ab0c1e7c_Token> *_99312_token = it;
			{
				{
					auto &_match_expr{ (*((*(_99312_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1bcaea279:;
						{
							_9929_skipToNextBraceOpen=false;
							goto _case_begin_1bcaea301;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1bcaea301:;
						{
							(_9919_braceN)++;
							goto _iter_next_1bcae9432;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1bcaea378:;
						{
							(_9919_braceN)--;
							goto _iter_next_1bcae9432;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1bcaea400:;
						{
							_9929_skipToNextBraceOpen=true;
							goto _iter_next_1bcae9432;
						}
					}
					_match_end_1bcaea18b:;
				};
				{
					
					if (_9929_skipToNextBraceOpen) {
						_case_begin_1bcaeb863:;
						{
							goto _iter_next_1bcae9432;
						}
					}
					else if ((_9939_i == 0LL)) {
						_case_begin_1bcaeb8da:;
						{
							goto _iter_next_1bcae9432;
						}
					}
					else if ((_9919_braceN > 0LL)) {
						_case_begin_1bcaeb962:;
						{
							goto _iter_next_1bcae9432;
						}
					}
					else if ((!(_1ab0c29c7_IsBinOp((*((*(_99312_token))))._field_Id)))) {
						_case_begin_1bcaeb9d9:;
						{
							goto _iter_next_1bcae9432;
						}
					}
					_match_end_1bcaeb610:;
				};
				jule::Ptr<_1ab0c1e7c_Token> _10229_left = (*(_98322_tokens))[(_9939_i - 1LL)];;
				if ((_1ab0c26b9_IsUnaryOp((*(_10229_left))._field_Id) || ((*(_10229_left))._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1bcae9432;
				};
				if (((_9939_i > 1LL) && ((*(_10229_left))._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1ab0c1e7c_Token> _103013_lleft = (*(_98322_tokens))[(_9939_i - 2LL)];;
					if (((*(_103013_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_99312_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*((*(_99312_token))))._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1bcae9432;
						};
					};
				};
				jule::U8 _10399_p = _1ab0c2301_Prec((*(_99312_token)).ptr());;
				if (((_10399_p != 0LLU) && (_10399_p <= _9889_prec))) {
					_9889_prec=_10399_p;
					_9899_precPos=_9939_i;
				};
			}
			_iter_next_1bcae9432:;
			++it;
			_9939_i++;
			goto _iter_begin_1bcae9432;
		}
		_iter_end_1bcae9432:;
	};
	return _9899_precPos;;
}



inline jule::Ptr<_1ab0dd1a7_IdentExpr> _1aa103025_buildIdentExpr(jule::Ptr<_1ab0c1e7c_Token>* _104824_token) {
	return jule::new_ptr<_1ab0dd1a7_IdentExpr>(_1ab0dd1a7_IdentExpr{._field_Token=(*(_104824_token)), ._field_Ident=(*((*(_104824_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_int _1aa1032de_getRangeExprTokens(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _105628_tokens) {
	__jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10579_rangeN = 0LL;;
	jule::I64 _10589_i = ((*(_105628_tokens)).len() - 1LL);;
	for (; (_10589_i >= 0LL); (_10589_i)--) {
		{
			jule::Ptr<_1ab0c1e7c_Token> _10609_tok = (*(_105628_tokens))[_10589_i];;
			{
				auto &_match_expr{ (*(_10609_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1bcb0312d:;
					{
						(_10579_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1bcb031a5:;
					{
						(_10579_rangeN)--;
					}
				}
				_match_end_1bcb030b7:;
			};
			if ((_10579_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105628_tokens)).slice(0LL, _10589_i);
				__jule_func_result.__jule_result_arg1 = _10579_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1bcb02517:;
	}
	_iter_end_1bcb02517:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10579_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1aa104136_checkAssignTokens(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1ab0c6855_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _209_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb8e241:;
		if (it != expr_end) {
			jule::Ptr<_1ab0c1e7c_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*((*(_2112_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bcb8ed24:;
						{
							(_209_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bcb8ed9b:;
						{
							(_209_braceN)--;
						}
					}
					_match_end_1bcb8ec58:;
				};
				{
					
					if ((_209_braceN < 0LL)) {
						_case_begin_1bcb90c37:;
						{
							return false;;
						}
					}
					else if ((_209_braceN > 0LL)) {
						_case_begin_1bcb90c9d:;
						{
							goto _iter_next_1bcb8e241;
						}
					}
					else if (_1ab0c6dd8_IsAssignOp((*((*(_2112_t))))._field_Id) || ((*((*(_2112_t))))._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1bcb90d25:;
						{
							return true;;
						}
					}
					_match_end_1bcb90b8d:;
				};
			}
			_iter_next_1bcb8e241:;
			++it;
			goto _iter_begin_1bcb8e241;
		}
		_iter_end_1bcb8e241:;
	};
	return false;;
}



inline _1d7b81cb8_Log _1aa105313_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1ab0c7746_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _1d7b81cb8_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_1d7b8222a_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _1aa10580d_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1ab0c1e7c_Token> _735_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_735_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _789_rangeN = 1LL;;
	jule::I64 _795_start = (*(_6915_i));;
	for (; ((_789_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1ab0c1e7c_Token> _819_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_819_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1bcb95a94:;
					{
						(_789_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1bcb95b1b:;
					{
						(_789_rangeN)--;
					}
				}
				_match_end_1bcb95a2d:;
			};
		}
	_iter_next_1bcb94e06:;
	}
	_iter_end_1bcb94e06:;;
	return (*(_6959_tokens)).slice(_795_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_sx_1ab0c1e7c_Token _1aa105ac7_rangeLast(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _9919_tokens) {
	__jule_tuple_sx_1ab0c1e7c_Token__jule_tuple_sx_1ab0c1e7c_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1035_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1035_first != static_cast<jule::U64>(73LLU)) && (_1035_first != static_cast<jule::U64>(76LLU))) && (_1035_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1099_braceN = 0LL;;
	jule::I64 _1109_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1109_i >= 0LL); (_1109_i)--) {
		{
			jule::Ptr<_1ab0c1e7c_Token> _1129_token = (*(_9919_tokens))[_1109_i];;
			{
				auto &_match_expr{ (*(_1129_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1bcb9969c:;
					{
						(_1099_braceN)++;
						goto _iter_next_1bcb98b52;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1bcb99724:;
					{
						(_1099_braceN)--;
					}
				}
				_match_end_1bcb99636:;
			};
			if ((_1099_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1109_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1109_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1bcb98b52:;
	}
	_iter_end_1bcb98b52:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1ab0c1e7c_Token__jule_tuple_s_1d7b81cb8_Log _1aa10607d_parts(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1ab0c1e7c_Token__jule_tuple_s_1d7b81cb8_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> _14213_parts = nullptr;;
	jule::Slice<_1d7b81cb8_Log> _14313_errors = nullptr;;
	jule::I64 _1459_rangeN = 0LL;;
	jule::I64 _1469_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb977ee:;
		if (it != expr_end) {
			jule::I64 _1479_i = it - expr->begin();
			jule::Ptr<_1ab0c1e7c_Token> _14712_token = *it;
			{
				{
					auto &_match_expr{ (*(_14712_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bcb9d78e:;
						{
							(_1459_rangeN)++;
							goto _iter_next_1bcb977ee;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bcb9d816:;
						{
							(_1459_rangeN)--;
						}
					}
					_match_end_1bcb9d6c3:;
				};
				if ((_1459_rangeN > 0LL)) {
					goto _iter_next_1bcb977ee;
				};
				if (((*(_14712_token))._field_Id == _13733_id)) {
					if ((_13746_exprMust && ((_1479_i - _1469_last) <= 0LL))) {
						_1d7b81cb8_Log _16617_err = _1aa105313_makeErr((*(_14712_token))._field_Row, (*(_14712_token))._field_Column, &((*(_14712_token))._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_1d7b81cb8_Log> &__jule_push_dest = _14313_errors; __jule_push_dest.push(_16617_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_1469_last, _1479_i)); };
					_1469_last=static_cast<jule::I64>((_1479_i + 1LL));
				};
			}
			_iter_next_1bcb977ee:;
			++it;
			_1479_i++;
			goto _iter_begin_1bcb977ee;
		}
		_iter_end_1bcb977ee:;
	};
	if ((_1469_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_1469_last)); };
	} else if ((!(_13746_exprMust))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _14213_parts;
	__jule_func_result.__jule_result_arg1 = _14313_errors;
	return __jule_func_result;;
}



inline jule::U64 _1aa106347_getCloseOfBrace(jule::U64 _18320_left) {
	{
		auto &_match_expr{ _18320_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1bcba195c:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1bcba19c3:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1bcba1a39:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1bcba18e6:;
			{
				return _18320_left;;
			}
		}
		_match_end_1bcb9c99c:;
	};
}



inline _1d7b81cb8_Log _1aa106776_compilerErr(jule::Ptr<_1ab0c1e7c_Token>* _19617_token, jule::Str* _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	return _1d7b81cb8_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_19617_token))))._field_Row, ._field_Column=(*((*(_19617_token))))._field_Column, ._field_Path=(*((*((*(_19617_token))))._field_File))._field_Path, ._field_Text=_1d7b8222a_Logf((*(_19633_fmt)), _19646_args), ._field_Line=_1ab0c8725_GetRow((*((*(_19617_token))))._field_File.ptr(), (*((*(_19617_token))))._field_Row), };;
}



inline void _1aa106b1c_pushSuggestion(_1d7b81cb8_Log* _20730_log, jule::Str _20741_fmt, jule::Slice<jule::Any> _20754_args) {
	(*(_20730_log))._field_Suggestion=_1d7b8222a_Logf(_20741_fmt, _20754_args);
}



inline jule::Ptr<_1ab0d7448_TypeDecl> _1ac9bcd2c_buildVoidType(void) {
	return jule::new_ptr<_1ab0d7448_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1ab448149_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_1bce6624e:;
			{
				__jule_func_result.__jule_result_arg0=_1d7b84e86_IsWindows(_1d7c942b5_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_1bce662b5:;
			{
				__jule_func_result.__jule_result_arg0=_1d7b85261_IsDarwin(_1d7c942b5_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_1bce65e96:;
			{
				__jule_func_result.__jule_result_arg0=_1d7b8552a_IsLinux(_1d7c942b5_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_1bce6600c:;
			{
				__jule_func_result.__jule_result_arg0=_1d7b861b8_IsUnix(_1d7c942b5_Os);
			}
		}
		else {
			_case_begin_1bce65946:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1bce65d86:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1ab44828c_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_1bce684c6:;
			{
				__jule_func_result.__jule_result_arg0=_1d7b8586b_IsI386(_1d7c9457e_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_1bce681a7:;
			{
				__jule_func_result.__jule_result_arg0=_1d7b85b35_IsAmd64(_1d7c9457e_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_1bce6821d:;
			{
				__jule_func_result.__jule_result_arg0=_1d7b85dee_IsArm64(_1d7c9457e_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_1bce68284:;
			{
				__jule_func_result.__jule_result_arg0=_1d7b86828_Is64Bit(_1d7c9457e_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_1bce682ea:;
			{
				__jule_func_result.__jule_result_arg0=_1d7b8655e_Is32Bit(_1d7c9457e_Arch);
			}
		}
		else {
			_case_begin_1bce67b57:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1bce68097:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab46374c_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1d7ae0980_Base(_5029_p);
	jule::I64 _525_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_525_n - _1d7ae03ec_Ext(_5029_p).len()));;
	jule::Str _589_a1 = jule::Str();;
	jule::Str _619_a2 = jule::Str();;
	jule::I64 _649_i = _1d7ac1ae8_FindLastByte(_5029_p, '_');;
	if ((_649_i == -1LL)) {
		jule::Bool _6713_ok = false;;
		jule::Bool _6721_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab448149_checkOs(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6721_exist) {
			return _6713_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab44828c_checkArch(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6721_exist)) || _6713_ok);;
	};
	if (((_649_i + 1LL) >= _525_n)) {
		return true;;
	};
	_589_a1=_5029_p.slice((_649_i + 1LL));
	(_5029_p).mut_slice(0LL, _649_i);;
	_649_i=static_cast<jule::I64>(_1d7ac1ae8_FindLastByte(_5029_p, '_'));
	if ((_649_i != -1LL)) {
		_619_a2=_5029_p.slice((_649_i + 1LL));
	};
	if ((_619_a2).empty()) {
		jule::Bool _8813_ok = false;;
		jule::Bool _8821_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab448149_checkOs(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8821_exist) {
			return _8813_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab44828c_checkArch(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8821_exist)) || _8813_ok);;
	};
	jule::Bool _969_ok = false;;
	jule::Bool _9617_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab44828c_checkArch(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9617_exist) {
		if ((!(_969_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab448149_checkOs(_619_a2);
			_969_ok = __jule_assign_result.__jule_result_arg0;
			_9617_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9617_exist)) || _969_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab448149_checkOs(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9617_exist)) || _969_ok);;
}



inline void _1ab4648c4_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1d7c942b5_Os); };
	if (_1d7b861b8_IsUnix(_1d7c942b5_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1ab464b49_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1d7c9457e_Arch); };
	if (_1d7b86828_Is64Bit(_1d7c9457e_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1d7b8655e_Is32Bit(_1d7c9457e_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1ab464e35_initVars(jule::Slice<jule::Str>* _5518_vars, _1ab4645a5_CompileInfo* _5532_info) {
	_1ab4648c4_setOsVars(_5518_vars);
	_1ab464b49_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1bce72ec5:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1bce7304c:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1bce72e70:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bce741d5:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bce7424b:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bce742c3:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1bce74416:;
	};
}



inline jule::Slice<jule::U8> _1ac9c1e63_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__202529833_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_1d7c931c6_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1d7b81cb8_Log _1ac9c223d_flatCompilerErr(jule::Str _4120_text) {
	return _1d7b81cb8_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1ac9c6a5b_pushPasses(jule::Ptr<_1ab187b14_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*((*(_11120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcea2697:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _11217_f = *it;
			{
				_julec_label_1bcea305a:;
				{
					auto expr = &((*(_11217_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bcea3225:;
					if (it != expr_end) {
						_1ab1254b9_Pass _11416_pass = *it;
						{
							if ((_11416_pass._field_Text).empty()) {
								goto _iter_next_1bcea3225;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bcea416b:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1bcea3225;
										};
									}
									_iter_next_1bcea416b:;
									++it;
									goto _iter_begin_1bcea416b;
								}
								_iter_end_1bcea416b:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1bcea3225:;
						++it;
						goto _iter_begin_1bcea3225;
					}
					_iter_end_1bcea3225:;
				};
			}
			_iter_next_1bcea2697:;
			++it;
			goto _iter_begin_1bcea2697;
		}
		_iter_end_1bcea2697:;
	};
}



inline jule::Slice<jule::Str> _1ac9c6e24_getAllUniquePasses(jule::Ptr<_1ab187b14_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1ab184bdd_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1ac9c6a5b_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcea57aa:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> _13217_u = *it;
			{
				if ((!((*(_13217_u))._field_Binded))) {
					_1ac9c6a5b_pushPasses(&((*(_13217_u))._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1bcea57aa:;
			++it;
			goto _iter_begin_1bcea57aa;
		}
		_iter_end_1bcea57aa:;
	};
	return _12913_passes;;
}



inline _1ab4645a5_CompileInfo _1ac9c7133_buildCompileInfo(void) {
	_1ab4645a5_CompileInfo _1429_info = _1ab4645a5_CompileInfo{._field_Prod=_2014c4290_Production, ._field_Test=_2014c3833_Test, };;
	{
		auto &_match_expr{ _2014c19c9_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1bcea6a86:;
			{
				_1429_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1bcea6b41:;
			{
				_1429_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_1bcea5425:;
	};
	{
		auto &_match_expr{ _2014c3019_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bcea7702:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bcea5e1a:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bcea6ec6:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_1bcea7944:;
	};
	return _1429_info;;
}



inline void _1acb36935_EliminateDefines(jule::Ptr<_1ac9c51db_IR>* _29026_ir) {
	jule::Ptr<_1acaee26b_ObjectDeadCode> _2919_ocd = static__1acaee711_new(_29026_ir);;
	_1acb36605_elimanate(_2919_ocd);
}



inline jule::Ptr<_1ab0d6865_Directive> _1acb36ced_findDirective(jule::Slice<jule::Ptr<_1ab0d6865_Directive>>* _29623_directives, jule::Str _29654_tag) {
	{
		auto expr = _29623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcee1076:;
		if (it != expr_end) {
			jule::Ptr<_1ab0d6865_Directive> _29717_dr = *it;
			{
				if (((*((*(_29717_dr))._field_Tag))._field_Kind == _29654_tag)) {
					return _29717_dr;;
				};
			}
			_iter_next_1bcee1076:;
			++it;
			goto _iter_begin_1bcee1076;
		}
		_iter_end_1bcee1076:;
	};
	return nullptr;;
}



inline jule::Bool _1acb37172_hasDirective(jule::Slice<jule::Ptr<_1ab0d6865_Directive>>* _30618_directives, jule::Str _30649_tag) {
	return (_1acb36ced_findDirective(&((*(_30618_directives))), _30649_tag) != nullptr);;
}



inline jule::Bool _1acb3753a_isTraitMethod(jule::Ptr<_1ab10acb8_StructIns>* _31123_owner, jule::Ptr<_1ab120d00_FnIns>* _31143_f) {
	{
		auto expr = &((*((*((*(_31123_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcee22b9:;
		if (it != expr_end) {
			jule::Ptr<_1ab131195_Trait> _31217_t = *it;
			{
				if ((_1ab131d44_FindMethod(_31217_t.ptr(), (*((*((*(_31143_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1bcee22b9:;
			++it;
			goto _iter_begin_1bcee22b9;
		}
		_iter_end_1bcee22b9:;
	};
	return false;;
}



inline void _1acb3b53e_eliminateDeadCodeOfScope(jule::Ptr<_1ab1637b0_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1ab166153_Label>> _2425_labels = jule::Slice<jule::Ptr<_1ab166153_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1ab16652c_GotoSt>> _2435_gotos = jule::Slice<jule::Ptr<_1ab16652c_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1acb3833d_scopeDeadCode> _2449_sdc = jule::new_ptr<_1acb3833d_scopeDeadCode>(_1acb3833d_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&((*(_24133_s))._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1ab166153_Label>>>)((&(_2425_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1ab16652c_GotoSt>>>)((&(_2435_gotos)))), });;
	{
		_1acb3b20e_optimizeStmts(_2449_sdc);
	};
}



inline void _1acb3b7b4_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1ab11cdeb_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd030a55:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _25517_func = *it;
			{
				{
					auto expr = &((*(_25517_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd0336a1:;
					if (it != expr_end) {
						jule::Ptr<_1ab120d00_FnIns> _25621_ins = *it;
						{
							_1acb3b53e_eliminateDeadCodeOfScope((*(_25621_ins))._field_Scope);
						}
						_iter_next_1bd0336a1:;
						++it;
						goto _iter_begin_1bd0336a1;
					}
					_iter_end_1bd0336a1:;
				};
			}
			_iter_next_1bd030a55:;
			++it;
			goto _iter_begin_1bd030a55;
		}
		_iter_end_1bd030a55:;
	};
}



inline void _1acb3b9e5_eliminateFunctionsScopePackage(jule::Ptr<_1ab187b14_Package>* _26240_pkg) {
	{
		auto expr = &((*((*(_26240_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd0334c5:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _26317_f = *it;
			{
				_1acb3b7b4_eliminateScopeFunctions(&((*(_26317_f))._field_Funcs));
			}
			_iter_next_1bd0334c5:;
			++it;
			goto _iter_begin_1bd0334c5;
		}
		_iter_end_1bd0334c5:;
	};
}



inline void _1acb3bc9d_eliminateScopePackage(jule::Ptr<_1ab187b14_Package>* _26831_pkg) {
	_1acb3b9e5_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1acb3bece_EliminateScopes(jule::Ptr<_1ac9c51db_IR>* _27325_ir) {
	jule::I64 _2749_i = ((*((*(_27325_ir))))._field_Used.len() - 1LL);;
	for (; (_2749_i >= 0LL); (_2749_i)--) {
		{
			jule::Ptr<_1ab184bdd_ImportInfo> _27613_u = (*((*(_27325_ir))))._field_Used[_2749_i];;
			if ((!((*(_27613_u))._field_Binded))) {
				_1acb3bc9d_eliminateScopePackage(&((*(_27613_u))._field_Package));
			};
		}
	_iter_next_1bd0350a9:;
	}
	_iter_end_1bd0350a9:;;
	_1acb3bc9d_eliminateScopePackage(&((*((*(_27325_ir))))._field_Main));
}



inline jule::Uintptr _1ab35330c_typeData(jule::Any* _1714_m) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(((*(_1714_m))).type)));;
}



inline jule::Bool _1ab3536c5_equalConst(jule::Ptr<_1d8bd00bd_Const> _2115_l, jule::Ptr<_1d8bd00bd_Const> _2126_r) {
	{
		
		if (_1d8bd408e_IsI64(_2115_l.ptr())) {
			_case_begin_1bd0b7bca:;
			{
				return (_1d8bd408e_IsI64(_2126_r.ptr()) && (_1d8bd1993_ReadI64(_2115_l.ptr()) == _1d8bd1993_ReadI64(_2126_r.ptr())));;
			}
		}
		else if (_1d8bd4325_IsU64(_2115_l.ptr())) {
			_case_begin_1bd0b7c52:;
			{
				return (_1d8bd4325_IsU64(_2126_r.ptr()) && (_1d8bd1c29_ReadU64(_2115_l.ptr()) == _1d8bd1c29_ReadU64(_2126_r.ptr())));;
			}
		}
		else if (_1d8bd4ac8_IsF64(_2115_l.ptr())) {
			_case_begin_1bd0b800a:;
			{
				return (_1d8bd4ac8_IsF64(_2126_r.ptr()) && (_1d8bd24cc_ReadF64(_2115_l.ptr()) == _1d8bd24cc_ReadF64(_2126_r.ptr())));;
			}
		}
		else if (_1d8bd4842_IsStr(_2115_l.ptr())) {
			_case_begin_1bd0b8071:;
			{
				return (_1d8bd4842_IsStr(_2126_r.ptr()) && (_1d8bd2246_ReadStr(_2115_l.ptr()) == _1d8bd2246_ReadStr(_2126_r.ptr())));;
			}
		}
		else if (_1d8bd45ab_IsBool(_2115_l.ptr())) {
			_case_begin_1bd0b80d7:;
			{
				return (_1d8bd45ab_IsBool(_2126_r.ptr()) && (_1d8bd1eb0_ReadBool(_2115_l.ptr()) == _1d8bd1eb0_ReadBool(_2126_r.ptr())));;
			}
		}
		else if (_1d8bd4d5e_IsNil(_2115_l.ptr())) {
			_case_begin_1bd0b814d:;
			{
				return _1d8bd4d5e_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1bd0b7aba:;
			{
				return false;;
			}
		}
		_match_end_1bd0b7889:;
	};
}



inline jule::Bool _1ab353a49_equalCasting(jule::Ptr<_1ab1117d5_CastingExprModel> _4017_l, jule::Ptr<_1ab1117d5_CastingExprModel> _4039_r) {
	if ((!(_1ab25b226_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1ab3548e6_equalModels((*(_4017_l))._field_Expr, (*(_4039_r))._field_Expr);;
}



inline jule::Bool _1ab353d79_equalUnary(jule::Ptr<_1ab110581_UnaryExprModel> _4715_l, jule::Ptr<_1ab110581_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*((*(_4735_r))._field_Op))._field_Id) || ((*((*(_4715_l))._field_Op))._field_Kind != (*((*(_4735_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return _1ab3548e6_equalModels((*((*(_4715_l))._field_Expr))._field_Model, (*((*(_4735_r))._field_Expr))._field_Model);;
}



inline jule::Bool _1ab3541ed_equalIndexing(jule::Ptr<_1ab112a17_IndexingExprModel> _5418_l, jule::Ptr<_1ab112a17_IndexingExprModel> _5441_r) {
	return (_1ab3548e6_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*((*(_5441_r))._field_Expr))._field_Model) && _1ab3548e6_equalModels((*((*(_5418_l))._field_Index))._field_Model, (*((*(_5441_r))._field_Index))._field_Model));;
}



inline jule::Bool _1ab354572_equalBinary(jule::Ptr<_1ab1101a7_BinopExprModel> _5916_l, jule::Ptr<_1ab1101a7_BinopExprModel> _5936_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*((*(_5936_r))._field_Op))._field_Id) || ((*((*(_5916_l))._field_Op))._field_Kind != (*((*(_5936_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return (_1ab3548e6_equalModels((*((*(_5916_l))._field_Left))._field_Model, (*((*(_5936_r))._field_Left))._field_Model) && _1ab3548e6_equalModels((*((*(_5916_l))._field_Right))._field_Model, (*((*(_5936_r))._field_Right))._field_Model));;
}



inline jule::Bool _1ab3548e6_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1ab35330c_typeData(&(_7016_l)) != _1ab35330c_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd0c6ba6:;
			{
				return (_7016_l.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8) == _7030_r.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bd0c6c2d:;
			{
				jule::Ptr<_1ab114c28_StructSubIdentExprModel> _789_li = _7016_l.cast_ptr<_1ab114c28_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_1ab114c28_StructSubIdentExprModel> _799_ri = _7030_r.cast_ptr<_1ab114c28_StructSubIdentExprModel>(&__jule_any_type97);;
				return (((*(_789_li))._field_Field == (*(_799_ri))._field_Field) && _1ab3548e6_equalModels((*((*(_789_li))._field_Expr))._field_Model, (*((*(_799_ri))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bd0c6ca5:;
			{
				return _1ab3536c5_equalConst(_7016_l.cast_ptr<_1d8bd00bd_Const>(&__jule_any_type19), _7030_r.cast_ptr<_1d8bd00bd_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1bd0c6eb4:;
			{
				return _1ab353a49_equalCasting(_7016_l.cast_ptr<_1ab1117d5_CastingExprModel>(&__jule_any_type92), _7030_r.cast_ptr<_1ab1117d5_CastingExprModel>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bd0c702a:;
			{
				return _1ab353d79_equalUnary(_7016_l.cast_ptr<_1ab110581_UnaryExprModel>(&__jule_any_type110), _7030_r.cast_ptr<_1ab110581_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bd0c7091:;
			{
				return _1ab3541ed_equalIndexing(_7016_l.cast_ptr<_1ab112a17_IndexingExprModel>(&__jule_any_type45), _7030_r.cast_ptr<_1ab112a17_IndexingExprModel>(&__jule_any_type45));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1bd0c7107:;
			{
				return _1ab354572_equalBinary(_7016_l.cast_ptr<_1ab1101a7_BinopExprModel>(&__jule_any_type111), _7030_r.cast_ptr<_1ab1101a7_BinopExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1bd0c6b40:;
			{
				return false;;
			}
		}
		_match_end_1bd0c6a41:;
	};
}



inline jule::Bool _1ab35cc2e_isStdPackage(jule::Str* _45118_f, jule::Str _45126_p) {
	return _1d7abd93b_HasPrefix((*(_45118_f)), _1d7ae0133_Join(jule::Slice<jule::Str>::make({_1d7c936d2_PathStdlib,_45126_p})));;
}



inline jule::Bool _1ab35d03c_isConstantValidConditionalCase(jule::Ptr<_1ab163bcd_If>* _45536_i) {
	{
		auto &_match_expr{ (*((*(_45536_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bd0cc294:;
			{
				jule::Ptr<_1d8bd00bd_Const> _4589_c = (*((*(_45536_i))))._field_Expr.cast_ptr<_1d8bd00bd_Const>(&__jule_any_type19);;
				return (_1d8bd45ab_IsBool(_4589_c.ptr()) && _1d8bd1eb0_ReadBool(_4589_c.ptr()));;
			}
		}
		_match_end_1bd0cc23e:;
	};
	return false;;
}



inline jule::Bool _1ab35d306_isUnreachableExpr(jule::Any* _46423_expr) {
	{
		auto &_match_expr{ (*(_46423_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bd0cc65c:;
			{
				jule::Ptr<_1d8bd00bd_Const> _4679_c = (*(_46423_expr)).cast_ptr<_1d8bd00bd_Const>(&__jule_any_type19);;
				return (_1d8bd45ab_IsBool(_4679_c.ptr()) && (!(_1d8bd1eb0_ReadBool(_4679_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1bd0cc6c3:;
			{
				jule::Ptr<_1ab1101a7_BinopExprModel> _4709_m = (*(_46423_expr)).cast_ptr<_1ab1101a7_BinopExprModel>(&__jule_any_type111);;
				if (((*((*(_4709_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1ab35d306_isUnreachableExpr(&((*((*(_4709_m))._field_Left))._field_Model)) || _1ab35d306_isUnreachableExpr(&((*((*(_4709_m))._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1bd0cc607:;
	};
	return false;;
}



inline jule::Bool _1ab35d647_isConstantValidMatchCase(jule::Ptr<_1ab16852e_Case>* _47930_case) {
	{
		auto expr = &((*((*(_47930_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd0cdad1:;
		if (it != expr_end) {
			jule::Ptr<_1ab22a228_Data> *_48012_expr = it;
			{
				if (((_1ab22aaec_IsConst((*(_48012_expr)).ptr()) && _1d8bd45ab_IsBool((*((*(_48012_expr))))._field_Constant.ptr())) && _1d8bd1eb0_ReadBool((*((*(_48012_expr))))._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1bd0cdad1:;
			++it;
			goto _iter_begin_1bd0cdad1;
		}
		_iter_end_1bd0cdad1:;
	};
	return false;;
}



inline jule::Bool _1ab35d911_isUnreachableConditionalCase(jule::Ptr<_1ab163bcd_If>* _48834_i) {
	return _1ab35d306_isUnreachableExpr(&((*((*(_48834_i))))._field_Expr));;
}



inline jule::Bool _1ab35dbca_isUnreachableMatchCase(jule::Ptr<_1ab16852e_Case>* _49228_case) {
	{
		auto expr = &((*((*(_49228_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd0d2e15:;
		if (it != expr_end) {
			jule::Ptr<_1ab22a228_Data> *_49312_expr = it;
			{
				if ((!(_1ab35d306_isUnreachableExpr(&((*((*(_49312_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1bd0d2e15:;
			++it;
			goto _iter_begin_1bd0d2e15;
		}
		_iter_end_1bd0d2e15:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1ab3669d5_checkForBitShiftOpt(jule::Ptr<_1ab10ebac_OperandExprModel>* _46125_l, jule::Ptr<_1ab10ebac_OperandExprModel>* _46148_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1d8bce3b9_IsInt(_1ab25add5_Str((*((*(_46125_l))))._field_Kind.ptr())))) || (!(_1d8bce3b9_IsInt(_1ab25add5_Str((*((*(_46148_r))))._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_46148_r))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bd12b821:;
			{
				goto _match_end_1bd12c888;
			}
		}
		else {
			_case_begin_1bd12c8dd:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1bd12c888:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1d8bd29e9_AsU64((*((*(_46148_r))))._field_Model.cast_ptr<_1d8bd00bd_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4755_j = _1d8b7d5cc_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4765_z = static_cast<jule::U64>(_4755_j);;
	if ((static_cast<jule::F64>(_4765_z) != _4755_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4765_z;
	return __jule_func_result;;
}



inline jule::Bool _1ab366d9d_areSameLvalueExprModel(jule::Any* _48428_l, jule::Any* _48443_r) {
	{
		auto &_match_expr{ (*(_48428_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd13088b:;
			{
				return ((*(_48443_r)) == (*(_48428_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bd130902:;
			{
				{
					auto &_match_expr{ (*(_48443_r)) };
					
					if (_match_expr.type == &__jule_any_type97) {
						_case_begin_1bd131293:;
						{
							goto _match_end_1bd13153a;
						}
					}
					else {
						_case_begin_1bd131590:;
						{
							return false;;
						}
					}
					_match_end_1bd13153a:;
				};
				jule::Ptr<_1ab114c28_StructSubIdentExprModel> _4979_lsi = (*(_48428_l)).cast_ptr<_1ab114c28_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_1ab114c28_StructSubIdentExprModel> _4989_rsi = (*(_48443_r)).cast_ptr<_1ab114c28_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_4979_lsi))._field_Field != (*(_4989_rsi))._field_Field)) {
					return false;;
				};
				return _1ab366d9d_areSameLvalueExprModel(&((*((*(_4979_lsi))._field_Expr))._field_Model), &((*((*(_4989_rsi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bd130968:;
			{
				{
					auto &_match_expr{ (*(_48443_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1bd133680:;
						{
							jule::Ptr<_1ab110581_UnaryExprModel> _51013_ul = (*(_48428_l)).cast_ptr<_1ab110581_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_1ab110581_UnaryExprModel> _51113_ur = (*(_48443_r)).cast_ptr<_1ab110581_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_51013_ul))._field_Op))._field_Id != (*((*(_51113_ur))._field_Op))._field_Id) || ((*((*(_51013_ul))._field_Op))._field_Kind != (*((*(_51113_ur))._field_Op))._field_Kind))) {
								return false;;
							};
							return _1ab366d9d_areSameLvalueExprModel(&((*((*(_51013_ul))._field_Expr))._field_Model), &((*((*(_51113_ur))._field_Expr))._field_Model));;
						}
					}
					_match_end_1bd13362a:;
				};
			}
		}
		_match_end_1bd13023c:;
	};
	return false;;
}



inline void _1ab3696b9_PushOptLevel(jule::I64 _2917_level) {
	jule::Bool _305_l1 = (_2917_level >= static_cast<jule::I64>(1LL));;
	_1ab367574_Copy=_305_l1;
	_1ab367882_Deadcode=_305_l1;
	_1ab367b4b_Append=_305_l1;
	_1ab367e59_Math=_305_l1;
	_1ab368223_Access=_305_l1;
	_1ab3684dc_Inline=_305_l1;
	_1ab3687a6_Ptr=_305_l1;
	_1ab368b80_Cond=_305_l1;
	_1ab368e49_Str=_305_l1;
	_1ab369213_Slice=_305_l1;
	_1ab3694cc_Assign=_305_l1;
}



inline void _1acb46439_detectEnabled(void) {
	_1acb4413a_exprEnabled=(((_1ab3687a6_Ptr || _1ab367e59_Math) || _1ab368223_Access) || _1ab368b80_Cond);
	_1acb44448_scopeEnabled=(((((_1ab368b80_Cond || _1ab367b4b_Append) || _1ab367574_Copy) || _1ab368e49_Str) || _1ab369213_Slice) || _1ab3694cc_Assign);
}



inline void _1acb702dc_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1d7c931c6_Exit(1LL);
}



inline jule::U64 _1ad2c7504_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::Bool _1ad204b90_isCopyOptimizable(jule::Ptr<_1ab22a228_Data>* _82323_expr) {
	if ((!((*((*(_82323_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_82323_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bd26ebd9:;
			{
				return false;;
			}
		}
		_match_end_1bd26eb84:;
	};
	return true;;
}



inline jule::Bool _1ad205058_isIterCopyOptimizable(jule::Ptr<_1ab22a228_Data>* _83427_expr, jule::Ptr<_1ab1c7a66_Var>* _83441_v) {
	if (((!((*((*(_83427_expr))))._field_Lvalue)) && (!(_1ab25c39d_Mutable((*((*(_83427_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_83441_v))))._field_Mutable)) && (!((*((*(_83427_expr))))._field_Mutable)));;
}



inline jule::Str _1ad215189_decomposeCommonEsq(jule::U8 _147623_b) {
	{
		auto &_match_expr{ _147623_b };
		
		if (_match_expr == '\\') {
			_case_begin_1bd369e05:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1bd36a565:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1bd36a0c0:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1bd36a136:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1bd36a19c:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1bd36a213:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1bd36a730:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1bd36a796:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1bd36a80c:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1bd36a873:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1bd36a059:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bd360857:;
	};
}



inline jule::Str _1ad215497_sbtoa(jule::U8 _150310_b) {
	if ((_150310_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_150310_b < 128LLU)) {
		jule::Str _15089_seq = _1ad215189_decomposeCommonEsq(_150310_b);;
		if (!(_15089_seq).empty()) {
			return _15089_seq;;
		};
		if (((32LL <= _150310_b) && (_150310_b <= 126LLU))) {
			return jule::Str::from_byte(_150310_b);;
		};
	};
	jule::Str _15165_seq = _1d8bbe40e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_150310_b)), 8LL);;
	if ((_15165_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _15165_seq);;
	};
	return (jule::Str::lit("\\", 1) + _15165_seq);;
}



inline void _1ad215783_cstrBytes(_1d7ad2eb1_StrBuilder* _152319_s, jule::Str _152334_ctx) {
	{
		auto expr = &(_152334_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd36ede9:;
		if (it != expr_end) {
			jule::U8 *_152412_b = it;
			{
				_1d7adba8b_WriteStr(_152319_s, _1ad215497_sbtoa((*(_152412_b))));
			}
			_iter_next_1bd36ede9:;
			++it;
			goto _iter_begin_1bd36ede9;
		}
		_iter_end_1bd36ede9:;
	};
}



inline void _1ad215ab3_cstrLit(_1d7ad2eb1_StrBuilder* _152917_s, jule::Str _152932_ctx) {
	_1d7adbd44_WriteByte(_152917_s, '\"');
	_1ad215783_cstrBytes(_152917_s, _152932_ctx);
	_1d7adbd44_WriteByte(_152917_s, '\"');
}



inline void _1ad215e59_ftoa(_1d7ad2eb1_StrBuilder* _153514_s, jule::F64 _153529_f, jule::I64 _153537_bitsize) {
	if ((_153537_bitsize != 32LL)) {
		if ((_153529_f == static_cast<jule::F64>(static_cast<jule::I64>(_153529_f)))) {
			_1ad216245_itoa(_153514_s, static_cast<jule::I64>(static_cast<jule::I64>(_153529_f)));
			return;;
		};
		if ((_153529_f == static_cast<jule::F64>(static_cast<jule::U64>(_153529_f)))) {
			_1ad216531_utoa(_153514_s, static_cast<jule::U64>(static_cast<jule::U64>(_153529_f)));
			return;;
		};
	};
	jule::Str _15465_m = _1d8ba7c77_FmtFloat(_153529_f, 'f', -1LL, _153537_bitsize);;
	_1d7adba8b_WriteStr(_153514_s, _15465_m);
	if ((!(_1d7ac3446_Contains(_15465_m, jule::Str::lit(".", 1))))) {
		_1d7adba8b_WriteStr(_153514_s, jule::Str::lit(".0", 2));
	};
}



inline void _1ad216245_itoa(_1d7ad2eb1_StrBuilder* _155314_s, jule::I64 _155329_x) {
	{
		
		if ((_155329_x == jule::MAX_I64)) {
			_case_begin_1bd374409:;
			{
				_1d7adba8b_WriteStr(_155314_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_155329_x == jule::MIN_I64)) {
			_case_begin_1bd374481:;
			{
				_1d7adba8b_WriteStr(_155314_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1bd3742e9:;
	};
	_1d7adba8b_WriteStr(_155314_s, _1d8bbe7c7_FmtInt(_155329_x, 10LL));
	if (_1d7b86828_Is64Bit(jule::Str::lit("arm64", 5))) {
		_1d7adbd44_WriteByte(_155314_s, 'L');
	};
	_1d7adbd44_WriteByte(_155314_s, 'L');
}



inline void _1ad216531_utoa(_1d7ad2eb1_StrBuilder* _157014_s, jule::U64 _157029_x) {
	{
		
		if ((_157029_x == jule::MAX_U64)) {
			_case_begin_1bd376582:;
			{
				_1d7adba8b_WriteStr(_157014_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1bd376483:;
	};
	_1d7adba8b_WriteStr(_157014_s, _1d8bbe40e_FmtUint(_157029_x, 10LL));
	if (_1d7b86828_Is64Bit(jule::Str::lit("arm64", 5))) {
		_1d7adbd44_WriteByte(_157014_s, 'L');
	};
	_1d7adba8b_WriteStr(_157014_s, jule::Str::lit("LU", 2));
}



inline jule::Bool _1ad21690a_isForwarded(jule::Ptr<_1ab1637b0_Scope>* _158417_s) {
	jule::Any _15855_last = (*((*(_158417_s))))._field_Stmts[((*((*(_158417_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _15855_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bd37871b:;
			{
				{
					auto &_match_expr{ (*(_15855_last.cast_ptr<_1ab22a228_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1bd379585:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1bd37951e:;
						{
							return false;;
						}
					}
					_match_end_1bd3794b9:;
				};
			}
		}
		else {
			_case_begin_1bd37881a:;
			{
				return true;;
			}
		}
		_match_end_1bd377c48:;
	};
}



inline jule::Bool _1ad216bc4_isExprComesFromBind(jule::Ptr<_1ab22a228_Data>* _159925_d) {
	{
		auto &_match_expr{ (*((*(_159925_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd379c7d:;
			{
				return (*((*((*(_159925_d))))._field_Model.cast_ptr<_1ab1c7a66_Var>(&__jule_any_type8)))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bd379ce4:;
			{
				return (*((*((*((*((*(_159925_d))))._field_Model.cast_ptr<_1ab114c28_StructSubIdentExprModel>(&__jule_any_type97)))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1bd379c17:;
			{
				return false;;
			}
		}
		_match_end_1bd379bb2:;
	};
}



inline jule::Bool _1ad216e8d_isAny(jule::Ptr<_1ab25aa1c_TypeKind>* _161115_t) {
	if ((_1ab25dba7_TypeEnum((*(_161115_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1ab2635e6_Prim> _16155_prim = _1ab25d16d_Prim((*(_161115_t)).ptr());;
	return ((_16155_prim != nullptr) && _1ab266d14_IsAny(_16155_prim.ptr()));;
}



inline void _1ad2db848_iterFiles(jule::Ptr<_1ab187b14_Package>* _135119_pkg, jule::Fn<void(jule::Ptr<_1ab224d9e_SymbolTable>*)> _135134_f) {
	{
		auto expr = &((*((*(_135119_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd55e160:;
		if (it != expr_end) {
			jule::Ptr<_1ab224d9e_SymbolTable> _135217_file = *it;
			{
				_135134_f(&(_135217_file));
			}
			_iter_next_1bd55e160:;
			++it;
			goto _iter_begin_1bd55e160;
		}
		_iter_end_1bd55e160:;
	};
}



inline jule::Str _1ad2dbb56_concatAllParts(jule::Slice<jule::Ptr<_1ab0c1e7c_Token>> _135819_parts) {
	jule::I64 _13599_n = 0LL;;
	{
		auto expr = &(_135819_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd55ed64:;
		if (it != expr_end) {
			jule::Ptr<_1ab0c1e7c_Token> *_136012_part = it;
			{
				_13599_n+=(*((*(_136012_part))))._field_Kind.len();
			}
			_iter_next_1bd55ed64:;
			++it;
			goto _iter_begin_1bd55ed64;
		}
		_iter_end_1bd55ed64:;
	};
	if ((_13599_n == 0LL)) {
		return jule::Str();;
	};
	_1d7ad2eb1_StrBuilder _13669_s = static__1d7ad327a_New(_13599_n);;
	{
		auto expr = &(_135819_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd55ed0e:;
		if (it != expr_end) {
			jule::Ptr<_1ab0c1e7c_Token> *_136712_p = it;
			{
				_1d7adba8b_WriteStr(&_13669_s, (*((*(_136712_p))))._field_Kind);
			}
			_iter_next_1bd55ed0e:;
			++it;
			goto _iter_begin_1bd55ed0e;
		}
		_iter_end_1bd55ed0e:;
	};
	return _1d7adc383_Str(&_13669_s);;
}



inline jule::Bool _1ad2dbeca_containsTraitMethod(jule::Ptr<_1ab131195_Trait>* _137429_t, jule::Str* _137441_ident) {
	{
		auto expr = &((*((*(_137429_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5623d8:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _137512_m = *it;
			{
				if (((*(_137512_m))._field_Ident == (*(_137441_ident)))) {
					return true;;
				};
			}
			_iter_next_1bd5623d8:;
			++it;
			goto _iter_begin_1bd5623d8;
		}
		_iter_end_1bd5623d8:;
	};
	return false;;
}



inline void _1ad2dc30a_pushMethodsFromInherit(jule::Ptr<_1ab131195_Trait>* _138632_dest, jule::Ptr<_1ab131195_Trait>* _138651_src) {
	_1ad2dc5e6_pushMethodsFromInherits(_138632_dest, _138651_src);
	{
		auto expr = &((*((*(_138651_src))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd562dab:;
		if (it != expr_end) {
			jule::Ptr<_1ab11cdeb_Fn> _138817_m = *it;
			{
				if ((!(_1ad2dbeca_containsTraitMethod(_138632_dest, &((*(_138817_m))._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_1ab11cdeb_Fn>> &__jule_push_dest = (*((*(_138632_dest))))._field_Methods; __jule_push_dest.push(_138817_m); };
				};
			}
			_iter_next_1bd562dab:;
			++it;
			goto _iter_begin_1bd562dab;
		}
		_iter_end_1bd562dab:;
	};
}



inline void _1ad2dc5e6_pushMethodsFromInherits(jule::Ptr<_1ab131195_Trait>* _139733_dest, jule::Ptr<_1ab131195_Trait>* _139752_src) {
	{
		auto expr = &((*((*(_139752_src))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd563e9a:;
		if (it != expr_end) {
			jule::Ptr<_1ab262bde_TypeSymbol> _139817_inh = *it;
			{
				jule::Ptr<_1ab131195_Trait> _139913_t2 = _1ab25e977_Trait((*(_139817_inh))._field_Kind.ptr());;
				_1ad2dc30a_pushMethodsFromInherit(_139733_dest, &(_139913_t2));
			}
			_iter_next_1bd563e9a:;
			++it;
			goto _iter_begin_1bd563e9a;
		}
		_iter_end_1bd563e9a:;
	};
}



inline jule::Bool _1ad2dc8b0_isOpMethod(jule::Ptr<_1ab11cdeb_Fn>* _140516_m) {
	if ((((*((*(_140516_m))))._field_Generics.len() > 0LL) || ((*((*(_140516_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1ab120d00_FnIns> _14095_mi = (*((*(_140516_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1ad2dcb79_isHeadDecl(jule::Ptr<_1ab11cdeb_Fn>* _142120_m) {
	if ((((*((*(_142120_m))))._field_Generics.len() > 0LL) || ((*((*(_142120_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1ad2dc8b0_isOpMethod(_142120_m)) {
		return true;;
	};
	jule::Ptr<_1ab120d00_FnIns> _14289_mi = (*((*(_142120_m))))._field_Instances[0LL];;
	;
	return static__1ab1c8eb8_Dispose(_1ab10bd30_FindMethod((*(_14289_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Ptr<_1ab0d6865_Directive> _1ad2eb748_findDirective(jule::Slice<jule::Ptr<_1ab0d6865_Directive>>* _48023_directives, jule::Str _48054_tag) {
	{
		auto expr = _48023_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6a63d9:;
		if (it != expr_end) {
			jule::Ptr<_1ab0d6865_Directive> _48117_dr = *it;
			{
				if (((*((*(_48117_dr))._field_Tag))._field_Kind == _48054_tag)) {
					return _48117_dr;;
				};
			}
			_iter_next_1bd6a63d9:;
			++it;
			goto _iter_begin_1bd6a63d9;
		}
		_iter_end_1bd6a63d9:;
	};
	return nullptr;;
}



inline jule::Bool _1ad2ebb11_hasDirective(jule::Slice<jule::Ptr<_1ab0d6865_Directive>>* _49018_directives, jule::Str _49049_tag) {
	return (_1ad2eb748_findDirective(&((*(_49018_directives))), _49049_tag) != nullptr);;
}



inline jule::Bool _1ad2ebdca_shouldInitialized(jule::Ptr<_1ab25aa1c_TypeKind>* _49727_t) {
	jule::Ptr<_1ab2635e6_Prim> _4985_prim = _1ab25d16d_Prim((*(_49727_t)).ptr());;
	if ((_4985_prim != nullptr)) {
		return ((!(_1ab266d14_IsAny(_4985_prim.ptr()))) && (!(_1ab266a7d_IsStr(_4985_prim.ptr()))));;
	};
	{
		
		if ((_1ab25d404_Sptr((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1bd6a908a:;
			{
				return false;;
			}
		}
		else if ((_1ab25ec0d_Map((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1bd6a9101:;
			{
				return false;;
			}
		}
		else if ((_1ab25e1c4_Slc((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1bd6a9178:;
			{
				return false;;
			}
		}
		else if ((_1ab25e977_Trait((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1bd6a9200:;
			{
				return false;;
			}
		}
		else if ((_1ab25e45a_Fn((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1bd6a9277:;
			{
				return false;;
			}
		}
		else if ((_1ab25de3d_Arr((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1bd6a92ee:;
			{
				jule::Ptr<_1ab269e16_Arr> _51413_arr = _1ab25de3d_Arr((*(_49727_t)).ptr());;
				return _1ad2ebdca_shouldInitialized(&((*(_51413_arr))._field_Elem));;
			}
		}
		else if ((_1ab25e6e1_Struct((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1bd6a9376:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bd6a8331:;
			{
				return true;;
			}
		}
		_match_end_1bd6a8111:;
	};
}



inline void _1d7c976c5_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1d7c9794a_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1d7c976c5_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _419_max = _1d7c974d8_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1d7c974d8_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd74a46c:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _439_n = (*(_4212_k))[0LL].len();;
				if ((_439_n > _419_max)) {
					_419_max=_439_n;
				};
			}
			_iter_next_1bd74a46c:;
			++it;
			goto _iter_begin_1bd74a46c;
		}
		_iter_end_1bd74a46c:;
	};
	_1d7ad2eb1_StrBuilder _499_s = static__1d7ad327a_New(32LL);;
	;
	{
		auto expr = &(_1d7c974d8_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd74b979:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_1d7adba8b_WriteStr(&_499_s, (*(_5112_part))[0LL]);
				_1d7adba8b_WriteStr(&_499_s, _1d7abd144_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(((_419_max - (*(_5112_part))[0LL].len()) + 5LL))));
				_1d7adba8b_WriteStr(&_499_s, (*(_5112_part))[1LL]);
				if (((_519_i + 1LL) < 5LL)) {
					_1d7adbd44_WriteByte(&_499_s, '\n');
				};
			}
			_iter_next_1bd74b979:;
			++it;
			_519_i++;
			goto _iter_begin_1bd74b979;
		}
		_iter_end_1bd74b979:;
	};
	jule::outln(_499_s);
}



inline void _1d7c97b7b_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1d7c976c5_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.15 @master", 18));
}



inline void _1d7c97d79_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1d7c98000_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1d7c98231_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1d7c976c5_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1055_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1055_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1bd7529b3:;
			{
				_1d7c97d79_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1bd7528d6:;
			{
				_1d7c98000_toolDistarch();
			}
		}
		else {
			_case_begin_1bd7514d9:;
			{
				_1d7c976c5_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1055_cmd));
			}
		}
		_match_end_1bd752496:;
	};
}



inline void _1d7c98462_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1d7c976c5_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.15 @master", 33));
	jule::outln(jule::Str::lit("architecture: arm64", 19));
	jule::outln(jule::Str::lit("operating system: linux", 23));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _2014c19c9_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _2014c3019_CppStd));
}



inline void _1d7c98770_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1d7c976c5_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1bd7561c0:;
			{
				({
					auto except = static__202529bc9_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1d7c976c5_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1bd754cb2:;
			{
				_1d7c976c5_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1bd755c19:;
	};
}



inline jule::Bool _1d7c98a39_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1bd75708e:;
			{
				_1d7c9794a_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1bd757116:;
			{
				_1d7c97b7b_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1bd75718d:;
			{
				_1d7c98231_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1bd757215:;
			{
				_1d7c98462_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1bd757721:;
			{
				_1d7c98770_mod(_15320_args);
			}
		}
		else {
			_case_begin_1bd757028:;
			{
				return false;;
			}
		}
		_match_end_1bd756940:;
	};
	return true;;
}



inline void _1d7c98bb0_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1899_args = _20261914d_Args();;
	if ((_1899_args.len() < 2LL)) {
		_1d7c98bb0_showInfo();
		return;;
	};
	if (_1d7c98a39_processCommand(&(_1899_args))) {
		return;;
	};
	_1ad4cd5d9_compileCommand(&(_1899_args));
}



inline void _1ad4ca3d8_init(void) {
	_2014c19c9_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_202528d82_File> _1ad4ca6b3_openOutput(jule::Str* _4316_path) {
	jule::Str _445_dir = _1d7ae0d26_Dir((*(_4316_path)));;
	({
		auto except = static__202527b0b_Of(_445_dir);
		if (!except.ok()) {
			({
				auto except = static__1d7ae34bb_Create(_445_dir);
				if (!except.ok()) {
					_1acb702dc_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__202529569_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1acb702dc_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1ad4ca839_clearObjects(void) {
	({
		auto except = static__20252627a_Remove(_1ad4cba38_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1d7ae36ec_Remove(_1ad4c9b79_OutDir);
}



inline void _1ad4cab69_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1d7c40e54_Cmd> _739_cmd = static__1d7c41372_New(_7214_compiler);;
	(*(_739_cmd))._field_Args=_1d7ac30c2_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _1d7c41570_Spawn(_739_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1bd75d606:;
					{
						static__1acb6c96b_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1bd75cddb:;
					{
						static__1acb6c96b_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1bd75d0ea:;
					{
						static__1acb6c96b_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1bd75d051:;
			};
			_1acb702dc_Throw(jule::Str());
		}
	});
	jule::I64 _865_status = ({
		auto except = _1d7c41a04_Wait(_739_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:15"));
		(except.result);
	});;
	if ((_865_status != 0LL)) {
		jule::Str _889_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _2014c19c9_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1acb6c96b_Print(jule::Str::lit("\033[31m", 5), _889_errorMessage);
		_1acb702dc_Throw(jule::Str());
	};
	_1ad4ca839_clearObjects();
}



inline jule::Bool _1ad4cae33_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1005_offset = _1d7ac1ae8_FindLastByte(_9920_path, '.');;
	if ((_1005_offset == -1LL)) {
		return false;;
	};
	return _1d7b75141_IsValidCppExt(_9920_path.slice(_1005_offset));;
}



inline void _1ad4cb164_pushCompCmdClang(_1d7ad2eb1_StrBuilder* _10726_cmd) {
	_1d7adba8b_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_1d7adba8b_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _2014c3019_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bd761c25:;
			{
				_1d7adba8b_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bd760c8a:;
			{
				_1d7adba8b_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bd761d57:;
			{
				_1d7adba8b_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1bd761bc0:;
	};
	_1d7adbd44_WriteByte(_10726_cmd, ' ');
	if (_2014c4290_Production) {
		_1d7adba8b_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_1d7adba8b_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_1d7adba8b_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1d7adba8b_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1d7adba8b_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1ad4cb395_pushCompCmdGcc(_1d7ad2eb1_StrBuilder* _13324_cmd) {
	_1d7adba8b_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_1d7adba8b_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _2014c3019_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bd764de3:;
			{
				_1d7adba8b_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bd763430:;
			{
				_1d7adba8b_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bd763496:;
			{
				_1d7adba8b_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1bd764d8d:;
	};
	_1d7adbd44_WriteByte(_13324_cmd, ' ');
	if (_2014c4290_Production) {
		_1d7adba8b_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_1d7adba8b_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1d7adba8b_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1d7adba8b_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1ad4cb829_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1ac9c51db_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1606_compiler = &(_2014c2cb6_CompilerPath);;
	_1d7ad2eb1_StrBuilder _1619_cmd = static__1d7ad327a_New(64LL);;
	{
		auto &_match_expr{ _2014c19c9_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1bd7679a6:;
			{
				_1ad4cb395_pushCompCmdGcc(&(_1619_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1bd7680d3:;
			{
				_1ad4cb164_pushCompCmdClang(&(_1619_cmd));
			}
		}
		_match_end_1bd767b71:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7682e2:;
		if (it != expr_end) {
			jule::Ptr<_1ab184bdd_ImportInfo> *_17112_u = it;
			{
				if (((*((*(_17112_u))))._field_Binded && _1ad4cae33_isCppSourceFile((*((*(_17112_u))))._field_Path))) {
					_1d7adba8b_WriteStr(&_1619_cmd, (*((*(_17112_u))))._field_Path);
					_1d7adbd44_WriteByte(&_1619_cmd, ' ');
				};
			}
			_iter_next_1bd7682e2:;
			++it;
			goto _iter_begin_1bd7682e2;
		}
		_iter_end_1bd7682e2:;
	};
	if (!(_1ad4ca22e_Out).empty()) {
		_1d7adba8b_WriteStr(&_1619_cmd, jule::Str::lit("-o ", 3));
		_1d7adba8b_WriteStr(&_1619_cmd, _1ad4ca22e_Out);
		_1d7adbd44_WriteByte(&_1619_cmd, ' ');
	};
	_1d7adba8b_WriteStr(&_1619_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd76adc7:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				_1d7adbd44_WriteByte(&_1619_cmd, ' ');
				_1d7adba8b_WriteStr(&_1619_cmd, (*(_18612_pass)));
			}
			_iter_next_1bd76adc7:;
			++it;
			goto _iter_begin_1bd76adc7;
		}
		_iter_end_1bd76adc7:;
	};
	if (_1d7c942b5_Os.equal("windows", 7)) {
		_1d7adba8b_WriteStr(&_1619_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1606_compiler));
	__jule_func_result.__jule_result_arg1 = _1d7adc383_Str(&_1619_cmd);
	return __jule_func_result;;
}



inline jule::Str _1ad4cba38_getCompilePath(void) {
	return _1d7ae0133_Join(jule::Slice<jule::Str>::make({_1ad4c9b79_OutDir,_1ad4c9e65_OutName}));;
}



inline void _1ad4cbc69_applyTargetIndependentOptimizations(jule::Ptr<_1ac9c51db_IR>* _20545_ir) {
	jule::Ptr<_1acb44657_Optimizer> _2069_opt = static__1acb44aca_New(_20545_ir);;
	_1acb461b4_Optimize(_2069_opt.ptr());
}



inline void _1ad4cbde0_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _2014c19c9_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1bd76c5c1:;
			{
				_1acb702dc_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1bd76d0e9:;
			{
				if ((_2014c2cb6_CompilerPath).empty()) {
					_2014c2cb6_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1bd76d160:;
			{
				if ((_2014c2cb6_CompilerPath).empty()) {
					_2014c2cb6_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1bd76d083:;
			{
				_1acb702dc_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _2014c19c9_Compiler));
			}
		}
		_match_end_1bd76cb98:;
	};
}



inline void _1ad4cc121_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1acb702dc_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1ad4cc352_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1acb702dc_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1ad4cc583_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1acb702dc_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2485_parts = _1d7ac30c2_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2485_parts.len() != 2LL)) {
		_1acb702dc_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2535_os;;
	jule::Str _2539_arch;;
	({
		jule::Str ___jule_assign_arg = _2485_parts[0LL];
		jule::Str _1___jule_assign_arg = _2485_parts[1LL];
		_2535_os = ___jule_assign_arg;
		_2539_arch = _1___jule_assign_arg;
	});
	if ((!_2535_os.equal("native", 6))) {
		_1ad4cc352_checkTargetOs(_2535_os);
		_1d7c942b5_Os=_2535_os;
	};
	if ((!_2539_arch.equal("native", 6))) {
		_1ad4cc121_checkTargetArch(_2539_arch);
		_1d7c9457e_Arch=_2539_arch;
	};
	_1d8bc3ee6_UpdateTarget();
}



inline void _1ad4cc7b4_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1acb702dc_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1bd774e47:;
			{
				goto _match_end_1bd7745b7;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1bd774ead:;
			{
				_1ab3696b9_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1bd7747c6:;
			{
				_1acb702dc_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1bd7745b7:;
	};
}



inline void _1ad4ccb49_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _2014c3019_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bd774b4a:;
			{
				goto _match_end_1bd7753ed;
			}
		}
		else {
			_case_begin_1bd775453:;
			{
				_1acb702dc_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _2014c3019_CppStd));
			}
		}
		_match_end_1bd7753ed:;
	};
}



inline jule::Slice<jule::Str> _1ad4ccdad_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2939_opt = jule::Str::lit("L0", 2);;
	jule::Str _2949_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1ad4c4b85_FlagSet> _2969_fs = static__1ad4c4e71_New();;
	_1bd777389_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2939_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1bd777389_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2949_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1bd777389_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1ad4ca22e_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1bd77e58e_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2014c32a0_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1bd77e58e_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2014c3569_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1bd777389_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2014c19c9_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1bd777389_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2014c2cb6_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1bd77e58e_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2014c4290_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1bd77e58e_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2014c3aec_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1bd77e58e_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2014c3ec6_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1bd777389_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2014c3019_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1bd77e58e_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab367574_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1bd77e58e_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab367882_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1bd77e58e_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab367b4b_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1bd77e58e_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab367e59_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1bd77e58e_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab368223_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1bd77e58e_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab3684dc_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1bd77e58e_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab3687a6_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1bd77e58e_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab368b80_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1bd77e58e_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab368e49_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1bd77e58e_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab369213_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1bd77e58e_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab3694cc_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	jule::Slice<jule::Str> _3219_content = ({
		auto except = _1ad4c5d0c_Parse(_2969_fs.ptr(), (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1acb702dc_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1ad4cbde0_checkCompilerFlag();
	_1ad4ccb49_checkCppStdFlag();
	_1ad4cc583_checkTargetFlag(&(_2949_target));
	_1ad4cc7b4_checkOptFlag(&(_2939_opt));
	return _3219_content;;
}



inline void _1ad4cd0de_setupSemaFlags(jule::I64* _33424_flags) {
	if (_2014c32a0_Shadowing) {
		(*(_33424_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1ac9c51db_IR> _1ad4cd3a8_buildIr(jule::Slice<jule::Str>* _34013_args) {
	jule::Slice<jule::Str> _3415_content = _1ad4ccdad_checkFlags(_34013_args);;
	jule::I64 _3439_semaFlags = static_cast<jule::I64>(0LL);;
	_1ad4cd0de_setupSemaFlags(&(_3439_semaFlags));
	if ((_3415_content.len() == 0LL)) {
		_1acb702dc_Throw(_1d7b8222a_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3415_content.len() > 1LL)) {
		_1acb702dc_Throw((jule::Str::lit("undefined content: ", 19) + _3415_content[1LL]));
	};
	jule::Str _3519_path;;
	jule::Bool _35115_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d7ae06b6_Abs(_3415_content[0LL]);
		_3519_path = __jule_assign_result.__jule_result_arg0;
		_35115_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35115_ok))) {
		_1acb702dc_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_20252ae72_Status> _3575_inf = ({
		auto except = static__202527b0b_Of(_1d7c936d2_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1acb702dc_Throw(_1d7b8222a_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_20252ae72_Status>(nullptr);});
	});;
	if ((!(_20252b34b_IsDir(_3575_inf.ptr())))) {
		_1acb702dc_Throw(_1d7b8222a_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1ac9c51db_IR> _3659_ir;;
	jule::Slice<_1d7b81cb8_Log> _36513_logs;;
	({
		__jule_tuple_x_1ac9c51db_IR__jule_tuple_s_1d7b81cb8_Log __jule_assign_result = static__1ac9c564d_Build(_3519_path, _3439_semaFlags);
		_3659_ir = __jule_assign_result.__jule_result_arg0;
		_36513_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3659_ir == nullptr) && (_36513_logs == nullptr))) {
		_1acb702dc_Throw(_1d7b8222a_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_3519_path, &__jule_any_type4)})));
	};
	if ((_36513_logs != nullptr)) {
		static__1acb6e819_PrintLogs(&(_36513_logs));
		_1acb702dc_Throw(jule::Str());
	};
	return _3659_ir;;
}



inline void _1ad4cd5d9_compileCommand(jule::Slice<jule::Str>* _38024_args) {
	((*(_38024_args))).mut_slice(1LL);;
	if ((*(_38024_args))[0LL].equal("test", 4)) {
		_2014c3833_Test=true;
		((*(_38024_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1ac9c51db_IR> _3869_ir = _1ad4cd3a8_buildIr(_38024_args);;
	;
	if ((!(_2014c3833_Test))) {
		jule::Ptr<_1ab11cdeb_Fn> _39113_main = _1ab189198_FindFn((*(_3869_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_39113_main == nullptr)) {
			_1acb702dc_Throw(_1d7b8222a_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1ad4cbc69_applyTargetIndependentOptimizations(&(_3869_ir));
	_1ac9c66b5_Order(_3869_ir.ptr());
	jule::Str _4025_compPath = _1ad4cba38_getCompilePath();;
	jule::Str _4035_compiler;;
	jule::Str _40315_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1ad4cb829_genCompileCmd(_4025_compPath, &(_3869_ir));
		_4035_compiler = __jule_assign_result.__jule_result_arg0;
		_40315_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1ad2ce8b3_ObjectCoder> _4059_oc = static__1ad2cecae_New(&(_3869_ir), _1ad2ccd9a_SerializationInfo{._field_Compiler=_4035_compiler, ._field_CompilerCommand=_40315_compilerCmd});;
	if (_2014c3833_Test) {
		jule::Ptr<_1ad217d3a_TestCoder> _41013_tc = static__1ad21827a_New(&(_4059_oc));;
		_1ad219600_Serialize(_41013_tc);
	} else {
		_1ad2db45d_Serialize(_4059_oc);
	};
	jule::Ptr<_202528d82_File> _4169_file = _1ad4ca6b3_openOutput(&(_4025_compPath));;
	({
		auto except = _20252670e_Write(_4169_file.ptr(), _1d7adcd34_Buf(&(*(_4059_oc))._field_Obj));
		if (!except.ok()) {
			_1acb702dc_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _20252a416_Close(_4169_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:420:5"));
	});
	if ((!(_2014c3569_Transpilation))) {
		_1ad4cab69_compileIr(_4035_compiler, _40315_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1d7c946b1_init();
	_1d8bc416c_init();
	_1ad4ca3d8_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}