// Auto generated by JuleC.
// JuleC version: jule0.0.12 @master
// Date: 12/5/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>

struct _205008298_Importer{};
struct _2050aa4b0_Kind{};
struct _2050c6520_Lookup{};
struct _1d7e1c0db_CommonFlag{};
struct _2026ea5d6_Range16;
struct _2026eaa59_Range32;
struct _2026eaecc_RangeTable;
struct _2027ad6aa_acceptRange;
struct _201817e74_lazyBuff;
struct _2009634dd_DirEntry;
struct _200a45cb8_Directory;
struct _200a47a01_File;
struct _20174529c_Status;
struct _2028a7045_Cmd;
struct _20285b7ad_Log;
struct _202b89679_Token;
struct _202b8ea14_File;
struct _202b91a6b_kindPair;
struct _202b97665_lex;
struct _204307202_Ast;
struct _204307da1_Node;
struct _20430829c_Directive;
struct _20434156b_TypeDecl;
struct _204341b32_IdentTypeDecl;
struct _204342281_SubIdentTypeDecl;
struct _204342638_NamespaceTypeDecl;
struct _204342924_SptrTypeDecl;
struct _204342d20_SlcTypeDecl;
struct _20434310b_TupleTypeDecl;
struct _2043433e7_PtrTypeDecl;
struct _204343a79_ArrTypeDecl;
struct _2043442c7_MapTypeDecl;
struct _20434467e_RetTypeDecl;
struct _204345a8c_Expr;
struct _204345d78_RangeExpr;
struct _20434642d_UseExpr;
struct _204346719_TupleExpr;
struct _204346ac1_LitExpr;
struct _2043472ca_UnsafeExpr;
struct _20434774d_IdentExpr;
struct _204347e57_UnaryExpr;
struct _20434830e_VariadicExpr;
struct _2043486b6_CastExpr;
struct _204348a6d_NsSelectionExpr;
struct _204348ee1_SubIdentExpr;
struct _204349464_BinopExpr;
struct _204349a6e_FnCallExpr;
struct _20434a4ed_FieldExprPair;
struct _20434ac4b_StructLit;
struct _20434b1be_BraceLit;
struct _20434b994_KeyValPair;
struct _20434c17b_SliceExpr;
struct _20434c9ea_IndexingExpr;
struct _20434d105_SlicingExpr;
struct _20434d3e1_Constraint;
struct _20434d864_GenericDecl;
struct _20434dc1b_LabelSt;
struct _20434e0c3_GotoSt;
struct _20434e3ae_FallSt;
struct _20434e9b9_AssignLeft;
struct _204350008_AssignSt;
struct _204350de9_Stmt;
struct _204351504_ScopeTree;
struct _204351bca_ParamDecl;
struct _204352eea_FnDecl;
struct _204353ec9_VarDecl;
struct _204354381_RetSt;
struct _2043549e1_Iter;
struct _2043552b6_WhileKind;
struct _204355b57_RangeKind;
struct _20435600e_BreakSt;
struct _2043563b6_ContSt;
struct _204356839_If;
struct _204356be1_Else;
struct _204357164_Conditional;
struct _20435783a_TypeAliasDecl;
struct _204357cad_Case;
struct _204358484_MatchCase;
struct _204358c26_UseDecl;
struct _204359199_EnumItemDecl;
struct _204359bc2_EnumDecl;
struct _20435a6c8_TypeEnumItemDecl;
struct _20435acd3_TypeEnumDecl;
struct _20435aed1_FieldDecl;
struct _20435b784_StructDecl;
struct _20435bd8e_TraitDecl;
struct _20435c499_Impl;
struct _204a9047e_floatInfo;
struct _2017c5b8a_decimalSlice;
struct _204eba689_leftCheat;
struct _204eba9ec_decimal;
struct _2044102b6_Const;
struct _204324285_Field;
struct _204331c54_Operators;
struct _20433367e_Struct;
struct _2043393bb_FieldIns;
struct _204ec133d_OperandExprModel;
struct _204ec152a_BinopExprModel;
struct _204ec1717_UnaryExprModel;
struct _204ec1904_StructArgExprModel;
struct _204ec1ae1_StructLitExprModel;
struct _204ec1ccd_AllocStructLitExprModel;
struct _204ec1eba_CastingExprModel;
struct _204ec21a7_FnCallExprModel;
struct _204ec2394_SliceExprModel;
struct _204ec2581_IndexingExprModel;
struct _204ec276d_AnonFnExprModel;
struct _204ec295a_KeyValPairExprModel;
struct _204ec2b47_MapExprModel;
struct _204ec2d34_SlicingExprModel;
struct _204ec3021_TraitSubIdentExprModel;
struct _204ec343e_StructSubIdentExprModel;
struct _204ec362b_StructStaticIdentExprModel;
struct _204ec3818_ArrayExprModel;
struct _204ec3a05_CommonIdentExprModel;
struct _204ec3be2_CommonSubIdentExprModel;
struct _204ec3dce_TupleExprModel;
struct _204ec40bb_BuiltinOutCallExprModel;
struct _204ec42a8_BuiltinOutlnCallExprModel;
struct _204ec4495_BuiltinCloneCallExprModel;
struct _204ec4682_BuiltinNewCallExprModel;
struct _204ec486e_BuiltinPanicCallExprModel;
struct _204ec4a5b_BuiltinAssertCallExprModel;
struct _204ec4c48_BuiltinMakeCallExprModel;
struct _204ec4e35_BuiltinAppendCallExprModel;
struct _204ec5122_BuiltinLenCallExprModel;
struct _204ec530e_BuiltinCapCallExprModel;
struct _204ec320d_BuiltinDeleteCallExprModel;
struct _204ec596e_BuiltinCopyCallExprModel;
struct _204ec5b5b_BuiltinErrorCallExprModel;
struct _204ec5d48_SizeofExprModel;
struct _204ec6035_AlignofExprModel;
struct _204ec6222_RuneExprModel;
struct _204ec640e_IntegratedToStrExprModel;
struct _204ec65eb_BackendEmitExprModel;
struct _204ec67d8_FreeExprModel;
struct _204ec6ba1_RetType;
struct _204ec6d8d_Param;
struct _204ec707a_Fn;
struct _204ec7267_ParamIns;
struct _204ec7454_FnIns;
struct _204ec7e27_ReferenceStack;
struct _204ec871e_Pass;
struct _204eca699_symbolBuilder;
struct _204ece8e0_Trait;
struct _204ed1040_EnumItem;
struct _204ed1a35_Enum;
struct _204ed2a69_TypeEnumItem;
struct _204ed3130_TypeEnum;
struct _204ed56a4_constraintChecker;
struct _204ed75da_Impl;
struct _204edc645_Scope;
struct _204edca41_If;
struct _204edcd2c_Else;
struct _204edd1a1_Conditional;
struct _204edd48c_InfIter;
struct _204edd910_WhileIter;
struct _204ede2e5_RangeIter;
struct _204ede6e1_ContSt;
struct _204edea98_BreakSt;
struct _204eded84_Label;
struct _204ee0170_GotoSt;
struct _204ee0527_Postfix;
struct _204ee099a_Assign;
struct _204ee0d52_MultiAssign;
struct _204ee1391_Match;
struct _204ee1ddb_Case;
struct _204ee2491_FallSt;
struct _204ee2914_RetSt;
struct _204ee301e_scopeLabel;
struct _204ee3492_scopeGoto;
struct _204ee42a6_scopeChecker;
struct _205004d88_directiveChecker;
struct _20500ae16_ImportInfo;
struct _20500dd70_Package;
struct _205014062_Sema;
struct _20502e18c_missingRetChecker;
struct _205030d4d_IterRelation;
struct _205031cb6_Var;
struct _205032a64_FuncPattern;
struct _205063985_typeCompatibilityChecker;
struct _2050655ad_assignTypeChecker;
struct _205066ec7_dynamicTypeAnnotation;
struct _20506b7c3_fnCallArgChecker;
struct _20506e1cc_structLitChecker;
struct _205070cb1_rangeChecker;
struct _205072e17_retTypeChecker;
struct _205074eb3_SymbolTable;
struct _20507eb49_Data;
struct _205080bc2_Value;
struct _2050816b7_Eval;
struct _20509c55c_unaryEval;
struct _20509e2ea_binaryEval;
struct _2050a91b2_InsGeneric;
struct _2050a9beb_TypeAlias;
struct _2050aa8de_TypeKind;
struct _2050aea47_TypeSymbol;
struct _2050b03b6_Prim;
struct _2050b3b4a_Sptr;
struct _2050b45a7_Slc;
struct _2050b5135_Tuple;
struct _2050b5b5d_Map;
struct _2050b6752_Arr;
struct _2050b71ae_Ptr;
struct _2050b8105_referencer;
struct _2050b8e19_typeChecker;
struct _2050c162a_identTypeLookup;
struct _2057e150e_FileInfo;
struct _20583d083_stmt;
struct _20583d8ad_scopeParser;
struct _205849d70_exprBuilder;
struct _2058566c8_assignInfo;
struct _20585a006_parser;
struct _20586ac1a_typeBuilder;
struct _20518b9c0_CompileInfo;
struct _20518cd23_directiveEval;
struct _2052896b1_JuleImporter;
struct _205829877_OrderedDefines;
struct _20527bb6a_defineOrderer;
struct _205939d2d_liveTable;
struct _20597102e_scopeDeadCode;
struct _205974e89_exprDeadCode;
struct _202bb6cc2_UnsafeBinopExprModel;
struct _2036d843b_UnsafeIndexingExprModel;
struct _203acb950_PushToSliceExprModel;
struct _20407b10d_MutSlicingExprModel;
struct _202c0764d_StrInsertBeginExprModel;
struct _203018e48_scopeOptimizer;
struct _203577b05_exprOptimizer;
struct _2059453aa_Optimizer;
struct _20597e944_AnsiEscape;
struct _20598102d_Logger;
struct _1d7dc5b66_AbsTime;
struct _1d7dc6309_Time;
struct _1d72106cc_scopeCoder;
struct _1d7d28ca6_exprCoder;
struct _1d7d37853_deriveCoder;
struct _1d7d38cc7_TestCoder;
struct _1d7d3b428_identCoder;
struct _1d7d44277_SerializationInfo;
struct _1d7dcd366_traitHash;
struct _1d7dd2513_customType;
struct _1d7dd2d0a_typeCoder;
struct _1dc4a9eb0_Flag;
struct _1dc4add0a_Flag;
struct _1dc4b2946_Flag;
struct _1dc4b65c6_Flag;
struct _1dc4ba212_Flag;
struct _1d7e1da5a_FlagSet;
struct _2054b956c_IR;
struct _20435cc5d_StructIns;
struct _20593a0e7_ObjectDeadCode;
struct _1d7dcd553_ObjectCoder;
struct _1d7e21233_argParser;
struct _2026ea5d6_Range16 {
	jule::U16 _field_Lo = jule::U16();
	jule::U16 _field_Hi = jule::U16();
	jule::U16 _field_Stride = jule::U16();
	

	_2026ea5d6_Range16(void) = default;

	inline bool operator==(_2026ea5d6_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_2026ea5d6_Range16 _other) { return !this->operator==(_other); }


};
struct _2026eaa59_Range32 {
	jule::U32 _field_Lo = jule::U32();
	jule::U32 _field_Hi = jule::U32();
	jule::U32 _field_Stride = jule::U32();
	

	_2026eaa59_Range32(void) = default;

	inline bool operator==(_2026eaa59_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_2026eaa59_Range32 _other) { return !this->operator==(_other); }


};
struct _2026eaecc_RangeTable {
	jule::Slice<_2026ea5d6_Range16> _field_R16 = jule::Slice<_2026ea5d6_Range16>();
	jule::Slice<_2026eaa59_Range32> _field_R32 = jule::Slice<_2026eaa59_Range32>();
	jule::I64 _field_LatinOffset = jule::I64();
	

	_2026eaecc_RangeTable(void) = default;

	inline bool operator==(_2026eaecc_RangeTable _other) {
		return 
			this->_field_R16 == _other._field_R16 &&
			this->_field_R32 == _other._field_R32 &&
			this->_field_LatinOffset == _other._field_LatinOffset;
	}

	inline bool operator!=(_2026eaecc_RangeTable _other) { return !this->operator==(_other); }


};
struct _2027ad6aa_acceptRange {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();
	

	_2027ad6aa_acceptRange(void) = default;

	inline bool operator==(_2027ad6aa_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_2027ad6aa_acceptRange _other) { return !this->operator==(_other); }


};
inline jule::U8 _20181e6ea_index(_201817e74_lazyBuff*, jule::I64);
inline void _20181ee04_append(_201817e74_lazyBuff*, jule::U8);
inline jule::Str _20182317c_string(_201817e74_lazyBuff*);
struct _201817e74_lazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_volAndPath = jule::Str();
	jule::I64 _field_volLen = jule::I64();
	

	_201817e74_lazyBuff(void) = default;

	inline bool operator==(_201817e74_lazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_volAndPath == _other._field_volAndPath &&
			this->_field_volLen == _other._field_volLen;
	}

	inline bool operator!=(_201817e74_lazyBuff _other) { return !this->operator==(_other); }


};
struct _2009634dd_DirEntry {
	jule::Str _field_Name = jule::Str();
	jule::Ptr<_20174529c_Status> _field_Stat = jule::Ptr<_20174529c_Status>();
	

	_2009634dd_DirEntry(void) = default;

	inline bool operator==(_2009634dd_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_2009634dd_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_2009634dd_DirEntry>>> static__2017969e6_Read(jule::Str);
inline jule::VoidExceptional static__2017a4295_Create(jule::Str);
inline jule::VoidExceptional static__20178043b_Remove(jule::Str);
struct _200a45cb8_Directory {
	

	_200a45cb8_Directory(void) = default;

	inline bool operator==(_200a45cb8_Directory _other) { return true; }

	inline bool operator!=(_200a45cb8_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_200a47a01_File>> static__200948d75_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__200949a35_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _20094a6e5_Write(_200a47a01_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _20094bd12_Read(_200a47a01_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_200a47a01_File> static__2009682b2_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_200a47a01_File>> static__200969ea6_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__20096ac65_Read(jule::Str);
inline jule::VoidExceptional static__20096ba9b_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _20096d62a_Seek(_200a47a01_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _20096e10e_Close(_200a47a01_File*);
struct _200a47a01_File {
	jule::Uintptr _field_handle = jule::Uintptr();
	

	_200a47a01_File(void) = default;

	inline bool operator==(_200a47a01_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_200a47a01_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_20174529c_Status>> static__2009653e1_Of(jule::Str);
inline jule::Bool _200970792_IsDir(_20174529c_Status*);
inline jule::Bool _200a46813_IsReg(_20174529c_Status*);
struct _20174529c_Status {
	jule::U64 _field_Mode = jule::U64();
	jule::U64 _field_Size = jule::U64();
	

	_20174529c_Status(void) = default;

	inline bool operator==(_20174529c_Status _other) {
		return 
			this->_field_Mode == _other._field_Mode &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_20174529c_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2028a7045_Cmd> static__2028a7474_New(jule::Str);
inline jule::Exceptional<jule::I64> _2028a76d8_Spawn(_2028a7045_Cmd*);
inline jule::Exceptional<jule::I64> _2028aa642_spawn(_2028a7045_Cmd*);
struct _2028a7045_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_Args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_Env = jule::Slice<jule::Str>();
	

	_2028a7045_Cmd(void) = default;

	inline bool operator==(_2028a7045_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_Args == _other._field_Args &&
			this->_field_Env == _other._field_Env;
	}

	inline bool operator!=(_2028a7045_Cmd _other) { return !this->operator==(_other); }


};
struct _20285b7ad_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = jule::I64();
	jule::I64 _field_Column = jule::I64();
	jule::Str _field_Path = jule::Str();
	jule::Str _field_Text = jule::Str();
	jule::Str _field_Line = jule::Str();
	jule::Str _field_Suggestion = jule::Str();
	

	_20285b7ad_Log(void) = default;

	inline bool operator==(_20285b7ad_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_20285b7ad_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _202b89a31_Prec(_202b89679_Token*);
struct _202b89679_Token {
	jule::Ptr<_202b8ea14_File> _field_File = jule::Ptr<_202b8ea14_File>();
	jule::I64 _field_Row = jule::I64();
	jule::I64 _field_Column = jule::I64();
	jule::Str _field_Kind = jule::Str();
	jule::U64 _field_Id = 0LLU;
	

	_202b89679_Token(void) = default;

	inline bool operator==(_202b89679_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_202b89679_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _202b8ee21_IsOk(_202b8ea14_File*);
inline void _202b90196_Fill(_202b8ea14_File*, jule::Slice<jule::U8>);
inline jule::Str _202b9040a_Dir(_202b8ea14_File*);
inline jule::Str _202b9066e_Name(_202b8ea14_File*);
inline jule::Uintptr _202b908d3_Addr(_202b8ea14_File*);
inline jule::Str _202b90be1_GetRow(_202b8ea14_File*, jule::I64);
struct _202b8ea14_File {
	jule::Str _field_Path = jule::Str();
	jule::Slice<jule::U8> _field_Data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_202b89679_Token>> _field_Tokens = jule::Slice<jule::Ptr<_202b89679_Token>>();
	

	_202b8ea14_File(void) = default;

	inline bool operator==(_202b8ea14_File _other) {
		return 
			this->_field_Path == _other._field_Path &&
			this->_field_Data == _other._field_Data &&
			this->_field_Tokens == _other._field_Tokens;
	}

	inline bool operator!=(_202b8ea14_File _other) { return !this->operator==(_other); }


};
struct _202b91a6b_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_202b91a6b_kindPair(void) = default;

	inline bool operator==(_202b91a6b_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_202b91a6b_kindPair _other) { return !this->operator==(_other); }


};
inline void _202b97c09_pushErr(_202b97665_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _202b98028_pushErrTok(_202b97665_lex*, jule::Ptr<_202b89679_Token>&, jule::Str);
inline void _202b98204_lex(_202b97665_lex*);
inline jule::Str _202b98512_id(_202b97665_lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _202b98776_resume(_202b97665_lex*);
inline void _202b989eb_lexLineComment(_202b97665_lex*, jule::Ptr<_202b89679_Token>&);
inline void _202b98c71_lexRangeComment(_202b97665_lex*, jule::Ptr<_202b89679_Token>&);
inline jule::Str _202b9907e_num(_202b97665_lex*, jule::Slice<jule::U8>&);
inline jule::Str _202b9938c_escapeSeq(_202b97665_lex*, jule::Slice<jule::U8>&);
inline jule::Str _202b99744_getRune(_202b97665_lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _202b99a52_lexRune(_202b97665_lex*, jule::Slice<jule::U8>&);
inline jule::Str _202b99cb6_lexStr(_202b97665_lex*);
inline jule::Bool _202b9a02a_isFirstTokenOfLine(_202b97665_lex*);
inline void _202b9a206_newLine(_202b97665_lex*);
inline jule::Bool _202b9a701_isOp(_202b97665_lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_202b89679_Token>&);
inline jule::Bool _202b9aaa8_lexBasicOps(_202b97665_lex*, jule::Slice<jule::U8>, jule::Ptr<_202b89679_Token>&);
inline jule::Bool _202b9ae60_lexId(_202b97665_lex*, jule::Slice<jule::U8>&, jule::Ptr<_202b89679_Token>&);
inline jule::Bool _202b9b317_lexNum(_202b97665_lex*, jule::Slice<jule::U8>&, jule::Ptr<_202b89679_Token>&);
inline jule::Ptr<_202b89679_Token> _202b9b57b_token(_202b97665_lex*);
struct _202b97665_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_202b89679_Token>> _field_tokens = jule::Slice<jule::Ptr<_202b89679_Token>>();
	jule::Ptr<_202b8ea14_File> _field_file = jule::Ptr<_202b8ea14_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_20285b7ad_Log> _field_errors = jule::Slice<_20285b7ad_Log>();
	

	_202b97665_lex(void) = default;

	inline bool operator==(_202b97665_lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_202b97665_lex _other) { return !this->operator==(_other); }


};
struct _204307202_Ast {
	jule::Ptr<_202b8ea14_File> _field_File = jule::Ptr<_202b8ea14_File>();
	jule::Slice<jule::Ptr<_20430829c_Directive>> _field_TopDirectives = jule::Slice<jule::Ptr<_20430829c_Directive>>();
	jule::Slice<jule::Ptr<_204358c26_UseDecl>> _field_UseDecls = jule::Slice<jule::Ptr<_204358c26_UseDecl>>();
	jule::Slice<_204307da1_Node> _field_Nodes = jule::Slice<_204307da1_Node>();
	

	_204307202_Ast(void) = default;

	inline bool operator==(_204307202_Ast _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_TopDirectives == _other._field_TopDirectives &&
			this->_field_UseDecls == _other._field_UseDecls &&
			this->_field_Nodes == _other._field_Nodes;
	}

	inline bool operator!=(_204307202_Ast _other) { return !this->operator==(_other); }


};
struct _204307da1_Node {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Any _field_Data = jule::Any();
	

	_204307da1_Node(void) = default;

	inline bool operator==(_204307da1_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_204307da1_Node _other) { return !this->operator==(_other); }


};
struct _20430829c_Directive {
	jule::Ptr<_202b89679_Token> _field_Tag = jule::Ptr<_202b89679_Token>();
	jule::Slice<jule::Ptr<_202b89679_Token>> _field_Args = jule::Slice<jule::Ptr<_202b89679_Token>>();
	

	_20430829c_Directive(void) = default;

	inline bool operator==(_20430829c_Directive _other) {
		return 
			this->_field_Tag == _other._field_Tag &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_20430829c_Directive _other) { return !this->operator==(_other); }


};
struct _20434156b_TypeDecl {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Any _field_Kind = jule::Any();
	

	_20434156b_TypeDecl(void) = default;

	inline bool operator==(_20434156b_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20434156b_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _204341e95_IsPrim(_204341b32_IdentTypeDecl*);
struct _204341b32_IdentTypeDecl {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_20434156b_TypeDecl>> _field_Generics = jule::Slice<jule::Ptr<_20434156b_TypeDecl>>();
	

	_204341b32_IdentTypeDecl(void) = default;

	inline bool operator==(_204341b32_IdentTypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_204341b32_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _204342281_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_204341b32_IdentTypeDecl>> _field_Idents = jule::Slice<jule::Ptr<_204341b32_IdentTypeDecl>>();
	

	_204342281_SubIdentTypeDecl(void) = default;

	inline bool operator==(_204342281_SubIdentTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_204342281_SubIdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _204342638_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_202b89679_Token>> _field_Idents = jule::Slice<jule::Ptr<_202b89679_Token>>();
	jule::Ptr<_20434156b_TypeDecl> _field_Kind = jule::Ptr<_20434156b_TypeDecl>();
	

	_204342638_NamespaceTypeDecl(void) = default;

	inline bool operator==(_204342638_NamespaceTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_204342638_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _204342924_SptrTypeDecl {
	jule::Ptr<_20434156b_TypeDecl> _field_Elem = jule::Ptr<_20434156b_TypeDecl>();
	

	_204342924_SptrTypeDecl(void) = default;

	inline bool operator==(_204342924_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_204342924_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _204342d20_SlcTypeDecl {
	jule::Ptr<_20434156b_TypeDecl> _field_Elem = jule::Ptr<_20434156b_TypeDecl>();
	

	_204342d20_SlcTypeDecl(void) = default;

	inline bool operator==(_204342d20_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_204342d20_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _20434310b_TupleTypeDecl {
	jule::Slice<jule::Ptr<_20434156b_TypeDecl>> _field_Types = jule::Slice<jule::Ptr<_20434156b_TypeDecl>>();
	

	_20434310b_TupleTypeDecl(void) = default;

	inline bool operator==(_20434310b_TupleTypeDecl _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_20434310b_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _204343749_IsUnsafe(_2043433e7_PtrTypeDecl*);
struct _2043433e7_PtrTypeDecl {
	jule::Ptr<_20434156b_TypeDecl> _field_Elem = jule::Ptr<_20434156b_TypeDecl>();
	

	_2043433e7_PtrTypeDecl(void) = default;

	inline bool operator==(_2043433e7_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_2043433e7_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _204343e53_AutoSized(_204343a79_ArrTypeDecl*);
struct _204343a79_ArrTypeDecl {
	jule::Ptr<_20434156b_TypeDecl> _field_Elem = jule::Ptr<_20434156b_TypeDecl>();
	jule::Ptr<_204345a8c_Expr> _field_Size = jule::Ptr<_204345a8c_Expr>();
	

	_204343a79_ArrTypeDecl(void) = default;

	inline bool operator==(_204343a79_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_204343a79_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _2043442c7_MapTypeDecl {
	jule::Ptr<_20434156b_TypeDecl> _field_Key = jule::Ptr<_20434156b_TypeDecl>();
	jule::Ptr<_20434156b_TypeDecl> _field_Val = jule::Ptr<_20434156b_TypeDecl>();
	

	_2043442c7_MapTypeDecl(void) = default;

	inline bool operator==(_2043442c7_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_2043442c7_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _20434467e_RetTypeDecl {
	jule::Ptr<_20434156b_TypeDecl> _field_Kind = jule::Ptr<_20434156b_TypeDecl>();
	jule::Slice<jule::Ptr<_202b89679_Token>> _field_Idents = jule::Slice<jule::Ptr<_202b89679_Token>>();
	

	_20434467e_RetTypeDecl(void) = default;

	inline bool operator==(_20434467e_RetTypeDecl _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_20434467e_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _204345a8c_Expr {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_202b89679_Token> _field_End = jule::Ptr<_202b89679_Token>();
	jule::Any _field_Kind = jule::Any();
	

	_204345a8c_Expr(void) = default;

	inline bool operator==(_204345a8c_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_204345a8c_Expr _other) { return !this->operator==(_other); }


};
struct _204345d78_RangeExpr {
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	

	_204345d78_RangeExpr(void) = default;

	inline bool operator==(_204345d78_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_204345d78_RangeExpr _other) { return !this->operator==(_other); }


};
struct _20434642d_UseExpr {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	

	_20434642d_UseExpr(void) = default;

	inline bool operator==(_20434642d_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20434642d_UseExpr _other) { return !this->operator==(_other); }


};
struct _204346719_TupleExpr {
	jule::Slice<jule::Ptr<_204345a8c_Expr>> _field_Expr = jule::Slice<jule::Ptr<_204345a8c_Expr>>();
	

	_204346719_TupleExpr(void) = default;

	inline bool operator==(_204346719_TupleExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_204346719_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _204346e23_IsNil(_204346ac1_LitExpr*);
struct _204346ac1_LitExpr {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Value = jule::Str();
	

	_204346ac1_LitExpr(void) = default;

	inline bool operator==(_204346ac1_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_204346ac1_LitExpr _other) { return !this->operator==(_other); }


};
struct _2043472ca_UnsafeExpr {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	

	_2043472ca_UnsafeExpr(void) = default;

	inline bool operator==(_2043472ca_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2043472ca_UnsafeExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _204347aa0_IsSelf(_20434774d_IdentExpr*);
struct _20434774d_IdentExpr {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	

	_20434774d_IdentExpr(void) = default;

	inline bool operator==(_20434774d_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_20434774d_IdentExpr _other) { return !this->operator==(_other); }


};
struct _204347e57_UnaryExpr {
	jule::Ptr<_202b89679_Token> _field_Op = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	

	_204347e57_UnaryExpr(void) = default;

	inline bool operator==(_204347e57_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_204347e57_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _20434830e_VariadicExpr {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	

	_20434830e_VariadicExpr(void) = default;

	inline bool operator==(_20434830e_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20434830e_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _2043486b6_CastExpr {
	jule::Ptr<_20434156b_TypeDecl> _field_Kind = jule::Ptr<_20434156b_TypeDecl>();
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	

	_2043486b6_CastExpr(void) = default;

	inline bool operator==(_2043486b6_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2043486b6_CastExpr _other) { return !this->operator==(_other); }


};
struct _204348a6d_NsSelectionExpr {
	jule::Slice<jule::Ptr<_202b89679_Token>> _field_Ns = jule::Slice<jule::Ptr<_202b89679_Token>>();
	jule::Ptr<_202b89679_Token> _field_Ident = jule::Ptr<_202b89679_Token>();
	

	_204348a6d_NsSelectionExpr(void) = default;

	inline bool operator==(_204348a6d_NsSelectionExpr _other) {
		return 
			this->_field_Ns == _other._field_Ns &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_204348a6d_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _204348ee1_SubIdentExpr {
	jule::Bool _field_IsSelf = jule::Bool();
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	jule::Ptr<_202b89679_Token> _field_Ident = jule::Ptr<_202b89679_Token>();
	

	_204348ee1_SubIdentExpr(void) = default;

	inline bool operator==(_204348ee1_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_204348ee1_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _204349464_BinopExpr {
	jule::Ptr<_204345a8c_Expr> _field_Left = jule::Ptr<_204345a8c_Expr>();
	jule::Ptr<_204345a8c_Expr> _field_Right = jule::Ptr<_204345a8c_Expr>();
	jule::Ptr<_202b89679_Token> _field_Op = jule::Ptr<_202b89679_Token>();
	

	_204349464_BinopExpr(void) = default;

	inline bool operator==(_204349464_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_204349464_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _204349dd2_Unhandled(_204349a6e_FnCallExpr*);
inline jule::Bool _20434a146_Ignored(_204349a6e_FnCallExpr*);
struct _204349a6e_FnCallExpr {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	jule::Slice<jule::Ptr<_204345a8c_Expr>> _field_Args = jule::Slice<jule::Ptr<_204345a8c_Expr>>();
	jule::Ptr<_204351504_ScopeTree> _field_Exception = jule::Ptr<_204351504_ScopeTree>();
	jule::Bool _field_IsCo = jule::Bool();
	

	_204349a6e_FnCallExpr(void) = default;

	inline bool operator==(_204349a6e_FnCallExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Exception == _other._field_Exception &&
			this->_field_IsCo == _other._field_IsCo;
	}

	inline bool operator!=(_204349a6e_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _20434a850_IsTargeted(_20434a4ed_FieldExprPair*);
struct _20434a4ed_FieldExprPair {
	jule::Ptr<_202b89679_Token> _field_Field = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	

	_20434a4ed_FieldExprPair(void) = default;

	inline bool operator==(_20434a4ed_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20434a4ed_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _20434ac4b_StructLit {
	jule::Ptr<_202b89679_Token> _field_End = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_20434156b_TypeDecl> _field_Kind = jule::Ptr<_20434156b_TypeDecl>();
	jule::Slice<jule::Ptr<_204345a8c_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_204345a8c_Expr>>();
	

	_20434ac4b_StructLit(void) = default;

	inline bool operator==(_20434ac4b_StructLit _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_20434ac4b_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _20434b521_IsEmpty(_20434b1be_BraceLit*);
struct _20434b1be_BraceLit {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_202b89679_Token> _field_End = jule::Ptr<_202b89679_Token>();
	jule::Slice<jule::Ptr<_204345a8c_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_204345a8c_Expr>>();
	

	_20434b1be_BraceLit(void) = default;

	inline bool operator==(_20434b1be_BraceLit _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_20434b1be_BraceLit _other) { return !this->operator==(_other); }


};
struct _20434b994_KeyValPair {
	jule::Ptr<_204345a8c_Expr> _field_Key = jule::Ptr<_204345a8c_Expr>();
	jule::Ptr<_204345a8c_Expr> _field_Val = jule::Ptr<_204345a8c_Expr>();
	jule::Ptr<_202b89679_Token> _field_Colon = jule::Ptr<_202b89679_Token>();
	

	_20434b994_KeyValPair(void) = default;

	inline bool operator==(_20434b994_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_20434b994_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _20434c4ab_IsEmpty(_20434c17b_SliceExpr*);
struct _20434c17b_SliceExpr {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_202b89679_Token> _field_End = jule::Ptr<_202b89679_Token>();
	jule::Slice<jule::Ptr<_204345a8c_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_204345a8c_Expr>>();
	

	_20434c17b_SliceExpr(void) = default;

	inline bool operator==(_20434c17b_SliceExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_20434c17b_SliceExpr _other) { return !this->operator==(_other); }


};
struct _20434c9ea_IndexingExpr {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_202b89679_Token> _field_End = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	jule::Ptr<_204345a8c_Expr> _field_Index = jule::Ptr<_204345a8c_Expr>();
	

	_20434c9ea_IndexingExpr(void) = default;

	inline bool operator==(_20434c9ea_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_20434c9ea_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _20434d105_SlicingExpr {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_202b89679_Token> _field_End = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	jule::Ptr<_204345a8c_Expr> _field_Start = jule::Ptr<_204345a8c_Expr>();
	jule::Ptr<_204345a8c_Expr> _field_To = jule::Ptr<_204345a8c_Expr>();
	

	_20434d105_SlicingExpr(void) = default;

	inline bool operator==(_20434d105_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_20434d105_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _20434d3e1_Constraint {
	jule::Slice<jule::Ptr<_20434156b_TypeDecl>> _field_Mask = jule::Slice<jule::Ptr<_20434156b_TypeDecl>>();
	

	_20434d3e1_Constraint(void) = default;

	inline bool operator==(_20434d3e1_Constraint _other) {
		return 
			this->_field_Mask == _other._field_Mask;
	}

	inline bool operator!=(_20434d3e1_Constraint _other) { return !this->operator==(_other); }


};
struct _20434d864_GenericDecl {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_20434d3e1_Constraint> _field_Constraint = jule::Ptr<_20434d3e1_Constraint>();
	

	_20434d864_GenericDecl(void) = default;

	inline bool operator==(_20434d864_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_20434d864_GenericDecl _other) { return !this->operator==(_other); }


};
struct _20434dc1b_LabelSt {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Ident = jule::Str();
	

	_20434dc1b_LabelSt(void) = default;

	inline bool operator==(_20434dc1b_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_20434dc1b_LabelSt _other) { return !this->operator==(_other); }


};
struct _20434e0c3_GotoSt {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_202b89679_Token> _field_Label = jule::Ptr<_202b89679_Token>();
	

	_20434e0c3_GotoSt(void) = default;

	inline bool operator==(_20434e0c3_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_20434e0c3_GotoSt _other) { return !this->operator==(_other); }


};
struct _20434e3ae_FallSt {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	

	_20434e3ae_FallSt(void) = default;

	inline bool operator==(_20434e3ae_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_20434e3ae_FallSt _other) { return !this->operator==(_other); }


};
struct _20434e9b9_AssignLeft {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	

	_20434e9b9_AssignLeft(void) = default;

	inline bool operator==(_20434e9b9_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20434e9b9_AssignLeft _other) { return !this->operator==(_other); }


};
struct _204350008_AssignSt {
	jule::Bool _field_Declarative = jule::Bool();
	jule::Ptr<_202b89679_Token> _field_Setter = jule::Ptr<_202b89679_Token>();
	jule::Slice<jule::Ptr<_20434e9b9_AssignLeft>> _field_Left = jule::Slice<jule::Ptr<_20434e9b9_AssignLeft>>();
	jule::Ptr<_204345a8c_Expr> _field_Right = jule::Ptr<_204345a8c_Expr>();
	

	_204350008_AssignSt(void) = default;

	inline bool operator==(_204350008_AssignSt _other) {
		return 
			this->_field_Declarative == _other._field_Declarative &&
			this->_field_Setter == _other._field_Setter &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_204350008_AssignSt _other) { return !this->operator==(_other); }


};
struct _204350de9_Stmt {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Any _field_Data = jule::Any();
	

	_204350de9_Stmt(void) = default;

	inline bool operator==(_204350de9_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_204350de9_Stmt _other) { return !this->operator==(_other); }


};
struct _204351504_ScopeTree {
	jule::Ptr<_204351504_ScopeTree> _field_Parent = jule::Ptr<_204351504_ScopeTree>();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Deferred = jule::Bool();
	jule::Slice<_204350de9_Stmt> _field_Stmts = jule::Slice<_204350de9_Stmt>();
	jule::Ptr<_202b89679_Token> _field_End = jule::Ptr<_202b89679_Token>();
	

	_204351504_ScopeTree(void) = default;

	inline bool operator==(_204351504_ScopeTree _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_204351504_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _20435203d_IsSelf(_204351bca_ParamDecl*);
inline jule::Bool _2043522a2_IsRef(_204351bca_ParamDecl*);
struct _204351bca_ParamDecl {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_20434156b_TypeDecl> _field_Kind = jule::Ptr<_20434156b_TypeDecl>();
	jule::Str _field_Ident = jule::Str();
	

	_204351bca_ParamDecl(void) = default;

	inline bool operator==(_204351bca_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_204351bca_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _20435334c_IsAnon(_204352eea_FnDecl*);
struct _204352eea_FnDecl {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Bool _field_Global = jule::Bool();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Exceptional = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_20430829c_Directive>> _field_Directives = jule::Slice<jule::Ptr<_20430829c_Directive>>();
	jule::Ptr<_204351504_ScopeTree> _field_Scope = jule::Ptr<_204351504_ScopeTree>();
	jule::Slice<jule::Ptr<_20434d864_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_20434d864_GenericDecl>>();
	jule::Ptr<_20434467e_RetTypeDecl> _field_Result = jule::Ptr<_20434467e_RetTypeDecl>();
	jule::Slice<jule::Ptr<_204351bca_ParamDecl>> _field_Params = jule::Slice<jule::Ptr<_204351bca_ParamDecl>>();
	

	_204352eea_FnDecl(void) = default;

	inline bool operator==(_204352eea_FnDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params;
	}

	inline bool operator!=(_204352eea_FnDecl _other) { return !this->operator==(_other); }


};
struct _204353ec9_VarDecl {
	jule::Ptr<_204351504_ScopeTree> _field_Scope = jule::Ptr<_204351504_ScopeTree>();
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Constant = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Slice<jule::Ptr<_20430829c_Directive>> _field_Directives = jule::Slice<jule::Ptr<_20430829c_Directive>>();
	jule::Ptr<_20434156b_TypeDecl> _field_Kind = jule::Ptr<_20434156b_TypeDecl>();
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	

	_204353ec9_VarDecl(void) = default;

	inline bool operator==(_204353ec9_VarDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_204353ec9_VarDecl _other) { return !this->operator==(_other); }


};
struct _204354381_RetSt {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	

	_204354381_RetSt(void) = default;

	inline bool operator==(_204354381_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_204354381_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _204354d43_IsInf(_2043549e1_Iter*);
struct _2043549e1_Iter {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Any _field_Kind = jule::Any();
	jule::Ptr<_204351504_ScopeTree> _field_Scope = jule::Ptr<_204351504_ScopeTree>();
	

	_2043549e1_Iter(void) = default;

	inline bool operator==(_2043549e1_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_2043549e1_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _204355618_IsWhileNext(_2043552b6_WhileKind*);
struct _2043552b6_WhileKind {
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	jule::Any _field_Next = jule::Any();
	jule::Ptr<_202b89679_Token> _field_NextToken = jule::Ptr<_202b89679_Token>();
	

	_2043552b6_WhileKind(void) = default;

	inline bool operator==(_2043552b6_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_2043552b6_WhileKind _other) { return !this->operator==(_other); }


};
struct _204355b57_RangeKind {
	jule::Ptr<_202b89679_Token> _field_InToken = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	jule::Ptr<_204353ec9_VarDecl> _field_KeyA = jule::Ptr<_204353ec9_VarDecl>();
	jule::Ptr<_204353ec9_VarDecl> _field_KeyB = jule::Ptr<_204353ec9_VarDecl>();
	

	_204355b57_RangeKind(void) = default;

	inline bool operator==(_204355b57_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_204355b57_RangeKind _other) { return !this->operator==(_other); }


};
struct _20435600e_BreakSt {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_202b89679_Token> _field_Label = jule::Ptr<_202b89679_Token>();
	

	_20435600e_BreakSt(void) = default;

	inline bool operator==(_20435600e_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_20435600e_BreakSt _other) { return !this->operator==(_other); }


};
struct _2043563b6_ContSt {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_202b89679_Token> _field_Label = jule::Ptr<_202b89679_Token>();
	

	_2043563b6_ContSt(void) = default;

	inline bool operator==(_2043563b6_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_2043563b6_ContSt _other) { return !this->operator==(_other); }


};
struct _204356839_If {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	jule::Ptr<_204351504_ScopeTree> _field_Scope = jule::Ptr<_204351504_ScopeTree>();
	

	_204356839_If(void) = default;

	inline bool operator==(_204356839_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_204356839_If _other) { return !this->operator==(_other); }


};
struct _204356be1_Else {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_204351504_ScopeTree> _field_Scope = jule::Ptr<_204351504_ScopeTree>();
	

	_204356be1_Else(void) = default;

	inline bool operator==(_204356be1_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_204356be1_Else _other) { return !this->operator==(_other); }


};
struct _204357164_Conditional {
	jule::Ptr<_204356839_If> _field_Head = jule::Ptr<_204356839_If>();
	jule::Slice<jule::Ptr<_204356839_If>> _field_Tail = jule::Slice<jule::Ptr<_204356839_If>>();
	jule::Ptr<_204356be1_Else> _field_Default = jule::Ptr<_204356be1_Else>();
	

	_204357164_Conditional(void) = default;

	inline bool operator==(_204357164_Conditional _other) {
		return 
			this->_field_Head == _other._field_Head &&
			this->_field_Tail == _other._field_Tail &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_204357164_Conditional _other) { return !this->operator==(_other); }


};
struct _20435783a_TypeAliasDecl {
	jule::Ptr<_204351504_ScopeTree> _field_Scope = jule::Ptr<_204351504_ScopeTree>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_20434156b_TypeDecl> _field_Kind = jule::Ptr<_20434156b_TypeDecl>();
	

	_20435783a_TypeAliasDecl(void) = default;

	inline bool operator==(_20435783a_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20435783a_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _204357cad_Case {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_204351504_ScopeTree> _field_Scope = jule::Ptr<_204351504_ScopeTree>();
	jule::Slice<jule::Ptr<_204345a8c_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_204345a8c_Expr>>();
	

	_204357cad_Case(void) = default;

	inline bool operator==(_204357cad_Case _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_204357cad_Case _other) { return !this->operator==(_other); }


};
struct _204358484_MatchCase {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_202b89679_Token> _field_End = jule::Ptr<_202b89679_Token>();
	jule::Bool _field_TypeMatch = jule::Bool();
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	jule::Slice<jule::Ptr<_204357cad_Case>> _field_Cases = jule::Slice<jule::Ptr<_204357cad_Case>>();
	jule::Ptr<_204356be1_Else> _field_Default = jule::Ptr<_204356be1_Else>();
	

	_204358484_MatchCase(void) = default;

	inline bool operator==(_204358484_MatchCase _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_204358484_MatchCase _other) { return !this->operator==(_other); }


};
struct _204358c26_UseDecl {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Str _field_LinkPath = jule::Str();
	jule::Str _field_Alias = jule::Str();
	jule::Bool _field_Full = jule::Bool();
	jule::Slice<jule::Ptr<_202b89679_Token>> _field_Selected = jule::Slice<jule::Ptr<_202b89679_Token>>();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Std = jule::Bool();
	

	_204358c26_UseDecl(void) = default;

	inline bool operator==(_204358c26_UseDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Full == _other._field_Full &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std;
	}

	inline bool operator!=(_204358c26_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _2043594eb_AutoExpr(_204359199_EnumItemDecl*);
struct _204359199_EnumItemDecl {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	

	_204359199_EnumItemDecl(void) = default;

	inline bool operator==(_204359199_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_204359199_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _20435a255_DefaultTyped(_204359bc2_EnumDecl*);
struct _204359bc2_EnumDecl {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_20434156b_TypeDecl> _field_Kind = jule::Ptr<_20434156b_TypeDecl>();
	jule::Slice<jule::Ptr<_204359199_EnumItemDecl>> _field_Items = jule::Slice<jule::Ptr<_204359199_EnumItemDecl>>();
	jule::Ptr<_202b89679_Token> _field_End = jule::Ptr<_202b89679_Token>();
	

	_204359bc2_EnumDecl(void) = default;

	inline bool operator==(_204359bc2_EnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_204359bc2_EnumDecl _other) { return !this->operator==(_other); }


};
struct _20435a6c8_TypeEnumItemDecl {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_20434156b_TypeDecl> _field_Kind = jule::Ptr<_20434156b_TypeDecl>();
	

	_20435a6c8_TypeEnumItemDecl(void) = default;

	inline bool operator==(_20435a6c8_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20435a6c8_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _20435acd3_TypeEnumDecl {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_20435a6c8_TypeEnumItemDecl>> _field_Items = jule::Slice<jule::Ptr<_20435a6c8_TypeEnumItemDecl>>();
	jule::Ptr<_202b89679_Token> _field_End = jule::Ptr<_202b89679_Token>();
	

	_20435acd3_TypeEnumDecl(void) = default;

	inline bool operator==(_20435acd3_TypeEnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_20435acd3_TypeEnumDecl _other) { return !this->operator==(_other); }


};
struct _20435aed1_FieldDecl {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_20434156b_TypeDecl> _field_Kind = jule::Ptr<_20434156b_TypeDecl>();
	jule::Ptr<_204345a8c_Expr> _field_Default = jule::Ptr<_204345a8c_Expr>();
	

	_20435aed1_FieldDecl(void) = default;

	inline bool operator==(_20435aed1_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_20435aed1_FieldDecl _other) { return !this->operator==(_other); }


};
struct _20435b784_StructDecl {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_202b89679_Token> _field_End = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_20435aed1_FieldDecl>> _field_Fields = jule::Slice<jule::Ptr<_20435aed1_FieldDecl>>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_20430829c_Directive>> _field_Directives = jule::Slice<jule::Ptr<_20430829c_Directive>>();
	jule::Slice<jule::Ptr<_20434d864_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_20434d864_GenericDecl>>();
	

	_20435b784_StructDecl(void) = default;

	inline bool operator==(_20435b784_StructDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_20435b784_StructDecl _other) { return !this->operator==(_other); }


};
struct _20435bd8e_TraitDecl {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_202b89679_Token> _field_End = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_Public = jule::Bool();
	jule::Slice<jule::Ptr<_204352eea_FnDecl>> _field_Methods = jule::Slice<jule::Ptr<_204352eea_FnDecl>>();
	

	_20435bd8e_TraitDecl(void) = default;

	inline bool operator==(_20435bd8e_TraitDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Methods == _other._field_Methods;
	}

	inline bool operator!=(_20435bd8e_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _20435c80c_IsTraitImpl(_20435c499_Impl*);
inline jule::Bool _20435ca71_IsStructImpl(_20435c499_Impl*);
struct _20435c499_Impl {
	jule::Ptr<_202b89679_Token> _field_End = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_20434156b_TypeDecl> _field_Base = jule::Ptr<_20434156b_TypeDecl>();
	jule::Ptr<_20434156b_TypeDecl> _field_Dest = jule::Ptr<_20434156b_TypeDecl>();
	jule::Slice<jule::Ptr<_204352eea_FnDecl>> _field_Methods = jule::Slice<jule::Ptr<_204352eea_FnDecl>>();
	jule::Slice<jule::Ptr<_204353ec9_VarDecl>> _field_Statics = jule::Slice<jule::Ptr<_204353ec9_VarDecl>>();
	

	_20435c499_Impl(void) = default;

	inline bool operator==(_20435c499_Impl _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_20435c499_Impl _other) { return !this->operator==(_other); }


};
struct _204a9047e_floatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();
	

	_204a9047e_floatInfo(void) = default;

	inline bool operator==(_204a9047e_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_204a9047e_floatInfo _other) { return !this->operator==(_other); }


};
struct _2017c5b8a_decimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	

	_2017c5b8a_decimalSlice(void) = default;

	inline bool operator==(_2017c5b8a_decimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_2017c5b8a_decimalSlice _other) { return !this->operator==(_other); }


};
struct _204eba689_leftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();
	

	_204eba689_leftCheat(void) = default;

	inline bool operator==(_204eba689_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_204eba689_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _2049a24d4_set(_204eba9ec_decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _204912e4a_floatBits(_204eba9ec_decimal*, _204a9047e_floatInfo&);
inline void _204ebabd9_assign(_204eba9ec_decimal*, jule::U64);
inline void _204ebad1b_shift(_204eba9ec_decimal*, jule::I64);
inline void _204ebae4d_roundDown(_204eba9ec_decimal*, jule::I64);
inline void _204ebb080_roundUp(_204eba9ec_decimal*, jule::I64);
inline void _204ebb1b2_round(_204eba9ec_decimal*, jule::I64);
inline jule::U64 _204ebb2e4_roundedInteger(_204eba9ec_decimal*);
struct _204eba9ec_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();
	

	_204eba9ec_decimal(void) = default;

	inline bool operator==(_204eba9ec_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_204eba9ec_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2044102b6_Const> static__204420804_NewI64(jule::I64);
inline jule::Ptr<_2044102b6_Const> static__20443783d_NewU64(jule::U64);
inline jule::Ptr<_2044102b6_Const> static__2044521d7_NewBool(jule::Bool);
inline jule::Ptr<_2044102b6_Const> static__204454030_NewStr(jule::Str);
inline jule::Ptr<_2044102b6_Const> static__20445521d_NewF64(jule::F64);
inline jule::Ptr<_2044102b6_Const> static__20445596b_NewNil(void);
inline jule::I64 _204457561_ReadI64(_2044102b6_Const*);
inline jule::U64 _20445874e_ReadU64(_2044102b6_Const*);
inline jule::Bool _204458e9c_ReadBool(_2044102b6_Const*);
inline jule::Str _204461834_ReadStr(_2044102b6_Const*);
inline jule::F64 _2044623b2_ReadF64(_2044102b6_Const*);
inline jule::I64 _204463270_AsI64(_2044102b6_Const*);
inline jule::U64 _2044573b8_AsU64(_2044102b6_Const*);
inline jule::F64 _20446423d_AsF64(_2044102b6_Const*);
inline void _2044650eb_SetI64(_2044102b6_Const*, jule::I64);
inline void _204477c13_SetU64(_2044102b6_Const*, jule::U64);
inline void _20447ab5b_SetBool(_2044102b6_Const*, jule::Bool);
inline void _20447b695_SetStr(_2044102b6_Const*, jule::Str);
inline void _20447c223_SetF64(_2044102b6_Const*, jule::F64);
inline void _204465849_SetNil(_2044102b6_Const*);
inline jule::Bool _20447788e_IsI64(_2044102b6_Const*);
inline jule::Bool _2044223e9_IsU64(_2044102b6_Const*);
inline jule::Bool _20442483b_IsBool(_2044102b6_Const*);
inline jule::Bool _2044610e7_IsStr(_2044102b6_Const*);
inline jule::Bool _204477240_IsF64(_2044102b6_Const*);
inline jule::Bool _204ebe7d1_IsNil(_2044102b6_Const*);
inline jule::Bool _204ebe913_AreSameTypes(_2044102b6_Const*, _2044102b6_Const);
inline jule::Bool _204ebea45_And(_2044102b6_Const*, _2044102b6_Const);
inline jule::Bool _204ebeb77_Or(_2044102b6_Const*, _2044102b6_Const);
inline jule::Bool _204ebeca9_Eq(_2044102b6_Const*, _2044102b6_Const);
inline jule::Bool _204ebeddb_Lt(_2044102b6_Const*, _2044102b6_Const);
inline jule::Bool _204ec001d_LtEq(_2044102b6_Const*, _2044102b6_Const);
inline jule::Bool _204ec0150_Gt(_2044102b6_Const*, _2044102b6_Const);
inline jule::Bool _204ec0282_GtEq(_2044102b6_Const*, _2044102b6_Const);
inline jule::Bool _204ec03b4_Add(_2044102b6_Const*, _2044102b6_Const);
inline jule::Bool _204ec04e6_Sub(_2044102b6_Const*, _2044102b6_Const);
inline jule::Bool _204ec0628_Mul(_2044102b6_Const*, _2044102b6_Const);
inline jule::Bool _204ec075a_Div(_2044102b6_Const*, _2044102b6_Const);
inline jule::Bool _204ec088c_Mod(_2044102b6_Const*, _2044102b6_Const);
inline jule::Bool _204ec09be_BitwiseAnd(_2044102b6_Const*, _2044102b6_Const);
inline jule::Bool _204ec0b01_BitwiseOr(_2044102b6_Const*, _2044102b6_Const);
inline jule::Bool _204ec0c33_Xor(_2044102b6_Const*, _2044102b6_Const);
inline jule::Bool _204ec0d65_Lshift(_2044102b6_Const*, _2044102b6_Const);
inline jule::Bool _204ec0e97_Rshift(_2044102b6_Const*, _2044102b6_Const);
struct _2044102b6_Const {
	jule::Str _field_Kind = jule::Str();
	jule::Any _field_data = jule::Any();
	

	_2044102b6_Const(void) = default;

	inline jule::Bool operator==(_2044102b6_Const _other) { return _204ebeca9_Eq(this, _other); }

	inline bool operator!=(_2044102b6_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_2044102b6_Const _other) { return _204ec0150_Gt(this, _other); }

	inline jule::Bool operator>=(_2044102b6_Const _other) { return _204ec0282_GtEq(this, _other); }

	inline jule::Bool operator<(_2044102b6_Const _other) { return _204ebeddb_Lt(this, _other); }

	inline jule::Bool operator<=(_2044102b6_Const _other) { return _204ec001d_LtEq(this, _other); }


};
inline jule::Ptr<_2043393bb_FieldIns> _20420e3d4_instance(jule::Ptr<_204324285_Field>);
struct _204324285_Field {
	jule::Ptr<_20433367e_Struct> _field_Owner = jule::Ptr<_20433367e_Struct>();
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_2050aea47_TypeSymbol> _field_Kind = jule::Ptr<_2050aea47_TypeSymbol>();
	jule::Ptr<_204345a8c_Expr> _field_Default = jule::Ptr<_204345a8c_Expr>();
	

	_204324285_Field(void) = default;

	inline bool operator==(_204324285_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_204324285_Field _other) { return !this->operator==(_other); }


};
struct _204331c54_Operators {
	jule::Ptr<_204ec7454_FnIns> _field_Eq = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_Gt = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_GtEq = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_Lt = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_LtEq = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_Shl = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_Shr = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_Add = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_Sub = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_Div = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_Mul = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_Mod = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_BitAnd = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_BitOr = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_BitXor = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_Neg = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_Pos = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_BitNot = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_AddAssign = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_SubAssign = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_DivAssign = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_MulAssign = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_ModAssign = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_ShlAssign = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_ShrAssign = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_BitOrAssign = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_BitAndAssign = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7454_FnIns> _field_BitXorAssign = jule::Ptr<_204ec7454_FnIns>();
	

	_204331c54_Operators(void) = default;

	inline bool operator==(_204331c54_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_204331c54_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20435cc5d_StructIns> _20430d48e_instance(jule::Ptr<_20433367e_Struct>);
inline jule::Ptr<_20435cc5d_StructIns> _2043193e0_appendInstance(_20433367e_Struct*, jule::Ptr<_20435cc5d_StructIns>&);
inline jule::Ptr<_204ec707a_Fn> _20431d1d5_FindMethod(_20433367e_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_205031cb6_Var> _20431de3e_FindStatic(_20433367e_Struct*, jule::Str);
inline jule::Ptr<_204324285_Field> _2043210b7_FindField(_20433367e_Struct*, jule::Str);
inline jule::Bool _2043220c9_IsImplements(_20433367e_Struct*, jule::Ptr<_204ece8e0_Trait>);
inline jule::Bool _204321518_IsDerives(_20433367e_Struct*, jule::Str);
inline jule::Bool _204323916_IsUses(_20433367e_Struct*, jule::Ptr<_20433367e_Struct>);
inline jule::Bool _204322c01_HasRefAccessible(_20433367e_Struct*);
struct _20433367e_Struct {
	jule::Ptr<_205014062_Sema> _field_sema = jule::Ptr<_205014062_Sema>();
	jule::Slice<jule::Ptr<_20433367e_Struct>> _field_Depends = jule::Slice<jule::Ptr<_20433367e_Struct>>();
	jule::Slice<jule::Ptr<_20433367e_Struct>> _field_Uses = jule::Slice<jule::Ptr<_20433367e_Struct>>();
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_204324285_Field>> _field_Fields = jule::Slice<jule::Ptr<_204324285_Field>>();
	jule::Slice<jule::Ptr<_204ec707a_Fn>> _field_Methods = jule::Slice<jule::Ptr<_204ec707a_Fn>>();
	jule::Slice<jule::Ptr<_205031cb6_Var>> _field_Statics = jule::Slice<jule::Ptr<_205031cb6_Var>>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_20430829c_Directive>> _field_Directives = jule::Slice<jule::Ptr<_20430829c_Directive>>();
	jule::Slice<jule::Ptr<_20434d864_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_20434d864_GenericDecl>>();
	jule::Slice<jule::Ptr<_204ece8e0_Trait>> _field_Implements = jule::Slice<jule::Ptr<_204ece8e0_Trait>>();
	jule::Slice<jule::Ptr<_20435cc5d_StructIns>> _field_Instances = jule::Slice<jule::Ptr<_20435cc5d_StructIns>>();
	

	_20433367e_Struct(void) = default;

	inline bool operator==(_20433367e_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Depends == _other._field_Depends &&
			this->_field_Uses == _other._field_Uses &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Implements == _other._field_Implements &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_20433367e_Struct _other) { return !this->operator==(_other); }


};
struct _2043393bb_FieldIns {
	jule::Ptr<_204324285_Field> _field_Decl = jule::Ptr<_204324285_Field>();
	jule::Ptr<_2050aa8de_TypeKind> _field_Kind = jule::Ptr<_2050aa8de_TypeKind>();
	jule::Ptr<_20507eb49_Data> _field_Default = jule::Ptr<_20507eb49_Data>();
	

	_2043393bb_FieldIns(void) = default;

	inline bool operator==(_2043393bb_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_2043393bb_FieldIns _other) { return !this->operator==(_other); }


};
struct _204ec133d_OperandExprModel {
	jule::Ptr<_2050aa8de_TypeKind> _field_Kind = jule::Ptr<_2050aa8de_TypeKind>();
	jule::Any _field_Model = jule::Any();
	

	_204ec133d_OperandExprModel(void) = default;

	inline bool operator==(_204ec133d_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_204ec133d_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _204ec152a_BinopExprModel {
	jule::Ptr<_204ec133d_OperandExprModel> _field_Left = jule::Ptr<_204ec133d_OperandExprModel>();
	jule::Ptr<_204ec133d_OperandExprModel> _field_Right = jule::Ptr<_204ec133d_OperandExprModel>();
	jule::Ptr<_202b89679_Token> _field_Op = jule::Ptr<_202b89679_Token>();
	

	_204ec152a_BinopExprModel(void) = default;

	inline bool operator==(_204ec152a_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_204ec152a_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _204ec1717_UnaryExprModel {
	jule::Ptr<_20507eb49_Data> _field_Expr = jule::Ptr<_20507eb49_Data>();
	jule::Ptr<_202b89679_Token> _field_Op = jule::Ptr<_202b89679_Token>();
	

	_204ec1717_UnaryExprModel(void) = default;

	inline bool operator==(_204ec1717_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_204ec1717_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _204ec1904_StructArgExprModel {
	jule::Ptr<_2043393bb_FieldIns> _field_Field = jule::Ptr<_2043393bb_FieldIns>();
	jule::Any _field_Expr = jule::Any();
	

	_204ec1904_StructArgExprModel(void) = default;

	inline bool operator==(_204ec1904_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_204ec1904_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _204ec1ae1_StructLitExprModel {
	jule::Ptr<_20435cc5d_StructIns> _field_Strct = jule::Ptr<_20435cc5d_StructIns>();
	jule::Slice<jule::Ptr<_204ec1904_StructArgExprModel>> _field_Args = jule::Slice<jule::Ptr<_204ec1904_StructArgExprModel>>();
	

	_204ec1ae1_StructLitExprModel(void) = default;

	inline bool operator==(_204ec1ae1_StructLitExprModel _other) {
		return 
			this->_field_Strct == _other._field_Strct &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_204ec1ae1_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _204ec1ccd_AllocStructLitExprModel {
	jule::Ptr<_204ec1ae1_StructLitExprModel> _field_Lit = jule::Ptr<_204ec1ae1_StructLitExprModel>();
	

	_204ec1ccd_AllocStructLitExprModel(void) = default;

	inline bool operator==(_204ec1ccd_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_204ec1ccd_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _204ec1eba_CastingExprModel {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_2050aa8de_TypeKind> _field_Kind = jule::Ptr<_2050aa8de_TypeKind>();
	jule::Ptr<_2050aa8de_TypeKind> _field_ExprKind = jule::Ptr<_2050aa8de_TypeKind>();
	

	_204ec1eba_CastingExprModel(void) = default;

	inline bool operator==(_204ec1eba_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_204ec1eba_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _204ec21a7_FnCallExprModel {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_204ec7454_FnIns> _field_Func = jule::Ptr<_204ec7454_FnIns>();
	jule::Bool _field_IsCo = jule::Bool();
	jule::Any _field_Expr = jule::Any();
	jule::Slice<jule::Any> _field_Args = jule::Slice<jule::Any>();
	jule::Ptr<_204edc645_Scope> _field_Except = jule::Ptr<_204edc645_Scope>();
	jule::Bool _field_Assigned = jule::Bool();
	

	_204ec21a7_FnCallExprModel(void) = default;

	inline bool operator==(_204ec21a7_FnCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Func == _other._field_Func &&
			this->_field_IsCo == _other._field_IsCo &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Except == _other._field_Except &&
			this->_field_Assigned == _other._field_Assigned;
	}

	inline bool operator!=(_204ec21a7_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _204ec2394_SliceExprModel {
	jule::Ptr<_2050aa8de_TypeKind> _field_ElemKind = jule::Ptr<_2050aa8de_TypeKind>();
	jule::Slice<jule::Any> _field_Elems = jule::Slice<jule::Any>();
	

	_204ec2394_SliceExprModel(void) = default;

	inline bool operator==(_204ec2394_SliceExprModel _other) {
		return 
			this->_field_ElemKind == _other._field_ElemKind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_204ec2394_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _204ec2581_IndexingExprModel {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_20507eb49_Data> _field_Expr = jule::Ptr<_20507eb49_Data>();
	jule::Ptr<_20507eb49_Data> _field_Index = jule::Ptr<_20507eb49_Data>();
	

	_204ec2581_IndexingExprModel(void) = default;

	inline bool operator==(_204ec2581_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_204ec2581_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _204ec276d_AnonFnExprModel {
	jule::Ptr<_204ec7454_FnIns> _field_Func = jule::Ptr<_204ec7454_FnIns>();
	jule::Bool _field_Global = jule::Bool();
	

	_204ec276d_AnonFnExprModel(void) = default;

	inline bool operator==(_204ec276d_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_204ec276d_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _204ec295a_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any();
	jule::Any _field_Val = jule::Any();
	

	_204ec295a_KeyValPairExprModel(void) = default;

	inline bool operator==(_204ec295a_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_204ec295a_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _204ec2b47_MapExprModel {
	jule::Ptr<_2050aa8de_TypeKind> _field_KeyKind = jule::Ptr<_2050aa8de_TypeKind>();
	jule::Ptr<_2050aa8de_TypeKind> _field_ValKind = jule::Ptr<_2050aa8de_TypeKind>();
	jule::Slice<jule::Ptr<_204ec295a_KeyValPairExprModel>> _field_Entries = jule::Slice<jule::Ptr<_204ec295a_KeyValPairExprModel>>();
	

	_204ec2b47_MapExprModel(void) = default;

	inline bool operator==(_204ec2b47_MapExprModel _other) {
		return 
			this->_field_KeyKind == _other._field_KeyKind &&
			this->_field_ValKind == _other._field_ValKind &&
			this->_field_Entries == _other._field_Entries;
	}

	inline bool operator!=(_204ec2b47_MapExprModel _other) { return !this->operator==(_other); }


};
struct _204ec2d34_SlicingExprModel {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Left = jule::Any();
	jule::Any _field_Right = jule::Any();
	

	_204ec2d34_SlicingExprModel(void) = default;

	inline bool operator==(_204ec2d34_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_204ec2d34_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _204ec3021_TraitSubIdentExprModel {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_204ec707a_Fn> _field_Method = jule::Ptr<_204ec707a_Fn>();
	jule::Ptr<_204ece8e0_Trait> _field_Trt = jule::Ptr<_204ece8e0_Trait>();
	

	_204ec3021_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_204ec3021_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_204ec3021_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _204ec343e_StructSubIdentExprModel {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_20507eb49_Data> _field_Expr = jule::Ptr<_20507eb49_Data>();
	jule::Ptr<_2050aa8de_TypeKind> _field_ExprKind = jule::Ptr<_2050aa8de_TypeKind>();
	jule::Ptr<_204ec7454_FnIns> _field_Method = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_2043393bb_FieldIns> _field_Field = jule::Ptr<_2043393bb_FieldIns>();
	jule::Ptr<_20435cc5d_StructIns> _field_Owner = jule::Ptr<_20435cc5d_StructIns>();
	

	_204ec343e_StructSubIdentExprModel(void) = default;

	inline bool operator==(_204ec343e_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_204ec343e_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _204ec362b_StructStaticIdentExprModel {
	jule::Ptr<_20435cc5d_StructIns> _field_Structure = jule::Ptr<_20435cc5d_StructIns>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_204ec7454_FnIns> _field_Method = jule::Ptr<_204ec7454_FnIns>();
	

	_204ec362b_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_204ec362b_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_204ec362b_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _204ec3818_ArrayExprModel {
	jule::Ptr<_2050b6752_Arr> _field_Kind = jule::Ptr<_2050b6752_Arr>();
	jule::Slice<jule::Any> _field_Elems = jule::Slice<jule::Any>();
	

	_204ec3818_ArrayExprModel(void) = default;

	inline bool operator==(_204ec3818_ArrayExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_204ec3818_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _204ec3a05_CommonIdentExprModel {
	jule::Str _field_Ident = jule::Str();
	

	_204ec3a05_CommonIdentExprModel(void) = default;

	inline bool operator==(_204ec3a05_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_204ec3a05_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _204ec3be2_CommonSubIdentExprModel {
	jule::Ptr<_2050aa8de_TypeKind> _field_ExprKind = jule::Ptr<_2050aa8de_TypeKind>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Ident = jule::Str();
	

	_204ec3be2_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_204ec3be2_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_204ec3be2_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _204ec3dce_TupleExprModel {
	jule::Slice<jule::Ptr<_20507eb49_Data>> _field_Datas = jule::Slice<jule::Ptr<_20507eb49_Data>>();
	

	_204ec3dce_TupleExprModel(void) = default;

	inline bool operator==(_204ec3dce_TupleExprModel _other) {
		return 
			this->_field_Datas == _other._field_Datas;
	}

	inline bool operator!=(_204ec3dce_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _204ec40bb_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any();
	jule::Bool _field_Debug = jule::Bool();
	

	_204ec40bb_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_204ec40bb_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_204ec40bb_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _204ec42a8_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any();
	jule::Bool _field_Debug = jule::Bool();
	

	_204ec42a8_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_204ec42a8_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_204ec42a8_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _204ec4495_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_204ec4495_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_204ec4495_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_204ec4495_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _204ec4682_BuiltinNewCallExprModel {
	jule::Ptr<_2050aa8de_TypeKind> _field_Kind = jule::Ptr<_2050aa8de_TypeKind>();
	jule::Any _field_Init = jule::Any();
	

	_204ec4682_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_204ec4682_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_204ec4682_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _204ec486e_BuiltinPanicCallExprModel {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Any _field_Expr = jule::Any();
	

	_204ec486e_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_204ec486e_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_204ec486e_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _204ec4a5b_BuiltinAssertCallExprModel {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Str _field_Log = jule::Str();
	

	_204ec4a5b_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_204ec4a5b_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_204ec4a5b_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _204ec4c48_BuiltinMakeCallExprModel {
	jule::Ptr<_2050aa8de_TypeKind> _field_Kind = jule::Ptr<_2050aa8de_TypeKind>();
	jule::Any _field_Len = jule::Any();
	jule::Any _field_Cap = jule::Any();
	

	_204ec4c48_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_204ec4c48_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_204ec4c48_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _204ec4e35_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Any _field_Elements = jule::Any();
	

	_204ec4e35_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_204ec4e35_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_204ec4e35_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _204ec5122_BuiltinLenCallExprModel {
	jule::Ptr<_20507eb49_Data> _field_Expr = jule::Ptr<_20507eb49_Data>();
	

	_204ec5122_BuiltinLenCallExprModel(void) = default;

	inline bool operator==(_204ec5122_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_204ec5122_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _204ec530e_BuiltinCapCallExprModel {
	jule::Ptr<_20507eb49_Data> _field_Expr = jule::Ptr<_20507eb49_Data>();
	

	_204ec530e_BuiltinCapCallExprModel(void) = default;

	inline bool operator==(_204ec530e_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_204ec530e_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _204ec320d_BuiltinDeleteCallExprModel {
	jule::Ptr<_20507eb49_Data> _field_Dest = jule::Ptr<_20507eb49_Data>();
	jule::Ptr<_20507eb49_Data> _field_Key = jule::Ptr<_20507eb49_Data>();
	

	_204ec320d_BuiltinDeleteCallExprModel(void) = default;

	inline bool operator==(_204ec320d_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_204ec320d_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _204ec596e_BuiltinCopyCallExprModel {
	jule::Ptr<_20507eb49_Data> _field_Dest = jule::Ptr<_20507eb49_Data>();
	jule::Ptr<_20507eb49_Data> _field_Src = jule::Ptr<_20507eb49_Data>();
	

	_204ec596e_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_204ec596e_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_204ec596e_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _204ec5b5b_BuiltinErrorCallExprModel {
	jule::Ptr<_204ec7454_FnIns> _field_Func = jule::Ptr<_204ec7454_FnIns>();
	jule::Any _field_Err = jule::Any();
	

	_204ec5b5b_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_204ec5b5b_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_204ec5b5b_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _204ec5d48_SizeofExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_204ec5d48_SizeofExprModel(void) = default;

	inline bool operator==(_204ec5d48_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_204ec5d48_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _204ec6035_AlignofExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_204ec6035_AlignofExprModel(void) = default;

	inline bool operator==(_204ec6035_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_204ec6035_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _204ec6222_RuneExprModel {
	jule::I32 _field_Code = jule::I32();
	

	_204ec6222_RuneExprModel(void) = default;

	inline bool operator==(_204ec6222_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_204ec6222_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _204ec640e_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_204ec640e_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_204ec640e_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_204ec640e_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _204ec65eb_BackendEmitExprModel {
	jule::Str _field_Code = jule::Str();
	jule::Slice<jule::Any> _field_Exprs = jule::Slice<jule::Any>();
	

	_204ec65eb_BackendEmitExprModel(void) = default;

	inline bool operator==(_204ec65eb_BackendEmitExprModel _other) {
		return 
			this->_field_Code == _other._field_Code &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_204ec65eb_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _204ec67d8_FreeExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_204ec67d8_FreeExprModel(void) = default;

	inline bool operator==(_204ec67d8_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_204ec67d8_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _204ec6ba1_RetType {
	jule::Ptr<_2050aea47_TypeSymbol> _field_Kind = jule::Ptr<_2050aea47_TypeSymbol>();
	jule::Slice<jule::Ptr<_202b89679_Token>> _field_Idents = jule::Slice<jule::Ptr<_202b89679_Token>>();
	

	_204ec6ba1_RetType(void) = default;

	inline bool operator==(_204ec6ba1_RetType _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_204ec6ba1_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_204ec7267_ParamIns> _2043d4bb4_instance(jule::Ptr<_204ec6d8d_Param>);
inline jule::Bool _204395b64_IsSelf(_204ec6d8d_Param*);
inline jule::Bool _204396e2e_IsRef(_204ec6d8d_Param*);
struct _204ec6d8d_Param {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_2050aea47_TypeSymbol> _field_Kind = jule::Ptr<_2050aea47_TypeSymbol>();
	jule::Str _field_Ident = jule::Str();
	

	_204ec6d8d_Param(void) = default;

	inline bool operator==(_204ec6d8d_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_204ec6d8d_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _2043a5a53_IsVoid(_204ec707a_Fn*);
inline jule::Bool _2043a626d_IsMethod(_204ec707a_Fn*);
inline jule::Bool _2043a6988_IsEntryPoint(_204ec707a_Fn*);
inline jule::Bool _2043a7813_IsInit(_204ec707a_Fn*);
inline jule::Bool _20439525c_IsAnon(_204ec707a_Fn*);
inline jule::Bool _20439a2ea_AnyVar(_204ec707a_Fn*);
inline jule::Ptr<_204ec7454_FnIns> _20439bdce_instanceForce(jule::Ptr<_204ec707a_Fn>);
inline jule::Ptr<_204ec7454_FnIns> _20439cb9e_instance(jule::Ptr<_204ec707a_Fn>);
inline jule::Ptr<_204ec7454_FnIns> _2043949cb_appendInstance(_204ec707a_Fn*, jule::Ptr<_204ec7454_FnIns>&);
struct _204ec707a_Fn {
	jule::Ptr<_205014062_Sema> _field_sema = jule::Ptr<_205014062_Sema>();
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Bool _field_Global = jule::Bool();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Exceptional = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_20430829c_Directive>> _field_Directives = jule::Slice<jule::Ptr<_20430829c_Directive>>();
	jule::Ptr<_204351504_ScopeTree> _field_Scope = jule::Ptr<_204351504_ScopeTree>();
	jule::Slice<jule::Ptr<_20434d864_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_20434d864_GenericDecl>>();
	jule::Ptr<_204ec6ba1_RetType> _field_Result = jule::Ptr<_204ec6ba1_RetType>();
	jule::Slice<jule::Ptr<_204ec6d8d_Param>> _field_Params = jule::Slice<jule::Ptr<_204ec6d8d_Param>>();
	jule::Ptr<_20433367e_Struct> _field_Owner = jule::Ptr<_20433367e_Struct>();
	jule::Slice<jule::Ptr<_204ec7454_FnIns>> _field_Instances = jule::Slice<jule::Ptr<_204ec7454_FnIns>>();
	

	_204ec707a_Fn(void) = default;

	inline bool operator==(_204ec707a_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params &&
			this->_field_Owner == _other._field_Owner &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_204ec707a_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _204394448_Str(_204ec7267_ParamIns*);
struct _204ec7267_ParamIns {
	jule::Ptr<_204ec6d8d_Param> _field_Decl = jule::Ptr<_204ec6d8d_Param>();
	jule::Ptr<_2050aa8de_TypeKind> _field_Kind = jule::Ptr<_2050aa8de_TypeKind>();
	

	_204ec7267_ParamIns(void) = default;

	inline bool operator==(_204ec7267_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_204ec7267_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _204396527_Str(_204ec7454_FnIns*);
inline jule::Bool _204394c84_Equals(jule::Ptr<_204ec7454_FnIns>, jule::Ptr<_2050aa8de_TypeKind>);
inline jule::Bool _2043a71a3_EqualsFn(jule::Ptr<_204ec7454_FnIns>, jule::Ptr<_204ec7454_FnIns>&);
inline jule::Bool _2043994d6_equalsTrait(jule::Ptr<_204ec7454_FnIns>, jule::Ptr<_204ec7454_FnIns>&);
inline jule::Slice<jule::Ptr<_2050aa8de_TypeKind>> _2043c5237_Types(_204ec7454_FnIns*);
inline jule::Bool _204ec7641_IsBuiltin(_204ec7454_FnIns*);
inline jule::Bool _204ec7773_IsAnon(_204ec7454_FnIns*);
inline jule::Bool _204ec78a5_Same(_204ec7454_FnIns*, jule::Ptr<_204ec7454_FnIns>);
inline jule::Str _204ec79d7_GetKindStr(_204ec7454_FnIns*, jule::Bool);
struct _204ec7454_FnIns {
	jule::Ptr<_20435cc5d_StructIns> _field_Owner = jule::Ptr<_20435cc5d_StructIns>();
	jule::Ptr<_204ec707a_Fn> _field_Decl = jule::Ptr<_204ec707a_Fn>();
	jule::Slice<jule::Ptr<_2050a91b2_InsGeneric>> _field_Generics = jule::Slice<jule::Ptr<_2050a91b2_InsGeneric>>();
	jule::Slice<jule::Ptr<_204ec7267_ParamIns>> _field_Params = jule::Slice<jule::Ptr<_204ec7267_ParamIns>>();
	jule::Ptr<_2050aa8de_TypeKind> _field_Result = jule::Ptr<_2050aa8de_TypeKind>();
	jule::Ptr<_204edc645_Scope> _field_Scope = jule::Ptr<_204edc645_Scope>();
	jule::Ptr<_204ec7e27_ReferenceStack> _field_Refers = jule::Ptr<_204ec7e27_ReferenceStack>();
	jule::Bool _field_Anon = jule::Bool();
	jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)> _field_caller = jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	

	_204ec7454_FnIns(void) = default;

	inline bool operator==(_204ec7454_FnIns _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Params == _other._field_Params &&
			this->_field_Result == _other._field_Result &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Anon == _other._field_Anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_204ec7454_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_204ec7e27_ReferenceStack> static__204ec8114_new(void);
inline jule::I64 _204ec8246_Len(_204ec7e27_ReferenceStack*);
inline jule::Any _204ec8378_At(_204ec7e27_ReferenceStack*, jule::I64);
inline void _204ec84aa_Push(_204ec7e27_ReferenceStack*, jule::Any);
inline jule::Bool _1db2a50ca_Exist(_204ec7e27_ReferenceStack*, jule::Ptr<_204ec7454_FnIns>);
inline jule::Bool _1db2baa2a_Exist(_204ec7e27_ReferenceStack*, jule::Ptr<_205031cb6_Var>);
inline jule::Bool _1db4c68c3_Exist(_204ec7e27_ReferenceStack*, jule::Ptr<_20435cc5d_StructIns>);
inline jule::Bool _1db777a42_Exist(_204ec7e27_ReferenceStack*, jule::Ptr<_204ece8e0_Trait>);
struct _204ec7e27_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();
	

	_204ec7e27_ReferenceStack(void) = default;

	inline bool operator==(_204ec7e27_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_204ec7e27_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _204ec871e_Pass {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Text = jule::Str();
	

	_204ec871e_Pass(void) = default;

	inline bool operator==(_204ec871e_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_204ec871e_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_204eca699_symbolBuilder> _204ecaa51_getRoot(jule::Ptr<_204eca699_symbolBuilder>);
inline void _204ecab83_pushErr(_204eca699_symbolBuilder*, jule::Ptr<_202b89679_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _204ecacb5_pushErrText(_204eca699_symbolBuilder*, jule::Ptr<_202b89679_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _204ecade7_pushSuggestion(_204eca699_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _204ecb029_checkCppUseDeclPath(_204eca699_symbolBuilder*, jule::Ptr<_204358c26_UseDecl>&, jule::Str);
inline jule::Ptr<_20500ae16_ImportInfo> _204ecb15b_buildCppHeaderImport(_204eca699_symbolBuilder*, jule::Ptr<_204358c26_UseDecl>&);
inline jule::Ptr<_20500ae16_ImportInfo> _204ecb28d_buildStdImport(_204eca699_symbolBuilder*, jule::Ptr<_204358c26_UseDecl>&);
inline jule::Ptr<_20500ae16_ImportInfo> _204ecb3c0_buildIdentImport(jule::Ptr<_204eca699_symbolBuilder>, jule::Ptr<_204358c26_UseDecl>&);
inline jule::Ptr<_20500ae16_ImportInfo> _204ecb502_buildImport(jule::Ptr<_204eca699_symbolBuilder>, jule::Ptr<_204358c26_UseDecl>&);
inline jule::Bool _204ecb634_checkDuplicateUseDecl(_204eca699_symbolBuilder*, jule::Ptr<_20500ae16_ImportInfo>&);
inline void _204ecb766_implImportSelections(_204eca699_symbolBuilder*, jule::Ptr<_20500ae16_ImportInfo>&, jule::Ptr<_204358c26_UseDecl>&);
inline jule::Str _204ecb964_getAsLinkPath(jule::Ptr<_204eca699_symbolBuilder>, jule::Str);
inline void _204ecbd2c_pushCycleError(jule::Ptr<_204eca699_symbolBuilder>, jule::Ptr<_204eca699_symbolBuilder>&, jule::Str, jule::Str&);
inline void _204ecc1e5_pushCrossCycleError(jule::Ptr<_204eca699_symbolBuilder>, jule::Ptr<_204eca699_symbolBuilder>&, jule::Ptr<_20500ae16_ImportInfo>&, jule::Ptr<_202b89679_Token>&);
inline jule::Bool _204ecc59c_checkImportCycles(jule::Ptr<_204eca699_symbolBuilder>, jule::Ptr<_20500ae16_ImportInfo>, jule::Ptr<_204358c26_UseDecl>&);
inline void _204ecc987_checkPackageAccessibility(_204eca699_symbolBuilder*, jule::Ptr<_204358c26_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _204eccd50_importPackage(jule::Ptr<_204eca699_symbolBuilder>, jule::Ptr<_20500ae16_ImportInfo>&, jule::Ptr<_204358c26_UseDecl>&);
inline jule::Ptr<_20500ae16_ImportInfo> _204ecd15d_importUseDecl(jule::Ptr<_204eca699_symbolBuilder>, jule::Ptr<_204358c26_UseDecl>&);
inline void _204ecd339_importUseDecls(jule::Ptr<_204eca699_symbolBuilder>);
inline void _204ecd5ae_appendNode(_204eca699_symbolBuilder*, _204307da1_Node&);
inline void _204ecd78a_appendNodes(_204eca699_symbolBuilder*);
inline void _204ecda10_pushDirectivePass(_204eca699_symbolBuilder*, jule::Ptr<_20430829c_Directive>&);
inline void _204ecdbdb_appendTopDirectives(_204eca699_symbolBuilder*);
inline void _204ecddb7_build(jule::Ptr<_204eca699_symbolBuilder>);
struct _204eca699_symbolBuilder {
	jule::Ptr<_204eca699_symbolBuilder> _field_owner = jule::Ptr<_204eca699_symbolBuilder>();
	jule::Trait<_205008298_Importer> _field_importer = jule::Trait<_205008298_Importer>();
	jule::Slice<_20285b7ad_Log> _field_errors = jule::Slice<_20285b7ad_Log>();
	jule::Ptr<_204307202_Ast> _field_ast = jule::Ptr<_204307202_Ast>();
	jule::Ptr<_205074eb3_SymbolTable> _field_table = jule::Ptr<_205074eb3_SymbolTable>();
	

	_204eca699_symbolBuilder(void) = default;

	inline bool operator==(_204eca699_symbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_204eca699_symbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _204ececdb_Str(_204ece8e0_Trait*);
inline jule::Bool _204ed00e9_Equals(jule::Ptr<_204ece8e0_Trait>, jule::Ptr<_2050aa8de_TypeKind>);
inline jule::Bool _204ed045c_IsBuiltin(_204ece8e0_Trait*);
inline jule::Ptr<_204ec707a_Fn> _204ed076a_FindMethod(_204ece8e0_Trait*, jule::Str);
struct _204ece8e0_Trait {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Slice<jule::Ptr<_204ec707a_Fn>> _field_Methods = jule::Slice<jule::Ptr<_204ec707a_Fn>>();
	jule::Slice<jule::Ptr<_20433367e_Struct>> _field_Implemented = jule::Slice<jule::Ptr<_20433367e_Struct>>();
	

	_204ece8e0_Trait(void) = default;

	inline bool operator==(_204ece8e0_Trait _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Implemented == _other._field_Implemented;
	}

	inline bool operator!=(_204ece8e0_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _204ed142a_AutoExpr(_204ed1040_EnumItem*);
struct _204ed1040_EnumItem {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_205080bc2_Value> _field_Value = jule::Ptr<_205080bc2_Value>();
	

	_204ed1040_EnumItem(void) = default;

	inline bool operator==(_204ed1040_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_204ed1040_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _204ed1d98_Str(_204ed1a35_Enum*);
inline jule::Bool _204ed21a6_Equals(jule::Ptr<_204ed1a35_Enum>, jule::Ptr<_2050aa8de_TypeKind>);
inline jule::Ptr<_204ed1040_EnumItem> _204ed25e6_FindItem(_204ed1a35_Enum*, jule::Str);
struct _204ed1a35_Enum {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_2050aea47_TypeSymbol> _field_Kind = jule::Ptr<_2050aea47_TypeSymbol>();
	jule::Slice<jule::Ptr<_204ed1040_EnumItem>> _field_Items = jule::Slice<jule::Ptr<_204ed1040_EnumItem>>();
	

	_204ed1a35_Enum(void) = default;

	inline bool operator==(_204ed1a35_Enum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_204ed1a35_Enum _other) { return !this->operator==(_other); }


};
struct _204ed2a69_TypeEnumItem {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_2050aea47_TypeSymbol> _field_Kind = jule::Ptr<_2050aea47_TypeSymbol>();
	

	_204ed2a69_TypeEnumItem(void) = default;

	inline bool operator==(_204ed2a69_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_204ed2a69_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _204ed3460_Str(_204ed3130_TypeEnum*);
inline jule::Bool _204ed376d_Equals(jule::Ptr<_204ed3130_TypeEnum>, jule::Ptr<_2050aa8de_TypeKind>);
inline jule::Ptr<_204ed2a69_TypeEnumItem> _204ed3b69_FindItem(_204ed3130_TypeEnum*, jule::Str);
struct _204ed3130_TypeEnum {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_204ed2a69_TypeEnumItem>> _field_Items = jule::Slice<jule::Ptr<_204ed2a69_TypeEnumItem>>();
	

	_204ed3130_TypeEnum(void) = default;

	inline bool operator==(_204ed3130_TypeEnum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_204ed3130_TypeEnum _other) { return !this->operator==(_other); }


};
inline jule::Fn<jule::Bool(jule::Ptr<_205014062_Sema>&,jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>&)> _204ed5ad3_readyFn(jule::Ptr<_204ed56a4_constraintChecker>);
inline jule::Bool _204ed5d47_readyFi(jule::Ptr<_204ed56a4_constraintChecker>);
inline jule::Bool _204ed60ab_readySi(jule::Ptr<_204ed56a4_constraintChecker>);
inline jule::Bool _204ed6320_ready(jule::Ptr<_204ed56a4_constraintChecker>);
inline jule::Bool _204ed6584_check(jule::Ptr<_204ed56a4_constraintChecker>);
struct _204ed56a4_constraintChecker {
	jule::Ptr<_205014062_Sema> _field_s = jule::Ptr<_205014062_Sema>();
	jule::Slice<jule::Ptr<_20434d864_GenericDecl>> _field_genericsD = jule::Slice<jule::Ptr<_20434d864_GenericDecl>>();
	jule::Slice<jule::Ptr<_2050a91b2_InsGeneric>> _field_generics = jule::Slice<jule::Ptr<_2050a91b2_InsGeneric>>();
	jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>> _field_genericsA = jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>();
	jule::Ptr<_204ec7454_FnIns> _field_fi = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_20435cc5d_StructIns> _field_si = jule::Ptr<_20435cc5d_StructIns>();
	jule::Ptr<_202b89679_Token> _field_et = jule::Ptr<_202b89679_Token>();
	jule::Bool _field_uniq = jule::Bool();
	

	_204ed56a4_constraintChecker(void) = default;

	inline bool operator==(_204ed56a4_constraintChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_genericsD == _other._field_genericsD &&
			this->_field_generics == _other._field_generics &&
			this->_field_genericsA == _other._field_genericsA &&
			this->_field_fi == _other._field_fi &&
			this->_field_si == _other._field_si &&
			this->_field_et == _other._field_et &&
			this->_field_uniq == _other._field_uniq;
	}

	inline bool operator!=(_204ed56a4_constraintChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _204ed79d6_IsTraitImpl(_204ed75da_Impl*);
inline jule::Bool _204ed7c4a_IsStructImpl(_204ed75da_Impl*);
struct _204ed75da_Impl {
	jule::Ptr<_20434156b_TypeDecl> _field_Base = jule::Ptr<_20434156b_TypeDecl>();
	jule::Ptr<_20434156b_TypeDecl> _field_Dest = jule::Ptr<_20434156b_TypeDecl>();
	jule::Slice<jule::Ptr<_204ec707a_Fn>> _field_Methods = jule::Slice<jule::Ptr<_204ec707a_Fn>>();
	jule::Slice<jule::Ptr<_205031cb6_Var>> _field_Statics = jule::Slice<jule::Ptr<_205031cb6_Var>>();
	

	_204ed75da_Impl(void) = default;

	inline bool operator==(_204ed75da_Impl _other) {
		return 
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_204ed75da_Impl _other) { return !this->operator==(_other); }


};
struct _204edc645_Scope {
	jule::Ptr<_204edc645_Scope> _field_Parent = jule::Ptr<_204edc645_Scope>();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Deferred = jule::Bool();
	jule::Slice<jule::Any> _field_Stmts = jule::Slice<jule::Any>();
	

	_204edc645_Scope(void) = default;

	inline bool operator==(_204edc645_Scope _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts;
	}

	inline bool operator!=(_204edc645_Scope _other) { return !this->operator==(_other); }


};
struct _204edca41_If {
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_204edc645_Scope> _field_Scope = jule::Ptr<_204edc645_Scope>();
	

	_204edca41_If(void) = default;

	inline bool operator==(_204edca41_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_204edca41_If _other) { return !this->operator==(_other); }


};
struct _204edcd2c_Else {
	jule::Ptr<_204edc645_Scope> _field_Scope = jule::Ptr<_204edc645_Scope>();
	

	_204edcd2c_Else(void) = default;

	inline bool operator==(_204edcd2c_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_204edcd2c_Else _other) { return !this->operator==(_other); }


};
struct _204edd1a1_Conditional {
	jule::Slice<jule::Ptr<_204edca41_If>> _field_Elifs = jule::Slice<jule::Ptr<_204edca41_If>>();
	jule::Ptr<_204edcd2c_Else> _field_Default = jule::Ptr<_204edcd2c_Else>();
	

	_204edd1a1_Conditional(void) = default;

	inline bool operator==(_204edd1a1_Conditional _other) {
		return 
			this->_field_Elifs == _other._field_Elifs &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_204edd1a1_Conditional _other) { return !this->operator==(_other); }


};
struct _204edd48c_InfIter {
	jule::Ptr<_204edc645_Scope> _field_Scope = jule::Ptr<_204edc645_Scope>();
	

	_204edd48c_InfIter(void) = default;

	inline bool operator==(_204edd48c_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_204edd48c_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _204eddca6_IsWhileNext(_204edd910_WhileIter*);
struct _204edd910_WhileIter {
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Next = jule::Any();
	jule::Ptr<_204edc645_Scope> _field_Scope = jule::Ptr<_204edc645_Scope>();
	

	_204edd910_WhileIter(void) = default;

	inline bool operator==(_204edd910_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_204edd910_WhileIter _other) { return !this->operator==(_other); }


};
struct _204ede2e5_RangeIter {
	jule::Ptr<_20507eb49_Data> _field_Expr = jule::Ptr<_20507eb49_Data>();
	jule::Ptr<_204edc645_Scope> _field_Scope = jule::Ptr<_204edc645_Scope>();
	jule::Ptr<_205031cb6_Var> _field_KeyA = jule::Ptr<_205031cb6_Var>();
	jule::Ptr<_205031cb6_Var> _field_KeyB = jule::Ptr<_205031cb6_Var>();
	

	_204ede2e5_RangeIter(void) = default;

	inline bool operator==(_204ede2e5_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_204ede2e5_RangeIter _other) { return !this->operator==(_other); }


};
struct _204ede6e1_ContSt {
	jule::Uintptr _field_It = jule::Uintptr();
	

	_204ede6e1_ContSt(void) = default;

	inline bool operator==(_204ede6e1_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_204ede6e1_ContSt _other) { return !this->operator==(_other); }


};
struct _204edea98_BreakSt {
	jule::Uintptr _field_It = jule::Uintptr();
	jule::Uintptr _field_Mtch = jule::Uintptr();
	

	_204edea98_BreakSt(void) = default;

	inline bool operator==(_204edea98_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_204edea98_BreakSt _other) { return !this->operator==(_other); }


};
struct _204eded84_Label {
	jule::Str _field_Ident = jule::Str();
	

	_204eded84_Label(void) = default;

	inline bool operator==(_204eded84_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_204eded84_Label _other) { return !this->operator==(_other); }


};
struct _204ee0170_GotoSt {
	jule::Str _field_Ident = jule::Str();
	

	_204ee0170_GotoSt(void) = default;

	inline bool operator==(_204ee0170_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_204ee0170_GotoSt _other) { return !this->operator==(_other); }


};
struct _204ee0527_Postfix {
	jule::Any _field_Expr = jule::Any();
	jule::Str _field_Op = jule::Str();
	

	_204ee0527_Postfix(void) = default;

	inline bool operator==(_204ee0527_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_204ee0527_Postfix _other) { return !this->operator==(_other); }


};
struct _204ee099a_Assign {
	jule::Ptr<_204ec133d_OperandExprModel> _field_L = jule::Ptr<_204ec133d_OperandExprModel>();
	jule::Ptr<_204ec133d_OperandExprModel> _field_R = jule::Ptr<_204ec133d_OperandExprModel>();
	jule::Ptr<_202b89679_Token> _field_Op = jule::Ptr<_202b89679_Token>();
	

	_204ee099a_Assign(void) = default;

	inline bool operator==(_204ee099a_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_204ee099a_Assign _other) { return !this->operator==(_other); }


};
struct _204ee0d52_MultiAssign {
	jule::Slice<jule::Any> _field_L = jule::Slice<jule::Any>();
	jule::Any _field_R = jule::Any();
	

	_204ee0d52_MultiAssign(void) = default;

	inline bool operator==(_204ee0d52_MultiAssign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R;
	}

	inline bool operator!=(_204ee0d52_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _204ee189c_IsGenericTypeMatch(_204ee1391_Match*);
struct _204ee1391_Match {
	jule::Ptr<_20507eb49_Data> _field_Expr = jule::Ptr<_20507eb49_Data>();
	jule::Bool _field_TypeMatch = jule::Bool();
	jule::Slice<jule::Ptr<_204ee1ddb_Case>> _field_Cases = jule::Slice<jule::Ptr<_204ee1ddb_Case>>();
	jule::Ptr<_204ee1ddb_Case> _field_Default = jule::Ptr<_204ee1ddb_Case>();
	

	_204ee1391_Match(void) = default;

	inline bool operator==(_204ee1391_Match _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_204ee1391_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _204ee21a5_isDefault(_204ee1ddb_Case*);
struct _204ee1ddb_Case {
	jule::Ptr<_204ee1391_Match> _field_Owner = jule::Ptr<_204ee1391_Match>();
	jule::Ptr<_204edc645_Scope> _field_Scope = jule::Ptr<_204edc645_Scope>();
	jule::Slice<jule::Ptr<_20507eb49_Data>> _field_Exprs = jule::Slice<jule::Ptr<_20507eb49_Data>>();
	jule::Ptr<_204ee1ddb_Case> _field_Next = jule::Ptr<_204ee1ddb_Case>();
	

	_204ee1ddb_Case(void) = default;

	inline bool operator==(_204ee1ddb_Case _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs &&
			this->_field_Next == _other._field_Next;
	}

	inline bool operator!=(_204ee1ddb_Case _other) { return !this->operator==(_other); }


};
struct _204ee2491_FallSt {
	jule::Uintptr _field_DestCase = jule::Uintptr();
	

	_204ee2491_FallSt(void) = default;

	inline bool operator==(_204ee2491_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_204ee2491_FallSt _other) { return !this->operator==(_other); }


};
struct _204ee2914_RetSt {
	jule::Ptr<_204ec7454_FnIns> _field_Func = jule::Ptr<_204ec7454_FnIns>();
	jule::Slice<jule::Ptr<_205031cb6_Var>> _field_Vars = jule::Slice<jule::Ptr<_205031cb6_Var>>();
	jule::Any _field_Expr = jule::Any();
	

	_204ee2914_RetSt(void) = default;

	inline bool operator==(_204ee2914_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_204ee2914_RetSt _other) { return !this->operator==(_other); }


};
struct _204ee301e_scopeLabel {
	jule::Ptr<_202b89679_Token> _field_token = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_204eded84_Label> _field_label = jule::Ptr<_204eded84_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_204ee42a6_scopeChecker> _field_scope = jule::Ptr<_204ee42a6_scopeChecker>();
	jule::Bool _field_used = jule::Bool();
	

	_204ee301e_scopeLabel(void) = default;

	inline bool operator==(_204ee301e_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_204ee301e_scopeLabel _other) { return !this->operator==(_other); }


};
struct _204ee3492_scopeGoto {
	jule::Ptr<_20434e0c3_GotoSt> _field_gt = jule::Ptr<_20434e0c3_GotoSt>();
	jule::Ptr<_204ee42a6_scopeChecker> _field_scope = jule::Ptr<_204ee42a6_scopeChecker>();
	jule::I64 _field_pos = jule::I64();
	

	_204ee3492_scopeGoto(void) = default;

	inline bool operator==(_204ee3492_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_204ee3492_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20500ae16_ImportInfo> _204ee4707_FindPackage(_204ee42a6_scopeChecker*, jule::Str);
inline jule::Ptr<_20500ae16_ImportInfo> _204ee4a15_SelectPackage(_204ee42a6_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_20500ae16_ImportInfo>)>);
inline jule::Ptr<_205031cb6_Var> _204ee4dbc_FindVar(_204ee42a6_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_2050a9beb_TypeAlias> _204ee5274_FindTypeAlias(_204ee42a6_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_20433367e_Struct> _204ee562b_FindStruct(_204ee42a6_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_204ec707a_Fn> _204ee59d3_FindFn(_204ee42a6_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_204ece8e0_Trait> _204ee5ce1_FindTrait(_204ee42a6_scopeChecker*, jule::Str);
inline jule::Ptr<_204ed1a35_Enum> _204ee60ee_FindEnum(_204ee42a6_scopeChecker*, jule::Str);
inline jule::Ptr<_204ed3130_TypeEnum> _204ee640c_FindTypeEnum(_204ee42a6_scopeChecker*, jule::Str);
inline jule::Bool _204ee673c_isUnsafe(jule::Ptr<_204ee42a6_scopeChecker>);
inline jule::Bool _204ee69a1_isRoot(_204ee42a6_scopeChecker*);
inline void _204ee6b7c_stop(_204ee42a6_scopeChecker*);
inline jule::Bool _204ee6de1_stopped(_204ee42a6_scopeChecker*);
inline jule::Bool _204ee7155_isDeferred(jule::Ptr<_204ee42a6_scopeChecker>);
inline jule::Ptr<_204ee42a6_scopeChecker> _204ee73b9_getRoot(jule::Ptr<_204ee42a6_scopeChecker>);
inline jule::Ptr<_204ee42a6_scopeChecker> _204ee762d_getHardRoot(jule::Ptr<_204ee42a6_scopeChecker>);
inline jule::Ptr<_204eded84_Label> _204ee793b_findLabel(_204ee42a6_scopeChecker*, jule::Str);
inline jule::Ptr<_204ee301e_scopeLabel> _204ee7c49_findLabelScope(jule::Ptr<_204ee42a6_scopeChecker>, jule::Str);
inline jule::Ptr<_204ee301e_scopeLabel> _204ee8057_findLabelAll(_204ee42a6_scopeChecker*, jule::Str);
inline jule::Bool _204ee840e_isDuplicatedIdent(_204ee42a6_scopeChecker*, jule::Uintptr, jule::Str);
inline void _204ee8684_checkVarDecl(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204353ec9_VarDecl>);
inline void _204ee8909_checkTypeAliasDecl(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_20435783a_TypeAliasDecl>);
inline jule::Ptr<_204edc645_Scope> _204ee8b6d_getChild(_204ee42a6_scopeChecker*);
inline void _204ee9036_checkChildSsc(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204351504_ScopeTree>&, jule::Ptr<_204edc645_Scope>&, jule::Ptr<_204ee42a6_scopeChecker>&);
inline jule::Ptr<_204edc645_Scope> _204ee93dd_checkChildSc(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204351504_ScopeTree>&, jule::Ptr<_204ee42a6_scopeChecker>&);
inline jule::Ptr<_204edc645_Scope> _204ee96eb_checkChild(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204351504_ScopeTree>&);
inline void _204ee9971_checkAnonScope(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204351504_ScopeTree>);
inline void _204ee9c90_processErrorCall(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel>&, jule::Ptr<_202b89679_Token>);
inline void _204eea015_checkExpr(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204345a8c_Expr>);
inline jule::Ptr<_204edca41_If> _204eea323_checkIf(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204356839_If>);
inline jule::Ptr<_204edcd2c_Else> _204eea631_checkElse(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204356be1_Else>);
inline void _204eea8a6_checkConditional(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204357164_Conditional>);
inline void _204eead18_checkIterScopeSsc(jule::Ptr<_204ee42a6_scopeChecker>, jule::Uintptr, jule::Ptr<_204351504_ScopeTree>, jule::Ptr<_204edc645_Scope>&, jule::Ptr<_204ee42a6_scopeChecker>);
inline jule::Ptr<_204edc645_Scope> _204eeb269_checkIterScopeSc(jule::Ptr<_204ee42a6_scopeChecker>, jule::Uintptr, jule::Ptr<_204351504_ScopeTree>, jule::Ptr<_204ee42a6_scopeChecker>);
inline jule::Ptr<_204edc645_Scope> _204eeb621_checkIterScope(jule::Ptr<_204ee42a6_scopeChecker>, jule::Uintptr, jule::Ptr<_204351504_ScopeTree>&);
inline void _204eeb896_checkInfIter(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_2043549e1_Iter>&);
inline void _204eebb1b_checkWhileIter(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_2043549e1_Iter>&);
inline void _204eebd91_checkRangeIter(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_2043549e1_Iter>&);
inline void _204eec116_checkIter(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_2043549e1_Iter>);
inline jule::Bool _204eec424_checkValidContLabel(jule::Ptr<_204ee42a6_scopeChecker>, jule::Uintptr);
inline jule::Bool _204eec732_checkValidBreakLabel(jule::Ptr<_204ee42a6_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_204ede6e1_ContSt> _204eeca40_checkContValidScope(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_2043563b6_ContSt>);
inline void _204eeccb5_checkCont(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_2043563b6_ContSt>);
inline void _204eed03a_checkLabel(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_20434dc1b_LabelSt>);
inline void _204eed2b0_pushGoto(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_20434e0c3_GotoSt>);
inline void _204eed535_checkPostfix(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204350008_AssignSt>);
inline jule::Bool _204eed843_isNewAssignIdent(_204ee42a6_scopeChecker*, jule::Str);
inline jule::Bool _204eedc94_checkStructureAssignOp(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_20435cc5d_StructIns>&, jule::Ptr<_204350008_AssignSt>&, jule::Ptr<_20507eb49_Data>&);
inline void _204eee019_checkSingleAssign(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204350008_AssignSt>&);
inline void _204eee547_processEndPartOfMultiAssign(_204ee42a6_scopeChecker*, jule::Ptr<_204ee0d52_MultiAssign>&, jule::Ptr<_204350008_AssignSt>&, jule::Ptr<_20434e9b9_AssignLeft>&, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&);
inline void _204eee7cd_checkMultiAssign(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204350008_AssignSt>&);
inline void _204eeea53_checkAssignSt(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204350008_AssignSt>);
inline jule::Ptr<_204edc645_Scope> _204eeee0a_checkCaseScope(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204ee1ddb_Case>&, jule::Ptr<_204351504_ScopeTree>&);
inline jule::Ptr<_204ee1ddb_Case> _205000405_checkCase(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204ee1391_Match>, jule::I64, jule::Ptr<_204357cad_Case>, jule::Ptr<_20507eb49_Data>);
inline void _2050007bd_checkCases(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204358484_MatchCase>&, jule::Ptr<_204ee1391_Match>, jule::Ptr<_20507eb49_Data>);
inline jule::Ptr<_204ee1ddb_Case> _205000b75_checkDefault(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204ee1391_Match>, jule::Ptr<_204356be1_Else>);
inline void _205000dea_checkComptimePanic(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204edc645_Scope>&);
inline void _205001219_pushTypeMatch(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204ee1391_Match>, jule::Ptr<_204358484_MatchCase>&);
inline void _20500148e_checkTypeMatch(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204358484_MatchCase>&);
inline void _205001714_checkCommonMatch(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204358484_MatchCase>&);
inline void _205001989_checkMatch(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204358484_MatchCase>);
inline void _205001c0e_checkFall(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_20434e3ae_FallSt>);
inline jule::Ptr<_204edea98_BreakSt> _20500201c_checkBreakWithLabel(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_20435600e_BreakSt>);
inline jule::Ptr<_204edea98_BreakSt> _20500232a_checkPlainBreak(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_20435600e_BreakSt>);
inline void _2050025a0_checkBreak(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_20435600e_BreakSt>);
inline void _205002825_checkRet(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204354381_RetSt>);
inline void _205002a9a_checkUseExpr(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_20434642d_UseExpr>);
inline void _205002d20_checkNode(jule::Ptr<_204ee42a6_scopeChecker>, jule::Any&);
inline void _205002eeb_checkResult(jule::Ptr<_204ee42a6_scopeChecker>);
inline void _2050031c7_checkTree(jule::Ptr<_204ee42a6_scopeChecker>);
inline void _2050034e6_checkGoto(_204ee42a6_scopeChecker*, jule::Ptr<_204ee3492_scopeGoto>&, jule::Ptr<_204ee301e_scopeLabel>&);
inline void _2050036c2_checkGotos(_204ee42a6_scopeChecker*);
inline void _20500389d_checkLabels(_204ee42a6_scopeChecker*);
inline void _205003a79_checkVars(_204ee42a6_scopeChecker*);
inline void _205003c55_checkAliases(_204ee42a6_scopeChecker*);
inline void _205004074_check(jule::Ptr<_204ee42a6_scopeChecker>, jule::Ptr<_204351504_ScopeTree>&, jule::Ptr<_204edc645_Scope>&);
inline jule::Ptr<_204ee42a6_scopeChecker> _2050042d8_newChildChecker(jule::Ptr<_204ee42a6_scopeChecker>);
struct _204ee42a6_scopeChecker {
	jule::Ptr<_202b89679_Token> _field_calledFrom = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_205014062_Sema> _field_s = jule::Ptr<_205014062_Sema>();
	jule::Ptr<_204ec7454_FnIns> _field_owner = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ee42a6_scopeChecker> _field_parent = jule::Ptr<_204ee42a6_scopeChecker>();
	jule::I64 _field_childIndex = jule::I64();
	jule::Ptr<_205074eb3_SymbolTable> _field_table = jule::Ptr<_205074eb3_SymbolTable>();
	jule::Ptr<_204edc645_Scope> _field_scope = jule::Ptr<_204edc645_Scope>();
	jule::Ptr<_204351504_ScopeTree> _field_tree = jule::Ptr<_204351504_ScopeTree>();
	jule::Ptr<_204ec7454_FnIns> _field_result = jule::Ptr<_204ec7454_FnIns>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_204ee301e_scopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_204ee301e_scopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_204ee3492_scopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_204ee3492_scopeGoto>>>();
	jule::I64 _field_i = jule::I64();
	

	_204ee42a6_scopeChecker(void) = default;

	inline bool operator==(_204ee42a6_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_204ee42a6_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _2050052c8_checkCdef(_205004d88_directiveChecker*, jule::Ptr<_20430829c_Directive>&);
inline void _20500554d_checkTypedef(_205004d88_directiveChecker*, jule::Ptr<_20430829c_Directive>&);
inline void _2050057c3_checkDerive(_205004d88_directiveChecker*, jule::Ptr<_20430829c_Directive>&);
inline void _205005a48_checkNamespace(_205004d88_directiveChecker*, jule::Ptr<_20430829c_Directive>&);
inline void _205005cbd_checkDeprecated(_205004d88_directiveChecker*, jule::Ptr<_20430829c_Directive>&);
inline void _205006043_checkTest(_205004d88_directiveChecker*, jule::Ptr<_20430829c_Directive>&);
inline void _2050062b8_checkDirective(_205004d88_directiveChecker*, jule::Ptr<_20430829c_Directive>&);
inline void _205006494_check(_205004d88_directiveChecker*);
struct _205004d88_directiveChecker {
	jule::Ptr<_205014062_Sema> _field_s = jule::Ptr<_205014062_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_20430829c_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_20430829c_Directive>>>();
	jule::Any _field_o = jule::Any();
	

	_205004d88_directiveChecker(void) = default;

	inline bool operator==(_205004d88_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_205004d88_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20500ae16_ImportInfo> _20500b433_FindPackage(_20500ae16_ImportInfo*, jule::Str);
inline jule::Ptr<_20500ae16_ImportInfo> _20500b741_SelectPackage(_20500ae16_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_20500ae16_ImportInfo>)>);
inline jule::Ptr<_205031cb6_Var> _20500bae8_FindVar(_20500ae16_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_2050a9beb_TypeAlias> _20500bea0_FindTypeAlias(_20500ae16_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_20433367e_Struct> _20500c357_FindStruct(_20500ae16_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_204ec707a_Fn> _20500c70e_FindFn(_20500ae16_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_204ece8e0_Trait> _20500ca1c_FindTrait(_20500ae16_ImportInfo*, jule::Str);
inline jule::Ptr<_204ed1a35_Enum> _20500cd2a_FindEnum(_20500ae16_ImportInfo*, jule::Str);
inline jule::Ptr<_204ed3130_TypeEnum> _20500d138_FindTypeEnum(_20500ae16_ImportInfo*, jule::Str);
inline jule::Bool _20500d4ce_isLookupable(_20500ae16_ImportInfo*, jule::Str);
inline jule::Bool _20500d7dc_existIdent(_20500ae16_ImportInfo*, jule::Str);
inline jule::Bool _20500da73_isAccessibleViaSelection(_20500ae16_ImportInfo*);
struct _20500ae16_ImportInfo {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Path = jule::Str();
	jule::Str _field_LinkPath = jule::Str();
	jule::Str _field_Ident = jule::Str();
	jule::Str _field_Alias = jule::Str();
	jule::Bool _field_Duplicate = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Std = jule::Bool();
	jule::Bool _field_ImportAll = jule::Bool();
	jule::Slice<jule::Ptr<_202b89679_Token>> _field_Selected = jule::Slice<jule::Ptr<_202b89679_Token>>();
	jule::Ptr<_20500dd70_Package> _field_Package = jule::Ptr<_20500dd70_Package>();
	jule::I64 _field_ModId = jule::I64();
	

	_20500ae16_ImportInfo(void) = default;

	inline bool operator==(_20500ae16_ImportInfo _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Path == _other._field_Path &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Duplicate == _other._field_Duplicate &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std &&
			this->_field_ImportAll == _other._field_ImportAll &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_Package == _other._field_Package &&
			this->_field_ModId == _other._field_ModId;
	}

	inline bool operator!=(_20500ae16_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20500ae16_ImportInfo> _20500e348_FindPackage(_20500dd70_Package*, jule::Str);
inline jule::Ptr<_20500ae16_ImportInfo> _20500e656_SelectPackage(_20500dd70_Package*, jule::Fn<jule::Bool(jule::Ptr<_20500ae16_ImportInfo>)>);
inline jule::Ptr<_205031cb6_Var> _20500ea0d_FindVar(_20500dd70_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_2050a9beb_TypeAlias> _20500edb5_FindTypeAlias(_20500dd70_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_20433367e_Struct> _20501026c_FindStruct(_20500dd70_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_204ec707a_Fn> _205010624_FindFn(_20500dd70_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_204ece8e0_Trait> _205010932_FindTrait(_20500dd70_Package*, jule::Str);
inline jule::Ptr<_204ed1a35_Enum> _205010c40_FindEnum(_20500dd70_Package*, jule::Str);
inline jule::Ptr<_204ed3130_TypeEnum> _20501104d_FindTypeEnum(_20500dd70_Package*, jule::Str);
struct _20500dd70_Package {
	jule::Slice<jule::Ptr<_205074eb3_SymbolTable>> _field_Files = jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>();
	

	_20500dd70_Package(void) = default;

	inline bool operator==(_20500dd70_Package _other) {
		return 
			this->_field_Files == _other._field_Files;
	}

	inline bool operator!=(_20500dd70_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20500ae16_ImportInfo> _20501457e_FindPackage(_205014062_Sema*, jule::Str);
inline jule::Ptr<_20500ae16_ImportInfo> _20501488c_SelectPackage(_205014062_Sema*, jule::Fn<jule::Bool(jule::Ptr<_20500ae16_ImportInfo>)>);
inline jule::Ptr<_205031cb6_Var> _205014c44_FindVar(_205014062_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_2050a9beb_TypeAlias> _2050150eb_FindTypeAlias(_205014062_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_20433367e_Struct> _2050154a3_FindStruct(_205014062_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_204ec707a_Fn> _20501585a_FindFn(_205014062_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_204ece8e0_Trait> _205015b68_FindTrait(_205014062_Sema*, jule::Str);
inline jule::Ptr<_204ed1a35_Enum> _205015e76_FindEnum(_205014062_Sema*, jule::Str);
inline jule::Ptr<_204ed3130_TypeEnum> _205016284_FindTypeEnum(_205014062_Sema*, jule::Str);
inline jule::Bool _2050165d6_isFlag(_205014062_Sema*, jule::I64);
inline void _20501685b_setCurrentFile(_205014062_Sema*, jule::Ptr<_205074eb3_SymbolTable>);
inline void _205016c24_pushErr(_205014062_Sema*, jule::Ptr<_202b89679_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _205017043_pushSugggestion(_205014062_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2050173ea_isAccessibleDefine(_205014062_Sema*, jule::Bool, jule::Ptr<_202b89679_Token>);
inline jule::Bool _20501784b_isDuplicatedIdent(_205014062_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _205017b6a_checkDirectives(jule::Ptr<_205014062_Sema>, jule::Slice<jule::Ptr<_20430829c_Directive>>&, jule::Any);
inline jule::Bool _2050180bb_checkGenericQuantity(_205014062_Sema*, jule::I64, jule::I64, jule::Ptr<_202b89679_Token>);
inline jule::Bool _205018495_isDuplicatedImportSelection(_205014062_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _20501885d_getImportDef(_205014062_Sema*, jule::Str, jule::Ptr<_20500ae16_ImportInfo>&);
inline jule::Bool _1db103973_checkImportSelection(_205014062_Sema*, jule::Ptr<_202b89679_Token>&, jule::Ptr<_205031cb6_Var>&);
inline jule::Bool _1db107ec7_checkImportSelection(_205014062_Sema*, jule::Ptr<_202b89679_Token>&, jule::Ptr<_2050a9beb_TypeAlias>&);
inline jule::Bool _1db10c4d7_checkImportSelection(_205014062_Sema*, jule::Ptr<_202b89679_Token>&, jule::Ptr<_20433367e_Struct>&);
inline jule::Bool _1db111be5_checkImportSelection(_205014062_Sema*, jule::Ptr<_202b89679_Token>&, jule::Ptr<_204ece8e0_Trait>&);
inline jule::Bool _1db116205_checkImportSelection(_205014062_Sema*, jule::Ptr<_202b89679_Token>&, jule::Ptr<_204ed1a35_Enum>&);
inline jule::Bool _1db11a715_checkImportSelection(_205014062_Sema*, jule::Ptr<_202b89679_Token>&, jule::Ptr<_204ed3130_TypeEnum>&);
inline jule::Bool _1db11ec25_checkImportSelection(_205014062_Sema*, jule::Ptr<_202b89679_Token>&, jule::Ptr<_204ec707a_Fn>&);
inline jule::Bool _205019045_checkImportSelectedSelections(_205014062_Sema*, jule::Ptr<_20500ae16_ImportInfo>&);
inline jule::Bool _1db124774_checkImportsAllSelectionsFromCollection(_205014062_Sema*, jule::Slice<jule::Ptr<_205031cb6_Var>>&, jule::Ptr<_202b89679_Token>&);
inline jule::Bool _1db125bd7_checkImportsAllSelectionsFromCollection(_205014062_Sema*, jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>&, jule::Ptr<_202b89679_Token>&);
inline jule::Bool _1db12835a_checkImportsAllSelectionsFromCollection(_205014062_Sema*, jule::Slice<jule::Ptr<_20433367e_Struct>>&, jule::Ptr<_202b89679_Token>&);
inline jule::Bool _1db12c8e2_checkImportsAllSelectionsFromCollection(_205014062_Sema*, jule::Slice<jule::Ptr<_204ec707a_Fn>>&, jule::Ptr<_202b89679_Token>&);
inline jule::Bool _1db12e3b6_checkImportsAllSelectionsFromCollection(_205014062_Sema*, jule::Slice<jule::Ptr<_204ece8e0_Trait>>&, jule::Ptr<_202b89679_Token>&);
inline jule::Bool _1db132386_checkImportsAllSelectionsFromCollection(_205014062_Sema*, jule::Slice<jule::Ptr<_204ed1a35_Enum>>&, jule::Ptr<_202b89679_Token>&);
inline jule::Bool _1db135356_checkImportsAllSelectionsFromCollection(_205014062_Sema*, jule::Slice<jule::Ptr<_204ed3130_TypeEnum>>&, jule::Ptr<_202b89679_Token>&);
inline jule::Bool _205019771_checkImportAllSelections(_205014062_Sema*, jule::Ptr<_20500ae16_ImportInfo>&);
inline jule::Bool _205019a90_checkImportSelections(_205014062_Sema*, jule::Ptr<_20500ae16_ImportInfo>&);
inline jule::Bool _205019d9d_isUseAliasDuplication(_205014062_Sema*, jule::Ptr<_20500ae16_ImportInfo>&);
inline jule::Bool _20501a1ab_checkImport(_205014062_Sema*, jule::Ptr<_20500ae16_ImportInfo>&);
inline void _20501a387_checkImports(_205014062_Sema*);
inline void _20501a563_implFileImpls(jule::Ptr<_205014062_Sema>);
inline void _20501a73e_implImpls(jule::Ptr<_205014062_Sema>);
inline void _20501a91a_checkEnums(jule::Ptr<_205014062_Sema>);
inline _2050b8e19_typeChecker _20501ad6b_typeChecker(jule::Ptr<_205014062_Sema>, jule::Trait<_2050c6520_Lookup>, jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>, jule::Ptr<_2050b8105_referencer>);
inline jule::Ptr<_2050aa8de_TypeKind> _20501b366_buildTypeWithRefers(jule::Ptr<_205014062_Sema>, jule::Ptr<_20434156b_TypeDecl>&, jule::Trait<_2050c6520_Lookup>, jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>, jule::Ptr<_2050b8105_referencer>);
inline jule::Bool _20501b861_checkTypeWithRefers(jule::Ptr<_205014062_Sema>, jule::Ptr<_2050aea47_TypeSymbol>&, jule::Trait<_2050c6520_Lookup>, jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>, jule::Ptr<_2050b8105_referencer>);
inline jule::Ptr<_204ed56a4_constraintChecker> _20501bac5_constraintChecker(jule::Ptr<_205014062_Sema>);
inline jule::Bool _20501be7c_checkType(jule::Ptr<_205014062_Sema>, jule::Ptr<_2050aea47_TypeSymbol>&, jule::Trait<_2050c6520_Lookup>);
inline jule::Ptr<_2050aa8de_TypeKind> _20501c3cd_buildTypeWithGenerics(jule::Ptr<_205014062_Sema>, jule::Ptr<_20434156b_TypeDecl>&, jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>, jule::Ptr<_204ec7e27_ReferenceStack>);
inline jule::Ptr<_2050aa8de_TypeKind> _20501c6db_buildType(jule::Ptr<_205014062_Sema>, jule::Ptr<_20434156b_TypeDecl>&);
inline jule::Ptr<_2050aa8de_TypeKind> _20501c9e9_selectType(jule::Ptr<_205014062_Sema>, jule::Ptr<_20434156b_TypeDecl>&);
inline jule::Ptr<_2050816b7_Eval> _20501ce4a_evalpd(jule::Ptr<_205014062_Sema>, jule::Trait<_2050c6520_Lookup>, jule::Ptr<_2050aa8de_TypeKind>, jule::Ptr<_205031cb6_Var>);
inline jule::Ptr<_2050816b7_Eval> _20501d302_evalp(jule::Ptr<_205014062_Sema>, jule::Trait<_2050c6520_Lookup>, jule::Ptr<_2050aa8de_TypeKind>);
inline jule::Ptr<_2050816b7_Eval> _20501d610_eval(jule::Ptr<_205014062_Sema>, jule::Trait<_2050c6520_Lookup>);
inline jule::Bool _20501db0a_checkAssignType(jule::Ptr<_205014062_Sema>, jule::Bool, jule::Ptr<_2050aa8de_TypeKind>&, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_202b89679_Token>);
inline jule::Bool _20501e05b_checkTypeCompatibility(jule::Ptr<_205014062_Sema>, jule::Ptr<_2050aa8de_TypeKind>&, jule::Ptr<_2050aa8de_TypeKind>&, jule::Ptr<_202b89679_Token>&);
inline jule::Ptr<_2050aa8de_TypeKind> _20501e435_buildNonGenericTypeKind(jule::Ptr<_205014062_Sema>, jule::Ptr<_20434156b_TypeDecl>&, jule::Slice<jule::Ptr<_20434d864_GenericDecl>>&);
inline void _20501e6dd_buildFnNonGenericTypeKinds(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ec7454_FnIns>&);
inline jule::Ptr<_204ec7454_FnIns> _20501ea0c_getTraitCheckFnKind(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ec707a_Fn>&);
inline jule::Bool _20501ee5d_checkConstraintsFn(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ec7454_FnIns>&, jule::Ptr<_202b89679_Token>&, jule::Ptr<_204ec7454_FnIns>);
inline jule::Bool _2050203ae_checkConstraintsStruct(jule::Ptr<_205014062_Sema>, jule::Ptr<_20435cc5d_StructIns>&, jule::Ptr<_202b89679_Token>&, jule::Ptr<_20435cc5d_StructIns>);
inline jule::Bool _205020766_fnEnvironment(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ec7454_FnIns>&, jule::Fn<jule::Bool(jule::Ptr<_205014062_Sema>&,jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>&)>);
inline void _2050209db_checkFnParamKind(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ec7267_ParamIns>&);
inline jule::Bool _205020ce9_reloadFnInsTypes(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ec7454_FnIns>);
inline jule::Bool _20502126c_checkRefValidityForInitExpr(jule::Ptr<_205014062_Sema>, jule::Bool, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_202b89679_Token>&);
inline jule::Bool _205021844_checkValidityForInitExpr(jule::Ptr<_205014062_Sema>, jule::Bool, jule::Bool, jule::Ptr<_2050aa8de_TypeKind>&, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_202b89679_Token>&);
inline jule::Bool _205021c0c_checkTypeAliasDeclKind(jule::Ptr<_205014062_Sema>, jule::Ptr<_2050a9beb_TypeAlias>&, jule::Trait<_2050c6520_Lookup>);
inline void _20502202b_checkTypeAliasDecl(jule::Ptr<_205014062_Sema>, jule::Ptr<_2050a9beb_TypeAlias>&, jule::Trait<_2050c6520_Lookup>);
inline void _2050222a1_checkTypeAliasDeclDup(jule::Ptr<_205014062_Sema>, jule::Ptr<_2050a9beb_TypeAlias>&);
inline jule::Bool _205022515_checkTypeAliasDecls(jule::Ptr<_205014062_Sema>);
inline void _1d9c88791_checkEnumItemsDup(_205014062_Sema*, jule::Slice<jule::Ptr<_204ed1040_EnumItem>>);
inline void _1d9c94e40_checkEnumItemsDup(_205014062_Sema*, jule::Slice<jule::Ptr<_204ed2a69_TypeEnumItem>>);
inline void _205022a10_checkEnumItemsStr(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ed1a35_Enum>&);
inline void _205022c85_checkEnumItemsInt(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ed1a35_Enum>&);
inline void _20502300a_checkEnumDecl(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ed1a35_Enum>&);
inline void _205023280_checkTypeEnumDecl(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ed3130_TypeEnum>&);
inline jule::Bool _2050234e4_checkEnumDecls(jule::Ptr<_205014062_Sema>);
inline jule::Bool _205023758_checkTypeEnumDecls(jule::Ptr<_205014062_Sema>);
inline jule::Bool _205023a66_checkDeclGenerics(_205014062_Sema*, jule::Slice<jule::Ptr<_20434d864_GenericDecl>>&);
inline jule::Bool _205023d74_checkFnDeclParamsDup(_205014062_Sema*, jule::Ptr<_204ec707a_Fn>&);
inline jule::Bool _205024182_checkFnDeclResultDup(_205014062_Sema*, jule::Ptr<_204ec707a_Fn>&);
inline void _205024407_checkFnDeclPrototype(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ec707a_Fn>&);
inline void _20502467c_checkTraitDeclMethod(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ec707a_Fn>&);
inline void _205024902_checkTraitDeclMethods(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ece8e0_Trait>&);
inline void _205024b77_checkTraitDecl(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ece8e0_Trait>&);
inline jule::Bool _205024ddb_checkTraitDecls(jule::Ptr<_205014062_Sema>);
inline jule::Bool _205025293_checkTraitImplMethods(_205014062_Sema*, jule::Ptr<_204ece8e0_Trait>&, jule::Ptr<_204ed75da_Impl>&);
inline jule::Bool _20502564a_implToStruct(jule::Ptr<_205014062_Sema>, jule::Ptr<_20433367e_Struct>&, jule::Ptr<_204ed75da_Impl>&);
inline void _2050258c0_implTrait(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ed75da_Impl>&);
inline void _205025b45_implStruct(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ed75da_Impl>&);
inline void _205025dba_implImpl(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ed75da_Impl>&);
inline void _2050261d9_checkVarDecl(jule::Ptr<_205014062_Sema>, jule::Ptr<_205031cb6_Var>&, jule::Trait<_2050c6520_Lookup>);
inline void _20502645e_checkGlobalVarDecl(jule::Ptr<_205014062_Sema>, jule::Ptr<_205031cb6_Var>&);
inline jule::Bool _2050266c3_checkGlobalDecls(jule::Ptr<_205014062_Sema>);
inline jule::Bool _205026a7a_checkStructTraitImpl(jule::Ptr<_205014062_Sema>, jule::Ptr<_20433367e_Struct>&, jule::Ptr<_204ece8e0_Trait>&);
inline jule::Bool _205026d88_checkStructImpls(jule::Ptr<_205014062_Sema>, jule::Ptr<_20433367e_Struct>&);
inline jule::Bool _205027196_checkStructFields(jule::Ptr<_205014062_Sema>, jule::Ptr<_20433367e_Struct>&);
inline void _20502741b_checkStructDecl(jule::Ptr<_205014062_Sema>, jule::Ptr<_20433367e_Struct>&);
inline jule::Bool _205027680_checkStructDecls(jule::Ptr<_205014062_Sema>);
inline void _205027905_checkFnDecl(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ec707a_Fn>&);
inline jule::Bool _205027b69_checkFnDecls(jule::Ptr<_205014062_Sema>);
inline void _205028032_pushCycleError(_205014062_Sema*, jule::Ptr<_20433367e_Struct>&, jule::Ptr<_20433367e_Struct>&, jule::Str&);
inline jule::Bool _205028483_checkCrossCycle(_205014062_Sema*, jule::Ptr<_20433367e_Struct>&, jule::Ptr<_20433367e_Struct>&, jule::Str&);
inline jule::Bool _205028906_checkStructDeriveIllegalCycles(_205014062_Sema*, jule::Str, jule::Ptr<_20433367e_Struct>&, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _205028c47_checkStructInsDeriveClone(_205014062_Sema*, jule::Ptr<_20435cc5d_StructIns>);
inline void _205028e34_checkPackageDecls(jule::Ptr<_205014062_Sema>);
inline void _205029275_checkDataForTypeInference(_205014062_Sema*, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_202b89679_Token>&);
inline void _20502950b_checkVar(jule::Ptr<_205014062_Sema>, jule::Ptr<_205031cb6_Var>&);
inline void _20502982a_checkTypeVar(jule::Ptr<_205014062_Sema>, jule::Ptr<_205031cb6_Var>&, jule::Trait<_2050c6520_Lookup>);
inline void _205029a06_checkGlobalTypes(jule::Ptr<_205014062_Sema>);
inline jule::Ptr<_204ec7454_FnIns> _205029dad_readyToCheckFn(jule::Ptr<_205014062_Sema>, jule::Ptr<_20435cc5d_StructIns>&, jule::Ptr<_204ec707a_Fn>&);
inline void _20502a1cc_checkTypeMethod(jule::Ptr<_205014062_Sema>, jule::Ptr<_20435cc5d_StructIns>&, jule::Ptr<_204ec707a_Fn>&);
inline jule::Ptr<_204ec7454_FnIns> _20502a62d_checkStructInsOp(jule::Ptr<_205014062_Sema>, jule::Ptr<_20435cc5d_StructIns>&, jule::Ptr<_204ec707a_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>);
inline jule::Bool _20502a9d5_checkStructEnv(jule::Ptr<_205014062_Sema>, jule::Ptr<_20435cc5d_StructIns>&, jule::Ptr<_202b89679_Token>);
inline jule::Bool _20502ad8c_precheckStructIns(jule::Ptr<_205014062_Sema>, jule::Ptr<_20435cc5d_StructIns>&, jule::Ptr<_202b89679_Token>);
inline void _20502b112_checkStructIns(jule::Ptr<_205014062_Sema>, jule::Ptr<_20435cc5d_StructIns>&);
inline void _20502b387_checkTypeStruct(jule::Ptr<_205014062_Sema>, jule::Ptr<_20433367e_Struct>&);
inline void _20502b563_checkStructTypes(jule::Ptr<_205014062_Sema>);
inline void _20502b80a_checkStructInsOperators(jule::Ptr<_205014062_Sema>, jule::Ptr<_20435cc5d_StructIns>);
inline void _20502ba91_precheckStructType(jule::Ptr<_205014062_Sema>, jule::Ptr<_20433367e_Struct>&);
inline void _20502bc6c_precheckStructTypes(jule::Ptr<_205014062_Sema>);
inline void _20502bee2_checkRets(_205014062_Sema*, jule::Ptr<_204ec7454_FnIns>&);
inline void _20502c311_checkFnInsSc(_205014062_Sema*, jule::Ptr<_204ec7454_FnIns>&, jule::Ptr<_204ee42a6_scopeChecker>&);
inline void _20502c630_checkFnInsCaller(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ec7454_FnIns>&, jule::Ptr<_202b89679_Token>);
inline void _20502c8a5_checkFnIns(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ec7454_FnIns>&);
inline void _20502cb2a_checkTypeFn(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ec707a_Fn>&);
inline void _20502cda0_checkTestFn(_205014062_Sema*, jule::Ptr<_204ec7454_FnIns>&);
inline void _20502d125_precheckTypeFn(jule::Ptr<_205014062_Sema>, jule::Ptr<_204ec707a_Fn>&);
inline void _20502d301_precheckFnTypes(jule::Ptr<_205014062_Sema>);
inline void _20502d4cc_checkFnTypes(jule::Ptr<_205014062_Sema>);
inline void _20502d6a8_checkPackageTypes(jule::Ptr<_205014062_Sema>);
inline void _20502d884_setFileSemaFields(jule::Ptr<_205014062_Sema>);
inline void _20502da60_setSemaFields(jule::Ptr<_205014062_Sema>);
inline void _20502dcd5_check(jule::Ptr<_205014062_Sema>, jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>&);
struct _205014062_Sema {
	jule::Slice<_20285b7ad_Log> _field_errors = jule::Slice<_20285b7ad_Log>();
	jule::Slice<jule::Ptr<_205074eb3_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>();
	jule::Ptr<_205074eb3_SymbolTable> _field_file = jule::Ptr<_205074eb3_SymbolTable>();
	jule::I64 _field_flags = 0LL;
	

	_205014062_Sema(void) = default;

	inline bool operator==(_205014062_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_205014062_Sema _other) { return !this->operator==(_other); }


};
inline _20502e18c_missingRetChecker static__20502e555_new(void);
inline jule::Bool _20502e830_checkConditional(_20502e18c_missingRetChecker*, jule::Ptr<_204edd1a1_Conditional>);
inline jule::Bool _20502eb3d_checkMatch(_20502e18c_missingRetChecker*, jule::Ptr<_204ee1391_Match>);
inline jule::Bool _20502ee4b_checkInfIter(_20502e18c_missingRetChecker*, jule::Ptr<_204edd48c_InfIter>);
inline jule::Bool _205030259_checkScope(_20502e18c_missingRetChecker*, jule::Ptr<_204edc645_Scope>);
inline jule::Bool _205030567_check(_20502e18c_missingRetChecker*, jule::Ptr<_204edc645_Scope>);
struct _20502e18c_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked = jule::Slice<jule::Uintptr>();
	jule::Bool _field_falled = jule::Bool();
	

	_20502e18c_missingRetChecker(void) = default;

	inline bool operator==(_20502e18c_missingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_20502e18c_missingRetChecker _other) { return !this->operator==(_other); }


};
struct _205030d4d_IterRelation {
	jule::Ptr<_205031cb6_Var> _field_Range = jule::Ptr<_205031cb6_Var>();
	

	_205030d4d_IterRelation(void) = default;

	inline bool operator==(_205030d4d_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_205030d4d_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _20503217e_IsInitialized(_205031cb6_Var*);
inline jule::Bool _2050323e3_IsTypeInferred(_205031cb6_Var*);
inline jule::Bool _205032657_untypedConstant(_205031cb6_Var*);
struct _205031cb6_Var {
	jule::Ptr<_204edc645_Scope> _field_Scope = jule::Ptr<_204edc645_Scope>();
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Constant = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Used = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_2050aea47_TypeSymbol> _field_Kind = jule::Ptr<_2050aea47_TypeSymbol>();
	jule::Ptr<_205080bc2_Value> _field_Value = jule::Ptr<_205080bc2_Value>();
	jule::Ptr<_204ec7e27_ReferenceStack> _field_Refers = jule::Ptr<_204ec7e27_ReferenceStack>();
	jule::Slice<jule::Ptr<_20430829c_Directive>> _field_Directives = jule::Slice<jule::Ptr<_20430829c_Directive>>();
	jule::Ptr<_205030d4d_IterRelation> _field_IterRelation = jule::Ptr<_205030d4d_IterRelation>();
	jule::Slice<jule::Ptr<_205031cb6_Var>> _field_Depends = jule::Slice<jule::Ptr<_205031cb6_Var>>();
	

	_205031cb6_Var(void) = default;

	inline bool operator==(_205031cb6_Var _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Public == _other._field_Public &&
			this->_field_Used == _other._field_Used &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Value == _other._field_Value &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_IterRelation == _other._field_IterRelation &&
			this->_field_Depends == _other._field_Depends;
	}

	inline bool operator!=(_205031cb6_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__2050331d5_Dispose(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__20503347c_Str(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__2050337bd_logical(jule::Ptr<_204ec707a_Fn>&, jule::Str);
inline jule::Bool static__205033a65_Eq(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__205033d0c_Gt(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__2050340a4_GtEq(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__20503434b_Lt(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__2050345e3_LtEq(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__205034934_result(jule::Ptr<_204ec707a_Fn>&, jule::Str);
inline jule::Bool static__205034bcb_Shl(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__205034e73_Shr(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__20503521a_Add(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__2050354b2_Sub(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__205035759_Div(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__205035a01_Mul(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__205035c98_Mod(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__205036040_BitAnd(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__2050362d7_BitOr(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__20503657e_BitXor(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__2050368c0_unary(jule::Ptr<_204ec707a_Fn>&, jule::Str);
inline jule::Bool static__205036b67_Neg(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__205036e0e_Pos(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__2050371a6_BitNot(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__2050374e7_assign(jule::Ptr<_204ec707a_Fn>&, jule::Str);
inline jule::Bool static__20503778e_AddAssign(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__205037a36_SubAssign(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__205037ccd_DivAssign(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__205038075_MulAssign(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__20503831c_ModAssign(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__2050385b4_ShlAssign(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__20503885b_ShrAssign(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__205038b03_BitOrAssign(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__205038d9a_BitAndAssign(jule::Ptr<_204ec707a_Fn>);
inline jule::Bool static__205039142_BitXorAssign(jule::Ptr<_204ec707a_Fn>);
struct _205032a64_FuncPattern {
	

	_205032a64_FuncPattern(void) = default;

	inline bool operator==(_205032a64_FuncPattern _other) { return true; }

	inline bool operator!=(_205032a64_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _205063ea2_pushErr(_205063985_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _205064216_checkTrait(_205063985_typeCompatibilityChecker*);
inline jule::Bool _20506447a_checkPtr(_205063985_typeCompatibilityChecker*);
inline jule::Bool _2050646de_checkPrim(_205063985_typeCompatibilityChecker*);
inline jule::Bool _205064a96_typeEnum(_205063985_typeCompatibilityChecker*, jule::Ptr<_204ed3130_TypeEnum>&, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _205064d0a_checkTypeEnum(_205063985_typeCompatibilityChecker*);
inline jule::Bool _20506506e_check(_205063985_typeCompatibilityChecker*);
struct _205063985_typeCompatibilityChecker {
	jule::Ptr<_205014062_Sema> _field_s = jule::Ptr<_205014062_Sema>();
	jule::Ptr<_2050aa8de_TypeKind> _field_dest = jule::Ptr<_2050aa8de_TypeKind>();
	jule::Ptr<_2050aa8de_TypeKind> _field_src = jule::Ptr<_2050aa8de_TypeKind>();
	jule::Ptr<_202b89679_Token> _field_errorToken = jule::Ptr<_202b89679_Token>();
	

	_205063985_typeCompatibilityChecker(void) = default;

	inline bool operator==(_205063985_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_205063985_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _205065a20_pushErr(_2050655ad_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _205065c84_checkValidity(_2050655ad_assignTypeChecker*);
inline jule::Bool _205065ee8_checkConst(_2050655ad_assignTypeChecker*);
inline jule::Bool _20506625c_isPrim(_2050655ad_assignTypeChecker*);
inline jule::Bool _2050664c1_checkCompatibility(_2050655ad_assignTypeChecker*);
inline jule::Bool _205066735_check(_2050655ad_assignTypeChecker*);
struct _2050655ad_assignTypeChecker {
	jule::Ptr<_205014062_Sema> _field_s = jule::Ptr<_205014062_Sema>();
	jule::Ptr<_2050aa8de_TypeKind> _field_dest = jule::Ptr<_2050aa8de_TypeKind>();
	jule::Ptr<_20507eb49_Data> _field_d = jule::Ptr<_20507eb49_Data>();
	jule::Ptr<_202b89679_Token> _field_errorToken = jule::Ptr<_202b89679_Token>();
	

	_2050655ad_assignTypeChecker(void) = default;

	inline bool operator==(_2050655ad_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_2050655ad_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1db39c5bd_annotateConstraintElem(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _1db39bc60_annotateConstraintElem(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _1db39c04b_annotateConstraintElem(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _1db3a584b_annotateConstraintElem(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _2050678ac_annotateConstraintMap(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _205067bba_annotateConstraintTup(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _205067ec8_annotateConstraintFn(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _205068308_annotateConstraintIdent(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _205068627_annotateConstraint(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&);
inline void _205068946_pushGeneric(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&, jule::I64);
inline jule::Bool _205068c54_annotatePrim(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _205069062_annotateArr(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _205069370_annotateSlc(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _205069727_checkMapKey(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _205069a35_annotateMap(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _205069d43_annotateFn(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _20506a151_annotatePtr(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _20506a45e_annotateSptr(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _20506a76c_annotateStruct(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _20506aa7a_annotateAny(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _20506ad88_annotateKind(_205066ec7_dynamicTypeAnnotation*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _20506b0ec_annotate(_205066ec7_dynamicTypeAnnotation*);
struct _205066ec7_dynamicTypeAnnotation {
	jule::Ptr<_2050816b7_Eval> _field_e = jule::Ptr<_2050816b7_Eval>();
	jule::Ptr<_204ec7454_FnIns> _field_f = jule::Ptr<_204ec7454_FnIns>();
	jule::Ptr<_204ec7267_ParamIns> _field_p = jule::Ptr<_204ec7267_ParamIns>();
	jule::Ptr<_20507eb49_Data> _field_a = jule::Ptr<_20507eb49_Data>();
	jule::Ptr<_202b89679_Token> _field_errorToken = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_2050aa8de_TypeKind>* _field_k = nullptr;
	jule::Ptr<_20434156b_TypeDecl> _field_c = jule::Ptr<_20434156b_TypeDecl>();
	

	_205066ec7_dynamicTypeAnnotation(void) = default;

	inline bool operator==(_205066ec7_dynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_k == _other._field_k &&
			this->_field_c == _other._field_c;
	}

	inline bool operator!=(_205066ec7_dynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _20506bd23_pushErrToken(_20506b7c3_fnCallArgChecker*, jule::Ptr<_202b89679_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _20506c142_pushErr(_20506b7c3_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_204ec7267_ParamIns>> _20506c3a6_getParams(_20506b7c3_fnCallArgChecker*);
inline jule::Bool _20506c6b4_checkCounts(_20506b7c3_fnCallArgChecker*, jule::Slice<jule::Ptr<_204ec7267_ParamIns>>&);
inline jule::Bool _20506cb15_checkArg(_20506b7c3_fnCallArgChecker*, jule::Ptr<_204ec7267_ParamIns>&, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_202b89679_Token>&);
inline jule::Bool _20506cebc_push(_20506b7c3_fnCallArgChecker*, jule::Ptr<_204ec7267_ParamIns>&, jule::Ptr<_204345a8c_Expr>);
inline jule::Bool _20506d374_pushVariadic(_20506b7c3_fnCallArgChecker*, jule::Ptr<_204ec7267_ParamIns>&, jule::I64);
inline jule::Bool _20506d682_checkArgs(_20506b7c3_fnCallArgChecker*, jule::Slice<jule::Ptr<_204ec7267_ParamIns>>&);
inline jule::Bool _20506d918_checkDynamicTypeAnnotation(_20506b7c3_fnCallArgChecker*);
inline jule::Bool _20506db8d_check(_20506b7c3_fnCallArgChecker*);
struct _20506b7c3_fnCallArgChecker {
	jule::Ptr<_2050816b7_Eval> _field_e = jule::Ptr<_2050816b7_Eval>();
	jule::Slice<jule::Ptr<_204345a8c_Expr>> _field_args = jule::Slice<jule::Ptr<_204345a8c_Expr>>();
	jule::Ptr<_202b89679_Token> _field_errorToken = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_204ec7454_FnIns> _field_f = jule::Ptr<_204ec7454_FnIns>();
	jule::Bool _field_dynamicAnnotation = jule::Bool();
	jule::Slice<jule::Any> _field_argModels = jule::Slice<jule::Any>();
	

	_20506b7c3_fnCallArgChecker(void) = default;

	inline bool operator==(_20506b7c3_fnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_f == _other._field_f &&
			this->_field_dynamicAnnotation == _other._field_dynamicAnnotation &&
			this->_field_argModels == _other._field_argModels;
	}

	inline bool operator!=(_20506b7c3_fnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _20506e6d8_pushErr(_20506e1cc_structLitChecker*, jule::Ptr<_202b89679_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _20506ea07_pushSugggestion(_20506e1cc_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _20506edc0_pushMatch(_20506e1cc_structLitChecker*, jule::Ptr<_2043393bb_FieldIns>&, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_202b89679_Token>&);
inline void _2050701de_checkPair(_20506e1cc_structLitChecker*, jule::Ptr<_20434a4ed_FieldExprPair>&, jule::Slice<jule::Ptr<_204345a8c_Expr>>&);
inline jule::Bool _2050704ec_readyExprs(_20506e1cc_structLitChecker*, jule::Slice<jule::Ptr<_204345a8c_Expr>>&);
inline void _205070772_check(_20506e1cc_structLitChecker*, jule::Slice<jule::Ptr<_204345a8c_Expr>>&);
struct _20506e1cc_structLitChecker {
	jule::Ptr<_2050816b7_Eval> _field_e = jule::Ptr<_2050816b7_Eval>();
	jule::Ptr<_202b89679_Token> _field_errorToken = jule::Ptr<_202b89679_Token>();
	jule::Ptr<_20435cc5d_StructIns> _field_s = jule::Ptr<_20435cc5d_StructIns>();
	jule::Slice<jule::Ptr<_204ec1904_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_204ec1904_StructArgExprModel>>();
	

	_20506e1cc_structLitChecker(void) = default;

	inline bool operator==(_20506e1cc_structLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_20506e1cc_structLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_205031cb6_Var> _205071256_buildVar(_205070cb1_rangeChecker*, jule::Ptr<_204353ec9_VarDecl>&);
inline void _205071432_setSizeKey(_205070cb1_rangeChecker*);
inline void _2050717ea_checkRangeExprValidity(_205070cb1_rangeChecker*, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_205031cb6_Var>&, jule::Ptr<_2050aa8de_TypeKind>&);
inline void _2050719c6_checkSlice(_205070cb1_rangeChecker*);
inline void _205071ba2_checkArray(_205070cb1_rangeChecker*);
inline void _205071d7d_checkMapKeyA(_205070cb1_rangeChecker*);
inline void _205072059_checkMapKeyB(_205070cb1_rangeChecker*);
inline void _205072235_checkMap(_205070cb1_rangeChecker*);
inline void _205072411_checkStr(_205070cb1_rangeChecker*);
inline jule::Bool _205072675_check(_205070cb1_rangeChecker*);
struct _205070cb1_rangeChecker {
	jule::Ptr<_204ee42a6_scopeChecker> _field_sc = jule::Ptr<_204ee42a6_scopeChecker>();
	jule::Ptr<_204355b57_RangeKind> _field_rang = jule::Ptr<_204355b57_RangeKind>();
	jule::Ptr<_204ede2e5_RangeIter> _field_Kind = jule::Ptr<_204ede2e5_RangeIter>();
	jule::Ptr<_20507eb49_Data> _field_d = jule::Ptr<_20507eb49_Data>();
	

	_205070cb1_rangeChecker(void) = default;

	inline bool operator==(_205070cb1_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_205070cb1_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _2050733bd_prepareTypes(_205072e17_retTypeChecker*);
inline void _205073643_prepareExprs(_205072e17_retTypeChecker*, jule::Ptr<_204345a8c_Expr>&);
inline void _20507381e_retVars(_205072e17_retTypeChecker*);
inline void _2050739ea_checkExprs(_205072e17_retTypeChecker*);
inline jule::Bool _205073d08_check(_205072e17_retTypeChecker*, jule::Ptr<_204345a8c_Expr>&);
struct _205072e17_retTypeChecker {
	jule::Ptr<_204ee42a6_scopeChecker> _field_sc = jule::Ptr<_204ee42a6_scopeChecker>();
	jule::Ptr<_204ec7454_FnIns> _field_f = jule::Ptr<_204ec7454_FnIns>();
	jule::Slice<jule::Ptr<_2050aa8de_TypeKind>> _field_types = jule::Slice<jule::Ptr<_2050aa8de_TypeKind>>();
	jule::Slice<jule::Ptr<_204345a8c_Expr>> _field_exprs = jule::Slice<jule::Ptr<_204345a8c_Expr>>();
	jule::Slice<jule::Ptr<_205031cb6_Var>> _field_vars = jule::Slice<jule::Ptr<_205031cb6_Var>>();
	jule::Ptr<_202b89679_Token> _field_errorToken = jule::Ptr<_202b89679_Token>();
	jule::Any _field_model = jule::Any();
	

	_205072e17_retTypeChecker(void) = default;

	inline bool operator==(_205072e17_retTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_205072e17_retTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20500ae16_ImportInfo> _2050754d0_FindPackage(_205074eb3_SymbolTable*, jule::Str);
inline jule::Ptr<_20500ae16_ImportInfo> _2050757dd_SelectPackage(_205074eb3_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_20500ae16_ImportInfo>)>);
inline jule::Ptr<_205031cb6_Var> _205075b95_FindVar(_205074eb3_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_2050a9beb_TypeAlias> _20507604c_FindTypeAlias(_205074eb3_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_20433367e_Struct> _205076404_FindStruct(_205074eb3_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_204ec707a_Fn> _2050767ab_FindFn(_205074eb3_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_204ece8e0_Trait> _20507b926_FindTrait(_205074eb3_SymbolTable*, jule::Str);
inline jule::Ptr<_204ed1a35_Enum> _20507bc34_FindEnum(_205074eb3_SymbolTable*, jule::Str);
inline jule::Ptr<_204ed3130_TypeEnum> _20507c042_FindTypeEnum(_205074eb3_SymbolTable*, jule::Str);
inline jule::Ptr<_205031cb6_Var> _20507c5b4_findVar(_205074eb3_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_2050a9beb_TypeAlias> _20507ca15_findTypeAlias(_205074eb3_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _20507cdbc_defByIdent(_205074eb3_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _20507d31d_isDuplicatedIdent(_205074eb3_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _205074eb3_SymbolTable {
	jule::Ptr<_202b8ea14_File> _field_File = jule::Ptr<_202b8ea14_File>();
	jule::Slice<_204ec871e_Pass> _field_Passes = jule::Slice<_204ec871e_Pass>();
	jule::Slice<jule::Ptr<_20500ae16_ImportInfo>> _field_Imports = jule::Slice<jule::Ptr<_20500ae16_ImportInfo>>();
	jule::Slice<jule::Ptr<_205031cb6_Var>> _field_Vars = jule::Slice<jule::Ptr<_205031cb6_Var>>();
	jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>> _field_TypeAliases = jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>();
	jule::Slice<jule::Ptr<_20433367e_Struct>> _field_Structs = jule::Slice<jule::Ptr<_20433367e_Struct>>();
	jule::Slice<jule::Ptr<_204ec707a_Fn>> _field_Funcs = jule::Slice<jule::Ptr<_204ec707a_Fn>>();
	jule::Slice<jule::Ptr<_204ece8e0_Trait>> _field_Traits = jule::Slice<jule::Ptr<_204ece8e0_Trait>>();
	jule::Slice<jule::Ptr<_204ed1a35_Enum>> _field_Enums = jule::Slice<jule::Ptr<_204ed1a35_Enum>>();
	jule::Slice<jule::Ptr<_204ed3130_TypeEnum>> _field_TypeEnums = jule::Slice<jule::Ptr<_204ed3130_TypeEnum>>();
	jule::Slice<jule::Ptr<_204ed75da_Impl>> _field_Impls = jule::Slice<jule::Ptr<_204ed75da_Impl>>();
	

	_205074eb3_SymbolTable(void) = default;

	inline bool operator==(_205074eb3_SymbolTable _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Imports == _other._field_Imports &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_TypeAliases == _other._field_TypeAliases &&
			this->_field_Structs == _other._field_Structs &&
			this->_field_Funcs == _other._field_Funcs &&
			this->_field_Traits == _other._field_Traits &&
			this->_field_Enums == _other._field_Enums &&
			this->_field_TypeEnums == _other._field_TypeEnums &&
			this->_field_Impls == _other._field_Impls;
	}

	inline bool operator!=(_205074eb3_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _205080034_IsNil(_20507eb49_Data*);
inline jule::Bool _205080298_IsVoid(_20507eb49_Data*);
inline jule::Bool _20508050c_IsConst(_20507eb49_Data*);
inline jule::Bool _20508081a_GoodOperand(_20507eb49_Data*, jule::Ptr<_20507eb49_Data>&);
struct _20507eb49_Data {
	jule::Bool _field_untyped = jule::Bool();
	jule::Ptr<_2050aa8de_TypeKind> _field_Kind = jule::Ptr<_2050aa8de_TypeKind>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Bool _field_Lvalue = jule::Bool();
	jule::Bool _field_IsRune = jule::Bool();
	jule::Any _field_Model = jule::Any();
	jule::Bool _field_Decl = jule::Bool();
	jule::Ptr<_2044102b6_Const> _field_Constant = jule::Ptr<_2044102b6_Const>();
	

	_20507eb49_Data(void) = default;

	inline bool operator==(_20507eb49_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_20507eb49_Data _other) { return !this->operator==(_other); }


};
struct _205080bc2_Value {
	jule::Ptr<_204345a8c_Expr> _field_Expr = jule::Ptr<_204345a8c_Expr>();
	jule::Ptr<_20507eb49_Data> _field_Data = jule::Ptr<_20507eb49_Data>();
	

	_205080bc2_Value(void) = default;

	inline bool operator==(_205080bc2_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_205080bc2_Value _other) { return !this->operator==(_other); }


};
inline void _205081bc3_pushErr(_2050816b7_Eval*, jule::Ptr<_202b89679_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _205081ee2_pushSugggestion(_2050816b7_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _2050821bd_allowBuiltin(_2050816b7_Eval*);
inline void _205082399_disallowBuiltin(_2050816b7_Eval*);
inline jule::Bool _20508260d_isUnsafe(_2050816b7_Eval*);
inline jule::Bool _205082872_isGlobal(_2050816b7_Eval*);
inline jule::Bool _205082b4c_applyNumericPrefix(_2050816b7_Eval*, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _205082db1_litNil(_2050816b7_Eval*);
inline jule::Ptr<_20507eb49_Data> _2050831be_litStr(_2050816b7_Eval*, jule::Ptr<_204346ac1_LitExpr>&);
inline jule::Ptr<_20507eb49_Data> _2050834cc_litBool(_2050816b7_Eval*, jule::Ptr<_204346ac1_LitExpr>&);
inline jule::Ptr<_20507eb49_Data> _2050837da_litRune(_2050816b7_Eval*, jule::Ptr<_204346ac1_LitExpr>&);
inline jule::Ptr<_20507eb49_Data> _205083ae8_litFloat(_2050816b7_Eval*, jule::Ptr<_204346ac1_LitExpr>&);
inline jule::Ptr<_20507eb49_Data> _205083e06_litInt(_2050816b7_Eval*, jule::Ptr<_204346ac1_LitExpr>&);
inline jule::Ptr<_20507eb49_Data> _205084214_litNum(_2050816b7_Eval*, jule::Ptr<_204346ac1_LitExpr>&);
inline jule::Ptr<_20507eb49_Data> _205084522_evalLit(_2050816b7_Eval*, jule::Ptr<_204346ac1_LitExpr>);
inline jule::Any _205084830_findBuiltins(_2050816b7_Eval*, jule::Str);
inline jule::Any _205084bd7_getDef(_2050816b7_Eval*, jule::Str, jule::Bool);
inline void _1db2a268d_pushReference(_2050816b7_Eval*, jule::Ptr<_204ec7454_FnIns>&);
inline void _1db2b82b9_pushReference(_2050816b7_Eval*, jule::Ptr<_205031cb6_Var>&);
inline void _1db4c4096_pushReference(_2050816b7_Eval*, jule::Ptr<_20435cc5d_StructIns>&);
inline jule::Ptr<_20507eb49_Data> _20508526a__evalEnum(_2050816b7_Eval*, jule::Ptr<_204ed1a35_Enum>);
inline jule::Ptr<_20507eb49_Data> _205085622_evalEnum(_2050816b7_Eval*, jule::Ptr<_204ed1a35_Enum>, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205085930__evalTypeEnum(_2050816b7_Eval*, jule::Ptr<_204ed3130_TypeEnum>);
inline jule::Ptr<_20507eb49_Data> _205085cd7_evalTypeEnum(_2050816b7_Eval*, jule::Ptr<_204ed3130_TypeEnum>, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _2050860e5__evalStruct(_2050816b7_Eval*, jule::Ptr<_20435cc5d_StructIns>);
inline jule::Ptr<_20507eb49_Data> _20508649c_evalStruct(_2050816b7_Eval*, jule::Ptr<_20435cc5d_StructIns>, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _2050867aa_evalFnIns(_2050816b7_Eval*, jule::Ptr<_204ec7454_FnIns>);
inline void _205086ac9_checkDeprecated(_2050816b7_Eval*, jule::Slice<jule::Ptr<_20430829c_Directive>>&, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205086e81_evalFn(_2050816b7_Eval*, jule::Ptr<_204ec707a_Fn>, jule::Ptr<_202b89679_Token>);
inline void _205087349_pushIllegalCycleError(_2050816b7_Eval*, jule::Ptr<_205031cb6_Var>&, jule::Ptr<_205031cb6_Var>&, jule::Str&);
inline jule::Bool _205087701_checkCrossCycle(_2050816b7_Eval*, jule::Ptr<_205031cb6_Var>&, jule::Str&);
inline jule::Bool _205087aa8_checkIllegalCycles(_2050816b7_Eval*, jule::Ptr<_205031cb6_Var>&, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205087e60_evalVar(_2050816b7_Eval*, jule::Ptr<_205031cb6_Var>, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205088317_evalTypeAlias(_2050816b7_Eval*, jule::Ptr<_2050a9beb_TypeAlias>, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _2050886be_evalDef(_2050816b7_Eval*, jule::Any, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _2050889cc_evalIdent(_2050816b7_Eval*, jule::Ptr<_20434774d_IdentExpr>);
inline jule::Ptr<_20507eb49_Data> _205088cda_evalUnary(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_204347e57_UnaryExpr>);
inline jule::Ptr<_20507eb49_Data> _2050890e8_evalVariadic(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_20434830e_VariadicExpr>);
inline jule::Ptr<_20507eb49_Data> _205089406_evalUnsafe(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_2043472ca_UnsafeExpr>);
inline jule::Ptr<_20507eb49_Data> _205089714_evalArr(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_20434c17b_SliceExpr>);
inline jule::Ptr<_20507eb49_Data> _205089b65_evalExpSlc(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_20434c17b_SliceExpr>, jule::Ptr<_2050aa8de_TypeKind>, jule::Any);
inline jule::Ptr<_20507eb49_Data> _205089e73_evalSliceExpr(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_20434c17b_SliceExpr>);
inline void _20508a2b4_checkIntegerIndexingByData(_2050816b7_Eval*, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_202b89679_Token>);
inline void _20508a68d_indexingPtr(_2050816b7_Eval*, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20434c9ea_IndexingExpr>&);
inline void _20508aa56_indexingArr(_2050816b7_Eval*, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20434c9ea_IndexingExpr>&);
inline void _20508ae1e_indexingSlc(_2050816b7_Eval*, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20434c9ea_IndexingExpr>&);
inline void _20508b2d7_indexingMap(_2050816b7_Eval*, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20434c9ea_IndexingExpr>&);
inline void _20508b6a0_indexingStr(_2050816b7_Eval*, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20434c9ea_IndexingExpr>&);
inline void _20508ba68_toIndexing(_2050816b7_Eval*, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20434c9ea_IndexingExpr>&);
inline jule::Bool _20508bedb_pushGenericsFromExprSubIdent(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_204348ee1_SubIdentExpr>&, jule::Slice<jule::Ptr<_20434156b_TypeDecl>>&, jule::Ptr<_204345a8c_Expr>&);
inline jule::Bool _20508c3a4_pushGenericsFromData(jule::Ptr<_2050816b7_Eval>, jule::Slice<jule::Ptr<_20434156b_TypeDecl>>&, jule::Ptr<_204345a8c_Expr>&);
inline void _20508c6e5_evalIdentDeclFromIndexing(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20434c9ea_IndexingExpr>&);
inline jule::Bool _20508cb57_checkGenericFn(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_204ec7454_FnIns>&, jule::Ptr<_202b89679_Token>&, jule::Any&);
inline void _20508ce98_evalFnGenericFromIndexing(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20434c9ea_IndexingExpr>&);
inline jule::Ptr<_20507eb49_Data> _20508d2b7_evalIndexing(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_20434c9ea_IndexingExpr>);
inline std::tuple<jule::Ptr<_20507eb49_Data>,jule::Ptr<_20507eb49_Data>> _20508d5c5_evalSlicingExprs(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_20434d105_SlicingExpr>&);
inline void _20508d84a_slicingArr(_2050816b7_Eval*, jule::Ptr<_20507eb49_Data>&);
inline void _20508dc13_slicingStr(_2050816b7_Eval*, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&);
inline void _20508e175_checkSlicing(_2050816b7_Eval*, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20434d105_SlicingExpr>&);
inline jule::Ptr<_20507eb49_Data> _20508e483_evalSlicing(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_20434d105_SlicingExpr>);
inline void _20508e84b_castPtr(_2050816b7_Eval*, jule::Ptr<_2050aa8de_TypeKind>, jule::Ptr<_20507eb49_Data>, jule::Ptr<_202b89679_Token>);
inline void _20508ec14_castStruct(_2050816b7_Eval*, jule::Ptr<_2050aa8de_TypeKind>, jule::Ptr<_20507eb49_Data>, jule::Ptr<_202b89679_Token>);
inline void _2050900cc_castRef(_2050816b7_Eval*, jule::Ptr<_2050aa8de_TypeKind>, jule::Ptr<_20507eb49_Data>, jule::Ptr<_202b89679_Token>);
inline void _205090495_castSlc(_2050816b7_Eval*, jule::Ptr<_2050aa8de_TypeKind>, jule::Ptr<_20507eb49_Data>, jule::Ptr<_202b89679_Token>);
inline void _2050907b4_castStr(_2050816b7_Eval*, jule::Ptr<_20507eb49_Data>, jule::Ptr<_202b89679_Token>);
inline void _205090b7c_castInt(_2050816b7_Eval*, jule::Ptr<_2050aa8de_TypeKind>, jule::Ptr<_20507eb49_Data>, jule::Ptr<_202b89679_Token>);
inline void _205091045_castNum(_2050816b7_Eval*, jule::Ptr<_2050aa8de_TypeKind>, jule::Ptr<_20507eb49_Data>, jule::Ptr<_202b89679_Token>);
inline void _20509140d_castPrim(_2050816b7_Eval*, jule::Ptr<_2050aa8de_TypeKind>, jule::Ptr<_20507eb49_Data>, jule::Ptr<_202b89679_Token>);
inline void _20509172c_castConstant(_2050816b7_Eval*, jule::Ptr<_2050aa8de_TypeKind>&, jule::Ptr<_20507eb49_Data>&);
inline void _205091ae5_castTypeEnum(_2050816b7_Eval*, jule::Ptr<_2050aa8de_TypeKind>&, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_202b89679_Token>&);
inline void _205091ead_castTypeEnumT(_2050816b7_Eval*, jule::Ptr<_2050aa8de_TypeKind>&, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_202b89679_Token>&);
inline jule::Ptr<_20507eb49_Data> _20509240e_evalCastByTypeNData(_2050816b7_Eval*, jule::Ptr<_2050aa8de_TypeKind>, jule::Ptr<_20507eb49_Data>, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205092860_evalCastT(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_2050aa8de_TypeKind>&, jule::Ptr<_204345a8c_Expr>&, jule::Ptr<_202b89679_Token>&);
inline jule::Ptr<_20507eb49_Data> _205092b6d_evalCast(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_2043486b6_CastExpr>);
inline jule::Ptr<_20507eb49_Data> _205092e7b_evalNsSelection(_2050816b7_Eval*, jule::Ptr<_204348a6d_NsSelectionExpr>);
inline jule::Ptr<_20507eb49_Data> _2050933cc_evalStructLitExplicit(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_20435cc5d_StructIns>, jule::Slice<jule::Ptr<_204345a8c_Expr>>, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _2050936da_evalStructLit(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_20434ac4b_StructLit>);
inline _2050b8e19_typeChecker _20509394e_typeChecker(_2050816b7_Eval*);
inline jule::Ptr<_20507eb49_Data> _205093c5c_evalType(_2050816b7_Eval*, jule::Ptr<_20434156b_TypeDecl>);
inline void _20509407b_callTypeFn(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline void _20509439a_callBuiltinFn(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline void _2050946db_checkFnOfConcurrentCall(_2050816b7_Eval*, jule::Ptr<_204ec7454_FnIns>&, jule::Ptr<_202b89679_Token>);
inline void _205094ad7_processExceptionalHandler(_2050816b7_Eval*, jule::Ptr<_204ec7454_FnIns>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline void _205094e17_callFn(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _205095225_evalFnCall(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_204349a6e_FnCallExpr>);
inline jule::Ptr<_20507eb49_Data> _2050955cc_evalEnumStatic(_2050816b7_Eval*, jule::Ptr<_204ed1a35_Enum>, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205095984_evalTypeEnumStatic(_2050816b7_Eval*, jule::Ptr<_204ed3130_TypeEnum>, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205095d3b_evalStructStatic(_2050816b7_Eval*, jule::Ptr<_20435cc5d_StructIns>, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _20509628c_evalTraitSubIdent(_2050816b7_Eval*, jule::Ptr<_20507eb49_Data>, jule::Ptr<_204ece8e0_Trait>, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205096787_evalStructSubIdent(_2050816b7_Eval*, jule::Ptr<_20507eb49_Data>, jule::Ptr<_20435cc5d_StructIns>, jule::Ptr<_204348ee1_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_20507eb49_Data> _205096b3e_evalSliceSubIdent(_2050816b7_Eval*, jule::Ptr<_20507eb49_Data>, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205096ee6_evalArraySubIdent(_2050816b7_Eval*, jule::Ptr<_20507eb49_Data>, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205097304_evalIntTypeStatic(_2050816b7_Eval*, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205097612_evalUintTypeStatic(_2050816b7_Eval*, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205097920_evalI8TypeStatic(_2050816b7_Eval*, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205097c2d_evalI16TypeStatic(_2050816b7_Eval*, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _20509803b_evalI32TypeStatic(_2050816b7_Eval*, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205098349_evalI64TypeStatic(_2050816b7_Eval*, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205098657_evalU8TypeStatic(_2050816b7_Eval*, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205098965_evalU16TypeStatic(_2050816b7_Eval*, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205098c73_evalU32TypeStatic(_2050816b7_Eval*, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205099081_evalU64TypeStatic(_2050816b7_Eval*, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _20509938e_evalF32TypeStatic(_2050816b7_Eval*, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _20509969c_evalF64TypeStatic(_2050816b7_Eval*, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205099a54_evalPrimStatic(_2050816b7_Eval*, jule::Str, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20507eb49_Data> _205099e0b_evalTypeStatic(_2050816b7_Eval*, jule::Ptr<_20507eb49_Data>, jule::Ptr<_204348ee1_SubIdentExpr>);
inline jule::Ptr<_20507eb49_Data> _20509a2b3_evalObjSubIdent(_2050816b7_Eval*, jule::Ptr<_20507eb49_Data>, jule::Ptr<_204348ee1_SubIdentExpr>);
inline jule::Ptr<_20507eb49_Data> _20509a5c1_evalSubIdent(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_204348ee1_SubIdentExpr>);
inline jule::Ptr<_20507eb49_Data> _20509a8ce_evalTuple(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_204346719_TupleExpr>);
inline jule::Ptr<_20507eb49_Data> _20509ac86_evalMap(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_2050b5b5d_Map>, jule::Ptr<_20434b1be_BraceLit>);
inline jule::Ptr<_20507eb49_Data> _20509b094_evalBraceLit(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_20434b1be_BraceLit>);
inline jule::Ptr<_20507eb49_Data> _20509b3a2_evalAnonFn(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_204352eea_FnDecl>);
inline jule::Ptr<_20507eb49_Data> _20509b6b0_evalBinop(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_204349464_BinopExpr>);
inline jule::Ptr<_20507eb49_Data> _20509b9bd_evalExprKind(jule::Ptr<_2050816b7_Eval>, jule::Any);
inline jule::Ptr<_20507eb49_Data> _20509bccb_eval(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_204345a8c_Expr>);
inline jule::Ptr<_20507eb49_Data> _20509c0d9_evalExpr(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_204345a8c_Expr>);
struct _2050816b7_Eval {
	jule::Ptr<_205014062_Sema> _field_s = jule::Ptr<_205014062_Sema>();
	jule::Trait<_2050c6520_Lookup> _field_lookup = jule::Trait<_2050c6520_Lookup>();
	jule::Ptr<_2050aa8de_TypeKind> _field_prefix = jule::Ptr<_2050aa8de_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_disBuiltin = jule::Bool();
	jule::Ptr<_205031cb6_Var> _field_owner = jule::Ptr<_205031cb6_Var>();
	jule::Ptr<_2043393bb_FieldIns> _field_field = jule::Ptr<_2043393bb_FieldIns>();
	jule::Bool _field_arg = jule::Bool();
	

	_2050816b7_Eval(void) = default;

	inline bool operator==(_2050816b7_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_2050816b7_Eval _other) { return !this->operator==(_other); }


};
inline _20509c55c_unaryEval static__20509ca13_new(jule::Ptr<_2050816b7_Eval>);
inline void _20509cbde_minus(_20509c55c_unaryEval*);
inline void _20509cdba_plus(_20509c55c_unaryEval*);
inline void _20509d096_caret(_20509c55c_unaryEval*);
inline void _20509d272_excl(_20509c55c_unaryEval*);
inline void _20509d44d_star(_20509c55c_unaryEval*);
inline void _20509d629_amper(_20509c55c_unaryEval*);
inline void _20509d805_typeDecl(_20509c55c_unaryEval*);
inline void _20509d9d1_evalData(_20509c55c_unaryEval*);
inline jule::Ptr<_20507eb49_Data> _20509dcab_eval(_20509c55c_unaryEval*, jule::Ptr<_204347e57_UnaryExpr>);
struct _20509c55c_unaryEval {
	jule::Ptr<_2050816b7_Eval> _field_e = jule::Ptr<_2050816b7_Eval>();
	jule::Ptr<_20507eb49_Data> _field_d = jule::Ptr<_20507eb49_Data>();
	jule::Ptr<_204347e57_UnaryExpr> _field_u = jule::Ptr<_204347e57_UnaryExpr>();
	

	_20509c55c_unaryEval(void) = default;

	inline bool operator==(_20509c55c_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_20509c55c_unaryEval _other) { return !this->operator==(_other); }


};
inline _20509e2ea_binaryEval static__20509e8b1_newPlain(jule::Ptr<_2050816b7_Eval>);
inline _20509e2ea_binaryEval static__20509ec02_new(jule::Ptr<_2050816b7_Eval>, jule::Ptr<_202b89679_Token>);
inline jule::Bool _20509ee66_checkTypeCompatibility(_20509e2ea_binaryEval*);
inline jule::Bool _2050a020d_checkStructCommonOperatorCompatibility(_20509e2ea_binaryEval*);
inline jule::Ptr<_20507eb49_Data> _2050a04a5_evalNil(_20509e2ea_binaryEval*);
inline jule::Ptr<_20507eb49_Data> _2050a0719_evalEnum(_20509e2ea_binaryEval*);
inline jule::Ptr<_20507eb49_Data> _2050a097d_evalTypeEnum(_20509e2ea_binaryEval*);
inline jule::Ptr<_20507eb49_Data> _2050a0be2_evalSptr(_20509e2ea_binaryEval*);
inline jule::Ptr<_20507eb49_Data> _2050a0e56_evalPtr(_20509e2ea_binaryEval*);
inline jule::Ptr<_20507eb49_Data> _2050a11ba_evalArr(_20509e2ea_binaryEval*);
inline jule::Ptr<_20507eb49_Data> _2050a142e_evalSlc(_20509e2ea_binaryEval*);
inline jule::Ptr<_20507eb49_Data> _2050a1693_evalFn(_20509e2ea_binaryEval*);
inline jule::Ptr<_20507eb49_Data> _2050a1907_evalStruct(_20509e2ea_binaryEval*);
inline jule::Ptr<_20507eb49_Data> _2050a1b6b_evalTrait(_20509e2ea_binaryEval*);
inline jule::Ptr<_20507eb49_Data> _2050a1dd0_evalAny(_20509e2ea_binaryEval*);
inline jule::Ptr<_20507eb49_Data> _2050a2144_evalBool(_20509e2ea_binaryEval*);
inline jule::Ptr<_20507eb49_Data> _2050a23a8_evalStr(_20509e2ea_binaryEval*);
inline void _2050a2584_setTypeToGreater(_20509e2ea_binaryEval*);
inline void _2050a27c6_checkModData(_20509e2ea_binaryEval*, jule::Ptr<_20507eb49_Data>&);
inline void _2050a29a2_mod(_20509e2ea_binaryEval*);
inline jule::Bool _2050a2d59_numbersAreCompatibile(_20509e2ea_binaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_20507eb49_Data> _2050a30bd_evalFloat(_20509e2ea_binaryEval*);
inline jule::Ptr<_20507eb49_Data> _2050a3332_evalInt(_20509e2ea_binaryEval*);
inline jule::Ptr<_20507eb49_Data> _2050a3596_evalPrim(_20509e2ea_binaryEval*);
inline jule::Ptr<_20507eb49_Data> _2050a380a_evalOp(_20509e2ea_binaryEval*);
inline void _2050a3a80_evalConst(_20509e2ea_binaryEval*, jule::Ptr<_20507eb49_Data>&);
inline void _2050a3d05_checkData(_20509e2ea_binaryEval*, jule::Ptr<_20507eb49_Data>&);
inline void _2050a3ed1_checkDatas(_20509e2ea_binaryEval*);
inline void _2050a4256_setModel(_20509e2ea_binaryEval*, jule::Ptr<_20507eb49_Data>&);
inline void _2050a44cb_postEval(_20509e2ea_binaryEval*, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _2050a4883_solveExplicit(_20509e2ea_binaryEval*, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _2050a4b91_eval(_20509e2ea_binaryEval*, jule::Ptr<_204349464_BinopExpr>&);
struct _20509e2ea_binaryEval {
	jule::Ptr<_2050816b7_Eval> _field_e = jule::Ptr<_2050816b7_Eval>();
	jule::Ptr<_20507eb49_Data> _field_l = jule::Ptr<_20507eb49_Data>();
	jule::Ptr<_20507eb49_Data> _field_r = jule::Ptr<_20507eb49_Data>();
	jule::Ptr<_202b89679_Token> _field_op = jule::Ptr<_202b89679_Token>();
	

	_20509e2ea_binaryEval(void) = default;

	inline bool operator==(_20509e2ea_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_20509e2ea_binaryEval _other) { return !this->operator==(_other); }


};
struct _2050a91b2_InsGeneric {
	jule::Ptr<_2050aa8de_TypeKind> _field_Kind = jule::Ptr<_2050aa8de_TypeKind>();
	jule::Slice<jule::Ptr<_2050aa8de_TypeKind>> _field_Constraint = jule::Slice<jule::Ptr<_2050aa8de_TypeKind>>();
	

	_2050a91b2_InsGeneric(void) = default;

	inline bool operator==(_2050a91b2_InsGeneric _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_2050a91b2_InsGeneric _other) { return !this->operator==(_other); }


};
struct _2050a9beb_TypeAlias {
	jule::Ptr<_204351504_ScopeTree> _field_Scope = jule::Ptr<_204351504_ScopeTree>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Used = jule::Bool();
	jule::Bool _field_Generic = jule::Bool();
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_2050aea47_TypeSymbol> _field_Kind = jule::Ptr<_2050aea47_TypeSymbol>();
	jule::Slice<jule::Any> _field_Refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>> _field_Generics = jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>();
	

	_2050a9beb_TypeAlias(void) = default;

	inline bool operator==(_2050a9beb_TypeAlias _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Used == _other._field_Used &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_2050a9beb_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _2050aacda_Str(_2050aa8de_TypeKind*);
inline jule::Bool _2050ab0e8_Equals(jule::Ptr<_2050aa8de_TypeKind>, jule::Ptr<_2050aa8de_TypeKind>);
inline jule::Bool _2050ab59e_CppLinked(_2050aa8de_TypeKind*);
inline jule::Bool _2050ab813_IsNil(_2050aa8de_TypeKind*);
inline jule::Bool _2050aba77_Void(_2050aa8de_TypeKind*);
inline jule::Bool _2050abcdb_Mutable(_2050aa8de_TypeKind*);
inline jule::Bool _2050ac050_NilCompatible(_2050aa8de_TypeKind*);
inline jule::Bool _2050ac2b4_PerformsRC(_2050aa8de_TypeKind*);
inline jule::Bool _2050ac528_SupportsCloning(_2050aa8de_TypeKind*);
inline jule::Bool _2050ac78c_Variadicable(_2050aa8de_TypeKind*);
inline jule::Ptr<_2050b03b6_Prim> _2050aca01_Prim(_2050aa8de_TypeKind*);
inline jule::Ptr<_2050b3b4a_Sptr> _2050acc65_Sptr(_2050aa8de_TypeKind*);
inline jule::Ptr<_2050b71ae_Ptr> _2050acec9_Ptr(_2050aa8de_TypeKind*);
inline jule::Ptr<_204ed1a35_Enum> _2050ad23d_Enum(_2050aa8de_TypeKind*);
inline jule::Ptr<_204ed3130_TypeEnum> _2050ad4a2_TypeEnum(_2050aa8de_TypeKind*);
inline jule::Ptr<_2050b6752_Arr> _2050ad716_Arr(_2050aa8de_TypeKind*);
inline jule::Ptr<_2050b45a7_Slc> _2050ad97a_Slc(_2050aa8de_TypeKind*);
inline jule::Ptr<_204ec7454_FnIns> _2050adbde_Fn(_2050aa8de_TypeKind*);
inline jule::Ptr<_20435cc5d_StructIns> _2050ade53_Struct(_2050aa8de_TypeKind*);
inline jule::Ptr<_204ece8e0_Trait> _2050ae1b7_Trait(_2050aa8de_TypeKind*);
inline jule::Ptr<_2050b5b5d_Map> _2050ae42b_Map(_2050aa8de_TypeKind*);
inline jule::Ptr<_2050b5135_Tuple> _2050ae690_Tup(_2050aa8de_TypeKind*);
struct _2050aa8de_TypeKind {
	jule::Str _field_CppIdent = jule::Str();
	jule::Bool _field_Generic = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Trait<_2050aa4b0_Kind> _field_Kind = jule::Trait<_2050aa4b0_Kind>();
	

	_2050aa8de_TypeKind(void) = default;

	inline bool operator==(_2050aa8de_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2050aa8de_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _2050aedee_checked(_2050aea47_TypeSymbol*);
inline void _2050b00ca_removeKind(_2050aea47_TypeSymbol*);
struct _2050aea47_TypeSymbol {
	jule::Ptr<_20434156b_TypeDecl> _field_Decl = jule::Ptr<_20434156b_TypeDecl>();
	jule::Ptr<_2050aa8de_TypeKind> _field_Kind = jule::Ptr<_2050aa8de_TypeKind>();
	

	_2050aea47_TypeSymbol(void) = default;

	inline bool operator==(_2050aea47_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2050aea47_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _2050b0729_Str(_2050b03b6_Prim*);
inline jule::Bool _2050b0a37_Equals(jule::Ptr<_2050b03b6_Prim>, jule::Ptr<_2050aa8de_TypeKind>);
inline jule::Bool _2050b0eaa_IsConstraint(_2050b03b6_Prim*);
inline jule::Bool _2050b121e_IsI8(_2050b03b6_Prim*);
inline jule::Bool _2050b1483_IsI16(_2050b03b6_Prim*);
inline jule::Bool _2050b16e7_IsI32(_2050b03b6_Prim*);
inline jule::Bool _2050b195b_IsI64(_2050b03b6_Prim*);
inline jule::Bool _2050b1bc0_IsU8(_2050b03b6_Prim*);
inline jule::Bool _2050b1e34_IsU16(_2050b03b6_Prim*);
inline jule::Bool _2050b2198_IsU32(_2050b03b6_Prim*);
inline jule::Bool _2050b240c_IsU64(_2050b03b6_Prim*);
inline jule::Bool _2050b2671_IsF32(_2050b03b6_Prim*);
inline jule::Bool _2050b28d5_IsF64(_2050b03b6_Prim*);
inline jule::Bool _2050b2b49_IsInt(_2050b03b6_Prim*);
inline jule::Bool _2050b2dad_IsUint(_2050b03b6_Prim*);
inline jule::Bool _2050b3122_IsUintptr(_2050b03b6_Prim*);
inline jule::Bool _2050b3386_IsBool(_2050b03b6_Prim*);
inline jule::Bool _2050b35ea_IsStr(_2050b03b6_Prim*);
inline jule::Bool _2050b385e_IsAny(_2050b03b6_Prim*);
struct _2050b03b6_Prim {
	jule::Str _field_Kind = jule::Str();
	

	_2050b03b6_Prim(void) = default;

	inline bool operator==(_2050b03b6_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2050b03b6_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _2050b3ead_Str(_2050b3b4a_Sptr*);
inline jule::Bool _2050b42bb_Equals(jule::Ptr<_2050b3b4a_Sptr>, jule::Ptr<_2050aa8de_TypeKind>);
struct _2050b3b4a_Sptr {
	jule::Ptr<_2050aa8de_TypeKind> _field_Elem = jule::Ptr<_2050aa8de_TypeKind>();
	

	_2050b3b4a_Sptr(void) = default;

	inline bool operator==(_2050b3b4a_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_2050b3b4a_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _2050b4ab3_Str(_2050b45a7_Slc*);
inline jule::Bool _2050b4dc1_Equals(jule::Ptr<_2050b45a7_Slc>, jule::Ptr<_2050aa8de_TypeKind>);
struct _2050b45a7_Slc {
	jule::Ptr<_2050aa8de_TypeKind> _field_Elem = jule::Ptr<_2050aa8de_TypeKind>();
	

	_2050b45a7_Slc(void) = default;

	inline bool operator==(_2050b45a7_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_2050b45a7_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _2050b5498_Str(_2050b5135_Tuple*);
inline jule::Bool _2050b57a6_Equals(jule::Ptr<_2050b5135_Tuple>, jule::Ptr<_2050aa8de_TypeKind>);
struct _2050b5135_Tuple {
	jule::Slice<jule::Ptr<_2050aa8de_TypeKind>> _field_Types = jule::Slice<jule::Ptr<_2050aa8de_TypeKind>>();
	

	_2050b5135_Tuple(void) = default;

	inline bool operator==(_2050b5135_Tuple _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_2050b5135_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _2050b5ec1_Str(_2050b5b5d_Map*);
inline jule::Bool _2050b62ce_Equals(jule::Ptr<_2050b5b5d_Map>, jule::Ptr<_2050aa8de_TypeKind>);
struct _2050b5b5d_Map {
	jule::Ptr<_2050aa8de_TypeKind> _field_Key = jule::Ptr<_2050aa8de_TypeKind>();
	jule::Ptr<_2050aa8de_TypeKind> _field_Val = jule::Ptr<_2050aa8de_TypeKind>();
	

	_2050b5b5d_Map(void) = default;

	inline bool operator==(_2050b5b5d_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_2050b5b5d_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _2050b6ab5_Str(_2050b6752_Arr*);
inline jule::Bool _2050b6dc3_Equals(jule::Ptr<_2050b6752_Arr>, jule::Ptr<_2050aa8de_TypeKind>);
struct _2050b6752_Arr {
	jule::Bool _field_Auto = jule::Bool();
	jule::I64 _field_N = jule::I64();
	jule::Ptr<_2050aa8de_TypeKind> _field_Elem = jule::Ptr<_2050aa8de_TypeKind>();
	

	_2050b6752_Arr(void) = default;

	inline bool operator==(_2050b6752_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_2050b6752_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _2050b7522_Str(_2050b71ae_Ptr*);
inline jule::Bool _2050b7830_Equals(jule::Ptr<_2050b71ae_Ptr>, jule::Ptr<_2050aa8de_TypeKind>);
inline jule::Bool _2050b7b82_IsUnsafe(_2050b71ae_Ptr*);
struct _2050b71ae_Ptr {
	jule::Ptr<_2050aa8de_TypeKind> _field_Elem = jule::Ptr<_2050aa8de_TypeKind>();
	

	_2050b71ae_Ptr(void) = default;

	inline bool operator==(_2050b71ae_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_2050b71ae_Ptr _other) { return !this->operator==(_other); }


};
struct _2050b8105_referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_2050b8105_referencer(void) = default;

	inline bool operator==(_2050b8105_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_2050b8105_referencer _other) { return !this->operator==(_other); }


};
inline void _2050b9623_pushErr(_2050b8e19_typeChecker*, jule::Ptr<_202b89679_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _2050b97ee_allowBuiltin(_2050b8e19_typeChecker*);
inline void _2050b99ca_disallowBuiltin(_2050b8e19_typeChecker*);
inline jule::Ptr<_2050b03b6_Prim> _2050b9cd8_buildPrim(_2050b8e19_typeChecker*, jule::Ptr<_204341b32_IdentTypeDecl>&);
inline void _1db7729b5_pushReference(_2050b8e19_typeChecker*, jule::Ptr<_20435cc5d_StructIns>&);
inline void _1db775c1b_pushReference(_2050b8e19_typeChecker*, jule::Ptr<_204ece8e0_Trait>&);
inline void _2050ba2d3_pushReferenceByKind(_2050b8e19_typeChecker*, jule::Ptr<_2050aa8de_TypeKind>&);
inline void _2050ba69b_pushCycleError(_2050b8e19_typeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _2050baa53_checkCrossCycle(_2050b8e19_typeChecker*, jule::Any, jule::Str&);
inline jule::Bool _2050bae0a_checkIllegalCycles(_2050b8e19_typeChecker*, jule::Ptr<_204341b32_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_2050aa4b0_Kind> _2050bb2b2_fromTypeAlias(_2050b8e19_typeChecker*, jule::Ptr<_204341b32_IdentTypeDecl>&, jule::Ptr<_2050a9beb_TypeAlias>&);
inline jule::Ptr<_204ed1a35_Enum> _2050bb669_fromEnum(_2050b8e19_typeChecker*, jule::Ptr<_204341b32_IdentTypeDecl>&, jule::Ptr<_204ed1a35_Enum>&);
inline jule::Ptr<_204ed3130_TypeEnum> _2050bba21_fromTypeEnum(_2050b8e19_typeChecker*, jule::Ptr<_204341b32_IdentTypeDecl>&, jule::Ptr<_204ed3130_TypeEnum>&);
inline jule::Ptr<_204ece8e0_Trait> _2050bbdc8_fromTrait(_2050b8e19_typeChecker*, jule::Ptr<_204341b32_IdentTypeDecl>&, jule::Ptr<_204ece8e0_Trait>&);
inline jule::Bool _2050bc280_checkStructIns(_2050b8e19_typeChecker*, jule::Ptr<_20435cc5d_StructIns>&, jule::Ptr<_202b89679_Token>&);
inline void _2050bc527_appendUsedStructReference(_2050b8e19_typeChecker*, jule::Ptr<_20433367e_Struct>&);
inline jule::Ptr<_20435cc5d_StructIns> _2050bc8e0_buildStructInstance(_2050b8e19_typeChecker*, jule::Ptr<_204341b32_IdentTypeDecl>&, jule::Ptr<_20433367e_Struct>&);
inline jule::Ptr<_20435cc5d_StructIns> _2050bcc97_fromStruct(_2050b8e19_typeChecker*, jule::Ptr<_204341b32_IdentTypeDecl>&, jule::Ptr<_20433367e_Struct>&);
inline jule::Trait<_2050aa4b0_Kind> _2050bd0a5_getDef(_2050b8e19_typeChecker*, jule::Ptr<_204341b32_IdentTypeDecl>&);
inline jule::Trait<_2050aa4b0_Kind> _2050bd3b3_buildIdent(_2050b8e19_typeChecker*, jule::Ptr<_204341b32_IdentTypeDecl>);
inline jule::Trait<_2050aa4b0_Kind> _2050bd6c1_buildSubIdent(_2050b8e19_typeChecker*, jule::Ptr<_204342281_SubIdentTypeDecl>);
inline jule::Ptr<_2050b3b4a_Sptr> _2050bd9ce_buildSptrFromType(_2050b8e19_typeChecker*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Ptr<_2050b3b4a_Sptr> _2050bdcdc_buildSptr(_2050b8e19_typeChecker*, jule::Ptr<_204342924_SptrTypeDecl>);
inline jule::Ptr<_2050b71ae_Ptr> _2050be0ea_buildPtrFromType(_2050b8e19_typeChecker*, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Ptr<_2050b71ae_Ptr> _2050be408_buildPtr(_2050b8e19_typeChecker*, jule::Ptr<_2043433e7_PtrTypeDecl>);
inline jule::Ptr<_2050b45a7_Slc> _2050be716_buildSlc(_2050b8e19_typeChecker*, jule::Ptr<_204342d20_SlcTypeDecl>);
inline jule::Ptr<_2050b6752_Arr> _2050bea24_buildArr(_2050b8e19_typeChecker*, jule::Ptr<_204343a79_ArrTypeDecl>);
inline jule::Ptr<_2050b5b5d_Map> _2050bed32_buildMap(_2050b8e19_typeChecker*, jule::Ptr<_2043442c7_MapTypeDecl>);
inline jule::Ptr<_2050b5135_Tuple> _2050c0140_buildTuple(_2050b8e19_typeChecker*, jule::Ptr<_20434310b_TupleTypeDecl>);
inline jule::Bool _2050c044d_checkFnTypes(_2050b8e19_typeChecker*, jule::Ptr<_204ec7454_FnIns>&);
inline jule::Ptr<_204ec7454_FnIns> _2050c075b_buildFn(_2050b8e19_typeChecker*, jule::Ptr<_204352eea_FnDecl>);
inline jule::Trait<_2050aa4b0_Kind> _2050c0a69_buildByNamespace(_2050b8e19_typeChecker*, jule::Ptr<_204342638_NamespaceTypeDecl>);
inline jule::Ptr<_2050aa8de_TypeKind> _2050c0d77_build(_2050b8e19_typeChecker*, jule::Any&);
inline jule::Ptr<_2050aa8de_TypeKind> _2050c1185_checkDecl(_2050b8e19_typeChecker*, jule::Ptr<_20434156b_TypeDecl>&);
inline void _2050c140a_check(_2050b8e19_typeChecker*, jule::Ptr<_2050aea47_TypeSymbol>&);
struct _2050b8e19_typeChecker {
	jule::Ptr<_205014062_Sema> _field_s = jule::Ptr<_205014062_Sema>();
	jule::Trait<_2050c6520_Lookup> _field_rootLookup = jule::Trait<_2050c6520_Lookup>();
	jule::Trait<_2050c6520_Lookup> _field_lookup = jule::Trait<_2050c6520_Lookup>();
	jule::Ptr<_2050b8105_referencer> _field_referencer = jule::Ptr<_2050b8105_referencer>();
	jule::Ptr<_204ec7e27_ReferenceStack> _field_refers = jule::Ptr<_204ec7e27_ReferenceStack>();
	jule::Ptr<_202b89679_Token> _field_errorToken = jule::Ptr<_202b89679_Token>();
	jule::Slice<jule::Ptr<_20434d864_GenericDecl>> _field_ignoreGenerics = jule::Slice<jule::Ptr<_20434d864_GenericDecl>>();
	jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>> _field_useGenerics = jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>();
	jule::Bool _field_notPlain = jule::Bool();
	jule::Bool _field_disBuiltin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_2050a9beb_TypeAlias> _field_ownerAlias = jule::Ptr<_2050a9beb_TypeAlias>();
	jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>> _field_bannedGenerics = jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();
	

	_2050b8e19_typeChecker(void) = default;

	inline bool operator==(_2050b8e19_typeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_rootLookup == _other._field_rootLookup &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_refers == _other._field_refers &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_ignoreGenerics == _other._field_ignoreGenerics &&
			this->_field_useGenerics == _other._field_useGenerics &&
			this->_field_notPlain == _other._field_notPlain &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_selection == _other._field_selection &&
			this->_field_ownerAlias == _other._field_ownerAlias &&
			this->_field_bannedGenerics == _other._field_bannedGenerics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_2050b8e19_typeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool static__2050c1a6a_identTypeDecl(jule::Str&, jule::Ptr<_204341b32_IdentTypeDecl>);
inline jule::Bool static__2050c1dab_exist(jule::Str&, jule::Any&);
struct _2050c162a_identTypeLookup {
	

	_2050c162a_identTypeLookup(void) = default;

	inline bool operator==(_2050c162a_identTypeLookup _other) { return true; }

	inline bool operator!=(_2050c162a_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _2057e150e_FileInfo {
	jule::Ptr<_204307202_Ast> _field_Ast = jule::Ptr<_204307202_Ast>();
	jule::Slice<_20285b7ad_Log> _field_Errors = jule::Slice<_20285b7ad_Log>();
	

	_2057e150e_FileInfo(void) = default;

	inline bool operator==(_2057e150e_FileInfo _other) {
		return 
			this->_field_Ast == _other._field_Ast &&
			this->_field_Errors == _other._field_Errors;
	}

	inline bool operator!=(_2057e150e_FileInfo _other) { return !this->operator==(_other); }


};
struct _20583d083_stmt {
	jule::Slice<jule::Ptr<_202b89679_Token>> _field_tokens = jule::Slice<jule::Ptr<_202b89679_Token>>();
	jule::Bool _field_terminated = jule::Bool();
	

	_20583d083_stmt(void) = default;

	inline bool operator==(_20583d083_stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_20583d083_stmt _other) { return !this->operator==(_other); }


};
inline void _20583e040_stop(_20583d8ad_scopeParser*);
inline jule::Bool _20583e2a4_stopped(_20583d8ad_scopeParser*);
inline jule::Bool _20583e518_finished(_20583d8ad_scopeParser*);
inline jule::Bool _20583e77c_isLastSt(_20583d8ad_scopeParser*);
inline void _20583ea9b_pushErr(_20583d8ad_scopeParser*, jule::Ptr<_202b89679_Token>, jule::Str);
inline void _20583edba_pushSuggestion(_20583d8ad_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _205840140_insertAsNext(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_20583d083_stmt> _2058403a4_next(_20583d8ad_scopeParser*);
inline jule::Ptr<_204351504_ScopeTree> _20584075b_buildScope(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_204353ec9_VarDecl> _205840a69_buildVarSt(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_204354381_RetSt> _205840d77_buildRetSt(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_2043549e1_Iter> _205841185_buildWhileNextIter(_20583d8ad_scopeParser*, jule::Ptr<_20583d083_stmt>&);
inline jule::Ptr<_2043552b6_WhileKind> _205841493_buildWhileIterKind(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _2058417a1_getRangeKindKeysTokens(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_204353ec9_VarDecl> _205841aae_buildRangeKindKey(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Slice<jule::Ptr<_204353ec9_VarDecl>> _205841dbc_buildRangeKindKeys(_20583d8ad_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>>&);
inline void _20584220d_setupRangeKindKeysPlain(_20583d8ad_scopeParser*, jule::Ptr<_204355b57_RangeKind>&, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline void _205842560_setupRangeKindKeysExplicit(_20583d8ad_scopeParser*, jule::Ptr<_204355b57_RangeKind>&, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline void _205842890_setupRangeKindKeys(_20583d8ad_scopeParser*, jule::Ptr<_204355b57_RangeKind>&, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_204355b57_RangeKind> _205842ce1_buildRangeIterKind(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::Ptr<_202b89679_Token>&);
inline jule::Any _205843198_buildCommonIterKind(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::Ptr<_202b89679_Token>&);
inline jule::Ptr<_2043549e1_Iter> _2058434a6_buildCommonIter(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_2043549e1_Iter> _2058437b4_buildIterSt(_20583d8ad_scopeParser*, jule::Ptr<_20583d083_stmt>&);
inline jule::Ptr<_20435600e_BreakSt> _205843ac2_buildBreakSt(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_2043563b6_ContSt> _205843dd0_buildContSt(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_204356839_If> _2058441dd_buildIf(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_204356be1_Else> _2058444eb_buildElse(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_204357164_Conditional> _205844809_buildIfElseChain(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_204345a8c_Expr> _205844b17_buildCoCallSt(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_20434e0c3_GotoSt> _205844e25_buildGotoSt(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_20434e3ae_FallSt> _205845233_buildFallSt(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_20435783a_TypeAliasDecl> _205845541_buildTypeAliasSt(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline void _2058459a3_pushCaseExpr(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>, jule::Ptr<_202b89679_Token>, jule::Bool, jule::Slice<jule::Ptr<_204345a8c_Expr>>&);
inline jule::Slice<jule::Ptr<_204345a8c_Expr>> _205845e04_buildCaseExprs(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::Ptr<_202b89679_Token>&, jule::Bool);
inline jule::Ptr<_204351504_ScopeTree> _205846212_buildCaseScope(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline std::tuple<jule::Ptr<_204357cad_Case>,jule::Bool> _2058465b9_buildCase(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_204357cad_Case>>,jule::Ptr<_204356be1_Else>> _205846971_buildCases(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>, jule::Bool);
inline jule::Ptr<_204358484_MatchCase> _205846c7e_buildMatchCase(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_204351504_ScopeTree> _20584708c_buildScopeSt(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_20434dc1b_LabelSt> _20584739a_buildLabelSt(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _2058476a8_buildIdSt(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_2058566c8_assignInfo> _2058479b6_buildAssignInfo(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_20434e9b9_AssignLeft> _205847cc4_buildAssignL(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Slice<jule::Ptr<_20434e9b9_AssignLeft>> _2058480d2_buildAssignLs(_20583d8ad_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>>&);
inline std::tuple<jule::Ptr<_204350008_AssignSt>,jule::Bool> _2058483e0_buildPlainAssign(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline std::tuple<jule::Ptr<_204350008_AssignSt>,jule::Bool> _2058486ed_buildDeclAssign(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline std::tuple<jule::Ptr<_204350008_AssignSt>,jule::Bool> _205848a0b_buildAssignSt(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_20434642d_UseExpr> _205848d19_buildUseExpr(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Any _205849127_buildSt(_20583d8ad_scopeParser*, jule::Ptr<_20583d083_stmt>&);
inline void _205849446_build(_20583d8ad_scopeParser*, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::Ptr<_204351504_ScopeTree>&);
struct _20583d8ad_scopeParser {
	jule::Ptr<_20585a006_parser> _field_p = jule::Ptr<_20585a006_parser>();
	jule::Ptr<_204351504_ScopeTree> _field_s = jule::Ptr<_204351504_ScopeTree>();
	jule::Slice<jule::Ptr<_20583d083_stmt>> _field_stmts = jule::Slice<jule::Ptr<_20583d083_stmt>>();
	jule::I64 _field_pos = jule::I64();
	

	_20583d8ad_scopeParser(void) = default;

	inline bool operator==(_20583d8ad_scopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_20583d8ad_scopeParser _other) { return !this->operator==(_other); }


};
inline void _20584a667_pushErr(_205849d70_exprBuilder*, jule::Ptr<_202b89679_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _20584a986_pushSuggestion(_205849d70_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_204346719_TupleExpr> _20584ac94_buildTuple(_205849d70_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>>&);
inline jule::Ptr<_204346ac1_LitExpr> _20584b0a2_buildLit(_205849d70_exprBuilder*, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20434156b_TypeDecl> _20584b3b0_buildPrimitiveType(_205849d70_exprBuilder*, jule::Ptr<_202b89679_Token>&);
inline jule::Any _20584b6bd_buildSingle(_205849d70_exprBuilder*, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20434774d_IdentExpr> _20584b9cb_buildCppLinkedIdent(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_204347e57_UnaryExpr> _20584bcd9_buildUnary(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_204348ee1_SubIdentExpr> _20584c0e7_buildObjSubIdent(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_204348a6d_NsSelectionExpr> _20584c405_buildNsSubIdent(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_20434156b_TypeDecl> _20584c713_buildType(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Any _20584ca21_buildSubIdent(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_20434830e_VariadicExpr> _20584cd2e_buildVariadic(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Any _20584d13c_buildOpRight(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_204345d78_RangeExpr> _20584d46c_buildBetweenParentheses(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_2043486b6_CastExpr> _20584d78b_tryBuildCast(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline void _20584db54_pushArg(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_204345a8c_Expr>>&, jule::Slice<jule::Ptr<_202b89679_Token>>, jule::Ptr<_202b89679_Token>);
inline jule::Slice<jule::Ptr<_204345a8c_Expr>> _20584de62_buildArgs(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Slice<jule::Ptr<_20434156b_TypeDecl>> _20584e270_buildCallGenerics(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_204349a6e_FnCallExpr> _20584e6c1_buildFnCall(_205849d70_exprBuilder*, jule::Ptr<_202b89679_Token>&, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Any _20584e9ce_buildParenthesesRange(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_2043472ca_UnsafeExpr> _20584ecdc_buildUnsafeExpr(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_204352eea_FnDecl> _2058500ea_buildAnonFn(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Any _205850408_buildUnsafe(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline void _2058507c1_pushRangeLitPart(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>, jule::Ptr<_202b89679_Token>, jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _205850b01_getBraceRangeLitExprParts(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_20434a4ed_FieldExprPair> _205850e20_buildFieldExprPair(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_204345a8c_Expr> _20585122d_buildStructLitExpr(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Slice<jule::Ptr<_204345a8c_Expr>> _20585153b_buildStructLitExprs(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_20434ac4b_StructLit> _20585186b_buildTypedStructLiteral(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_204345a8c_Expr> _205851b8a_buildBraceLitPart(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_20434b1be_BraceLit> _205851e98_buildBraceLit(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Any _2058522a6_buildBraceRange(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _2058525b4_getEnumerableParts(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_20434c17b_SliceExpr> _2058528c2_buildSlice(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_20434c9ea_IndexingExpr> _205852d23_buildIndexing(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>, jule::Slice<jule::Ptr<_202b89679_Token>>, jule::Ptr<_202b89679_Token>);
inline jule::Ptr<_20434d105_SlicingExpr> _2058533b7_buildSlicing(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::Ptr<_202b89679_Token>&, jule::Ptr<_202b89679_Token>);
inline jule::Any _2058536c5_buildBracketRange(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Any _2058539d3_buildData(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Any _205853d8a_buildBinop(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::I64);
inline jule::Any _205854198_build(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Any _2058544a6_buildKind(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_204345a8c_Expr> _2058547b4_buildFromTokens(_205849d70_exprBuilder*, jule::Slice<jule::Ptr<_202b89679_Token>>);
struct _205849d70_exprBuilder {
	jule::Ptr<_20585a006_parser> _field_p = jule::Ptr<_20585a006_parser>();
	

	_205849d70_exprBuilder(void) = default;

	inline bool operator==(_205849d70_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_205849d70_exprBuilder _other) { return !this->operator==(_other); }


};
struct _2058566c8_assignInfo {
	jule::Slice<jule::Ptr<_202b89679_Token>> _field_l = jule::Slice<jule::Ptr<_202b89679_Token>>();
	jule::Slice<jule::Ptr<_202b89679_Token>> _field_r = jule::Slice<jule::Ptr<_202b89679_Token>>();
	jule::Ptr<_202b89679_Token> _field_setter = jule::Ptr<_202b89679_Token>();
	jule::Bool _field_ok = jule::Bool();
	

	_2058566c8_assignInfo(void) = default;

	inline bool operator==(_2058566c8_assignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_2058566c8_assignInfo _other) { return !this->operator==(_other); }


};
inline void _20585a336_stop(_20585a006_parser*);
inline jule::Bool _20585a59a_stopped(_20585a006_parser*);
inline void _20585a963_pushErr(_20585a006_parser*, jule::Ptr<_202b89679_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _20585ac82_pushSuggestion(_20585a006_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_204345a8c_Expr> _20585b090_buildExpr(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_20430829c_Directive> _20585b39d_buildDirective(_20585a006_parser*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline void _20585b623_pushDirective(_20585a006_parser*, jule::Ptr<_20430829c_Directive>);
inline jule::Ptr<_204351504_ScopeTree> _20585b9ca_buildScope(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::Ptr<_202b89679_Token>);
inline std::tuple<jule::Ptr<_20434156b_TypeDecl>,jule::Bool> _20585be2b__buildType(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::I64*, jule::Bool);
inline std::tuple<jule::Ptr<_20434156b_TypeDecl>,jule::Bool> _20585c37c_buildType(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_20435783a_TypeAliasDecl> _20585c68a_buildTypeAliasDecl(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline void _20585c9a9_buildVarTypeAndExpr(jule::Ptr<_20585a006_parser>, jule::Ptr<_204353ec9_VarDecl>&, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline void _20585ccc8_buildVarCommon(jule::Ptr<_20585a006_parser>, jule::Ptr<_204353ec9_VarDecl>&, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline void _20585d191_buildVarBegin(_20585a006_parser*, jule::Ptr<_204353ec9_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_204353ec9_VarDecl> _20585d49e_buildVar(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_20434d864_GenericDecl> _20585d7ac_buildGeneric(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Slice<jule::Ptr<_20434d864_GenericDecl>> _20585db64_buildGenerics(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::Ptr<_202b89679_Token>&);
inline jule::Ptr<_204351bca_ParamDecl> _20585de72_buildSelfParam(_20585a006_parser*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline void _20585e33a_paramTypeBegin(_20585a006_parser*, jule::Ptr<_204351bca_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline void _20585e659_buildParamType(jule::Ptr<_20585a006_parser>, jule::Ptr<_204351bca_ParamDecl>&, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline void _20585e978_buildParamBody(jule::Ptr<_20585a006_parser>, jule::Ptr<_204351bca_ParamDecl>&, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_204351bca_ParamDecl> _20585ec86_buildParam(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline void _20586000b_checkParams(_20585a006_parser*, jule::Slice<jule::Ptr<_204351bca_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_204351bca_ParamDecl>> _2058603b3_buildParams(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_20434467e_RetTypeDecl>,jule::Bool> _20586076a_buildMultiRetType(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::I64&);
inline std::tuple<jule::Ptr<_20434467e_RetTypeDecl>,jule::Bool> _205860b22_buildRetType(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::I64&);
inline jule::Ptr<_204352eea_FnDecl> _205861073_buildFnPrototype(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_204352eea_FnDecl> _2058614c4_buildFn(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_202b89679_Token>> _2058617d2_getUseDeclSelectors(_20585a006_parser*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline void _205861b01_buildCppUseDecl(_20585a006_parser*, jule::Ptr<_204358c26_UseDecl>&, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline void _205861e20_buildStdUseDecl(_20585a006_parser*, jule::Ptr<_204358c26_UseDecl>&, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline void _20586223e_buildIdentUseDecl(_20585a006_parser*, jule::Ptr<_204358c26_UseDecl>&, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline void _20586255d_parseUseDecl(_20585a006_parser*, jule::Ptr<_204358c26_UseDecl>&, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_204358c26_UseDecl> _205862915_buildUseDecl(_20585a006_parser*, jule::Slice<jule::Ptr<_202b89679_Token>>, jule::Bool);
inline jule::Ptr<_20434156b_TypeDecl> _205862cbc_buildTypeEnumItemKind(jule::Ptr<_20585a006_parser>, jule::I64&, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Slice<jule::Ptr<_20435a6c8_TypeEnumItemDecl>> _2058630ca_buildTypeEnumItems(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_20435acd3_TypeEnumDecl> _2058633d8_buildTypeEnumDecl(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_204345a8c_Expr> _205863790_buildEnumItemExpr(jule::Ptr<_20585a006_parser>, jule::I64&, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Slice<jule::Ptr<_204359199_EnumItemDecl>> _205863a9d_buildEnumItems(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_204359bc2_EnumDecl> _205863dab_buildEnumDecl(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Any _2058641b9_buildNodeEnumDecl(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_20435aed1_FieldDecl> _2058644c7_buildField(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Slice<jule::Ptr<_20435aed1_FieldDecl>> _2058647d5_buildStructDeclFields(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_20435b784_StructDecl> _205864ae3_buildStructDecl(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline void _205864d68_checkMethodReceiver(_20585a006_parser*, jule::Ptr<_204352eea_FnDecl>&);
inline jule::Slice<jule::Ptr<_204352eea_FnDecl>> _205865176_buildTraitMethods(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_20435bd8e_TraitDecl> _205865484_buildTraitDecl(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_204352eea_FnDecl> _205865792_buildCppLinkFn(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_204353ec9_VarDecl> _205865aa0_buildCppLinkVar(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_20435b784_StructDecl> _205865dad_buildCppLinkStruct(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_20435783a_TypeAliasDecl> _2058661bb_buildCppLinkTypeAlias(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_204358c26_UseDecl> _2058664c9_buildCppLinkUse(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Any _2058667d7_buildCppLink(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_204352eea_FnDecl> _205866ae5_getMethod(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline void _205866e14_parseImplBody(jule::Ptr<_20585a006_parser>, jule::Ptr<_20435c499_Impl>&, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_20435c499_Impl> _205867222_buildImpl(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Any _205867530_buildNodeData(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline void _2058677a5_applyFnMeta(_20585a006_parser*, jule::Ptr<_204352eea_FnDecl>&);
inline void _205867a2a_applyMeta(_20585a006_parser*, _204307da1_Node&);
inline void _205867ca0_pushUseDecl(jule::Ptr<_20585a006_parser>, jule::Ptr<_204358c26_UseDecl>&);
inline jule::Bool _2058680ad_pushMetaNodes(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline _204307da1_Node _2058683bb_parseNode(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline void _205868641_appendNode(jule::Ptr<_20585a006_parser>, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline void _205868aa3_removeRange(_20585a006_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::Slice<jule::I64>&);
inline void _205868e6b_pushWrongOrderCloseErr(_20585a006_parser*, jule::Ptr<_202b89679_Token>&, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::Slice<jule::I64>&);
inline void _2058693cd_pushRangeClose(_20585a006_parser*, jule::Ptr<_202b89679_Token>, jule::Str, jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::Slice<jule::I64>&);
inline void _205869653_checkRanges(_20585a006_parser*, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline void _2058698c8_parse(jule::Ptr<_20585a006_parser>, jule::Ptr<_202b8ea14_File>&);
struct _20585a006_parser {
	jule::Ptr<_204307202_Ast> _field_ast = jule::Ptr<_204307202_Ast>();
	jule::Slice<jule::Ptr<_20430829c_Directive>> _field_directives = jule::Slice<jule::Ptr<_20430829c_Directive>>();
	jule::Slice<_20285b7ad_Log> _field_errors = jule::Slice<_20285b7ad_Log>();
	

	_20585a006_parser(void) = default;

	inline bool operator==(_20585a006_parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_20585a006_parser _other) { return !this->operator==(_other); }


};
inline void _20586b2e2_pushErr(_20586ac1a_typeBuilder*, jule::Ptr<_202b89679_Token>, jule::Str);
inline void _20586b611_pushSuggestion(_20586ac1a_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_20434156b_TypeDecl> _20586b875_buildPrim(_20586ac1a_typeBuilder*);
inline jule::Ptr<_20434156b_TypeDecl> _20586bad9_buildNamespace(_20586ac1a_typeBuilder*);
inline jule::Slice<jule::Ptr<_20434156b_TypeDecl>> _20586bd4d_buildGenerics(_20586ac1a_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _20586c0b2_identGenerics(_20586ac1a_typeBuilder*);
inline jule::Ptr<_20434156b_TypeDecl> _20586c326_buildIdent(_20586ac1a_typeBuilder*);
inline jule::Ptr<_20434156b_TypeDecl> _20586c58a_buildCppLink(_20586ac1a_typeBuilder*);
inline jule::Ptr<_20434156b_TypeDecl> _20586c7ee_buildFn(_20586ac1a_typeBuilder*);
inline jule::Ptr<_20434156b_TypeDecl> _20586ca63_buildPtr(_20586ac1a_typeBuilder*);
inline jule::Ptr<_20434156b_TypeDecl> _20586ccc7_buildSptr(_20586ac1a_typeBuilder*);
inline jule::Ptr<_20434156b_TypeDecl> _20586d03b_buildOp(_20586ac1a_typeBuilder*);
inline jule::Ptr<_20434156b_TypeDecl> _20586d2a0_buildSlc(_20586ac1a_typeBuilder*);
inline jule::Ptr<_20434156b_TypeDecl> _20586d514_buildArr(_20586ac1a_typeBuilder*);
inline jule::Ptr<_20434156b_TypeDecl> _20586d778_buildMap(_20586ac1a_typeBuilder*);
inline jule::Ptr<_20434156b_TypeDecl> _20586d9dc_buildEnumerable(_20586ac1a_typeBuilder*);
inline jule::Ptr<_20434156b_TypeDecl> _20586dc51_step(_20586ac1a_typeBuilder*);
inline std::tuple<jule::Ptr<_20434156b_TypeDecl>,jule::Bool> _20586deb5_build(_20586ac1a_typeBuilder*);
struct _20586ac1a_typeBuilder {
	jule::Ptr<_20585a006_parser> _field_p = jule::Ptr<_20585a006_parser>();
	jule::Slice<jule::Ptr<_202b89679_Token>> _field_tokens = jule::Slice<jule::Ptr<_202b89679_Token>>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();
	

	_20586ac1a_typeBuilder(void) = default;

	inline bool operator==(_20586ac1a_typeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_20586ac1a_typeBuilder _other) { return !this->operator==(_other); }


};
struct _20518b9c0_CompileInfo {
	jule::Bool _field_Prod = jule::Bool();
	jule::Bool _field_Test = jule::Bool();
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_20518b9c0_CompileInfo(void) = default;

	inline bool operator==(_20518b9c0_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_20518b9c0_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _20518d373_pushErr(_20518cd23_directiveEval*, jule::Ptr<_202b89679_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _20518d72a_splitOperans(_20518cd23_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Bool _20518da38_evalDirectiveIdent(_20518cd23_directiveEval*, jule::Str);
inline jule::Bool _20518dd46_evalDirectivePart(_20518cd23_directiveEval*, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Bool _20518e0aa_eval(_20518cd23_directiveEval*);
struct _20518cd23_directiveEval {
	jule::Slice<_20285b7ad_Log> _field_logs = jule::Slice<_20285b7ad_Log>();
	jule::Ptr<_20430829c_Directive> _field_d = jule::Ptr<_20430829c_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_20518cd23_directiveEval(void) = default;

	inline bool operator==(_20518cd23_directiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_20518cd23_directiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2052896b1_JuleImporter> static__205308d29_New(_20518b9c0_CompileInfo);
inline jule::Slice<jule::Ptr<_20500ae16_ImportInfo>> _2053145d7_AllPackages(_2052896b1_JuleImporter*);
inline void _20533a366_SetModPath(_2052896b1_JuleImporter*, jule::Str);
inline jule::Str _2053ed627_GetModPath(_2052896b1_JuleImporter*);
inline jule::Str _20540edec_ModById(_2052896b1_JuleImporter*, jule::I64);
inline jule::Ptr<_20500ae16_ImportInfo> _20541aa73_GetImport(_2052896b1_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_204307202_Ast>>,jule::Slice<_20285b7ad_Log>> _20546986e_ImportPackage(_2052896b1_JuleImporter*, jule::Str, jule::Bool);
inline void _20547c530_Imported(_2052896b1_JuleImporter*, jule::Ptr<_20500ae16_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_20285b7ad_Log>> _2054908b7_isPassBuildDirectives(_2052896b1_JuleImporter*, jule::Ptr<_204307202_Ast>&);
struct _2052896b1_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_20500ae16_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_20500ae16_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_2052896b1_JuleImporter(void) = default;

	inline bool operator==(_2052896b1_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_2052896b1_JuleImporter _other) { return !this->operator==(_other); }


};
struct _205829877_OrderedDefines {
	jule::Slice<jule::Ptr<_20433367e_Struct>> _field_Structs = jule::Slice<jule::Ptr<_20433367e_Struct>>();
	jule::Slice<jule::Ptr<_205031cb6_Var>> _field_Globals = jule::Slice<jule::Ptr<_205031cb6_Var>>();
	

	_205829877_OrderedDefines(void) = default;

	inline bool operator==(_205829877_OrderedDefines _other) {
		return 
			this->_field_Structs == _other._field_Structs &&
			this->_field_Globals == _other._field_Globals;
	}

	inline bool operator!=(_205829877_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dbe78264_isCommonOrdered(jule::Slice<jule::Ptr<_20433367e_Struct>>&, jule::Ptr<_20433367e_Struct>);
inline jule::Bool _1dbe81a75_isCommonOrdered(jule::Slice<jule::Ptr<_205031cb6_Var>>&, jule::Ptr<_205031cb6_Var>);
inline void _1dbe7420a_orderCommon(jule::Slice<jule::Ptr<_20433367e_Struct>>&);
inline void _1dbe74ccc_orderCommon(jule::Slice<jule::Ptr<_205031cb6_Var>>&);
inline void static__20566d644_orderStructures(jule::Slice<jule::Ptr<_20433367e_Struct>>&);
inline void static__20567e523_orderVars(jule::Slice<jule::Ptr<_205031cb6_Var>>&);
struct _20527bb6a_defineOrderer {
	

	_20527bb6a_defineOrderer(void) = default;

	inline bool operator==(_20527bb6a_defineOrderer _other) { return true; }

	inline bool operator!=(_20527bb6a_defineOrderer _other) { return !this->operator==(_other); }


};
struct _205939d2d_liveTable {
	jule::Slice<jule::Ptr<_205031cb6_Var>> _field_vars = jule::Slice<jule::Ptr<_205031cb6_Var>>();
	jule::Slice<jule::Ptr<_204ec7454_FnIns>> _field_fns = jule::Slice<jule::Ptr<_204ec7454_FnIns>>();
	jule::Slice<jule::Ptr<_20435cc5d_StructIns>> _field_structs = jule::Slice<jule::Ptr<_20435cc5d_StructIns>>();
	jule::Slice<jule::Ptr<_204ece8e0_Trait>> _field_traits = jule::Slice<jule::Ptr<_204ece8e0_Trait>>();
	

	_205939d2d_liveTable(void) = default;

	inline bool operator==(_205939d2d_liveTable _other) {
		return 
			this->_field_vars == _other._field_vars &&
			this->_field_fns == _other._field_fns &&
			this->_field_structs == _other._field_structs &&
			this->_field_traits == _other._field_traits;
	}

	inline bool operator!=(_205939d2d_liveTable _other) { return !this->operator==(_other); }


};
inline void _205971507_optimizeChild(jule::Ptr<_20597102e_scopeDeadCode>, jule::Ptr<_204edc645_Scope>&);
inline void _20597179e_optimizeBodyChildExceptional(jule::Ptr<_20597102e_scopeDeadCode>, jule::Ptr<_204edc645_Scope>&);
inline void _205971a35_optimizeBodyChild(jule::Ptr<_20597102e_scopeDeadCode>, jule::Ptr<_204edc645_Scope>&);
inline void _205971caa_optimizeExprModel(jule::Ptr<_20597102e_scopeDeadCode>, jule::Any&);
inline void _205971e86_eliminateFollowed(_20597102e_scopeDeadCode*);
inline void _20597220b_pushGoto(jule::Ptr<_20597102e_scopeDeadCode>, jule::Ptr<_204ee0170_GotoSt>);
inline void _205972481_pushLabel(jule::Ptr<_20597102e_scopeDeadCode>, jule::Ptr<_204eded84_Label>);
inline void _205972706_optimizeRangeIter(jule::Ptr<_20597102e_scopeDeadCode>, jule::Ptr<_204ede2e5_RangeIter>);
inline void _20597297b_optimizeWhileIter(jule::Ptr<_20597102e_scopeDeadCode>, jule::Ptr<_204edd910_WhileIter>);
inline void _205972c01_optimizeInfIter(jule::Ptr<_20597102e_scopeDeadCode>, jule::Ptr<_204edd48c_InfIter>);
inline void _205972e76_optimizeConditional(jule::Ptr<_20597102e_scopeDeadCode>, jule::Ptr<_204edd1a1_Conditional>);
inline void _2059731eb_optimizeMatch(jule::Ptr<_20597102e_scopeDeadCode>, jule::Ptr<_204ee1391_Match>);
inline void _205973471_optimizeAssign(jule::Ptr<_20597102e_scopeDeadCode>, jule::Ptr<_204ee099a_Assign>);
inline void _2059736e6_optimizeMultiAssign(jule::Ptr<_20597102e_scopeDeadCode>, jule::Ptr<_204ee0d52_MultiAssign>);
inline void _20597396b_optimizeStmt(jule::Ptr<_20597102e_scopeDeadCode>, jule::Any);
inline void _205973b47_optimizeStmts(jule::Ptr<_20597102e_scopeDeadCode>);
struct _20597102e_scopeDeadCode {
	jule::Ptr<_20597102e_scopeDeadCode> _field_parent = jule::Ptr<_20597102e_scopeDeadCode>();
	jule::Ptr<_204edc645_Scope> _field_s = jule::Ptr<_204edc645_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();
	jule::Ptr<jule::Slice<jule::Ptr<_204eded84_Label>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_204eded84_Label>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_204ee0170_GotoSt>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_204ee0170_GotoSt>>>();
	jule::Bool _field_except = jule::Bool();
	

	_20597102e_scopeDeadCode(void) = default;

	inline bool operator==(_20597102e_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_20597102e_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _205974e89_exprDeadCode static__2059755b6_new(jule::Ptr<_20597102e_scopeDeadCode>&);
inline void _20597583b_binary(_205974e89_exprDeadCode*, jule::Ptr<_204ec152a_BinopExprModel>);
inline void _205975ab1_unary(_205974e89_exprDeadCode*, jule::Ptr<_204ec1717_UnaryExprModel>);
inline void _205975d36_structureLit(_205974e89_exprDeadCode*, jule::Ptr<_204ec1ae1_StructLitExprModel>);
inline void _2059760ab_allocStructure(_205974e89_exprDeadCode*, jule::Ptr<_204ec1ccd_AllocStructLitExprModel>);
inline void _205976331_casting(_205974e89_exprDeadCode*, jule::Ptr<_204ec1eba_CastingExprModel>);
inline void _2059765a6_args(_205974e89_exprDeadCode*, jule::Slice<jule::Any>&);
inline void _20597682b_funcCall(_205974e89_exprDeadCode*, jule::Ptr<_204ec21a7_FnCallExprModel>);
inline void _205976aa1_slice(_205974e89_exprDeadCode*, jule::Ptr<_204ec2394_SliceExprModel>);
inline void _205976d26_array(_205974e89_exprDeadCode*, jule::Ptr<_204ec3818_ArrayExprModel>);
inline void _20597709b_indexing(_205974e89_exprDeadCode*, jule::Ptr<_204ec2581_IndexingExprModel>);
inline void _205977321_anonFunc(_205974e89_exprDeadCode*, jule::Ptr<_204ec276d_AnonFnExprModel>);
inline void _205977596_mapExpr(_205974e89_exprDeadCode*, jule::Ptr<_204ec2b47_MapExprModel>);
inline void _20597781b_slicing(_205974e89_exprDeadCode*, jule::Ptr<_204ec2d34_SlicingExprModel>);
inline void _205977a91_traitSub(_205974e89_exprDeadCode*, jule::Ptr<_204ec3021_TraitSubIdentExprModel>);
inline void _205977d16_structureSub(_205974e89_exprDeadCode*, jule::Ptr<_204ec343e_StructSubIdentExprModel>);
inline void _20597808b_commonSub(_205974e89_exprDeadCode*, jule::Ptr<_204ec3be2_CommonSubIdentExprModel>);
inline void _205978311_tuple(_205974e89_exprDeadCode*, jule::Ptr<_204ec3dce_TupleExprModel>);
inline void _205978586_newCall(_205974e89_exprDeadCode*, jule::Ptr<_204ec4682_BuiltinNewCallExprModel>);
inline void _20597880b_outCall(_205974e89_exprDeadCode*, jule::Ptr<_204ec40bb_BuiltinOutCallExprModel>);
inline void _205978a81_outlnCall(_205974e89_exprDeadCode*, jule::Ptr<_204ec42a8_BuiltinOutlnCallExprModel>);
inline void _205978d06_panicCall(_205974e89_exprDeadCode*, jule::Ptr<_204ec486e_BuiltinPanicCallExprModel>);
inline void _20597907b_assertCall(_205974e89_exprDeadCode*, jule::Ptr<_204ec4a5b_BuiltinAssertCallExprModel>);
inline void _205979301_errorCall(_205974e89_exprDeadCode*, jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel>);
inline void _205979576_makeCall(_205974e89_exprDeadCode*, jule::Ptr<_204ec4c48_BuiltinMakeCallExprModel>);
inline void _2059797eb_appendCall(_205974e89_exprDeadCode*, jule::Ptr<_204ec4e35_BuiltinAppendCallExprModel>);
inline void _205979a71_lenCall(_205974e89_exprDeadCode*, jule::Ptr<_204ec5122_BuiltinLenCallExprModel>);
inline void _205979ce6_capCall(_205974e89_exprDeadCode*, jule::Ptr<_204ec530e_BuiltinCapCallExprModel>);
inline void _20597a06b_cloneCall(_205974e89_exprDeadCode*, jule::Ptr<_204ec4495_BuiltinCloneCallExprModel>);
inline void _20597a2e1_deleteCall(_205974e89_exprDeadCode*, jule::Ptr<_204ec320d_BuiltinDeleteCallExprModel>);
inline void _20597a566_sizeof(_205974e89_exprDeadCode*, jule::Ptr<_204ec5d48_SizeofExprModel>);
inline void _20597a7db_alignof(_205974e89_exprDeadCode*, jule::Ptr<_204ec6035_AlignofExprModel>);
inline void _20597aa61_integratedToStr(_205974e89_exprDeadCode*, jule::Ptr<_204ec640e_IntegratedToStrExprModel>);
inline void _20597acd6_free(_205974e89_exprDeadCode*, jule::Ptr<_204ec67d8_FreeExprModel>);
inline void _20597b05b_backendEmit(_205974e89_exprDeadCode*, jule::Ptr<_204ec65eb_BackendEmitExprModel>);
inline void _20597b2d1_optimize(_205974e89_exprDeadCode*, jule::Any&);
struct _205974e89_exprDeadCode {
	jule::Ptr<_20597102e_scopeDeadCode> _field_s = jule::Ptr<_20597102e_scopeDeadCode>();
	

	_205974e89_exprDeadCode(void) = default;

	inline bool operator==(_205974e89_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_205974e89_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _202bb6cc2_UnsafeBinopExprModel {
	jule::Ptr<_204ec152a_BinopExprModel> _field_Node = jule::Ptr<_204ec152a_BinopExprModel>();
	

	_202bb6cc2_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_202bb6cc2_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_202bb6cc2_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _2036d843b_UnsafeIndexingExprModel {
	jule::Ptr<_204ec2581_IndexingExprModel> _field_Node = jule::Ptr<_204ec2581_IndexingExprModel>();
	

	_2036d843b_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_2036d843b_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_2036d843b_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _203acb950_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Ptr<_204ec2394_SliceExprModel> _field_Elems = jule::Ptr<_204ec2394_SliceExprModel>();
	

	_203acb950_PushToSliceExprModel(void) = default;

	inline bool operator==(_203acb950_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_203acb950_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _20407b10d_MutSlicingExprModel {
	jule::Ptr<_202b89679_Token> _field_Token = jule::Ptr<_202b89679_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Left = jule::Any();
	jule::Any _field_Right = jule::Any();
	

	_20407b10d_MutSlicingExprModel(void) = default;

	inline bool operator==(_20407b10d_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_20407b10d_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _202c0764d_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Any _field_Expr = jule::Any();
	

	_202c0764d_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_202c0764d_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_202c0764d_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_203018e48_scopeOptimizer> static__202baea01_new(jule::Ptr<_204edc645_Scope>);
inline void _202bc9a93_setCurrentStmt(_203018e48_scopeOptimizer*, jule::Any);
inline void _202bd79b3_optimizeData(_203018e48_scopeOptimizer*, jule::Ptr<_20507eb49_Data>);
inline void _202bd86a6_optimizeVar(_203018e48_scopeOptimizer*, jule::Ptr<_205031cb6_Var>);
inline void _202c06ad1_optimizeConditional(_203018e48_scopeOptimizer*, jule::Ptr<_204edd1a1_Conditional>);
inline void _202c0b795_buildDefaultConstatTrueCase(_203018e48_scopeOptimizer*, jule::Ptr<_204ee1ddb_Case>, jule::I64&, jule::Ptr<_204ee1391_Match>&);
inline void _202c0cc3b_optimizeMatch(_203018e48_scopeOptimizer*, jule::Ptr<_204ee1391_Match>);
inline void _202c0dcb4_optimizeRangeIter(_203018e48_scopeOptimizer*, jule::Ptr<_204ede2e5_RangeIter>);
inline void _202c0e204_optimizeWhileIter(_203018e48_scopeOptimizer*, jule::Ptr<_204edd910_WhileIter>);
inline jule::Bool _202c4259a_substr(_203018e48_scopeOptimizer*, jule::Ptr<_204ee099a_Assign>);
inline jule::Bool _202c42e4c_strInsert(_203018e48_scopeOptimizer*, jule::Ptr<_204ee099a_Assign>);
inline jule::Bool _202c5d40c_strAssign(_203018e48_scopeOptimizer*, jule::Ptr<_204ee099a_Assign>);
inline void _202cd89b5_optimizeAssign(_203018e48_scopeOptimizer*, jule::Ptr<_204ee099a_Assign>);
inline void _202ce1cba_optimizeMultiAssign(_203018e48_scopeOptimizer*, jule::Ptr<_204ee0d52_MultiAssign>);
inline void _202ce5010_optimizeRet(_203018e48_scopeOptimizer*, jule::Ptr<_204ee2914_RetSt>);
inline void _202ce682a_optimizeStmt(_203018e48_scopeOptimizer*, jule::Any);
inline void _202ceb247_optimizeChild(_203018e48_scopeOptimizer*, jule::Ptr<_204edc645_Scope>);
inline void _202ce1a23_optimize(_203018e48_scopeOptimizer*);
struct _203018e48_scopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_204edc645_Scope> _field_scope = jule::Ptr<_204edc645_Scope>();
	

	_203018e48_scopeOptimizer(void) = default;

	inline bool operator==(_203018e48_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_203018e48_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__202d2dd29_optimize(jule::Any&);
inline jule::Bool _202d3257a_strCond(_203577b05_exprOptimizer*, jule::Ptr<_204ec152a_BinopExprModel>);
inline void _202d32e3d_binary(_203577b05_exprOptimizer*, jule::Ptr<_204ec152a_BinopExprModel>);
inline void _202d39cbe_unary(_203577b05_exprOptimizer*, jule::Ptr<_204ec1717_UnaryExprModel>);
inline void _202d4269a_structureLit(_203577b05_exprOptimizer*, jule::Ptr<_204ec1ae1_StructLitExprModel>);
inline void _202d43d94_allocStructure(_203577b05_exprOptimizer*, jule::Ptr<_204ec1ccd_AllocStructLitExprModel>);
inline void _202d51324_casting(_203577b05_exprOptimizer*, jule::Ptr<_204ec1eba_CastingExprModel>);
inline void _202d633be_args(_203577b05_exprOptimizer*, jule::Slice<jule::Any>&);
inline void _202d97c61_scope(_203577b05_exprOptimizer*, jule::Ptr<_204edc645_Scope>&);
inline void _202d9b748_funcCall(_203577b05_exprOptimizer*, jule::Ptr<_204ec21a7_FnCallExprModel>);
inline void _202da5a60_slice(_203577b05_exprOptimizer*, jule::Ptr<_204ec2394_SliceExprModel>);
inline void _202ee163a_array(_203577b05_exprOptimizer*, jule::Ptr<_204ec3818_ArrayExprModel>);
inline void _203005660_indexing(_203577b05_exprOptimizer*, jule::Ptr<_204ec2581_IndexingExprModel>);
inline void _20300e845_anonFunc(_203577b05_exprOptimizer*, jule::Ptr<_204ec276d_AnonFnExprModel>);
inline void _2030157c4_mapExpr(_203577b05_exprOptimizer*, jule::Ptr<_204ec2b47_MapExprModel>);
inline void _20301684c_slicing(_203577b05_exprOptimizer*, jule::Ptr<_204ec2d34_SlicingExprModel>);
inline void _203005099_traitSub(_203577b05_exprOptimizer*, jule::Ptr<_204ec3021_TraitSubIdentExprModel>);
inline void _20301a6ec_structureSub(_203577b05_exprOptimizer*, jule::Ptr<_204ec343e_StructSubIdentExprModel>);
inline void _20302c995_commonSub(_203577b05_exprOptimizer*, jule::Ptr<_204ec3be2_CommonSubIdentExprModel>);
inline void _20303259e_tuple(_203577b05_exprOptimizer*, jule::Ptr<_204ec3dce_TupleExprModel>);
inline void _203037be2_newCall(_203577b05_exprOptimizer*, jule::Ptr<_204ec4682_BuiltinNewCallExprModel>);
inline void _203039100_outCall(_203577b05_exprOptimizer*, jule::Ptr<_204ec40bb_BuiltinOutCallExprModel>);
inline void _20303a3a9_outlnCall(_203577b05_exprOptimizer*, jule::Ptr<_204ec42a8_BuiltinOutlnCallExprModel>);
inline void _20303bb4c_panicCall(_203577b05_exprOptimizer*, jule::Ptr<_204ec486e_BuiltinPanicCallExprModel>);
inline void _203040689_assertCall(_203577b05_exprOptimizer*, jule::Ptr<_204ec4a5b_BuiltinAssertCallExprModel>);
inline void _20304c4dc_errorCall(_203577b05_exprOptimizer*, jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel>);
inline void _203058e22_makeCall(_203577b05_exprOptimizer*, jule::Ptr<_204ec4c48_BuiltinMakeCallExprModel>);
inline void _20305e2ce_appendCall(_203577b05_exprOptimizer*, jule::Ptr<_204ec4e35_BuiltinAppendCallExprModel>);
inline void _203080399_lenCall(_203577b05_exprOptimizer*, jule::Ptr<_204ec5122_BuiltinLenCallExprModel>);
inline void _203082d80_capCall(_203577b05_exprOptimizer*, jule::Ptr<_204ec530e_BuiltinCapCallExprModel>);
inline void _20308748e_cloneCall(_203577b05_exprOptimizer*, jule::Ptr<_204ec4495_BuiltinCloneCallExprModel>);
inline void _2030955ac_deleteCall(_203577b05_exprOptimizer*, jule::Ptr<_204ec320d_BuiltinDeleteCallExprModel>);
inline void _2030a89bb_sizeof(_203577b05_exprOptimizer*, jule::Ptr<_204ec5d48_SizeofExprModel>);
inline void _2030e1c13_alignof(_203577b05_exprOptimizer*, jule::Ptr<_204ec6035_AlignofExprModel>);
inline void _20313aad6_integratedToStr(_203577b05_exprOptimizer*, jule::Ptr<_204ec640e_IntegratedToStrExprModel>);
inline void _2031dd65b_free(_203577b05_exprOptimizer*, jule::Ptr<_204ec67d8_FreeExprModel>);
inline void _2031e161a_backendEmit(_203577b05_exprOptimizer*, jule::Ptr<_204ec65eb_BackendEmitExprModel>);
inline void _2031e81b0_do(_203577b05_exprOptimizer*);
struct _203577b05_exprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();
	

	_203577b05_exprOptimizer(void) = default;

	inline bool operator==(_203577b05_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_203577b05_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2059453aa_Optimizer> static__20588eec5_New(jule::Ptr<_2054b956c_IR>&);
inline void _2058908bb_optimizeGlobal(_2059453aa_Optimizer*, jule::Ptr<_205031cb6_Var>&);
inline void _20589e028_optimizeFunction(_2059453aa_Optimizer*, jule::Ptr<_204ec707a_Fn>&);
inline void _20587212d_optimizeStruct(_2059453aa_Optimizer*, jule::Ptr<_20433367e_Struct>&);
inline void _2058d3007_optimizeGlobals(_2059453aa_Optimizer*, jule::Ptr<_20500dd70_Package>&);
inline void _2058d33ae_optimizeFunctions(_2059453aa_Optimizer*, jule::Ptr<_20500dd70_Package>&);
inline void _2058d4d3e_optimizeStructs(_2059453aa_Optimizer*, jule::Ptr<_20500dd70_Package>&);
inline void _2058db153_optimizePackage(_2059453aa_Optimizer*, jule::Ptr<_20500dd70_Package>&);
inline void _2058e29c8_Optimize(_2059453aa_Optimizer*);
struct _2059453aa_Optimizer {
	jule::Ptr<_2054b956c_IR> _field_ir = jule::Ptr<_2054b956c_IR>();
	

	_2059453aa_Optimizer(void) = default;

	inline bool operator==(_2059453aa_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_2059453aa_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__20597d9ba_Reset(void);
inline void static__20597eb31_Print(jule::Str, jule::Str);
struct _20597e944_AnsiEscape {
	

	_20597e944_AnsiEscape(void) = default;

	inline bool operator==(_20597e944_AnsiEscape _other) { return true; }

	inline bool operator!=(_20597e944_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__2059812d6_LogFlat(_20285b7ad_Log&);
inline void static__2059814e5_LogError(_20285b7ad_Log&);
inline void static__205981704_Log(_20285b7ad_Log&);
inline void static__205981913_PrintLogs(jule::Slice<_20285b7ad_Log>&);
struct _20598102d_Logger {
	

	_20598102d_Logger(void) = default;

	inline bool operator==(_20598102d_Logger _other) { return true; }

	inline bool operator!=(_20598102d_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1d7dc601d_Unix(_1d7dc5b66_AbsTime*);
struct _1d7dc5b66_AbsTime {
	jule::U64 _field_Day = jule::U64();
	jule::U64 _field_WeekDay = jule::U64();
	jule::U64 _field_YearDay = jule::U64();
	jule::U64 _field_Month = jule::U64();
	jule::U64 _field_Year = jule::U64();
	jule::U64 _field_Second = jule::U64();
	jule::U64 _field_Minute = jule::U64();
	jule::U64 _field_Hour = jule::U64();
	

	_1d7dc5b66_AbsTime(void) = default;

	inline bool operator==(_1d7dc5b66_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1d7dc5b66_AbsTime _other) { return !this->operator==(_other); }


};
inline _1d7dc6309_Time static__1d7dc66a0_Unix(jule::U64);
inline _1d7dc6309_Time static__1d7dc689d_Now(void);
inline jule::U64 _1d7dc6cee_Unix(_1d7dc6309_Time*);
inline jule::U64 _1d7dc7063_Day(_1d7dc6309_Time*);
inline jule::U64 _1d7dc72c7_Month(_1d7dc6309_Time*);
inline jule::U64 _1d7dc753b_Year(_1d7dc6309_Time*);
inline jule::U64 _1d7dc77a0_Second(_1d7dc6309_Time*);
inline jule::U64 _1d7dc7a14_Minute(_1d7dc6309_Time*);
inline jule::U64 _1d7dc7c78_Hour(_1d7dc6309_Time*);
inline _1d7dc5b66_AbsTime _1d7dc7edc_Abs(_1d7dc6309_Time*);
struct _1d7dc6309_Time {
	jule::U64 _field_sec = jule::U64();
	

	_1d7dc6309_Time(void) = default;

	inline bool operator==(_1d7dc6309_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1d7dc6309_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d72106cc_scopeCoder> static__1d7210d09_new(jule::Ptr<_1d7dcd553_ObjectCoder>&);
inline void _1d721107e_rangeIndexIter(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204ede2e5_RangeIter>&);
inline void _1d7211304_rangeHashmapIter(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204ede2e5_RangeIter>&);
inline void _1d7211579_ifCase(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204edca41_If>);
inline void _1d72117ee_conditional(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204edd1a1_Conditional>);
inline void _1d7211a74_infIter(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204edd48c_InfIter>);
inline void _1d7211ce9_whileIter(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204edd910_WhileIter>);
inline void _1d721206e_rangeIter(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204ede2e5_RangeIter>);
inline void _1d72122e4_cont(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204ede6e1_ContSt>);
inline void _1d7212569_label(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204eded84_Label>);
inline void _1d72127de_gotoSt(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204ee0170_GotoSt>);
inline void _1d7212a64_postfix(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204ee0527_Postfix>);
inline void _1d7212cd9_assign(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204ee099a_Assign>);
inline void _1d721305e_mapLookupAssign(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204ee0d52_MultiAssign>&);
inline void _1d72132d4_multiAssign(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204ee0d52_MultiAssign>);
inline jule::Fn<void(void)> _1d72135e2_matchExpr(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204ee1391_Match>);
inline void _1d7213911_case(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204ee1391_Match>, jule::Ptr<_204ee1ddb_Case>);
inline void _1d7213b86_matchSt(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204ee1391_Match>);
inline void _1d7213e0b_fallSt(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204ee2491_FallSt>);
inline void _1d7214181_breakSt(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204edea98_BreakSt>);
inline void _1d7214406_retWithVars(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204ee2914_RetSt>);
inline void _1d721467b_retTuple(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204ee2914_RetSt>);
inline void _1d7214901_retWithExprs(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204ee2914_RetSt>);
inline void _1d7214b76_retSt(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204ee2914_RetSt>);
inline void _1d7215171_var(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_205031cb6_Var>);
inline void _1d72153e6_st(jule::Ptr<_1d72106cc_scopeCoder>, jule::Any);
inline void _1d721566b_scopeStmts(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204edc645_Scope>&);
inline void _1d72158e1_scope(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204edc645_Scope>);
inline void _1d7215b66_funcScope(jule::Ptr<_1d72106cc_scopeCoder>, jule::Ptr<_204ec7454_FnIns>);
struct _1d72106cc_scopeCoder {
	jule::Ptr<_1d7dcd553_ObjectCoder> _field_oc = jule::Ptr<_1d7dcd553_ObjectCoder>();
	

	_1d72106cc_scopeCoder(void) = default;

	inline bool operator==(_1d72106cc_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1d72106cc_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d7d28ca6_exprCoder> static__1d7d291a2_new(jule::Ptr<_1d7dcd553_ObjectCoder>&);
inline void _1d7d29427_string(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_2044102b6_Const>&);
inline void _1d7d2969c_boolean(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_2044102b6_Const>&);
inline void _1d7d29878_nilLit(jule::Ptr<_1d7d28ca6_exprCoder>);
inline jule::Bool _1d7d29b86_ftoaSpecialCases(jule::Ptr<_1d7d28ca6_exprCoder>, jule::F64&);
inline void _1d7d29e0b_float32(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_2044102b6_Const>&);
inline void _1d7d2a181_float64(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_2044102b6_Const>&);
inline void _1d7d2a406_constant(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_2044102b6_Const>);
inline void _1d7d2a7be_divByZeroBinary(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_202b89679_Token>&, jule::Ptr<_204ec133d_OperandExprModel>&, jule::Ptr<_204ec133d_OperandExprModel>&);
inline void _1d7d2aa44_unsafeBinary(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec152a_BinopExprModel>);
inline void _1d7d2acb9_binary(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec152a_BinopExprModel>);
inline void _1d7d2b03e_var(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_205031cb6_Var>);
inline void _1d7d2b2b4_structureIns(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_20435cc5d_StructIns>);
inline void _1d7d2b539_unary(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec1717_UnaryExprModel>);
inline void _1d7d2b7ae_structureLit(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec1ae1_StructLitExprModel>);
inline void _1d7d2ba34_allocStructure(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec1ccd_AllocStructLitExprModel>);
inline void _1d7d2bca9_casting(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec1eba_CastingExprModel>);
inline void _1d7d2c02e_args(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Slice<jule::Any>);
inline void _1d7d2c2a4_modelForCall(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Any);
inline void _1d7d2c529_pushCallInf(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec21a7_FnCallExprModel>&);
inline jule::Bool _1d7d2c837_isWrapped(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec21a7_FnCallExprModel>&);
inline void _1d7d2caac_pureFuncCall(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec21a7_FnCallExprModel>&);
inline void _1d7d2cd32_coFuncCall(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec21a7_FnCallExprModel>&);
inline void _1d7d2d0a7_funcCall(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec21a7_FnCallExprModel>);
inline void _1d7d2d32c_slice(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec2394_SliceExprModel>);
inline void _1d7d2d5a2_indexing(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec2581_IndexingExprModel>);
inline void _1d7d2d827_unsafeIndexing(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_2036d843b_UnsafeIndexingExprModel>);
inline void _1d7d2da9c_anonFunc(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec276d_AnonFnExprModel>);
inline void _1d7d2dd22_mapExpr(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec2b47_MapExprModel>);
inline void _1d7d2e097_slicing(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec2d34_SlicingExprModel>);
inline void _1d7d2e31c_traitSub(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec3021_TraitSubIdentExprModel>);
inline void _1d7d2e592_structureSub(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec343e_StructSubIdentExprModel>);
inline void _1d7d2e817_commonIdent(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec3a05_CommonIdentExprModel>);
inline void _1d7d2ea8c_commonSub(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec3be2_CommonSubIdentExprModel>);
inline void _1d7d2ed12_array(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec3818_ArrayExprModel>);
inline void _1d7d30087_funcInsCommon(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec7454_FnIns>);
inline void _1d7d3030c_funcIns(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec7454_FnIns>);
inline void _1d7d30582_tuple(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec3dce_TupleExprModel>);
inline void _1d7d30807_newCall(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec4682_BuiltinNewCallExprModel>);
inline void _1d7d30a7c_outCall(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec40bb_BuiltinOutCallExprModel>);
inline void _1d7d30d02_outlnCall(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec42a8_BuiltinOutlnCallExprModel>);
inline void _1d7d31077_panicCall(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec486e_BuiltinPanicCallExprModel>);
inline void _1d7d312ec_assertCall(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec4a5b_BuiltinAssertCallExprModel>);
inline void _1d7d31572_errorCall(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel>);
inline void _1d7d317e7_copyCall(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec596e_BuiltinCopyCallExprModel>);
inline void _1d7d31a6c_lenCall(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec5122_BuiltinLenCallExprModel>);
inline void _1d7d31ce2_capCall(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec530e_BuiltinCapCallExprModel>);
inline void _1d7d32067_deleteCall(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec320d_BuiltinDeleteCallExprModel>);
inline void _1d7d322dc_makeCallSlice(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec4c48_BuiltinMakeCallExprModel>&);
inline void _1d7d32562_makeCallStr(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec4c48_BuiltinMakeCallExprModel>&);
inline void _1d7d327d7_makeCall(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec4c48_BuiltinMakeCallExprModel>);
inline void _1d7d32a5c_pushToSlice(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_203acb950_PushToSliceExprModel>);
inline void _1d7d32cd2_appendCall(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec4e35_BuiltinAppendCallExprModel>);
inline void _1d7d33057_cloneCall(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec4495_BuiltinCloneCallExprModel>);
inline void _1d7d332cc_sizeof(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec5d48_SizeofExprModel>);
inline void _1d7d33552_alignof(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec6035_AlignofExprModel>);
inline jule::Str _1d7d33860_runeLit(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec6222_RuneExprModel>);
inline void _1d7d33ad5_structureStatic(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec362b_StructStaticIdentExprModel>);
inline void _1d7d33d5a_integratedToStr(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec640e_IntegratedToStrExprModel>);
inline void _1d7d340d0_backendEmit(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec65eb_BackendEmitExprModel>);
inline void _1d7d34355_free(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_204ec67d8_FreeExprModel>);
inline void _1d7d345ca_mutSlicing(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_20407b10d_MutSlicingExprModel>);
inline void _1d7d34850_strInsertBegin(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_202c0764d_StrInsertBeginExprModel>);
inline void _1d7d34ac5_model(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Any);
inline void _1d7d34d4a_expr(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Any);
inline void _1d7d350c0_val(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_205080bc2_Value>);
inline void _1d7d35345_initExpr(jule::Ptr<_1d7d28ca6_exprCoder>, jule::Ptr<_2050aa8de_TypeKind>);
struct _1d7d28ca6_exprCoder {
	jule::Ptr<_1d7dcd553_ObjectCoder> _field_oc = jule::Ptr<_1d7dcd553_ObjectCoder>();
	

	_1d7d28ca6_exprCoder(void) = default;

	inline bool operator==(_1d7d28ca6_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1d7d28ca6_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1d7d37b50_cloneFuncDecl(jule::Ptr<_20433367e_Struct>&);
inline jule::Str static__1d7d37de7_cloneFuncDef(jule::Ptr<_20433367e_Struct>&);
struct _1d7d37853_deriveCoder {
	

	_1d7d37853_deriveCoder(void) = default;

	inline bool operator==(_1d7d37853_deriveCoder _other) { return true; }

	inline bool operator!=(_1d7d37853_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d7d38cc7_TestCoder> static__1d7d3924a_New(jule::Ptr<_1d7dcd553_ObjectCoder>&);
inline jule::Ptr<_20500ae16_ImportInfo> _1d7d394ae_findTestingPackage(jule::Ptr<_1d7d38cc7_TestCoder>);
inline void _1d7d39734_appendTest(jule::Ptr<_1d7d38cc7_TestCoder>, jule::Ptr<_204ec7454_FnIns>);
inline void _1d7d399a9_appendPackageTests(jule::Ptr<_1d7d38cc7_TestCoder>, jule::Ptr<_20500dd70_Package>&);
inline jule::Bool _1d7d39c1d_readyTestingPackage(jule::Ptr<_1d7d38cc7_TestCoder>);
inline void _1d7d39de9_callTmReset(jule::Ptr<_1d7d38cc7_TestCoder>);
inline void _1d7d3a0c5_callTmFailed(jule::Ptr<_1d7d38cc7_TestCoder>);
inline void _1d7d3a2a1_callTmSkipped(jule::Ptr<_1d7d38cc7_TestCoder>);
inline void _1d7d3a47c_Serialize(jule::Ptr<_1d7d38cc7_TestCoder>);
struct _1d7d38cc7_TestCoder {
	jule::Ptr<_20435cc5d_StructIns> _field_t = jule::Ptr<_20435cc5d_StructIns>();
	jule::Ptr<_204ec707a_Fn> _field_tmReset = jule::Ptr<_204ec707a_Fn>();
	jule::Ptr<_204ec707a_Fn> _field_tmFailed = jule::Ptr<_204ec707a_Fn>();
	jule::Ptr<_204ec707a_Fn> _field_tmSkipped = jule::Ptr<_204ec707a_Fn>();
	jule::Ptr<_1d7dcd553_ObjectCoder> _field_oc = jule::Ptr<_1d7dcd553_ObjectCoder>();
	

	_1d7d38cc7_TestCoder(void) = default;

	inline bool operator==(_1d7d38cc7_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1d7d38cc7_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1d7d3b934_toOut(jule::Str&, jule::Uintptr);
inline jule::Str static__1d7d3bd1e_toLocal(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__1d7d3c0b6_func(jule::Ptr<_204ec707a_Fn>&);
inline jule::Str static__1d7d3c35d_funcIns(jule::Ptr<_204ec7454_FnIns>&);
inline jule::Str static__1d7d3c605_traitDecl(jule::Ptr<_204ece8e0_Trait>);
inline jule::Str static__1d7d3c89c_param(jule::Ptr<_204ec6d8d_Param>&);
inline jule::Str static__1d7d3cb44_structure(jule::Ptr<_20433367e_Struct>&);
inline jule::Str static__1d7d3cddb_structureIns(jule::Ptr<_20435cc5d_StructIns>&);
inline jule::Str static__1d7d3d183_field(jule::Ptr<_204324285_Field>&);
inline jule::Str static__1d7d3d42a_var(jule::Ptr<_205031cb6_Var>);
inline jule::Str static__1d7d3d6c2_iterBegin(jule::Uintptr);
inline jule::Str static__1d7d3d969_iterEnd(jule::Uintptr);
inline jule::Str static__1d7d3dc11_iterNext(jule::Uintptr);
inline jule::Str static__1d7d3dea8_label(jule::Str&);
inline jule::Str static__1d7d3e250_matchEnd(jule::Uintptr);
inline jule::Str static__1d7d3e4e7_caseBegin(jule::Uintptr);
struct _1d7d3b428_identCoder {
	

	_1d7d3b428_identCoder(void) = default;

	inline bool operator==(_1d7d3b428_identCoder _other) { return true; }

	inline bool operator!=(_1d7d3b428_identCoder _other) { return !this->operator==(_other); }


};
struct _1d7d44277_SerializationInfo {
	jule::Str _field_Compiler = jule::Str();
	jule::Str _field_CompilerCommand = jule::Str();
	

	_1d7d44277_SerializationInfo(void) = default;

	inline bool operator==(_1d7d44277_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1d7d44277_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1d7dcd366_traitHash {
	jule::Ptr<_204ece8e0_Trait> _field_t = jule::Ptr<_204ece8e0_Trait>();
	jule::Ptr<_20435cc5d_StructIns> _field_s = jule::Ptr<_20435cc5d_StructIns>();
	jule::I64 _field_i = jule::I64();
	

	_1d7dcd366_traitHash(void) = default;

	inline bool operator==(_1d7dcd366_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1d7dcd366_traitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1d7dd27cc_Str(_1d7dd2513_customType*);
inline jule::Bool _1d7dd2ada_Equals(jule::Ptr<_1d7dd2513_customType>, jule::Ptr<_2050aa8de_TypeKind>);
struct _1d7dd2513_customType {
	jule::Str _field_kind = jule::Str();
	

	_1d7dd2513_customType(void) = default;

	inline bool operator==(_1d7dd2513_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d7dd2513_customType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1d7dd3338_toType(jule::Str);
inline jule::Str static__1d7dd35d0_prim(jule::Ptr<_2050b03b6_Prim>);
inline jule::Str static__1d7dd3877_tuple(jule::Ptr<_2050b5135_Tuple>);
inline jule::Str static__1d7dd3b1e_asSptr(jule::Str);
inline jule::Str static__1d7dd3db6_asPtr(jule::Str);
inline jule::Str static__1d7dd415d_sptr(jule::Ptr<_2050b3b4a_Sptr>);
inline jule::Str static__1d7dd4405_ptr(jule::Ptr<_2050b71ae_Ptr>);
inline jule::Str static__1d7dd469c_enumDecl(jule::Ptr<_204ed1a35_Enum>);
inline jule::Str static__1d7dd4944_typeEnumDecl(jule::Ptr<_204ed3130_TypeEnum>);
inline jule::Str static__1d7dd4bdb_asSlice(jule::Ptr<_2050aa8de_TypeKind>);
inline jule::Str static__1d7dd4e83_slice(jule::Ptr<_2050b45a7_Slc>);
inline jule::Str static__1d7dd522a_mapType(jule::Ptr<_2050b5b5d_Map>);
inline jule::Str static__1d7dd54c2_traitIdent(jule::Str);
inline jule::Str static__1d7dd5769_traitDecl(jule::Ptr<_204ece8e0_Trait>);
inline jule::Str static__1d7dd5a11_structure(jule::Ptr<_20433367e_Struct>);
inline jule::Str static__1d7dd5ca8_structureIns(jule::Ptr<_20435cc5d_StructIns>);
inline jule::Str static__1d7dd6050_array(jule::Ptr<_2050b6752_Arr>);
inline jule::Str static__1d7dd658e_paramIns(jule::Ptr<_204ec7267_ParamIns>&);
inline jule::Str static__1d7dd6acd_funcInsResult(jule::Ptr<_204ec7454_FnIns>&);
inline jule::Str static__1d7dd6d75_anonFunc(jule::Ptr<_204ec7454_FnIns>);
inline jule::Str static__1d7dd711c_func(jule::Ptr<_204ec7454_FnIns>);
inline jule::Str static__1d7dd73b4_kind(jule::Ptr<_2050aa8de_TypeKind>);
struct _1d7dd2d0a_typeCoder {
	

	_1d7dd2d0a_typeCoder(void) = default;

	inline bool operator==(_1d7dd2d0a_typeCoder _other) { return true; }

	inline bool operator!=(_1d7dd2d0a_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1dc166045_Name(_1dc4a9eb0_Flag*);
inline jule::Str _1dc166177_What(_1dc4a9eb0_Flag*);
inline void _1dc4aa3de_Reset(_1dc4a9eb0_Flag*);
inline jule::I32 _1dc4aa521_Short(_1dc4a9eb0_Flag*);
struct _1dc4a9eb0_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::I64 _field_default = jule::I64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::I64> _field_data = jule::Ptr<jule::I64>();
	

	_1dc4a9eb0_Flag(void) = default;

	inline bool operator==(_1dc4a9eb0_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1dc4a9eb0_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1dc4ad821_Name(_1dc4add0a_Flag*);
inline jule::Str _1dc4ae0e6_What(_1dc4add0a_Flag*);
inline void _1dc4ae228_Reset(_1dc4add0a_Flag*);
inline jule::I32 _1dc4ae35a_Short(_1dc4add0a_Flag*);
struct _1dc4add0a_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::U64 _field_default = jule::U64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::U64> _field_data = jule::Ptr<jule::U64>();
	

	_1dc4add0a_Flag(void) = default;

	inline bool operator==(_1dc4add0a_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1dc4add0a_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1dc4b245c_Name(_1dc4b2946_Flag*);
inline jule::Str _1dc4b2c32_What(_1dc4b2946_Flag*);
inline void _1dc4b2d64_Reset(_1dc4b2946_Flag*);
inline jule::I32 _1dc4b2e96_Short(_1dc4b2946_Flag*);
struct _1dc4b2946_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::F64 _field_default = jule::F64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::F64> _field_data = jule::Ptr<jule::F64>();
	

	_1dc4b2946_Flag(void) = default;

	inline bool operator==(_1dc4b2946_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1dc4b2946_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1dc4b60dc_Name(_1dc4b65c6_Flag*);
inline jule::Str _1dc4b68b2_What(_1dc4b65c6_Flag*);
inline void _1dc4b69e4_Reset(_1dc4b65c6_Flag*);
inline jule::I32 _1dc4b6b26_Short(_1dc4b65c6_Flag*);
struct _1dc4b65c6_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::Bool _field_default = jule::Bool();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::Bool> _field_data = jule::Ptr<jule::Bool>();
	

	_1dc4b65c6_Flag(void) = default;

	inline bool operator==(_1dc4b65c6_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1dc4b65c6_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1dc4b9c28_Name(_1dc4ba212_Flag*);
inline jule::Str _1dc4ba4ed_What(_1dc4ba212_Flag*);
inline void _1dc4ba630_Reset(_1dc4ba212_Flag*);
inline jule::I32 _1dc4ba762_Short(_1dc4ba212_Flag*);
struct _1dc4ba212_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::Str _field_default = jule::Str();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::Str> _field_data = jule::Ptr<jule::Str>();
	

	_1dc4ba212_Flag(void) = default;

	inline bool operator==(_1dc4ba212_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1dc4ba212_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d7e1da5a_FlagSet> static__1d7e1dd46_New(void);
inline jule::Trait<_1d7e1c0db_CommonFlag> _1d7e1e2ca_FindFlag(_1d7e1da5a_FlagSet*, jule::Str);
inline jule::Trait<_1d7e1c0db_CommonFlag> _1d7e1e5d8_FindFlagShort(_1d7e1da5a_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1d7e1c0db_CommonFlag>> _1d7e1e84c_Flags(_1d7e1da5a_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1d7e1eb5a_Parse(_1d7e1da5a_FlagSet*, jule::Slice<jule::Str>);
inline void _1d7e1ed36_Reset(_1d7e1da5a_FlagSet*);
inline jule::Ptr<_1dc4ba212_Flag> _1dc54428b_addFlagCommon(_1d7e1da5a_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1dc4b65c6_Flag> _1dc54d3c7_addFlagCommon(_1d7e1da5a_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1dc542542_AddVar(_1d7e1da5a_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1dc54b68e_AddVar(_1d7e1da5a_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1d7e1da5a_FlagSet {
	jule::Slice<jule::Trait<_1d7e1c0db_CommonFlag>> _field_flags = jule::Slice<jule::Trait<_1d7e1c0db_CommonFlag>>();
	

	_1d7e1da5a_FlagSet(void) = default;

	inline bool operator==(_1d7e1da5a_FlagSet _other) {
		return 
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1d7e1da5a_FlagSet _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_2054b956c_IR>,jule::Slice<_20285b7ad_Log>> static__20429e96e_Build(jule::Str, jule::I64);
inline void _204028cae_appendStructs(_2054b956c_IR*, jule::Ptr<_20500dd70_Package>&, jule::Slice<jule::Ptr<_20433367e_Struct>>&);
inline jule::Slice<jule::Ptr<_20433367e_Struct>> _205172555_GetAllStructures(_2054b956c_IR*);
inline void _2054a94a2_appendGlobals(_2054b956c_IR*, jule::Ptr<_20500dd70_Package>&, jule::Slice<jule::Ptr<_205031cb6_Var>>&);
inline jule::Slice<jule::Ptr<_205031cb6_Var>> _2054b1179_GetAllGlobals(_2054b956c_IR*);
inline void _205612077_Order(_2054b956c_IR*);
struct _2054b956c_IR {
	jule::Str _field_Root = jule::Str();
	jule::Slice<jule::Str> _field_Passes = jule::Slice<jule::Str>();
	jule::Ptr<_20500dd70_Package> _field_Main = jule::Ptr<_20500dd70_Package>();
	jule::Slice<jule::Ptr<_20500ae16_ImportInfo>> _field_Used = jule::Slice<jule::Ptr<_20500ae16_ImportInfo>>();
	_205829877_OrderedDefines _field_Ordered = _205829877_OrderedDefines();
	

	_2054b956c_IR(void) = default;

	inline bool operator==(_2054b956c_IR _other) {
		return 
			this->_field_Root == _other._field_Root &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Main == _other._field_Main &&
			this->_field_Used == _other._field_Used &&
			this->_field_Ordered == _other._field_Ordered;
	}

	inline bool operator!=(_2054b956c_IR _other) { return !this->operator==(_other); }


};
inline jule::Str _204326be4_Str(_20435cc5d_StructIns*);
inline jule::Bool _2043273a9_Equals(jule::Ptr<_20435cc5d_StructIns>, jule::Ptr<_2050aa8de_TypeKind>);
inline jule::Bool _204333937_Same(_20435cc5d_StructIns*, jule::Ptr<_20435cc5d_StructIns>);
inline jule::Ptr<_204ec707a_Fn> _204334a9d_FindMethod(_20435cc5d_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_2043393bb_FieldIns> _204336e02_FindField(_20435cc5d_StructIns*, jule::Str);
inline jule::Ptr<_205031cb6_Var> _204338222_FindStatic(_20435cc5d_StructIns*, jule::Str);
struct _20435cc5d_StructIns {
	jule::Bool _field_Checked = jule::Bool();
	jule::Ptr<_20433367e_Struct> _field_Decl = jule::Ptr<_20433367e_Struct>();
	jule::Slice<jule::Ptr<_2050a91b2_InsGeneric>> _field_Generics = jule::Slice<jule::Ptr<_2050a91b2_InsGeneric>>();
	jule::Slice<jule::Ptr<_2043393bb_FieldIns>> _field_Fields = jule::Slice<jule::Ptr<_2043393bb_FieldIns>>();
	jule::Slice<jule::Ptr<_205031cb6_Var>> _field_Statics = jule::Slice<jule::Ptr<_205031cb6_Var>>();
	jule::Slice<jule::Ptr<_204ec707a_Fn>> _field_Methods = jule::Slice<jule::Ptr<_204ec707a_Fn>>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Ptr<_204ec7e27_ReferenceStack> _field_Refers = jule::Ptr<_204ec7e27_ReferenceStack>();
	_204331c54_Operators _field_Operators = _204331c54_Operators();
	

	_20435cc5d_StructIns(void) = default;

	inline bool operator==(_20435cc5d_StructIns _other) {
		return 
			this->_field_Checked == _other._field_Checked &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Statics == _other._field_Statics &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Operators == _other._field_Operators;
	}

	inline bool operator!=(_20435cc5d_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20593a0e7_ObjectDeadCode> static__20593a548_new(jule::Ptr<_2054b956c_IR>&);
inline jule::Bool _1dbead321_isLive(jule::Ptr<_20593a0e7_ObjectDeadCode>, jule::Ptr<_204ece8e0_Trait>&);
inline jule::Bool _1dbeb37aa_isLive(jule::Ptr<_20593a0e7_ObjectDeadCode>, jule::Ptr<_204ec7454_FnIns>&);
inline jule::Bool _1dbebd067_isLive(jule::Ptr<_20593a0e7_ObjectDeadCode>, jule::Ptr<_20435cc5d_StructIns>&);
inline jule::Bool _1dbec2cc5_isLive(jule::Ptr<_20593a0e7_ObjectDeadCode>, jule::Ptr<_205031cb6_Var>&);
inline void _1dbead909_pushLive(jule::Ptr<_20593a0e7_ObjectDeadCode>, jule::Ptr<_204ece8e0_Trait>);
inline void _1dbeb7b88_pushLive(jule::Ptr<_20593a0e7_ObjectDeadCode>, jule::Ptr<_204ec7454_FnIns>);
inline void _1dbebaecc_pushLive(jule::Ptr<_20593a0e7_ObjectDeadCode>, jule::Ptr<_20435cc5d_StructIns>);
inline void _1dbec6823_pushLive(jule::Ptr<_20593a0e7_ObjectDeadCode>, jule::Ptr<_205031cb6_Var>);
inline void _20596ccc8_setReferencesAsLive(jule::Ptr<_20593a0e7_ObjectDeadCode>, jule::Ptr<_204ec7e27_ReferenceStack>&);
inline void _20596d04d_inits(jule::Ptr<_20593a0e7_ObjectDeadCode>, jule::Ptr<_20500dd70_Package>&);
inline void _20596d2c3_collectLivePackage(jule::Ptr<_20593a0e7_ObjectDeadCode>, jule::Ptr<_20500dd70_Package>&);
inline void _20596d49e_collectLive(jule::Ptr<_20593a0e7_ObjectDeadCode>);
inline void _20596d724_removeDeadGlobals(jule::Ptr<_20593a0e7_ObjectDeadCode>, jule::Slice<jule::Ptr<_205031cb6_Var>>&);
inline void _20596d999_removeDeadFns(jule::Ptr<_20593a0e7_ObjectDeadCode>, jule::Slice<jule::Ptr<_204ec707a_Fn>>&);
inline void _20596dc1e_removeDeadStructs(jule::Ptr<_20593a0e7_ObjectDeadCode>, jule::Slice<jule::Ptr<_20433367e_Struct>>&);
inline void _20596de94_removeDeadTraits(jule::Ptr<_20593a0e7_ObjectDeadCode>, jule::Slice<jule::Ptr<_204ece8e0_Trait>>&);
inline void _20596e219_removeDeadsFile(jule::Ptr<_20593a0e7_ObjectDeadCode>, jule::Ptr<_205074eb3_SymbolTable>&);
inline void _20596e48e_removeDeadsPackage(jule::Ptr<_20593a0e7_ObjectDeadCode>, jule::Ptr<_20500dd70_Package>&);
inline void _20596e66a_removeDeads(jule::Ptr<_20593a0e7_ObjectDeadCode>);
inline void _20596e846_elimanate(jule::Ptr<_20593a0e7_ObjectDeadCode>);
struct _20593a0e7_ObjectDeadCode {
	_205939d2d_liveTable _field_live = _205939d2d_liveTable();
	jule::Ptr<_2054b956c_IR> _field_ir = jule::Ptr<_2054b956c_IR>();
	

	_20593a0e7_ObjectDeadCode(void) = default;

	inline bool operator==(_20593a0e7_ObjectDeadCode _other) {
		return 
			this->_field_live == _other._field_live &&
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_20593a0e7_ObjectDeadCode _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d7dcd553_ObjectCoder> static__1d7d6d724_New(jule::Ptr<_2054b956c_IR>&, _1d7d44277_SerializationInfo);
inline void _1d7d72d77_write(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Str);
inline void _1d7da5d22_addIndent(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7da6707_doneIndent(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7d4374e_indent(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline jule::I64 _1d7d63b9d_findTypeOffset(_1d7dcd553_ObjectCoder*, jule::Ptr<_204ece8e0_Trait>, jule::Ptr<_2050aa8de_TypeKind>);
inline void _1d7da33a2_locInfo(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_202b89679_Token>&);
inline void _1d7da38d0_head(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7d44464_links(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7d674cb_prepareStructures(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7d6e318_iterPackages(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Fn<void(jule::Ptr<_20500dd70_Package>&)>);
inline void _1d7d6e89b_buildTraitMap(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7d7076a_traitDecls(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7d70e30_structurePlainDecl(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_20433367e_Struct>&);
inline void _1d7d715e5_structurePlainDecls(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7dabba2_fieldDecl(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_2043393bb_FieldIns>&);
inline void _1d7d71caa_structureDestructor(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_20435cc5d_StructIns>&);
inline void _1d7da587c_structureDeriveDefsDecls(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_20435cc5d_StructIns>&);
inline void _1d7d68895_structureOperatorEq(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Str&, jule::Ptr<_20435cc5d_StructIns>&);
inline void _1d7dcdae7_structureOperatorNotEq(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Str&, jule::Ptr<_20435cc5d_StructIns>&);
inline void _1d7dcdc29_structureOperator(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Str&, jule::Ptr<_204ec7454_FnIns>&, jule::Str);
inline void _1d7dcdd5b_structureOperators(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_20435cc5d_StructIns>&);
inline void _1d7dcde8d_structureInsDecl(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_20435cc5d_StructIns>&);
inline void _1d7dce0c0_structureDecl(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_20433367e_Struct>&);
inline void _1d7dce202_structureDecls(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7dce334_paramsDecls(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Slice<jule::Ptr<_204ec7267_ParamIns>>&);
inline void _1d7dce466_funcHead(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_204ec7454_FnIns>&, jule::Bool);
inline void _1d7dce598_funcDecl(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_204ec707a_Fn>&, jule::Bool);
inline void _1d7dce6ca_funcDecls(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7dce80c_traitDataTypes(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7dce93e_paramIns(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_204ec7267_ParamIns>&);
inline void _1d7dcea71_paramsIns(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Slice<jule::Ptr<_204ec7267_ParamIns>>&);
inline void _1d7dceba3_varInitExpr(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_205031cb6_Var>&, jule::Fn<void(void)>);
inline void _1d7dcecd5_var(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_205031cb6_Var>);
inline void _1d7dcee17_func(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_204ec707a_Fn>&);
inline void _1d7dd0049_traitWrappers(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7dd017b_traitDatas(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7dd02ad_globals(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7dd03e0_decls(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7dd0522_structureMethods(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_20435cc5d_StructIns>&);
inline void _1d7dd0654_structureDeriveDefs(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_20435cc5d_StructIns>&);
inline void _1d7dd0786_structureOstream(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_20435cc5d_StructIns>&);
inline void _1d7dd08b8_structureIns(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_20435cc5d_StructIns>&);
inline void _1d7dd09ea_structure(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_20433367e_Struct>&);
inline void _1d7dd0b2c_structures(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7dd0c5e_funcs(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7dd0d91_pushInit(jule::Ptr<_1d7dcd553_ObjectCoder>, jule::Ptr<_20500dd70_Package>&);
inline void _1d7dd0ec3_initCaller(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7dd1105_end(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7dd1237_serializeHead(jule::Ptr<_1d7dcd553_ObjectCoder>);
inline void _1d7dd1369_Serialize(jule::Ptr<_1d7dcd553_ObjectCoder>);
struct _1d7dcd553_ObjectCoder {
	jule::Str _field_Obj = jule::Str();
	jule::Ptr<_2054b956c_IR> _field_ir = jule::Ptr<_2054b956c_IR>();
	_1d7d44277_SerializationInfo _field_info = _1d7d44277_SerializationInfo();
	jule::Slice<jule::Ptr<_1d7dcd366_traitHash>> _field_tmap = jule::Slice<jule::Ptr<_1d7dcd366_traitHash>>();
	jule::Str _field_indentBuffer = jule::Str();
	jule::Ptr<_1d7d28ca6_exprCoder> _field_ec = jule::Ptr<_1d7d28ca6_exprCoder>();
	jule::Ptr<_1d72106cc_scopeCoder> _field_sc = jule::Ptr<_1d72106cc_scopeCoder>();
	

	_1d7dcd553_ObjectCoder(void) = default;

	inline bool operator==(_1d7dcd553_ObjectCoder _other) {
		return 
			this->_field_Obj == _other._field_Obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indentBuffer == _other._field_indentBuffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1d7dcd553_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1dc4ceb61_parseInteger(_1d7e21233_argParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _1dc4d8285_parseInteger(_1d7e21233_argParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _1d7e21a2a_getData(_1d7e21233_argParser*);
inline jule::VoidExceptional _1d7e21c6c_processFlag(_1d7e21233_argParser*, jule::Trait<_1d7e1c0db_CommonFlag>&);
inline jule::VoidExceptional _1d7e21ee2_singleDash(_1d7e21233_argParser*, jule::Str&);
inline jule::VoidExceptional _1d7e22267_doubleDash(_1d7e21233_argParser*, jule::Str&);
inline jule::VoidExceptional _1d7e22443_tryArg(_1d7e21233_argParser*);
inline jule::VoidExceptional _1d7e2261e_parse(_1d7e21233_argParser*);
struct _1d7e21233_argParser {
	_1d7e1da5a_FlagSet _field_set = _1d7e1da5a_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();
	

	_1d7e21233_argParser(void) = default;

	inline bool operator==(_1d7e21233_argParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1d7e21233_argParser _other) { return !this->operator==(_other); }


};
inline void _2016cb91a_Free(void*);
inline jule::Str _2017060a4_BytePtrToStr(jule::U8*);
inline jule::I64 _20092511a_GetLastErrno(void);
inline jule::I64 _20170e8d7_Stat(jule::U8*, struct stat*);
inline jule::I64 _20170ecc2_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _201710113_Getcwd(jule::U8*, jule::U64);
inline DIR* _2017105db_Opendir(jule::U8*);
inline struct dirent* _201710883_Readdir(DIR*);
inline jule::I64 _201710b2a_Closedir(DIR*);
inline jule::I64 _2017114aa_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _201711752_Rmdir(jule::U8*);
inline jule::I64 _2017119e9_Unlink(jule::U8*);
inline jule::I64 _20174061b_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _201740a06_Read(jule::I64, void*, jule::U64);
inline jule::I64 _201740d7a_Close(jule::I64);
inline jule::I64 _201741265_Write(jule::I64, void*, jule::U64);
inline void _201741474_Exit(jule::I64);
inline jule::I64 _2017a387c_getLastOsError(void);
inline jule::Slice<jule::Str> _2017c971b_Args(void);
inline jule::Exceptional<jule::Str> _2017c9b8e_WorkingDir(void);
inline jule::Exceptional<jule::Str> _2017caad5_getwd(void);
inline jule::Bool _202674e78_IsLetter(jule::I32);
inline jule::Bool _2026ec198_is16(jule::Slice<_2026ea5d6_Range16>, jule::U16);
inline jule::Bool _2026ec4d9_is32(jule::Slice<_2026eaa59_Range32>, jule::U32);
inline jule::Bool _2026ecc7b_isExcludingLatin(jule::Ptr<_2026eaecc_RangeTable>, jule::I32);
inline jule::Bool _2026ed023_IsUpper(jule::I32);
inline std::tuple<jule::I32,jule::I64> _2027ae28d_DecodeRune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _2027ae5ac_DecodeRuneStr(jule::Str);
inline std::tuple<jule::I32,jule::I64> _2027ae854_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _2027b0602_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _2027b0943_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _2027b0e82_RuneCountStr(jule::Str);
inline jule::Bool _2027b1229_RuneStart(jule::U8);
inline jule::Slice<jule::U8> _2027cdc19_Stobs(jule::Str&);
inline void _2027ce368_PushToStrBuffer(jule::Str&, jule::Slice<jule::U8>);
inline jule::I64 _2027cd147_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _2027ce775_FindLastByteStr(jule::Str&, jule::U8);
inline jule::Str _2027b6509_Repeat(jule::Str, jule::I64);
inline jule::Bool _2027b2912_hasPrefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _2027ce8da_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _2027cea94_hasSuffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _2027ceda2_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _2027d028c_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _2027d0ac8_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _2027d0e19_FindLast(jule::Str, jule::Str);
inline jule::I64 _2027d21b2_findRune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _2027d29ed_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _2027d3812_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _2027d403d_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _2027d437e_Contains(jule::Str, jule::Str);
inline jule::Bool _2027d4d52_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _2027d5193_Count(jule::Str, jule::Str);
inline jule::Str _2027d5627_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _2027d268a_trimLeft(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _2027d66d3_TrimLeft(jule::Str, jule::Str);
inline void _2027d698b_trimRight(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _2027d711d_Trim(jule::Str, jule::Str);
inline jule::Str _2027d745e_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _201837070_Clean(jule::Str);
inline jule::Str _20183a7e3_FromSlash(jule::Str);
inline jule::Str _201840276_Join(jule::Slice<jule::Str>);
inline jule::Str _201847c51_Ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _201849769_Abs(jule::Str);
inline jule::Str _20182746c_Base(jule::Str);
inline jule::Str _20182c483_Dir(jule::Str);
inline jule::Str _201830de3_VolumeName(jule::Str);
inline jule::Bool _201859dc8_IsPathSep(jule::U8);
inline jule::Bool _20185d9e2_IsAbs(jule::Str);
inline jule::I64 _20182ee47_volumeNameLen(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _201833b3d_abs(jule::Str);
inline jule::Str _2018368dd_join(jule::Slice<jule::Str>);
inline jule::I64 _20094778b_getLastFsError(void);
inline jule::I64 _2028a67b4_getLastProcessError(void);
inline jule::Slice<char*> _2028a9a1a_strSliceToCstrSlice(jule::Slice<jule::Str>);
inline jule::I64 _2028a9e6b_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _2028aa356_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _2028aae6c_Exit(jule::I64);
inline jule::Str _2028ab16a_Executable(void);
inline jule::Bool _20284e8a0_IsStdHeaderPath(jule::Str);
inline jule::Bool _20284e9d2_IsValidHeaderExt(jule::Str);
inline jule::Bool _20284ec35_IsValidCppExt(jule::Str);
inline jule::Str _20285bbed_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _20285bed9_argToStr(jule::Any);
inline jule::I64 _20285c281_findNextFmt(jule::Str);
inline jule::Str _20285c616_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20285d6d3_IsTopDirective(jule::Str);
inline jule::Bool _20285eb13_IsWindows(jule::Str);
inline jule::Bool _20285edbb_IsDarwin(jule::Str);
inline jule::Bool _202860163_IsLinux(jule::Str);
inline jule::Bool _202860482_IsI386(jule::Str);
inline jule::Bool _202860729_IsAmd64(jule::Str);
inline jule::Bool _2028609c1_IsArm64(jule::Str);
inline jule::Bool _202860c68_IsUnix(jule::Str);
inline jule::Bool _2028610dc_Is32Bit(jule::Str);
inline jule::Bool _202861384_Is64Bit(jule::Str);
inline void _20286d4a1_init(void);
inline jule::Bool _202b89d83_IsUnaryOp(jule::Str);
inline jule::Bool _202b8a16e_IsBinOp(jule::Str);
inline jule::Bool _202b8a735_IsStr(jule::Str);
inline jule::Bool _202b8a9cc_IsRawStr(jule::Str);
inline jule::Bool _202b8ac74_IsRune(jule::Str);
inline jule::Bool _202b8b390_IsBool(jule::Str);
inline jule::Bool _202b8b637_IsFloat(jule::Str);
inline jule::Bool _202b8b8ce_IsNum(jule::Str);
inline jule::Bool _202b8be1d_IsIgnoreIdent(jule::Str);
inline jule::Bool _202b8c1b5_IsAnonIdent(jule::Str);
inline jule::Bool _202b8c704_IsSpace(jule::I32);
inline jule::Bool _202b8cb55_IsLetter(jule::I32);
inline jule::Bool _202b8d194_IsDecimal(jule::U8);
inline jule::Bool _202b8d43b_IsBinary(jule::U8);
inline jule::Bool _202b8d6d3_IsOctal(jule::U8);
inline jule::Bool _202b8d97a_IsHex(jule::U8);
inline jule::Bool _202b8dc22_IsAssign(jule::U64);
inline jule::Bool _202b8deb9_IsPostfixOp(jule::Str);
inline jule::Bool _202b8e261_IsAssignOp(jule::Str);
inline jule::Ptr<_202b8ea14_File> _202b91043_NewFileSet(jule::Str);
inline _20285b7ad_Log _202b9286e_makeErr(jule::I64, jule::I64, jule::Ptr<_202b8ea14_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _202b92c04_bytesHasPrefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _202b93045_floatFmtE(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _202b933ca_floatFmtP(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _202b9371b_floatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _202b93a5c_floatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _202b93d9d_floatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _202b942ee_floatNum(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _202b94596_commonNum(jule::Slice<jule::U8>&);
inline jule::Str _202b9483d_binaryNum(jule::Slice<jule::U8>&);
inline jule::Bool _202b94b7e_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _202b94ec0_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _202b95311_isFloatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _202b95652_isFloatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _202b95993_isFloatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _202b95de4_octalNum(jule::Slice<jule::U8>&);
inline jule::Str _202b9618b_hexNum(jule::Slice<jule::U8>&);
inline jule::Str _202b964cc_hexEscape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _202b96774_bigUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _202b96a3d_littleUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _202b96be7_hexByteEscape(jule::Slice<jule::U8>&);
inline jule::Str _202b96e7d_byteEscape(jule::Slice<jule::U8>&);
inline jule::Slice<_20285b7ad_Log> _202b9b977_Lex(jule::Ptr<_202b8ea14_File>, jule::I64);
inline jule::I64 _204e79e73_LeadingZeros64(jule::U64);
inline jule::I64 _204e7aec9_TrailingZeros(jule::U64);
inline jule::I64 _204e7b8c0_TrailingZeros32(jule::U32);
inline jule::I64 _204e7bb67_TrailingZeros64(jule::U64);
inline jule::I64 _204e823dc_Len32(jule::U32);
inline jule::I64 _204e82684_Len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _204e83344_Add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _204e849c7_Mul64(jule::U64, jule::U64);
inline jule::U32 _204da1350_F32Bits(jule::F32);
inline jule::F32 _204da163b_F32FromBits(jule::U32);
inline jule::U64 _204da18d3_F64Bits(jule::F64);
inline jule::F64 _204da1c02_F64FromBits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _204da430e_Frexp(jule::F64);
inline jule::F64 _204e11b41_NaN(void);
inline jule::Bool _204e12a76_IsNaN(jule::F64);
inline jule::F64 _204e14517_Inf(jule::I64);
inline jule::Bool _204e19d7a_IsInf(jule::F64, jule::I64);
inline std::tuple<jule::F64,jule::I64> _204e212e3_normalize(jule::F64);
inline jule::F64 _204e314ac_Log(jule::F64);
inline jule::F64 _204e37e31_Abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _204e8d371_Modf(jule::F64);
inline jule::F64 _204e8db35_Log2(jule::F64);
inline jule::Str _2048ecc04_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _2049123ab_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _20496a03a_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _204a9047e_floatInfo&);
inline jule::Slice<jule::U8> _204991935_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _2017c5b8a_decimalSlice, jule::I64, jule::U8);
inline void _204993b02_roundShortest(_204eba9ec_decimal&, jule::U64, jule::I64, _204a9047e_floatInfo&);
inline jule::Slice<jule::U8> _2049a2bee_fmtE(jule::Slice<jule::U8>, jule::Bool, _2017c5b8a_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _2049a33a3_fmtF(jule::Slice<jule::U8>, jule::Bool, _2017c5b8a_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _2049a433d_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _204a9047e_floatInfo&);
inline jule::Slice<jule::U8> _204a6cc53_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _204a9047e_floatInfo&);
inline jule::I64 _204a914d5_min(jule::I64, jule::I64);
inline jule::I64 _204a968b4_max(jule::I64, jule::I64);
inline jule::U8 _204b02634_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _204b22577_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _204b44b1b_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _204bc6609_ParseInt(jule::Str, jule::I64, jule::I64);
inline std::tuple<jule::F64,jule::Bool> _204c917b2_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _204cd4aad_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _204aa16e3_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _2048ddc5b_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _204d33425_readFloat(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _2049781e1_atof64exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _2049c7c35_atof32exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F64,jule::I64> _204b4b309_atofHex(jule::Str, _204a9047e_floatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _204bc6c25_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _204c22644_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _204c603b8_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _204d350b4_ParseFloat(jule::Str, jule::I64);
inline void _204d8b879_ryuFtoaFixed32(_2017c5b8a_decimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _204d931bb_ryuFtoaFixed64(_2017c5b8a_decimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _2049580c2_formatDecimal(_2017c5b8a_decimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _204a411ee_ryuFtoaShortest(_2017c5b8a_decimalSlice&, jule::U64, jule::I64, _204a9047e_floatInfo&);
inline jule::I64 _204abd39c_mulByLog2Log10(jule::I64);
inline jule::I64 _204eb9600_mulByLog10Log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _204eb9732_computeBounds(jule::U64, jule::I64, _204a9047e_floatInfo&);
inline void _204eb9974_ryuDigits(_2017c5b8a_decimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _204eb9aa6_ryuDigits32(_2017c5b8a_decimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _204eb9bd8_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _204eb9d1a_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _204eb9e4c_divisibleByPow5(jule::U64, jule::I64);
inline std::tuple<jule::U32,jule::U32> _204eba07e_divmod1e9(jule::U64);
inline void _204ebb558_trim(_204eba9ec_decimal&);
inline void _204ebb68a_rightShift(_204eba9ec_decimal&, jule::U64);
inline jule::Bool _204ebb7bc_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _204ebb8ee_leftShift(_204eba9ec_decimal&, jule::U64);
inline jule::Bool _204ebba31_shouldRoundUp(_204eba9ec_decimal&, jule::I64);
inline jule::Str _204ebc5ae_FmtUint(jule::U64, jule::I64);
inline jule::Str _204ebc6e1_FmtInt(jule::I64, jule::I64);
inline jule::Str _204ebc823_Itoa(jule::I64);
inline jule::Str _204ebc955_small(jule::I64);
inline jule::Bool _204ebca87_isPowerOfTwo(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _204ebcbb9_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _2044eca24_RealKindOf(jule::Str);
inline jule::I64 _204504256_BitsizeOf(jule::Str);
inline jule::Str _2045284de_IntFromBits(jule::I64);
inline jule::Str _20453a402_UintFromBits(jule::I64);
inline jule::Str _20456488d_FloatFromBits(jule::I64);
inline jule::Bool _204701145_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _204720d35_BitsizeOfFloat(jule::F64);
inline jule::I64 _2047c735e_BitsizeOfInt(jule::I64);
inline jule::I64 _2047e0102_BitsizeOfUint(jule::U64);
inline void _2047e082d_UpdateTarget(void);
inline void _2047ecde0_init(void);
inline jule::F64 _2048774b9_Min(jule::Str);
inline jule::F64 _2048802e6_Max(jule::Str);
inline jule::Bool _20488be29_IsI8Compatible(jule::Str);
inline jule::Bool _20489d4bd_IsI16Compatible(jule::Str);
inline jule::Bool _2048bdac6_IsI32Compatible(jule::Str);
inline jule::Bool _2048c5193_IsI64Compatible(jule::Str);
inline jule::Bool _2044c9ca9_IsU8Compatible(jule::Str);
inline jule::Bool _204480db4_IsU16Compatible(jule::Str);
inline jule::Bool _20455224e_IsU32Compatible(jule::Str);
inline jule::Bool _204552cbb_IsU64Compatible(jule::Str);
inline jule::Bool _204747675_IsF32Compatible(jule::Str);
inline jule::Bool _2047487a8_IsF64Compatible(jule::Str);
inline jule::Bool _20474d912_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _204753a6b_IsI16Greater(jule::Str);
inline jule::Bool _2048be038_IsI32Greater(jule::Str);
inline jule::Bool _2044cbd55_IsI64Greater(jule::Str);
inline jule::Bool _2047009a2_IsU16Greater(jule::Str);
inline jule::Bool _204ebd67b_IsU32Greater(jule::Str);
inline jule::Bool _204ebd7ad_IsU64Greater(jule::Str);
inline jule::Bool _204ebd8e0_IsF32Greater(jule::Str);
inline jule::Bool _204ebda22_IsF64Greater(jule::Str);
inline jule::Bool _204ebdb54_IsGreater(jule::Str, jule::Str);
inline jule::Bool _204ebe094_IsSigInt(jule::Str);
inline jule::Bool _204ebe1c6_IsUnsigInt(jule::Str);
inline jule::Bool _204ebe308_IsInt(jule::Str);
inline jule::Bool _204ebe43a_IsFloat(jule::Str);
inline jule::Bool _204ebe56c_IsNum(jule::Str);
inline jule::Bool _204ebe69e_IsSigNum(jule::Str);
inline void _204ec10c9_lshiftUnsig(_2044102b6_Const&, _2044102b6_Const&);
inline void _204ec120b_rshiftUnsig(_2044102b6_Const&, _2044102b6_Const&);
inline jule::Bool _20504a30c_IsAscii(jule::I32);
inline jule::I32 _20504a43e_ToRune(jule::Slice<jule::U8>);
inline jule::Str _20506292e_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _205062bd7_ToStr(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _205062e7e_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _20506328c_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _2050635cd_strEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _20515db90_findFormatPrefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _205164987_getFormatRange(jule::I64&, jule::Slice<jule::U8>&);
inline void _205164c40_FmtByDefault(jule::Str&, jule::Any&);
inline void _205165119_applyFmtByDefault(jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline void _205165515_applyFmt(jule::Slice<jule::U8>&, jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Str _205165823_Format(jule::Str&, jule::Slice<jule::Any>);
inline jule::Str _205165e1c_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _204ec7b19_parameterUsesGenerics(jule::Ptr<_204ec6d8d_Param>&, jule::Slice<jule::Ptr<_20434d864_GenericDecl>>&);
inline jule::Ptr<_2050aea47_TypeSymbol> _204ec890b_buildType(jule::Ptr<_20434156b_TypeDecl>);
inline jule::Ptr<_205080bc2_Value> _204ec8a3d_buildExpr(jule::Ptr<_204345a8c_Expr>);
inline jule::Ptr<_2050a9beb_TypeAlias> _204ec8b70_buildTypeAlias(jule::Ptr<_20435783a_TypeAliasDecl>);
inline jule::Ptr<_204324285_Field> _204ec8ca2_buildField(jule::Ptr<_20435aed1_FieldDecl>);
inline jule::Slice<jule::Ptr<_204324285_Field>> _204ec8dd4_buildFields(jule::Slice<jule::Ptr<_20435aed1_FieldDecl>>&);
inline jule::Ptr<_20433367e_Struct> _204ec9016_buildStruct(jule::Ptr<_20435b784_StructDecl>);
inline jule::Ptr<_204ec6d8d_Param> _204ec9148_buildParam(jule::Ptr<_204351bca_ParamDecl>);
inline jule::Slice<jule::Ptr<_204ec6d8d_Param>> _204ec927a_buildParams(jule::Slice<jule::Ptr<_204351bca_ParamDecl>>&);
inline jule::Ptr<_204ec6ba1_RetType> _204ec93ac_buildRetType(jule::Ptr<_20434467e_RetTypeDecl>);
inline jule::Ptr<_204ec707a_Fn> _204ec94de_buildFn(jule::Ptr<_204352eea_FnDecl>);
inline jule::Slice<jule::Ptr<_204ec707a_Fn>> _204ec9621_buildMethods(jule::Slice<jule::Ptr<_204352eea_FnDecl>>&);
inline jule::Ptr<_204ece8e0_Trait> _204ec9753_buildTrait(jule::Ptr<_20435bd8e_TraitDecl>);
inline jule::Ptr<_204ed1040_EnumItem> _204ec9885_buildEnumItem(jule::Ptr<_204359199_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_204ed1040_EnumItem>> _204ec99b7_buildEnumItems(jule::Slice<jule::Ptr<_204359199_EnumItemDecl>>&);
inline jule::Ptr<_204ed1a35_Enum> _204ec9ae9_buildEnum(jule::Ptr<_204359bc2_EnumDecl>);
inline jule::Ptr<_204ed2a69_TypeEnumItem> _204ec9e5c_buildTypeEnumItem(jule::Ptr<_20435a6c8_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_204ed2a69_TypeEnumItem>> _204eca08e_buildTypeEnumItems(jule::Slice<jule::Ptr<_20435a6c8_TypeEnumItemDecl>>&);
inline jule::Ptr<_204ed3130_TypeEnum> _204eca1c1_buildTypeEnum(jule::Ptr<_20435acd3_TypeEnumDecl>);
inline jule::Ptr<_205031cb6_Var> _204eca303_buildVar(jule::Ptr<_204353ec9_VarDecl>);
inline jule::Slice<jule::Ptr<_205031cb6_Var>> _204eca435_buildVars(jule::Slice<jule::Ptr<_204353ec9_VarDecl>>);
inline jule::Ptr<_204ed75da_Impl> _204eca567_buildImpl(jule::Ptr<_20435c499_Impl>);
inline jule::Bool _204ed6980_matchConstraint(jule::Str&, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _204ed6c6b_isBuiltinConstraint(jule::Str&);
inline jule::Ptr<_204ee42a6_scopeChecker> _204ed9675_newScopeCheckerBase(jule::Ptr<_205014062_Sema>&, jule::Ptr<_204ec7454_FnIns>);
inline jule::Ptr<_204ee42a6_scopeChecker> _204ed9a0a_newScopeChecker(jule::Ptr<_205014062_Sema>&, jule::Ptr<_204ec7454_FnIns>);
inline jule::Ptr<_204ee301e_scopeLabel> _204ed9d4b_findLabelParent(jule::Str, jule::Ptr<_204ee42a6_scopeChecker>);
inline jule::Bool _204eda1d1_modelIsGotoScope(jule::Any, jule::Ptr<_204edc645_Scope>&);
inline jule::Bool _204eda522_stmtIsGotoScope(jule::Any&, jule::Ptr<_204edc645_Scope>&);
inline jule::I64 _204eda863_countMatchType(jule::Ptr<_204ee1391_Match>&, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Slice<jule::Ptr<_20507eb49_Data>> _204edab0a_getDatasFromTupleData(jule::Ptr<_20507eb49_Data>&);
inline jule::Bool _204edb446_checkMut(jule::Ptr<_205014062_Sema>&, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>, jule::Ptr<_202b89679_Token>);
inline jule::Bool _204edb8ca_checkAssign(jule::Ptr<_205014062_Sema>&, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>, jule::Ptr<_202b89679_Token>);
inline jule::Bool _204edbb72_isValidAstStForNextSt(jule::Any&);
inline jule::Bool _204edbe19_isValidStForNextSt(jule::Any&);
inline jule::Bool _204edc1b1_stmtIsDef(jule::Any&);
inline jule::Ptr<_205031cb6_Var> _20500862d_findVarInPackage(jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_2050a9beb_TypeAlias> _205008a5c_findTypeAliasInPackage(jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_20433367e_Struct> _205008e47_findStructInPackage(jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_204ec707a_Fn> _2050093a9_findFnInPackage(jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_204ece8e0_Trait> _2050096b7_findTraitInPackage(jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>&, jule::Str);
inline jule::Ptr<_204ed1a35_Enum> _205009a08_findEnumInPackage(jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>&, jule::Str);
inline jule::Ptr<_204ed3130_TypeEnum> _205009d49_findTypeEnumInPackage(jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>&, jule::Str);
inline jule::Any _20500a344_defByIdentPackage(jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>&, jule::Str&, jule::Bool);
inline jule::Bool _205011449_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _2050121a3_isValidModelForRef(jule::Any&);
inline _20285b7ad_Log _205012648_compilerErr(jule::Ptr<_202b89679_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _205012989_impIsLookupable(jule::Ptr<_20500ae16_ImportInfo>&, jule::Str);
inline void _205012c86_appendRetVars(jule::Slice<jule::Ptr<_205031cb6_Var>>&, jule::Ptr<_204ec7454_FnIns>&);
inline void _20501303e_appendParamVars(jule::Slice<jule::Ptr<_205031cb6_Var>>&, jule::Ptr<_204ec7454_FnIns>&);
inline void _205013319_appendGenericTypeAliases(jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>&, jule::Ptr<_204ec7454_FnIns>&);
inline jule::Ptr<_205074eb3_SymbolTable> _20501366b_findFile(jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>&, jule::Ptr<_202b8ea14_File>&);
inline void _205013acd_pushSugggestion(_20285b7ad_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _205053ca5_traitHasReferenceReceiver(jule::Ptr<_204ece8e0_Trait>&);
inline jule::Bool _20504a72a_floatAssignable(jule::Str, jule::Ptr<_20507eb49_Data>&);
inline jule::Bool _20504a85c_sigAssignable(jule::Str, jule::Ptr<_20507eb49_Data>&);
inline jule::Bool _205062621_unsigAssignable(jule::Str, jule::Ptr<_20507eb49_Data>&);
inline jule::Bool _205062753_intAssignable(jule::Str, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_2050aa8de_TypeKind> _205074039_lenKind(void);
inline jule::Ptr<_20430829c_Directive> _2050a508c_findDirective(jule::Slice<jule::Ptr<_20430829c_Directive>>&, jule::Str);
inline jule::Any _2050a5422_findBuiltinsImport(jule::Str, jule::Ptr<_20500ae16_ImportInfo>);
inline void _2050a5631_fitBitsize(jule::Ptr<_20507eb49_Data>&);
inline void _2050a592d_makeStructLitAlloc(jule::Ptr<_20507eb49_Data>&, jule::Ptr<_204ec1ae1_StructLitExprModel>&);
inline jule::Ptr<_205031cb6_Var> _2050a5c6e_buildErrorVar(jule::Ptr<_204edc645_Scope>&, jule::Ptr<_204349a6e_FnCallExpr>&);
inline jule::Any _2050a60b0_findBuiltinsSema(jule::Str, jule::Ptr<_205014062_Sema>);
inline jule::Bool _2050a6357_isOkForShifting(jule::Ptr<_20507eb49_Data>&);
inline jule::Bool _2050a670e_isInstancedStruct(jule::Ptr<_20435cc5d_StructIns>);
inline jule::Bool _2050a6a72_isPtrArithmeticCompatible(jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&);
inline void _2050a6cb4_applyCastKindModel(jule::Ptr<_20507eb49_Data>&, jule::Ptr<_2050aa8de_TypeKind>&);
inline void _2050a706c_applyCastKind(jule::Ptr<_20507eb49_Data>&, jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Ptr<_20507eb49_Data> _2050a726a_buildVoidData(void);
inline jule::Str _2050a7534_checkDataForIntegerIndexing(jule::Ptr<_20507eb49_Data>&);
inline void _2050a77ed_applyCastModelByEnum(jule::Ptr<_20507eb49_Data>&, jule::Ptr<_204ed1a35_Enum>);
inline void _2050a7aa6_castConstByType(jule::Str&, jule::Ptr<_20507eb49_Data>&);
inline void _2050a80b2_updateModelToGenericIns(jule::Any&, jule::Ptr<_204ec7454_FnIns>&);
inline jule::Bool _2050a8304_pushSubIdentFromExpr(jule::Any, jule::Ptr<_204342281_SubIdentTypeDecl>&);
inline jule::Bool _2050c22a7_kindUsesGenerics(jule::Any&, jule::Slice<jule::Ptr<_20434d864_GenericDecl>>&);
inline jule::Bool _2050c263c_hasDirective(jule::Slice<jule::Ptr<_20430829c_Directive>>&, jule::Str);
inline jule::Bool _2050c28d4_canGetPtr(jule::Ptr<_20507eb49_Data>&);
inline jule::Bool _2050c2c03_isValidForSptrType(jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _2050c2e9a_isValidForRef(jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Bool _2050c3264_isBuiltinStrConvertable(jule::Ptr<_2050aa8de_TypeKind>&);
inline jule::Str _2050c34d9_buildLinkPathByTokens(jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_2050b03b6_Prim> _2050c3891_buildPrimType(jule::Str);
inline jule::Ptr<_20433367e_Struct> _2050c3b38_getStructFromKind(jule::Ptr<_2050aa8de_TypeKind>);
inline jule::Bool _2050c3dd0_isPrim(jule::Str);
inline void _2050c4188_applyImplicitCast(jule::Ptr<_2050aa8de_TypeKind>&, jule::Ptr<_20507eb49_Data>&);
inline std::tuple<jule::Ptr<_205074eb3_SymbolTable>,jule::Slice<_20285b7ad_Log>> _2050c7202_buildSymbols(jule::Ptr<_204307202_Ast>&, jule::Trait<_205008298_Importer>&, jule::Ptr<_204eca699_symbolBuilder>);
inline std::tuple<jule::Ptr<_20500dd70_Package>,jule::Slice<_20285b7ad_Log>> _2050c7631_analyzePackage(jule::Slice<jule::Ptr<_204307202_Ast>>&, jule::Trait<_205008298_Importer>&, jule::I64&);
inline std::tuple<jule::Ptr<_20500dd70_Package>,jule::Slice<_20285b7ad_Log>> _2050c7a1b_AnalyzePackage(jule::Slice<jule::Ptr<_204307202_Ast>>, jule::Trait<_205008298_Importer>, jule::I64);
inline jule::Ptr<_204ec7454_FnIns> _2050d3b48_findBuiltinFn(jule::Str);
inline jule::Ptr<_2050a9beb_TypeAlias> _2050d5e14_findBuiltinTypeAlias(jule::Str);
inline jule::Any _2050d69c5_findBuiltinDef(jule::Str);
inline jule::Any _2050d74dc_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _2050da27b_findBuiltinDefStdMem(jule::Str);
inline jule::Any _2050d9467_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _2050d9610_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_20507eb49_Data> _2051660d7_builtinCallerCommonPlain(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516645b_builtinCallerCommon(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _205166846_builtinCallerCommonMut(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _205166b87_builtinCallerError(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&);
inline jule::Ptr<_20507eb49_Data> _205167072_builtinCallerOut(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516745c_builtinCallerOutln(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _205167847_builtinCallerNew(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _205167c32_builtinCallerPanic(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516834d_builtinCallerMake(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _205168738_builtinCallerAppend(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _205168bbc_callerCopySlice(jule::Ptr<_20507eb49_Data>&, jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _205169151_callerCopyStr(jule::Ptr<_20507eb49_Data>&, jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516953b_builtinCallerCopy(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516987c_callerLenSlice(jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _205169bbd_callerLenMap(jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516a00e_callerLenArr(jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516a350_callerLenStr(jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516a73a_builtinCallerLen(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516aa7b_callerCapSlice(jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516adbc_callerCapStr(jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516b2a7_builtinCallerCap(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516b73b_callerDeleteMap(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516bb26_builtinCallerDelete(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516c011_builtinCallerClone(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516c5c7_builtinCallerAssert(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516c93a_builtinCallerStdMemSizeOf(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516cd58_builtinCallerStdMemAlignOf(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516d276_builtinCallerStdMemFree(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516d6a5_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516dac3_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516e013_builtinCallerStdDebugOut(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Ptr<_20507eb49_Data> _20516e3ed_builtinCallerStdDebugOutln(jule::Ptr<_2050816b7_Eval>&, jule::Ptr<_204349a6e_FnCallExpr>&, jule::Ptr<_20507eb49_Data>&);
inline jule::Bool _20519ce76_FindModuleFile(jule::Slice<jule::Ptr<_2009634dd_DirEntry>>&);
inline jule::Str _20519d0a8_FindModuleFileDeep(jule::Str);
inline jule::Slice<_20285b7ad_Log> _20519d33e_CheckModuleFile(jule::Str);
inline jule::Ptr<_2057e150e_FileInfo> _2057e41d2_ParseFile(jule::Ptr<_202b8ea14_File>);
inline std::tuple<jule::Ptr<_204307202_Ast>,jule::Slice<_20285b7ad_Log>> _20583b559_parseFileset(jule::Ptr<_202b8ea14_File>);
inline jule::Ptr<_204351504_ScopeTree> _20583be61_newScope(void);
inline std::tuple<jule::Bool,jule::Bool> _20583c26e_isSt(jule::Ptr<_202b89679_Token>, jule::Ptr<_202b89679_Token>);
inline jule::Bool _20583c5b0_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _20583c945_nextStPos(jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_202b89679_Token>>,jule::Bool> _20583cc86_skipSt(jule::I64&, jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Slice<jule::Ptr<_20583d083_stmt>> _20583d429_splitStmts(jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Bool _205854b16_isTypeOp(jule::Str&);
inline jule::Bool _205854e02_isTypeRange(jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Slice<jule::Ptr<_202b89679_Token>> _205855199_getBlockExpr(jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_202b89679_Token>>,jule::Slice<jule::Ptr<_202b89679_Token>>> _20585552e_splitDelim(jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::U64);
inline jule::I64 _2058557c6_findLowestPrecOp(jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Ptr<_20434774d_IdentExpr> _205855a6d_buildIdentExpr(jule::Ptr<_202b89679_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_202b89679_Token>>,jule::I64> _205855d15_getRangeExprTokens(jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Bool _205856a6e_checkAssignTokens(jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline _20285b7ad_Log _205857c90_makeErr(jule::I64, jule::I64, jule::Ptr<_202b8ea14_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_202b89679_Token>> _205858268_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_202b89679_Token>>,jule::Slice<jule::Ptr<_202b89679_Token>>> _205858510_rangeLast(jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>>,jule::Slice<_20285b7ad_Log>> _2058588ea_partsKind(jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::Str, jule::Bool);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>>,jule::Slice<_20285b7ad_Log>> _205858cd5_parts(jule::Slice<jule::Ptr<_202b89679_Token>>&, jule::U64, jule::Bool);
inline jule::Str _20585907c_getCloseKindOfBrace(jule::Str);
inline _20285b7ad_Log _205859467_compilerErr(jule::Ptr<_202b89679_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _205859896_pushSuggestion(_20285b7ad_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _205859b3d_tokstoa(jule::Slice<jule::Ptr<_202b89679_Token>>&);
inline jule::Bool _205869ba3_isPub(jule::Str&);
inline jule::Ptr<_20434156b_TypeDecl> _20586a522_buildVoidType(void);
inline jule::Ptr<_20434156b_TypeDecl> _20586a786_buildPrimType(jule::Ptr<_202b89679_Token>);
inline std::tuple<jule::Bool,jule::Bool> _205171b4d_checkOs(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _205171c80_checkArch(jule::Str);
inline jule::Bool _205171db2_isPassFileAnnotation(jule::Str);
inline void _20518bccd_setOsVars(jule::Slice<jule::Str>&);
inline void _20518c031_setArchVars(jule::Slice<jule::Str>&);
inline void _20518c2d9_initVars(jule::Slice<jule::Str>&, _20518b9c0_CompileInfo&);
inline jule::Slice<jule::U8> _205283c4e_readBuff(jule::Str);
inline _20285b7ad_Log _2052e7444_flatCompilerErr(jule::Str);
inline void _20561b856_pushPasses(jule::Ptr<_20500dd70_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _20563474d_getAllUniquePasses(jule::Ptr<_20500dd70_Package>&, jule::Slice<jule::Ptr<_20500ae16_ImportInfo>>);
inline _20518b9c0_CompileInfo _20563ee2e_buildCompileInfo(void);
inline void _20596eb10_EliminateDefines(jule::Ptr<_2054b956c_IR>&);
inline jule::Ptr<_20430829c_Directive> _20596ee95_findDirective(jule::Slice<jule::Ptr<_20430829c_Directive>>&, jule::Str);
inline jule::Bool _2059702d6_hasDirective(jule::Slice<jule::Ptr<_20430829c_Directive>>&, jule::Str);
inline void _205973e33_eliminateDeadCodeOfScope(jule::Ptr<_204edc645_Scope>);
inline void _2059741b9_eliminateScopeFunctions(jule::Slice<jule::Ptr<_204ec707a_Fn>>&);
inline void _20597440b_eliminateFunctionsScopePackage(jule::Ptr<_20500dd70_Package>&);
inline void _2059746a3_eliminateScopePackage(jule::Ptr<_20500dd70_Package>&);
inline void _2059748b2_EliminateScopes(jule::Ptr<_2054b956c_IR>&);
inline jule::Bool _202d01417_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _202d04096_isConstantValidConditionalCase(jule::Ptr<_204edca41_If>&);
inline jule::Bool _202d056a2_isUnreachableExpr(jule::Any&);
inline jule::Bool _202d08331_isConstantValidMatchCase(jule::Ptr<_204ee1ddb_Case>&);
inline jule::Bool _202d09585_isUnreachableConditionalCase(jule::Ptr<_204edca41_If>&);
inline jule::Bool _202d1248e_isUnreachableMatchCase(jule::Ptr<_204ee1ddb_Case>&);
inline std::tuple<jule::Bool,jule::U64> _2033ad045_checkForBitShiftOpt(jule::Ptr<_204ec133d_OperandExprModel>&, jule::Ptr<_204ec133d_OperandExprModel>&);
inline void _2033b218c_PushOptLevel(jule::I64);
inline void _2058ead77_detectEnabled(void);
inline void _205982381_Throw(jule::Str);
inline jule::U64 _1d7dc8295_unix(void);
inline jule::U64 _1d7dc85a3_unixYearToSeconds(jule::U64, jule::Bool&);
inline jule::U64 _1d7dc8938_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _1d7215eb8_isCopyOptimizable(jule::Ptr<_20507eb49_Data>&);
inline jule::Bool _1d721634d_isIterCopyOptimizable(jule::Ptr<_20507eb49_Data>&, jule::Ptr<_205031cb6_Var>&);
inline jule::Str _1d7d35697_decomposeCommonEsq(jule::U8);
inline jule::Str _1d7d35983_sbtoa(jule::U8);
inline jule::Str _1d7d35c2a_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1d7d36049_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1d7d36357_ftoa(jule::F64, jule::I64);
inline jule::Str _1d7d365ee_itoa(jule::I64);
inline jule::Str _1d7d36896_utoa(jule::U64);
inline jule::Bool _1d7d36c4d_isForwarded(jule::Ptr<_204edc645_Scope>&);
inline jule::Bool _1d7d37017_isBuiltinCallHasDebuginf(jule::Ptr<_204ec21a7_FnCallExprModel>&);
inline jule::Bool _1d7d37248_isExprComesFromBind(jule::Ptr<_20507eb49_Data>&);
inline void _1d7dd149b_iterFiles(jule::Ptr<_20500dd70_Package>&, jule::Fn<void(jule::Ptr<_205074eb3_SymbolTable>&)>);
inline void _1d7dd15cd_prepareStructure(jule::Ptr<_20433367e_Struct>&);
inline jule::Str _1d7dd17ed_concatAllParts(jule::Slice<jule::Ptr<_202b89679_Token>>);
inline jule::Ptr<_20430829c_Directive> _1d7dd9c24_findDirective(jule::Slice<jule::Ptr<_20430829c_Directive>>&, jule::Str);
inline jule::Bool _1d7dda0a9_hasDirective(jule::Slice<jule::Ptr<_20430829c_Directive>>&, jule::Str);
inline jule::Bool _1d7dda351_shouldInitialized(jule::Ptr<_2050aa8de_TypeKind>&);
inline void _20091da92_printErrorMessage(jule::Str);
inline void _202825832_help(jule::Slice<jule::Str>&);
inline void _20283dd12_version(jule::Slice<jule::Str>&);
inline void _20283e560_toolDistos(void);
inline void _202840e13_toolDistarch(void);
inline void _202841661_tool(jule::Slice<jule::Str>&);
inline void _202841dae_julenv(jule::Slice<jule::Str>&);
inline void _202826734_mod(jule::Slice<jule::Str>&);
inline jule::Bool _20284d76c_processCommand(jule::Slice<jule::Str>&);
inline void _2017a4d67_showInfo(void);
void entry_point(void);
inline void _1d7de3975_init(void);
inline jule::Ptr<_200a47a01_File> _1d7de5526_openOutput(jule::Str&);
inline void _1d7e0170d_clearObjects(void);
inline void _1d7ddcb5b_compileIr(jule::Str, jule::Str);
inline jule::Bool _1d7ddc5c8_isCppSourceFile(jule::Str);
inline void _1d7de1cd6_pushCompCmdClang(jule::Str&);
inline void _1d7ddeeb0_pushCompCmdGcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1d7e15634_genCompileCmd(jule::Str, jule::Ptr<_2054b956c_IR>&);
inline jule::Str _1d7dde443_getCompilePath(void);
inline void _1d7dde9c6_applyTargetIndependentOptimizations(jule::Ptr<_2054b956c_IR>&);
inline void _1d7dec4b7_checkCompilerFlag(void);
inline void _1d7ddc1cc_checkTargetArch(jule::Str);
inline void _1d7de1038_checkTargetOs(jule::Str);
inline void _1d7de116a_checkTargetFlag(jule::Str&);
inline void _1d7e2283e_checkOptFlag(jule::Str&);
inline void _1d7e22ba2_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1d7e22cd4_checkFlags(jule::Slice<jule::Str>&);
inline void _1d7e22e16_setupSemaFlags(jule::I64&);
inline jule::Ptr<_2054b956c_IR> _1d7e23048_buildIr(jule::Slice<jule::Str>&);
inline void _1d7e2317a_compileCommand(jule::Slice<jule::Str>&);


struct _205008298_ImporterMptrData {
	void(*_2050071ba_SetModPath)(jule::Trait<_205008298_Importer>, jule::Str);
	jule::Str(*_20500740c_GetModPath)(jule::Trait<_205008298_Importer>);
	jule::Str(*_20500771a_ModById)(jule::Trait<_205008298_Importer>, jule::I64);
	jule::Ptr<_20500ae16_ImportInfo>(*_205007a28_GetImport)(jule::Trait<_205008298_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_204307202_Ast>>,jule::Slice<_20285b7ad_Log>>(*_205007dd0_ImportPackage)(jule::Trait<_205008298_Importer>, jule::Str, jule::Bool);
	void(*_205008155_Imported)(jule::Trait<_205008298_Importer>, jule::Ptr<_20500ae16_ImportInfo>);
};

struct _2050aa4b0_KindMptrData {
	jule::Str(*_2050aa05e_Str)(jule::Trait<_2050aa4b0_Kind>);
	jule::Bool(*_2050aa36c_Equals)(jule::Trait<_2050aa4b0_Kind>, jule::Ptr<_2050aa8de_TypeKind>);
};

struct _2050c6520_LookupMptrData {
	jule::Ptr<_20500ae16_ImportInfo>(*_2050c46c7_FindPackage)(jule::Trait<_2050c6520_Lookup>, jule::Str);
	jule::Ptr<_20500ae16_ImportInfo>(*_2050c49d5_SelectPackage)(jule::Trait<_2050c6520_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_20500ae16_ImportInfo>)>);
	jule::Ptr<_205031cb6_Var>(*_2050c4d8c_FindVar)(jule::Trait<_2050c6520_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_2050a9beb_TypeAlias>(*_2050c5244_FindTypeAlias)(jule::Trait<_2050c6520_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_20433367e_Struct>(*_2050c55eb_FindStruct)(jule::Trait<_2050c6520_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_204ec707a_Fn>(*_2050c59a3_FindFn)(jule::Trait<_2050c6520_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_204ece8e0_Trait>(*_2050c5cb1_FindTrait)(jule::Trait<_2050c6520_Lookup>, jule::Str);
	jule::Ptr<_204ed1a35_Enum>(*_2050c60be_FindEnum)(jule::Trait<_2050c6520_Lookup>, jule::Str);
	jule::Ptr<_204ed3130_TypeEnum>(*_2050c63cc_FindTypeEnum)(jule::Trait<_2050c6520_Lookup>, jule::Str);
};

struct _1d7e1c0db_CommonFlagMptrData {
	jule::Str(*_1d7ddbb9e_Name)(jule::Trait<_1d7e1c0db_CommonFlag>);
	jule::I32(*_1d7ddbcd1_Short)(jule::Trait<_1d7e1c0db_CommonFlag>);
	jule::Str(*_1d7ddbe13_What)(jule::Trait<_1d7e1c0db_CommonFlag>);
	void(*_1d7ddc09a_Reset)(jule::Trait<_1d7e1c0db_CommonFlag>);
};



inline void _2050071ba_SetModPath_0(jule::Trait<_205008298_Importer> _self_, jule::Str _1729_path) {
	_20533a366_SetModPath(_self_.safe_ptr<_2052896b1_JuleImporter>(), _1729_path);
}
inline jule::Str _20500740c_GetModPath_0(jule::Trait<_205008298_Importer> _self_) {
	return _2053ed627_GetModPath(_self_.safe_ptr<_2052896b1_JuleImporter>());
}
inline jule::Str _20500771a_ModById_0(jule::Trait<_205008298_Importer> _self_, jule::I64 _2522_id) {
	return _20540edec_ModById(_self_.safe_ptr<_2052896b1_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_20500ae16_ImportInfo> _205007a28_GetImport_0(jule::Trait<_205008298_Importer> _self_, jule::Str _3128_path) {
	return _20541aa73_GetImport(_self_.safe_ptr<_2052896b1_JuleImporter>(), _3128_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_204307202_Ast>>,jule::Slice<_20285b7ad_Log>> _205007dd0_ImportPackage_0(jule::Trait<_205008298_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _20546986e_ImportPackage(_self_.safe_ptr<_2052896b1_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _205008155_Imported_0(jule::Trait<_205008298_Importer> _self_, jule::Ptr<_20500ae16_ImportInfo> _4131__0) {
	_20547c530_Imported(_self_.safe_ptr<_2052896b1_JuleImporter>(), _4131__0);
}
inline jule::Str _2050aa05e_Str_0(jule::Trait<_2050aa4b0_Kind> _self_) {
	return _204326be4_Str(_self_.safe_ptr<_20435cc5d_StructIns>());
}
inline jule::Bool _2050aa36c_Equals_0(jule::Trait<_2050aa4b0_Kind> _self_, jule::Ptr<_2050aa8de_TypeKind> _5622_other) {
	return _2043273a9_Equals(_self_.data.as<_20435cc5d_StructIns>(), _5622_other);
}
inline jule::Str _2050aa05e_Str_1(jule::Trait<_2050aa4b0_Kind> _self_) {
	return _204396527_Str(_self_.safe_ptr<_204ec7454_FnIns>());
}
inline jule::Bool _2050aa36c_Equals_1(jule::Trait<_2050aa4b0_Kind> _self_, jule::Ptr<_2050aa8de_TypeKind> _5622_other) {
	return _204394c84_Equals(_self_.data.as<_204ec7454_FnIns>(), _5622_other);
}
inline jule::Str _2050aa05e_Str_2(jule::Trait<_2050aa4b0_Kind> _self_) {
	return _204ececdb_Str(_self_.safe_ptr<_204ece8e0_Trait>());
}
inline jule::Bool _2050aa36c_Equals_2(jule::Trait<_2050aa4b0_Kind> _self_, jule::Ptr<_2050aa8de_TypeKind> _5622_other) {
	return _204ed00e9_Equals(_self_.data.as<_204ece8e0_Trait>(), _5622_other);
}
inline jule::Str _2050aa05e_Str_3(jule::Trait<_2050aa4b0_Kind> _self_) {
	return _204ed1d98_Str(_self_.safe_ptr<_204ed1a35_Enum>());
}
inline jule::Bool _2050aa36c_Equals_3(jule::Trait<_2050aa4b0_Kind> _self_, jule::Ptr<_2050aa8de_TypeKind> _5622_other) {
	return _204ed21a6_Equals(_self_.data.as<_204ed1a35_Enum>(), _5622_other);
}
inline jule::Str _2050aa05e_Str_4(jule::Trait<_2050aa4b0_Kind> _self_) {
	return _204ed3460_Str(_self_.safe_ptr<_204ed3130_TypeEnum>());
}
inline jule::Bool _2050aa36c_Equals_4(jule::Trait<_2050aa4b0_Kind> _self_, jule::Ptr<_2050aa8de_TypeKind> _5622_other) {
	return _204ed376d_Equals(_self_.data.as<_204ed3130_TypeEnum>(), _5622_other);
}
inline jule::Str _2050aa05e_Str_5(jule::Trait<_2050aa4b0_Kind> _self_) {
	return _2050aacda_Str(_self_.safe_ptr<_2050aa8de_TypeKind>());
}
inline jule::Bool _2050aa36c_Equals_5(jule::Trait<_2050aa4b0_Kind> _self_, jule::Ptr<_2050aa8de_TypeKind> _5622_other) {
	return _2050ab0e8_Equals(_self_.data.as<_2050aa8de_TypeKind>(), _5622_other);
}
inline jule::Str _2050aa05e_Str_6(jule::Trait<_2050aa4b0_Kind> _self_) {
	return _2050b0729_Str(_self_.safe_ptr<_2050b03b6_Prim>());
}
inline jule::Bool _2050aa36c_Equals_6(jule::Trait<_2050aa4b0_Kind> _self_, jule::Ptr<_2050aa8de_TypeKind> _5622_other) {
	return _2050b0a37_Equals(_self_.data.as<_2050b03b6_Prim>(), _5622_other);
}
inline jule::Str _2050aa05e_Str_7(jule::Trait<_2050aa4b0_Kind> _self_) {
	return _2050b3ead_Str(_self_.safe_ptr<_2050b3b4a_Sptr>());
}
inline jule::Bool _2050aa36c_Equals_7(jule::Trait<_2050aa4b0_Kind> _self_, jule::Ptr<_2050aa8de_TypeKind> _5622_other) {
	return _2050b42bb_Equals(_self_.data.as<_2050b3b4a_Sptr>(), _5622_other);
}
inline jule::Str _2050aa05e_Str_8(jule::Trait<_2050aa4b0_Kind> _self_) {
	return _2050b4ab3_Str(_self_.safe_ptr<_2050b45a7_Slc>());
}
inline jule::Bool _2050aa36c_Equals_8(jule::Trait<_2050aa4b0_Kind> _self_, jule::Ptr<_2050aa8de_TypeKind> _5622_other) {
	return _2050b4dc1_Equals(_self_.data.as<_2050b45a7_Slc>(), _5622_other);
}
inline jule::Str _2050aa05e_Str_9(jule::Trait<_2050aa4b0_Kind> _self_) {
	return _2050b5498_Str(_self_.safe_ptr<_2050b5135_Tuple>());
}
inline jule::Bool _2050aa36c_Equals_9(jule::Trait<_2050aa4b0_Kind> _self_, jule::Ptr<_2050aa8de_TypeKind> _5622_other) {
	return _2050b57a6_Equals(_self_.data.as<_2050b5135_Tuple>(), _5622_other);
}
inline jule::Str _2050aa05e_Str_10(jule::Trait<_2050aa4b0_Kind> _self_) {
	return _2050b5ec1_Str(_self_.safe_ptr<_2050b5b5d_Map>());
}
inline jule::Bool _2050aa36c_Equals_10(jule::Trait<_2050aa4b0_Kind> _self_, jule::Ptr<_2050aa8de_TypeKind> _5622_other) {
	return _2050b62ce_Equals(_self_.data.as<_2050b5b5d_Map>(), _5622_other);
}
inline jule::Str _2050aa05e_Str_11(jule::Trait<_2050aa4b0_Kind> _self_) {
	return _2050b6ab5_Str(_self_.safe_ptr<_2050b6752_Arr>());
}
inline jule::Bool _2050aa36c_Equals_11(jule::Trait<_2050aa4b0_Kind> _self_, jule::Ptr<_2050aa8de_TypeKind> _5622_other) {
	return _2050b6dc3_Equals(_self_.data.as<_2050b6752_Arr>(), _5622_other);
}
inline jule::Str _2050aa05e_Str_12(jule::Trait<_2050aa4b0_Kind> _self_) {
	return _2050b7522_Str(_self_.safe_ptr<_2050b71ae_Ptr>());
}
inline jule::Bool _2050aa36c_Equals_12(jule::Trait<_2050aa4b0_Kind> _self_, jule::Ptr<_2050aa8de_TypeKind> _5622_other) {
	return _2050b7830_Equals(_self_.data.as<_2050b71ae_Ptr>(), _5622_other);
}
inline jule::Str _2050aa05e_Str_13(jule::Trait<_2050aa4b0_Kind> _self_) {
	return _1d7dd27cc_Str(_self_.safe_ptr<_1d7dd2513_customType>());
}
inline jule::Bool _2050aa36c_Equals_13(jule::Trait<_2050aa4b0_Kind> _self_, jule::Ptr<_2050aa8de_TypeKind> _5622_other) {
	return _1d7dd2ada_Equals(_self_.data.as<_1d7dd2513_customType>(), _5622_other);
}
inline jule::Ptr<_20500ae16_ImportInfo> _2050c46c7_FindPackage_0(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _930_ident) {
	return _204ee4707_FindPackage(_self_.safe_ptr<_204ee42a6_scopeChecker>(), _930_ident);
}
inline jule::Ptr<_20500ae16_ImportInfo> _2050c49d5_SelectPackage_0(jule::Trait<_2050c6520_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20500ae16_ImportInfo>)> _1332_selector) {
	return _204ee4a15_SelectPackage(_self_.safe_ptr<_204ee42a6_scopeChecker>(), _1332_selector);
}
inline jule::Ptr<_205031cb6_Var> _2050c4d8c_FindVar_0(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _204ee4dbc_FindVar(_self_.safe_ptr<_204ee42a6_scopeChecker>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_2050a9beb_TypeAlias> _2050c5244_FindTypeAlias_0(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _204ee5274_FindTypeAlias(_self_.safe_ptr<_204ee42a6_scopeChecker>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_20433367e_Struct> _2050c55eb_FindStruct_0(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _204ee562b_FindStruct(_self_.safe_ptr<_204ee42a6_scopeChecker>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_204ec707a_Fn> _2050c59a3_FindFn_0(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _204ee59d3_FindFn(_self_.safe_ptr<_204ee42a6_scopeChecker>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_204ece8e0_Trait> _2050c5cb1_FindTrait_0(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _3328_ident) {
	return _204ee5ce1_FindTrait(_self_.safe_ptr<_204ee42a6_scopeChecker>(), _3328_ident);
}
inline jule::Ptr<_204ed1a35_Enum> _2050c60be_FindEnum_0(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _3727_ident) {
	return _204ee60ee_FindEnum(_self_.safe_ptr<_204ee42a6_scopeChecker>(), _3727_ident);
}
inline jule::Ptr<_204ed3130_TypeEnum> _2050c63cc_FindTypeEnum_0(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _4131_ident) {
	return _204ee640c_FindTypeEnum(_self_.safe_ptr<_204ee42a6_scopeChecker>(), _4131_ident);
}
inline jule::Ptr<_20500ae16_ImportInfo> _2050c46c7_FindPackage_1(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _930_ident) {
	return _20500b433_FindPackage(_self_.safe_ptr<_20500ae16_ImportInfo>(), _930_ident);
}
inline jule::Ptr<_20500ae16_ImportInfo> _2050c49d5_SelectPackage_1(jule::Trait<_2050c6520_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20500ae16_ImportInfo>)> _1332_selector) {
	return _20500b741_SelectPackage(_self_.safe_ptr<_20500ae16_ImportInfo>(), _1332_selector);
}
inline jule::Ptr<_205031cb6_Var> _2050c4d8c_FindVar_1(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _20500bae8_FindVar(_self_.safe_ptr<_20500ae16_ImportInfo>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_2050a9beb_TypeAlias> _2050c5244_FindTypeAlias_1(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _20500bea0_FindTypeAlias(_self_.safe_ptr<_20500ae16_ImportInfo>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_20433367e_Struct> _2050c55eb_FindStruct_1(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _20500c357_FindStruct(_self_.safe_ptr<_20500ae16_ImportInfo>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_204ec707a_Fn> _2050c59a3_FindFn_1(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _20500c70e_FindFn(_self_.safe_ptr<_20500ae16_ImportInfo>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_204ece8e0_Trait> _2050c5cb1_FindTrait_1(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _3328_ident) {
	return _20500ca1c_FindTrait(_self_.safe_ptr<_20500ae16_ImportInfo>(), _3328_ident);
}
inline jule::Ptr<_204ed1a35_Enum> _2050c60be_FindEnum_1(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _3727_ident) {
	return _20500cd2a_FindEnum(_self_.safe_ptr<_20500ae16_ImportInfo>(), _3727_ident);
}
inline jule::Ptr<_204ed3130_TypeEnum> _2050c63cc_FindTypeEnum_1(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _4131_ident) {
	return _20500d138_FindTypeEnum(_self_.safe_ptr<_20500ae16_ImportInfo>(), _4131_ident);
}
inline jule::Ptr<_20500ae16_ImportInfo> _2050c46c7_FindPackage_2(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _930_ident) {
	return _20500e348_FindPackage(_self_.safe_ptr<_20500dd70_Package>(), _930_ident);
}
inline jule::Ptr<_20500ae16_ImportInfo> _2050c49d5_SelectPackage_2(jule::Trait<_2050c6520_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20500ae16_ImportInfo>)> _1332_selector) {
	return _20500e656_SelectPackage(_self_.safe_ptr<_20500dd70_Package>(), _1332_selector);
}
inline jule::Ptr<_205031cb6_Var> _2050c4d8c_FindVar_2(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _20500ea0d_FindVar(_self_.safe_ptr<_20500dd70_Package>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_2050a9beb_TypeAlias> _2050c5244_FindTypeAlias_2(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _20500edb5_FindTypeAlias(_self_.safe_ptr<_20500dd70_Package>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_20433367e_Struct> _2050c55eb_FindStruct_2(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _20501026c_FindStruct(_self_.safe_ptr<_20500dd70_Package>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_204ec707a_Fn> _2050c59a3_FindFn_2(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _205010624_FindFn(_self_.safe_ptr<_20500dd70_Package>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_204ece8e0_Trait> _2050c5cb1_FindTrait_2(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _3328_ident) {
	return _205010932_FindTrait(_self_.safe_ptr<_20500dd70_Package>(), _3328_ident);
}
inline jule::Ptr<_204ed1a35_Enum> _2050c60be_FindEnum_2(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _3727_ident) {
	return _205010c40_FindEnum(_self_.safe_ptr<_20500dd70_Package>(), _3727_ident);
}
inline jule::Ptr<_204ed3130_TypeEnum> _2050c63cc_FindTypeEnum_2(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _4131_ident) {
	return _20501104d_FindTypeEnum(_self_.safe_ptr<_20500dd70_Package>(), _4131_ident);
}
inline jule::Ptr<_20500ae16_ImportInfo> _2050c46c7_FindPackage_3(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _930_ident) {
	return _20501457e_FindPackage(_self_.safe_ptr<_205014062_Sema>(), _930_ident);
}
inline jule::Ptr<_20500ae16_ImportInfo> _2050c49d5_SelectPackage_3(jule::Trait<_2050c6520_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20500ae16_ImportInfo>)> _1332_selector) {
	return _20501488c_SelectPackage(_self_.safe_ptr<_205014062_Sema>(), _1332_selector);
}
inline jule::Ptr<_205031cb6_Var> _2050c4d8c_FindVar_3(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _205014c44_FindVar(_self_.safe_ptr<_205014062_Sema>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_2050a9beb_TypeAlias> _2050c5244_FindTypeAlias_3(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _2050150eb_FindTypeAlias(_self_.safe_ptr<_205014062_Sema>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_20433367e_Struct> _2050c55eb_FindStruct_3(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _2050154a3_FindStruct(_self_.safe_ptr<_205014062_Sema>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_204ec707a_Fn> _2050c59a3_FindFn_3(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _20501585a_FindFn(_self_.safe_ptr<_205014062_Sema>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_204ece8e0_Trait> _2050c5cb1_FindTrait_3(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _3328_ident) {
	return _205015b68_FindTrait(_self_.safe_ptr<_205014062_Sema>(), _3328_ident);
}
inline jule::Ptr<_204ed1a35_Enum> _2050c60be_FindEnum_3(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _3727_ident) {
	return _205015e76_FindEnum(_self_.safe_ptr<_205014062_Sema>(), _3727_ident);
}
inline jule::Ptr<_204ed3130_TypeEnum> _2050c63cc_FindTypeEnum_3(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _4131_ident) {
	return _205016284_FindTypeEnum(_self_.safe_ptr<_205014062_Sema>(), _4131_ident);
}
inline jule::Ptr<_20500ae16_ImportInfo> _2050c46c7_FindPackage_4(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _930_ident) {
	return _2050754d0_FindPackage(_self_.safe_ptr<_205074eb3_SymbolTable>(), _930_ident);
}
inline jule::Ptr<_20500ae16_ImportInfo> _2050c49d5_SelectPackage_4(jule::Trait<_2050c6520_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20500ae16_ImportInfo>)> _1332_selector) {
	return _2050757dd_SelectPackage(_self_.safe_ptr<_205074eb3_SymbolTable>(), _1332_selector);
}
inline jule::Ptr<_205031cb6_Var> _2050c4d8c_FindVar_4(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _205075b95_FindVar(_self_.safe_ptr<_205074eb3_SymbolTable>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_2050a9beb_TypeAlias> _2050c5244_FindTypeAlias_4(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _20507604c_FindTypeAlias(_self_.safe_ptr<_205074eb3_SymbolTable>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_20433367e_Struct> _2050c55eb_FindStruct_4(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _205076404_FindStruct(_self_.safe_ptr<_205074eb3_SymbolTable>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_204ec707a_Fn> _2050c59a3_FindFn_4(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _2050767ab_FindFn(_self_.safe_ptr<_205074eb3_SymbolTable>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_204ece8e0_Trait> _2050c5cb1_FindTrait_4(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _3328_ident) {
	return _20507b926_FindTrait(_self_.safe_ptr<_205074eb3_SymbolTable>(), _3328_ident);
}
inline jule::Ptr<_204ed1a35_Enum> _2050c60be_FindEnum_4(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _3727_ident) {
	return _20507bc34_FindEnum(_self_.safe_ptr<_205074eb3_SymbolTable>(), _3727_ident);
}
inline jule::Ptr<_204ed3130_TypeEnum> _2050c63cc_FindTypeEnum_4(jule::Trait<_2050c6520_Lookup> _self_, jule::Str _4131_ident) {
	return _20507c042_FindTypeEnum(_self_.safe_ptr<_205074eb3_SymbolTable>(), _4131_ident);
}
inline jule::Str _1d7ddbb9e_Name_0(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	return _1dc166045_Name(_self_.safe_ptr<_1dc4a9eb0_Flag>());
}
inline jule::I32 _1d7ddbcd1_Short_0(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	return _1dc4aa521_Short(_self_.safe_ptr<_1dc4a9eb0_Flag>());
}
inline jule::Str _1d7ddbe13_What_0(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	return _1dc166177_What(_self_.safe_ptr<_1dc4a9eb0_Flag>());
}
inline void _1d7ddc09a_Reset_0(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	_1dc4aa3de_Reset(_self_.safe_ptr<_1dc4a9eb0_Flag>());
}
inline jule::Str _1d7ddbb9e_Name_1(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	return _1dc4ad821_Name(_self_.safe_ptr<_1dc4add0a_Flag>());
}
inline jule::I32 _1d7ddbcd1_Short_1(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	return _1dc4ae35a_Short(_self_.safe_ptr<_1dc4add0a_Flag>());
}
inline jule::Str _1d7ddbe13_What_1(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	return _1dc4ae0e6_What(_self_.safe_ptr<_1dc4add0a_Flag>());
}
inline void _1d7ddc09a_Reset_1(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	_1dc4ae228_Reset(_self_.safe_ptr<_1dc4add0a_Flag>());
}
inline jule::Str _1d7ddbb9e_Name_2(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	return _1dc4b245c_Name(_self_.safe_ptr<_1dc4b2946_Flag>());
}
inline jule::I32 _1d7ddbcd1_Short_2(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	return _1dc4b2e96_Short(_self_.safe_ptr<_1dc4b2946_Flag>());
}
inline jule::Str _1d7ddbe13_What_2(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	return _1dc4b2c32_What(_self_.safe_ptr<_1dc4b2946_Flag>());
}
inline void _1d7ddc09a_Reset_2(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	_1dc4b2d64_Reset(_self_.safe_ptr<_1dc4b2946_Flag>());
}
inline jule::Str _1d7ddbb9e_Name_3(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	return _1dc4b60dc_Name(_self_.safe_ptr<_1dc4b65c6_Flag>());
}
inline jule::I32 _1d7ddbcd1_Short_3(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	return _1dc4b6b26_Short(_self_.safe_ptr<_1dc4b65c6_Flag>());
}
inline jule::Str _1d7ddbe13_What_3(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	return _1dc4b68b2_What(_self_.safe_ptr<_1dc4b65c6_Flag>());
}
inline void _1d7ddc09a_Reset_3(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	_1dc4b69e4_Reset(_self_.safe_ptr<_1dc4b65c6_Flag>());
}
inline jule::Str _1d7ddbb9e_Name_4(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	return _1dc4b9c28_Name(_self_.safe_ptr<_1dc4ba212_Flag>());
}
inline jule::I32 _1d7ddbcd1_Short_4(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	return _1dc4ba762_Short(_self_.safe_ptr<_1dc4ba212_Flag>());
}
inline jule::Str _1d7ddbe13_What_4(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	return _1dc4ba4ed_What(_self_.safe_ptr<_1dc4ba212_Flag>());
}
inline void _1d7ddc09a_Reset_4(jule::Trait<_1d7e1c0db_CommonFlag> _self_) {
	_1dc4ba630_Reset(_self_.safe_ptr<_1dc4ba212_Flag>());
}


static _205008298_ImporterMptrData _205008298_Importer_mptr_data[] = {
	{
		._2050071ba_SetModPath=_2050071ba_SetModPath_0,
		._20500740c_GetModPath=_20500740c_GetModPath_0,
		._20500771a_ModById=_20500771a_ModById_0,
		._205007a28_GetImport=_205007a28_GetImport_0,
		._205007dd0_ImportPackage=_205007dd0_ImportPackage_0,
		._205008155_Imported=_205008155_Imported_0,
	},
};
static _2050aa4b0_KindMptrData _2050aa4b0_Kind_mptr_data[] = {
	{
		._2050aa05e_Str=_2050aa05e_Str_0,
		._2050aa36c_Equals=_2050aa36c_Equals_0,
	},
	{
		._2050aa05e_Str=_2050aa05e_Str_1,
		._2050aa36c_Equals=_2050aa36c_Equals_1,
	},
	{
		._2050aa05e_Str=_2050aa05e_Str_2,
		._2050aa36c_Equals=_2050aa36c_Equals_2,
	},
	{
		._2050aa05e_Str=_2050aa05e_Str_3,
		._2050aa36c_Equals=_2050aa36c_Equals_3,
	},
	{
		._2050aa05e_Str=_2050aa05e_Str_4,
		._2050aa36c_Equals=_2050aa36c_Equals_4,
	},
	{
		._2050aa05e_Str=_2050aa05e_Str_5,
		._2050aa36c_Equals=_2050aa36c_Equals_5,
	},
	{
		._2050aa05e_Str=_2050aa05e_Str_6,
		._2050aa36c_Equals=_2050aa36c_Equals_6,
	},
	{
		._2050aa05e_Str=_2050aa05e_Str_7,
		._2050aa36c_Equals=_2050aa36c_Equals_7,
	},
	{
		._2050aa05e_Str=_2050aa05e_Str_8,
		._2050aa36c_Equals=_2050aa36c_Equals_8,
	},
	{
		._2050aa05e_Str=_2050aa05e_Str_9,
		._2050aa36c_Equals=_2050aa36c_Equals_9,
	},
	{
		._2050aa05e_Str=_2050aa05e_Str_10,
		._2050aa36c_Equals=_2050aa36c_Equals_10,
	},
	{
		._2050aa05e_Str=_2050aa05e_Str_11,
		._2050aa36c_Equals=_2050aa36c_Equals_11,
	},
	{
		._2050aa05e_Str=_2050aa05e_Str_12,
		._2050aa36c_Equals=_2050aa36c_Equals_12,
	},
	{
		._2050aa05e_Str=_2050aa05e_Str_13,
		._2050aa36c_Equals=_2050aa36c_Equals_13,
	},
};
static _2050c6520_LookupMptrData _2050c6520_Lookup_mptr_data[] = {
	{
		._2050c46c7_FindPackage=_2050c46c7_FindPackage_0,
		._2050c49d5_SelectPackage=_2050c49d5_SelectPackage_0,
		._2050c4d8c_FindVar=_2050c4d8c_FindVar_0,
		._2050c5244_FindTypeAlias=_2050c5244_FindTypeAlias_0,
		._2050c55eb_FindStruct=_2050c55eb_FindStruct_0,
		._2050c59a3_FindFn=_2050c59a3_FindFn_0,
		._2050c5cb1_FindTrait=_2050c5cb1_FindTrait_0,
		._2050c60be_FindEnum=_2050c60be_FindEnum_0,
		._2050c63cc_FindTypeEnum=_2050c63cc_FindTypeEnum_0,
	},
	{
		._2050c46c7_FindPackage=_2050c46c7_FindPackage_1,
		._2050c49d5_SelectPackage=_2050c49d5_SelectPackage_1,
		._2050c4d8c_FindVar=_2050c4d8c_FindVar_1,
		._2050c5244_FindTypeAlias=_2050c5244_FindTypeAlias_1,
		._2050c55eb_FindStruct=_2050c55eb_FindStruct_1,
		._2050c59a3_FindFn=_2050c59a3_FindFn_1,
		._2050c5cb1_FindTrait=_2050c5cb1_FindTrait_1,
		._2050c60be_FindEnum=_2050c60be_FindEnum_1,
		._2050c63cc_FindTypeEnum=_2050c63cc_FindTypeEnum_1,
	},
	{
		._2050c46c7_FindPackage=_2050c46c7_FindPackage_2,
		._2050c49d5_SelectPackage=_2050c49d5_SelectPackage_2,
		._2050c4d8c_FindVar=_2050c4d8c_FindVar_2,
		._2050c5244_FindTypeAlias=_2050c5244_FindTypeAlias_2,
		._2050c55eb_FindStruct=_2050c55eb_FindStruct_2,
		._2050c59a3_FindFn=_2050c59a3_FindFn_2,
		._2050c5cb1_FindTrait=_2050c5cb1_FindTrait_2,
		._2050c60be_FindEnum=_2050c60be_FindEnum_2,
		._2050c63cc_FindTypeEnum=_2050c63cc_FindTypeEnum_2,
	},
	{
		._2050c46c7_FindPackage=_2050c46c7_FindPackage_3,
		._2050c49d5_SelectPackage=_2050c49d5_SelectPackage_3,
		._2050c4d8c_FindVar=_2050c4d8c_FindVar_3,
		._2050c5244_FindTypeAlias=_2050c5244_FindTypeAlias_3,
		._2050c55eb_FindStruct=_2050c55eb_FindStruct_3,
		._2050c59a3_FindFn=_2050c59a3_FindFn_3,
		._2050c5cb1_FindTrait=_2050c5cb1_FindTrait_3,
		._2050c60be_FindEnum=_2050c60be_FindEnum_3,
		._2050c63cc_FindTypeEnum=_2050c63cc_FindTypeEnum_3,
	},
	{
		._2050c46c7_FindPackage=_2050c46c7_FindPackage_4,
		._2050c49d5_SelectPackage=_2050c49d5_SelectPackage_4,
		._2050c4d8c_FindVar=_2050c4d8c_FindVar_4,
		._2050c5244_FindTypeAlias=_2050c5244_FindTypeAlias_4,
		._2050c55eb_FindStruct=_2050c55eb_FindStruct_4,
		._2050c59a3_FindFn=_2050c59a3_FindFn_4,
		._2050c5cb1_FindTrait=_2050c5cb1_FindTrait_4,
		._2050c60be_FindEnum=_2050c60be_FindEnum_4,
		._2050c63cc_FindTypeEnum=_2050c63cc_FindTypeEnum_4,
	},
};
static _1d7e1c0db_CommonFlagMptrData _1d7e1c0db_CommonFlag_mptr_data[] = {
	{
		._1d7ddbb9e_Name=_1d7ddbb9e_Name_0,
		._1d7ddbcd1_Short=_1d7ddbcd1_Short_0,
		._1d7ddbe13_What=_1d7ddbe13_What_0,
		._1d7ddc09a_Reset=_1d7ddc09a_Reset_0,
	},
	{
		._1d7ddbb9e_Name=_1d7ddbb9e_Name_1,
		._1d7ddbcd1_Short=_1d7ddbcd1_Short_1,
		._1d7ddbe13_What=_1d7ddbe13_What_1,
		._1d7ddc09a_Reset=_1d7ddc09a_Reset_1,
	},
	{
		._1d7ddbb9e_Name=_1d7ddbb9e_Name_2,
		._1d7ddbcd1_Short=_1d7ddbcd1_Short_2,
		._1d7ddbe13_What=_1d7ddbe13_What_2,
		._1d7ddc09a_Reset=_1d7ddc09a_Reset_2,
	},
	{
		._1d7ddbb9e_Name=_1d7ddbb9e_Name_3,
		._1d7ddbcd1_Short=_1d7ddbcd1_Short_3,
		._1d7ddbe13_What=_1d7ddbe13_What_3,
		._1d7ddc09a_Reset=_1d7ddc09a_Reset_3,
	},
	{
		._1d7ddbb9e_Name=_1d7ddbb9e_Name_4,
		._1d7ddbcd1_Short=_1d7ddbcd1_Short_4,
		._1d7ddbe13_What=_1d7ddbe13_What_4,
		._1d7ddc09a_Reset=_1d7ddc09a_Reset_4,
	},
};


jule::Str _1d7de5bdb_OutDir = jule::Str("dist", 4);
jule::Str _1d7de76d2_OutName = jule::Str("ir.cpp", 6);
jule::Str _1d7de833c_Out = jule::Str();
jule::Str _20089021c_Compiler = jule::Str();
jule::Str _200890481_CompilerPath = jule::Str();
jule::Str _2008906e5_CppStd = jule::Str("cpp17", 5);
jule::Bool _200890959_Shadowing = false;
jule::Bool _200890bbd_Transpilation = false;
jule::Bool _200890e65_Test = false;
jule::Bool _200891262_RC = true;
jule::Bool _200891680_Safety = true;
jule::Bool _20089198d_Production = false;
jule::Ptr<_2026eaecc_RangeTable> _2026771cd__L = jule::new_ptr<_2026eaecc_RangeTable>(_2026eaecc_RangeTable{._field_R16=jule::Slice<_2026ea5d6_Range16>::make({_2026ea5d6_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_2026ea5d6_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_2026ea5d6_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_2026ea5d6_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_2026ea5d6_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_2026ea5d6_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_2026ea5d6_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_2026ea5d6_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_2026ea5d6_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_2026ea5d6_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_2026ea5d6_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_2026ea5d6_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_2026ea5d6_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_2026ea5d6_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_2026ea5d6_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_2026ea5d6_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_2026ea5d6_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_2026ea5d6_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_2026ea5d6_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_2026ea5d6_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_2026ea5d6_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_2026ea5d6_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_2026ea5d6_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_2026ea5d6_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_2026ea5d6_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_2026ea5d6_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_2026ea5d6_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_2026ea5d6_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_2026ea5d6_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_2026ea5d6_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_2026ea5d6_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_2026ea5d6_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_2026ea5d6_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_2026ea5d6_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_2026ea5d6_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_2026ea5d6_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_2026ea5d6_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_2026ea5d6_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_2026ea5d6_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_2026ea5d6_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_2026ea5d6_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_2026ea5d6_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_2026ea5d6_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_2026ea5d6_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_2026ea5d6_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_2026ea5d6_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_2026ea5d6_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_2026ea5d6_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_2026ea5d6_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_2026ea5d6_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_2026ea5d6_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_2026ea5d6_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_2026ea5d6_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_2026ea5d6_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_2026ea5d6_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_2026ea5d6_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_2026ea5d6_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_2026ea5d6_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_2026ea5d6_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_2026ea5d6_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_2026eaa59_Range32>::make({_2026eaa59_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_2026eaa59_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_2026eaa59_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_2026eaa59_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_2026eaa59_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_2026eaa59_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_2026eaa59_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_2026eaa59_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_2026eaa59_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_2026eaa59_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_2026eaa59_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_2026eaa59_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_2026eaa59_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_2026eaa59_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_2026eaa59_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_2026eaa59_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_2026eaa59_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_2026eaa59_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_2026eaa59_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_2026eaa59_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_2026eaa59_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_2026eaa59_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_2026eaa59_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_2026eaa59_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_2026eaa59_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_2026eaa59_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_2026eaa59_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_2026eaa59_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_2026eaa59_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_2026eaa59_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_2026eaa59_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_2026eaa59_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_2026eaa59_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_2026eaa59_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_2026eaa59_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_2026eaa59_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_2026eaa59_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_2026eaa59_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_2026eaa59_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_2026eaa59_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_2026eaa59_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_2026eaa59_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_2026eaa59_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_2026eaecc_RangeTable> _202678333__LU = jule::new_ptr<_2026eaecc_RangeTable>(_2026eaecc_RangeTable{._field_R16=jule::Slice<_2026ea5d6_Range16>::make({_2026ea5d6_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_2026ea5d6_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_2026ea5d6_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_2026ea5d6_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_2026ea5d6_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_2026ea5d6_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_2026ea5d6_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_2026ea5d6_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_2026ea5d6_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_2026ea5d6_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_2026ea5d6_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_2026ea5d6_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_2026ea5d6_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_2026ea5d6_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_2026ea5d6_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_2026ea5d6_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_2026ea5d6_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_2026eaa59_Range32>::make({_2026eaa59_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_2026eaa59_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_2026eaa59_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_2026eaa59_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_2026eaa59_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_2026eaa59_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_2026eaa59_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::Str,4> _20089a414_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _20284d283_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _20284e7b2_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _2028954d9_PathStdlib = jule::Str();
jule::Str _202897398_PathExec = jule::Str();
jule::Str _202899b1a_PathWd = jule::Str();
jule::Str _2028a5395_PathApi = jule::Str();
jule::Array<jule::I32,5> _202ad71cb_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _202ad7440_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _202ad7781_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _202b83b4b_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _202b83e8c_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_202b91a6b_kindPair,47> _202b92000_keywords = jule::Array<_202b91a6b_kindPair,47>({_202b91a6b_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(21LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(23LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(24LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(25LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(26LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(27LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(28LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(29LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(30LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(31LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(32LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(33LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(34LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(35LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(36LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(37LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(39LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_202b91a6b_kindPair,39> _202b92385_basicOps = jule::Array<_202b91a6b_kindPair,39>({_202b91a6b_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(22LLU)},_202b91a6b_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_202b91a6b_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_202b91a6b_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_202b91a6b_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(38LLU)}});
jule::Array<jule::U8,32> _204e7a627__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _204e7ac76__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_204a9047e_floatInfo _2048dcb7d_f32info = _204a9047e_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_204a9047e_floatInfo _2048e3117_f64info = _204a9047e_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _20497d01a_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _2049c4d42_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _2049d12c1_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _2049e8041_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _204a90968_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_204eba689_leftCheat> _204a924a3_leftCheats = jule::Slice<_204eba689_leftCheat>::make({_204eba689_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_204eba689_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_204eba689_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_204eba689_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_204eba689_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_204eba689_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_204eba689_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_204eba689_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_204eba689_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_204eba689_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_204eba689_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_204eba689_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_204eba689_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_204eba689_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_204eba689_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_204eba689_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_204eba689_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_204eba689_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_204eba689_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_204eba689_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_204eba689_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_204eba689_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_204eba689_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_204eba689_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_204eba689_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_204eba689_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_204eba689_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_204eba689_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_204eba689_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_204eba689_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_204eba689_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_204eba689_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_204eba689_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_204eba689_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_204eba689_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_204eba689_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_204eba689_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_204eba689_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_204eba689_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_204eba689_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_204eba689_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_204eba689_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_204eba689_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_204eba689_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_204eba689_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_204eba689_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_204eba689_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_204eba689_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_204eba689_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_204eba689_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_204eba689_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_204eba689_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_204eba689_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_204eba689_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_204eba689_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_204eba689_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_204eba689_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_204eba689_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_204eba689_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_204eba689_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_204eba689_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _2044caace_BitSize = 0LL;
jule::Str _2044cb10c_SysInt = jule::Str();
jule::Str _2045206d4_SysUint = jule::Str();
jule::Slice<jule::Str> _204ed4e01_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _202bc2e43_Copy = false;
jule::Bool _202bc7475_Deadcode = false;
jule::Bool _202bb120b_Append = false;
jule::Bool _202beba2c_Math = false;
jule::Bool _202c04c55_Access = false;
jule::Bool _202c07c25_Inline = false;
jule::Bool _202c08143_Ptr = false;
jule::Bool _202c08a39_Cond = false;
jule::Bool _205871935_exprEnabled = false;
jule::Bool _205872a8a_scopeEnabled = false;
jule::Array<jule::U64,12> _1d7dc5209_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Ptr<_2026eaecc_RangeTable> _20267edea_Letter = _2026771cd__L;
jule::Ptr<_2026eaecc_RangeTable> _202686e8a_Upper = _202678333__LU;
jule::Array<_2027ad6aa_acceptRange,16> _2027ada1d_acceptRanges = jule::Array<_2027ad6aa_acceptRange,16>({_2027ad6aa_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_2027ad6aa_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_2027ad6aa_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_2027ad6aa_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_2027ad6aa_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _20282e7d6_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _2028a5b7b_Os = jule::Str("linux", 5);
jule::Str _202895154_Arch = jule::Str("amd64", 5);
jule::Array<jule::U8,256> _2026e42c2__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _2027ad138_first = jule::Array<jule::U8,256>({});





std::ostream &operator<<(std::ostream &_Stream, _2026ea5d6_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2026eaa59_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2026eaecc_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2027ad6aa_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _20181e6ea_index(_201817e74_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _20181ee04_append(_201817e74_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len());
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _20182317c_string(_201817e74_lazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_volAndPath.slice(0LL,((*_self_)._field_volLen + (*_self_)._field_w));
	};
	return ((*_self_)._field_volAndPath.slice(0LL,(*_self_)._field_volLen) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _201817e74_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2009634dd_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_2009634dd_DirEntry>>> static__2017969e6_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_2009634dd_DirEntry>> _1534_dirents = jule::Slice<jule::Ptr<_2009634dd_DirEntry>>();
	DIR* _1617_dir = _2017105db_Opendir((&(_1520_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_2009634dd_DirEntry>>>(_20094778b_getLastFsError());
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _201710883_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1d889b8a0;
			};
			jule::Str _2517_name = _2017060a4_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_20174529c_Status> _2621_stat = ({
				auto except = static__2009653e1_Of(_201840276_Join(jule::Slice<jule::Str>::make({_1520_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_2009634dd_DirEntry>>>(except.error);
				} jule::Ptr<_20174529c_Status>();});
			});;
			_1534_dirents = jule::alloc_for_append(_1534_dirents,1);_1534_dirents.__push(jule::new_ptr<_2009634dd_DirEntry>(_2009634dd_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat}));;
		}
	_iter_next_1d889b8a0:;
	}
	_iter_end_1d889b8a0:;;
	_201710b2a_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_2009634dd_DirEntry>>>(jule::Any(), _1534_dirents);
}



inline jule::VoidExceptional static__2017a4295_Create(jule::Str _3922_path) {
	if ((_2017114aa_Mkdir((&(_3922_path[0LL])),448LL) != 0LL)) {
		return jule::VoidExceptional(_20094778b_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__20178043b_Remove(jule::Str _5122_path) {
	if ((_201711752_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_20094778b_getLastFsError());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _200a45cb8_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_200a47a01_File>> static__200948d75_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _1913_handle = _20170ecc2_Open((&(_1820_path[0LL])),static_cast<jule::I64>(_1831_flag),_1844_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_200a47a01_File>>(_20094778b_getLastFsError());
	};
	return jule::Exceptional<jule::Ptr<_200a47a01_File>>(jule::Any(),static__2009682b2_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));
}



inline jule::VoidExceptional static__200949a35_Remove(jule::Str _3022_path) {
	if ((_2017119e9_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_20094778b_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _20094a6e5_Write(_200a47a01_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 _4441_n = jule::I64();
	if ((_4424_buff.len() == 0LL)) {
		_4441_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4441_n);
	};
	_4441_n=static_cast<jule::I64>(_201741265_Write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4424_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((_4441_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_20094778b_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_4441_n);
}



inline jule::Exceptional<jule::I64> _20094bd12_Read(_200a47a01_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 _6444_n = jule::I64();
	if ((_6427_buff.len() == 0LL)) {
		_6444_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_6444_n);
	};
	_6444_n=static_cast<jule::I64>(_201740a06_Read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_6427_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((_6444_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_20094778b_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_6444_n);
}



inline jule::Ptr<_200a47a01_File> static__2009682b2_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_200a47a01_File>(_200a47a01_File{._field_handle=_4519_handle});
}



inline jule::Exceptional<jule::Ptr<_200a47a01_File>> static__200969ea6_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_200a47a01_File>>(jule::Any(),({
		auto except = static__200948d75_Open(_5522_path,static_cast<jule::I64>(578LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_200a47a01_File>>(except.error);
		} jule::Ptr<_200a47a01_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__20096ac65_Read(jule::Str _6720_path) {
	jule::Ptr<_20174529c_Status> _6813_s = ({
		auto except = static__2009653e1_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_20174529c_Status>();});
	});;
	if ((!(_200a46813_IsReg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_Size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	};
	jule::Ptr<_200a47a01_File> _7817_f = ({
		auto except = static__200948d75_Open(_6720_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_200a47a01_File>();});
	});;
	__JULE_DEFER({
		({
			auto except = _20096e10e_Close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_Size));;
	jule::I64 _8213_n = ({
		auto except = _20094bd12_Read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__20096ba9b_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_200a47a01_File> _9217_f = ({
		auto except = static__200948d75_Open(_9121_path,static_cast<jule::I64>(577LL),_9146_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_200a47a01_File>();});
	});;
	({
		auto except = _20094a6e5_Write(_9217_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _20096e10e_Close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _20096d62a_Seek(_200a47a01_File* _self_, jule::I64 _10523_offset, jule::I64 _10536_origin) {
	jule::I64 _10613_pos = _20174061b_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10523_offset,static_cast<jule::I64>(_10536_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_20094778b_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _20096e10e_Close(_200a47a01_File* _self_) {
	if ((_201740d7a_Close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_20094778b_getLastFsError());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _200a47a01_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_20174529c_Status>> static__2009653e1_Of(jule::Str _1118_path) {
	if (_1118_path.empty()) {
		return jule::Exceptional<jule::Ptr<_20174529c_Status>>(static_cast<jule::I64>(4LL));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _20170e8d7_Stat((&(_1118_path[0LL])),(&(_1517_handle)));;
	if ((_1613_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_20174529c_Status>>(jule::Any(),jule::new_ptr<_20174529c_Status>(_20174529c_Status{._field_Mode=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_mode)), ._field_Size=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_size))}));
	};
	return jule::Exceptional<jule::Ptr<_20174529c_Status>>(_20094778b_getLastFsError());
}



inline jule::Bool _200970792_IsDir(_20174529c_Status* _self_) {
	return (((*_self_)._field_Mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _200a46813_IsReg(_20174529c_Status* _self_) {
	return (((*_self_)._field_Mode & 32768LLU) == 32768LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _20174529c_Status _Src) {
	_Stream << "Status{";
	_Stream << "Mode:" << _Src._field_Mode << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2028a7045_Cmd> static__2028a7474_New(jule::Str _2019_path) {
	return jule::new_ptr<_2028a7045_Cmd>(_2028a7045_Cmd{._field_path=_2019_path, });
}



inline jule::Exceptional<jule::I64> _2028a76d8_Spawn(_2028a7045_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _2028aa642_spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _2028aa642_spawn(_2028a7045_Cmd* _self_) {
	if ((*_self_)._field_path.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(3LL));
	};
	jule::I64 _4913_pid = fork();;
	{
		auto &_match_expr{ _4913_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1d88c2574:;
			{
				return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1d88c11aa:;
			{
				jule::I64 _5421_status = 0LL;;
				if (((*_self_)._field_Env == nullptr)) {
					_5421_status=static_cast<jule::I64>(_2028a9e6b_execvp((*_self_)._field_path,(*_self_)._field_Args));
				} else {
					_5421_status=static_cast<jule::I64>(_2028aa356_execve((*_self_)._field_path,(*_self_)._field_Args,(*_self_)._field_Env));
				};
				if ((_5421_status == -1LL)) {
					kill(static_cast<jule::I64>(getpid()),SIGTERM);
				};
				_2028aae6c_Exit(255LL);
			}
		}
		_match_end_1d88c251e:;
	};
	jule::I64 _6513_status = 0LL;;
	if ((waitpid(_4913_pid,((signed*)((&(_6513_status)))),WUNTRACED) == -1LL)) {
		return jule::Exceptional<jule::I64>(_2028a67b4_getLastProcessError());
	};
	if (WIFSIGNALED(_6513_status)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(WEXITSTATUS(_6513_status)));
}







std::ostream &operator<<(std::ostream &_Stream, _2028a7045_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20285b7ad_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _202b89a31_Prec(_202b89679_Token* _self_) {
	if (((*_self_)._field_Id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1d958e905:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1d958e96b:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1d958e9d2:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1d958ea48:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1d958ecbd:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1d958d8e3:;
			{
				return 0LLU;
			}
		}
		_match_end_1d958e8a0:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _202b89679_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _202b8ee21_IsOk(_202b8ea14_File* _self_) {
	({
		auto except = static__2009653e1_Of((*_self_)._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::Ptr<_20174529c_Status>();});
	});
	return true;
}



inline void _202b90196_Fill(_202b8ea14_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*_self_)._field_Data=_2327_data;
}



inline jule::Str _202b9040a_Dir(_202b8ea14_File* _self_) {
	return _20182c483_Dir((*_self_)._field_Path);
}



inline jule::Str _202b9066e_Name(_202b8ea14_File* _self_) {
	return _20182746c_Base((*_self_)._field_Path);
}



inline jule::Uintptr _202b908d3_Addr(_202b8ea14_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));
}



inline jule::Str _202b90be1_GetRow(_202b8ea14_File* _self_, jule::I64 _4421_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_lineStart = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_Data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_Data[_4717_i] != '\n')) {
				goto _iter_next_1d95953ab;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*_self_)._field_Data.slice(_4617_lineStart,_4717_i));
			};
			_4617_lineStart=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1d95953ab:;
	}
	_iter_end_1d95953ab:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _202b8ea14_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _202b91a6b_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _202b97c09_pushErr(_202b97665_lex* _self_, jule::Str _45826_fmt, jule::Slice<jule::Any> _45839_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_202b9286e_makeErr((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45826_fmt,jule::Any(_45839_args)));;
}



inline void _202b98028_pushErrTok(_202b97665_lex* _self_, jule::Ptr<_202b89679_Token>& _46330_token, jule::Str _46345_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_202b9286e_makeErr(_46330_token.get()._field_Row,_46330_token.get()._field_Column,(*_self_)._field_file,_46345_fmt,jule::Slice<jule::Any>()));;
}



inline void _202b98204_lex(_202b97665_lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_202b9a206_newLine(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_202b89679_Token> _47321_token = _202b9b57b_token(&(*_self_));;
			if ((_47321_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1d95cddea:;
	}
	_iter_end_1d95cddea:;;
}



inline jule::Str _202b98512_id(_202b97665_lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48614_r;;
	jule::I64 _48621_i;;
	std::tie(_48614_r,_48621_i) = _2027ae28d_DecodeRune(_48222_ln);
	if (((_48614_r != '_') && (!(_202b8cb55_IsLetter(_48614_r))))) {
		return jule::Str();
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr;;
			jule::I64 _49222_n;;
			std::tie(_49218_pr,_49222_n) = _2027ae28d_DecodeRune(_48222_ln.slice(_48621_i));
			if ((((_49218_pr != '_') && (!(_202b8d194_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_202b8cb55_IsLetter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1d95d2d55:;
	}
	_iter_end_1d95d2d55:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);
}



inline jule::Slice<jule::U8> _202b98776_resume(_202b97665_lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_Data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_Data[_50717_i]);;
			if (_202b8c704_IsSpace(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1d95d7761:;
						{
							_202b9a206_newLine(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1d95d7651:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1d95d7332:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1d95d71cd:;
				};
				goto _iter_next_1d95d53a7;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_Data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_Data[_52421_j] == '\n')) {
						goto _iter_end_1d95d60de;
					};
				}
			_iter_next_1d95d60de:;
			}
			_iter_end_1d95d60de:;;
			return (*_self_)._field_file.get()._field_Data.slice(_50717_i,_52421_j);
		}
	_iter_next_1d95d53a7:;
	}
	_iter_end_1d95d53a7:;;
	return nullptr;
}



inline void _202b989eb_lexLineComment(_202b97665_lex* _self_, jule::Ptr<_202b89679_Token>& _53538_token) {
	jule::I64 _53613_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _53917_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if (((_53917_r == '\n') || (_53917_r == '\r'))) {
				goto _iter_end_1d95da5ee;
			};
		}
	_iter_next_1d95da5ee:;
	}
	_iter_end_1d95da5ee:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53538_token.get()._field_Id=static_cast<jule::U64>(18LLU);
		_53538_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_53613_start,(*_self_)._field_pos));
	};
}



inline void _202b98c71_lexRangeComment(_202b97665_lex* _self_, jule::Ptr<_202b89679_Token>& _55039_token) {
	jule::I64 _55113_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55417_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_55417_r == '\r')) {
				goto _iter_next_1d95ddcea;
			};
			if ((_55417_r == '\n')) {
				_202b9a206_newLine(&(*_self_));
				goto _iter_next_1d95ddcea;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_Data.len()) && (_55417_r == '*')) && ((*_self_)._field_file.get()._field_Data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55039_token.get()._field_Id=static_cast<jule::U64>(18LLU);
					_55039_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_55113_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1d95ddcea:;
	}
	_iter_end_1d95ddcea:;;
	_202b97c09_pushErr(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _202b9907e_num(_202b97665_lex* _self_, jule::Slice<jule::U8>& _57823_txt) {
	jule::Str _57838_lit = jule::Str();
	if ((_57823_txt[0LL] == '_')) {
		_57838_lit = jule::Str();
		return _57838_lit;
	};
	_57838_lit=_202b9618b_hexNum(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	};
	_57838_lit=_202b95de4_octalNum(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	};
	_57838_lit=_202b9483d_binaryNum(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	};
	_57838_lit=_202b94596_commonNum(_57823_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57838_lit.len();
	return _57838_lit;
}



inline jule::Str _202b9938c_escapeSeq(_202b97665_lex* _self_, jule::Slice<jule::U8>& _60029_txt) {
	jule::Str _60117_seq = jule::Str();;
	if ((_60029_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60029_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1d95e961e:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60029_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1d95e9685:;
			{
				_60117_seq=_202b96774_bigUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1d95e91e0:;
			{
				_60117_seq=_202b96a3d_littleUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1d95e9256:;
			{
				_60117_seq=_202b96be7_hexByteEscape(_60029_txt);
			}
		}
		else {
			_case_begin_1d95e88d7:;
			{
				_60117_seq=_202b96e7d_byteEscape(_60029_txt);
			}
		}
		_match_end_1d95e908b:;
	};
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*_self_)._field_pos)++;
		_202b97c09_pushErr(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60117_seq.len();
	return _60117_seq;
}



inline jule::Str _202b99744_getRune(_202b97665_lex* _self_, jule::Slice<jule::U8>& _63027_txt, jule::Bool _63040_raw) {
	if (((!(_63040_raw)) && (_63027_txt[0LL] == '\\'))) {
		return _202b9938c_escapeSeq(&(*_self_), _63027_txt);
	};
	jule::I32 _63414_r;;
	jule::I64 _63417_n;;
	std::tie(_63414_r,_63417_n) = _2027ae28d_DecodeRune(_63027_txt);
	(*_self_)._field_pos+=_63417_n;
	return static_cast<jule::Str>(_63414_r);
}



inline jule::Str _202b99a52_lexRune(_202b97665_lex* _self_, jule::Slice<jule::U8>& _63927_txt) {
	jule::Str _64017_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64217_n = 0LL;;
	jule::I64 _64317_i = 1LL;;
	for (; (_64317_i < _63927_txt.len()); (_64317_i)++) {
		{
			if ((_63927_txt[_64317_i] == '\r')) {
				goto _iter_next_1d9601a77;
			};
			if ((_63927_txt[_64317_i] == '\n')) {
				_202b97c09_pushErr(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_202b9a206_newLine(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65517_part = _63927_txt.slice(_64317_i);;
			jule::Str _65617_r = _202b99744_getRune(&(*_self_), _65517_part,false);;
			_64017_run+=_65617_r;
			(*_self_)._field_column+=_2027b0e82_RuneCountStr(_65617_r);
			if ((_65617_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1d9601a77;
			};
			if ((_65617_r.len() > 1LL)) {
				_64317_i+=(_65617_r.len() - 1LL);
			};
			(_64217_n)++;
		}
	_iter_next_1d9601a77:;
	}
	_iter_end_1d9601a77:;;
	if ((_64217_n == 0LL)) {
		_202b97c09_pushErr(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64217_n > 1LL)) {
		_202b97c09_pushErr(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64017_run;
}



inline jule::Str _202b99cb6_lexStr(_202b97665_lex* _self_) {
	jule::Str _67917_s = jule::Str();;
	jule::U8 _68013_mark = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68213_raw = (_68013_mark == '`');;
	_67917_s+=static_cast<jule::Str>(_68013_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68717_ch = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_68717_ch == '\r')) {
				goto _iter_next_1d960695b;
			};
			if ((_68717_ch == '\n')) {
				_202b9a206_newLine(&(*_self_));
				if ((!(_68213_raw))) {
					_202b97c09_pushErr(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _69921_part = (*_self_)._field_file.get()._field_Data.slice((*_self_)._field_pos);;
			jule::Str _70017_r = _202b99744_getRune(&(*_self_), _69921_part,_68213_raw);;
			_67917_s+=_70017_r;
			(*_self_)._field_column+=_2027b0e82_RuneCountStr(_70017_r);
			if ((_68717_ch == _68013_mark)) {
				goto _iter_end_1d960695b;
			};
		}
	_iter_next_1d960695b:;
	}
	_iter_end_1d960695b:;;
	return _67917_s;
}



inline jule::Bool _202b9a02a_isFirstTokenOfLine(_202b97665_lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _202b9a206_newLine(_202b97665_lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _202b9a701_isOp(_202b97665_lex* _self_, jule::Slice<jule::U8>& _72024_txt, jule::Str _72037_kind, jule::U64 _72048_id, jule::Ptr<_202b89679_Token>& _72066_t) {
	if ((!(_202b92c04_bytesHasPrefix(_72024_txt,_72037_kind)))) {
		return false;
	};
	_72066_t.get()._field_Kind=_72037_kind;
	_72066_t.get()._field_Id=_72048_id;
	(*_self_)._field_pos+=_72037_kind.len();
	return true;
}



inline jule::Bool _202b9aaa8_lexBasicOps(_202b97665_lex* _self_, jule::Slice<jule::U8> _73030_txt, jule::Ptr<_202b89679_Token>& _73048_tok) {
	{
		auto &expr = _202b92385_basicOps;
		auto it = expr.begin();
		_iter_begin_1d960ec0b:;
		if (it != expr.end()) {
			_202b91a6b_kindPair &_73116_pair = *it;
			{
				if (_202b9a701_isOp(&(*_self_), _73030_txt,_73116_pair._field_kind,_73116_pair._field_id,_73048_tok)) {
					return true;
				};
			}
			_iter_next_1d960ec0b:;
			++it;
			goto _iter_begin_1d960ec0b;
		}
		_iter_end_1d960ec0b:;
	};
	return false;
}



inline jule::Bool _202b9ae60_lexId(_202b97665_lex* _self_, jule::Slice<jule::U8>& _74025_txt, jule::Ptr<_202b89679_Token>& _74043_t) {
	jule::Str _74113_lex = _202b98512_id(&(*_self_), _74025_txt);;
	if (_74113_lex.empty()) {
		return false;
	};
	_74043_t.get()._field_Kind=_74113_lex;
	_74043_t.get()._field_Id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _202b9b317_lexNum(_202b97665_lex* _self_, jule::Slice<jule::U8>& _75026_txt, jule::Ptr<_202b89679_Token>& _75044_t) {
	jule::Str _75113_lex = _202b9907e_num(&(*_self_), _75026_txt);;
	if (_75113_lex.empty()) {
		return false;
	};
	_75044_t.get()._field_Kind=_75113_lex;
	_75044_t.get()._field_Id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_202b89679_Token> _202b9b57b_token(_202b97665_lex* _self_) {
	jule::Ptr<_202b89679_Token> _76217_t = jule::new_ptr<_202b89679_Token>(_202b89679_Token{._field_File=(*_self_)._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _76713_txt = _202b98776_resume(&(*_self_));;
	if ((_76713_txt == nullptr)) {
		return _76217_t;
	};
	_76217_t.get()._field_Column=(*_self_)._field_column;
	_76217_t.get()._field_Row=(*_self_)._field_row;
	{
		
		if (_202b9b317_lexNum(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1d9616d45:;
			{
				goto _match_end_1d9614e64;
			}
		}
		else if ((_76713_txt[0LL] == '\'')) {
			_case_begin_1d9616570:;
			{
				_76217_t.get()._field_Kind=_202b99a52_lexRune(&(*_self_), _76713_txt);
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;
			}
		}
		else if (((_76713_txt[0LL] == '\"') || (_76713_txt[0LL] == '`'))) {
			_case_begin_1d96165d6:;
			{
				_76217_t.get()._field_Kind=_202b99cb6_lexStr(&(*_self_));
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;
			}
		}
		else if (_202b92c04_bytesHasPrefix(_76713_txt,jule::Str("//", 2))) {
			_case_begin_1d961664c:;
			{
				_202b989eb_lexLineComment(&(*_self_), _76217_t);
				return _76217_t;
			}
		}
		else if (_202b92c04_bytesHasPrefix(_76713_txt,jule::Str("/*", 2))) {
			_case_begin_1d9617296:;
			{
				_202b98c71_lexRangeComment(&(*_self_), _76217_t);
				return _76217_t;
			}
		}
		else if (_202b9a701_isOp(&(*_self_), _76713_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76217_t) || _202b9a701_isOp(&(*_self_), _76713_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76217_t) || _202b9a701_isOp(&(*_self_), _76713_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76217_t) || _202b9a701_isOp(&(*_self_), _76713_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76217_t) || _202b9a701_isOp(&(*_self_), _76713_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76217_t) || _202b9a701_isOp(&(*_self_), _76713_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76217_t) || _202b9aaa8_lexBasicOps(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1d961730c:;
			{
				goto _match_end_1d9614e64;
			}
		}
		else if (_202b9ae60_lexId(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1d9617373:;
			{
				{
					auto &expr = _202b92000_keywords;
					auto it = expr.begin();
					_iter_begin_1d961d467:;
					if (it != expr.end()) {
						_202b91a6b_kindPair &_80520_pair = *it;
						{
							if ((_80520_pair._field_kind == _76217_t.get()._field_Kind)) {
								_76217_t.get()._field_Id=_80520_pair._field_id;
								goto _iter_end_1d961d467;
							};
						}
						_iter_next_1d961d467:;
						++it;
						goto _iter_begin_1d961d467;
					}
					_iter_end_1d961d467:;
				};
			}
		}
		else {
			_case_begin_1d9615937:;
			{
				jule::I32 _81218_r;;
				jule::I64 _81221_sz;;
				std::tie(_81218_r,_81221_sz) = _2027ae28d_DecodeRune(_76713_txt);
				_202b97c09_pushErr(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81218_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81221_sz;
				return _76217_t;
			}
		}
		_match_end_1d9614e64:;
	};
	(*_self_)._field_column+=_2027b0e82_RuneCountStr(_76217_t.get()._field_Kind);
	return _76217_t;
}







std::ostream &operator<<(std::ostream &_Stream, _202b97665_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204307202_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204307da1_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20430829c_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20434156b_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204341e95_IsPrim(_204341b32_IdentTypeDecl* _self_) {
	return ((*_self_)._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _204341b32_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204342281_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204342638_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204342924_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204342d20_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20434310b_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204343749_IsUnsafe(_2043433e7_PtrTypeDecl* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _2043433e7_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204343e53_AutoSized(_204343a79_ArrTypeDecl* _self_) {
	return ((*_self_)._field_Size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _204343a79_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2043442c7_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20434467e_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204345a8c_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204345d78_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20434642d_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204346719_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204346e23_IsNil(_204346ac1_LitExpr* _self_) {
	return ((*_self_)._field_Value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _204346ac1_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2043472ca_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204347aa0_IsSelf(_20434774d_IdentExpr* _self_) {
	return ((*_self_)._field_Ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _20434774d_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204347e57_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20434830e_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2043486b6_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204348a6d_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204348ee1_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204349464_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204349dd2_Unhandled(_204349a6e_FnCallExpr* _self_) {
	return ((*_self_)._field_Exception == nullptr);
}



inline jule::Bool _20434a146_Ignored(_204349a6e_FnCallExpr* _self_) {
	return (((*_self_)._field_Exception != nullptr) && (*_self_)._field_Exception.get()._field_Deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _204349a6e_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20434a850_IsTargeted(_20434a4ed_FieldExprPair* _self_) {
	return ((*_self_)._field_Field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _20434a4ed_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20434ac4b_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20434b521_IsEmpty(_20434b1be_BraceLit* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _20434b1be_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20434b994_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20434c4ab_IsEmpty(_20434c17b_SliceExpr* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _20434c17b_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20434c9ea_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20434d105_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20434d3e1_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20434d864_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20434dc1b_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20434e0c3_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20434e3ae_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20434e9b9_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204350008_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204350de9_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204351504_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20435203d_IsSelf(_204351bca_ParamDecl* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _2043522a2_IsRef(_204351bca_ParamDecl* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _204351bca_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20435334c_IsAnon(_204352eea_FnDecl* _self_) {
	return ((*_self_)._field_Ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _204352eea_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204353ec9_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204354381_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204354d43_IsInf(_2043549e1_Iter* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _2043549e1_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204355618_IsWhileNext(_2043552b6_WhileKind* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _2043552b6_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204355b57_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20435600e_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2043563b6_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204356839_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204356be1_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204357164_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20435783a_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204357cad_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204358484_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204358c26_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2043594eb_AutoExpr(_204359199_EnumItemDecl* _self_) {
	return ((*_self_)._field_Expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _204359199_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20435a255_DefaultTyped(_204359bc2_EnumDecl* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _204359bc2_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20435a6c8_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20435acd3_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20435aed1_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20435b784_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20435bd8e_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20435c80c_IsTraitImpl(_20435c499_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _20435ca71_IsStructImpl(_20435c499_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _20435c499_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204a9047e_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2017c5b8a_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204eba689_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2049a24d4_set(_204eba9ec_decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1d84e1a9a:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1d84e1b11:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1d84e18d0:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1d84e3eed:;
					{
						goto _iter_next_1d84e3706;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1d84e4075:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1d84e3706;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1d84e40ec:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1d84e3706;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1d84e3706;
					}
				}
				_match_end_1d84e3dbb:;
			};
			goto _iter_end_1d84e3706;
		}
	_iter_next_1d84e3706:;
	}
	_iter_end_1d84e3706:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_204b02634_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1d84ec08e;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1d84ec08e:;
		}
		_iter_end_1d84ec08e:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _204912e4a_floatBits(_204eba9ec_decimal* _self_, _204a9047e_floatInfo& _32729_flt) {
	jule::U64 _32747_b = jule::U64();
	jule::Bool _32755_overflow = jule::Bool();
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _2049c4d42_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_2049c4d42_powtab[(*_self_)._field_dp];
			};
			_204ebad1b_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1d8503eca:;
	}
	_iter_end_1d8503eca:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _2049c4d42_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_2049c4d42_powtab[(-((*_self_)._field_dp))];
			};
			_204ebad1b_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1d85060dc:;
	}
	_iter_end_1d85060dc:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32729_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32729_flt._field_bias + 1LL) - _32817_exp);;
		_204ebad1b_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_204ebad1b_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32729_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_204ebb2e4_roundedInteger(&(*_self_)));
	if ((_32917_mant == (2LLU << _32729_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32729_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32729_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32729_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32729_flt._field_bias))));
	_32755_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32729_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32729_flt._field_bias) & static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) << _32729_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32729_flt._field_mantbits) << _32729_flt._field_expbits);
	};
	_32747_b = _41717_bits;
	return std::make_tuple(_32747_b,_32755_overflow);
}



inline void _204ebabd9_assign(_204eba9ec_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_1d9d89cd2:;
	}
	_iter_end_1d9d89cd2:;;
	(*_self_)._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_33117_buf[_33417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1d9d8ac28:;
	}
	_iter_end_1d9d8ac28:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_204ebb558_trim((*_self_));
}



inline void _204ebad1b_shift(_204eba9ec_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1d9d8cbb4:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_1d9d8cc3b:;
			{
				while ((_35528_k > 60LL)) {
					{
						_204ebb8ee_leftShift((*_self_),60LLU);
						_35528_k-=60LL;
					}
				_iter_next_1d9d8da1c:;
				}
				_iter_end_1d9d8da1c:;;
				_204ebb8ee_leftShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_1d9d8ccb3:;
			{
				while ((_35528_k < -60LL)) {
					{
						_204ebb68a_rightShift((*_self_),60LLU);
						_35528_k+=60LL;
					}
				_iter_next_1d9d8ea84:;
				}
				_iter_end_1d9d8ea84:;;
				_204ebb68a_rightShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_1d9d8ca82:;
	};
}



inline void _204ebae4d_roundDown(_204eba9ec_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_37528_nd;
	_204ebb558_trim((*_self_));
}



inline void _204ebb080_roundUp(_204eba9ec_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*_self_)._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*_self_)._field_d[_39017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_1d9d92a43:;
	}
	_iter_end_1d9d92a43:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _204ebb1b2_round(_204eba9ec_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_204ebba31_shouldRoundUp((*_self_),_41124_nd)) {
		_204ebb080_roundUp(&(*_self_), _41124_nd);
	} else {
		_204ebae4d_roundDown(&(*_self_), _41124_nd);
	};
}



inline jule::U64 _204ebb2e4_roundedInteger(_204eba9ec_decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*_self_)._field_dp) && (_42817_i < (*_self_)._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_42817_i] - '0'))));
		}
	_iter_next_1d9d95aac:;
	}
	_iter_end_1d9d95aac:;;
	for (; (_42817_i < (*_self_)._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_1d9d9797c:;
	}
	_iter_end_1d9d9797c:;;
	if (_204ebba31_shouldRoundUp((*_self_),(*_self_)._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _204eba9ec_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2044102b6_Const> static__204420804_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_2044102b6_Const>(_2044102b6_Const{._field_data=jule::Any(_1622_x)});
}



inline jule::Ptr<_2044102b6_Const> static__20443783d_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_2044102b6_Const>(_2044102b6_Const{._field_data=jule::Any(_1922_x)});
}



inline jule::Ptr<_2044102b6_Const> static__2044521d7_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_2044102b6_Const>(_2044102b6_Const{._field_data=jule::Any(_2223_x)});
}



inline jule::Ptr<_2044102b6_Const> static__204454030_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_2044102b6_Const>(_2044102b6_Const{._field_data=jule::Any(_2522_x)});
}



inline jule::Ptr<_2044102b6_Const> static__20445521d_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_2044102b6_Const>(_2044102b6_Const{._field_data=jule::Any(_2822_x)});
}



inline jule::Ptr<_2044102b6_Const> static__20445596b_NewNil(void) {
	return jule::new_ptr<_2044102b6_Const>(_2044102b6_Const{._field_data=nullptr});
}



inline jule::I64 _204457561_ReadI64(_2044102b6_Const* _self_) {
	if ((!(_20447788e_IsI64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _20445874e_ReadU64(_2044102b6_Const* _self_) {
	if ((!(_2044223e9_IsU64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _204458e9c_ReadBool(_2044102b6_Const* _self_) {
	if ((!(_20442483b_IsBool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _204461834_ReadStr(_2044102b6_Const* _self_) {
	if ((!(_2044610e7_IsStr(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _2044623b2_ReadF64(_2044102b6_Const* _self_) {
	if ((!(_204477240_IsF64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _204463270_AsI64(_2044102b6_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1d9e29338:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1d9e28ba6:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1d9e28c1c:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1d9e28b0c:;
			{
				return 0LL;
			}
		}
		_match_end_1d9e28aa7:;
	};
}



inline jule::U64 _2044573b8_AsU64(_2044102b6_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1d9e2ae83:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1d9e2a911:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1d9e2a977:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1d9e294d1:;
			{
				return 0LLU;
			}
		}
		_match_end_1d9e2a38e:;
	};
}



inline jule::F64 _20446423d_AsF64(_2044102b6_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1d9e2cacd:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1d9e2c539:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1d9e2c5a0:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1d9e2aca7:;
			{
				return 0LL;
			}
		}
		_match_end_1d9e2c292:;
	};
}



inline void _2044650eb_SetI64(_2044102b6_Const* _self_, jule::I64 _13825_x) {
	(*_self_)._field_data=jule::Any(_13825_x);
}



inline void _204477c13_SetU64(_2044102b6_Const* _self_, jule::U64 _14125_x) {
	(*_self_)._field_data=jule::Any(_14125_x);
}



inline void _20447ab5b_SetBool(_2044102b6_Const* _self_, jule::Bool _14426_x) {
	(*_self_)._field_data=jule::Any(_14426_x);
}



inline void _20447b695_SetStr(_2044102b6_Const* _self_, jule::Str _14725_x) {
	(*_self_)._field_data=jule::Any(_14725_x);
}



inline void _20447c223_SetF64(_2044102b6_Const* _self_, jule::F64 _15025_x) {
	(*_self_)._field_data=jule::Any(_15025_x);
}



inline void _204465849_SetNil(_2044102b6_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _20447788e_IsI64(_2044102b6_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1d9e321cb:;
			{
				return true;
			}
		}
		else {
			_case_begin_1d9e31a38:;
			{
				return false;
			}
		}
		_match_end_1d9e319d3:;
	};
}



inline jule::Bool _2044223e9_IsU64(_2044102b6_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1d9e32c9d:;
			{
				return true;
			}
		}
		else {
			_case_begin_1d9e32462:;
			{
				return false;
			}
		}
		_match_end_1d9e320dd:;
	};
}



inline jule::Bool _20442483b_IsBool(_2044102b6_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1d9e33870:;
			{
				return true;
			}
		}
		else {
			_case_begin_1d9e33034:;
			{
				return false;
			}
		}
		_match_end_1d9e32bd2:;
	};
}



inline jule::Bool _2044610e7_IsStr(_2044102b6_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1d9e34442:;
			{
				return true;
			}
		}
		else {
			_case_begin_1d9e33b06:;
			{
				return false;
			}
		}
		_match_end_1d9e337a4:;
	};
}



inline jule::Bool _204477240_IsF64(_2044102b6_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1d9e35014:;
			{
				return true;
			}
		}
		else {
			_case_begin_1d9e346c8:;
			{
				return false;
			}
		}
		_match_end_1d9e34376:;
	};
}



inline jule::Bool _204ebe7d1_IsNil(_2044102b6_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _204ebe913_AreSameTypes(_2044102b6_Const* _self_, _2044102b6_Const _21327_x) {
	{
		
		if ((_20447788e_IsI64(&(*_self_)) == _20447788e_IsI64(&_21327_x))) {
			_case_begin_1d9e364aa:;
			{
				return true;
			}
		}
		else if ((_2044223e9_IsU64(&(*_self_)) == _2044223e9_IsU64(&_21327_x))) {
			_case_begin_1d9e35c18:;
			{
				return true;
			}
		}
		else if ((_204477240_IsF64(&(*_self_)) == _204477240_IsF64(&_21327_x))) {
			_case_begin_1d9e35c90:;
			{
				return true;
			}
		}
		else if ((_20442483b_IsBool(&(*_self_)) == _20442483b_IsBool(&_21327_x))) {
			_case_begin_1d9e35d17:;
			{
				return true;
			}
		}
		else if ((_2044610e7_IsStr(&(*_self_)) == _2044610e7_IsStr(&_21327_x))) {
			_case_begin_1d9e35d8e:;
			{
				return true;
			}
		}
		else if ((_204ebe7d1_IsNil(&(*_self_)) == _204ebe7d1_IsNil(&_21327_x))) {
			_case_begin_1d9e36136:;
			{
				return true;
			}
		}
		else {
			_case_begin_1d9e35ba2:;
			{
				return false;
			}
		}
		_match_end_1d9e35ac5:;
	};
}



inline jule::Bool _204ebea45_And(_2044102b6_Const* _self_, _2044102b6_Const _23818_x) {
	{
		
		if ((_20442483b_IsBool(&(*_self_)) && _20442483b_IsBool(&_23818_x))) {
			_case_begin_1d9e39c50:;
			{
				return (_204458e9c_ReadBool(&(*_self_)) && _204458e9c_ReadBool(&_23818_x));
			}
		}
		else {
			_case_begin_1d9e394e1:;
			{
				return false;
			}
		}
		_match_end_1d9e38ed5:;
	};
}



inline jule::Bool _204ebeb77_Or(_2044102b6_Const* _self_, _2044102b6_Const _24917_x) {
	{
		
		if ((_20442483b_IsBool(&(*_self_)) && _20442483b_IsBool(&_24917_x))) {
			_case_begin_1d9e3b2b2:;
			{
				return (_204458e9c_ReadBool(&(*_self_)) || _204458e9c_ReadBool(&_24917_x));
			}
		}
		else {
			_case_begin_1d9e3a16d:;
			{
				return false;
			}
		}
		_match_end_1d9e3a091:;
	};
}



inline jule::Bool _204ebeca9_Eq(_2044102b6_Const* _self_, _2044102b6_Const _26017_x) {
	{
		
		if (_204ebe7d1_IsNil(&(*_self_))) {
			_case_begin_1d9e3c857:;
			{
				return _204ebe7d1_IsNil(&_26017_x);
			}
		}
		else if (_20442483b_IsBool(&(*_self_))) {
			_case_begin_1d9e3c0b5:;
			{
				return (_20442483b_IsBool(&_26017_x) && (_204458e9c_ReadBool(&(*_self_)) == _204458e9c_ReadBool(&_26017_x)));
			}
		}
		else if (_2044610e7_IsStr(&(*_self_))) {
			_case_begin_1d9e3c13c:;
			{
				return (_2044610e7_IsStr(&_26017_x) && (_204461834_ReadStr(&(*_self_)) == _204461834_ReadStr(&_26017_x)));
			}
		}
		else if (_20447788e_IsI64(&(*_self_))) {
			_case_begin_1d9e3c1b4:;
			{
				return (_204457561_ReadI64(&(*_self_)) == _204463270_AsI64(&_26017_x));
			}
		}
		else if (_2044223e9_IsU64(&(*_self_))) {
			_case_begin_1d9e3c23b:;
			{
				return (_20445874e_ReadU64(&(*_self_)) == _2044573b8_AsU64(&_26017_x));
			}
		}
		else if (_204477240_IsF64(&(*_self_))) {
			_case_begin_1d9e3c4d3:;
			{
				return (_2044623b2_ReadF64(&(*_self_)) == _20446423d_AsF64(&_26017_x));
			}
		}
		else {
			_case_begin_1d9e3b6ad:;
			{
				return false;
			}
		}
		_match_end_1d9e3b5d1:;
	};
}



inline jule::Bool _204ebeddb_Lt(_2044102b6_Const* _self_, _2044102b6_Const _28717_x) {
	{
		
		if (_2044610e7_IsStr(&(*_self_))) {
			_case_begin_1d9e41d56:;
			{
				return (_2044610e7_IsStr(&_28717_x) && (_204461834_ReadStr(&(*_self_)) < _204461834_ReadStr(&_28717_x)));
			}
		}
		else if (_20447788e_IsI64(&(*_self_))) {
			_case_begin_1d9e416b3:;
			{
				return (_204457561_ReadI64(&(*_self_)) < _204463270_AsI64(&_28717_x));
			}
		}
		else if (_2044223e9_IsU64(&(*_self_))) {
			_case_begin_1d9e41729:;
			{
				return (_20445874e_ReadU64(&(*_self_)) < _2044573b8_AsU64(&_28717_x));
			}
		}
		else if (_204477240_IsF64(&(*_self_))) {
			_case_begin_1d9e41790:;
			{
				return (_2044623b2_ReadF64(&(*_self_)) < _20446423d_AsF64(&_28717_x));
			}
		}
		else {
			_case_begin_1d9e3cba9:;
			{
				return false;
			}
		}
		_match_end_1d9e3caee:;
	};
}



inline jule::Bool _204ec001d_LtEq(_2044102b6_Const* _self_, _2044102b6_Const _31019_x) {
	{
		
		if (_2044610e7_IsStr(&(*_self_))) {
			_case_begin_1d9e45189:;
			{
				return (_2044610e7_IsStr(&_31019_x) && (_204461834_ReadStr(&(*_self_)) <= _204461834_ReadStr(&_31019_x)));
			}
		}
		else if (_20447788e_IsI64(&(*_self_))) {
			_case_begin_1d9e449e6:;
			{
				return (_204457561_ReadI64(&(*_self_)) <= _204463270_AsI64(&_31019_x));
			}
		}
		else if (_2044223e9_IsU64(&(*_self_))) {
			_case_begin_1d9e44a5c:;
			{
				return (_20445874e_ReadU64(&(*_self_)) <= _2044573b8_AsU64(&_31019_x));
			}
		}
		else if (_204477240_IsF64(&(*_self_))) {
			_case_begin_1d9e44ac3:;
			{
				return (_2044623b2_ReadF64(&(*_self_)) <= _20446423d_AsF64(&_31019_x));
			}
		}
		else {
			_case_begin_1d9e420a9:;
			{
				return false;
			}
		}
		_match_end_1d9e41ecc:;
	};
}



inline jule::Bool _204ec0150_Gt(_2044102b6_Const* _self_, _2044102b6_Const _33317_x) {
	{
		
		if (_2044610e7_IsStr(&(*_self_))) {
			_case_begin_1d9e484bc:;
			{
				return (_2044610e7_IsStr(&_33317_x) && (_204461834_ReadStr(&(*_self_)) > _204461834_ReadStr(&_33317_x)));
			}
		}
		else if (_20447788e_IsI64(&(*_self_))) {
			_case_begin_1d9e47d29:;
			{
				return (_204457561_ReadI64(&(*_self_)) > _204463270_AsI64(&_33317_x));
			}
		}
		else if (_2044223e9_IsU64(&(*_self_))) {
			_case_begin_1d9e47d90:;
			{
				return (_20445874e_ReadU64(&(*_self_)) > _2044573b8_AsU64(&_33317_x));
			}
		}
		else if (_204477240_IsF64(&(*_self_))) {
			_case_begin_1d9e47e06:;
			{
				return (_2044623b2_ReadF64(&(*_self_)) > _20446423d_AsF64(&_33317_x));
			}
		}
		else {
			_case_begin_1d9e453dc:;
			{
				return false;
			}
		}
		_match_end_1d9e45310:;
	};
}



inline jule::Bool _204ec0282_GtEq(_2044102b6_Const* _self_, _2044102b6_Const _35619_x) {
	{
		
		if (_2044610e7_IsStr(&(*_self_))) {
			_case_begin_1d9e4b800:;
			{
				return (_2044610e7_IsStr(&_35619_x) && (_204461834_ReadStr(&(*_self_)) >= _204461834_ReadStr(&_35619_x)));
			}
		}
		else if (_20447788e_IsI64(&(*_self_))) {
			_case_begin_1d9e4b15c:;
			{
				return (_204457561_ReadI64(&(*_self_)) >= _204463270_AsI64(&_35619_x));
			}
		}
		else if (_2044223e9_IsU64(&(*_self_))) {
			_case_begin_1d9e4b1c3:;
			{
				return (_20445874e_ReadU64(&(*_self_)) >= _2044573b8_AsU64(&_35619_x));
			}
		}
		else if (_204477240_IsF64(&(*_self_))) {
			_case_begin_1d9e4b239:;
			{
				return (_2044623b2_ReadF64(&(*_self_)) >= _20446423d_AsF64(&_35619_x));
			}
		}
		else {
			_case_begin_1d9e48720:;
			{
				return false;
			}
		}
		_match_end_1d9e48643:;
	};
}



inline jule::Bool _204ec03b4_Add(_2044102b6_Const* _self_, _2044102b6_Const _37722_x) {
	{
		
		if (_2044610e7_IsStr(&(*_self_))) {
			_case_begin_1d9e4eb33:;
			{
				if ((!(_2044610e7_IsStr(&_37722_x)))) {
					return false;
				};
				_20447b695_SetStr(&(*_self_), (_204461834_ReadStr(&(*_self_)) + _204461834_ReadStr(&_37722_x)));
			}
		}
		else if (_204477240_IsF64(&(*_self_))) {
			_case_begin_1d9e4e490:;
			{
				_20447c223_SetF64(&(*_self_), static_cast<jule::F64>((_2044623b2_ReadF64(&(*_self_)) + _20446423d_AsF64(&_37722_x))));
			}
		}
		else if (_20447788e_IsI64(&(*_self_))) {
			_case_begin_1d9e4e506:;
			{
				if (_204477240_IsF64(&_37722_x)) {
					_20447c223_SetF64(&(*_self_), static_cast<jule::F64>((_20446423d_AsF64(&(*_self_)) + _2044623b2_ReadF64(&_37722_x))));
				} else {
					_2044650eb_SetI64(&(*_self_), static_cast<jule::I64>((_204457561_ReadI64(&(*_self_)) + _204463270_AsI64(&_37722_x))));
				};
			}
		}
		else if (_2044223e9_IsU64(&(*_self_))) {
			_case_begin_1d9e4e56c:;
			{
				if (_204477240_IsF64(&_37722_x)) {
					_20447c223_SetF64(&(*_self_), static_cast<jule::F64>((_20446423d_AsF64(&(*_self_)) + _2044623b2_ReadF64(&_37722_x))));
				} else {
					_204477c13_SetU64(&(*_self_), static_cast<jule::U64>((_20445874e_ReadU64(&(*_self_)) + _2044573b8_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1d9e4ba53:;
			{
				return false;
			}
		}
		_match_end_1d9e4b976:;
	};
	return true;
}



inline jule::Bool _204ec04e6_Sub(_2044102b6_Const* _self_, _2044102b6_Const _40622_x) {
	{
		
		if (_204477240_IsF64(&(*_self_))) {
			_case_begin_1d9e5592a:;
			{
				_20447c223_SetF64(&(*_self_), static_cast<jule::F64>((_2044623b2_ReadF64(&(*_self_)) - _20446423d_AsF64(&_40622_x))));
			}
		}
		else if (_20447788e_IsI64(&(*_self_))) {
			_case_begin_1d9e551bb:;
			{
				if (_204477240_IsF64(&_40622_x)) {
					_20447c223_SetF64(&(*_self_), static_cast<jule::F64>((_20446423d_AsF64(&(*_self_)) - _2044623b2_ReadF64(&_40622_x))));
				} else {
					_2044650eb_SetI64(&(*_self_), static_cast<jule::I64>((_204457561_ReadI64(&(*_self_)) - _204463270_AsI64(&_40622_x))));
				};
			}
		}
		else if (_2044223e9_IsU64(&(*_self_))) {
			_case_begin_1d9e55232:;
			{
				if (_204477240_IsF64(&_40622_x)) {
					_20447c223_SetF64(&(*_self_), static_cast<jule::F64>((_20446423d_AsF64(&(*_self_)) - _2044623b2_ReadF64(&_40622_x))));
				} else {
					_204477c13_SetU64(&(*_self_), static_cast<jule::U64>((_20445874e_ReadU64(&(*_self_)) - _2044573b8_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1d9e55155:;
			{
				return false;
			}
		}
		_match_end_1d9e5475e:;
	};
	return true;
}



inline jule::Bool _204ec0628_Mul(_2044102b6_Const* _self_, _2044102b6_Const _43022_x) {
	{
		
		if (_204477240_IsF64(&(*_self_))) {
			_case_begin_1d9e5a5ab:;
			{
				_20447c223_SetF64(&(*_self_), static_cast<jule::F64>((_2044623b2_ReadF64(&(*_self_)) * _20446423d_AsF64(&_43022_x))));
			}
		}
		else if (_20447788e_IsI64(&(*_self_))) {
			_case_begin_1d9e59d4c:;
			{
				if (_204477240_IsF64(&_43022_x)) {
					_20447c223_SetF64(&(*_self_), static_cast<jule::F64>((_20446423d_AsF64(&(*_self_)) * _2044623b2_ReadF64(&_43022_x))));
				} else {
					_2044650eb_SetI64(&(*_self_), static_cast<jule::I64>((_204457561_ReadI64(&(*_self_)) * _204463270_AsI64(&_43022_x))));
				};
			}
		}
		else if (_2044223e9_IsU64(&(*_self_))) {
			_case_begin_1d9e59db3:;
			{
				if (_204477240_IsF64(&_43022_x)) {
					_20447c223_SetF64(&(*_self_), static_cast<jule::F64>((_20446423d_AsF64(&(*_self_)) * _2044623b2_ReadF64(&_43022_x))));
				} else {
					_204477c13_SetU64(&(*_self_), static_cast<jule::U64>((_20445874e_ReadU64(&(*_self_)) * _2044573b8_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1d9e59cd6:;
			{
				return false;
			}
		}
		_match_end_1d9e59247:;
	};
	return true;
}



inline jule::Bool _204ec075a_Div(_2044102b6_Const* _self_, _2044102b6_Const _45822_x) {
	{
		
		if (_204477240_IsF64(&(*_self_))) {
			_case_begin_1d9e6023c:;
			{
				jule::F64 _46117_l = _20446423d_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;
				};
				_20447c223_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_2044623b2_ReadF64(&(*_self_)),_46117_l)));
			}
		}
		else if (_20447788e_IsI64(&(*_self_))) {
			_case_begin_1d9e5e9cd:;
			{
				jule::F64 _46717_l = _20446423d_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;
				};
				_20447c223_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_20446423d_AsF64(&(*_self_)),_46717_l)));
			}
		}
		else if (_2044223e9_IsU64(&(*_self_))) {
			_case_begin_1d9e5ea44:;
			{
				jule::F64 _47317_l = _20446423d_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;
				};
				_20447c223_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_20446423d_AsF64(&(*_self_)),_47317_l)));
			}
		}
		else {
			_case_begin_1d9e5e967:;
			{
				return false;
			}
		}
		_match_end_1d9e5ddc8:;
	};
	return true;
}



inline jule::Bool _204ec088c_Mod(_2044102b6_Const* _self_, _2044102b6_Const _48722_x) {
	{
		
		if (_20447788e_IsI64(&(*_self_))) {
			_case_begin_1d9e64dbd:;
			{
				jule::I64 _49017_l = _204463270_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;
				};
				_2044650eb_SetI64(&(*_self_), static_cast<jule::I64>(jule::mod(_204457561_ReadI64(&(*_self_)),_49017_l)));
			}
		}
		else if (_2044223e9_IsU64(&(*_self_))) {
			_case_begin_1d9e64670:;
			{
				jule::U64 _49617_l = _2044573b8_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;
				};
				_204477c13_SetU64(&(*_self_), static_cast<jule::U64>(jule::mod(_20445874e_ReadU64(&(*_self_)),_49617_l)));
			}
		}
		else {
			_case_begin_1d9e64609:;
			{
				return false;
			}
		}
		_match_end_1d9e6452c:;
	};
	return true;
}



inline jule::Bool _204ec09be_BitwiseAnd(_2044102b6_Const* _self_, _2044102b6_Const _50929_x) {
	{
		
		if (_20447788e_IsI64(&(*_self_))) {
			_case_begin_1d9e684dc:;
			{
				_2044650eb_SetI64(&(*_self_), static_cast<jule::I64>((_204457561_ReadI64(&(*_self_)) & _204463270_AsI64(&_50929_x))));
			}
		}
		else if (_2044223e9_IsU64(&(*_self_))) {
			_case_begin_1d9e67c8e:;
			{
				_204477c13_SetU64(&(*_self_), static_cast<jule::U64>((_20445874e_ReadU64(&(*_self_)) & _2044573b8_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1d9e67c28:;
			{
				return false;
			}
		}
		_match_end_1d9e67b4b:;
	};
	return true;
}



inline jule::Bool _204ec0b01_BitwiseOr(_2044102b6_Const* _self_, _2044102b6_Const _52328_x) {
	{
		
		if (_20447788e_IsI64(&(*_self_))) {
			_case_begin_1d9e6a885:;
			{
				_2044650eb_SetI64(&(*_self_), static_cast<jule::I64>((_204457561_ReadI64(&(*_self_)) | _204463270_AsI64(&_52328_x))));
			}
		}
		else if (_2044223e9_IsU64(&(*_self_))) {
			_case_begin_1d9e6a137:;
			{
				_204477c13_SetU64(&(*_self_), static_cast<jule::U64>((_20445874e_ReadU64(&(*_self_)) | _2044573b8_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1d9e6a0c1:;
			{
				return false;
			}
		}
		_match_end_1d9e69ee4:;
	};
	return true;
}



inline jule::Bool _204ec0c33_Xor(_2044102b6_Const* _self_, _2044102b6_Const _53722_x) {
	{
		
		if (_20447788e_IsI64(&(*_self_))) {
			_case_begin_1d9e6cc2d:;
			{
				_2044650eb_SetI64(&(*_self_), static_cast<jule::I64>((_204457561_ReadI64(&(*_self_)) ^ _204463270_AsI64(&_53722_x))));
			}
		}
		else if (_2044223e9_IsU64(&(*_self_))) {
			_case_begin_1d9e6c4d0:;
			{
				_204477c13_SetU64(&(*_self_), static_cast<jule::U64>((_20445874e_ReadU64(&(*_self_)) ^ _2044573b8_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1d9e6c469:;
			{
				return false;
			}
		}
		_match_end_1d9e6c38c:;
	};
	return true;
}



inline jule::Bool _204ec0d65_Lshift(_2044102b6_Const* _self_, _2044102b6_Const _55125_x) {
	{
		
		if (_20447788e_IsI64(&(*_self_))) {
			_case_begin_1d9e700c6:;
			{
				jule::I64 _55417_l = _204463270_AsI64(&(*_self_));;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _2044573b8_AsU64(&_55125_x);;
					_2044650eb_SetI64(&(*_self_), static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_204ec10c9_lshiftUnsig((*_self_),_55125_x);
				};
			}
		}
		else if (_2044223e9_IsU64(&(*_self_))) {
			_case_begin_1d9e6e878:;
			{
				_204ec10c9_lshiftUnsig((*_self_),_55125_x);
			}
		}
		else {
			_case_begin_1d9e6e812:;
			{
				return false;
			}
		}
		_match_end_1d9e6e735:;
	};
	return true;
}



inline jule::Bool _204ec0e97_Rshift(_2044102b6_Const* _self_, _2044102b6_Const _57125_x) {
	{
		
		if (_20447788e_IsI64(&(*_self_))) {
			_case_begin_1d9e72cdd:;
			{
				jule::I64 _57417_l = _204463270_AsI64(&(*_self_));;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _2044573b8_AsU64(&_57125_x);;
					_2044650eb_SetI64(&(*_self_), static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_204ec120b_rshiftUnsig((*_self_),_57125_x);
				};
			}
		}
		else if (_2044223e9_IsU64(&(*_self_))) {
			_case_begin_1d9e72590:;
			{
				_204ec120b_rshiftUnsig((*_self_),_57125_x);
			}
		}
		else {
			_case_begin_1d9e72529:;
			{
				return false;
			}
		}
		_match_end_1d9e7244c:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _2044102b6_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2043393bb_FieldIns> _20420e3d4_instance(jule::Ptr<_204324285_Field> _self_) {
	return jule::new_ptr<_2043393bb_FieldIns>(_2043393bb_FieldIns{._field_Decl=_self_, });
}







std::ostream &operator<<(std::ostream &_Stream, _204324285_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204331c54_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20435cc5d_StructIns> _20430d48e_instance(jule::Ptr<_20433367e_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	jule::Ptr<_20435cc5d_StructIns> _9917_ins = jule::new_ptr<_20435cc5d_StructIns>(_20435cc5d_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_2043393bb_FieldIns>>::alloc(0LL,_self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_205031cb6_Var>>::alloc(0LL,_self_.get()._field_Statics.len()), ._field_Refers=static__204ec8114_new(), });;
	{
		auto &expr = _self_.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_1dad118e5:;
		if (it != expr.end()) {
			jule::Ptr<_205031cb6_Var> _10621_s = *it;
			{
				_9917_ins.get()._field_Statics = jule::alloc_for_append(_9917_ins.get()._field_Statics,1);_9917_ins.get()._field_Statics.__push(jule::new_ptr<_205031cb6_Var>((*(_10621_s))));;
			}
			_iter_next_1dad118e5:;
			++it;
			goto _iter_begin_1dad118e5;
		}
		_iter_end_1dad118e5:;
	};
	{
		auto &expr = _self_.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1dad12d47:;
		if (it != expr.end()) {
			jule::Ptr<_204324285_Field> _11021_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_20420e3d4_instance(_11021_f));;
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _2050abcdb_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1dad12d47:;
			++it;
			goto _iter_begin_1dad12d47;
		}
		_iter_end_1dad12d47:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_204ec707a_Fn>>::alloc(0LL,_self_.get()._field_Methods.len());
		{
			auto &expr = _self_.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1dad14d6b:;
			if (it != expr.end()) {
				jule::Ptr<_204ec707a_Fn> _12125_f = *it;
				{
					jule::Ptr<_204ec707a_Fn> _12225_fins = jule::new_ptr<_204ec707a_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_12225_fins);;
				}
				_iter_next_1dad14d6b:;
				++it;
				goto _iter_begin_1dad14d6b;
			}
			_iter_end_1dad14d6b:;
		};
	};
	return _9917_ins;
}



inline jule::Ptr<_20435cc5d_StructIns> _2043193e0_appendInstance(_20433367e_Struct* _self_, jule::Ptr<_20435cc5d_StructIns>& _13338_ins) {
	if ((((*_self_)._field_Generics.len() == 0LL) && ((*_self_)._field_Instances.len() == 1LL))) {
		return (*_self_)._field_Instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1dad1807d:;
		if (it != expr.end()) {
			jule::Ptr<_20435cc5d_StructIns> _13921_ains = *it;
			{
				if (_204333937_Same(_13921_ains.ptr(), _13338_ins)) {
					return _13921_ains;
				};
			}
			_iter_next_1dad1807d:;
			++it;
			goto _iter_begin_1dad1807d;
		}
		_iter_end_1dad1807d:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_13338_ins);;
	return nullptr;
}



inline jule::Ptr<_204ec707a_Fn> _20431d1d5_FindMethod(_20433367e_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1dad19843:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;
				};
			}
			_iter_next_1dad19843:;
			++it;
			goto _iter_begin_1dad19843;
		}
		_iter_end_1dad19843:;
	};
	return nullptr;
}



inline jule::Ptr<_205031cb6_Var> _20431de3e_FindStatic(_20433367e_Struct* _self_, jule::Str _16229_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_1dad1ab85:;
		if (it != expr.end()) {
			jule::Ptr<_205031cb6_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;
				};
			}
			_iter_next_1dad1ab85:;
			++it;
			goto _iter_begin_1dad1ab85;
		}
		_iter_end_1dad1ab85:;
	};
	return nullptr;
}



inline jule::Ptr<_204324285_Field> _2043210b7_FindField(_20433367e_Struct* _self_, jule::Str _17328_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1dad1b03c:;
		if (it != expr.end()) {
			jule::Ptr<_204324285_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;
				};
			}
			_iter_next_1dad1b03c:;
			++it;
			goto _iter_begin_1dad1b03c;
		}
		_iter_end_1dad1b03c:;
	};
	return nullptr;
}



inline jule::Bool _2043220c9_IsImplements(_20433367e_Struct* _self_, jule::Ptr<_204ece8e0_Trait> _18327_t) {
	{
		auto &expr = (*_self_)._field_Implements;
		auto it = expr.begin();
		_iter_begin_1dad1c04e:;
		if (it != expr.end()) {
			jule::Ptr<_204ece8e0_Trait> &_18416_it = *it;
			{
				if ((_18327_t == _18416_it)) {
					return true;
				};
			}
			_iter_next_1dad1c04e:;
			++it;
			goto _iter_begin_1dad1c04e;
		}
		_iter_end_1dad1c04e:;
	};
	return false;
}



inline jule::Bool _204321518_IsDerives(_20433367e_Struct* _self_, jule::Str _19324_ident) {
	{
		auto &expr = (*_self_)._field_Directives;
		auto it = expr.begin();
		_iter_begin_1dad1d0d8:;
		if (it != expr.end()) {
			jule::Ptr<_20430829c_Directive> &_19416_d = *it;
			{
				if ((_19416_d.get()._field_Tag.get()._field_Kind == jule::Str("derive", 6))) {
					if (((_19416_d.get()._field_Args.len() == 1LL) && (_19416_d.get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;
					};
				};
			}
			_iter_next_1dad1d0d8:;
			++it;
			goto _iter_begin_1dad1d0d8;
		}
		_iter_end_1dad1d0d8:;
	};
	return false;
}



inline jule::Bool _204323916_IsUses(_20433367e_Struct* _self_, jule::Ptr<_20433367e_Struct> _20521_s) {
	{
		auto &expr = (*_self_)._field_Uses;
		auto it = expr.begin();
		_iter_begin_1dad20abe:;
		if (it != expr.end()) {
			jule::Ptr<_20433367e_Struct> &_20616_u = *it;
			{
				while ((_20521_s == _20616_u)) {
					{
						return true;
					}
				_iter_next_1dad213b6:;
				}
				_iter_end_1dad213b6:;;
			}
			_iter_next_1dad20abe:;
			++it;
			goto _iter_begin_1dad20abe;
		}
		_iter_end_1dad20abe:;
	};
	return false;
}



inline jule::Bool _204322c01_HasRefAccessible(_20433367e_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1dad218a0:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> &_21616_m = *it;
			{
				if (((_21616_m.get()._field_Params.len() > 0LL) && _204396e2e_IsRef(_21616_m.get()._field_Params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_1dad218a0:;
			++it;
			goto _iter_begin_1dad218a0;
		}
		_iter_end_1dad218a0:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _20433367e_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2043393bb_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec133d_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec152a_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec1717_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec1904_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec1ae1_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec1ccd_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec1eba_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec21a7_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec2394_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec2581_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec276d_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec295a_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec2b47_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec2d34_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec3021_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec343e_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec362b_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec3818_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec3a05_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec3be2_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec3dce_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec40bb_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec42a8_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec4495_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec4682_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec486e_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec4a5b_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec4c48_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec4e35_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec5122_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec530e_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec320d_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec596e_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec5b5b_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec5d48_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec6035_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec6222_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec640e_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec65eb_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec67d8_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec6ba1_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_204ec7267_ParamIns> _2043d4bb4_instance(jule::Ptr<_204ec6d8d_Param> _self_) {
	return jule::new_ptr<_204ec7267_ParamIns>(_204ec7267_ParamIns{._field_Decl=_self_, });
}



inline jule::Bool _204395b64_IsSelf(_204ec6d8d_Param* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _204396e2e_IsRef(_204ec6d8d_Param* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _204ec6d8d_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2043a5a53_IsVoid(_204ec707a_Fn* _self_) {
	return ((*_self_)._field_Result == nullptr);
}



inline jule::Bool _2043a626d_IsMethod(_204ec707a_Fn* _self_) {
	return ((*_self_)._field_Owner != nullptr);
}



inline jule::Bool _2043a6988_IsEntryPoint(_204ec707a_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("main", 4));
}



inline jule::Bool _2043a7813_IsInit(_204ec707a_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("init", 4));
}



inline jule::Bool _20439525c_IsAnon(_204ec707a_Fn* _self_) {
	return _202b8c1b5_IsAnonIdent((*_self_)._field_Ident);
}



inline jule::Bool _20439a2ea_AnyVar(_204ec707a_Fn* _self_) {
	return (((*_self_)._field_Result != nullptr) && ((*_self_)._field_Result.get()._field_Idents.len() > 0LL));
}



inline jule::Ptr<_204ec7454_FnIns> _20439bdce_instanceForce(jule::Ptr<_204ec707a_Fn> _self_) {
	jule::Ptr<_204ec7454_FnIns> _10017_ins = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_204edc645_Scope>(), ._field_Refers=static__204ec8114_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_204ec7267_ParamIns>>::alloc(0LL,_self_.get()._field_Params.len());
	{
		auto &expr = _self_.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1dad36c7d:;
		if (it != expr.end()) {
			jule::Ptr<_204ec6d8d_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_2043d4bb4_instance(_10721_p));;
			}
			_iter_next_1dad36c7d:;
			++it;
			goto _iter_begin_1dad36c7d;
		}
		_iter_end_1dad36c7d:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;
}



inline jule::Ptr<_204ec7454_FnIns> _20439cb9e_instance(jule::Ptr<_204ec707a_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	return _20439bdce_instanceForce(_self_);
}



inline jule::Ptr<_204ec7454_FnIns> _2043949cb_appendInstance(_204ec707a_Fn* _self_, jule::Ptr<_204ec7454_FnIns>& _12838_ins) {
	if (((*_self_)._field_Generics.len() == 0LL)) {
		if (((*_self_)._field_Instances.len() == 1LL)) {
			return (*_self_)._field_Instances[0LL];
		};
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	if (((*_self_)._field_Instances.len() == 0LL)) {
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1dad3c107:;
		if (it != expr.end()) {
			jule::Ptr<_204ec7454_FnIns> _14421_ains = *it;
			{
				if (_204ec78a5_Same(_14421_ains.ptr(), _12838_ins)) {
					return _14421_ains;
				};
			}
			_iter_next_1dad3c107:;
			++it;
			goto _iter_begin_1dad3c107;
		}
		_iter_end_1dad3c107:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec707a_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _204394448_Str(_204ec7267_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_Decl.get()._field_Reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_204395b64_IsSelf((*_self_)._field_Decl.ptr())) {
		if (_204396e2e_IsRef((*_self_)._field_Decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;
	};
	if ((*_self_)._field_Decl.get()._field_Variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_Kind != nullptr)) {
		_16617_s+=_2050aacda_Str((*_self_)._field_Kind.ptr());
	};
	return _16617_s;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec7267_ParamIns _Src) {
	_Stream << _204394448_Str(&_Src);
	return _Stream;
}



inline jule::Str _204396527_Str(_204ec7454_FnIns* _self_) {
	;
	return _204ec79d7_GetKindStr(&(*_self_), false);
}



inline jule::Bool _204394c84_Equals(jule::Ptr<_204ec7454_FnIns> _self_, jule::Ptr<_2050aa8de_TypeKind> _21722_other) {
	jule::Ptr<_204ec7454_FnIns> _21813_f = _2050adbde_Fn(_21722_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;
	};
	return _2043a71a3_EqualsFn(_self_, _21813_f);
}



inline jule::Bool _2043a71a3_EqualsFn(jule::Ptr<_204ec7454_FnIns> _self_, jule::Ptr<_204ec7454_FnIns>& _22825_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != _22825_f.get()._field_Decl.get()._field_Exceptional)) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != _22825_f.get()._field_Decl.get()._field_Unsafety)) {
		return false;
	};
	if ((_2043a5a53_IsVoid(_self_.get()._field_Decl.ptr()) != _2043a5a53_IsVoid(_22825_f.get()._field_Decl.ptr()))) {
		return false;
	};
	jule::Fn<jule::Bool(jule::Ptr<_204ec7267_ParamIns>,jule::Ptr<_204ec7267_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_204ec7267_ParamIns>,jule::Ptr<_204ec7267_ParamIns>)>([=](jule::Ptr<_204ec7267_ParamIns> _23830_p1, jule::Ptr<_204ec7267_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;
		};
		if (_204395b64_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_204395b64_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;
			};
			if ((_204396e2e_IsRef(_23830_p1.get()._field_Decl.ptr()) != _204396e2e_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;
		};
		return _2050ab0e8_Equals(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);
	});;
	if ((_22825_f.get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i],_22825_f.get()._field_Params[_27017_i])))) {
				return false;
			};
		}
	_iter_next_1dad4b04a:;
	}
	_iter_end_1dad4b04a:;;
	if ((!(_2043a5a53_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_2050ab0e8_Equals(_self_.get()._field_Result, _22825_f.get()._field_Result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Bool _2043994d6_equalsTrait(jule::Ptr<_204ec7454_FnIns> _self_, jule::Ptr<_204ec7454_FnIns>& _28728_other) {
	if ((!(_2043a71a3_EqualsFn(_self_, _28728_other)))) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != _28728_other.get()._field_Decl.get()._field_Generics.len())) {
		return false;
	};
	return true;
}



inline jule::Slice<jule::Ptr<_2050aa8de_TypeKind>> _2043c5237_Types(_204ec7454_FnIns* _self_) {
	{
		
		if (((*_self_)._field_Result == nullptr)) {
			_case_begin_1dad50291:;
			{
				return nullptr;
			}
		}
		else if ((_2050ae690_Tup((*_self_)._field_Result.ptr()) == nullptr)) {
			_case_begin_1dad4eaa9:;
			{
				return jule::Slice<jule::Ptr<_2050aa8de_TypeKind>>::make({(*_self_)._field_Result});
			}
		}
		else {
			_case_begin_1dad4ea43:;
			{
				return _2050ae690_Tup((*_self_)._field_Result.ptr()).get()._field_Types;
			}
		}
		_match_end_1dad4e966:;
	};
}



inline jule::Bool _204ec7641_IsBuiltin(_204ec7454_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _204ec7773_IsAnon(_204ec7454_FnIns* _self_) {
	return ((*_self_)._field_Anon || (((*_self_)._field_Decl != nullptr) && _20439525c_IsAnon((*_self_)._field_Decl.ptr())));
}



inline jule::Bool _204ec78a5_Same(_204ec7454_FnIns* _self_, jule::Ptr<_204ec7454_FnIns> _32419_f) {
	if ((((*_self_)._field_Decl != _32419_f.get()._field_Decl) || (_32419_f.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1dad5387c:;
		if (it != expr.end()) {
			jule::I64 _32913_i = it - expr.begin();
			jule::Ptr<_2050a91b2_InsGeneric> &_32916_g = *it;
			{
				if ((!(_2050ab0e8_Equals(_32916_g.get()._field_Kind, _32419_f.get()._field_Generics[_32913_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_1dad5387c:;
			++it;
			_32913_i++;
			goto _iter_begin_1dad5387c;
		}
		_iter_end_1dad5387c:;
	};
	return true;
}



inline jule::Str _204ec79d7_GetKindStr(_204ec7454_FnIns* _self_, jule::Bool _34025_ident) {
	jule::Str _34117_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Unsafety) {
		_34117_s+=jule::Str("unsafe ", 7);
	};
	_34117_s+=jule::Str("fn", 2);
	if ((_34025_ident && ((*_self_)._field_Decl != nullptr))) {
		_34117_s+=(jule::Str(" ", 1) + (*_self_)._field_Decl.get()._field_Ident);
	};
	_34117_s+=jule::Str("(", 1);
	jule::I64 _35413_n = (*_self_)._field_Params.len();;
	if ((_35413_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_Params;
			auto it = expr.begin();
			_iter_begin_1dad57b39:;
			if (it != expr.end()) {
				jule::Ptr<_204ec7267_ParamIns> &_35620_p = *it;
				{
					_34117_s+=_204394448_Str(_35620_p.ptr());
					_34117_s+=jule::Str(",", 1);
				}
				_iter_next_1dad57b39:;
				++it;
				goto _iter_begin_1dad57b39;
			}
			_iter_end_1dad57b39:;
		};
		(_34117_s).mut_slice(0LL,(_34117_s.len() - 1LL));;
	};
	_34117_s+=jule::Str(")", 1);
	if ((*_self_)._field_Decl.get()._field_Exceptional) {
		_34117_s+=jule::Str("!", 1);
	};
	if ((!(_2043a5a53_IsVoid((*_self_)._field_Decl.ptr())))) {
		_34117_s+=jule::Str(":", 1);
		_34117_s+=_2050aacda_Str((*_self_)._field_Result.ptr());
	};
	return _34117_s;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec7454_FnIns _Src) {
	_Stream << _204396527_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_204ec7e27_ReferenceStack> static__204ec8114_new(void) {
	return jule::new_ptr<_204ec7e27_ReferenceStack>(_204ec7e27_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL,10LL)});
}



inline jule::I64 _204ec8246_Len(_204ec7e27_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _204ec8378_At(_204ec7e27_ReferenceStack* _self_, jule::I64 _6821_i) {
	return jule::Any((*_self_)._field_buffer[_6821_i]);
}



inline void _204ec84aa_Push(_204ec7e27_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_7327_ref));;
}



inline jule::Bool _1db2a50ca_Exist(_204ec7e27_ReferenceStack* _self_, jule::Ptr<_204ec7454_FnIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1db2a641c:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1db2a641c:;
			++it;
			goto _iter_begin_1db2a641c;
		}
		_iter_end_1db2a641c:;
	};
	return false;
}

inline jule::Bool _1db2baa2a_Exist(_204ec7e27_ReferenceStack* _self_, jule::Ptr<_205031cb6_Var> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1db2bbd28:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1db2bbd28:;
			++it;
			goto _iter_begin_1db2bbd28;
		}
		_iter_end_1db2bbd28:;
	};
	return false;
}

inline jule::Bool _1db4c68c3_Exist(_204ec7e27_ReferenceStack* _self_, jule::Ptr<_20435cc5d_StructIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1db4c7c15:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1db4c7c15:;
			++it;
			goto _iter_begin_1db4c7c15;
		}
		_iter_end_1db4c7c15:;
	};
	return false;
}

inline jule::Bool _1db777a42_Exist(_204ec7e27_ReferenceStack* _self_, jule::Ptr<_204ece8e0_Trait> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1db778c52:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1db778c52:;
			++it;
			goto _iter_begin_1db778c52;
		}
		_iter_end_1db778c52:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec7e27_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec871e_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_204eca699_symbolBuilder> _204ecaa51_getRoot(jule::Ptr<_204eca699_symbolBuilder> _self_) {
	jule::Ptr<_204eca699_symbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1dad725b0:;
	}
	_iter_end_1dad725b0:;;
	return _31617_root;
}



inline void _204ecab83_pushErr(_204eca699_symbolBuilder* _self_, jule::Ptr<_202b89679_Token>& _32327_token, jule::Str _32342_fmt, jule::Slice<jule::Any> _32355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_205012648_compilerErr(_32327_token,true,_32342_fmt,jule::Any(_32355_args)));;
}



inline void _204ecacb5_pushErrText(_204eca699_symbolBuilder* _self_, jule::Ptr<_202b89679_Token>& _32731_token, jule::Str _32746_fmt, jule::Slice<jule::Any> _32759_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_205012648_compilerErr(_32731_token,false,_32746_fmt,jule::Any(_32759_args)));;
}



inline void _204ecade7_pushSuggestion(_204eca699_symbolBuilder* _self_, jule::Str _33233_fmt, jule::Slice<jule::Any> _33246_args) {
	{
		_205013acd_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33233_fmt,jule::Any(_33246_args));
	};
}



inline jule::Bool _204ecb029_checkCppUseDeclPath(_204eca699_symbolBuilder* _self_, jule::Ptr<_204358c26_UseDecl>& _33639_decl, jule::Str _33655_path) {
	jule::Bool _33668_ok = jule::Bool();
	jule::Str _33713_ext = _201847c51_Ext(_33655_path);;
	if (((!(_20284e9d2_IsValidHeaderExt(_33713_ext))) && (!(_20284ec35_IsValidCppExt(_33713_ext))))) {
		_204ecab83_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext)}));
		_33668_ok = false;
		return _33668_ok;
	};
	jule::Ptr<_20174529c_Status> _34413_info = ({
		auto except = static__2009653e1_Of(_33655_path);
		(except.ok()) ? (except.result) : ({{
			_204ecab83_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
			_33668_ok = false;
			return _33668_ok;
		} jule::Ptr<_20174529c_Status>();});
	});;
	if (_200970792_IsDir(_34413_info.ptr())) {
		_204ecab83_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
		_33668_ok = false;
		return _33668_ok;
	};
	_33668_ok = true;
	return _33668_ok;
}



inline jule::Ptr<_20500ae16_ImportInfo> _204ecb15b_buildCppHeaderImport(_204eca699_symbolBuilder* _self_, jule::Ptr<_204358c26_UseDecl>& _35644_decl) {
	jule::Str _35717_path = _35644_decl.get()._field_LinkPath;;
	if ((!(_20284e8a0_IsStdHeaderPath(_35644_decl.get()._field_LinkPath)))) {
		_35717_path=_201840276_Join(jule::Slice<jule::Str>::make({_202b9040a_Dir(_35644_decl.get()._field_Token.get()._field_File.ptr()),_35644_decl.get()._field_LinkPath}));
		jule::Bool _36121_ok = _204ecb029_checkCppUseDeclPath(&(*_self_), _35644_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;
		};
		std::tie(_35717_path,_36121_ok) = _201849769_Abs(_35717_path);
		if ((!(_36121_ok))) {
			_204ecab83_pushErr(&(*_self_), _35644_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35644_decl.get()._field_LinkPath)}));
		};
	};
	return jule::new_ptr<_20500ae16_ImportInfo>(_20500ae16_ImportInfo{._field_Token=_35644_decl.get()._field_Token, ._field_Path=_35717_path, ._field_LinkPath=_35644_decl.get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });
}



inline jule::Ptr<_20500ae16_ImportInfo> _204ecb28d_buildStdImport(_204eca699_symbolBuilder* _self_, jule::Ptr<_204358c26_UseDecl>& _38438_decl) {
	jule::Str _38517_path = _38438_decl.get()._field_LinkPath.slice(5LL);;
	_38517_path=_2027d5627_Replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38517_path=_201840276_Join(jule::Slice<jule::Str>::make({_2028954d9_PathStdlib,_38517_path}));
	jule::Bool _38820_ok;;
	std::tie(_38517_path,_38820_ok) = _201849769_Abs(_38517_path);
	if ((!(_38820_ok))) {
		_204ecab83_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_20174529c_Status> _39513_info = ({
		auto except = static__2009653e1_Of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_204ecab83_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_20174529c_Status>();});
	});;
	if ((!(_200970792_IsDir(_39513_info.ptr())))) {
		_204ecab83_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _40513_i = (_2027d0e19_FindLast(_38438_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38438_decl.get()._field_LinkPath.slice(_40513_i);;
	return jule::new_ptr<_20500ae16_ImportInfo>(_20500ae16_ImportInfo{._field_Token=_38438_decl.get()._field_Token, ._field_Path=_38517_path, ._field_LinkPath=_38438_decl.get()._field_LinkPath, ._field_Ident=_40613_ident, ._field_Alias=_38438_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=_38438_decl.get()._field_Full, ._field_Package=jule::new_ptr<_20500dd70_Package>(_20500dd70_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_20500ae16_ImportInfo> _204ecb3c0_buildIdentImport(jule::Ptr<_204eca699_symbolBuilder> _self_, jule::Ptr<_204358c26_UseDecl>& _42341_decl) {
	jule::Str _42413_modPath = _205008298_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20500740c_GetModPath(_self_.get()._field_importer);;
	if ((_42413_modPath.len() == 0LL)) {
		_204ecab83_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_204ecade7_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _43117_path = _42341_decl.get()._field_LinkPath;;
	_43117_path=_2027d5627_Replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_43117_path=_201840276_Join(jule::Slice<jule::Str>::make({_42413_modPath,_43117_path}));
	jule::Bool _43520_ok;;
	std::tie(_43117_path,_43520_ok) = _201849769_Abs(_43117_path);
	if ((!(_43520_ok))) {
		_204ecab83_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_20174529c_Status> _44213_info = ({
		auto except = static__2009653e1_Of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_204ecab83_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_20174529c_Status>();});
	});;
	if ((!(_200970792_IsDir(_44213_info.ptr())))) {
		_204ecab83_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _45213_i = (_2027d0e19_FindLast(_42341_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42341_decl.get()._field_LinkPath.slice(_45213_i);;
	return jule::new_ptr<_20500ae16_ImportInfo>(_20500ae16_ImportInfo{._field_Token=_42341_decl.get()._field_Token, ._field_Path=_43117_path, ._field_LinkPath=_42341_decl.get()._field_LinkPath, ._field_Ident=_45313_ident, ._field_Alias=_42341_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=_42341_decl.get()._field_Full, ._field_Package=jule::new_ptr<_20500dd70_Package>(_20500dd70_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_20500ae16_ImportInfo> _204ecb502_buildImport(jule::Ptr<_204eca699_symbolBuilder> _self_, jule::Ptr<_204358c26_UseDecl>& _47036_decl) {
	{
		
		if (_47036_decl.get()._field_CppLinked) {
			_case_begin_1dad8c6c9:;
			{
				return _204ecb15b_buildCppHeaderImport(_self_.ptr(), _47036_decl);
			}
		}
		else if (_47036_decl.get()._field_Std) {
			_case_begin_1dad8c982:;
			{
				return _204ecb28d_buildStdImport(_self_.ptr(), _47036_decl);
			}
		}
		else {
			_case_begin_1dad8be59:;
			{
				return _204ecb3c0_buildIdentImport(_self_, _47036_decl);
			}
		}
		_match_end_1dad8bd7c:;
	};
}



inline jule::Bool _204ecb634_checkDuplicateUseDecl(_204eca699_symbolBuilder* _self_, jule::Ptr<_20500ae16_ImportInfo>& _48141_pkg) {
	jule::Bool _48161_ok = jule::Bool();
	jule::Ptr<_20500ae16_ImportInfo> _48313_lpkg = _2050757dd_SelectPackage((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_20500ae16_ImportInfo>)>([=](jule::Ptr<_20500ae16_ImportInfo> _48348_spkg) mutable -> jule::Bool {
		return (_48141_pkg.get()._field_Path == _48348_spkg.get()._field_Path);
	}));;
	if ((_48313_lpkg == nullptr)) {
		_48161_ok = true;
		return _48161_ok;
	};
	_204ecab83_pushErr(&(*_self_), _48141_pkg.get()._field_Token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48141_pkg.get()._field_LinkPath)}));
	_204ecade7_pushSuggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_48161_ok = false;
	return _48161_ok;
}



inline void _204ecb766_implImportSelections(_204eca699_symbolBuilder* _self_, jule::Ptr<_20500ae16_ImportInfo>& _49544_imp, jule::Ptr<_204358c26_UseDecl>& _49567_decl) {
	_49544_imp.get()._field_Selected=_49567_decl.get()._field_Selected;
	{
		auto &expr = _49544_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1dad91711:;
		if (it != expr.end()) {
			jule::Ptr<_202b89679_Token> _49716_item = *it;
			{
				{
					auto &expr = _49544_imp.get()._field_Selected;
					auto it = expr.begin();
					_iter_begin_1dad923c1:;
					if (it != expr.end()) {
						jule::Ptr<_202b89679_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1dad923c1;
							} else if ((_49716_item.get()._field_Kind == _49820_citem.get()._field_Kind)) {
								_204ecab83_pushErr(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_Kind)}));
								_204ecade7_pushSuggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_1dad923c1;
							};
						}
						_iter_next_1dad923c1:;
						++it;
						goto _iter_begin_1dad923c1;
					}
					_iter_end_1dad923c1:;
				};
			}
			_iter_next_1dad91711:;
			++it;
			goto _iter_begin_1dad91711;
		}
		_iter_end_1dad91711:;
	};
}



inline jule::Str _204ecb964_getAsLinkPath(jule::Ptr<_204eca699_symbolBuilder> _self_, jule::Str _51037_path) {
	if (_2027ce8da_HasPrefix(_51037_path,_2028954d9_PathStdlib)) {
		(_51037_path).mut_slice(_2028954d9_PathStdlib.len());;
		return (jule::Str("std", 3) + _2027d5627_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _51614_root;;
	std::tie(_51614_root,std::ignore) = _201849769_Abs(_205008298_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20500740c_GetModPath(_self_.get()._field_importer));
	(_51037_path).mut_slice(_51614_root.len());;
	if ((_51037_path[0LL] == 47LLU)) {
		(_51037_path).mut_slice(1LL);;
	};
	return _2027d5627_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _204ecbd2c_pushCycleError(jule::Ptr<_204eca699_symbolBuilder> _self_, jule::Ptr<_204eca699_symbolBuilder>& _52435_sb, jule::Str _52455_path, jule::Str& _52471_message) {
	;
	jule::Str _52613_refersTo = _20285bbed_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_204ecb964_getAsLinkPath(_self_, _202b9040a_Dir(_52435_sb.get()._field_table.get()._field_File.ptr()))),jule::Any(_204ecb964_getAsLinkPath(_self_, _52455_path))}));;
	(_52471_message).buffer.insert(0, (((_2027b6509_Repeat(jule::Str(" ", 1),4LL) + _52613_refersTo) + jule::Str("\n", 1))));;
}



inline void _204ecc1e5_pushCrossCycleError(jule::Ptr<_204eca699_symbolBuilder> _self_, jule::Ptr<_204eca699_symbolBuilder>& _53340_target, jule::Ptr<_20500ae16_ImportInfo>& _53365_imp, jule::Ptr<_202b89679_Token>& _53384_errorToken) {
	jule::Str _53417_message = jule::Str();;
	_204ecbd2c_pushCycleError(_self_, _self_,_53365_imp.get()._field_Path,_53417_message);
	jule::Ptr<_204eca699_symbolBuilder> _53817_owner = _self_.get()._field_owner;;
	jule::Ptr<_204eca699_symbolBuilder> _53917_old = _self_;;
	while ((_53817_owner.get()._field_owner != nullptr)) {
		{
			_204ecbd2c_pushCycleError(_self_, _53917_old.get()._field_owner,_202b9040a_Dir(_53917_old.get()._field_table.get()._field_File.ptr()),_53417_message);
			if ((_53817_owner.get()._field_owner == _53340_target)) {
				_204ecbd2c_pushCycleError(_self_, _53340_target,_202b9040a_Dir(_53817_owner.get()._field_table.get()._field_File.ptr()),_53417_message);
				goto _iter_end_1dad9974c;
			};
			_53917_old=_53817_owner;
			_53817_owner=_53817_owner.get()._field_owner;
		}
	_iter_next_1dad9974c:;
	}
	_iter_end_1dad9974c:;;
	_204ecab83_pushErr(_self_.ptr(), _53384_errorToken,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53417_message)}));
}



inline jule::Bool _204ecc59c_checkImportCycles(jule::Ptr<_204eca699_symbolBuilder> _self_, jule::Ptr<_20500ae16_ImportInfo> _55637_imp, jule::Ptr<_204358c26_UseDecl>& _55656_decl) {
	if ((_55637_imp.get()._field_Path == _202b9040a_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_204ecab83_pushErr(_self_.ptr(), _55656_decl.get()._field_Token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_204ecb964_getAsLinkPath(_self_, _55637_imp.get()._field_Path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_202b9040a_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_204ecc1e5_pushCrossCycleError(_self_, _self_.get()._field_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	jule::Ptr<_204eca699_symbolBuilder> _57117_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_202b9040a_Dir(_57117_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_204ecc1e5_pushCrossCycleError(_self_, _57117_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	if ((_57117_owner.get()._field_owner != nullptr)) {
		_57117_owner=_57117_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _204ecc987_checkPackageAccessibility(_204eca699_symbolBuilder* _self_, jule::Ptr<_204358c26_UseDecl>& _59245_decl, jule::Str& _59262_mod, jule::Str& _59273_path) {
	if (((_205008298_Importer_mptr_data[((*_self_)._field_importer).type_offset]._20500740c_GetModPath((*_self_)._field_importer) != _59262_mod) && _2027d437e_Contains(_59273_path,jule::Str("internal", 8)))) {
		_204ecab83_pushErr(&(*_self_), _59245_decl.get()._field_Token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _204eccd50_importPackage(jule::Ptr<_204eca699_symbolBuilder> _self_, jule::Ptr<_20500ae16_ImportInfo>& _59838_imp, jule::Ptr<_204358c26_UseDecl>& _59861_decl) {
	jule::Bool _59879_ok = jule::Bool();
	if (_59838_imp.get()._field_CppLinked) {
		_59879_ok = true;
		return _59879_ok;
	};
	jule::Ptr<_20500ae16_ImportInfo> _60317_port = _205008298_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._205007a28_GetImport(_self_.get()._field_importer, _59838_imp.get()._field_Path);;
	if ((_60317_port != nullptr)) {
		_59838_imp.get()._field_Package=_60317_port.get()._field_Package;
		_59838_imp.get()._field_Duplicate=true;
		jule::Str _60817_oldMod = _205008298_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20500740c_GetModPath(_self_.get()._field_importer);;
		_205008298_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._2050071ba_SetModPath(_self_.get()._field_importer, _205008298_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20500771a_ModById(_self_.get()._field_importer, _59838_imp.get()._field_ModId));
		_204ecc987_checkPackageAccessibility(_self_.ptr(), _59861_decl,_60817_oldMod,_60317_port.get()._field_Path);
		_205008298_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._2050071ba_SetModPath(_self_.get()._field_importer, _60817_oldMod);
	} else {
		if ((!(_204ecc59c_checkImportCycles(_self_, _59838_imp,_59861_decl)))) {
			_59879_ok = false;
			return _59879_ok;
		};
		jule::Str _61717_oldMod = _205008298_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20500740c_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_205008298_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._2050071ba_SetModPath(_self_.get()._field_importer, _61717_oldMod);
		});;
		if (_59838_imp.get()._field_Std) {
			_205008298_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._2050071ba_SetModPath(_self_.get()._field_importer, _2028954d9_PathStdlib);
		};
		jule::Slice<jule::Ptr<_204307202_Ast>> _62222_asts;;
		jule::Slice<_20285b7ad_Log> _62232_errors;;
		std::tie(_62222_asts,_62232_errors) = _205008298_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._205007dd0_ImportPackage(_self_.get()._field_importer, _59838_imp.get()._field_Path,(!(_59838_imp.get()._field_Std)));
		if ((_62232_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
			_59879_ok = false;
			return _59879_ok;
		};
		_204ecc987_checkPackageAccessibility(_self_.ptr(), _59861_decl,_61717_oldMod,_59838_imp.get()._field_Path);
		{
			auto &expr = _62222_asts;
			auto it = expr.begin();
			_iter_begin_1dada8e98:;
			if (it != expr.end()) {
				jule::Ptr<_204307202_Ast> _63025_ast = *it;
				{
					jule::Ptr<_205074eb3_SymbolTable> _63125_table = nullptr;;
					std::tie(_63125_table,_62232_errors) = _2050c7202_buildSymbols(_63025_ast,_self_.get()._field_importer,_self_);
					if ((_62232_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
						_59879_ok = false;
						return _59879_ok;
					};
					_59838_imp.get()._field_Package.get()._field_Files = jule::alloc_for_append(_59838_imp.get()._field_Package.get()._field_Files,1);_59838_imp.get()._field_Package.get()._field_Files.__push(_63125_table);;
				}
				_iter_next_1dada8e98:;
				++it;
				goto _iter_begin_1dada8e98;
			}
			_iter_end_1dada8e98:;
		};
	};
	_204ecb766_implImportSelections(_self_.ptr(), _59838_imp,_59861_decl);
	_59879_ok = true;
	return _59879_ok;
}



inline jule::Ptr<_20500ae16_ImportInfo> _204ecd15d_importUseDecl(jule::Ptr<_204eca699_symbolBuilder> _self_, jule::Ptr<_204358c26_UseDecl>& _64538_decl) {
	jule::Ptr<_20500ae16_ImportInfo> _64617_imp = _204ecb502_buildImport(_self_, _64538_decl);;
	if ((_64617_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _65217_ok = _204ecb634_checkDuplicateUseDecl(_self_.ptr(), _64617_imp);;
	if ((!(_65217_ok))) {
		return nullptr;
	};
	_65217_ok=_204eccd50_importPackage(_self_, _64617_imp,_64538_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_64617_imp);;
	if (_65217_ok) {
		_205008298_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._205008155_Imported(_self_.get()._field_importer, _64617_imp);
		return _64617_imp;
	};
	return nullptr;
}



inline void _204ecd339_importUseDecls(jule::Ptr<_204eca699_symbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_UseDecls;
		auto it = expr.begin();
		_iter_begin_1dadb64c2:;
		if (it != expr.end()) {
			jule::Ptr<_204358c26_UseDecl> _66721_decl = *it;
			{
				_204ecd15d_importUseDecl(_self_, _66721_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1dadb64c2;
				};
			}
			_iter_next_1dadb64c2:;
			++it;
			goto _iter_begin_1dadb64c2;
		}
		_iter_end_1dadb64c2:;
	};
}



inline void _204ecd5ae_appendNode(_204eca699_symbolBuilder* _self_, _204307da1_Node& _67634_node) {
	{
		auto &_match_expr{ _67634_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_20435c499_Impl>>()) {
			_case_begin_1dadb7ec9:;
			{
				(*_self_)._field_table.get()._field_Impls = jule::alloc_for_append((*_self_)._field_table.get()._field_Impls,1);(*_self_)._field_table.get()._field_Impls.__push(_204eca567_buildImpl(_67634_node._field_Data.operator jule::Ptr<_20435c499_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20435783a_TypeAliasDecl>>()) {
			_case_begin_1dadb6bcb:;
			{
				jule::Ptr<_2050a9beb_TypeAlias> _68121_ta = _204ec8b70_buildTypeAlias(_67634_node._field_Data.operator jule::Ptr<_20435783a_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_TypeAliases = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeAliases,1);(*_self_)._field_table.get()._field_TypeAliases.__push(_68121_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20435b784_StructDecl>>()) {
			_case_begin_1dadb7baa:;
			{
				jule::Ptr<_20433367e_Struct> _68421_srct = _204ec9016_buildStruct(_67634_node._field_Data.operator jule::Ptr<_20435b784_StructDecl>());;
				(*_self_)._field_table.get()._field_Structs = jule::alloc_for_append((*_self_)._field_table.get()._field_Structs,1);(*_self_)._field_table.get()._field_Structs.__push(_68421_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204352eea_FnDecl>>()) {
			_case_begin_1dadb7c21:;
			{
				jule::Ptr<_204ec707a_Fn> _68721_f = _204ec94de_buildFn(_67634_node._field_Data.operator jule::Ptr<_204352eea_FnDecl>());;
				(*_self_)._field_table.get()._field_Funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_Funcs,1);(*_self_)._field_table.get()._field_Funcs.__push(_68721_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20435bd8e_TraitDecl>>()) {
			_case_begin_1dadb7c87:;
			{
				jule::Ptr<_204ece8e0_Trait> _69021_t = _204ec9753_buildTrait(_67634_node._field_Data.operator jule::Ptr<_20435bd8e_TraitDecl>());;
				(*_self_)._field_table.get()._field_Traits = jule::alloc_for_append((*_self_)._field_table.get()._field_Traits,1);(*_self_)._field_table.get()._field_Traits.__push(_69021_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204353ec9_VarDecl>>()) {
			_case_begin_1dadb85d4:;
			{
				jule::Ptr<_205031cb6_Var> _69321_v = _204eca303_buildVar(_67634_node._field_Data.operator jule::Ptr<_204353ec9_VarDecl>());;
				(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_69321_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204359bc2_EnumDecl>>()) {
			_case_begin_1dadb865b:;
			{
				jule::Ptr<_204ed1a35_Enum> _69621_e = _204ec9ae9_buildEnum(_67634_node._field_Data.operator jule::Ptr<_204359bc2_EnumDecl>());;
				(*_self_)._field_table.get()._field_Enums = jule::alloc_for_append((*_self_)._field_table.get()._field_Enums,1);(*_self_)._field_table.get()._field_Enums.__push(_69621_e);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20435acd3_TypeEnumDecl>>()) {
			_case_begin_1dadb86d3:;
			{
				jule::Ptr<_204ed3130_TypeEnum> _69921_e = _204eca1c1_buildTypeEnum(_67634_node._field_Data.operator jule::Ptr<_20435acd3_TypeEnumDecl>());;
				(*_self_)._field_table.get()._field_TypeEnums = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeEnums,1);(*_self_)._field_table.get()._field_TypeEnums.__push(_69921_e);;
			}
		}
		else {
			_case_begin_1dadb6c75:;
			{
				_204ecab83_pushErr(&(*_self_), _67634_node._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1dadb7a9a:;
	};
}



inline void _204ecd78a_appendNodes(_204eca699_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_Nodes;
		auto it = expr.begin();
		_iter_begin_1dadc18ea:;
		if (it != expr.end()) {
			_204307da1_Node _70721_node = *it;
			{
				_204ecd5ae_appendNode(&(*_self_), _70721_node);
			}
			_iter_next_1dadc18ea:;
			++it;
			goto _iter_begin_1dadc18ea;
		}
		_iter_end_1dadc18ea:;
	};
}



inline void _204ecda10_pushDirectivePass(_204eca699_symbolBuilder* _self_, jule::Ptr<_20430829c_Directive>& _71241_d) {
	if ((_71241_d.get()._field_Args.len() == 0LL)) {
		_204ecab83_pushErr(&(*_self_), _71241_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71241_d.get()._field_Args.len() > 1LL)) {
		jule::Ptr<_202b89679_Token> _71717_arg = _71241_d.get()._field_Args[1LL];;
		_204ecab83_pushErr(&(*_self_), _71717_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_202b89679_Token> _72113_arg = _71241_d.get()._field_Args[0LL];;
	if ((_72113_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_204ecab83_pushErr(&(*_self_), _72113_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72113_arg.get()._field_Kind[0LL] != '\"')) {
		_204ecab83_pushErr(&(*_self_), _72113_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_Passes = jule::alloc_for_append((*_self_)._field_table.get()._field_Passes,1);(*_self_)._field_table.get()._field_Passes.__push(_204ec871e_Pass{._field_Token=_71241_d.get()._field_Tag, ._field_Text=_72113_arg.get()._field_Kind.slice(1LL,(_72113_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _204ecdbdb_appendTopDirectives(_204eca699_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1dadc558b:;
		if (it != expr.end()) {
			jule::Ptr<_20430829c_Directive> _73921_d = *it;
			{
				{
					auto &_match_expr{ _73921_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1dadc8ca9:;
						{
							_204ecda10_pushDirectivePass(&(*_self_), _73921_d);
						}
					}
					_match_end_1dadc8979:;
				};
			}
			_iter_next_1dadc558b:;
			++it;
			goto _iter_begin_1dadc558b;
		}
		_iter_end_1dadc558b:;
	};
}



inline void _204ecddb7_build(jule::Ptr<_204eca699_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_205074eb3_SymbolTable>(_205074eb3_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_204ecdbdb_appendTopDirectives(_self_.ptr());
	_204ecd339_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_204ecd78a_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _204eca699_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _204ececdb_Str(_204ece8e0_Trait* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _204ed00e9_Equals(jule::Ptr<_204ece8e0_Trait> _self_, jule::Ptr<_2050aa8de_TypeKind> _2522_other) {
	jule::Ptr<_204ece8e0_Trait> _2613_trt = _2050ae1b7_Trait(_2522_other.ptr());;
	return (_self_ == _2613_trt);
}



inline jule::Bool _204ed045c_IsBuiltin(_204ece8e0_Trait* _self_) {
	return ((*_self_)._field_Token == nullptr);
}



inline jule::Ptr<_204ec707a_Fn> _204ed076a_FindMethod(_204ece8e0_Trait* _self_, jule::Str _3929_ident) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1dadcd1cb:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3929_ident)) {
					return _4021_f;
				};
			}
			_iter_next_1dadcd1cb:;
			++it;
			goto _iter_begin_1dadcd1cb;
		}
		_iter_end_1dadcd1cb:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _204ece8e0_Trait _Src) {
	_Stream << _204ececdb_Str(&_Src);
	return _Stream;
}



inline jule::Bool _204ed142a_AutoExpr(_204ed1040_EnumItem* _self_) {
	return ((*_self_)._field_Value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _204ed1040_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _204ed1d98_Str(_204ed1a35_Enum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _204ed21a6_Equals(jule::Ptr<_204ed1a35_Enum> _self_, jule::Ptr<_2050aa8de_TypeKind> _3822_other) {
	jule::Ptr<_204ed1a35_Enum> _3913_enm = _2050ad23d_Enum(_3822_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_204ed1040_EnumItem> _204ed25e6_FindItem(_204ed1a35_Enum* _self_, jule::Str _4727_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1dadd0b5c:;
		if (it != expr.end()) {
			jule::Ptr<_204ed1040_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;
				};
			}
			_iter_next_1dadd0b5c:;
			++it;
			goto _iter_begin_1dadd0b5c;
		}
		_iter_end_1dadd0b5c:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _204ed1a35_Enum _Src) {
	_Stream << _204ed1d98_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ed2a69_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _204ed3460_Str(_204ed3130_TypeEnum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _204ed376d_Equals(jule::Ptr<_204ed3130_TypeEnum> _self_, jule::Ptr<_2050aa8de_TypeKind> _8022_other) {
	jule::Ptr<_204ed3130_TypeEnum> _8113_tenm = _2050ad4a2_TypeEnum(_8022_other.ptr());;
	return (_self_ == _8113_tenm);
}



inline jule::Ptr<_204ed2a69_TypeEnumItem> _204ed3b69_FindItem(_204ed3130_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1dadd2ee4:;
		if (it != expr.end()) {
			jule::Ptr<_204ed2a69_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;
				};
			}
			_iter_next_1dadd2ee4:;
			++it;
			goto _iter_begin_1dadd2ee4;
		}
		_iter_end_1dadd2ee4:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _204ed3130_TypeEnum _Src) {
	_Stream << _204ed3460_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_205014062_Sema>&,jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>&)> _204ed5ad3_readyFn(jule::Ptr<_204ed56a4_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_205014062_Sema>&,jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>&)>([=](jule::Ptr<_205014062_Sema>& _6321_sema, jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>& _6339_generics) mutable -> jule::Bool {
		{
			auto &expr = _self_.get()._field_genericsD;
			auto it = expr.begin();
			_iter_begin_1dade160c:;
			if (it != expr.end()) {
				jule::I64 _6418_i = it - expr.begin();
				jule::Ptr<_20434d864_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_2050a91b2_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1dade160c;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_2050aa8de_TypeKind>>::alloc(0LL,_6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto &expr = _6425_g.get()._field_Constraint.get()._field_Mask;
						auto it = expr.begin();
						_iter_begin_1dade41ae:;
						if (it != expr.end()) {
							jule::Ptr<_20434156b_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = _6321_sema.get()._field_errors.len();;
								jule::Ptr<_2050aa8de_TypeKind> _7229_kind = _20501b366_buildTypeWithRefers(_6321_sema, _7029_mask,jule::Trait<_2050c6520_Lookup>(_6321_sema, 3),_6339_generics,nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type_is<jule::Ptr<_204341b32_IdentTypeDecl>>()) {
											_case_begin_1dade5da3:;
											{
												jule::Ptr<_204341b32_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.operator jule::Ptr<_204341b32_IdentTypeDecl>();;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _204ed6c6b_isBuiltinConstraint(_7637_itd.get()._field_Ident))) {
													_7229_kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													_6321_sema.get()._field_errors=_6321_sema.get()._field_errors.slice(0LL,_7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1dade4b71:;
									};
									return false;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_1dade41ae:;
							++it;
							goto _iter_begin_1dade41ae;
						}
						_iter_end_1dade41ae:;
					};
				}
				_iter_next_1dade160c:;
				++it;
				_6418_i++;
				goto _iter_begin_1dade160c;
			}
			_iter_end_1dade160c:;
		};
		return true;
	});
}



inline jule::Bool _204ed5d47_readyFi(jule::Ptr<_204ed56a4_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _205020766_fnEnvironment(_self_.get()._field_s, _self_.get()._field_fi,_204ed5ad3_readyFn(_self_)));
}



inline jule::Bool _204ed60ab_readySi(jule::Ptr<_204ed56a4_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _204ed5ad3_readyFn(_self_)(_self_.get()._field_s,_self_.get()._field_genericsA));
}



inline jule::Bool _204ed6320_ready(jule::Ptr<_204ed56a4_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _204ed5d47_readyFi(_self_);
	};
	return _204ed60ab_readySi(_self_);
}



inline jule::Bool _204ed6584_check(jule::Ptr<_204ed56a4_constraintChecker> _self_) {
	if ((!(_204ed6320_ready(_self_)))) {
		return false;
	};
	_julec_label_lookup:;
	{
		auto &expr = _self_.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1daded4d7:;
		if (it != expr.end()) {
			jule::I64 _11914_i = it - expr.begin();
			jule::Ptr<_2050a91b2_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1daded4d7;
				};
				{
					auto &expr = _11921_g.get()._field_Constraint;
					auto it = expr.begin();
					_iter_begin_1dadee494:;
					if (it != expr.end()) {
						jule::Ptr<_2050aa8de_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_2050b03b6_Prim> _12425_prim = _2050aca01_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _2050b0eaa_IsConstraint(_12425_prim.ptr()))) {
								if (_204ed6980_matchConstraint(_12425_prim.get()._field_Kind,_11921_g.get()._field_Kind)) {
									goto _iter_next_1daded4d7;
								};
								goto _iter_next_1dadee494;
							};
							if (_2050ab0e8_Equals(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1daded4d7;
							};
						}
						_iter_next_1dadee494:;
						++it;
						goto _iter_begin_1dadee494;
					}
					_iter_end_1dadee494:;
				};
				_205016c24_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et,jule::Str("type @ is not matched with @'s constraint", 41),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_11921_g.get()._field_Kind.ptr())),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident)}));
				return false;
			}
			_iter_next_1daded4d7:;
			++it;
			_11914_i++;
			goto _iter_begin_1daded4d7;
		}
		_iter_end_1daded4d7:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _204ed56a4_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204ed79d6_IsTraitImpl(_204ed75da_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _204ed7c4a_IsStructImpl(_204ed75da_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _204ed75da_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204edc645_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204edca41_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204edcd2c_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204edd1a1_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204edd48c_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204eddca6_IsWhileNext(_204edd910_WhileIter* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _204edd910_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ede2e5_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ede6e1_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204edea98_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204eded84_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ee0170_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ee0527_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ee099a_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ee0d52_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204ee189c_IsGenericTypeMatch(_204ee1391_Match* _self_) {
	return (((*_self_)._field_TypeMatch && ((*_self_)._field_Expr != nullptr)) && (*_self_)._field_Expr.get()._field_Kind.get()._field_Generic);
}







std::ostream &operator<<(std::ostream &_Stream, _204ee1391_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204ee21a5_isDefault(_204ee1ddb_Case* _self_) {
	return ((*_self_)._field_Exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _204ee1ddb_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ee2491_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ee2914_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ee301e_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ee3492_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20500ae16_ImportInfo> _204ee4707_FindPackage(_204ee42a6_scopeChecker* _self_, jule::Str _45530_ident) {
	return _20501457e_FindPackage((*_self_)._field_s.ptr(), _45530_ident);
}



inline jule::Ptr<_20500ae16_ImportInfo> _204ee4a15_SelectPackage(_204ee42a6_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_20500ae16_ImportInfo>)> _46532_selector) {
	return _20501488c_SelectPackage((*_self_)._field_s.ptr(), _46532_selector);
}



inline jule::Ptr<_205031cb6_Var> _204ee4dbc_FindVar(_204ee42a6_scopeChecker* _self_, jule::Str _47626_ident, jule::Bool _47638_cpp_linked) {
	;
	jule::Ptr<_205031cb6_Var> _47917_v = _20507c5b4_findVar((*_self_)._field_table.ptr(), _47626_ident,_47638_cpp_linked,true);;
	if ((_47917_v != nullptr)) {
		return _47917_v;
	};
	jule::Ptr<_204ee42a6_scopeChecker> _48417_parent = (*_self_)._field_parent;;
	while ((_48417_parent != nullptr)) {
		{
			_47917_v=_20507c5b4_findVar(_48417_parent.get()._field_table.ptr(), _47626_ident,_47638_cpp_linked,true);
			if ((_47917_v != nullptr)) {
				return _47917_v;
			};
			_48417_parent=_48417_parent.get()._field_parent;
		}
	_iter_next_1dae2c67b:;
	}
	_iter_end_1dae2c67b:;;
	return _205014c44_FindVar((*_self_)._field_s.ptr(), _47626_ident,_47638_cpp_linked);
}



inline jule::Ptr<_2050a9beb_TypeAlias> _204ee5274_FindTypeAlias(_204ee42a6_scopeChecker* _self_, jule::Str _50332_ident, jule::Bool _50344_cppLinked) {
	;
	jule::Ptr<_2050a9beb_TypeAlias> _50617_ta = _20507ca15_findTypeAlias((*_self_)._field_table.ptr(), _50332_ident,_50344_cppLinked,true);;
	if ((_50617_ta != nullptr)) {
		return _50617_ta;
	};
	jule::Ptr<_204ee42a6_scopeChecker> _51117_parent = (*_self_)._field_parent;;
	while ((_51117_parent != nullptr)) {
		{
			_50617_ta=_20507ca15_findTypeAlias(_51117_parent.get()._field_table.ptr(), _50332_ident,_50344_cppLinked,true);
			if ((_50617_ta != nullptr)) {
				return _50617_ta;
			};
			_51117_parent=_51117_parent.get()._field_parent;
		}
	_iter_next_1dae3077d:;
	}
	_iter_end_1dae3077d:;;
	return _2050150eb_FindTypeAlias((*_self_)._field_s.ptr(), _50332_ident,_50344_cppLinked);
}



inline jule::Ptr<_20433367e_Struct> _204ee562b_FindStruct(_204ee42a6_scopeChecker* _self_, jule::Str _52829_ident, jule::Bool _52841_cppLinked) {
	return _2050154a3_FindStruct((*_self_)._field_s.ptr(), _52829_ident,_52841_cppLinked);
}



inline jule::Ptr<_204ec707a_Fn> _204ee59d3_FindFn(_204ee42a6_scopeChecker* _self_, jule::Str _53725_ident, jule::Bool _53737_cppLinked) {
	return _20501585a_FindFn((*_self_)._field_s.ptr(), _53725_ident,_53737_cppLinked);
}



inline jule::Ptr<_204ece8e0_Trait> _204ee5ce1_FindTrait(_204ee42a6_scopeChecker* _self_, jule::Str _54628_ident) {
	return _205015b68_FindTrait((*_self_)._field_s.ptr(), _54628_ident);
}



inline jule::Ptr<_204ed1a35_Enum> _204ee60ee_FindEnum(_204ee42a6_scopeChecker* _self_, jule::Str _55527_ident) {
	return _205015e76_FindEnum((*_self_)._field_s.ptr(), _55527_ident);
}



inline jule::Ptr<_204ed3130_TypeEnum> _204ee640c_FindTypeEnum(_204ee42a6_scopeChecker* _self_, jule::Str _56431_ident) {
	return _205016284_FindTypeEnum((*_self_)._field_s.ptr(), _56431_ident);
}



inline jule::Bool _204ee673c_isUnsafe(jule::Ptr<_204ee42a6_scopeChecker> _self_) {
	jule::Ptr<_204ee42a6_scopeChecker> _57217_scope = _self_;;
	_julec_label_iter:;
	if (_57217_scope.get()._field_scope.get()._field_Unsafety) {
		return true;
	};
	if ((_57217_scope.get()._field_parent != nullptr)) {
		_57217_scope=_57217_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _204ee69a1_isRoot(_204ee42a6_scopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _204ee6b7c_stop(_204ee42a6_scopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _204ee6de1_stopped(_204ee42a6_scopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _204ee7155_isDeferred(jule::Ptr<_204ee42a6_scopeChecker> _self_) {
	jule::Ptr<_204ee42a6_scopeChecker> _60517_scope = _self_;;
	_julec_label_iter:;
	if (_60517_scope.get()._field_scope.get()._field_Deferred) {
		return true;
	};
	if ((_60517_scope.get()._field_parent != nullptr)) {
		_60517_scope=_60517_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_204ee42a6_scopeChecker> _204ee73b9_getRoot(jule::Ptr<_204ee42a6_scopeChecker> _self_) {
	jule::Ptr<_204ee42a6_scopeChecker> _62317_root = _self_;;
	while (((_62317_root.get()._field_parent != nullptr) && (_62317_root.get()._field_owner == nullptr))) {
		{
			_62317_root=_62317_root.get()._field_parent;
		}
	_iter_next_1dae3a4ad:;
	}
	_iter_end_1dae3a4ad:;;
	return _62317_root;
}



inline jule::Ptr<_204ee42a6_scopeChecker> _204ee762d_getHardRoot(jule::Ptr<_204ee42a6_scopeChecker> _self_) {
	jule::Ptr<_204ee42a6_scopeChecker> _63317_root = _self_;;
	while ((_63317_root.get()._field_parent != nullptr)) {
		{
			_63317_root=_63317_root.get()._field_parent;
		}
	_iter_next_1dae3b855:;
	}
	_iter_end_1dae3b855:;;
	return _63317_root;
}



inline jule::Ptr<_204eded84_Label> _204ee793b_findLabel(_204ee42a6_scopeChecker* _self_, jule::Str _64328_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1dae3c4e3:;
		if (it != expr.end()) {
			jule::Any _64421_st = *it;
			{
				{
					auto &_match_expr{ _64421_st };
					
					if (_match_expr.type_is<jule::Ptr<_204eded84_Label>>()) {
						_case_begin_1dae3d01b:;
						{
							jule::Ptr<_204eded84_Label> _64725_label = _64421_st.operator jule::Ptr<_204eded84_Label>();;
							if ((_64725_label.get()._field_Ident == _64328_ident)) {
								return _64725_label;
							};
						}
					}
					_match_end_1dae3ce0b:;
				};
			}
			_iter_next_1dae3c4e3:;
			++it;
			goto _iter_begin_1dae3c4e3;
		}
		_iter_end_1dae3c4e3:;
	};
	return nullptr;
}



inline jule::Ptr<_204ee301e_scopeLabel> _204ee7c49_findLabelScope(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Str _65934_ident) {
	jule::Ptr<_204ee301e_scopeLabel> _66017_label = _204ee8057_findLabelAll(_self_.ptr(), _65934_ident);;
	if (((_66017_label != nullptr) && (_66017_label.get()._field_scope == _self_))) {
		return _66017_label;
	};
	return nullptr;
}



inline jule::Ptr<_204ee301e_scopeLabel> _204ee8057_findLabelAll(_204ee42a6_scopeChecker* _self_, jule::Str _67131_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1dae40529:;
		if (it != expr.end()) {
			jule::Ptr<_204ee301e_scopeLabel> _67221_lbl = *it;
			{
				if ((_67221_lbl.get()._field_label.get()._field_Ident == _67131_ident)) {
					return _67221_lbl;
				};
			}
			_iter_next_1dae40529:;
			++it;
			goto _iter_begin_1dae40529;
		}
		_iter_end_1dae40529:;
	};
	return nullptr;
}



inline jule::Bool _204ee840e_isDuplicatedIdent(_204ee42a6_scopeChecker* _self_, jule::Uintptr _68336_itself, jule::Str _68353_ident) {
	jule::Ptr<_205031cb6_Var> _68413_v = _204ee4dbc_FindVar(&(*_self_), _68353_ident,false);;
	if (((_68413_v != nullptr) && (static_cast<jule::Uintptr>(_68413_v) != _68336_itself))) {
		if ((_68413_v.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_68413_v.get()._field_Scope == (*_self_)._field_scope) || (!(_2050165d6_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	jule::Ptr<_2050a9beb_TypeAlias> _69213_ta = _204ee5274_FindTypeAlias(&(*_self_), _68353_ident,false);;
	if (((_69213_ta != nullptr) && (static_cast<jule::Uintptr>(_69213_ta) != _68336_itself))) {
		if ((_69213_ta.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_69213_ta.get()._field_Scope == (*_self_)._field_tree) || (!(_2050165d6_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	return false;
}



inline void _204ee8684_checkVarDecl(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204353ec9_VarDecl> _70336_decl) {
	jule::Ptr<_205031cb6_Var> _70417_v = _204eca303_buildVar(_70336_decl);;
	_70417_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70417_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_70417_v));;
	});;
	if (_204ee840e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70417_v)),_70417_v.get()._field_Ident)) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _70417_v.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70417_v.get()._field_Ident)}));
		_205017043_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_204ee6b7c_stop(_self_.ptr());
		return;;
	};
	_2050261d9_checkVarDecl(_self_.get()._field_s, _70417_v,jule::Trait<_2050c6520_Lookup>(_self_, 0));
	if (((!(_2050323e3_IsTypeInferred(_70417_v.ptr()))) && ((_70417_v.get()._field_Kind == nullptr) || (_70417_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_20502982a_checkTypeVar(_self_.get()._field_s, _70417_v,jule::Trait<_2050c6520_Lookup>(_self_, 0));
}



inline void _204ee8909_checkTypeAliasDecl(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_20435783a_TypeAliasDecl> _72742_decl) {
	jule::Ptr<_2050a9beb_TypeAlias> _72817_ta = _204ec8b70_buildTypeAlias(_72742_decl);;
	if (_204ee840e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72817_ta)),_72817_ta.get()._field_Ident)) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _72817_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72817_ta.get()._field_Ident)}));
		_205017043_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_204ee6b7c_stop(_self_.ptr());
		return;;
	};
	_20502202b_checkTypeAliasDecl(_self_.get()._field_s, _72817_ta,jule::Trait<_2050c6520_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72817_ta);;
	if ((_72817_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_204ee6b7c_stop(_self_.ptr());
	};
}



inline jule::Ptr<_204edc645_Scope> _204ee8b6d_getChild(_204ee42a6_scopeChecker* _self_) {
	return jule::new_ptr<_204edc645_Scope>(_204edc645_Scope{._field_Parent=(*_self_)._field_scope, });
}



inline void _204ee9036_checkChildSsc(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204351504_ScopeTree>& _75138_tree, jule::Ptr<_204edc645_Scope>& _75161_s, jule::Ptr<_204ee42a6_scopeChecker>& _75177_ssc) {
	_75177_ssc.get()._field_parent=_self_;
	_205004074_check(_75177_ssc, _75138_tree,_75161_s);
}



inline jule::Ptr<_204edc645_Scope> _204ee93dd_checkChildSc(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204351504_ScopeTree>& _75637_tree, jule::Ptr<_204ee42a6_scopeChecker>& _75660_ssc) {
	jule::Ptr<_204edc645_Scope> _75717_s = _204ee8b6d_getChild(_self_.ptr());;
	_204ee9036_checkChildSsc(_self_, _75637_tree,_75717_s,_75660_ssc);
	return _75717_s;
}



inline jule::Ptr<_204edc645_Scope> _204ee96eb_checkChild(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204351504_ScopeTree>& _76235_tree) {
	jule::Ptr<_204ee42a6_scopeChecker> _76317_ssc = _2050042d8_newChildChecker(_self_);;
	return _204ee93dd_checkChildSc(_self_, _76235_tree,_76317_ssc);
}



inline void _204ee9971_checkAnonScope(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204351504_ScopeTree> _76738_tree) {
	jule::Ptr<_204edc645_Scope> _76817_s = _204ee96eb_checkChild(_self_, _76738_tree);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_76817_s));;
}



inline void _204ee9c90_processErrorCall(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel>& _77241_m, jule::Ptr<_202b89679_Token> _77272_err) {
	if (_204ee7155_isDeferred(_self_)) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _77272_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_204ee42a6_scopeChecker> _77717_root = _204ee73b9_getRoot(_self_);;
	if ((!(_77717_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _77272_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_205017043_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77241_m.get()._field_Func=_77717_root.get()._field_owner;
}



inline void _204eea015_checkExpr(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204345a8c_Expr> _78533_expr) {
	jule::Ptr<_2050816b7_Eval> _78617_eval = _20501d610_eval(_self_.get()._field_s, jule::Trait<_2050c6520_Lookup>(_self_, 0));;
	_78617_eval.get()._field_ignored=true;
	jule::Ptr<_20507eb49_Data> _78817_d = _20509c0d9_evalExpr(_78617_eval, _78533_expr);;
	if ((_78817_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78817_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel>>()) {
			_case_begin_1dae58179:;
			{
				jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel> _79521_m = _78817_d.get()._field_Model.operator jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel>();;
				_204ee9c90_processErrorCall(_self_, _79521_m,_78533_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78817_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec65eb_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_204ec4e35_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_204ec4495_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_204ec40bb_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_204ec42a8_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_204ec486e_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_204ec4a5b_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_204ec596e_BuiltinCopyCallExprModel>>() || _match_expr.type_is<jule::Ptr<_204ec320d_BuiltinDeleteCallExprModel>>() || _match_expr.type_is<jule::Ptr<_204ec67d8_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_204ec21a7_FnCallExprModel>>()) {
			_case_begin_1dae583dd:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78817_d));;
			}
		}
		else {
			_case_begin_1dae58025:;
			{
				_205016c24_pushErr(_self_.get()._field_s.ptr(), _78533_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1dae57e26:;
	};
}



inline jule::Ptr<_204edca41_If> _204eea323_checkIf(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204356839_If> _81531_i) {
	jule::Ptr<_204edc645_Scope> _81617_s = _204ee96eb_checkChild(_self_, _81531_i.get()._field_Scope);;
	jule::Ptr<_20507eb49_Data> _81817_d = _20509c0d9_evalExpr(_20501d610_eval(_self_.get()._field_s, jule::Trait<_2050c6520_Lookup>(_self_, 0)), _81531_i.get()._field_Expr);;
	if ((_81817_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_2050b03b6_Prim> _82317_prim = _2050aca01_Prim(_81817_d.get()._field_Kind.ptr());;
	if (((_82317_prim == nullptr) || (!(_2050b3386_IsBool(_82317_prim.ptr()))))) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _81531_i.get()._field_Expr.get()._field_Token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_204edca41_If>(_204edca41_If{._field_Expr=_81817_d.get()._field_Model, ._field_Scope=_81617_s});
}



inline jule::Ptr<_204edcd2c_Else> _204eea631_checkElse(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204356be1_Else> _83533_e) {
	return jule::new_ptr<_204edcd2c_Else>(_204edcd2c_Else{._field_Scope=_204ee96eb_checkChild(_self_, _83533_e.get()._field_Scope)});
}



inline void _204eea8a6_checkConditional(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204357164_Conditional> _84140_conditional) {
	jule::Ptr<_204edd1a1_Conditional> _84217_c = jule::new_ptr<_204edd1a1_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_84217_c));;
	_84217_c.get()._field_Elifs=jule::Slice<jule::Ptr<_204edca41_If>>::alloc(0LL,(_84140_conditional.get()._field_Tail.len() + 1LL));
	_84217_c.get()._field_Elifs = jule::alloc_for_append(_84217_c.get()._field_Elifs,1);_84217_c.get()._field_Elifs.__push(_204eea323_checkIf(_self_, _84140_conditional.get()._field_Head));;
	{
		auto &expr = _84140_conditional.get()._field_Tail;
		auto it = expr.begin();
		_iter_begin_1dae61eb8:;
		if (it != expr.end()) {
			jule::Ptr<_204356839_If> _84821_elif = *it;
			{
				_84217_c.get()._field_Elifs = jule::alloc_for_append(_84217_c.get()._field_Elifs,1);_84217_c.get()._field_Elifs.__push(_204eea323_checkIf(_self_, _84821_elif));;
			}
			_iter_next_1dae61eb8:;
			++it;
			goto _iter_begin_1dae61eb8;
		}
		_iter_end_1dae61eb8:;
	};
	if ((_84140_conditional.get()._field_Default != nullptr)) {
		_84217_c.get()._field_Default=_204eea631_checkElse(_self_, _84140_conditional.get()._field_Default);
	};
}



inline void _204eead18_checkIterScopeSsc(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Uintptr _85737_it, jule::Ptr<_204351504_ScopeTree> _85754_tree, jule::Ptr<_204edc645_Scope>& _85777_s, jule::Ptr<_204ee42a6_scopeChecker> _85792_ssc) {
	_85792_ssc.get()._field_it=_85737_it;
	_204ee9036_checkChildSsc(_self_, _85754_tree,_85777_s,_85792_ssc);
}



inline jule::Ptr<_204edc645_Scope> _204eeb269_checkIterScopeSc(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Uintptr _86236_it, jule::Ptr<_204351504_ScopeTree> _86253_tree, jule::Ptr<_204ee42a6_scopeChecker> _86275_ssc) {
	jule::Ptr<_204edc645_Scope> _86317_scope = _204ee8b6d_getChild(_self_.ptr());;
	_204eead18_checkIterScopeSsc(_self_, _86236_it,_86253_tree,_86317_scope,_86275_ssc);
	return _86317_scope;
}



inline jule::Ptr<_204edc645_Scope> _204eeb621_checkIterScope(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Uintptr _86834_it, jule::Ptr<_204351504_ScopeTree>& _86852_tree) {
	jule::Ptr<_204ee42a6_scopeChecker> _86917_ssc = _2050042d8_newChildChecker(_self_);;
	return _204eeb269_checkIterScopeSc(_self_, _86834_it,_86852_tree,_86917_ssc);
}



inline void _204eeb896_checkInfIter(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_2043549e1_Iter>& _87337_it) {
	jule::Ptr<_204edd48c_InfIter> _87417_kind = jule::new_ptr<_204edd48c_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_87417_kind));;
	_87417_kind.get()._field_Scope=_204eeb621_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87417_kind)),_87337_it.get()._field_Scope);
}



inline void _204eebb1b_checkWhileIter(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_2043549e1_Iter>& _87939_it) {
	jule::Ptr<_2043552b6_WhileKind> _88017_wh = _87939_it.get()._field_Kind.operator jule::Ptr<_2043552b6_WhileKind>();;
	if (((_88017_wh.get()._field_Expr == nullptr) && (_88017_wh.get()._field_Next == nullptr))) {
		_204eeb896_checkInfIter(_self_, _87939_it);
		return;;
	};
	jule::Ptr<_204edd910_WhileIter> _88617_kind = jule::new_ptr<_204edd910_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_88617_kind));;
	_88617_kind.get()._field_Scope=_204eeb621_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_88617_kind)),_87939_it.get()._field_Scope);
	if ((_88017_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_20507eb49_Data> _89121_d = _20509c0d9_evalExpr(_20501d610_eval(_self_.get()._field_s, jule::Trait<_2050c6520_Lookup>(_self_, 0)), _88017_wh.get()._field_Expr);;
		if ((_89121_d == nullptr)) {
			return;;
		};
		jule::Ptr<_2050b03b6_Prim> _89617_prim = _2050aca01_Prim(_89121_d.get()._field_Kind.ptr());;
		if ((_89617_prim == nullptr)) {
			_205016c24_pushErr(_self_.get()._field_s.ptr(), _87939_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_2050b3386_IsBool(_89617_prim.ptr())))) {
			_205016c24_pushErr(_self_.get()._field_s.ptr(), _87939_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_88617_kind.get()._field_Expr=_89121_d.get()._field_Model;
	};
	if (_204355618_IsWhileNext(_88017_wh.ptr())) {
		if ((!(_204edbb72_isValidAstStForNextSt(_88017_wh.get()._field_Next)))) {
			_205016c24_pushErr(_self_.get()._field_s.ptr(), _88017_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _91617_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_205002d20_checkNode(_self_, _88017_wh.get()._field_Next);
		if ((_91617_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91925_st = _self_.get()._field_scope.get()._field_Stmts[_91617_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL,_91617_n);
			if ((!(_204edbe19_isValidStForNextSt(_91925_st)))) {
				_205016c24_pushErr(_self_.get()._field_s.ptr(), _88017_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_88617_kind.get()._field_Next=_91925_st;
		};
	};
}



inline void _204eebd91_checkRangeIter(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_2043549e1_Iter>& _92939_it) {
	jule::Ptr<_204355b57_RangeKind> _93017_rang = _92939_it.get()._field_Kind.operator jule::Ptr<_204355b57_RangeKind>();;
	jule::Ptr<_20507eb49_Data> _93217_d = _20509c0d9_evalExpr(_20501d610_eval(_self_.get()._field_s, jule::Trait<_2050c6520_Lookup>(_self_, 0)), _93017_rang.get()._field_Expr);;
	if ((_93217_d == nullptr)) {
		return;;
	};
	jule::Ptr<_204ede2e5_RangeIter> _93717_kind = jule::new_ptr<_204ede2e5_RangeIter>(_204ede2e5_RangeIter{._field_Expr=_93217_d, });;
	_205070cb1_rangeChecker _94117_rc = _205070cb1_rangeChecker{._field_sc=_self_, ._field_rang=_93017_rang, ._field_Kind=_93717_kind, ._field_d=_93217_d};;
	jule::Bool _94713_ok = _205072675_check(&_94117_rc);;
	if ((!(_94713_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_93717_kind));;
	jule::Ptr<_204ee42a6_scopeChecker> _95417_ssc = _2050042d8_newChildChecker(_self_);;
	jule::Ptr<_204edc645_Scope> _95517_scope = _204ee8b6d_getChild(_self_.ptr());;
	if ((_93717_kind.get()._field_KeyA != nullptr)) {
		if (((!(_2050165d6_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _204ee840e_isDuplicatedIdent(_self_.ptr(), 0LLU,_93717_kind.get()._field_KeyA.get()._field_Ident))) {
			_205016c24_pushErr(_self_.get()._field_s.ptr(), _93717_kind.get()._field_KeyA.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_93717_kind.get()._field_KeyA.get()._field_Ident)}));
			_205017043_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_93717_kind.get()._field_KeyA.get()._field_Scope=_95517_scope;
		_95417_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95417_ssc.get()._field_table.get()._field_Vars,1);_95417_ssc.get()._field_table.get()._field_Vars.__push(_93717_kind.get()._field_KeyA);;
	};
	if ((_93717_kind.get()._field_KeyB != nullptr)) {
		if (((!(_2050165d6_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _204ee840e_isDuplicatedIdent(_self_.ptr(), 0LLU,_93717_kind.get()._field_KeyB.get()._field_Ident))) {
			_205016c24_pushErr(_self_.get()._field_s.ptr(), _93717_kind.get()._field_KeyB.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_93717_kind.get()._field_KeyB.get()._field_Ident)}));
			_205017043_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_93717_kind.get()._field_KeyB.get()._field_Scope=_95517_scope;
		_95417_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95417_ssc.get()._field_table.get()._field_Vars,1);_95417_ssc.get()._field_table.get()._field_Vars.__push(_93717_kind.get()._field_KeyB);;
	};
	_204eead18_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_93717_kind)),_92939_it.get()._field_Scope,_95517_scope,_95417_ssc);
	_93717_kind.get()._field_Scope=_95517_scope;
}



inline void _204eec116_checkIter(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_2043549e1_Iter> _97933_it) {
	if (_204354d43_IsInf(_97933_it.ptr())) {
		_204eeb896_checkInfIter(_self_, _97933_it);
		return;;
	};
	{
		auto &_match_expr{ _97933_it.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_2043552b6_WhileKind>>()) {
			_case_begin_1dae81cc9:;
			{
				_204eebb1b_checkWhileIter(_self_, _97933_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204355b57_RangeKind>>()) {
			_case_begin_1dae8113b:;
			{
				_204eebd91_checkRangeIter(_self_, _97933_it);
			}
		}
		else {
			_case_begin_1dae816e1:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1dae8104d:;
	};
}



inline jule::Bool _204eec424_checkValidContLabel(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Uintptr _99539_it) {
	jule::Ptr<_204ee42a6_scopeChecker> _99617_scope = _self_;;
	_julec_label_iter:;
	if ((_99617_scope.get()._field_it == _99539_it)) {
		return true;
	};
	if ((_99617_scope.get()._field_parent != nullptr)) {
		_99617_scope=_99617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _204eec732_checkValidBreakLabel(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Uintptr _101140_ptr) {
	jule::Ptr<_204ee42a6_scopeChecker> _101217_scope = _self_;;
	_julec_label_iter:;
	if ((_101217_scope.get()._field_it == _101140_ptr)) {
		return true;
	};
	if ((_101217_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _102017_mtch = static_cast<jule::Uintptr>(((_204ee1ddb_Case*)(_101217_scope.get()._field_cse))->_field_Owner);;
		if ((_102017_mtch == _101140_ptr)) {
			return true;
		};
	};
	if ((_101217_scope.get()._field_parent != nullptr)) {
		_101217_scope=_101217_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_204ede6e1_ContSt> _204eeca40_checkContValidScope(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_2043563b6_ContSt> _103439_c) {
	if (_204ee7155_isDeferred(_self_)) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _103439_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_103439_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_204ede6e1_ContSt>();
	};
	jule::Ptr<_204ee42a6_scopeChecker> _104417_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_104417_scope.get()._field_it == 0LLU) && (_104417_scope.get()._field_parent != nullptr)) && (_104417_scope.get()._field_owner == nullptr))) {
			_case_begin_1dae89892:;
			{
				_104417_scope=_104417_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_104417_scope.get()._field_it != 0LLU)) {
			_case_begin_1dae89919:;
			{
				return jule::new_ptr<_204ede6e1_ContSt>(_204ede6e1_ContSt{._field_It=_104417_scope.get()._field_it});
			}
		}
		_match_end_1dae897d7:;
	};
	_205016c24_pushErr(_self_.get()._field_s.ptr(), _103439_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _204eeccb5_checkCont(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_2043563b6_ContSt> _105829_c) {
	jule::Ptr<_204ede6e1_ContSt> _105917_cont = _204eeca40_checkContValidScope(_self_, _105829_c);;
	if ((_105917_cont == nullptr)) {
		return;;
	};
	if ((_105829_c.get()._field_Label != nullptr)) {
		jule::Ptr<_204ee301e_scopeLabel> _106521_label = _204ed9d4b_findLabelParent(_105829_c.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
		if ((_106521_label == nullptr)) {
			_205016c24_pushErr(_self_.get()._field_s.ptr(), _105829_c.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_105829_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		_106521_label.get()._field_used=true;
		if (((_106521_label.get()._field_pos + 1LL) >= _106521_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_205016c24_pushErr(_self_.get()._field_s.ptr(), _105829_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105829_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		jule::I64 _107817_i = (_106521_label.get()._field_pos + 1LL);;
		if ((_107817_i >= _106521_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_205016c24_pushErr(_self_.get()._field_s.ptr(), _105829_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _108225_st = _106521_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_107817_i];;
			{
				auto &_match_expr{ _108225_st };
				
				if (_match_expr.type_is<jule::Ptr<_204edd48c_InfIter>>()) {
					_case_begin_1dae920a3:;
					{
						_105917_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108225_st.operator jule::Ptr<_204edd48c_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_204ede2e5_RangeIter>>()) {
					_case_begin_1dae93bed:;
					{
						_105917_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108225_st.operator jule::Ptr<_204ede2e5_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_204edd910_WhileIter>>()) {
					_case_begin_1dae93c64:;
					{
						_105917_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108225_st.operator jule::Ptr<_204edd910_WhileIter>()));
					}
				}
				else {
					_case_begin_1dae93aaa:;
					{
						_205016c24_pushErr(_self_.get()._field_s.ptr(), _105829_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105829_c.get()._field_Label.get()._field_Kind)}));
					}
				}
				_match_end_1dae9399a:;
			};
		};
	};
	if ((_105917_cont.get()._field_It != 0LLU)) {
		if ((!(_204eec424_checkValidContLabel(_self_, _105917_cont.get()._field_It)))) {
			_205016c24_pushErr(_self_.get()._field_s.ptr(), _105829_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105829_c.get()._field_Label.get()._field_Kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_105917_cont));;
}



inline void _204eed03a_checkLabel(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_20434dc1b_LabelSt> _110534_l) {
	if ((_204ee793b_findLabel(_self_.ptr(), _110534_l.get()._field_Ident) != nullptr)) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _110534_l.get()._field_Token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_110534_l.get()._field_Ident)}));
		return;;
	};
	jule::Ptr<_204eded84_Label> _111117_label = jule::new_ptr<_204eded84_Label>(_204eded84_Label{._field_Ident=_110534_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_111117_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_204ee301e_scopeLabel>>::make({jule::new_ptr<_204ee301e_scopeLabel>(_204ee301e_scopeLabel{._field_token=_110534_l.get()._field_Token, ._field_label=_111117_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _204eed2b0_pushGoto(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_20434e0c3_GotoSt> _112432_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_204ee0170_GotoSt>(_204ee0170_GotoSt{._field_Ident=_112432_gt.get()._field_Label.get()._field_Kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_204ee3492_scopeGoto>>::make({jule::new_ptr<_204ee3492_scopeGoto>(_204ee3492_scopeGoto{._field_gt=_112432_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _204eed535_checkPostfix(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204350008_AssignSt> _113636_a) {
	if ((_113636_a.get()._field_Left.len() > 1LL)) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _113636_a.get()._field_Setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_204345a8c_Expr> _114217_expr = _113636_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_20507eb49_Data> _114317_d = _20509c0d9_evalExpr(_20501d610_eval(_self_.get()._field_s, jule::Trait<_2050c6520_Lookup>(_self_, 0)), _114217_expr);;
	if ((_114317_d == nullptr)) {
		return;;
	};
	_204edb8ca_checkAssign(_self_.get()._field_s,_114317_d,nullptr,_113636_a.get()._field_Setter);
	if ((_2050acec9_Ptr(_114317_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_2050b71ae_Ptr> _115121_ptr = _2050acec9_Ptr(_114317_d.get()._field_Kind.ptr());;
		if (_2050b7b82_IsUnsafe(_115121_ptr.ptr())) {
			_205016c24_pushErr(_self_.get()._field_s.ptr(), _113636_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_113636_a.get()._field_Setter.get()._field_Kind),jule::Any(_2050aacda_Str(_114317_d.get()._field_Kind.ptr()))}));
			return;;
		};
	} else {
		if (((_2050aca01_Prim(_114317_d.get()._field_Kind.ptr()) == nullptr) || (!(_204ebe56c_IsNum(_2050aca01_Prim(_114317_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_205016c24_pushErr(_self_.get()._field_s.ptr(), _113636_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_113636_a.get()._field_Setter.get()._field_Kind),jule::Any(_2050aacda_Str(_114317_d.get()._field_Kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_204ee0527_Postfix>(_204ee0527_Postfix{._field_Expr=_114317_d.get()._field_Model, ._field_Op=_113636_a.get()._field_Setter.get()._field_Kind})));;
}



inline jule::Bool _204eed843_isNewAssignIdent(_204ee42a6_scopeChecker* _self_, jule::Str _116935_ident) {
	if ((_202b8be1d_IsIgnoreIdent(_116935_ident) || _116935_ident.empty())) {
		return false;
	};
	return (_20507cdbc_defByIdent((*_self_)._field_table.ptr(), _116935_ident,false) == nullptr);
}



inline jule::Bool _204eedc94_checkStructureAssignOp(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_20435cc5d_StructIns>& _117647_s, jule::Ptr<_204350008_AssignSt>& _117667_a, jule::Ptr<_20507eb49_Data>& _117686_r) {
	jule::Ptr<_204ec7454_FnIns> _117917_overload = nullptr;;
	{
		auto &_match_expr{ _117667_a.get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1daea8ad1:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1daea8b47:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1daea8bad:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1daea8c24:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1daea79c0:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1daea7a36:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1daea7a9c:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1daea7b13:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1daea8dcd:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1daea8e44:;
			{
				_117917_overload=_117647_s.get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1daea7838:;
			{
				_205016c24_pushErr(_self_.get()._field_s.ptr(), _117667_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_117667_a.get()._field_Setter.get()._field_Kind),jule::Any(_204326be4_Str(_117647_s.ptr()))}));
				return false;
			}
		}
		_match_end_1daea73b5:;
	};
	if ((_117917_overload == nullptr)) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _117667_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_117667_a.get()._field_Setter.get()._field_Kind),jule::Any(_204326be4_Str(_117647_s.ptr()))}));
		return false;
	};
	jule::Ptr<_204ec7267_ParamIns> _121117_p = _117917_overload.get()._field_Params[1LL];;
	return _20501db0a_checkAssignType(_self_.get()._field_s, _121117_p.get()._field_Decl.get()._field_Reference,_121117_p.get()._field_Kind,_117686_r,_117667_a.get()._field_Setter);
}



inline void _204eee019_checkSingleAssign(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204350008_AssignSt>& _121542_a) {
	jule::Ptr<_20507eb49_Data> _121617_l = nullptr;;
	if ((!(_202b8be1d_IsIgnoreIdent(_121542_a.get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_204345a8c_Expr> _121921_expr = _121542_a.get()._field_Left[0LL].get()._field_Expr;;
		_121617_l=_20509c0d9_evalExpr(_20501d610_eval(_self_.get()._field_s, jule::Trait<_2050c6520_Lookup>(_self_, 0)), _121921_expr);
		if ((_121617_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_2050816b7_Eval> _122617_eval = nullptr;;
	if ((_121617_l != nullptr)) {
		_122617_eval=_20501d302_evalp(_self_.get()._field_s, jule::Trait<_2050c6520_Lookup>(_self_, 0),_121617_l.get()._field_Kind);
	} else {
		_122617_eval=_20501d610_eval(_self_.get()._field_s, jule::Trait<_2050c6520_Lookup>(_self_, 0));
	};
	_122617_eval.get()._field_unsafety=_204ee673c_isUnsafe(_self_);
	jule::Ptr<_20507eb49_Data> _123317_r = _20509c0d9_evalExpr(_122617_eval, _121542_a.get()._field_Right);;
	if ((_123317_r == nullptr)) {
		return;;
	};
	if ((_121617_l == nullptr)) {
		if (_2050aba77_Void(_123317_r.get()._field_Kind.ptr())) {
			_205016c24_pushErr(_self_.get()._field_s.ptr(), _121542_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_123317_r));;
		return;;
	};
	if ((!(_204edb8ca_checkAssign(_self_.get()._field_s,_121617_l,_123317_r,_121542_a.get()._field_Setter)))) {
		return;;
	};
	if ((_2050ae690_Tup(_123317_r.get()._field_Kind.ptr()) != nullptr)) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _121542_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_204ec133d_OperandExprModel> _125517_lm = jule::new_ptr<_204ec133d_OperandExprModel>(_204ec133d_OperandExprModel{._field_Kind=_121617_l.get()._field_Kind, ._field_Model=_121617_l.get()._field_Model});;
	jule::Ptr<_204ec133d_OperandExprModel> _125917_rm = jule::new_ptr<_204ec133d_OperandExprModel>(_204ec133d_OperandExprModel{._field_Kind=_123317_r.get()._field_Kind, ._field_Model=_123317_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_204ee099a_Assign>(_204ee099a_Assign{._field_L=_125517_lm, ._field_R=_125917_rm, ._field_Op=_121542_a.get()._field_Setter})));;
	if ((_121542_a.get()._field_Setter.get()._field_Kind != jule::Str("=", 1))) {
		jule::Ptr<_20435cc5d_StructIns> _126621_strct = _2050ade53_Struct(_121617_l.get()._field_Kind.ptr());;
		if ((_126621_strct != nullptr)) {
			_204eedc94_checkStructureAssignOp(_self_, _126621_strct,_121542_a,_123317_r);
			return;;
		};
		_121542_a.get()._field_Setter.get()._field_Kind=_121542_a.get()._field_Setter.get()._field_Kind.slice(0LL,(_121542_a.get()._field_Setter.get()._field_Kind.len() - 1LL));
		_20509e2ea_binaryEval _127321_solver = static__20509ec02_new(_122617_eval,_121542_a.get()._field_Setter);;
		_123317_r=_2050a4883_solveExplicit(&_127321_solver, _121617_l,_123317_r);
		if ((_123317_r == nullptr)) {
			return;;
		};
		_121542_a.get()._field_Setter.get()._field_Kind+=jule::Str("=", 1);
		return;;
	};
	_2050655ad_assignTypeChecker _128217_checker = _2050655ad_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_121617_l.get()._field_Kind, ._field_d=_123317_r, ._field_errorToken=_121542_a.get()._field_Setter};;
	if (_205066735_check(&_128217_checker)) {
		_125917_rm.get()._field_Model=_123317_r.get()._field_Model;
		_125517_lm.get()._field_Model=_121617_l.get()._field_Model;
	};
}



inline void _204eee547_processEndPartOfMultiAssign(_204ee42a6_scopeChecker* _self_, jule::Ptr<_204ee0d52_MultiAssign>& _129451_st, jule::Ptr<_204350008_AssignSt>& _129514_a, jule::Ptr<_20434e9b9_AssignLeft>& _129533_lexpr, jule::Ptr<_20507eb49_Data>& _129558_l, jule::Ptr<_20507eb49_Data>& _129573_r) {
	if (_202b8be1d_IsIgnoreIdent(_129533_lexpr.get()._field_Ident)) {
		if (_2050aba77_Void(_129573_r.get()._field_Kind.ptr())) {
			_205016c24_pushErr((*_self_)._field_s.ptr(), _129514_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_129451_st.get()._field_L = jule::alloc_for_append(_129451_st.get()._field_L,1);_129451_st.get()._field_L.__push(nullptr);;
		return;;
	};
	if ((_129514_a.get()._field_Declarative && _204eed843_isNewAssignIdent(&(*_self_), _129533_lexpr.get()._field_Ident))) {
		if (_204ee840e_isDuplicatedIdent(&(*_self_), 0LLU,_129533_lexpr.get()._field_Ident)) {
			_205016c24_pushErr((*_self_)._field_s.ptr(), _129533_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129533_lexpr.get()._field_Ident)}));
			_205017043_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_204ee6b7c_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_205031cb6_Var> _131321_v = jule::new_ptr<_205031cb6_Var>(_205031cb6_Var{._field_Scope=(*_self_)._field_scope, ._field_Token=_129533_lexpr.get()._field_Token, ._field_Ident=_129533_lexpr.get()._field_Ident, ._field_Mutable=_129533_lexpr.get()._field_Mutable, ._field_Reference=_129533_lexpr.get()._field_Reference, ._field_Value=jule::new_ptr<_205080bc2_Value>(_205080bc2_Value{._field_Expr=_129514_a.get()._field_Right, ._field_Data=_129573_r}), });;
		_20502950b_checkVar((*_self_)._field_s, _131321_v);
		_129451_st.get()._field_L = jule::alloc_for_append(_129451_st.get()._field_L,1);_129451_st.get()._field_L.__push(static_cast<jule::Any>(_131321_v));;
		(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_131321_v);;
		(*_self_)._field_scope.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_Stmts,1);(*_self_)._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_131321_v));;
		return;;
	};
	if ((_129533_lexpr.get()._field_Mutable || _129533_lexpr.get()._field_Reference)) {
		_205016c24_pushErr((*_self_)._field_s.ptr(), _129533_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129533_lexpr.get()._field_Ident)}));
		_205017043_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_204edb8ca_checkAssign((*_self_)._field_s,_129558_l,_129573_r,_129514_a.get()._field_Setter)))) {
		return;;
	};
	;
	_205021844_checkValidityForInitExpr((*_self_)._field_s, _129558_l.get()._field_Mutable,false,_129558_l.get()._field_Kind,_129573_r,_129514_a.get()._field_Setter);
	_2050655ad_assignTypeChecker _134717_checker = _2050655ad_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_129558_l.get()._field_Kind, ._field_d=_129573_r, ._field_errorToken=_129514_a.get()._field_Setter};;
	_205066735_check(&_134717_checker);
	_129451_st.get()._field_L = jule::alloc_for_append(_129451_st.get()._field_L,1);_129451_st.get()._field_L.__push(_129558_l.get()._field_Model);;
}



inline void _204eee7cd_checkMultiAssign(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204350008_AssignSt>& _135741_a) {
	jule::Ptr<_20507eb49_Data> _135817_rd = _20509c0d9_evalExpr(_20501d610_eval(_self_.get()._field_s, jule::Trait<_2050c6520_Lookup>(_self_, 0)), _135741_a.get()._field_Right);;
	if ((_135817_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_20507eb49_Data>> _136217_right = _204edab0a_getDatasFromTupleData(_135817_rd);;
	if ((_136217_right.len() == 1LL)) {
		{
			auto &_match_expr{ _136217_right[0LL].get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_204ec2581_IndexingExprModel>>()) {
				_case_begin_1daecb593:;
				{
					jule::Ptr<_204ec2581_IndexingExprModel> _136625_iem = _136217_right[0LL].get()._field_Model.operator jule::Ptr<_204ec2581_IndexingExprModel>();;
					if ((_2050ae42b_Map(_136625_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_136217_right=jule::Slice<jule::Ptr<_20507eb49_Data>>::make({jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=_2050ae42b_Map(_136625_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), })});
					};
				}
			}
			_match_end_1daecb4e9:;
		};
	};
	{
		
		if ((_135741_a.get()._field_Left.len() > _136217_right.len())) {
			_case_begin_1daecb8d4:;
			{
				_205016c24_pushErr(_self_.get()._field_s.ptr(), _135741_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_135741_a.get()._field_Left.len() < _136217_right.len())) {
			_case_begin_1daecb94a:;
			{
				_205016c24_pushErr(_self_.get()._field_s.ptr(), _135741_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1daecaa37:;
	};
	jule::Ptr<_204ee0d52_MultiAssign> _138517_st = jule::new_ptr<_204ee0d52_MultiAssign>(_204ee0d52_MultiAssign{._field_R=_135817_rd.get()._field_Model});;
	{
		auto &expr = _135741_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_1daed117a:;
		if (it != expr.end()) {
			jule::I64 _138813_i = it - expr.begin();
			{
				jule::Ptr<_20434e9b9_AssignLeft> _138921_lexpr = _135741_a.get()._field_Left[_138813_i];;
				jule::Ptr<_20507eb49_Data> _139021_l = nullptr;;
				if (((!(_202b8be1d_IsIgnoreIdent(_138921_lexpr.get()._field_Ident))) && ((!(_135741_a.get()._field_Declarative)) || (!(_204eed843_isNewAssignIdent(_self_.ptr(), _138921_lexpr.get()._field_Ident)))))) {
					_139021_l=_20509c0d9_evalExpr(_20501d610_eval(_self_.get()._field_s, jule::Trait<_2050c6520_Lookup>(_self_, 0)), _138921_lexpr.get()._field_Expr);
					if ((_139021_l == nullptr)) {
						goto _iter_next_1daed117a;
					};
				};
				jule::Ptr<_20507eb49_Data> _139821_r = _136217_right[_138813_i];;
				_204eee547_processEndPartOfMultiAssign(_self_.ptr(), _138517_st,_135741_a,_138921_lexpr,_139021_l,_139821_r);
			}
			_iter_next_1daed117a:;
			++it;
			_138813_i++;
			goto _iter_begin_1daed117a;
		}
		_iter_end_1daed117a:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_138517_st));;
}



inline void _204eeea53_checkAssignSt(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204350008_AssignSt> _140437_a) {
	{
		
		if (_202b8deb9_IsPostfixOp(_140437_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1daed58cc:;
			{
				_204eed535_checkPostfix(_self_, _140437_a);
			}
		}
		else if (((_140437_a.get()._field_Left.len() == 1LL) && (!(_140437_a.get()._field_Declarative)))) {
			_case_begin_1daed5624:;
			{
				_204eee019_checkSingleAssign(_self_, _140437_a);
			}
		}
		else {
			_case_begin_1daed505d:;
			{
				_204eee7cd_checkMultiAssign(_self_, _140437_a);
			}
		}
		_match_end_1daed4e81:;
	};
}



inline jule::Ptr<_204edc645_Scope> _204eeee0a_checkCaseScope(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204ee1ddb_Case>& _141535_c, jule::Ptr<_204351504_ScopeTree>& _141550_tree) {
	jule::Ptr<_204ee42a6_scopeChecker> _141617_ssc = _2050042d8_newChildChecker(_self_);;
	_141617_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_141535_c));
	return _204ee93dd_checkChildSc(_self_, _141550_tree,_141617_ssc);
}



inline jule::Ptr<_204ee1ddb_Case> _205000405_checkCase(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204ee1391_Match> _142133_m, jule::I64 _142144_i, jule::Ptr<_204357cad_Case> _142156_c, jule::Ptr<_20507eb49_Data> _142175_expr) {
	jule::Ptr<_204ee1ddb_Case> _142217_case = _142133_m.get()._field_Cases[_142144_i];;
	_142217_case.get()._field_Exprs=jule::Slice<jule::Ptr<_20507eb49_Data>>::alloc(0LL,_142156_c.get()._field_Exprs.len());
	jule::Bool _142417_genericMatched = false;;
	jule::Ptr<_2050816b7_Eval> _142517_eval = _20501d610_eval(_self_.get()._field_s, jule::Trait<_2050c6520_Lookup>(_self_, 0));;
	{
		auto &expr = _142156_c.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1daedacde:;
		if (it != expr.end()) {
			jule::Ptr<_204345a8c_Expr> _142621_e = *it;
			{
				jule::Ptr<_20507eb49_Data> _142721_d = _20509b9bd_evalExprKind(_142517_eval, _142621_e.get()._field_Kind);;
				if ((_142721_d == nullptr)) {
					goto _iter_next_1daedacde;
				};
				if (_142133_m.get()._field_TypeMatch) {
					_142217_case.get()._field_Exprs = jule::alloc_for_append(_142217_case.get()._field_Exprs,1);_142217_case.get()._field_Exprs.__push(_142721_d);;
					if ((_204eda863_countMatchType(_142133_m,_142721_d.get()._field_Kind) > 1LL)) {
						_205016c24_pushErr(_self_.get()._field_s.ptr(), _142621_e.get()._field_Token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_142721_d.get()._field_Kind.ptr()))}));
					};
					if (_142175_expr.get()._field_Kind.get()._field_Generic) {
						_142417_genericMatched=(_142417_genericMatched || _2050ab0e8_Equals(_142175_expr.get()._field_Kind, _142721_d.get()._field_Kind));
					} else {
						if ((_2050ad4a2_TypeEnum(_142175_expr.get()._field_Kind.ptr()) != nullptr)) {
							_20501e05b_checkTypeCompatibility(_self_.get()._field_s, _142175_expr.get()._field_Kind,_142721_d.get()._field_Kind,_142621_e.get()._field_Token);
						} else {
							jule::Ptr<_204ece8e0_Trait> _144229_trt = _2050ae1b7_Trait(_142175_expr.get()._field_Kind.ptr());;
							if ((_144229_trt != nullptr)) {
								_20501e05b_checkTypeCompatibility(_self_.get()._field_s, _142175_expr.get()._field_Kind,_142721_d.get()._field_Kind,_142621_e.get()._field_Token);
							};
						};
					};
					goto _iter_next_1daedacde;
				};
				if (_142721_d.get()._field_Decl) {
					_205016c24_pushErr(_self_.get()._field_s.ptr(), _142621_e.get()._field_Token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_205017043_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1daedacde;
				};
				_142217_case.get()._field_Exprs = jule::alloc_for_append(_142217_case.get()._field_Exprs,1);_142217_case.get()._field_Exprs.__push(_142721_d);;
				_2050655ad_assignTypeChecker _146021_checker = _2050655ad_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_142175_expr.get()._field_Kind, ._field_d=_142721_d, ._field_errorToken=_142621_e.get()._field_Token};;
				_205066735_check(&_146021_checker);
			}
			_iter_next_1daedacde:;
			++it;
			goto _iter_begin_1daedacde;
		}
		_iter_end_1daedacde:;
	};
	if ((((!(_142133_m.get()._field_TypeMatch)) || (!(_142175_expr.get()._field_Kind.get()._field_Generic))) || _142417_genericMatched)) {
		_142217_case.get()._field_Scope=_204eeee0a_checkCaseScope(_self_, _142217_case,_142156_c.get()._field_Scope);
	};
	return _142217_case;
}



inline void _2050007bd_checkCases(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204358484_MatchCase>& _147435_m, jule::Ptr<_204ee1391_Match> _147454_rm, jule::Ptr<_20507eb49_Data> _147470_expr) {
	_147454_rm.get()._field_Cases=jule::Slice<jule::Ptr<_204ee1ddb_Case>>::alloc(0LL,_147435_m.get()._field_Cases.len());
	{
		auto &expr = _147435_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1daee5425:;
		if (it != expr.end()) {
			jule::I64 _147613_i = it - expr.begin();
			{
				jule::Ptr<_204ee1ddb_Case> _147721_case = jule::new_ptr<_204ee1ddb_Case>(_204ee1ddb_Case{._field_Owner=_147454_rm, });;
				if ((_147613_i > 0LL)) {
					_147454_rm.get()._field_Cases[(_147613_i - 1LL)].get()._field_Next=_147721_case;
				};
				_147454_rm.get()._field_Cases = jule::alloc_for_append(_147454_rm.get()._field_Cases,1);_147454_rm.get()._field_Cases.__push(_147721_case);;
			}
			_iter_next_1daee5425:;
			++it;
			_147613_i++;
			goto _iter_begin_1daee5425;
		}
		_iter_end_1daee5425:;
	};
	if (((_147454_rm.get()._field_Default != nullptr) && (_147435_m.get()._field_Cases.len() > 0LL))) {
		_147454_rm.get()._field_Cases[(_147454_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_147454_rm.get()._field_Default;
	};
	{
		auto &expr = _147435_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1daee87ad:;
		if (it != expr.end()) {
			jule::I64 _149014_i = it - expr.begin();
			jule::Ptr<_204357cad_Case> _149021_c = *it;
			{
				_205000405_checkCase(_self_, _147454_rm,_149014_i,_149021_c,_147470_expr);
			}
			_iter_next_1daee87ad:;
			++it;
			_149014_i++;
			goto _iter_begin_1daee87ad;
		}
		_iter_end_1daee87ad:;
	};
}



inline jule::Ptr<_204ee1ddb_Case> _205000b75_checkDefault(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204ee1391_Match> _149536_m, jule::Ptr<_204356be1_Else> _149551_d) {
	jule::Ptr<_204ee1ddb_Case> _149617_def = jule::new_ptr<_204ee1ddb_Case>(_204ee1ddb_Case{._field_Owner=_149536_m, });;
	_149617_def.get()._field_Scope=_204eeee0a_checkCaseScope(_self_, _149617_def,_149551_d.get()._field_Scope);
	return _149617_def;
}



inline void _205000dea_checkComptimePanic(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204edc645_Scope>& _150339_s) {
	if ((_150339_s.get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _150813_stmt = _150339_s.get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _150813_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_20507eb49_Data>>()) {
			_case_begin_1daeebd22:;
			{
				jule::Ptr<_20507eb49_Data> _151117_d = _150813_stmt.operator jule::Ptr<_20507eb49_Data>();;
				{
					auto &_match_expr{ _151117_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_204ec486e_BuiltinPanicCallExprModel>>()) {
						_case_begin_1daeecc13:;
						{
							jule::Ptr<_204ec486e_BuiltinPanicCallExprModel> _151421_m = _151117_d.get()._field_Model.operator jule::Ptr<_204ec486e_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _151421_m.get()._field_Expr };
								
								if (_match_expr.type_is<jule::Ptr<_2044102b6_Const>>()) {
									_case_begin_1daeedc58:;
									{
										jule::Ptr<_2044102b6_Const> _151725_c = _151421_m.get()._field_Expr.operator jule::Ptr<_2044102b6_Const>();;
										if (_2044610e7_IsStr(_151725_c.ptr())) {
											jule::Ptr<_204ee42a6_scopeChecker> _151933_root = _204ee762d_getHardRoot(_self_);;
											_205016c24_pushErr(_self_.get()._field_s.ptr(), _151933_root.get()._field_calledFrom,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_204461834_ReadStr(_151725_c.ptr()))}));
										};
									}
								}
								_match_end_1daeeda38:;
							};
						}
					}
					_match_end_1daeecbad:;
				};
			}
		}
		_match_end_1daeebb8a:;
	};
}



inline void _205001219_pushTypeMatch(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204ee1391_Match> _152737_tm, jule::Ptr<_204358484_MatchCase>& _152754_m) {
	if (_152737_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto &expr = _152737_tm.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1daeed142:;
			if (it != expr.end()) {
				jule::Ptr<_204ee1ddb_Case> _153125_c = *it;
				{
					if ((_153125_c.get()._field_Scope != nullptr)) {
						_205000dea_checkComptimePanic(_self_, _153125_c.get()._field_Scope);
						_152737_tm.get()._field_Default=_153125_c;
						_152737_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1daeed142:;
				++it;
				goto _iter_begin_1daeed142;
			}
			_iter_end_1daeed142:;
		};
		if ((_152754_m.get()._field_Default != nullptr)) {
			_152737_tm.get()._field_Cases=nullptr;
			_152737_tm.get()._field_Default=_205000b75_checkDefault(_self_, _152737_tm,_152754_m.get()._field_Default);
			if ((_152737_tm.get()._field_Default != nullptr)) {
				_205000dea_checkComptimePanic(_self_, _152737_tm.get()._field_Default.get()._field_Scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_152737_tm));;
}



inline void _20500148e_checkTypeMatch(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204358484_MatchCase>& _155139_m) {
	jule::Ptr<_20507eb49_Data> _155217_d = _20509bccb_eval(_20501d610_eval(_self_.get()._field_s, jule::Trait<_2050c6520_Lookup>(_self_, 0)), _155139_m.get()._field_Expr);;
	if ((_155217_d == nullptr)) {
		return;;
	};
	if (((!(_155217_d.get()._field_Kind.get()._field_Generic)) && (!(((((_2050aca01_Prim(_155217_d.get()._field_Kind.ptr()) != nullptr) && _2050b385e_IsAny(_2050aca01_Prim(_155217_d.get()._field_Kind.ptr()).ptr())) || (_2050ae1b7_Trait(_155217_d.get()._field_Kind.ptr()) != nullptr)) || (_2050ad4a2_TypeEnum(_155217_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _155139_m.get()._field_Expr.get()._field_Token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_204ee1391_Match> _156317_tm = jule::new_ptr<_204ee1391_Match>(_204ee1391_Match{._field_Expr=_155217_d, ._field_TypeMatch=true, });;
	if (((!(_156317_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && (_155139_m.get()._field_Default != nullptr))) {
		_156317_tm.get()._field_Default=_205000b75_checkDefault(_self_, _156317_tm,_155139_m.get()._field_Default);
	};
	_2050007bd_checkCases(_self_, _155139_m,_156317_tm,_155217_d);
	_205001219_pushTypeMatch(_self_, _156317_tm,_155139_m);
}



inline void _205001714_checkCommonMatch(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204358484_MatchCase>& _157641_m) {
	jule::Ptr<_20507eb49_Data> _157717_d = nullptr;;
	if ((_157641_m.get()._field_Expr == nullptr)) {
		_157717_d=jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__2044521d7_NewBool(true)});
		_157717_d.get()._field_Model=static_cast<jule::Any>(_157717_d.get()._field_Constant);
	} else {
		_157717_d=_20509c0d9_evalExpr(_20501d610_eval(_self_.get()._field_s, jule::Trait<_2050c6520_Lookup>(_self_, 0)), _157641_m.get()._field_Expr);
		if ((_157717_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_204ee1391_Match> _159117_mc = jule::new_ptr<_204ee1391_Match>(_204ee1391_Match{._field_Expr=_157717_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_159117_mc));;
	if ((_157641_m.get()._field_Default != nullptr)) {
		_159117_mc.get()._field_Default=_205000b75_checkDefault(_self_, _159117_mc,_157641_m.get()._field_Default);
	};
	_2050007bd_checkCases(_self_, _157641_m,_159117_mc,_157717_d);
}



inline void _205001989_checkMatch(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204358484_MatchCase> _160334_m) {
	if (_160334_m.get()._field_TypeMatch) {
		_20500148e_checkTypeMatch(_self_, _160334_m);
		return;;
	};
	_205001714_checkCommonMatch(_self_, _160334_m);
}



inline void _205001c0e_checkFall(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_20434e3ae_FallSt> _161129_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _204ee7155_isDeferred(_self_))) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _161129_f.get()._field_Token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_204ee1ddb_Case* _161917_case = ((_204ee1ddb_Case*)(_self_.get()._field_cse));;
	if ((_161917_case->_field_Next == nullptr)) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _161129_f.get()._field_Token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_205017043_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_204ee2491_FallSt>(_204ee2491_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_161917_case->_field_Next))})));;
}



inline jule::Ptr<_204edea98_BreakSt> _20500201c_checkBreakWithLabel(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_20435600e_BreakSt> _163139_b) {
	jule::Ptr<_204edea98_BreakSt> _163217_brk = _20500232a_checkPlainBreak(_self_, _163139_b);;
	if ((_163217_brk == nullptr)) {
		return nullptr;
	};
	_163217_brk.get()._field_It=0LLU;
	_163217_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_204ee301e_scopeLabel> _164217_label = _204ed9d4b_findLabelParent(_163139_b.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
	if ((_164217_label == nullptr)) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _163139_b.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_163139_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	_164217_label.get()._field_used=true;
	if (((_164217_label.get()._field_pos + 1LL) >= _164217_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _163139_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163139_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	jule::I64 _165513_i = (_164217_label.get()._field_pos + 1LL);;
	if ((_165513_i >= _164217_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _163139_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163139_b.get()._field_Label.get()._field_Kind)}));
	} else {
		jule::Any _165921_st = _164217_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_165513_i];;
		{
			auto &_match_expr{ _165921_st };
			
			if (_match_expr.type_is<jule::Ptr<_204edd48c_InfIter>>()) {
				_case_begin_1db02064d:;
				{
					_163217_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_165921_st.operator jule::Ptr<_204edd48c_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_204ede2e5_RangeIter>>()) {
				_case_begin_1db022573:;
				{
					_163217_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_165921_st.operator jule::Ptr<_204ede2e5_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_204edd910_WhileIter>>()) {
				_case_begin_1db0225d9:;
				{
					_163217_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_165921_st.operator jule::Ptr<_204edd910_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_204ee1391_Match>>()) {
				_case_begin_1db022650:;
				{
					_163217_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_165921_st.operator jule::Ptr<_204ee1391_Match>()));
				}
			}
			else {
				_case_begin_1db022430:;
				{
					_205016c24_pushErr(_self_.get()._field_s.ptr(), _163139_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163139_b.get()._field_Label.get()._field_Kind)}));
				}
			}
			_match_end_1db022320:;
		};
	};
	if ((_163217_brk.get()._field_It != 0LLU)) {
		if ((!(_204eec732_checkValidBreakLabel(_self_, _163217_brk.get()._field_It)))) {
			_205016c24_pushErr(_self_.get()._field_s.ptr(), _163139_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163139_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	if ((_163217_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_204eec732_checkValidBreakLabel(_self_, _163217_brk.get()._field_Mtch)))) {
			_205016c24_pushErr(_self_.get()._field_s.ptr(), _163139_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163139_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	return _163217_brk;
}



inline jule::Ptr<_204edea98_BreakSt> _20500232a_checkPlainBreak(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_20435600e_BreakSt> _168935_b) {
	if (_204ee7155_isDeferred(_self_)) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _168935_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_204ee42a6_scopeChecker> _169517_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_169517_scope.get()._field_it == 0LLU) && (_169517_scope.get()._field_cse == 0LLU)) && (_169517_scope.get()._field_parent != nullptr)) && (_169517_scope.get()._field_owner == nullptr))) {
			_case_begin_1db02902a:;
			{
				_169517_scope=_169517_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_169517_scope.get()._field_it != 0LLU)) {
			_case_begin_1db0290a2:;
			{
				return jule::new_ptr<_204edea98_BreakSt>(_204edea98_BreakSt{._field_It=_169517_scope.get()._field_it, });
			}
		}
		else if ((_169517_scope.get()._field_cse != 0LLU)) {
			_case_begin_1db029129:;
			{
				return jule::new_ptr<_204edea98_BreakSt>(_204edea98_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_204ee1ddb_Case*)(_169517_scope.get()._field_cse))->_field_Owner))});
			}
		}
		_match_end_1db028e5e:;
	};
	_205016c24_pushErr(_self_.get()._field_s.ptr(), _168935_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _2050025a0_checkBreak(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_20435600e_BreakSt> _171130_b) {
	if ((_171130_b.get()._field_Label != nullptr)) {
		jule::Ptr<_204edea98_BreakSt> _171321_brk = _20500201c_checkBreakWithLabel(_self_, _171130_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_171321_brk));;
		return;;
	};
	jule::Ptr<_204edea98_BreakSt> _171817_brk = _20500232a_checkPlainBreak(_self_, _171130_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_171817_brk));;
}



inline void _205002825_checkRet(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204354381_RetSt> _172232_r) {
	if (_204ee7155_isDeferred(_self_)) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _172232_r.get()._field_Token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_204ee2914_RetSt> _172717_rt = jule::new_ptr<_204ee2914_RetSt>(_204ee2914_RetSt{._field_Func=_204ee73b9_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_172717_rt));;
	jule::Ptr<_205072e17_retTypeChecker> _173217_rtc = jule::new_ptr<_205072e17_retTypeChecker>(_205072e17_retTypeChecker{._field_sc=_self_, ._field_f=_172717_rt.get()._field_Func, ._field_errorToken=_172232_r.get()._field_Token, });;
	jule::Bool _173713_ok = _205073d08_check(_173217_rtc.ptr(), _172232_r.get()._field_Expr);;
	if ((!(_173713_ok))) {
		return;;
	};
	if (((_172232_r.get()._field_Expr == nullptr) && (_173217_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_172717_rt.get()._field_Vars=_173217_rtc.get()._field_vars;
	if ((_172232_r.get()._field_Expr != nullptr)) {
		_172717_rt.get()._field_Expr=_173217_rtc.get()._field_model;
	};
}



inline void _205002a9a_checkUseExpr(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_20434642d_UseExpr> _175332_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _175332_ue.get()._field_Token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_204ee7155_isDeferred(_self_)) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _175332_ue.get()._field_Token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_205016c24_pushErr(_self_.get()._field_s.ptr(), _175332_ue.get()._field_Token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _205002d20_checkNode(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Any& _176934_node) {
	{
		auto &_match_expr{ _176934_node };
		
		if (_match_expr.type_is<jule::Ptr<_204351504_ScopeTree>>()) {
			_case_begin_1db03849b:;
			{
				_204ee9971_checkAnonScope(_self_, _176934_node.operator jule::Ptr<_204351504_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204353ec9_VarDecl>>()) {
			_case_begin_1db037d6e:;
			{
				_204ee8684_checkVarDecl(_self_, _176934_node.operator jule::Ptr<_204353ec9_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20435783a_TypeAliasDecl>>()) {
			_case_begin_1db03826a:;
			{
				_204ee8909_checkTypeAliasDecl(_self_, _176934_node.operator jule::Ptr<_20435783a_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204345a8c_Expr>>()) {
			_case_begin_1db038633:;
			{
				_204eea015_checkExpr(_self_, _176934_node.operator jule::Ptr<_204345a8c_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204357164_Conditional>>()) {
			_case_begin_1db0387dc:;
			{
				_204eea8a6_checkConditional(_self_, _176934_node.operator jule::Ptr<_204357164_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2043549e1_Iter>>()) {
			_case_begin_1db038853:;
			{
				_204eec116_checkIter(_self_, _176934_node.operator jule::Ptr<_2043549e1_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2043563b6_ContSt>>()) {
			_case_begin_1db0388b9:;
			{
				_204eeccb5_checkCont(_self_, _176934_node.operator jule::Ptr<_2043563b6_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20434dc1b_LabelSt>>()) {
			_case_begin_1db038930:;
			{
				_204eed03a_checkLabel(_self_, _176934_node.operator jule::Ptr<_20434dc1b_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20434e0c3_GotoSt>>()) {
			_case_begin_1db038996:;
			{
				_204eed2b0_pushGoto(_self_, _176934_node.operator jule::Ptr<_20434e0c3_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204350008_AssignSt>>()) {
			_case_begin_1db038a0c:;
			{
				_204eeea53_checkAssignSt(_self_, _176934_node.operator jule::Ptr<_204350008_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204358484_MatchCase>>()) {
			_case_begin_1db038a73:;
			{
				_205001989_checkMatch(_self_, _176934_node.operator jule::Ptr<_204358484_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20434e3ae_FallSt>>()) {
			_case_begin_1db038ad9:;
			{
				_205001c0e_checkFall(_self_, _176934_node.operator jule::Ptr<_20434e3ae_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20435600e_BreakSt>>()) {
			_case_begin_1db038b50:;
			{
				_2050025a0_checkBreak(_self_, _176934_node.operator jule::Ptr<_20435600e_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204354381_RetSt>>()) {
			_case_begin_1db038bb6:;
			{
				_205002825_checkRet(_self_, _176934_node.operator jule::Ptr<_204354381_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20434642d_UseExpr>>()) {
			_case_begin_1db038c2c:;
			{
				_205002a9a_checkUseExpr(_self_, _176934_node.operator jule::Ptr<_20434642d_UseExpr>());
			}
		}
		else {
			_case_begin_1db038006:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1db037e18:;
	};
}



inline void _205002eeb_checkResult(jule::Ptr<_204ee42a6_scopeChecker> _self_) {
	_204350de9_Stmt _180717_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _180717_stmt._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_20434642d_UseExpr>>()) {
			_case_begin_1db042a27:;
			{
				jule::Ptr<_20434642d_UseExpr> _181021_ue = _180717_stmt._field_Data.operator jule::Ptr<_20434642d_UseExpr>();;
				jule::Ptr<_20507eb49_Data> _181121_d = _20509c0d9_evalExpr(_20501d610_eval(_self_.get()._field_s, jule::Trait<_2050c6520_Lookup>(_self_, 0)), _181021_ue.get()._field_Expr);;
				if ((_181121_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_181121_d));;
				jule::Ptr<_205072e17_retTypeChecker> _181621_rtc = jule::new_ptr<_205072e17_retTypeChecker>(_205072e17_retTypeChecker{._field_sc=_self_, ._field_types=_2043c5237_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_181021_ue.get()._field_Expr.get()._field_Token, });;
				_205073d08_check(_181621_rtc.ptr(), _181021_ue.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204345a8c_Expr>>()) {
			_case_begin_1db042a8d:;
			{
				jule::Ptr<_204345a8c_Expr> _182321_expr = _180717_stmt._field_Data.operator jule::Ptr<_204345a8c_Expr>();;
				jule::Ptr<_20507eb49_Data> _182421_d = _20509c0d9_evalExpr(_20501d610_eval(_self_.get()._field_s, jule::Trait<_2050c6520_Lookup>(_self_, 0)), _182321_expr);;
				if ((_182421_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _182421_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel>>()) {
						_case_begin_1db0475ed:;
						{
							jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel> _183025_m = _182421_d.get()._field_Model.operator jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel>();;
							_204ee9c90_processErrorCall(_self_, _183025_m,_182321_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_182421_d));;
						}
					}
					else {
						_case_begin_1db0477a7:;
						{
							return;;
						}
					}
					_match_end_1db047378:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20434e0c3_GotoSt>>() || _match_expr.type_is<jule::Ptr<_20435600e_BreakSt>>() || _match_expr.type_is<jule::Ptr<_2043563b6_ContSt>>() || _match_expr.type_is<jule::Ptr<_204354381_RetSt>>()) {
			_case_begin_1db0421db:;
			{
				_205002d20_checkNode(_self_, _180717_stmt._field_Data);
			}
		}
		else {
			_case_begin_1db042175:;
			{
				_205002d20_checkNode(_self_, _180717_stmt._field_Data);
				return;;
			}
		}
		_match_end_1db041e66:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _2050031c7_checkTree(jule::Ptr<_204ee42a6_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _185217_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_185217_n)--;
	};
	for (; (_self_.get()._field_i < _185217_n); (_self_.get()._field_i)++) {
		{
			_204350de9_Stmt _186021_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_205002d20_checkNode(_self_, _186021_stmt._field_Data);
			if (_204ee6de1_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1db04ae70:;
	}
	_iter_end_1db04ae70:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_205002eeb_checkResult(_self_);
	};
}



inline void _2050034e6_checkGoto(_204ee42a6_scopeChecker* _self_, jule::Ptr<_204ee3492_scopeGoto>& _187133_gt, jule::Ptr<_204ee301e_scopeLabel>& _187154_label) {
	jule::Ptr<_204ee42a6_scopeChecker> _187217_gtsc = _187133_gt.get()._field_scope;;
	while (((_187217_gtsc.get()._field_childIndex - 1LL) > _187154_label.get()._field_scope.get()._field_childIndex)) {
		{
			_187217_gtsc=_187217_gtsc.get()._field_parent;
		}
	_iter_next_1db04e2a3:;
	}
	_iter_end_1db04e2a3:;;
	jule::I64 _187717_n = 0LL;;
	if ((_187217_gtsc.get()._field_scope == _187154_label.get()._field_scope.get()._field_scope)) {
		if ((_187133_gt.get()._field_pos > _187154_label.get()._field_pos)) {
			return;;
		};
		_187717_n=_187133_gt.get()._field_pos;
	};
	jule::I64 _189017_i = (_187154_label.get()._field_pos - 1LL);;
	if ((_187717_n == 0LL)) {
		{
			auto &expr = _187154_label.get()._field_scope.get()._field_scope.get()._field_Stmts;
			auto it = expr.begin();
			_iter_begin_1db051b02:;
			if (it != expr.end()) {
				jule::I64 _189317_j = it - expr.begin();
				jule::Any _189320_stmt = *it;
				{
					if (_204eda522_stmtIsGotoScope(_189320_stmt,_187217_gtsc.get()._field_scope)) {
						_187717_n=_189317_j;
						goto _iter_end_1db051b02;
					};
				}
				_iter_next_1db051b02:;
				++it;
				_189317_j++;
				goto _iter_begin_1db051b02;
			}
			_iter_end_1db051b02:;
		};
	};
	for (; (_189017_i >= _187717_n); (_189017_i)--) {
		{
			jule::Any _190321_stmt = _187154_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_189017_i];;
			if (_204edc1b1_stmtIsDef(_190321_stmt)) {
				_205016c24_pushErr((*_self_)._field_s.ptr(), _187133_gt.get()._field_gt.get()._field_Token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_187133_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
				return;;
			};
		}
	_iter_next_1db052b8b:;
	}
	_iter_end_1db052b8b:;;
}



inline void _2050036c2_checkGotos(_204ee42a6_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1db0527b2:;
		if (it != expr.end()) {
			jule::Ptr<_204ee3492_scopeGoto> _191221_gt = *it;
			{
				jule::Ptr<_204ee301e_scopeLabel> _191321_label = _204ee8057_findLabelAll(&(*_self_), _191221_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_191321_label == nullptr)) {
					_205016c24_pushErr((*_self_)._field_s.ptr(), _191221_gt.get()._field_gt.get()._field_Token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_191221_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
					goto _iter_next_1db0527b2;
				};
				_191321_label.get()._field_used=true;
				_2050034e6_checkGoto(&(*_self_), _191221_gt,_191321_label);
			}
			_iter_next_1db0527b2:;
			++it;
			goto _iter_begin_1db0527b2;
		}
		_iter_end_1db0527b2:;
	};
}



inline void _20500389d_checkLabels(_204ee42a6_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1db055067:;
		if (it != expr.end()) {
			jule::Ptr<_204ee301e_scopeLabel> _192516_l = *it;
			{
				if ((!(_192516_l.get()._field_used))) {
					_205016c24_pushErr((*_self_)._field_s.ptr(), _192516_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_192516_l.get()._field_label.get()._field_Ident)}));
				};
			}
			_iter_next_1db055067:;
			++it;
			goto _iter_begin_1db055067;
		}
		_iter_end_1db055067:;
	};
}



inline void _205003a79_checkVars(_204ee42a6_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1db057a92:;
		if (it != expr.end()) {
			jule::Ptr<_205031cb6_Var> _193316_v = *it;
			{
				if (((((!(_193316_v.get()._field_Used)) && (!(_202b8be1d_IsIgnoreIdent(_193316_v.get()._field_Ident)))) && (!(_202b8c1b5_IsAnonIdent(_193316_v.get()._field_Ident)))) && (_193316_v.get()._field_Ident != jule::Str("self", 4)))) {
					_205016c24_pushErr((*_self_)._field_s.ptr(), _193316_v.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_193316_v.get()._field_Ident)}));
				};
			}
			_iter_next_1db057a92:;
			++it;
			goto _iter_begin_1db057a92;
		}
		_iter_end_1db057a92:;
	};
}



inline void _205003c55_checkAliases(_204ee42a6_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1db059885:;
		if (it != expr.end()) {
			jule::Ptr<_2050a9beb_TypeAlias> _194116_a = *it;
			{
				if ((((!(_194116_a.get()._field_Used)) && (!(_202b8be1d_IsIgnoreIdent(_194116_a.get()._field_Ident)))) && (!(_202b8c1b5_IsAnonIdent(_194116_a.get()._field_Ident))))) {
					_205016c24_pushErr((*_self_)._field_s.ptr(), _194116_a.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_194116_a.get()._field_Ident)}));
				};
			}
			_iter_next_1db059885:;
			++it;
			goto _iter_begin_1db059885;
		}
		_iter_end_1db059885:;
	};
}



inline void _205004074_check(jule::Ptr<_204ee42a6_scopeChecker> _self_, jule::Ptr<_204351504_ScopeTree>& _194930_tree, jule::Ptr<_204edc645_Scope>& _194953_s) {
	_194953_s.get()._field_Deferred=_194930_tree.get()._field_Deferred;
	_194953_s.get()._field_Unsafety=_194930_tree.get()._field_Unsafety;
	jule::I64 _195313_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_194930_tree;
	_self_.get()._field_scope=_194953_s;
	_2050031c7_checkTree(_self_);
	if ((_195313_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_205003a79_checkVars(_self_.ptr());
		_205003c55_checkAliases(_self_.ptr());
		if (_204ee69a1_isRoot(_self_.ptr())) {
			_2050036c2_checkGotos(_self_.ptr());
			_20500389d_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_204ee42a6_scopeChecker> _2050042d8_newChildChecker(jule::Ptr<_204ee42a6_scopeChecker> _self_) {
	jule::Ptr<_204ee42a6_scopeChecker> _197317_base = _204ed9675_newScopeCheckerBase(_self_.get()._field_s,nullptr);;
	_197317_base.get()._field_parent=_self_;
	_197317_base.get()._field_labels=_self_.get()._field_labels;
	_197317_base.get()._field_gotos=_self_.get()._field_gotos;
	_197317_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _197317_base;
}







std::ostream &operator<<(std::ostream &_Stream, _204ee42a6_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _2050052c8_checkCdef(_205004d88_directiveChecker* _self_, jule::Ptr<_20430829c_Directive>& _1629_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_204ec707a_Fn>>()) {
			_case_begin_1db0631c9:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_204ec707a_Fn>().get()._field_CppLinked) {
					goto _match_end_1db062c89;
				};
				goto _case_begin_1db062cde;
			}
		}
		else {
			_case_begin_1db062cde:;
			{
				_205016c24_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1629_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1db062c89:;
	};
	if ((_1629_d.get()._field_Args.len() > 0LL)) {
		_205016c24_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _20500554d_checkTypedef(_205004d88_directiveChecker* _self_, jule::Ptr<_20430829c_Directive>& _3232_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_20433367e_Struct>>()) {
			_case_begin_1db065c6a:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_20433367e_Struct>().get()._field_CppLinked) {
					goto _match_end_1db0657c5;
				};
				goto _case_begin_1db06582a;
			}
		}
		else {
			_case_begin_1db06582a:;
			{
				_205016c24_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3232_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1db0657c5:;
	};
	if ((_3232_d.get()._field_Args.len() > 0LL)) {
		_205016c24_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _2050057c3_checkDerive(_205004d88_directiveChecker* _self_, jule::Ptr<_20430829c_Directive>& _4831_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_20433367e_Struct>>()) {
			_case_begin_1db0687d9:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_20433367e_Struct>().get()._field_CppLinked))) {
					goto _match_end_1db068344;
				};
				goto _case_begin_1db068399;
			}
		}
		else {
			_case_begin_1db068399:;
			{
				_205016c24_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1db068344:;
	};
	if ((_4831_d.get()._field_Args.len() == 0LL)) {
		_205016c24_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_205017043_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4831_d.get()._field_Args.len() > 1LL)) {
		_205016c24_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4831_d.get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1db06c29e:;
		}
		else {
			_case_begin_1db06ab1b:;
			{
				_205016c24_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4831_d.get()._field_Args[0LL].get()._field_Kind)}));
			}
		}
		_match_end_1db06bd3c:;
	};
}



inline void _205005a48_checkNamespace(_205004d88_directiveChecker* _self_, jule::Ptr<_20430829c_Directive>& _7438_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_20433367e_Struct>>()) {
			_case_begin_1db06d679:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_20433367e_Struct>().get()._field_CppLinked))) {
					_205016c24_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec707a_Fn>>()) {
			_case_begin_1db06d954:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_204ec707a_Fn>().get()._field_CppLinked))) {
					_205016c24_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_205031cb6_Var>>()) {
			_case_begin_1db06d9ba:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_205031cb6_Var>().get()._field_CppLinked))) {
					_205016c24_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_1db06d877:;
			{
				_205016c24_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1db06d734:;
	};
	if ((_7438_d.get()._field_Args.len() == 0LL)) {
		_205016c24_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7438_d.get()._field_Args.len() > 1LL)) {
		_205016c24_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_202b89679_Token> _9913_arg = _7438_d.get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_205016c24_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_205016c24_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7438_d.get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL,(_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_20433367e_Struct>>()) {
			_case_begin_1db077c27:;
			{
				if ((_2050a508c_findDirective((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_20430829c_Directive> _11625_typedef = jule::new_ptr<_20430829c_Directive>(_20430829c_Directive{._field_Tag=_7438_d.get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_20430829c_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1db0775b7:;
	};
}



inline void _205005cbd_checkDeprecated(_205004d88_directiveChecker* _self_, jule::Ptr<_20430829c_Directive>& _12539_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_20433367e_Struct>>()) {
			_case_begin_1db078563:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_20433367e_Struct>().get()._field_CppLinked) {
					_205016c24_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec707a_Fn>>()) {
			_case_begin_1db07a17a:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_204ec707a_Fn>().get()._field_CppLinked) {
					_205016c24_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_205031cb6_Var>>()) {
			_case_begin_1db07a1e1:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_205031cb6_Var>().get()._field_CppLinked) {
					_205016c24_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_1db079a5e:;
			{
				_205016c24_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1db079a09:;
	};
	if ((_12539_d.get()._field_Args.len() == 0LL)) {
		return;;
	};
	if ((_12539_d.get()._field_Args.len() > 1LL)) {
		_205016c24_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_202b89679_Token> _15013_arg = _12539_d.get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_205016c24_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_205016c24_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12539_d.get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL,(_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _205006043_checkTest(_205004d88_directiveChecker* _self_, jule::Ptr<_20430829c_Directive>& _16429_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_204ec707a_Fn>>()) {
			_case_begin_1db08445e:;
			{
				jule::Ptr<_204ec707a_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_204ec707a_Fn>();;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_2043a7813_IsInit(_16717_f.ptr())))) && (!(_2043a6988_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1db083d43;
				};
				if (_2043a626d_IsMethod(_16717_f.ptr())) {
					_205016c24_pushErr((*_self_)._field_s.ptr(), _16717_f.get()._field_Token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1db083d43;
				};
				goto _case_begin_1db08401e;
			}
		}
		else {
			_case_begin_1db08401e:;
			{
				_205016c24_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16429_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1db083d43:;
	};
	if ((_16429_d.get()._field_Args.len() > 0LL)) {
		_205016c24_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _2050062b8_checkDirective(_205004d88_directiveChecker* _self_, jule::Ptr<_20430829c_Directive>& _18538_d) {
	{
		auto &_match_expr{ _18538_d.get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1db0887a4:;
			{
				_2050052c8_checkCdef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1db0883ec:;
			{
				_20500554d_checkTypedef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1db088463:;
			{
				_2050057c3_checkDerive(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1db0884c9:;
			{
				_205005a48_checkNamespace(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1db088551:;
			{
				_205005cbd_checkDeprecated(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1db089277:;
			{
				_205006043_checkTest(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1db0892ee:;
			{
				_205016c24_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		else {
			_case_begin_1db088386:;
			{
				_205016c24_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1db0882cb:;
	};
}



inline void _205006494_check(_205004d88_directiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1db08bc5d:;
		if (it != expr.end()) {
			jule::Ptr<_20430829c_Directive> _20821_d = *it;
			{
				_2050062b8_checkDirective(&(*_self_), _20821_d);
			}
			_iter_next_1db08bc5d:;
			++it;
			goto _iter_begin_1db08bc5d;
		}
		_iter_end_1db08bc5d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _205004d88_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20500ae16_ImportInfo> _20500b433_FindPackage(_20500ae16_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_20500ae16_ImportInfo> _20500b741_SelectPackage(_20500ae16_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_20500ae16_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_205031cb6_Var> _20500bae8_FindVar(_20500ae16_ImportInfo* _self_, jule::Str _19226_ident, jule::Bool ) {
	if ((!(_20500d4ce_isLookupable(&(*_self_), _19226_ident)))) {
		return nullptr;
	};
	return _20500862d_findVarInPackage((*_self_)._field_Package.get()._field_Files,_19226_ident,false);
}



inline jule::Ptr<_2050a9beb_TypeAlias> _20500bea0_FindTypeAlias(_20500ae16_ImportInfo* _self_, jule::Str _20432_ident, jule::Bool ) {
	if ((!(_20500d4ce_isLookupable(&(*_self_), _20432_ident)))) {
		return nullptr;
	};
	return _205008a5c_findTypeAliasInPackage((*_self_)._field_Package.get()._field_Files,_20432_ident,false);
}



inline jule::Ptr<_20433367e_Struct> _20500c357_FindStruct(_20500ae16_ImportInfo* _self_, jule::Str _21629_ident, jule::Bool ) {
	if ((!(_20500d4ce_isLookupable(&(*_self_), _21629_ident)))) {
		return nullptr;
	};
	return _205008e47_findStructInPackage((*_self_)._field_Package.get()._field_Files,_21629_ident,false);
}



inline jule::Ptr<_204ec707a_Fn> _20500c70e_FindFn(_20500ae16_ImportInfo* _self_, jule::Str _22825_ident, jule::Bool ) {
	if ((!(_20500d4ce_isLookupable(&(*_self_), _22825_ident)))) {
		return nullptr;
	};
	return _2050093a9_findFnInPackage((*_self_)._field_Package.get()._field_Files,_22825_ident,false);
}



inline jule::Ptr<_204ece8e0_Trait> _20500ca1c_FindTrait(_20500ae16_ImportInfo* _self_, jule::Str _23928_ident) {
	if ((!(_20500d4ce_isLookupable(&(*_self_), _23928_ident)))) {
		return nullptr;
	};
	return _2050096b7_findTraitInPackage((*_self_)._field_Package.get()._field_Files,_23928_ident);
}



inline jule::Ptr<_204ed1a35_Enum> _20500cd2a_FindEnum(_20500ae16_ImportInfo* _self_, jule::Str _25027_ident) {
	if ((!(_20500d4ce_isLookupable(&(*_self_), _25027_ident)))) {
		return nullptr;
	};
	return _205009a08_findEnumInPackage((*_self_)._field_Package.get()._field_Files,_25027_ident);
}



inline jule::Ptr<_204ed3130_TypeEnum> _20500d138_FindTypeEnum(_20500ae16_ImportInfo* _self_, jule::Str _26131_ident) {
	if ((!(_20500d4ce_isLookupable(&(*_self_), _26131_ident)))) {
		return nullptr;
	};
	return _205009d49_findTypeEnumInPackage((*_self_)._field_Package.get()._field_Files,_26131_ident);
}



inline jule::Bool _20500d4ce_isLookupable(_20500ae16_ImportInfo* _self_, jule::Str _27027_ident) {
	if ((*_self_)._field_CppLinked) {
		return false;
	};
	if ((!((*_self_)._field_ImportAll))) {
		if ((((*_self_)._field_Alias.len() != 0LL) || _20500d7dc_existIdent(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_Selected.len() > 0LL)) {
			if ((!(_20500d7dc_existIdent(&(*_self_), _27027_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _20500d7dc_existIdent(_20500ae16_ImportInfo* _self_, jule::Str _29025_ident) {
	{
		auto &expr = (*_self_)._field_Selected;
		auto it = expr.begin();
		_iter_begin_1db0a4292:;
		if (it != expr.end()) {
			jule::Ptr<_202b89679_Token> &_29116_sident = *it;
			{
				if ((_29116_sident.get()._field_Kind == _29025_ident)) {
					return true;
				};
			}
			_iter_next_1db0a4292:;
			++it;
			goto _iter_begin_1db0a4292;
		}
		_iter_end_1db0a4292:;
	};
	return false;
}



inline jule::Bool _20500da73_isAccessibleViaSelection(_20500ae16_ImportInfo* _self_) {
	return (((*_self_)._field_ImportAll || ((*_self_)._field_Selected.len() == 0LL)) || _20500d7dc_existIdent(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _20500ae16_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20500ae16_ImportInfo> _20500e348_FindPackage(_20500dd70_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_20500ae16_ImportInfo> _20500e656_SelectPackage(_20500dd70_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_20500ae16_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_205031cb6_Var> _20500ea0d_FindVar(_20500dd70_Package* _self_, jule::Str _32026_ident, jule::Bool _32038_cpp_linked) {
	return _20500862d_findVarInPackage((*_self_)._field_Files,_32026_ident,_32038_cpp_linked);
}



inline jule::Ptr<_2050a9beb_TypeAlias> _20500edb5_FindTypeAlias(_20500dd70_Package* _self_, jule::Str _32632_ident, jule::Bool _32644_cpp_linked) {
	return _205008a5c_findTypeAliasInPackage((*_self_)._field_Files,_32632_ident,_32644_cpp_linked);
}



inline jule::Ptr<_20433367e_Struct> _20501026c_FindStruct(_20500dd70_Package* _self_, jule::Str _33229_ident, jule::Bool _33241_cpp_linked) {
	return _205008e47_findStructInPackage((*_self_)._field_Files,_33229_ident,_33241_cpp_linked);
}



inline jule::Ptr<_204ec707a_Fn> _205010624_FindFn(_20500dd70_Package* _self_, jule::Str _33825_ident, jule::Bool _33837_cpp_linked) {
	return _2050093a9_findFnInPackage((*_self_)._field_Files,_33825_ident,_33837_cpp_linked);
}



inline jule::Ptr<_204ece8e0_Trait> _205010932_FindTrait(_20500dd70_Package* _self_, jule::Str _34428_ident) {
	return _2050096b7_findTraitInPackage((*_self_)._field_Files,_34428_ident);
}



inline jule::Ptr<_204ed1a35_Enum> _205010c40_FindEnum(_20500dd70_Package* _self_, jule::Str _35027_ident) {
	return _205009a08_findEnumInPackage((*_self_)._field_Files,_35027_ident);
}



inline jule::Ptr<_204ed3130_TypeEnum> _20501104d_FindTypeEnum(_20500dd70_Package* _self_, jule::Str _35631_ident) {
	return _205009d49_findTypeEnumInPackage((*_self_)._field_Files,_35631_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _20500dd70_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20500ae16_ImportInfo> _20501457e_FindPackage(_205014062_Sema* _self_, jule::Str _21930_ident) {
	return _2050754d0_FindPackage((*_self_)._field_file.ptr(), _21930_ident);
}



inline jule::Ptr<_20500ae16_ImportInfo> _20501488c_SelectPackage(_205014062_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_20500ae16_ImportInfo>)> _22932_selector) {
	return _2050757dd_SelectPackage((*_self_)._field_file.ptr(), _22932_selector);
}



inline jule::Ptr<_205031cb6_Var> _205014c44_FindVar(_205014062_Sema* _self_, jule::Str _23926_ident, jule::Bool _23938_cpp_linked) {
	jule::Ptr<_205031cb6_Var> _24117_v = _20500862d_findVarInPackage((*_self_)._field_files,_23926_ident,_23938_cpp_linked);;
	if ((_24117_v != nullptr)) {
		return _24117_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1db0c8d00:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _24721_imp = *it;
			{
				if ((!(_205012989_impIsLookupable(_24721_imp,_23926_ident)))) {
					goto _iter_next_1db0c8d00;
				};
				_24117_v=_20500bae8_FindVar(_24721_imp.ptr(), _23926_ident,_23938_cpp_linked);
				if (((_24117_v != nullptr) && _2050173ea_isAccessibleDefine(&(*_self_), _24117_v.get()._field_Public,_24117_v.get()._field_Token))) {
					return _24117_v;
				};
			}
			_iter_next_1db0c8d00:;
			++it;
			goto _iter_begin_1db0c8d00;
		}
		_iter_end_1db0c8d00:;
	};
	return nullptr;
}



inline jule::Ptr<_2050a9beb_TypeAlias> _2050150eb_FindTypeAlias(_205014062_Sema* _self_, jule::Str _26632_ident, jule::Bool _26644_cpp_linked) {
	jule::Ptr<_2050a9beb_TypeAlias> _26817_ta = _205008a5c_findTypeAliasInPackage((*_self_)._field_files,_26632_ident,_26644_cpp_linked);;
	if ((_26817_ta != nullptr)) {
		return _26817_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1db0cb97e:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _27421_imp = *it;
			{
				if ((!(_205012989_impIsLookupable(_27421_imp,_26632_ident)))) {
					goto _iter_next_1db0cb97e;
				};
				_26817_ta=_20500bea0_FindTypeAlias(_27421_imp.ptr(), _26632_ident,_26644_cpp_linked);
				if (((_26817_ta != nullptr) && _2050173ea_isAccessibleDefine(&(*_self_), _26817_ta.get()._field_Public,_26817_ta.get()._field_Token))) {
					return _26817_ta;
				};
			}
			_iter_next_1db0cb97e:;
			++it;
			goto _iter_begin_1db0cb97e;
		}
		_iter_end_1db0cb97e:;
	};
	return nullptr;
}



inline jule::Ptr<_20433367e_Struct> _2050154a3_FindStruct(_205014062_Sema* _self_, jule::Str _29329_ident, jule::Bool _29341_cppLinked) {
	jule::Ptr<_20433367e_Struct> _29517_s = _205008e47_findStructInPackage((*_self_)._field_files,_29329_ident,_29341_cppLinked);;
	if ((_29517_s != nullptr)) {
		return _29517_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1db0ce60d:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _30021_imp = *it;
			{
				if ((!(_205012989_impIsLookupable(_30021_imp,_29329_ident)))) {
					goto _iter_next_1db0ce60d;
				};
				_29517_s=_20500c357_FindStruct(_30021_imp.ptr(), _29329_ident,_29341_cppLinked);
				if (((_29517_s != nullptr) && _2050173ea_isAccessibleDefine(&(*_self_), _29517_s.get()._field_Public,_29517_s.get()._field_Token))) {
					return _29517_s;
				};
			}
			_iter_next_1db0ce60d:;
			++it;
			goto _iter_begin_1db0ce60d;
		}
		_iter_end_1db0ce60d:;
	};
	return nullptr;
}



inline jule::Ptr<_204ec707a_Fn> _20501585a_FindFn(_205014062_Sema* _self_, jule::Str _31825_ident, jule::Bool _31837_cpp_linked) {
	jule::Ptr<_204ec707a_Fn> _32017_f = _2050093a9_findFnInPackage((*_self_)._field_files,_31825_ident,_31837_cpp_linked);;
	if ((_32017_f != nullptr)) {
		return _32017_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1db0d228c:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _32621_imp = *it;
			{
				if ((!(_205012989_impIsLookupable(_32621_imp,_31825_ident)))) {
					goto _iter_next_1db0d228c;
				};
				_32017_f=_20500c70e_FindFn(_32621_imp.ptr(), _31825_ident,_31837_cpp_linked);
				if (((_32017_f != nullptr) && _2050173ea_isAccessibleDefine(&(*_self_), _32017_f.get()._field_Public,_32017_f.get()._field_Token))) {
					return _32017_f;
				};
			}
			_iter_next_1db0d228c:;
			++it;
			goto _iter_begin_1db0d228c;
		}
		_iter_end_1db0d228c:;
	};
	return nullptr;
}



inline jule::Ptr<_204ece8e0_Trait> _205015b68_FindTrait(_205014062_Sema* _self_, jule::Str _34528_ident) {
	jule::Ptr<_204ece8e0_Trait> _34717_t = _2050096b7_findTraitInPackage((*_self_)._field_files,_34528_ident);;
	if ((_34717_t != nullptr)) {
		return _34717_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1db0d4de9:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _35321_imp = *it;
			{
				if ((!(_205012989_impIsLookupable(_35321_imp,_34528_ident)))) {
					goto _iter_next_1db0d4de9;
				};
				_34717_t=_20500ca1c_FindTrait(_35321_imp.ptr(), _34528_ident);
				if (((_34717_t != nullptr) && _2050173ea_isAccessibleDefine(&(*_self_), _34717_t.get()._field_Public,_34717_t.get()._field_Token))) {
					return _34717_t;
				};
			}
			_iter_next_1db0d4de9:;
			++it;
			goto _iter_begin_1db0d4de9;
		}
		_iter_end_1db0d4de9:;
	};
	return nullptr;
}



inline jule::Ptr<_204ed1a35_Enum> _205015e76_FindEnum(_205014062_Sema* _self_, jule::Str _37227_ident) {
	jule::Ptr<_204ed1a35_Enum> _37417_e = _205009a08_findEnumInPackage((*_self_)._field_files,_37227_ident);;
	if ((_37417_e != nullptr)) {
		return _37417_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1db0d7803:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _38021_imp = *it;
			{
				if ((!(_205012989_impIsLookupable(_38021_imp,_37227_ident)))) {
					goto _iter_next_1db0d7803;
				};
				_37417_e=_20500cd2a_FindEnum(_38021_imp.ptr(), _37227_ident);
				if (((_37417_e != nullptr) && _2050173ea_isAccessibleDefine(&(*_self_), _37417_e.get()._field_Public,_37417_e.get()._field_Token))) {
					return _37417_e;
				};
			}
			_iter_next_1db0d7803:;
			++it;
			goto _iter_begin_1db0d7803;
		}
		_iter_end_1db0d7803:;
	};
	return nullptr;
}



inline jule::Ptr<_204ed3130_TypeEnum> _205016284_FindTypeEnum(_205014062_Sema* _self_, jule::Str _39931_ident) {
	jule::Ptr<_204ed3130_TypeEnum> _40117_e = _205009d49_findTypeEnumInPackage((*_self_)._field_files,_39931_ident);;
	if ((_40117_e != nullptr)) {
		return _40117_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1db0da20c:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _40721_imp = *it;
			{
				if ((!(_205012989_impIsLookupable(_40721_imp,_39931_ident)))) {
					goto _iter_next_1db0da20c;
				};
				_40117_e=_20500d138_FindTypeEnum(_40721_imp.ptr(), _39931_ident);
				if (((_40117_e != nullptr) && _2050173ea_isAccessibleDefine(&(*_self_), _40117_e.get()._field_Public,_40117_e.get()._field_Token))) {
					return _40117_e;
				};
			}
			_iter_next_1db0da20c:;
			++it;
			goto _iter_begin_1db0da20c;
		}
		_iter_end_1db0da20c:;
	};
	return nullptr;
}



inline jule::Bool _2050165d6_isFlag(_205014062_Sema* _self_, jule::I64 _42321_flags) {
	return (((*_self_)._field_flags & _42321_flags) == _42321_flags);
}



inline void _20501685b_setCurrentFile(_205014062_Sema* _self_, jule::Ptr<_205074eb3_SymbolTable> _42537_f) {
	(*_self_)._field_file=_42537_f;
}



inline void _205016c24_pushErr(_205014062_Sema* _self_, jule::Ptr<_202b89679_Token> _42726_token, jule::Str _42741_fmt, jule::Slice<jule::Any> _42754_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_205012648_compilerErr(_42726_token,true,_42741_fmt,jule::Any(_42754_args)));;
}



inline void _205017043_pushSugggestion(_205014062_Sema* _self_, jule::Str _43234_fmt, jule::Slice<jule::Any> _43247_args) {
	{
		_205013acd_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43234_fmt,jule::Any(_43247_args));
	};
}



inline jule::Bool _2050173ea_isAccessibleDefine(_205014062_Sema* _self_, jule::Bool _43733_public, jule::Ptr<_202b89679_Token> _43747_token) {
	return ((_43733_public || (_43747_token.get()._field_File == nullptr)) || (_202b9040a_Dir((*_self_)._field_file.get()._field_File.ptr()) == _202b9040a_Dir(_43747_token.get()._field_File.ptr())));
}



inline jule::Bool _20501784b_isDuplicatedIdent(_205014062_Sema* _self_, jule::Uintptr _44432_itself, jule::Str _44449_ident, jule::Bool _44461_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1db0e1ec2:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> &_44516_f = *it;
			{
				if (_20507d31d_isDuplicatedIdent(_44516_f.ptr(), _44432_itself,_44449_ident,_44461_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _44516_f.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1db0e292e:;
					if (it != expr.end()) {
						jule::Ptr<_20500ae16_ImportInfo> &_45020_imp = *it;
						{
							{
								auto &expr = _45020_imp.get()._field_Selected;
								auto it = expr.begin();
								_iter_begin_1db0e37cb:;
								if (it != expr.end()) {
									jule::Ptr<_202b89679_Token> &_45124_selected = *it;
									{
										if ((_45124_selected.get()._field_Kind == _44449_ident)) {
											return true;
										};
									}
									_iter_next_1db0e37cb:;
									++it;
									goto _iter_begin_1db0e37cb;
								}
								_iter_end_1db0e37cb:;
							};
						}
						_iter_next_1db0e292e:;
						++it;
						goto _iter_begin_1db0e292e;
					}
					_iter_end_1db0e292e:;
				};
			}
			_iter_next_1db0e1ec2:;
			++it;
			goto _iter_begin_1db0e1ec2;
		}
		_iter_end_1db0e1ec2:;
	};
	return false;
}



inline void _205017b6a_checkDirectives(jule::Ptr<_205014062_Sema> _self_, jule::Slice<jule::Ptr<_20430829c_Directive>>& _46140_d, jule::Any _46166_o) {
	_205004d88_directiveChecker _46217_dc = _205004d88_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_20430829c_Directive>>>)((&(_46140_d)))), ._field_o=jule::Any(_46166_o)};;
	_205006494_check(&_46217_dc);
}



inline jule::Bool _2050180bb_checkGenericQuantity(_205014062_Sema* _self_, jule::I64 _47039_required, jule::I64 _47054_given, jule::Ptr<_202b89679_Token> _47066_token) {
	jule::Bool _47083_ok = jule::Bool();
	{
		
		if (((_47039_required == 0LL) && (_47054_given > 0LL))) {
			_case_begin_1db0e66d0:;
			{
				_205016c24_pushErr(&(*_self_), _47066_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if (((_47039_required > 0LL) && (_47054_given == 0LL))) {
			_case_begin_1db0e67ce:;
			{
				_205016c24_pushErr(&(*_self_), _47066_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required < _47054_given)) {
			_case_begin_1db0e6845:;
			{
				_205016c24_pushErr(&(*_self_), _47066_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required > _47054_given)) {
			_case_begin_1db0e6504:;
			{
				_205016c24_pushErr(&(*_self_), _47066_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else {
			_case_begin_1db0e6070:;
			{
				_47083_ok = true;
				return _47083_ok;
			}
		}
		_match_end_1db0e5e93:;
	};
}



inline jule::Bool _205018495_isDuplicatedImportSelection(_205014062_Sema* _self_, jule::Uintptr _48942_itself, jule::Str _48959_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1db0e9b12:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> &_49016_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49016_imp) == _48942_itself)) {
					goto _iter_end_1db0e9b12;
				};
				if (_20500d7dc_existIdent(_49016_imp.ptr(), _48959_ident)) {
					return true;
				};
			}
			_iter_next_1db0e9b12:;
			++it;
			goto _iter_begin_1db0e9b12;
		}
		_iter_end_1db0e9b12:;
	};
	return false;
}



inline jule::Any _20501885d_getImportDef(_205014062_Sema* _self_, jule::Str _50227_ident, jule::Ptr<_20500ae16_ImportInfo>& _50244_imp) {
	if ((_2050d9610_findPackageBuiltinDef(_50244_imp.get()._field_LinkPath,_50227_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _50244_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1db0ebd9a:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _50621_f = *it;
			{
				;
				jule::Any _50921_def = _20507cdbc_defByIdent(_50621_f.ptr(), _50227_ident,false);;
				if ((_50921_def != nullptr)) {
					return jule::Any(_50921_def);
				};
			}
			_iter_next_1db0ebd9a:;
			++it;
			goto _iter_begin_1db0ebd9a;
		}
		_iter_end_1db0ebd9a:;
	};
	return nullptr;
}



inline jule::Bool _1db103973_checkImportSelection(_205014062_Sema* _self_, jule::Ptr<_202b89679_Token>& _51743_ident, jule::Ptr<_205031cb6_Var>& _51759_s) {
	if ((!(_2050173ea_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_205016c24_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_205017043_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_20500a344_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_205016c24_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _1db107ec7_checkImportSelection(_205014062_Sema* _self_, jule::Ptr<_202b89679_Token>& _51743_ident, jule::Ptr<_2050a9beb_TypeAlias>& _51759_s) {
	if ((!(_2050173ea_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_205016c24_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_205017043_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_20500a344_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_205016c24_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _1db10c4d7_checkImportSelection(_205014062_Sema* _self_, jule::Ptr<_202b89679_Token>& _51743_ident, jule::Ptr<_20433367e_Struct>& _51759_s) {
	if ((!(_2050173ea_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_205016c24_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_205017043_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_20500a344_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_205016c24_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _1db111be5_checkImportSelection(_205014062_Sema* _self_, jule::Ptr<_202b89679_Token>& _51743_ident, jule::Ptr<_204ece8e0_Trait>& _51759_s) {
	if ((!(_2050173ea_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_205016c24_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_205017043_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_20500a344_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_205016c24_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _1db116205_checkImportSelection(_205014062_Sema* _self_, jule::Ptr<_202b89679_Token>& _51743_ident, jule::Ptr<_204ed1a35_Enum>& _51759_s) {
	if ((!(_2050173ea_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_205016c24_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_205017043_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_20500a344_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_205016c24_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _1db11a715_checkImportSelection(_205014062_Sema* _self_, jule::Ptr<_202b89679_Token>& _51743_ident, jule::Ptr<_204ed3130_TypeEnum>& _51759_s) {
	if ((!(_2050173ea_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_205016c24_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_205017043_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_20500a344_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_205016c24_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _1db11ec25_checkImportSelection(_205014062_Sema* _self_, jule::Ptr<_202b89679_Token>& _51743_ident, jule::Ptr<_204ec707a_Fn>& _51759_s) {
	if ((!(_2050173ea_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_205016c24_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_205017043_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_20500a344_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_205016c24_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}



inline jule::Bool _205019045_checkImportSelectedSelections(_205014062_Sema* _self_, jule::Ptr<_20500ae16_ImportInfo>& _53153_imp) {
	jule::Bool _53173_ok = jule::Bool();
	_53173_ok=true;
	{
		auto &expr = _53153_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1db0edc48:;
		if (it != expr.end()) {
			jule::Ptr<_202b89679_Token> _53316_ident = *it;
			{
				if ((_53316_ident.get()._field_Kind == jule::Str("self", 4))) {
					goto _iter_next_1db0edc48;
				};
				if (_205018495_isDuplicatedImportSelection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_53153_imp)),_53316_ident.get()._field_Kind)) {
					_205016c24_pushErr(&(*_self_), _53316_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_53316_ident.get()._field_Kind)}));
					_205017043_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_53173_ok=false;
					goto _iter_next_1db0edc48;
				};
				jule::Any _54521_def = _20501885d_getImportDef(&(*_self_), _53316_ident.get()._field_Kind,_53153_imp);;
				{
					auto &_match_expr{ _54521_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1db10183e:;
						{
							goto _iter_next_1db0edc48;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_205031cb6_Var>>()) {
						_case_begin_1db102466:;
						{
							jule::Ptr<_205031cb6_Var> _55125_v = _54521_def.operator jule::Ptr<_205031cb6_Var>();;
							_53173_ok=(_1db103973_checkImportSelection(&(*_self_), _53316_ident,_55125_v) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2050a9beb_TypeAlias>>()) {
						_case_begin_1db101212:;
						{
							jule::Ptr<_2050a9beb_TypeAlias> _55425_ta = _54521_def.operator jule::Ptr<_2050a9beb_TypeAlias>();;
							_53173_ok=(_1db107ec7_checkImportSelection(&(*_self_), _53316_ident,_55425_ta) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_20433367e_Struct>>()) {
						_case_begin_1db101982:;
						{
							jule::Ptr<_20433367e_Struct> _55725_s = _54521_def.operator jule::Ptr<_20433367e_Struct>();;
							_53173_ok=(_1db10c4d7_checkImportSelection(&(*_self_), _53316_ident,_55725_s) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_204ece8e0_Trait>>()) {
						_case_begin_1db1019e8:;
						{
							jule::Ptr<_204ece8e0_Trait> _56025_t = _54521_def.operator jule::Ptr<_204ece8e0_Trait>();;
							_53173_ok=(_1db111be5_checkImportSelection(&(*_self_), _53316_ident,_56025_t) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_204ed1a35_Enum>>()) {
						_case_begin_1db102697:;
						{
							jule::Ptr<_204ed1a35_Enum> _56325_e = _54521_def.operator jule::Ptr<_204ed1a35_Enum>();;
							_53173_ok=(_1db116205_checkImportSelection(&(*_self_), _53316_ident,_56325_e) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_204ed3130_TypeEnum>>()) {
						_case_begin_1db10270d:;
						{
							jule::Ptr<_204ed3130_TypeEnum> _56625_e = _54521_def.operator jule::Ptr<_204ed3130_TypeEnum>();;
							_53173_ok=(_1db11a715_checkImportSelection(&(*_self_), _53316_ident,_56625_e) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_204ec707a_Fn>>()) {
						_case_begin_1db102774:;
						{
							jule::Ptr<_204ec707a_Fn> _56925_f = _54521_def.operator jule::Ptr<_204ec707a_Fn>();;
							_53173_ok=(_1db11ec25_checkImportSelection(&(*_self_), _53316_ident,_56925_f) && _53173_ok);
						}
					}
					else {
						_case_begin_1db1017c8:;
						{
							_205016c24_pushErr(&(*_self_), _53316_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_53316_ident.get()._field_Kind)}));
							_53173_ok=false;
							goto _iter_next_1db0edc48;
						}
					}
					_match_end_1db0ee463:;
				};
			}
			_iter_next_1db0edc48:;
			++it;
			goto _iter_begin_1db0edc48;
		}
		_iter_end_1db0edc48:;
	};
	return _53173_ok;
}



inline jule::Bool _1db124774_checkImportsAllSelectionsFromCollection(_205014062_Sema* _self_, jule::Slice<jule::Ptr<_205031cb6_Var>>& _58062_s, jule::Ptr<_202b89679_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_1db126479:;
		if (it != expr.end()) {
			jule::Ptr<_205031cb6_Var> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_1db103973_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_1db126479:;
			++it;
			goto _iter_begin_1db126479;
		}
		_iter_end_1db126479:;
	};
	return _58117_ok;
}

inline jule::Bool _1db125bd7_checkImportsAllSelectionsFromCollection(_205014062_Sema* _self_, jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>& _58062_s, jule::Ptr<_202b89679_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_1db1294b0:;
		if (it != expr.end()) {
			jule::Ptr<_2050a9beb_TypeAlias> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_1db107ec7_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_1db1294b0:;
			++it;
			goto _iter_begin_1db1294b0;
		}
		_iter_end_1db1294b0:;
	};
	return _58117_ok;
}

inline jule::Bool _1db12835a_checkImportsAllSelectionsFromCollection(_205014062_Sema* _self_, jule::Slice<jule::Ptr<_20433367e_Struct>>& _58062_s, jule::Ptr<_202b89679_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_1db12c4c4:;
		if (it != expr.end()) {
			jule::Ptr<_20433367e_Struct> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_1db10c4d7_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_1db12c4c4:;
			++it;
			goto _iter_begin_1db12c4c4;
		}
		_iter_end_1db12c4c4:;
	};
	return _58117_ok;
}

inline jule::Bool _1db12c8e2_checkImportsAllSelectionsFromCollection(_205014062_Sema* _self_, jule::Slice<jule::Ptr<_204ec707a_Fn>>& _58062_s, jule::Ptr<_202b89679_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_1db13052c:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_1db11ec25_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_1db13052c:;
			++it;
			goto _iter_begin_1db13052c;
		}
		_iter_end_1db13052c:;
	};
	return _58117_ok;
}

inline jule::Bool _1db12e3b6_checkImportsAllSelectionsFromCollection(_205014062_Sema* _self_, jule::Slice<jule::Ptr<_204ece8e0_Trait>>& _58062_s, jule::Ptr<_202b89679_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_1db1334ec:;
		if (it != expr.end()) {
			jule::Ptr<_204ece8e0_Trait> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_1db111be5_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_1db1334ec:;
			++it;
			goto _iter_begin_1db1334ec;
		}
		_iter_end_1db1334ec:;
	};
	return _58117_ok;
}

inline jule::Bool _1db132386_checkImportsAllSelectionsFromCollection(_205014062_Sema* _self_, jule::Slice<jule::Ptr<_204ed1a35_Enum>>& _58062_s, jule::Ptr<_202b89679_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_1db1364bc:;
		if (it != expr.end()) {
			jule::Ptr<_204ed1a35_Enum> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_1db116205_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_1db1364bc:;
			++it;
			goto _iter_begin_1db1364bc;
		}
		_iter_end_1db1364bc:;
	};
	return _58117_ok;
}

inline jule::Bool _1db135356_checkImportsAllSelectionsFromCollection(_205014062_Sema* _self_, jule::Slice<jule::Ptr<_204ed3130_TypeEnum>>& _58062_s, jule::Ptr<_202b89679_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_1db139525:;
		if (it != expr.end()) {
			jule::Ptr<_204ed3130_TypeEnum> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_1db11a715_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_1db139525:;
			++it;
			goto _iter_begin_1db139525;
		}
		_iter_end_1db139525:;
	};
	return _58117_ok;
}



inline jule::Bool _205019771_checkImportAllSelections(_205014062_Sema* _self_, jule::Ptr<_20500ae16_ImportInfo>& _59044_imp) {
	jule::Bool _59064_ok = jule::Bool();
	_59064_ok=true;
	{
		auto &expr = _59044_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1db123d4a:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> &_59216_file = *it;
			{
				_59064_ok=(_1db124774_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Vars,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_1db125bd7_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_TypeAliases,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_1db12835a_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Structs,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_1db12c8e2_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Funcs,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_1db12e3b6_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Traits,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_1db132386_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Enums,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_1db135356_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_TypeEnums,_59044_imp.get()._field_Token) && _59064_ok);
			}
			_iter_next_1db123d4a:;
			++it;
			goto _iter_begin_1db123d4a;
		}
		_iter_end_1db123d4a:;
	};
	return _59064_ok;
}



inline jule::Bool _205019a90_checkImportSelections(_205014062_Sema* _self_, jule::Ptr<_20500ae16_ImportInfo>& _60445_imp) {
	jule::Bool _60465_ok = jule::Bool();
	if ((_60445_imp.get()._field_Selected.len() > 0LL)) {
		_60465_ok = _205019045_checkImportSelectedSelections(&(*_self_), _60445_imp);
		return _60465_ok;
	} else if (_60445_imp.get()._field_ImportAll) {
		_60465_ok = _205019771_checkImportAllSelections(&(*_self_), _60445_imp);
		return _60465_ok;
	};
	_60465_ok = true;
	return _60465_ok;
}



inline jule::Bool _205019d9d_isUseAliasDuplication(_205014062_Sema* _self_, jule::Ptr<_20500ae16_ImportInfo>& _61341_imp) {
	if ((_61341_imp.get()._field_Alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1db13c847:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _61821_imp2 = *it;
			{
				if ((_61821_imp2 == _61341_imp)) {
					goto _iter_end_1db13c847;
				};
				if ((_61821_imp2.get()._field_Alias == _61341_imp.get()._field_Alias)) {
					return true;
				};
				if (((_61821_imp2.get()._field_Ident == _61821_imp2.get()._field_LinkPath) && (_61821_imp2.get()._field_Ident == _61341_imp.get()._field_Alias))) {
					return true;
				};
			}
			_iter_next_1db13c847:;
			++it;
			goto _iter_begin_1db13c847;
		}
		_iter_end_1db13c847:;
	};
	return false;
}



inline jule::Bool _20501a1ab_checkImport(_205014062_Sema* _self_, jule::Ptr<_20500ae16_ImportInfo>& _63335_imp) {
	if ((_63335_imp.get()._field_CppLinked || (_63335_imp.get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;
	};
	if (_205019d9d_isUseAliasDuplication(&(*_self_), _63335_imp)) {
		_205016c24_pushErr(&(*_self_), _63335_imp.get()._field_Token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_63335_imp.get()._field_Alias)}));
		_205017043_pushSugggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_63335_imp.get()._field_Duplicate))) {
		jule::Ptr<_205014062_Sema> _64421_sema = jule::new_ptr<_205014062_Sema>(_205014062_Sema{._field_flags=(*_self_)._field_flags});;
		_20502dcd5_check(_64421_sema, _63335_imp.get()._field_Package.get()._field_Files);
		if ((_64421_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_64421_sema.get()._field_errors);
			_64421_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _205019a90_checkImportSelections(&(*_self_), _63335_imp);
}



inline void _20501a387_checkImports(_205014062_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1db143023:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _65821_file = *it;
			{
				_20501685b_setCurrentFile(&(*_self_), _65821_file);
				{
					auto &expr = _65821_file.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1db144794:;
					if (it != expr.end()) {
						jule::Ptr<_20500ae16_ImportInfo> _66025_imp = *it;
						{
							jule::Bool _66121_ok = _20501a1ab_checkImport(&(*_self_), _66025_imp);;
							if ((!(_66121_ok))) {
								return;;
							};
						}
						_iter_next_1db144794:;
						++it;
						goto _iter_begin_1db144794;
					}
					_iter_end_1db144794:;
				};
			}
			_iter_next_1db143023:;
			++it;
			goto _iter_begin_1db143023;
		}
		_iter_end_1db143023:;
	};
}



inline void _20501a563_implFileImpls(jule::Ptr<_205014062_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Impls;
		auto it = expr.begin();
		_iter_begin_1db145a09:;
		if (it != expr.end()) {
			jule::Ptr<_204ed75da_Impl> _67121_imp = *it;
			{
				_205025dba_implImpl(_self_, _67121_imp);
			}
			_iter_next_1db145a09:;
			++it;
			goto _iter_begin_1db145a09;
		}
		_iter_end_1db145a09:;
	};
}



inline void _20501a73e_implImpls(jule::Ptr<_205014062_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1db14609d:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _67721_file = *it;
			{
				_20501685b_setCurrentFile(_self_.ptr(), _67721_file);
				_20501a563_implFileImpls(_self_);
			}
			_iter_next_1db14609d:;
			++it;
			goto _iter_begin_1db14609d;
		}
		_iter_end_1db14609d:;
	};
}



inline void _20501a91a_checkEnums(jule::Ptr<_205014062_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1db146ce6:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _68421_file = *it;
			{
				_20501685b_setCurrentFile(_self_.ptr(), _68421_file);
				_2050234e4_checkEnumDecls(_self_);
			}
			_iter_next_1db146ce6:;
			++it;
			goto _iter_begin_1db146ce6;
		}
		_iter_end_1db146ce6:;
	};
}



inline _2050b8e19_typeChecker _20501ad6b_typeChecker(jule::Ptr<_205014062_Sema> _self_, jule::Trait<_2050c6520_Lookup> _69035_l, jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>> _69050_generics, jule::Ptr<_2050b8105_referencer> _69113_referencer) {
	_2050b8e19_typeChecker _69217_tc = _2050b8e19_typeChecker{._field_s=_self_, ._field_rootLookup=_69035_l, ._field_lookup=_69035_l, ._field_referencer=_69113_referencer, ._field_useGenerics=_69050_generics, };;
	{
		auto &_match_expr{ _69035_l };
		
		if (_match_expr.type_is<jule::Ptr<_204ee42a6_scopeChecker>>()) {
			_case_begin_1db149348:;
			{
				jule::Ptr<_204ee42a6_scopeChecker> _70121_hard = _204ee762d_getHardRoot(_69035_l.operator jule::Ptr<_204ee42a6_scopeChecker>());;
				_69217_tc._field_refers=_70121_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1db149227:;
	};
	if (((_69113_referencer != nullptr) && (_69113_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _69113_referencer.get()._field_owner };
			
			if (_match_expr.type_is<jule::Ptr<_2050a9beb_TypeAlias>>()) {
				_case_begin_1db149821:;
				{
					_69217_tc._field_ownerAlias=_69113_referencer.get()._field_owner.operator jule::Ptr<_2050a9beb_TypeAlias>();
				}
			}
			_match_end_1db148e6e:;
		};
	};
	return _69217_tc;
}



inline jule::Ptr<_2050aa8de_TypeKind> _20501b366_buildTypeWithRefers(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20434156b_TypeDecl>& _71744_t, jule::Trait<_2050c6520_Lookup> _71767_l, jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>> _71813_generics, jule::Ptr<_2050b8105_referencer> _71841_referencer) {
	return ({ auto _wrap_copy = _20501ad6b_typeChecker(_self_, _71767_l,_71813_generics,_71841_referencer); _2050c1185_checkDecl(&_wrap_copy, _71744_t); });
}



inline jule::Bool _20501b861_checkTypeWithRefers(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_2050aea47_TypeSymbol>& _72444_t, jule::Trait<_2050c6520_Lookup> _72464_l, jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>> _72513_generics, jule::Ptr<_2050b8105_referencer> _72541_referencer) {
	jule::Bool _72568_ok = jule::Bool();
	if (_2050aedee_checked(_72444_t.ptr())) {
		_72568_ok = true;
		return _72568_ok;
	};
	_72444_t.get()._field_Kind=_20501b366_buildTypeWithRefers(_self_, _72444_t.get()._field_Decl,_72464_l,_72513_generics,_72541_referencer);
	_72568_ok = _2050aedee_checked(_72444_t.ptr());
	return _72568_ok;
}



inline jule::Ptr<_204ed56a4_constraintChecker> _20501bac5_constraintChecker(jule::Ptr<_205014062_Sema> _self_) {
	return jule::new_ptr<_204ed56a4_constraintChecker>(_204ed56a4_constraintChecker{._field_s=_self_, });
}



inline jule::Bool _20501be7c_checkType(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_2050aea47_TypeSymbol>& _73934_t, jule::Trait<_2050c6520_Lookup> _73954_l) {
	return _20501b861_checkTypeWithRefers(_self_, _73934_t,_73954_l,nullptr,nullptr);
}



inline jule::Ptr<_2050aa8de_TypeKind> _20501c3cd_buildTypeWithGenerics(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20434156b_TypeDecl>& _74546_t, jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>> _74613_generics, jule::Ptr<_204ec7e27_ReferenceStack> _74641_refers) {
	jule::Ptr<_2050b8e19_typeChecker> _74717_tc = jule::new_ptr<_2050b8e19_typeChecker>(_2050b8e19_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_2050c6520_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_2050c6520_Lookup>(_self_, 3), ._field_refers=_74641_refers, ._field_useGenerics=_74613_generics, });;
	return _2050c1185_checkDecl(_74717_tc.ptr(), _74546_t);
}



inline jule::Ptr<_2050aa8de_TypeKind> _20501c6db_buildType(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20434156b_TypeDecl>& _75834_t) {
	return _20501c3cd_buildTypeWithGenerics(_self_, _75834_t,nullptr,nullptr);
}



inline jule::Ptr<_2050aa8de_TypeKind> _20501c9e9_selectType(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20434156b_TypeDecl>& _76335_t) {
	jule::Ptr<_2050b8e19_typeChecker> _76417_tc = jule::new_ptr<_2050b8e19_typeChecker>(_2050b8e19_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_2050c6520_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_2050c6520_Lookup>(_self_, 3), ._field_selection=true, });;
	return _2050c1185_checkDecl(_76417_tc.ptr(), _76335_t);
}



inline jule::Ptr<_2050816b7_Eval> _20501ce4a_evalpd(jule::Ptr<_205014062_Sema> _self_, jule::Trait<_2050c6520_Lookup> _77530_l, jule::Ptr<_2050aa8de_TypeKind> _77545_p, jule::Ptr<_205031cb6_Var> _77563_owner) {
	jule::Ptr<_2050816b7_Eval> _77617_e = jule::new_ptr<_2050816b7_Eval>(_2050816b7_Eval{._field_s=_self_, ._field_lookup=_77530_l, ._field_owner=_77563_owner, });;
	{
		auto &_match_expr{ _77530_l };
		
		if (_match_expr.type_is<jule::Ptr<_204ee42a6_scopeChecker>>()) {
			_case_begin_1db15460b:;
			{
				_77617_e.get()._field_unsafety=_204ee673c_isUnsafe(_77530_l.operator jule::Ptr<_204ee42a6_scopeChecker>());
			}
		}
		_match_end_1db1544eb:;
	};
	_77617_e.get()._field_prefix=_77545_p;
	return _77617_e;
}



inline jule::Ptr<_2050816b7_Eval> _20501d302_evalp(jule::Ptr<_205014062_Sema> _self_, jule::Trait<_2050c6520_Lookup> _79029_l, jule::Ptr<_2050aa8de_TypeKind> _79044_p) {
	return _20501ce4a_evalpd(_self_, _79029_l,_79044_p,nullptr);
}



inline jule::Ptr<_2050816b7_Eval> _20501d610_eval(jule::Ptr<_205014062_Sema> _self_, jule::Trait<_2050c6520_Lookup> _79528_l) {
	return _20501d302_evalp(_self_, _79528_l,nullptr);
}



inline jule::Bool _20501db0a_checkAssignType(jule::Ptr<_205014062_Sema> _self_, jule::Bool _79935_destIsRef, jule::Ptr<_2050aa8de_TypeKind>& _79957_dest, jule::Ptr<_20507eb49_Data>& _80014_d, jule::Ptr<_202b89679_Token> _80028_errorToken) {
	if (_80014_d.get()._field_Decl) {
		_205016c24_pushErr(_self_.ptr(), _80028_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_79935_destIsRef) {
		if ((!(_2050ab0e8_Equals(_79957_dest, _80014_d.get()._field_Kind)))) {
			_205016c24_pushErr(_self_.ptr(), _80028_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_79957_dest.ptr())),jule::Any(_2050aacda_Str(_80014_d.get()._field_Kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_2050655ad_assignTypeChecker> _81121_atc = jule::new_ptr<_2050655ad_assignTypeChecker>(_2050655ad_assignTypeChecker{._field_s=_self_, ._field_dest=_79957_dest, ._field_d=_80014_d, ._field_errorToken=_80028_errorToken});;
		jule::Bool _81717_ok = _205066735_check(_81121_atc.ptr());;
		if ((!(_81717_ok))) {
			return false;
		};
	};
	if (((!(_20508050c_IsConst(_80014_d.ptr()))) || (_2050aca01_Prim(_79957_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _82717_kind = _2050aca01_Prim(_79957_dest.ptr()).get()._field_Kind;;
	{
		
		if (_204ebe094_IsSigInt(_82717_kind)) {
			_case_begin_1db15b514:;
			{
				_2044650eb_SetI64(_80014_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_204463270_AsI64(_80014_d.get()._field_Constant.ptr())));
			}
		}
		else if (_204ebe1c6_IsUnsigInt(_82717_kind)) {
			_case_begin_1db15b58b:;
			{
				_204477c13_SetU64(_80014_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_2044573b8_AsU64(_80014_d.get()._field_Constant.ptr())));
			}
		}
		else if (_204ebe43a_IsFloat(_82717_kind)) {
			_case_begin_1db15b613:;
			{
				_20447c223_SetF64(_80014_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_20446423d_AsF64(_80014_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1db15b448:;
	};
	return true;
}



inline jule::Bool _20501e05b_checkTypeCompatibility(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_2050aa8de_TypeKind>& _84147_dest, jule::Ptr<_2050aa8de_TypeKind>& _84214_src, jule::Ptr<_202b89679_Token>& _84235_errorToken) {
	if ((_84214_src == nullptr)) {
		_205016c24_pushErr(_self_.ptr(), _84235_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_84147_dest.ptr())),jule::Any(_2050aacda_Str(_84214_src.ptr()))}));
		return false;
	};
	if ((_2050ae690_Tup(_84214_src.ptr()) != nullptr)) {
		_205016c24_pushErr(_self_.ptr(), _84235_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_84147_dest.ptr())),jule::Any(_2050aacda_Str(_84214_src.ptr()))}));
		return false;
	};
	_205063985_typeCompatibilityChecker _85617_tcc = _205063985_typeCompatibilityChecker{._field_s=_self_, ._field_dest=_84147_dest, ._field_src=_84214_src, ._field_errorToken=_84235_errorToken};;
	if (_20506506e_check(&_85617_tcc)) {
		return true;
	};
	_205016c24_pushErr(_self_.ptr(), _84235_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_84147_dest.ptr())),jule::Any(_2050aacda_Str(_84214_src.ptr()))}));
	return false;
}



inline jule::Ptr<_2050aa8de_TypeKind> _20501e435_buildNonGenericTypeKind(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20434156b_TypeDecl>& _87748_ast, jule::Slice<jule::Ptr<_20434d864_GenericDecl>>& _87814_generics) {
	jule::Ptr<_2050b8e19_typeChecker> _87917_tc = jule::new_ptr<_2050b8e19_typeChecker>(_2050b8e19_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_2050c6520_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_2050c6520_Lookup>(_self_, 3), ._field_ignoreGenerics=_87814_generics, });;
	return _2050c1185_checkDecl(_87917_tc.ptr(), _87748_ast);
}



inline void _20501e6dd_buildFnNonGenericTypeKinds(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ec7454_FnIns>& _88851_f) {
	jule::Slice<jule::Ptr<_20434d864_GenericDecl>> _88917_generics = nullptr;;
	if (_2043a626d_IsMethod(_88851_f.get()._field_Decl.ptr())) {
		_88917_generics=jule::append(_88851_f.get()._field_Decl.get()._field_Generics,_88851_f.get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_88917_generics=_88851_f.get()._field_Decl.get()._field_Generics;
	};
	{
		auto &expr = _88851_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1db165045:;
		if (it != expr.end()) {
			jule::Ptr<_204ec7267_ParamIns> _89621_p = *it;
			{
				if ((!(_204395b64_IsSelf(_89621_p.get()._field_Decl.ptr())))) {
					_89621_p.get()._field_Kind=_20501e435_buildNonGenericTypeKind(_self_, _89621_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_88917_generics);
				};
			}
			_iter_next_1db165045:;
			++it;
			goto _iter_begin_1db165045;
		}
		_iter_end_1db165045:;
	};
	if ((!(_2043a5a53_IsVoid(_88851_f.get()._field_Decl.ptr())))) {
		_88851_f.get()._field_Result=_20501e435_buildNonGenericTypeKind(_self_, _88851_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_88917_generics);
	};
}



inline jule::Ptr<_204ec7454_FnIns> _20501ea0c_getTraitCheckFnKind(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ec707a_Fn>& _90644_f) {
	if ((_90644_f.get()._field_Instances.len() == 1LL)) {
		return _90644_f.get()._field_Instances[0LL];
	};
	jule::Ptr<_204ec7454_FnIns> _91017_ins = _20439bdce_instanceForce(_90644_f);;
	jule::Ptr<_2050b8e19_typeChecker> _91217_tc = jule::new_ptr<_2050b8e19_typeChecker>(_2050b8e19_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_2050c6520_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_2050c6520_Lookup>(_self_, 3), });;
	{
		auto &expr = _91017_ins.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1db169566:;
		if (it != expr.end()) {
			jule::Ptr<_204ec7267_ParamIns> _91721_p = *it;
			{
				if ((!(_204395b64_IsSelf(_91721_p.get()._field_Decl.ptr())))) {
					_91721_p.get()._field_Kind=_2050c1185_checkDecl(_91217_tc.ptr(), _91721_p.get()._field_Decl.get()._field_Kind.get()._field_Decl);
				};
			}
			_iter_next_1db169566:;
			++it;
			goto _iter_begin_1db169566;
		}
		_iter_end_1db169566:;
	};
	if ((!(_2043a5a53_IsVoid(_90644_f.ptr())))) {
		_91017_ins.get()._field_Result=_2050c1185_checkDecl(_91217_tc.ptr(), _90644_f.get()._field_Result.get()._field_Kind.get()._field_Decl);
	};
	return _91017_ins;
}



inline jule::Bool _20501ee5d_checkConstraintsFn(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ec7454_FnIns>& _92943_f, jule::Ptr<_202b89679_Token>& _92959_et, jule::Ptr<_204ec7454_FnIns> _92975_exist) {
	jule::Ptr<_204ed56a4_constraintChecker> _93017_cc = _20501bac5_constraintChecker(_self_);;
	_93017_cc.get()._field_et=_92959_et;
	_93017_cc.get()._field_fi=_92943_f;
	if ((_92975_exist != nullptr)) {
		{
			auto &expr = _92975_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1db16ce3d:;
			if (it != expr.end()) {
				jule::I64 _93418_i = it - expr.begin();
				jule::Ptr<_2050a91b2_InsGeneric> _93425_g = *it;
				{
					_92943_f.get()._field_Generics[_93418_i].get()._field_Constraint=_93425_g.get()._field_Constraint;
				}
				_iter_next_1db16ce3d:;
				++it;
				_93418_i++;
				goto _iter_begin_1db16ce3d;
			}
			_iter_end_1db16ce3d:;
		};
	} else {
		_93017_cc.get()._field_uniq=true;
	};
	return _204ed6584_check(_93017_cc);
}



inline jule::Bool _2050203ae_checkConstraintsStruct(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20435cc5d_StructIns>& _94347_s, jule::Ptr<_202b89679_Token>& _94367_et, jule::Ptr<_20435cc5d_StructIns> _94383_exist) {
	jule::Ptr<_204ed56a4_constraintChecker> _94417_cc = _20501bac5_constraintChecker(_self_);;
	_94417_cc.get()._field_et=_94367_et;
	_94417_cc.get()._field_si=_94347_s;
	if ((_94383_exist != nullptr)) {
		{
			auto &expr = _94383_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1db170bee:;
			if (it != expr.end()) {
				jule::I64 _94818_i = it - expr.begin();
				jule::Ptr<_2050a91b2_InsGeneric> _94825_g = *it;
				{
					_94347_s.get()._field_Generics[_94818_i].get()._field_Constraint=_94825_g.get()._field_Constraint;
				}
				_iter_next_1db170bee:;
				++it;
				_94818_i++;
				goto _iter_begin_1db170bee;
			}
			_iter_end_1db170bee:;
		};
	} else {
		_94417_cc.get()._field_uniq=true;
	};
	return _204ed6584_check(_94417_cc);
}



inline jule::Bool _205020766_fnEnvironment(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ec7454_FnIns>& _96038_f, jule::Fn<jule::Bool(jule::Ptr<_205014062_Sema>&,jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>&)> _96049_algo) {
	jule::Ptr<_205014062_Sema> _96117_sema = _96038_f.get()._field_Decl.get()._field_sema;;
	jule::Ptr<_205074eb3_SymbolTable> _96217_old = _96038_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_20501685b_setCurrentFile(_96038_f.get()._field_Decl.get()._field_sema.ptr(), _96217_old);
	});;
	jule::Ptr<_205074eb3_SymbolTable> _96417_file = _20501366b_findFile(_96038_f.get()._field_Decl.get()._field_sema.get()._field_files,_96038_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_96417_file != nullptr)) {
		_20501685b_setCurrentFile(_96038_f.get()._field_Decl.get()._field_sema.ptr(), _96417_file);
	};
	jule::I64 _96917_size = _96038_f.get()._field_Generics.len();;
	if (((_96038_f.get()._field_Decl != nullptr) && (_96038_f.get()._field_Decl.get()._field_Owner != nullptr))) {
		_96917_size+=_96038_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>> _97417_generics = jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>::alloc(0LL,_96917_size);;
	_205013319_appendGenericTypeAliases(_97417_generics,_96038_f);
	jule::Bool _97713_ok = _96049_algo(_96117_sema,_97417_generics);;
	if ((_96117_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_96117_sema.get()._field_errors);
		_96117_sema.get()._field_errors=nullptr;
	};
	return _97713_ok;
}



inline void _2050209db_checkFnParamKind(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ec7267_ParamIns>& _98741_p) {
	_98741_p.get()._field_Kind.get()._field_Variadic=_98741_p.get()._field_Decl.get()._field_Variadic;
	if ((_98741_p.get()._field_Decl.get()._field_Reference && (!(_2050c2e9a_isValidForRef(_98741_p.get()._field_Kind))))) {
		_205016c24_pushErr(_self_.ptr(), _98741_p.get()._field_Decl.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_98741_p.get()._field_Kind.ptr()))}));
	};
}



inline jule::Bool _205020ce9_reloadFnInsTypes(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ec7454_FnIns> _99440_f) {
	if ((_204ec7641_IsBuiltin(_99440_f.ptr()) || _204ec7773_IsAnon(_99440_f.ptr()))) {
		return true;
	};
	return _205020766_fnEnvironment(_self_, _99440_f,jule::Fn<jule::Bool(jule::Ptr<_205014062_Sema>&,jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>&)>([=](jule::Ptr<_205014062_Sema>& _99843_sema, jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>& _99861_generics) mutable -> jule::Bool {
		jule::Bool _99921_ok = true;;
		{
			auto &expr = _99440_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1db182a57:;
			if (it != expr.end()) {
				jule::Ptr<_204ec7267_ParamIns> _100025_p = *it;
				{
					if (_204395b64_IsSelf(_100025_p.get()._field_Decl.ptr())) {
						if (_204396e2e_IsRef(_100025_p.get()._field_Decl.ptr())) {
							_100025_p.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(jule::new_ptr<_2050b3b4a_Sptr>(_2050b3b4a_Sptr{._field_Elem=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_99440_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_100025_p.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_99440_f.get()._field_Owner, 0)});
						};
					} else {
						_100025_p.get()._field_Kind=_20501c3cd_buildTypeWithGenerics(_99843_sema, _100025_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_99861_generics,_99440_f.get()._field_Refers);
						if ((_100025_p.get()._field_Kind != nullptr)) {
							_2050209db_checkFnParamKind(_self_, _100025_p);
						} else {
							_99921_ok=false;
						};
					};
				}
				_iter_next_1db182a57:;
				++it;
				goto _iter_begin_1db182a57;
			}
			_iter_end_1db182a57:;
		};
		if ((!(_2043a5a53_IsVoid(_99440_f.get()._field_Decl.ptr())))) {
			_99440_f.get()._field_Result=_20501c3cd_buildTypeWithGenerics(_99843_sema, _99440_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_99861_generics,_99440_f.get()._field_Refers);
			_99921_ok=((_99440_f.get()._field_Result != nullptr) && _99921_ok);
		};
		return _99921_ok;
	}));
}



inline jule::Bool _20502126c_checkRefValidityForInitExpr(jule::Ptr<_205014062_Sema> _self_, jule::Bool _103047_leftMut, jule::Ptr<_20507eb49_Data>& _103067_d, jule::Ptr<_202b89679_Token>& _103082_errorToken) {
	{
		auto &_match_expr{ _103067_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_205031cb6_Var>>()) {
			_case_begin_1db1887e9:;
			{
				goto _match_end_1db181d31;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec3021_TraitSubIdentExprModel>>()) {
			_case_begin_1db187be4:;
			{
				jule::Ptr<_204ec3021_TraitSubIdentExprModel> _103521_model = _103067_d.get()._field_Model.operator jule::Ptr<_204ec3021_TraitSubIdentExprModel>();;
				if ((!(_2050121a3_isValidModelForRef(_103521_model.get()._field_Expr)))) {
					_205016c24_pushErr(_self_.ptr(), _103082_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_103521_model.get()._field_Method.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec343e_StructSubIdentExprModel>>()) {
			_case_begin_1db187c5a:;
			{
				jule::Ptr<_204ec343e_StructSubIdentExprModel> _104121_model = _103067_d.get()._field_Model.operator jule::Ptr<_204ec343e_StructSubIdentExprModel>();;
				if ((!(_2050121a3_isValidModelForRef(_104121_model.get()._field_Expr.get()._field_Model)))) {
					_205016c24_pushErr(_self_.ptr(), _103082_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_104121_model.get()._field_Field.get()._field_Decl.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec3a05_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_204ec3be2_CommonSubIdentExprModel>>()) {
			_case_begin_1db187cc1:;
			{
				_205016c24_pushErr(_self_.ptr(), _103082_errorToken,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec1717_UnaryExprModel>>()) {
			_case_begin_1db187d37:;
			{
				jule::Ptr<_204ec1717_UnaryExprModel> _105121_unary = _103067_d.get()._field_Model.operator jule::Ptr<_204ec1717_UnaryExprModel>();;
				if ((_105121_unary.get()._field_Op.get()._field_Kind == jule::Str("*", 1))) {
					if ((!(_2050121a3_isValidModelForRef(_103067_d.get()._field_Model)))) {
						_205016c24_pushErr(_self_.ptr(), _103082_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_1db181d31;
				};
				goto _case_begin_1db187b28;
			}
		}
		else {
			_case_begin_1db187b28:;
			{
				_205016c24_pushErr(_self_.ptr(), _103082_errorToken,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1db181d31:;
	};
	if ((_103047_leftMut && (!(_103067_d.get()._field_Mutable)))) {
		_205016c24_pushErr(_self_.ptr(), _103082_errorToken,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _205021844_checkValidityForInitExpr(jule::Ptr<_205014062_Sema> _self_, jule::Bool _107144_leftMut, jule::Bool _107159_leftRef, jule::Ptr<_2050aa8de_TypeKind>& _107210_leftKind, jule::Ptr<_20507eb49_Data>& _107236_d, jule::Ptr<_202b89679_Token>& _107251_errorToken) {
	if (((_107144_leftMut && (!(_107236_d.get()._field_Mutable))) && _2050abcdb_Mutable(_107236_d.get()._field_Kind.ptr()))) {
		_205016c24_pushErr(_self_.ptr(), _107251_errorToken,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_107236_d.get()._field_Kind.ptr()))}));
		return false;
	};
	if (_107159_leftRef) {
		if ((!(_20502126c_checkRefValidityForInitExpr(_self_, _107144_leftMut,_107236_d,_107251_errorToken)))) {
			return false;
		};
	};
	jule::Ptr<_2050655ad_assignTypeChecker> _108217_atc = jule::new_ptr<_2050655ad_assignTypeChecker>(_2050655ad_assignTypeChecker{._field_s=_self_, ._field_d=_107236_d, ._field_errorToken=_107251_errorToken});;
	return _205065c84_checkValidity(_108217_atc.ptr());
}



inline jule::Bool _205021c0c_checkTypeAliasDeclKind(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_2050a9beb_TypeAlias>& _109047_ta, jule::Trait<_2050c6520_Lookup> _109067_l) {
	jule::Bool _109080_ok = jule::Bool();
	jule::Ptr<_205074eb3_SymbolTable> _109117_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_20501685b_setCurrentFile(_self_.ptr(), _109117_old);
	});;
	if ((_109047_ta.get()._field_Token != nullptr)) {
		jule::Ptr<_205074eb3_SymbolTable> _109621_file = _20501366b_findFile(_self_.get()._field_files,_109047_ta.get()._field_Token.get()._field_File);;
		if ((_109621_file != nullptr)) {
			_20501685b_setCurrentFile(_self_.ptr(), _109621_file);
		};
	};
	_109080_ok=_20501b861_checkTypeWithRefers(_self_, _109047_ta.get()._field_Kind,_109067_l,nullptr,jule::new_ptr<_2050b8105_referencer>(_2050b8105_referencer{._field_ident=_109047_ta.get()._field_Ident, ._field_owner=jule::Any(_109047_ta), ._field_refs=(&(_109047_ta.get()._field_Refers))}));
	if (((_109080_ok && (_2050ad716_Arr(_109047_ta.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _2050ad716_Arr(_109047_ta.get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_205016c24_pushErr(_self_.ptr(), _109047_ta.get()._field_Kind.get()._field_Decl.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_109080_ok=false;
	};
	return _109080_ok;
}



inline void _20502202b_checkTypeAliasDecl(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_2050a9beb_TypeAlias>& _111343_ta, jule::Trait<_2050c6520_Lookup> _111363_l) {
	if (_202b8be1d_IsIgnoreIdent(_111343_ta.get()._field_Ident)) {
		_205016c24_pushErr(_self_.ptr(), _111343_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_205021c0c_checkTypeAliasDeclKind(_self_, _111343_ta,_111363_l);
}



inline void _2050222a1_checkTypeAliasDeclDup(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_2050a9beb_TypeAlias>& _112146_ta) {
	if (_202b8be1d_IsIgnoreIdent(_112146_ta.get()._field_Ident)) {
		_205016c24_pushErr(_self_.ptr(), _112146_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_20501784b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_112146_ta)),_112146_ta.get()._field_Ident,_112146_ta.get()._field_CppLinked)) {
		_205016c24_pushErr(_self_.ptr(), _112146_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_112146_ta.get()._field_Ident)}));
		_205017043_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_205021c0c_checkTypeAliasDeclKind(_self_, _112146_ta,jule::Trait<_2050c6520_Lookup>(_self_, 3));
}



inline jule::Bool _205022515_checkTypeAliasDecls(jule::Ptr<_205014062_Sema> _self_) {
	jule::Bool _113341_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1db19bab5:;
		if (it != expr.end()) {
			jule::Ptr<_2050a9beb_TypeAlias> _113421_ta = *it;
			{
				_2050222a1_checkTypeAliasDeclDup(_self_, _113421_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_113341_ok = false;
					return _113341_ok;
				};
			}
			_iter_next_1db19bab5:;
			++it;
			goto _iter_begin_1db19bab5;
		}
		_iter_end_1db19bab5:;
	};
	_113341_ok = true;
	return _113341_ok;
}



inline void _1d9c88791_checkEnumItemsDup(_205014062_Sema* _self_, jule::Slice<jule::Ptr<_204ed1040_EnumItem>> _114539_items) {
	{
		auto &expr = _114539_items;
		auto it = expr.begin();
		_iter_begin_1d9c8985d:;
		if (it != expr.end()) {
			jule::Ptr<_204ed1040_EnumItem> &_114616_item = *it;
			{
				if (_114616_item.get()._field_Ident.empty()) {
					goto _iter_next_1d9c8985d;
				} else if (_202b8be1d_IsIgnoreIdent(_114616_item.get()._field_Ident)) {
					_205016c24_pushErr(&(*_self_), _114616_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _114539_items;
						auto it = expr.begin();
						_iter_begin_1d9c8a6d8:;
						if (it != expr.end()) {
							jule::Ptr<_204ed1040_EnumItem> &_115224_citem = *it;
							{
								if ((_114616_item == _115224_citem)) {
									goto _iter_end_1d9c8a6d8;
								} else if ((_114616_item.get()._field_Ident == _115224_citem.get()._field_Ident)) {
									_205016c24_pushErr(&(*_self_), _114616_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_114616_item.get()._field_Ident)}));
									_205017043_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1d9c8a6d8;
								};
							}
							_iter_next_1d9c8a6d8:;
							++it;
							goto _iter_begin_1d9c8a6d8;
						}
						_iter_end_1d9c8a6d8:;
					};
				};
			}
			_iter_next_1d9c8985d:;
			++it;
			goto _iter_begin_1d9c8985d;
		}
		_iter_end_1d9c8985d:;
	};
}

inline void _1d9c94e40_checkEnumItemsDup(_205014062_Sema* _self_, jule::Slice<jule::Ptr<_204ed2a69_TypeEnumItem>> _114539_items) {
	{
		auto &expr = _114539_items;
		auto it = expr.begin();
		_iter_begin_1d9c9623d:;
		if (it != expr.end()) {
			jule::Ptr<_204ed2a69_TypeEnumItem> &_114616_item = *it;
			{
				if (_114616_item.get()._field_Ident.empty()) {
					goto _iter_next_1d9c9623d;
				} else if (_202b8be1d_IsIgnoreIdent(_114616_item.get()._field_Ident)) {
					_205016c24_pushErr(&(*_self_), _114616_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _114539_items;
						auto it = expr.begin();
						_iter_begin_1d9c970b8:;
						if (it != expr.end()) {
							jule::Ptr<_204ed2a69_TypeEnumItem> &_115224_citem = *it;
							{
								if ((_114616_item == _115224_citem)) {
									goto _iter_end_1d9c970b8;
								} else if ((_114616_item.get()._field_Ident == _115224_citem.get()._field_Ident)) {
									_205016c24_pushErr(&(*_self_), _114616_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_114616_item.get()._field_Ident)}));
									_205017043_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1d9c970b8;
								};
							}
							_iter_next_1d9c970b8:;
							++it;
							goto _iter_begin_1d9c970b8;
						}
						_iter_end_1d9c970b8:;
					};
				};
			}
			_iter_next_1d9c9623d:;
			++it;
			goto _iter_begin_1d9c9623d;
		}
		_iter_end_1d9c9623d:;
	};
}



inline void _205022a10_checkEnumItemsStr(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ed1a35_Enum>& _116542_e) {
	jule::Ptr<_2050816b7_Eval> _116617_eval = _20501d610_eval(_self_, jule::Trait<_2050c6520_Lookup>(_self_, 3));;
	{
		auto &expr = _116542_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1db19dc3d:;
		if (it != expr.end()) {
			jule::Ptr<_204ed1040_EnumItem> _116721_item = *it;
			{
				if (_204ed142a_AutoExpr(_116721_item.ptr())) {
					_116721_item.get()._field_Value=jule::new_ptr<_205080bc2_Value>(_205080bc2_Value{._field_Data=jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Constant=static__204454030_NewStr(_116721_item.get()._field_Ident)})});
					_116721_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_116721_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_20507eb49_Data> _117625_d = _20509c0d9_evalExpr(_116617_eval, _116721_item.get()._field_Value.get()._field_Expr);;
					if ((_117625_d == nullptr)) {
						goto _iter_next_1db19dc3d;
					};
					if ((!(_20508050c_IsConst(_117625_d.ptr())))) {
						_205016c24_pushErr(_self_.ptr(), _116721_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_20501db0a_checkAssignType(_self_, false,_116542_e.get()._field_Kind.get()._field_Kind,_117625_d,_116721_item.get()._field_Token);
					_116721_item.get()._field_Value.get()._field_Data=_117625_d;
				};
			}
			_iter_next_1db19dc3d:;
			++it;
			goto _iter_begin_1db19dc3d;
		}
		_iter_end_1db19dc3d:;
	};
}



inline void _205022c85_checkEnumItemsInt(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ed1a35_Enum>& _119142_e) {
	jule::Ptr<_2050b03b6_Prim> _119213_prim = _2050aca01_Prim(_119142_e.get()._field_Kind.get()._field_Kind.ptr());;
	jule::U64 _119317_max = static_cast<jule::U64>(_2048802e6_Max(_2050b0729_Str(_119213_prim.ptr())));;
	jule::Ptr<_2050816b7_Eval> _119417_eval = _20501d610_eval(_self_, jule::Trait<_2050c6520_Lookup>(_self_, 3));;
	{
		auto &expr = _119142_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1db1a43c5:;
		if (it != expr.end()) {
			jule::I64 _119514_i = it - expr.begin();
			jule::Ptr<_204ed1040_EnumItem> _119521_item = *it;
			{
				if ((_119317_max == 0LLU)) {
					_205016c24_pushErr(_self_.ptr(), _119521_item.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_119317_max)--;
				};
				if (_204ed142a_AutoExpr(_119521_item.ptr())) {
					_119521_item.get()._field_Value=jule::new_ptr<_205080bc2_Value>(_205080bc2_Value{._field_Data=jule::new_ptr<_20507eb49_Data>()});
					{
						
						if (_204ebe094_IsSigInt(_2050b0729_Str(_119213_prim.ptr()))) {
							_case_begin_1db1a71ec:;
							{
								_119521_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__204420804_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((_119317_max - (_119317_max - static_cast<jule::U64>(_119514_i))))));
							}
						}
						else {
							_case_begin_1db1a6828:;
							{
								_119521_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__20443783d_NewU64(static_cast<jule::U64>((_119317_max - (_119317_max - static_cast<jule::U64>(_119514_i)))));
							}
						}
						_match_end_1db1a67b2:;
					};
					_119521_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_119521_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_20507eb49_Data> _121325_d = _20509c0d9_evalExpr(_119417_eval, _119521_item.get()._field_Value.get()._field_Expr);;
					if ((_121325_d == nullptr)) {
						goto _iter_next_1db1a43c5;
					};
					if ((!(_20508050c_IsConst(_121325_d.ptr())))) {
						_205016c24_pushErr(_self_.ptr(), _119521_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_20501db0a_checkAssignType(_self_, false,_119142_e.get()._field_Kind.get()._field_Kind,_121325_d,_119521_item.get()._field_Token);
					_119521_item.get()._field_Value.get()._field_Data=_121325_d;
				};
			}
			_iter_next_1db1a43c5:;
			++it;
			_119514_i++;
			goto _iter_begin_1db1a43c5;
		}
		_iter_end_1db1a43c5:;
	};
}



inline void _20502300a_checkEnumDecl(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ed1a35_Enum>& _122638_e) {
	if (_202b8be1d_IsIgnoreIdent(_122638_e.get()._field_Ident)) {
		_205016c24_pushErr(_self_.ptr(), _122638_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_20501784b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_122638_e)),_122638_e.get()._field_Ident,false)) {
		_205016c24_pushErr(_self_.ptr(), _122638_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_122638_e.get()._field_Ident)}));
		_205017043_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_122638_e.get()._field_Items.len() == 0LL)) {
		_205016c24_pushErr(_self_.ptr(), _122638_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_122638_e.get()._field_Ident)}));
	};
	_1d9c88791_checkEnumItemsDup(_self_.ptr(), _122638_e.get()._field_Items);
	if ((_122638_e.get()._field_Kind != nullptr)) {
		if ((!(_20501be7c_checkType(_self_, _122638_e.get()._field_Kind,jule::Trait<_2050c6520_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_122638_e.get()._field_Kind=jule::new_ptr<_2050aea47_TypeSymbol>(_2050aea47_TypeSymbol{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_2050b03b6_Prim> _125317_t = _2050aca01_Prim(_122638_e.get()._field_Kind.get()._field_Kind.ptr());;
	if ((_125317_t == nullptr)) {
		_205016c24_pushErr(_self_.ptr(), _122638_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_2050b35ea_IsStr(_125317_t.ptr())) {
			_case_begin_1d9c906bb:;
			{
				_205022a10_checkEnumItemsStr(_self_, _122638_e);
			}
		}
		else if (_204ebe308_IsInt(_2050b0729_Str(_125317_t.ptr()))) {
			_case_begin_1d9c904ac:;
			{
				_205022c85_checkEnumItemsInt(_self_, _122638_e);
			}
		}
		else {
			_case_begin_1d9c8e4ab:;
			{
				_205016c24_pushErr(_self_.ptr(), _122638_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1d9c8e445:;
	};
}



inline void _205023280_checkTypeEnumDecl(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ed3130_TypeEnum>& _127042_e) {
	if (_202b8be1d_IsIgnoreIdent(_127042_e.get()._field_Ident)) {
		_205016c24_pushErr(_self_.ptr(), _127042_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_20501784b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_127042_e)),_127042_e.get()._field_Ident,false)) {
		_205016c24_pushErr(_self_.ptr(), _127042_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_127042_e.get()._field_Ident)}));
		_205017043_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_127042_e.get()._field_Items.len() == 0LL)) {
		_205016c24_pushErr(_self_.ptr(), _127042_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_127042_e.get()._field_Ident)}));
		return;;
	};
	_1d9c94e40_checkEnumItemsDup(_self_.ptr(), _127042_e.get()._field_Items);
	{
		auto &expr = _127042_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1d9c9557d:;
		if (it != expr.end()) {
			jule::Ptr<_204ed2a69_TypeEnumItem> _128421_item = *it;
			{
				if ((_128421_item.get()._field_Kind == nullptr)) {
					_205016c24_pushErr(_self_.ptr(), _128421_item.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_1d9c9557d;
				};
				jule::Bool _128917_ok = _20501be7c_checkType(_self_, _128421_item.get()._field_Kind,jule::Trait<_2050c6520_Lookup>(_self_, 3));;
				if ((!(_128917_ok))) {
					goto _iter_next_1d9c9557d;
				};
				jule::Ptr<_2050b03b6_Prim> _129317_p = _2050aca01_Prim(_128421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_129317_p != nullptr) && _2050b385e_IsAny(_129317_p.ptr()))) {
					_205016c24_pushErr(_self_.ptr(), _128421_item.get()._field_Token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1d9c9557d:;
			++it;
			goto _iter_begin_1d9c9557d;
		}
		_iter_end_1d9c9557d:;
	};
	if ((_127042_e.get()._field_Items.len() == 1LL)) {
		jule::Ptr<_204ed2a69_TypeEnumItem> _129921_item = _127042_e.get()._field_Items[0LL];;
		_2050aa8de_TypeKind _130017_tk = _2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_127042_e, 4)};;
		if (((_129921_item.get()._field_Kind.get()._field_Kind != nullptr) && _2050ab0e8_Equals(_129921_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_2050aa8de_TypeKind>)((&(_130017_tk))))))) {
			_205016c24_pushErr(_self_.ptr(), _129921_item.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_204ed3460_Str(_127042_e.ptr()))}));
		};
	};
}



inline jule::Bool _2050234e4_checkEnumDecls(jule::Ptr<_205014062_Sema> _self_) {
	jule::Bool _131036_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Enums;
		auto it = expr.begin();
		_iter_begin_1d9ca01d1:;
		if (it != expr.end()) {
			jule::Ptr<_204ed1a35_Enum> _131121_e = *it;
			{
				_20502300a_checkEnumDecl(_self_, _131121_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_131036_ok = false;
					return _131036_ok;
				};
			}
			_iter_next_1d9ca01d1:;
			++it;
			goto _iter_begin_1d9ca01d1;
		}
		_iter_end_1d9ca01d1:;
	};
	_131036_ok = true;
	return _131036_ok;
}



inline jule::Bool _205023758_checkTypeEnumDecls(jule::Ptr<_205014062_Sema> _self_) {
	jule::Bool _132240_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1d9ca1a2e:;
		if (it != expr.end()) {
			jule::Ptr<_204ed3130_TypeEnum> _132321_e = *it;
			{
				_205023280_checkTypeEnumDecl(_self_, _132321_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_132240_ok = false;
					return _132240_ok;
				};
			}
			_iter_next_1d9ca1a2e:;
			++it;
			goto _iter_begin_1d9ca1a2e;
		}
		_iter_end_1d9ca1a2e:;
	};
	_132240_ok = true;
	return _132240_ok;
}



inline jule::Bool _205023a66_checkDeclGenerics(_205014062_Sema* _self_, jule::Slice<jule::Ptr<_20434d864_GenericDecl>>& _133337_generics) {
	jule::Bool _133370_ok = jule::Bool();
	_133370_ok=true;
	{
		auto &expr = _133337_generics;
		auto it = expr.begin();
		_iter_begin_1d9ca35be:;
		if (it != expr.end()) {
			jule::I64 _133513_i = it - expr.begin();
			jule::Ptr<_20434d864_GenericDecl> &_133516_g = *it;
			{
				if (_202b8be1d_IsIgnoreIdent(_133516_g.get()._field_Ident)) {
					_205016c24_pushErr(&(*_self_), _133516_g.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_133370_ok=false;
					goto _iter_next_1d9ca35be;
				};
				_julec_label_duplicationLookup:;
				{
					auto &expr = _133337_generics;
					auto it = expr.begin();
					_iter_begin_1d9ca45ae:;
					if (it != expr.end()) {
						jule::I64 _134417_j = it - expr.begin();
						jule::Ptr<_20434d864_GenericDecl> &_134420_ct = *it;
						{
							{
								
								if ((_134417_j >= _133513_i)) {
									_case_begin_1d9ca601c:;
									{
										goto _iter_end_1d9ca45ae;
									}
								}
								else if ((_133516_g.get()._field_Ident == _134420_ct.get()._field_Ident)) {
									_case_begin_1d9ca6094:;
									{
										_205016c24_pushErr(&(*_self_), _133516_g.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_133516_g.get()._field_Ident)}));
										_205017043_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_133370_ok=false;
										goto _iter_end_1d9ca45ae;
									}
								}
								_match_end_1d9ca5deb:;
							};
						}
						_iter_next_1d9ca45ae:;
						++it;
						_134417_j++;
						goto _iter_begin_1d9ca45ae;
					}
					_iter_end_1d9ca45ae:;
				};
			}
			_iter_next_1d9ca35be:;
			++it;
			_133513_i++;
			goto _iter_begin_1d9ca35be;
		}
		_iter_end_1d9ca35be:;
	};
	return _133370_ok;
}



inline jule::Bool _205023d74_checkFnDeclParamsDup(_205014062_Sema* _self_, jule::Ptr<_204ec707a_Fn>& _136040_f) {
	jule::Bool _136050_ok = jule::Bool();
	_136050_ok=true;
	_julec_label_check:;
	{
		auto &expr = _136040_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1d9ca8629:;
		if (it != expr.end()) {
			jule::I64 _136313_i = it - expr.begin();
			jule::Ptr<_204ec6d8d_Param> &_136316_p = *it;
			{
				{
					auto &expr = _136040_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1d9ca84d6:;
					if (it != expr.end()) {
						jule::Ptr<_20434d864_GenericDecl> &_136520_g = *it;
						{
							if ((_136316_p.get()._field_Ident == _136520_g.get()._field_Ident)) {
								_136050_ok=false;
								_205016c24_pushErr(&(*_self_), _136316_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136316_p.get()._field_Ident)}));
								_205017043_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1d9ca8629;
							};
						}
						_iter_next_1d9ca84d6:;
						++it;
						goto _iter_begin_1d9ca84d6;
					}
					_iter_end_1d9ca84d6:;
				};
				_julec_label_paramsLookup:;
				{
					auto &expr = _136040_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1d9ca9e66:;
					if (it != expr.end()) {
						jule::I64 _137517_j = it - expr.begin();
						jule::Ptr<_204ec6d8d_Param> &_137520_jp = *it;
						{
							{
								
								if ((_137517_j >= _136313_i)) {
									_case_begin_1d9cabd47:;
									{
										goto _iter_end_1d9ca9e66;
									}
								}
								else if ((_202b8c1b5_IsAnonIdent(_136316_p.get()._field_Ident) || _202b8c1b5_IsAnonIdent(_137520_jp.get()._field_Ident))) {
									_case_begin_1d9cabdbe:;
									{
										goto _iter_end_1d9ca9e66;
									}
								}
								else if ((_136316_p.get()._field_Ident == _137520_jp.get()._field_Ident)) {
									_case_begin_1d9cabe46:;
									{
										_136050_ok=false;
										_205016c24_pushErr(&(*_self_), _136316_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136316_p.get()._field_Ident)}));
										_205017043_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1d9ca8629;
									}
								}
								_match_end_1d9cabc15:;
							};
						}
						_iter_next_1d9ca9e66:;
						++it;
						_137517_j++;
						goto _iter_begin_1d9ca9e66;
					}
					_iter_end_1d9ca9e66:;
				};
			}
			_iter_next_1d9ca8629:;
			++it;
			_136313_i++;
			goto _iter_begin_1d9ca8629;
		}
		_iter_end_1d9ca8629:;
	};
	return _136050_ok;
}



inline jule::Bool _205024182_checkFnDeclResultDup(_205014062_Sema* _self_, jule::Ptr<_204ec707a_Fn>& _139440_f) {
	jule::Bool _139450_ok = jule::Bool();
	_139450_ok=true;
	if (_2043a5a53_IsVoid(_139440_f.ptr())) {
		return _139450_ok;
	};
	{
		auto &expr = _139440_f.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1d9cb0026:;
		if (it != expr.end()) {
			jule::I64 _140113_i = it - expr.begin();
			jule::Ptr<_202b89679_Token> &_140116_v = *it;
			{
				if ((_202b8be1d_IsIgnoreIdent(_140116_v.get()._field_Kind) || _202b8c1b5_IsAnonIdent(_140116_v.get()._field_Kind))) {
					goto _iter_next_1d9cb0026;
				};
				{
					auto &expr = _139440_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1d9cb1588:;
					if (it != expr.end()) {
						jule::Ptr<_20434d864_GenericDecl> &_140620_g = *it;
						{
							if ((_140116_v.get()._field_Kind == _140620_g.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1d9cb1588:;
						++it;
						goto _iter_begin_1d9cb1588;
					}
					_iter_end_1d9cb1588:;
				};
				{
					auto &expr = _139440_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1d9cb2886:;
					if (it != expr.end()) {
						jule::Ptr<_204ec6d8d_Param> &_141220_p = *it;
						{
							if ((_140116_v.get()._field_Kind == _141220_p.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1d9cb2886:;
						++it;
						goto _iter_begin_1d9cb2886;
					}
					_iter_end_1d9cb2886:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _139440_f.get()._field_Result.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_1d9cb3b95:;
					if (it != expr.end()) {
						jule::I64 _142017_j = it - expr.begin();
						jule::Ptr<_202b89679_Token> &_142020_jv = *it;
						{
							{
								
								if ((_142017_j >= _140113_i)) {
									_case_begin_1d9cb49ba:;
									{
										goto _iter_end_1d9cb3b95;
									}
								}
								else if ((_142020_jv.get()._field_Kind == _140116_v.get()._field_Kind)) {
									_case_begin_1d9cb4a42:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1d9cb4899:;
							};
						}
						_iter_next_1d9cb3b95:;
						++it;
						_142017_j++;
						goto _iter_begin_1d9cb3b95;
					}
					_iter_end_1d9cb3b95:;
				};
				goto _iter_next_1d9cb0026;
				_julec_label_exist:;
				_205016c24_pushErr(&(*_self_), _140116_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_140116_v.get()._field_Kind)}));
				_205017043_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_139450_ok=false;
			}
			_iter_next_1d9cb0026:;
			++it;
			_140113_i++;
			goto _iter_begin_1d9cb0026;
		}
		_iter_end_1d9cb0026:;
	};
	return _139450_ok;
}



inline void _205024407_checkFnDeclPrototype(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ec707a_Fn>& _144145_f) {
	if ((_144145_f.get()._field_Exceptional && _144145_f.get()._field_CppLinked)) {
		_205016c24_pushErr(_self_.ptr(), _144145_f.get()._field_Token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_144145_f.get()._field_Exceptional) {
		if (_2043a6988_IsEntryPoint(_144145_f.ptr())) {
			_205016c24_pushErr(_self_.ptr(), _144145_f.get()._field_Token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_2043a7813_IsInit(_144145_f.ptr())) {
			_205016c24_pushErr(_self_.ptr(), _144145_f.get()._field_Token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_205023a66_checkDeclGenerics(_self_.ptr(), _144145_f.get()._field_Generics)))) {
			_case_begin_1d9cb956e:;
		}
		else if ((!(_205023d74_checkFnDeclParamsDup(_self_.ptr(), _144145_f)))) {
			_case_begin_1d9cb95d5:;
		}
		else if ((!(_205024182_checkFnDeclResultDup(_self_.ptr(), _144145_f)))) {
			_case_begin_1d9cb964b:;
		}
		_match_end_1d9cb7e41:;
	};
}



inline void _20502467c_checkTraitDeclMethod(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ec707a_Fn>& _146245_f) {
	if (_202b8be1d_IsIgnoreIdent(_146245_f.get()._field_Ident)) {
		_205016c24_pushErr(_self_.ptr(), _146245_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_146245_f.get()._field_sema=_self_;
	_205024407_checkFnDeclPrototype(_self_, _146245_f);
	jule::Ptr<_204ec7454_FnIns> _146917_ins = _20439cb9e_instance(_146245_f);;
	_205020ce9_reloadFnInsTypes(_self_, _146917_ins);
	_146917_ins.get()._field_reloaded=true;
	_2043949cb_appendInstance(_146245_f.ptr(), _146917_ins);
}



inline void _205024902_checkTraitDeclMethods(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ece8e0_Trait>& _147546_t) {
	{
		auto &expr = _147546_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1d9cbcebd:;
		if (it != expr.end()) {
			jule::I64 _147614_i = it - expr.begin();
			jule::Ptr<_204ec707a_Fn> _147621_f = *it;
			{
				_20502467c_checkTraitDeclMethod(_self_, _147621_f);
				_147546_t.get()._field_Mutable=(_147546_t.get()._field_Mutable || _147621_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicateLookup:;
				{
					auto &expr = _147546_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1d9cbee7b:;
					if (it != expr.end()) {
						jule::I64 _148717_j = it - expr.begin();
						jule::Ptr<_204ec707a_Fn> _148720_jf = *it;
						{
							{
								
								if ((_148717_j >= _147614_i)) {
									_case_begin_1d9cc10c0:;
									{
										goto _iter_end_1d9cbee7b;
									}
								}
								else if ((_147621_f.get()._field_Ident == _148720_jf.get()._field_Ident)) {
									_case_begin_1d9cc1147:;
									{
										_205016c24_pushErr(_self_.ptr(), _147621_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_147621_f.get()._field_Ident)}));
										_205017043_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1d9cbee7b;
									}
								}
								_match_end_1d9cc0e9e:;
							};
						}
						_iter_next_1d9cbee7b:;
						++it;
						_148717_j++;
						goto _iter_begin_1d9cbee7b;
					}
					_iter_end_1d9cbee7b:;
				};
			}
			_iter_next_1d9cbcebd:;
			++it;
			_147614_i++;
			goto _iter_begin_1d9cbcebd;
		}
		_iter_end_1d9cbcebd:;
	};
}



inline void _205024b77_checkTraitDecl(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ece8e0_Trait>& _150639_t) {
	if (_202b8be1d_IsIgnoreIdent(_150639_t.get()._field_Ident)) {
		_205016c24_pushErr(_self_.ptr(), _150639_t.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_20501784b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_150639_t)),_150639_t.get()._field_Ident,false)) {
		_205016c24_pushErr(_self_.ptr(), _150639_t.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_150639_t.get()._field_Ident)}));
		_205017043_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_205024902_checkTraitDeclMethods(_self_, _150639_t);
}



inline jule::Bool _205024ddb_checkTraitDecls(jule::Ptr<_205014062_Sema> _self_) {
	jule::Bool _151837_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1d9cc5503:;
		if (it != expr.end()) {
			jule::Ptr<_204ece8e0_Trait> _151921_t = *it;
			{
				_205024b77_checkTraitDecl(_self_, _151921_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_151837_ok = false;
					return _151837_ok;
				};
			}
			_iter_next_1d9cc5503:;
			++it;
			goto _iter_begin_1d9cc5503;
		}
		_iter_end_1d9cc5503:;
	};
	_151837_ok = true;
	return _151837_ok;
}



inline jule::Bool _205025293_checkTraitImplMethods(_205014062_Sema* _self_, jule::Ptr<_204ece8e0_Trait>& _152945_base, jule::Ptr<_204ed75da_Impl>& _152960_ipl) {
	jule::Bool _152974_ok = jule::Bool();
	_152974_ok=true;
	{
		auto &expr = _152960_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1d9cc744a:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> &_153116_f = *it;
			{
				if ((_204ed076a_FindMethod(_152945_base.ptr(), _153116_f.get()._field_Ident) == nullptr)) {
					_205016c24_pushErr(&(*_self_), _153116_f.get()._field_Token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_152945_base.get()._field_Ident),jule::Any(_153116_f.get()._field_Ident)}));
					_152974_ok=false;
				};
			}
			_iter_next_1d9cc744a:;
			++it;
			goto _iter_begin_1d9cc744a;
		}
		_iter_end_1d9cc744a:;
	};
	return _152974_ok;
}



inline jule::Bool _20502564a_implToStruct(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20433367e_Struct>& _154037_dest, jule::Ptr<_204ed75da_Impl>& _154057_ipl) {
	jule::Bool _154071_ok = jule::Bool();
	_154071_ok=true;
	{
		auto &expr = _154057_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1d9cc998b:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> _154421_f = *it;
			{
				if (((_20431d1d5_FindMethod(_154037_dest.ptr(), _154421_f.get()._field_Ident,_154421_f.get()._field_Statically) != nullptr) || (_2043210b7_FindField(_154037_dest.ptr(), _154421_f.get()._field_Ident) != nullptr))) {
					_205016c24_pushErr(_self_.ptr(), _154421_f.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154037_dest.get()._field_Ident),jule::Any(_154421_f.get()._field_Ident)}));
					_154071_ok=false;
					goto _iter_next_1d9cc998b;
				};
				if (((_154037_dest.get()._field_Generics.len() > 0LL) && (_154421_f.get()._field_Generics.len() > 0LL))) {
					{
						auto &expr = _154421_f.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1d9ccc296:;
						if (it != expr.end()) {
							jule::Ptr<_20434d864_GenericDecl> _155224_fg = *it;
							{
								{
									auto &expr = _154037_dest.get()._field_Generics;
									auto it = expr.begin();
									_iter_begin_1d9cccb04:;
									if (it != expr.end()) {
										jule::Ptr<_20434d864_GenericDecl> _155328_dg = *it;
										{
											if ((_155224_fg.get()._field_Ident == _155328_dg.get()._field_Ident)) {
												_205016c24_pushErr(_self_.ptr(), _155224_fg.get()._field_Token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_154071_ok=false;
											};
										}
										_iter_next_1d9cccb04:;
										++it;
										goto _iter_begin_1d9cccb04;
									}
									_iter_end_1d9cccb04:;
								};
							}
							_iter_next_1d9ccc296:;
							++it;
							goto _iter_begin_1d9ccc296;
						}
						_iter_end_1d9ccc296:;
					};
				};
				_205017b6a_checkDirectives(_self_, _154421_f.get()._field_Directives,jule::Any(_154421_f));
				_154421_f.get()._field_sema=_self_;
				_154421_f.get()._field_Owner=_154037_dest;
				_154037_dest.get()._field_Methods = jule::alloc_for_append(_154037_dest.get()._field_Methods,1);_154037_dest.get()._field_Methods.__push(_154421_f);;
			}
			_iter_next_1d9cc998b:;
			++it;
			goto _iter_begin_1d9cc998b;
		}
		_iter_end_1d9cc998b:;
	};
	{
		auto &expr = _154057_ipl.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_1d9cc9ded:;
		if (it != expr.end()) {
			jule::Ptr<_205031cb6_Var> _156921_v = *it;
			{
				;
				if (((_20431d1d5_FindMethod(_154037_dest.ptr(), _156921_v.get()._field_Ident,true) != nullptr) || (_20431de3e_FindStatic(_154037_dest.ptr(), _156921_v.get()._field_Ident) != nullptr))) {
					_205016c24_pushErr(_self_.ptr(), _156921_v.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154037_dest.get()._field_Ident),jule::Any(_156921_v.get()._field_Ident)}));
					_154071_ok=false;
					goto _iter_next_1d9cc9ded;
				};
				_154037_dest.get()._field_Statics = jule::alloc_for_append(_154037_dest.get()._field_Statics,1);_154037_dest.get()._field_Statics.__push(_156921_v);;
			}
			_iter_next_1d9cc9ded:;
			++it;
			goto _iter_begin_1d9cc9ded;
		}
		_iter_end_1d9cc9ded:;
	};
	return _154071_ok;
}



inline void _2050258c0_implTrait(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ed75da_Impl>& _158234_decl) {
	jule::Ptr<_2050aa8de_TypeKind> _158317_base_t = _20501c9e9_selectType(_self_, _158234_decl.get()._field_Base);;
	if ((_158317_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_204ece8e0_Trait> _158717_base = _2050ae1b7_Trait(_158317_base_t.ptr());;
	if ((_158717_base == nullptr)) {
		_205016c24_pushErr(_self_.ptr(), _158234_decl.get()._field_Base.get()._field_Token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_158317_base_t.ptr()))}));
		_205017043_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2050aa8de_TypeKind> _159417_destT = _20501c9e9_selectType(_self_, _158234_decl.get()._field_Dest);;
	if ((_159417_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_20435cc5d_StructIns> _159817_destS = _2050ade53_Struct(_159417_destT.ptr());;
	if ((_159817_destS == nullptr)) {
		_205016c24_pushErr(_self_.ptr(), _158234_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_159417_destT.ptr()))}));
		_205017043_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20433367e_Struct> _160517_dest = _159817_destS.get()._field_Decl;;
	if ((_202b9040a_Dir(_160517_dest.get()._field_Token.get()._field_File.ptr()) != _202b9040a_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_205016c24_pushErr(_self_.ptr(), _158234_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_158717_base.get()._field_Implemented = jule::alloc_for_append(_158717_base.get()._field_Implemented,1);_158717_base.get()._field_Implemented.__push(_160517_dest);;
	_160517_dest.get()._field_Implements = jule::alloc_for_append(_160517_dest.get()._field_Implements,1);_160517_dest.get()._field_Implements.__push(_158717_base);;
	if ((_158234_decl.get()._field_Statics.len() > 0LL)) {
		_205016c24_pushErr(_self_.ptr(), _158234_decl.get()._field_Statics[0LL].get()._field_Token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_205025293_checkTraitImplMethods(_self_.ptr(), _158717_base,_158234_decl)))) {
			_case_begin_1d9cdaaac:;
			{
				return;;
			}
		}
		else if ((!(_20502564a_implToStruct(_self_, _160517_dest,_158234_decl)))) {
			_case_begin_1d9cdab23:;
			{
				return;;
			}
		}
		_match_end_1d9cd837e:;
	};
}



inline void _205025b45_implStruct(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ed75da_Impl>& _162735_decl) {
	jule::Ptr<_2050aa8de_TypeKind> _162817_destT = _20501c9e9_selectType(_self_, _162735_decl.get()._field_Dest);;
	if ((_162817_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_20435cc5d_StructIns> _163217_destS = _2050ade53_Struct(_162817_destT.ptr());;
	if ((_163217_destS == nullptr)) {
		_205016c24_pushErr(_self_.ptr(), _162735_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_162817_destT.ptr()))}));
		_205017043_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20433367e_Struct> _163917_dest = _163217_destS.get()._field_Decl;;
	if ((_202b9040a_Dir(_163917_dest.get()._field_Token.get()._field_File.ptr()) != _202b9040a_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_205016c24_pushErr(_self_.ptr(), _162735_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_20502564a_implToStruct(_self_, _163917_dest,_162735_decl)))) {
			_case_begin_1d9ce0b4a:;
			{
				return;;
			}
		}
		_match_end_1d9ce01ee:;
	};
}



inline void _205025dba_implImpl(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ed75da_Impl>& _165233_decl) {
	{
		
		if (_204ed79d6_IsTraitImpl(_165233_decl.ptr())) {
			_case_begin_1d9ce17d8:;
			{
				_2050258c0_implTrait(_self_, _165233_decl);
			}
		}
		else if (_204ed7c4a_IsStructImpl(_165233_decl.ptr())) {
			_case_begin_1d9ce1860:;
			{
				_205025b45_implStruct(_self_, _165233_decl);
			}
		}
		_match_end_1d9ce16b7:;
	};
}



inline void _2050261d9_checkVarDecl(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_205031cb6_Var>& _166337_decl, jule::Trait<_2050c6520_Lookup> _166353_l) {
	if (_202b8be1d_IsIgnoreIdent(_166337_decl.get()._field_Ident)) {
		_205016c24_pushErr(_self_.ptr(), _166337_decl.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_2050323e3_IsTypeInferred(_166337_decl.ptr())) {
		if ((!(_20503217e_IsInitialized(_166337_decl.ptr())))) {
			_205016c24_pushErr(_self_.ptr(), _166337_decl.get()._field_Token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_20501be7c_checkType(_self_, _166337_decl.get()._field_Kind,_166353_l);
	};
	if ((_166337_decl.get()._field_Constant && _166337_decl.get()._field_Reference)) {
		_205016c24_pushErr(_self_.ptr(), _166337_decl.get()._field_Token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_20503217e_IsInitialized(_166337_decl.ptr())))) {
		if (_166337_decl.get()._field_Constant) {
			_205016c24_pushErr(_self_.ptr(), _166337_decl.get()._field_Token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_166337_decl.get()._field_Statically) {
			_205016c24_pushErr(_self_.ptr(), _166337_decl.get()._field_Token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_166337_decl.get()._field_Reference) {
			_205016c24_pushErr(_self_.ptr(), _166337_decl.get()._field_Token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _20502645e_checkGlobalVarDecl(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_205031cb6_Var>& _169543_decl) {
	if (_20501784b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_169543_decl)),_169543_decl.get()._field_Ident,_169543_decl.get()._field_CppLinked)) {
		_205016c24_pushErr(_self_.ptr(), _169543_decl.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_169543_decl.get()._field_Ident)}));
		_205017043_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_169543_decl.get()._field_CppLinked && _169543_decl.get()._field_Constant)) {
		_205016c24_pushErr(_self_.ptr(), _169543_decl.get()._field_Token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_169543_decl.get()._field_CppLinked)) && (!(_169543_decl.get()._field_Constant))) && (!(_169543_decl.get()._field_Statically)))) {
		_205016c24_pushErr(_self_.ptr(), _169543_decl.get()._field_Token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_205017043_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_205017b6a_checkDirectives(_self_, _169543_decl.get()._field_Directives,jule::Any(_169543_decl));
	_2050261d9_checkVarDecl(_self_, _169543_decl,jule::Trait<_2050c6520_Lookup>(_self_, 3));
}



inline jule::Bool _2050266c3_checkGlobalDecls(jule::Ptr<_205014062_Sema> _self_) {
	jule::Bool _171238_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1d9cebd65:;
		if (it != expr.end()) {
			jule::Ptr<_205031cb6_Var> _171321_decl = *it;
			{
				_20502645e_checkGlobalVarDecl(_self_, _171321_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_171238_ok = false;
					return _171238_ok;
				};
			}
			_iter_next_1d9cebd65:;
			++it;
			goto _iter_begin_1d9cebd65;
		}
		_iter_end_1d9cebd65:;
	};
	_171238_ok = true;
	return _171238_ok;
}



inline jule::Bool _205026a7a_checkStructTraitImpl(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20433367e_Struct>& _172345_strct, jule::Ptr<_204ece8e0_Trait>& _172366_trt) {
	jule::Bool _172381_ok = jule::Bool();
	{
		auto &expr = _172366_trt.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1d9cedbe1:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> _172421_tf = *it;
			{
				jule::Bool _172521_exist = false;;
				jule::Ptr<_204ec707a_Fn> _172621_sf = _20431d1d5_FindMethod(_172345_strct.ptr(), _172421_tf.get()._field_Ident,_172421_tf.get()._field_Statically);;
				jule::Ptr<_204ec7454_FnIns> _172717_tfK = _20501ea0c_getTraitCheckFnKind(_self_, _172421_tf);;
				if ((_172621_sf != nullptr)) {
					jule::Ptr<_204ec7454_FnIns> _172925_sfK = _20501ea0c_getTraitCheckFnKind(_self_, _172621_sf);;
					_172521_exist=(((_172717_tfK.get()._field_Decl.get()._field_Public == _172925_sfK.get()._field_Decl.get()._field_Public) && (_172717_tfK.get()._field_Decl.get()._field_Ident == _172925_sfK.get()._field_Decl.get()._field_Ident)) && _2043994d6_equalsTrait(_172717_tfK, _172925_sfK));
				};
				if (_172521_exist) {
					jule::Ptr<_20430829c_Directive> _173521_d = _2050a508c_findDirective(_172621_sf.get()._field_Directives,jule::Str("deprecated", 10));;
					if ((_173521_d != nullptr)) {
						_205016c24_pushErr(_self_.ptr(), _173521_d.get()._field_Tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_172381_ok=false;
				} else {
					;
					jule::Str _174225_s = _204ec79d7_GetKindStr(_172717_tfK.ptr(), true);;
					if (_172421_tf.get()._field_Public) {
						(_174225_s).buffer.insert(0, (jule::Str()));;
					};
					_205016c24_pushErr(_self_.ptr(), _172345_strct.get()._field_Token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_172366_trt.get()._field_Ident),jule::Any(_174225_s)}));
					_172381_ok=false;
				};
			}
			_iter_next_1d9cedbe1:;
			++it;
			goto _iter_begin_1d9cedbe1;
		}
		_iter_end_1d9cedbe1:;
	};
	return _172381_ok;
}



inline jule::Bool _205026d88_checkStructImpls(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20433367e_Struct>& _175341_s) {
	jule::Bool _175355_ok = jule::Bool();
	_175355_ok=true;
	{
		auto &expr = _175341_s.get()._field_Implements;
		auto it = expr.begin();
		_iter_begin_1d9d05c92:;
		if (it != expr.end()) {
			jule::Ptr<_204ece8e0_Trait> _175521_trt = *it;
			{
				_175355_ok=(_205026a7a_checkStructTraitImpl(_self_, _175341_s,_175521_trt) && _175355_ok);
			}
			_iter_next_1d9d05c92:;
			++it;
			goto _iter_begin_1d9d05c92;
		}
		_iter_end_1d9d05c92:;
	};
	return _175355_ok;
}



inline jule::Bool _205027196_checkStructFields(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20433367e_Struct>& _176142_st) {
	jule::Bool _176157_ok = jule::Bool();
	_176157_ok=true;
	{
		auto &expr = _176142_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1d9d0728d:;
		if (it != expr.end()) {
			jule::Ptr<_204324285_Field> _176321_f = *it;
			{
				_176321_f.get()._field_Owner=_176142_st;
				{
					auto &expr = _176142_st.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1d9d07bc8:;
					if (it != expr.end()) {
						jule::Ptr<_204324285_Field> _176520_cf = *it;
						{
							if ((_176321_f == _176520_cf)) {
								goto _iter_end_1d9d07bc8;
							} else if ((_176321_f.get()._field_Ident == _176520_cf.get()._field_Ident)) {
								_205016c24_pushErr(_self_.ptr(), _176321_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_176321_f.get()._field_Ident)}));
								_205017043_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_176157_ok=false;
							};
						}
						_iter_next_1d9d07bc8:;
						++it;
						goto _iter_begin_1d9d07bc8;
					}
					_iter_end_1d9d07bc8:;
				};
			}
			_iter_next_1d9d0728d:;
			++it;
			goto _iter_begin_1d9d0728d;
		}
		_iter_end_1d9d0728d:;
	};
	return _176157_ok;
}



inline void _20502741b_checkStructDecl(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20433367e_Struct>& _177840_s) {
	if (_202b8be1d_IsIgnoreIdent(_177840_s.get()._field_Ident)) {
		_205016c24_pushErr(_self_.ptr(), _177840_s.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_20501784b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_177840_s)),_177840_s.get()._field_Ident,_177840_s.get()._field_CppLinked)) {
		_205016c24_pushErr(_self_.ptr(), _177840_s.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_177840_s.get()._field_Ident)}));
		_205017043_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_205017b6a_checkDirectives(_self_, _177840_s.get()._field_Directives,jule::Any(_177840_s));
	{
		
		if ((!(_205023a66_checkDeclGenerics(_self_.ptr(), _177840_s.get()._field_Generics)))) {
			_case_begin_1d9d0c24e:;
		}
		else if ((!(_205027196_checkStructFields(_self_, _177840_s)))) {
			_case_begin_1d9d0c2b5:;
		}
		else if ((!(_205026d88_checkStructImpls(_self_, _177840_s)))) {
			_case_begin_1d9d0c32b:;
		}
		_match_end_1d9d0c0ea:;
	};
}



inline jule::Bool _205027680_checkStructDecls(jule::Ptr<_205014062_Sema> _self_) {
	jule::Bool _179638_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1d9d0d75b:;
		if (it != expr.end()) {
			jule::Ptr<_20433367e_Struct> _179721_s = *it;
			{
				_20502741b_checkStructDecl(_self_, _179721_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_179638_ok = false;
					return _179638_ok;
				};
			}
			_iter_next_1d9d0d75b:;
			++it;
			goto _iter_begin_1d9d0d75b;
		}
		_iter_end_1d9d0d75b:;
	};
	_179638_ok = true;
	return _179638_ok;
}



inline void _205027905_checkFnDecl(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ec707a_Fn>& _180736_f) {
	if (_202b8be1d_IsIgnoreIdent(_180736_f.get()._field_Ident)) {
		_205016c24_pushErr(_self_.ptr(), _180736_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_205017b6a_checkDirectives(_self_, _180736_f.get()._field_Directives,jule::Any(_180736_f));
	_180736_f.get()._field_sema=_self_;
	_205024407_checkFnDeclPrototype(_self_, _180736_f);
	if (_20501784b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_180736_f)),_180736_f.get()._field_Ident,_180736_f.get()._field_CppLinked)) {
		if ((_180736_f.get()._field_Ident == jule::Str("init", 4))) {
			jule::Ptr<_204ec707a_Fn> _181921_init = _20501585a_FindFn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_181921_init != nullptr)) {
				return;;
			};
		};
		_205016c24_pushErr(_self_.ptr(), _180736_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_180736_f.get()._field_Ident)}));
		_205017043_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _205027b69_checkFnDecls(jule::Ptr<_205014062_Sema> _self_) {
	jule::Bool _183034_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1d9d13ec0:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> _183121_f = *it;
			{
				_205027905_checkFnDecl(_self_, _183121_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_183034_ok = false;
					return _183034_ok;
				};
			}
			_iter_next_1d9d13ec0:;
			++it;
			goto _iter_begin_1d9d13ec0;
		}
		_iter_end_1d9d13ec0:;
	};
	_183034_ok = true;
	return _183034_ok;
}



inline void _205028032_pushCycleError(_205014062_Sema* _self_, jule::Ptr<_20433367e_Struct>& _184130_st1, jule::Ptr<_20433367e_Struct>& _184145_st2, jule::Str& _184164_message) {
	;
	jule::Str _184313_refers_to = _20285bbed_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_184130_st1.get()._field_Ident),jule::Any(_184145_st2.get()._field_Ident)}));;
	(_184164_message).buffer.insert(0, (((_2027b6509_Repeat(jule::Str(" ", 1),4LL) + _184313_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _205028483_checkCrossCycle(_205014062_Sema* _self_, jule::Ptr<_20433367e_Struct>& _184731_st1, jule::Ptr<_20433367e_Struct>& _184746_st2, jule::Str& _184765_message) {
	{
		auto &expr = _184746_st2.get()._field_Uses;
		auto it = expr.begin();
		_iter_begin_1d9d17a1d:;
		if (it != expr.end()) {
			jule::Ptr<_20433367e_Struct> &_184816_u = *it;
			{
				if ((_184816_u == _184731_st1)) {
					_205028032_pushCycleError(&(*_self_), _184746_st2,_184816_u,_184765_message);
					return false;
				};
				if ((!(_205028483_checkCrossCycle(&(*_self_), _184731_st1,_184816_u,_184765_message)))) {
					_205028032_pushCycleError(&(*_self_), _184746_st2,_184816_u,_184765_message);
					return false;
				};
			}
			_iter_next_1d9d17a1d:;
			++it;
			goto _iter_begin_1d9d17a1d;
		}
		_iter_end_1d9d17a1d:;
	};
	return true;
}



inline jule::Bool _205028906_checkStructDeriveIllegalCycles(_205014062_Sema* _self_, jule::Str _186249_derive, jule::Ptr<_20433367e_Struct>& _186263_st1, jule::Ptr<_2050aa8de_TypeKind>& _186282_k) {
	jule::Bool _186298_ok = jule::Bool();
	jule::Ptr<_20433367e_Struct> _186317_st2 = _2050c3b38_getStructFromKind(_186282_k);;
	if ((_186317_st2 == nullptr)) {
		_186298_ok = true;
		return _186298_ok;
	};
	if ((_186263_st1 == _186317_st2)) {
		_205016c24_pushErr(&(*_self_), _186263_st1.get()._field_Token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_186249_derive),jule::Any(_186263_st1.get()._field_Ident)}));
		_186298_ok = false;
		return _186298_ok;
	};
	jule::Str _187517_message = jule::Str();;
	if ((!(_205028483_checkCrossCycle(&(*_self_), _186263_st1,_186317_st2,_187517_message)))) {
		jule::Str _187721_errMsg = _187517_message;;
		_187517_message=jule::Str();
		_205028032_pushCycleError(&(*_self_), _186263_st1,_186317_st2,_187517_message);
		_187721_errMsg+=_187517_message;
		_205016c24_pushErr(&(*_self_), _186263_st1.get()._field_Token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_186249_derive),jule::Any(_187721_errMsg)}));
		_186298_ok = false;
		return _186298_ok;
	};
	_186298_ok = true;
	return _186298_ok;
}



inline jule::Bool _205028c47_checkStructInsDeriveClone(_205014062_Sema* _self_, jule::Ptr<_20435cc5d_StructIns> _188748_st) {
	jule::Bool _188766_ok = jule::Bool();
	if ((!(_204321518_IsDerives(_188748_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		_188766_ok = true;
		return _188766_ok;
	};
	{
		auto &expr = _188748_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1d9d1dda9:;
		if (it != expr.end()) {
			jule::Ptr<_2043393bb_FieldIns> _189121_f = *it;
			{
				if ((_189121_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1d9d1dda9;
				};
				if ((!(_2050ac528_SupportsCloning(_189121_f.get()._field_Kind.ptr())))) {
					_205016c24_pushErr(&(*_self_), _188748_st.get()._field_Decl.get()._field_Token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_189121_f.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_188766_ok = false;
					return _188766_ok;
				};
				if ((!(_205028906_checkStructDeriveIllegalCycles(&(*_self_), jule::Str("Clone", 5),_188748_st.get()._field_Decl,_189121_f.get()._field_Kind)))) {
					_188766_ok = false;
					return _188766_ok;
				};
			}
			_iter_next_1d9d1dda9:;
			++it;
			goto _iter_begin_1d9d1dda9;
		}
		_iter_end_1d9d1dda9:;
	};
	_188766_ok = true;
	return _188766_ok;
}



inline void _205028e34_checkPackageDecls(jule::Ptr<_205014062_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d9d22088:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _190921_f = *it;
			{
				_20501685b_setCurrentFile(_self_.ptr(), _190921_f);
				if ((!(_205023758_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_205022515_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1d9d22088:;
			++it;
			goto _iter_begin_1d9d22088;
		}
		_iter_end_1d9d22088:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d9d224b7:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _191921_f = *it;
			{
				_20501685b_setCurrentFile(_self_.ptr(), _191921_f);
				if ((!(_205024ddb_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1d9d224b7:;
			++it;
			goto _iter_begin_1d9d224b7;
		}
		_iter_end_1d9d224b7:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d9d23661:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _192621_f = *it;
			{
				_20501685b_setCurrentFile(_self_.ptr(), _192621_f);
				if ((!(_2050266c3_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1d9d23661:;
			++it;
			goto _iter_begin_1d9d23661;
		}
		_iter_end_1d9d23661:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d9d25168:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _193321_f = *it;
			{
				_20501685b_setCurrentFile(_self_.ptr(), _193321_f);
				{
					
					if ((!(_205027b69_checkFnDecls(_self_)))) {
						_case_begin_1d9d260c0:;
					}
					else if ((!(_205027680_checkStructDecls(_self_)))) {
						_case_begin_1d9d26136:;
					}
					else {
						_case_begin_1d9d26059:;
						{
							goto _iter_next_1d9d25168;
						}
					}
					_match_end_1d9d25ee3:;
				};
				return;;
			}
			_iter_next_1d9d25168:;
			++it;
			goto _iter_begin_1d9d25168;
		}
		_iter_end_1d9d25168:;
	};
}



inline void _205029275_checkDataForTypeInference(_205014062_Sema* _self_, jule::Ptr<_20507eb49_Data>& _194545_d, jule::Ptr<_202b89679_Token>& _194556_err_token) {
	{
		
		if (_205080034_IsNil(_194545_d.ptr())) {
			_case_begin_1d9d271e2:;
			{
				_205016c24_pushErr(&(*_self_), _194556_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_205080298_IsVoid(_194545_d.ptr())) {
			_case_begin_1d9d27269:;
			{
				_205016c24_pushErr(&(*_self_), _194556_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_194545_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1d9d272e1:;
			{
				_205016c24_pushErr(&(*_self_), _194556_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1d9d270b0:;
	};
}



inline void _20502950b_checkVar(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_205031cb6_Var>& _195633_v) {
	if (_195633_v.get()._field_CppLinked) {
		return;;
	};
	if (_2050323e3_IsTypeInferred(_195633_v.ptr())) {
		_195633_v.get()._field_Kind=jule::new_ptr<_2050aea47_TypeSymbol>(_2050aea47_TypeSymbol{._field_Kind=_195633_v.get()._field_Value.get()._field_Data.get()._field_Kind});
		_205029275_checkDataForTypeInference(_self_.ptr(), _195633_v.get()._field_Value.get()._field_Data,_195633_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		_205021844_checkValidityForInitExpr(_self_, _195633_v.get()._field_Mutable,_195633_v.get()._field_Reference,_195633_v.get()._field_Kind.get()._field_Kind,_195633_v.get()._field_Value.get()._field_Data,_195633_v.get()._field_Value.get()._field_Expr.get()._field_Token);
	} else {
		jule::Ptr<_2050b6752_Arr> _197321_arr = _2050ad716_Arr(_195633_v.get()._field_Kind.get()._field_Kind.ptr());;
		if ((_197321_arr != nullptr)) {
			if (_197321_arr.get()._field_Auto) {
				jule::Ptr<_2050b6752_Arr> _197625_dataArr = _2050ad716_Arr(_195633_v.get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_197625_dataArr != nullptr)) {
					_197321_arr.get()._field_N=_197625_dataArr.get()._field_N;
				};
			};
		};
		if (_20501db0a_checkAssignType(_self_, _195633_v.get()._field_Reference,_195633_v.get()._field_Kind.get()._field_Kind,_195633_v.get()._field_Value.get()._field_Data,_195633_v.get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_205021844_checkValidityForInitExpr(_self_, _195633_v.get()._field_Mutable,_195633_v.get()._field_Reference,_195633_v.get()._field_Kind.get()._field_Kind,_195633_v.get()._field_Value.get()._field_Data,_195633_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		};
	};
	if ((_195633_v.get()._field_Reference && (!(_2050c2e9a_isValidForRef(_195633_v.get()._field_Kind.get()._field_Kind))))) {
		_205016c24_pushErr(_self_.ptr(), _195633_v.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_195633_v.get()._field_Kind.get()._field_Kind.ptr()))}));
	};
	if (_195633_v.get()._field_Constant) {
		if ((!(_20508050c_IsConst(_195633_v.get()._field_Value.get()._field_Data.ptr())))) {
			_205016c24_pushErr(_self_.ptr(), _195633_v.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_195633_v.get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_2050ae690_Tup(_195633_v.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		_195633_v.get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _20502982a_checkTypeVar(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_205031cb6_Var>& _201137_decl, jule::Trait<_2050c6520_Lookup> _201153_l) {
	if ((_201137_decl.get()._field_CppLinked || (!(_20503217e_IsInitialized(_201137_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_2050816b7_Eval> _201617_eval = nullptr;;
	if ((_201137_decl.get()._field_Kind != nullptr)) {
		_201617_eval=_20501ce4a_evalpd(_self_, _201153_l,_201137_decl.get()._field_Kind.get()._field_Kind,_201137_decl);
	} else {
		_201617_eval=_20501ce4a_evalpd(_self_, _201153_l,nullptr,_201137_decl);
	};
	_201617_eval.get()._field_immutable=(!(_201137_decl.get()._field_Mutable));
	_201137_decl.get()._field_Value.get()._field_Data=_20509c0d9_evalExpr(_201617_eval, _201137_decl.get()._field_Value.get()._field_Expr);
	if ((_201137_decl.get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_20502950b_checkVar(_self_, _201137_decl);
}



inline void _205029a06_checkGlobalTypes(jule::Ptr<_205014062_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1d9d37840:;
		if (it != expr.end()) {
			jule::Ptr<_205031cb6_Var> _203221_decl = *it;
			{
				if (((_20503217e_IsInitialized(_203221_decl.ptr()) && (_203221_decl.get()._field_Value.get()._field_Data == nullptr)) || (_2050323e3_IsTypeInferred(_203221_decl.ptr()) && (_203221_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_20502982a_checkTypeVar(_self_, _203221_decl,jule::Trait<_2050c6520_Lookup>(_self_, 3));
				};
			}
			_iter_next_1d9d37840:;
			++it;
			goto _iter_begin_1d9d37840;
		}
		_iter_end_1d9d37840:;
	};
}



inline jule::Ptr<_204ec7454_FnIns> _205029dad_readyToCheckFn(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20435cc5d_StructIns>& _204339_s, jule::Ptr<_204ec707a_Fn>& _204359_f) {
	jule::Ptr<_204ec7454_FnIns> _204417_ins = _20439cb9e_instance(_204359_f);;
	if ((_204359_f.get()._field_Instances.len() != 0LL)) {
		return _204417_ins;
	};
	_204417_ins.get()._field_Owner=_204339_s;
	_2043949cb_appendInstance(_204359_f.ptr(), _204417_ins);
	_204417_ins.get()._field_reloaded=true;
	if (_205020ce9_reloadFnInsTypes(_self_, _204417_ins)) {
		return _204417_ins;
	};
	return nullptr;
}



inline void _20502a1cc_checkTypeMethod(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20435cc5d_StructIns>& _205740_s, jule::Ptr<_204ec707a_Fn>& _205760_f) {
	if ((_205760_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_204ec7454_FnIns> _206217_ins = _205760_f.get()._field_Instances[0LL];;
	if ((_206217_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_20502c8a5_checkFnIns(_self_, _206217_ins);
}



inline jule::Ptr<_204ec7454_FnIns> _20502a62d_checkStructInsOp(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20435cc5d_StructIns>& _207041_s, jule::Ptr<_204ec707a_Fn>& _207061_f, jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)> _207069_p) {
	if ((((_207061_f == nullptr) || (_207061_f.get()._field_Generics.len() > 0LL)) || (!(_207069_p(_207061_f))))) {
		return nullptr;
	};
	return _207061_f.get()._field_Instances[0LL];
}



inline jule::Bool _20502a9d5_checkStructEnv(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20435cc5d_StructIns>& _208039_s, jule::Ptr<_202b89679_Token> _208058_errorToken) {
	jule::Bool _208080_ok = jule::Bool();
	_2050b8e19_typeChecker _208117_tc = _2050b8e19_typeChecker{._field_s=_208039_s.get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_2050c6520_Lookup>(_208039_s.get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_2050c6520_Lookup>(_208039_s.get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_2050b8105_referencer>(_2050b8105_referencer{._field_ident=_208039_s.get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any(_208039_s.get()._field_Decl), }), ._field_refers=_208039_s.get()._field_Refers, };;
	if ((_208039_s.get()._field_Generics.len() > 0LL)) {
		_208117_tc._field_useGenerics=jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>::alloc(0LL,_208039_s.get()._field_Generics.len());
		{
			auto &expr = _208039_s.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1d9d42350:;
			if (it != expr.end()) {
				jule::I64 _209418_i = it - expr.begin();
				jule::Ptr<_2050a91b2_InsGeneric> _209425_g = *it;
				{
					jule::Ptr<_20434d864_GenericDecl> _209525_decl = _208039_s.get()._field_Decl.get()._field_Generics[_209418_i];;
					_208117_tc._field_useGenerics = jule::alloc_for_append(_208117_tc._field_useGenerics,1);_208117_tc._field_useGenerics.__push(jule::new_ptr<_2050a9beb_TypeAlias>(_2050a9beb_TypeAlias{._field_Token=_209525_decl.get()._field_Token, ._field_Ident=_209525_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_2050aea47_TypeSymbol>(_2050aea47_TypeSymbol{._field_Kind=_209425_g.get()._field_Kind}), }));;
				}
				_iter_next_1d9d42350:;
				++it;
				_209418_i++;
				goto _iter_begin_1d9d42350;
			}
			_iter_end_1d9d42350:;
		};
	};
	jule::Ptr<_205074eb3_SymbolTable> _210417_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_20501685b_setCurrentFile(_self_.ptr(), _210417_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != _208039_s.get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_205074eb3_SymbolTable> _210821_file = _20501366b_findFile(_self_.get()._field_files,_208039_s.get()._field_Decl.get()._field_Token.get()._field_File);;
		if ((_210821_file != nullptr)) {
			_20501685b_setCurrentFile(_self_.ptr(), _210821_file);
		};
	};
	if ((_208039_s.get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_204ed56a4_constraintChecker> _211521_cc = _20501bac5_constraintChecker(_self_);;
		_211521_cc.get()._field_et=_208058_errorToken;
		_211521_cc.get()._field_si=_208039_s;
		_211521_cc.get()._field_genericsA=_208117_tc._field_useGenerics;
		_211521_cc.get()._field_uniq=true;
		if ((!(_204ed6584_check(_211521_cc)))) {
			return _208080_ok;
		};
	};
	_208080_ok=true;
	if ((_208039_s.get()._field_Statics.len() > 0LL)) {
		jule::I64 _212821_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_208117_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto &expr = _208039_s.get()._field_Statics;
			auto it = expr.begin();
			_iter_begin_1d9d4a4e0:;
			if (it != expr.end()) {
				jule::Ptr<_205031cb6_Var> _213025_v = *it;
				{
					_2050261d9_checkVarDecl(_self_, _213025_v,jule::Trait<_2050c6520_Lookup>(_self_, 3));
					_20502982a_checkTypeVar(_self_, _213025_v,jule::Trait<_2050c6520_Lookup>(_self_, 3));
					_208080_ok=(((_self_.get()._field_errors.len() - _212821_n) == 0LL) && _208080_ok);
				}
				_iter_next_1d9d4a4e0:;
				++it;
				goto _iter_begin_1d9d4a4e0;
			}
			_iter_end_1d9d4a4e0:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_208117_tc._field_useGenerics.len());
		if ((!(_208080_ok))) {
			_208080_ok = false;
			return _208080_ok;
		};
	};
	jule::Ptr<_2050816b7_Eval> _214117_eval = _20501d610_eval(_self_, jule::Trait<_2050c6520_Lookup>(_self_, 3));;
	{
		auto &expr = _208039_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1d9d4d0e7:;
		if (it != expr.end()) {
			jule::Ptr<_2043393bb_FieldIns> _214221_f = *it;
			{
				jule::Ptr<_2050aa8de_TypeKind> _214321_kind = _2050c1185_checkDecl(&_208117_tc, _214221_f.get()._field_Decl.get()._field_Kind.get()._field_Decl);;
				_208080_ok=((_214321_kind != nullptr) && _208080_ok);
				if ((_214321_kind == nullptr)) {
					if (((_self_ != _208039_s.get()._field_Decl.get()._field_sema) && (_208039_s.get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_208039_s.get()._field_Decl.get()._field_sema.get()._field_errors);
						_208039_s.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1d9d4d0e7;
				};
				_214221_f.get()._field_Kind=_214321_kind;
				_208039_s.get()._field_Mutable=(_208039_s.get()._field_Mutable || ((!(_214221_f.get()._field_Decl.get()._field_Mutable)) && _2050abcdb_Mutable(_214221_f.get()._field_Kind.ptr())));
				_205028c47_checkStructInsDeriveClone(_self_.ptr(), _208039_s);
				if ((_214221_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1d9d4d0e7;
				};
				_214117_eval.get()._field_prefix=_214221_f.get()._field_Kind;
				_214117_eval.get()._field_field=_214221_f;
				_214221_f.get()._field_Default=_20509c0d9_evalExpr(_214117_eval, _214221_f.get()._field_Decl.get()._field_Default);
				if ((_214221_f.get()._field_Default == nullptr)) {
					goto _iter_next_1d9d4d0e7;
				};
				;
				_20501db0a_checkAssignType(_self_, false,_214221_f.get()._field_Kind,_214221_f.get()._field_Default,_214221_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1d9d4d0e7:;
			++it;
			goto _iter_begin_1d9d4d0e7;
		}
		_iter_end_1d9d4d0e7:;
	};
	return _208080_ok;
}



inline jule::Bool _20502ad8c_precheckStructIns(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20435cc5d_StructIns>& _217642_s, jule::Ptr<_202b89679_Token> _217661_errorToken) {
	jule::Bool _217683_ok = jule::Bool();
	_217683_ok=_20502a9d5_checkStructEnv(_self_, _217642_s,_217661_errorToken);
	if ((!(_217683_ok))) {
		_217683_ok = false;
		return _217683_ok;
	};
	{
		auto &expr = _217642_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1d9d558c4:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> _218121_f = *it;
			{
				if ((_218121_f.get()._field_Generics.len() == 0LL)) {
					if ((_205029dad_readyToCheckFn(_self_, _217642_s,_218121_f) == nullptr)) {
						_217683_ok = false;
						return _217683_ok;
					};
				};
			}
			_iter_next_1d9d558c4:;
			++it;
			goto _iter_begin_1d9d558c4;
		}
		_iter_end_1d9d558c4:;
	};
	_217683_ok = true;
	return _217683_ok;
}



inline void _20502b112_checkStructIns(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20435cc5d_StructIns>& _219139_s) {
	{
		auto &expr = _219139_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1d9d573a9:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> _219221_f = *it;
			{
				_20502a1cc_checkTypeMethod(_self_, _219139_s,_219221_f);
			}
			_iter_next_1d9d573a9:;
			++it;
			goto _iter_begin_1d9d573a9;
		}
		_iter_end_1d9d573a9:;
	};
}



inline void _20502b387_checkTypeStruct(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20433367e_Struct>& _219740_s) {
	if (_219740_s.get()._field_CppLinked) {
		return;;
	};
	if ((_219740_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _219740_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1d9d58c7e:;
		if (it != expr.end()) {
			jule::Ptr<_20435cc5d_StructIns> _221021_ins = *it;
			{
				_20502b112_checkStructIns(_self_, _221021_ins);
			}
			_iter_next_1d9d58c7e:;
			++it;
			goto _iter_begin_1d9d58c7e;
		}
		_iter_end_1d9d58c7e:;
	};
}



inline void _20502b563_checkStructTypes(jule::Ptr<_205014062_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1d9d59466:;
		if (it != expr.end()) {
			jule::Ptr<_20433367e_Struct> _221621_s = *it;
			{
				_20502b387_checkTypeStruct(_self_, _221621_s);
			}
			_iter_next_1d9d59466:;
			++it;
			goto _iter_begin_1d9d59466;
		}
		_iter_end_1d9d59466:;
	};
}



inline void _20502b80a_checkStructInsOperators(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20435cc5d_StructIns> _222147_s) {
	{
		auto &expr = _222147_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1d9d5a8a7:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> _222221_m = *it;
			{
				{
					auto &_match_expr{ _222221_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1d9d5b699:;
						{
							_222147_s.get()._field_Operators._field_Eq=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _222565_f) mutable -> jule::Bool {
								return static__205033a65_Eq(_222565_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1d9d5b721:;
						{
							_222147_s.get()._field_Operators._field_Gt=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _222765_f) mutable -> jule::Bool {
								return static__205033d0c_Gt(_222765_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1d9d5b798:;
						{
							_222147_s.get()._field_Operators._field_GtEq=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _222967_f) mutable -> jule::Bool {
								return static__2050340a4_GtEq(_222967_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1d9d5b820:;
						{
							_222147_s.get()._field_Operators._field_Lt=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _223165_f) mutable -> jule::Bool {
								return static__20503434b_Lt(_223165_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1d9d5b897:;
						{
							_222147_s.get()._field_Operators._field_LtEq=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _223367_f) mutable -> jule::Bool {
								return static__2050345e3_LtEq(_223367_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1d9d5b91e:;
						{
							_222147_s.get()._field_Operators._field_Shl=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _223566_f) mutable -> jule::Bool {
								return static__205034bcb_Shl(_223566_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1d9d5b996:;
						{
							_222147_s.get()._field_Operators._field_Shr=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _223766_f) mutable -> jule::Bool {
								return static__205034e73_Shr(_223766_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1d9d5ba1d:;
						{
							_222147_s.get()._field_Operators._field_Add=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _223966_f) mutable -> jule::Bool {
								return static__20503521a_Add(_223966_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1d9d5ba95:;
						{
							_222147_s.get()._field_Operators._field_Sub=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _224166_f) mutable -> jule::Bool {
								return static__2050354b2_Sub(_224166_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1d9d5bb1c:;
						{
							_222147_s.get()._field_Operators._field_Div=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _224366_f) mutable -> jule::Bool {
								return static__205035759_Div(_224366_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1d9d5bb94:;
						{
							_222147_s.get()._field_Operators._field_Mul=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _224566_f) mutable -> jule::Bool {
								return static__205035a01_Mul(_224566_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1d9d5bc1b:;
						{
							_222147_s.get()._field_Operators._field_Mod=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _224766_f) mutable -> jule::Bool {
								return static__205035c98_Mod(_224766_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1d9d5bc93:;
						{
							_222147_s.get()._field_Operators._field_BitAnd=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _224969_f) mutable -> jule::Bool {
								return static__205036040_BitAnd(_224969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1d9d5bd1a:;
						{
							_222147_s.get()._field_Operators._field_BitOr=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _225168_f) mutable -> jule::Bool {
								return static__2050362d7_BitOr(_225168_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1d9d5bd92:;
						{
							_222147_s.get()._field_Operators._field_BitXor=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _225369_f) mutable -> jule::Bool {
								return static__20503657e_BitXor(_225369_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1d9d5be19:;
						{
							_222147_s.get()._field_Operators._field_Neg=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _225566_f) mutable -> jule::Bool {
								return static__205036b67_Neg(_225566_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1d9d5be91:;
						{
							_222147_s.get()._field_Operators._field_Pos=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _225766_f) mutable -> jule::Bool {
								return static__205036e0e_Pos(_225766_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1d9d5c018:;
						{
							_222147_s.get()._field_Operators._field_BitNot=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _225969_f) mutable -> jule::Bool {
								return static__2050371a6_BitNot(_225969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1d9d5c090:;
						{
							_222147_s.get()._field_Operators._field_AddAssign=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _226172_f) mutable -> jule::Bool {
								return static__20503778e_AddAssign(_226172_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1d9d5c117:;
						{
							_222147_s.get()._field_Operators._field_SubAssign=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _226372_f) mutable -> jule::Bool {
								return static__205037a36_SubAssign(_226372_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1d9d5c18e:;
						{
							_222147_s.get()._field_Operators._field_DivAssign=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _226572_f) mutable -> jule::Bool {
								return static__205037ccd_DivAssign(_226572_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1d9d5c216:;
						{
							_222147_s.get()._field_Operators._field_MulAssign=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _226772_f) mutable -> jule::Bool {
								return static__205038075_MulAssign(_226772_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1d9d5c28d:;
						{
							_222147_s.get()._field_Operators._field_ModAssign=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _226972_f) mutable -> jule::Bool {
								return static__20503831c_ModAssign(_226972_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1d9d5c315:;
						{
							_222147_s.get()._field_Operators._field_ShlAssign=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _227172_f) mutable -> jule::Bool {
								return static__2050385b4_ShlAssign(_227172_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1d9d5c38c:;
						{
							_222147_s.get()._field_Operators._field_ShrAssign=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _227372_f) mutable -> jule::Bool {
								return static__20503885b_ShrAssign(_227372_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1d9d5c414:;
						{
							_222147_s.get()._field_Operators._field_BitOrAssign=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _227574_f) mutable -> jule::Bool {
								return static__205038b03_BitOrAssign(_227574_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1d9d5c48b:;
						{
							_222147_s.get()._field_Operators._field_BitAndAssign=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _227775_f) mutable -> jule::Bool {
								return static__205038d9a_BitAndAssign(_227775_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1d9d5c513:;
						{
							_222147_s.get()._field_Operators._field_BitXorAssign=_20502a62d_checkStructInsOp(_self_, _222147_s,_222221_m,jule::Fn<jule::Bool(jule::Ptr<_204ec707a_Fn>)>([=](jule::Ptr<_204ec707a_Fn> _227975_f) mutable -> jule::Bool {
								return static__205039142_BitXorAssign(_227975_f);
							}));
						}
					}
					_match_end_1d9d5b259:;
				};
			}
			_iter_next_1d9d5a8a7:;
			++it;
			goto _iter_begin_1d9d5a8a7;
		}
		_iter_end_1d9d5a8a7:;
	};
}



inline void _20502ba91_precheckStructType(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_20433367e_Struct>& _228443_s) {
	if (_228443_s.get()._field_CppLinked) {
		return;;
	};
	if ((_228443_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_228443_s.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_20435cc5d_StructIns> _229521_ins = _20430d48e_instance(_228443_s);;
		_229521_ins.get()._field_Checked=true;
		_2043193e0_appendInstance(_228443_s.ptr(), _229521_ins);
		_20502ad8c_precheckStructIns(_self_, _229521_ins,nullptr);
	};
	_20502b80a_checkStructInsOperators(_self_, _228443_s.get()._field_Instances[0LL]);
}



inline void _20502bc6c_precheckStructTypes(jule::Ptr<_205014062_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1db2dd83e:;
		if (it != expr.end()) {
			jule::Ptr<_20433367e_Struct> _230521_s = *it;
			{
				_20502ba91_precheckStructType(_self_, _230521_s);
			}
			_iter_next_1db2dd83e:;
			++it;
			goto _iter_begin_1db2dd83e;
		}
		_iter_end_1db2dd83e:;
	};
}



inline void _20502bee2_checkRets(_205014062_Sema* _self_, jule::Ptr<_204ec7454_FnIns>& _231033_f) {
	if (_2043a5a53_IsVoid(_231033_f.get()._field_Decl.ptr())) {
		return;;
	};
	_20502e18c_missingRetChecker _231413_mrc = static__20502e555_new();;
	jule::Bool _231513_ok = _205030567_check(&_231413_mrc, _231033_f.get()._field_Scope);;
	if ((!(_231513_ok))) {
		_205016c24_pushErr(&(*_self_), _231033_f.get()._field_Decl.get()._field_Token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _20502c311_checkFnInsSc(_205014062_Sema* _self_, jule::Ptr<_204ec7454_FnIns>& _232136_f, jule::Ptr<_204ee42a6_scopeChecker>& _232152_sc) {
	_205012c86_appendRetVars(_232152_sc.get()._field_table.get()._field_Vars,_232136_f);
	_20501303e_appendParamVars(_232152_sc.get()._field_table.get()._field_Vars,_232136_f);
	_205013319_appendGenericTypeAliases(_232152_sc.get()._field_table.get()._field_TypeAliases,_232136_f);
	_205004074_check(_232152_sc, _232136_f.get()._field_Decl.get()._field_Scope,_232136_f.get()._field_Scope);
	if ((!(_204ee6de1_stopped(_232152_sc.ptr())))) {
		_20502bee2_checkRets(&(*_self_), _232136_f);
	};
}



inline void _20502c630_checkFnInsCaller(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ec7454_FnIns>& _233441_f, jule::Ptr<_202b89679_Token> _233456_caller) {
	if (_233441_f.get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_205074eb3_SymbolTable> _233917_old = _233441_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_20501685b_setCurrentFile(_233441_f.get()._field_Decl.get()._field_sema.ptr(), _233917_old);
	});;
	jule::Ptr<_205074eb3_SymbolTable> _234117_file = _20501366b_findFile(_233441_f.get()._field_Decl.get()._field_sema.get()._field_files,_233441_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_234117_file != nullptr)) {
		_20501685b_setCurrentFile(_233441_f.get()._field_Decl.get()._field_sema.ptr(), _234117_file);
	};
	jule::Ptr<_204ee42a6_scopeChecker> _234617_sc = _204ed9a0a_newScopeChecker(_233441_f.get()._field_Decl.get()._field_sema,_233441_f);;
	_234617_sc.get()._field_calledFrom=_233456_caller;
	_20502c311_checkFnInsSc(_self_.ptr(), _233441_f,_234617_sc);
	if ((_233441_f.get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_233441_f.get()._field_Decl.get()._field_sema.get()._field_errors);
		_233441_f.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _20502c8a5_checkFnIns(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ec7454_FnIns>& _235635_f) {
	_20502c630_checkFnInsCaller(_self_, _235635_f,nullptr);
}



inline void _20502cb2a_checkTypeFn(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ec707a_Fn>& _236036_f) {
	if (_236036_f.get()._field_CppLinked) {
		return;;
	};
	if ((_236036_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _236036_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1db2e9ebb:;
		if (it != expr.end()) {
			jule::Ptr<_204ec7454_FnIns> _237021_ins = *it;
			{
				_20502c8a5_checkFnIns(_self_, _237021_ins);
			}
			_iter_next_1db2e9ebb:;
			++it;
			goto _iter_begin_1db2e9ebb;
		}
		_iter_end_1db2e9ebb:;
	};
}



inline void _20502cda0_checkTestFn(_205014062_Sema* _self_, jule::Ptr<_204ec7454_FnIns>& _237535_f) {
	if (_237535_f.get()._field_Decl.get()._field_Public) {
		_205016c24_pushErr(&(*_self_), _237535_f.get()._field_Decl.get()._field_Token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_205017043_pushSugggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_237535_f.get()._field_Params.len() != 1LL) || (_237535_f.get()._field_Result != nullptr))) {
		_205016c24_pushErr(&(*_self_), _237535_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_205017043_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2050b3b4a_Sptr> _238817_sptr = _2050acc65_Sptr(_237535_f.get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_238817_sptr == nullptr)) {
		_205016c24_pushErr(&(*_self_), _237535_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_205017043_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20435cc5d_StructIns> _239513_s = _2050ade53_Struct(_238817_sptr.get()._field_Elem.ptr());;
	if (((_239513_s == nullptr) || (!(_205011449_isStdPackage(_239513_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("testing", 7)))))) {
		_205016c24_pushErr(&(*_self_), _237535_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_205017043_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _20502d125_precheckTypeFn(jule::Ptr<_205014062_Sema> _self_, jule::Ptr<_204ec707a_Fn>& _240339_f) {
	if (_240339_f.get()._field_CppLinked) {
		return;;
	};
	if ((_240339_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_240339_f.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_204ec7454_FnIns> _241421_ins = _20439bdce_instanceForce(_240339_f);;
		_240339_f.get()._field_Instances = jule::alloc_for_append(_240339_f.get()._field_Instances,1);_240339_f.get()._field_Instances.__push(_241421_ins);;
		_205020ce9_reloadFnInsTypes(_self_, _241421_ins);
		_241421_ins.get()._field_reloaded=true;
		if (_2050c263c_hasDirective(_240339_f.get()._field_Directives,jule::Str("test", 4))) {
			_20502cda0_checkTestFn(_self_.ptr(), _241421_ins);
		};
	};
}



inline void _20502d301_precheckFnTypes(jule::Ptr<_205014062_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1db304800:;
		if (it != expr.end()) {
			jule::Ptr<_204ece8e0_Trait> _242721_decl = *it;
			{
				{
					auto &expr = _242721_decl.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1db305aba:;
					if (it != expr.end()) {
						jule::Ptr<_204ec707a_Fn> _242825_m = *it;
						{
							_20502d125_precheckTypeFn(_self_, _242825_m);
						}
						_iter_next_1db305aba:;
						++it;
						goto _iter_begin_1db305aba;
					}
					_iter_end_1db305aba:;
				};
			}
			_iter_next_1db304800:;
			++it;
			goto _iter_begin_1db304800;
		}
		_iter_end_1db304800:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1db3057e0:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> _243221_decl = *it;
			{
				_20502d125_precheckTypeFn(_self_, _243221_decl);
			}
			_iter_next_1db3057e0:;
			++it;
			goto _iter_begin_1db3057e0;
		}
		_iter_end_1db3057e0:;
	};
}



inline void _20502d4cc_checkFnTypes(jule::Ptr<_205014062_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1db3071d7:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> _243921_decl = *it;
			{
				_20502cb2a_checkTypeFn(_self_, _243921_decl);
			}
			_iter_next_1db3071d7:;
			++it;
			goto _iter_begin_1db3071d7;
		}
		_iter_end_1db3071d7:;
	};
}



inline void _20502d6a8_checkPackageTypes(jule::Ptr<_205014062_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1db307924:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _244721_f = *it;
			{
				_20501685b_setCurrentFile(_self_.ptr(), _244721_f);
				_205029a06_checkGlobalTypes(_self_);
				_20502d301_precheckFnTypes(_self_);
				_20502bc6c_precheckStructTypes(_self_);
			}
			_iter_next_1db307924:;
			++it;
			goto _iter_begin_1db307924;
		}
		_iter_end_1db307924:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1db30997b:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _245821_f = *it;
			{
				_20501685b_setCurrentFile(_self_.ptr(), _245821_f);
				_20502d4cc_checkFnTypes(_self_);
				_20502b563_checkStructTypes(_self_);
			}
			_iter_next_1db30997b:;
			++it;
			goto _iter_begin_1db30997b;
		}
		_iter_end_1db30997b:;
	};
}



inline void _20502d884_setFileSemaFields(jule::Ptr<_205014062_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1db30ad56:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> _246621_f = *it;
			{
				_246621_f.get()._field_sema=_self_;
			}
			_iter_next_1db30ad56:;
			++it;
			goto _iter_begin_1db30ad56;
		}
		_iter_end_1db30ad56:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1db30b285:;
		if (it != expr.end()) {
			jule::Ptr<_20433367e_Struct> _246921_st = *it;
			{
				_246921_st.get()._field_sema=_self_;
			}
			_iter_next_1db30b285:;
			++it;
			goto _iter_begin_1db30b285;
		}
		_iter_end_1db30b285:;
	};
}



inline void _20502da60_setSemaFields(jule::Ptr<_205014062_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1db30bd02:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _247521_file = *it;
			{
				_20501685b_setCurrentFile(_self_.ptr(), _247521_file);
				_20502d884_setFileSemaFields(_self_);
			}
			_iter_next_1db30bd02:;
			++it;
			goto _iter_begin_1db30bd02;
		}
		_iter_end_1db30bd02:;
	};
}



inline void _20502dcd5_check(jule::Ptr<_205014062_Sema> _self_, jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>& _248130_files) {
	_self_.get()._field_files=_248130_files;
	_20501a387_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_20502da60_setSemaFields(_self_);
	_20501a91a_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_20501a73e_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_205028e34_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_20502d6a8_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _205014062_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _20502e18c_missingRetChecker static__20502e555_new(void) {
	return _20502e18c_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU), };
}



inline jule::Bool _20502e830_checkConditional(_20502e18c_missingRetChecker* _self_, jule::Ptr<_204edd1a1_Conditional> _252435_c) {
	{
		auto &expr = _252435_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1db312027:;
		if (it != expr.end()) {
			jule::Ptr<_204edca41_If> _252521_elif = *it;
			{
				if ((_252521_elif == nullptr)) {
					return false;
				};
				if ((!(_205030259_checkScope(&(*_self_), _252521_elif.get()._field_Scope)))) {
					return false;
				};
			}
			_iter_next_1db312027:;
			++it;
			goto _iter_begin_1db312027;
		}
		_iter_end_1db312027:;
	};
	return ((_252435_c.get()._field_Default != nullptr) && _205030259_checkScope(&(*_self_), _252435_c.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _20502eb3d_checkMatch(_20502e18c_missingRetChecker* _self_, jule::Ptr<_204ee1391_Match> _253629_m) {
	{
		auto &expr = _253629_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1db313d2b:;
		if (it != expr.end()) {
			jule::Ptr<_204ee1ddb_Case> _253721_c = *it;
			{
				if ((_253721_c == nullptr)) {
					return false;
				};
				jule::I64 _254117_n = (*_self_)._field_breaked.len();;
				jule::Bool _254217_ok = _205030259_checkScope(&(*_self_), _253721_c.get()._field_Scope);;
				{
					
					if ((_254117_n != (*_self_)._field_breaked.len())) {
						_case_begin_1db315c0c:;
						{
							return false;
						}
					}
					else if ((!(_254217_ok))) {
						_case_begin_1db315c84:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_1db315d0b;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1db315d0b:;
						{
							(*_self_)._field_falled=false;
							if ((_253721_c.get()._field_Next == nullptr)) {
								return false;
							};
							goto _iter_next_1db313d2b;
						}
					}
					_match_end_1db315789:;
				};
			}
			_iter_next_1db313d2b:;
			++it;
			goto _iter_begin_1db313d2b;
		}
		_iter_end_1db313d2b:;
	};
	return ((_253629_m.get()._field_Default != nullptr) && _205030259_checkScope(&(*_self_), _253629_m.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _20502ee4b_checkInfIter(_20502e18c_missingRetChecker* _self_, jule::Ptr<_204edd48c_InfIter> _256231_it) {
	jule::I64 _256313_n = (*_self_)._field_breaked.len();;
	if (_205030259_checkScope(&(*_self_), _256231_it.get()._field_Scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_256313_n);
		return true;
	};
	if ((_256313_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _256917_itaddr = static_cast<jule::Uintptr>(_256231_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_256313_n);
			auto it = expr.begin();
			_iter_begin_1db31a173:;
			if (it != expr.end()) {
				jule::Uintptr _257020_addr = *it;
				{
					if ((_256917_itaddr == _257020_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_256313_n);
						return false;
					};
				}
				_iter_next_1db31a173:;
				++it;
				goto _iter_begin_1db31a173;
			}
			_iter_end_1db31a173:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_256313_n);
	};
	return true;
}



inline jule::Bool _205030259_checkScope(_20502e18c_missingRetChecker* _self_, jule::Ptr<_204edc645_Scope> _258129_s) {
	if ((_258129_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _258129_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1db31b916:;
		if (it != expr.end()) {
			jule::Any _258521_st = *it;
			{
				{
					auto &_match_expr{ _258521_st };
					
					if (_match_expr.type_is<jule::Ptr<_204ee2491_FallSt>>()) {
						_case_begin_1db31c7a2:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_204edea98_BreakSt>>()) {
						_case_begin_1db31c83a:;
						{
							jule::Uintptr _259121_addr = _258521_st.operator jule::Ptr<_204edea98_BreakSt>().get()._field_It;;
							if ((_259121_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_259121_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_204ede6e1_ContSt>>()) {
						_case_begin_1db31c8a1:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_204edd48c_InfIter>>()) {
						_case_begin_1db31c917:;
						{
							if (_20502ee4b_checkInfIter(&(*_self_), _258521_st.operator jule::Ptr<_204edd48c_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_204ee2914_RetSt>>()) {
						_case_begin_1db31c98e:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_204edc645_Scope>>()) {
						_case_begin_1db31ca16:;
						{
							if (_205030259_checkScope(&(*_self_), _258521_st.operator jule::Ptr<_204edc645_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_20507eb49_Data>>()) {
						_case_begin_1db31ca8d:;
						{
							{
								auto &_match_expr{ _258521_st.operator jule::Ptr<_20507eb49_Data>().get()._field_Model };
								
								if (_match_expr.type_is<jule::Ptr<_204ec486e_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel>>()) {
									_case_begin_1db321a92:;
									{
										return true;
									}
								}
								_match_end_1db3217c8:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_204edd1a1_Conditional>>()) {
						_case_begin_1db31cb15:;
						{
							if (_20502e830_checkConditional(&(*_self_), _258521_st.operator jule::Ptr<_204edd1a1_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_204ee1391_Match>>()) {
						_case_begin_1db31cb8c:;
						{
							if (_20502eb3d_checkMatch(&(*_self_), _258521_st.operator jule::Ptr<_204ee1391_Match>())) {
								return true;
							};
						}
					}
					_match_end_1db31c5e8:;
				};
			}
			_iter_next_1db31b916:;
			++it;
			goto _iter_begin_1db31b916;
		}
		_iter_end_1db31b916:;
	};
	return false;
}



inline jule::Bool _205030567_check(_20502e18c_missingRetChecker* _self_, jule::Ptr<_204edc645_Scope> _262724_s) {
	return _205030259_checkScope(&(*_self_), _262724_s);
}







std::ostream &operator<<(std::ostream &_Stream, _20502e18c_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _205030d4d_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20503217e_IsInitialized(_205031cb6_Var* _self_) {
	return ((*_self_)._field_Value != nullptr);
}



inline jule::Bool _2050323e3_IsTypeInferred(_205031cb6_Var* _self_) {
	return (((*_self_)._field_Kind == nullptr) || ((*_self_)._field_Kind.get()._field_Decl == nullptr));
}



inline jule::Bool _205032657_untypedConstant(_205031cb6_Var* _self_) {
	return (_2050323e3_IsTypeInferred(&(*_self_)) && (*_self_)._field_Value.get()._field_Data.get()._field_untyped);
}







std::ostream &operator<<(std::ostream &_Stream, _205031cb6_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__2050331d5_Dispose(jule::Ptr<_204ec707a_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && (_1023_f.get()._field_Ident == jule::Str("Dispose", 7))) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _2043a5a53_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_204396e2e_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));
}



inline jule::Bool static__20503347c_Str(jule::Ptr<_204ec707a_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (_2419_f.get()._field_Ident != jule::Str("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _2043a5a53_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _204396e2e_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_204ec7454_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_2050b03b6_Prim> _3913_prim = _2050aca01_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;
	};
	return _2050b35ea_IsStr(_3913_prim.ptr());
}



inline jule::Bool static__2050337bd_logical(jule::Ptr<_204ec707a_Fn>& _4624_f, jule::Str _4632_ident) {
	if ((((((((((((((_4624_f == nullptr) || (_4624_f.get()._field_Ident != _4632_ident)) || (_4624_f.get()._field_Owner == nullptr)) || (_4624_f.get()._field_Instances.len() == 0LL)) || _4624_f.get()._field_Statically) || _4624_f.get()._field_Unsafety) || _2043a5a53_IsVoid(_4624_f.ptr())) || (_4624_f.get()._field_Generics.len() != 0LL)) || (_4624_f.get()._field_Params.len() != 2LL)) || _4624_f.get()._field_Params[0LL].get()._field_Mutable) || _204396e2e_IsRef(_4624_f.get()._field_Params[0LL].ptr())) || _4624_f.get()._field_Params[1LL].get()._field_Mutable) || _4624_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_204ec7454_FnIns> _6317_ins = _4624_f.get()._field_Instances[0LL];;
	jule::Ptr<_2050b03b6_Prim> _6413_prim = _2050aca01_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_2050b3386_IsBool(_6413_prim.ptr()))))) {
		return false;
	};
	return (_6317_ins.get()._field_Owner == _2050ade53_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));
}



inline jule::Bool static__205033a65_Eq(jule::Ptr<_204ec707a_Fn> _7218_f) {
	return static__2050337bd_logical(_7218_f,jule::Str("Eq", 2));
}



inline jule::Bool static__205033d0c_Gt(jule::Ptr<_204ec707a_Fn> _7718_f) {
	return static__2050337bd_logical(_7718_f,jule::Str("Gt", 2));
}



inline jule::Bool static__2050340a4_GtEq(jule::Ptr<_204ec707a_Fn> _8220_f) {
	return static__2050337bd_logical(_8220_f,jule::Str("GtEq", 4));
}



inline jule::Bool static__20503434b_Lt(jule::Ptr<_204ec707a_Fn> _8718_f) {
	return static__2050337bd_logical(_8718_f,jule::Str("Lt", 2));
}



inline jule::Bool static__2050345e3_LtEq(jule::Ptr<_204ec707a_Fn> _9220_f) {
	return static__2050337bd_logical(_9220_f,jule::Str("LtEq", 4));
}



inline jule::Bool static__205034934_result(jule::Ptr<_204ec707a_Fn>& _9623_f, jule::Str _9631_ident) {
	if ((((((((((((((_9623_f == nullptr) || (_9623_f.get()._field_Ident != _9631_ident)) || (_9623_f.get()._field_Owner == nullptr)) || (_9623_f.get()._field_Instances.len() == 0LL)) || _9623_f.get()._field_Statically) || _9623_f.get()._field_Unsafety) || _2043a5a53_IsVoid(_9623_f.ptr())) || (_9623_f.get()._field_Generics.len() != 0LL)) || (_9623_f.get()._field_Params.len() != 2LL)) || _9623_f.get()._field_Params[0LL].get()._field_Mutable) || _204396e2e_IsRef(_9623_f.get()._field_Params[0LL].ptr())) || _9623_f.get()._field_Params[1LL].get()._field_Mutable) || _9623_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_204ec7454_FnIns> _11317_ins = _9623_f.get()._field_Instances[0LL];;
	return (_2050ade53_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);
}



inline jule::Bool static__205034bcb_Shl(jule::Ptr<_204ec707a_Fn> _11819_f) {
	return static__205034934_result(_11819_f,jule::Str("Shl", 3));
}



inline jule::Bool static__205034e73_Shr(jule::Ptr<_204ec707a_Fn> _12319_f) {
	return static__205034934_result(_12319_f,jule::Str("Shr", 3));
}



inline jule::Bool static__20503521a_Add(jule::Ptr<_204ec707a_Fn> _12819_f) {
	return static__205034934_result(_12819_f,jule::Str("Add", 3));
}



inline jule::Bool static__2050354b2_Sub(jule::Ptr<_204ec707a_Fn> _13319_f) {
	return static__205034934_result(_13319_f,jule::Str("Sub", 3));
}



inline jule::Bool static__205035759_Div(jule::Ptr<_204ec707a_Fn> _13819_f) {
	return static__205034934_result(_13819_f,jule::Str("Div", 3));
}



inline jule::Bool static__205035a01_Mul(jule::Ptr<_204ec707a_Fn> _14319_f) {
	return static__205034934_result(_14319_f,jule::Str("Mul", 3));
}



inline jule::Bool static__205035c98_Mod(jule::Ptr<_204ec707a_Fn> _14819_f) {
	return static__205034934_result(_14819_f,jule::Str("Mod", 3));
}



inline jule::Bool static__205036040_BitAnd(jule::Ptr<_204ec707a_Fn> _15322_f) {
	return static__205034934_result(_15322_f,jule::Str("BitAnd", 6));
}



inline jule::Bool static__2050362d7_BitOr(jule::Ptr<_204ec707a_Fn> _15821_f) {
	return static__205034934_result(_15821_f,jule::Str("BitOr", 5));
}



inline jule::Bool static__20503657e_BitXor(jule::Ptr<_204ec707a_Fn> _16322_f) {
	return static__205034934_result(_16322_f,jule::Str("BitXor", 6));
}



inline jule::Bool static__2050368c0_unary(jule::Ptr<_204ec707a_Fn>& _16722_f, jule::Str _16730_ident) {
	if ((((((((((((_16722_f == nullptr) || (_16722_f.get()._field_Ident != _16730_ident)) || (_16722_f.get()._field_Owner == nullptr)) || (_16722_f.get()._field_Instances.len() == 0LL)) || _16722_f.get()._field_Statically) || _16722_f.get()._field_Unsafety) || _2043a5a53_IsVoid(_16722_f.ptr())) || (_16722_f.get()._field_Generics.len() != 0LL)) || (_16722_f.get()._field_Params.len() != 1LL)) || _16722_f.get()._field_Params[0LL].get()._field_Mutable) || _204396e2e_IsRef(_16722_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_204ec7454_FnIns> _18217_ins = _16722_f.get()._field_Instances[0LL];;
	return (_2050ade53_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);
}



inline jule::Bool static__205036b67_Neg(jule::Ptr<_204ec707a_Fn> _18719_f) {
	return static__2050368c0_unary(_18719_f,jule::Str("Neg", 3));
}



inline jule::Bool static__205036e0e_Pos(jule::Ptr<_204ec707a_Fn> _19219_f) {
	return static__2050368c0_unary(_19219_f,jule::Str("Pos", 3));
}



inline jule::Bool static__2050371a6_BitNot(jule::Ptr<_204ec707a_Fn> _19722_f) {
	return static__2050368c0_unary(_19722_f,jule::Str("BitNot", 6));
}



inline jule::Bool static__2050374e7_assign(jule::Ptr<_204ec707a_Fn>& _20123_f, jule::Str _20131_ident) {
	if ((((((((((((((_20123_f == nullptr) || (_20123_f.get()._field_Ident != _20131_ident)) || (_20123_f.get()._field_Owner == nullptr)) || (_20123_f.get()._field_Instances.len() == 0LL)) || _20123_f.get()._field_Statically) || _20123_f.get()._field_Unsafety) || (!(_2043a5a53_IsVoid(_20123_f.ptr())))) || (_20123_f.get()._field_Generics.len() != 0LL)) || (_20123_f.get()._field_Params.len() != 2LL)) || (!(_20123_f.get()._field_Params[0LL].get()._field_Mutable))) || _204396e2e_IsRef(_20123_f.get()._field_Params[0LL].ptr())) || _20123_f.get()._field_Params[1LL].get()._field_Mutable) || _20123_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__20503778e_AddAssign(jule::Ptr<_204ec707a_Fn> _22125_f) {
	return static__2050374e7_assign(_22125_f,jule::Str("AddAssign", 9));
}



inline jule::Bool static__205037a36_SubAssign(jule::Ptr<_204ec707a_Fn> _22625_f) {
	return static__2050374e7_assign(_22625_f,jule::Str("SubAssign", 9));
}



inline jule::Bool static__205037ccd_DivAssign(jule::Ptr<_204ec707a_Fn> _23125_f) {
	return static__2050374e7_assign(_23125_f,jule::Str("DivAssign", 9));
}



inline jule::Bool static__205038075_MulAssign(jule::Ptr<_204ec707a_Fn> _23625_f) {
	return static__2050374e7_assign(_23625_f,jule::Str("MulAssign", 9));
}



inline jule::Bool static__20503831c_ModAssign(jule::Ptr<_204ec707a_Fn> _24125_f) {
	return static__2050374e7_assign(_24125_f,jule::Str("ModAssign", 9));
}



inline jule::Bool static__2050385b4_ShlAssign(jule::Ptr<_204ec707a_Fn> _24625_f) {
	return static__2050374e7_assign(_24625_f,jule::Str("ShlAssign", 9));
}



inline jule::Bool static__20503885b_ShrAssign(jule::Ptr<_204ec707a_Fn> _25125_f) {
	return static__2050374e7_assign(_25125_f,jule::Str("ShrAssign", 9));
}



inline jule::Bool static__205038b03_BitOrAssign(jule::Ptr<_204ec707a_Fn> _25627_f) {
	return static__2050374e7_assign(_25627_f,jule::Str("BitOrAssign", 11));
}



inline jule::Bool static__205038d9a_BitAndAssign(jule::Ptr<_204ec707a_Fn> _26128_f) {
	return static__2050374e7_assign(_26128_f,jule::Str("BitAndAssign", 12));
}



inline jule::Bool static__205039142_BitXorAssign(jule::Ptr<_204ec707a_Fn> _26628_f) {
	return static__2050374e7_assign(_26628_f,jule::Str("BitXorAssign", 12));
}







std::ostream &operator<<(std::ostream &_Stream, _205032a64_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _205063ea2_pushErr(_205063985_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_205016c24_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_11726_fmt,jule::Any(_11739_args));
}



inline jule::Bool _205064216_checkTrait(_205063985_typeCompatibilityChecker* _self_) {
	jule::Bool _12131_ok = jule::Bool();
	if (_2050ab813_IsNil((*_self_)._field_src.ptr())) {
		_12131_ok = true;
		return _12131_ok;
	};
	jule::Ptr<_204ece8e0_Trait> _12513_trt = _2050ae1b7_Trait((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_2050acc65_Sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1db360097:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_2050acc65_Sptr((*_self_)._field_src.ptr()).get()._field_Elem;
				if ((_2050ade53_Struct((*_self_)._field_src.ptr()) == nullptr)) {
					_12131_ok = false;
					return _12131_ok;
				};
				goto _case_begin_1db360196;
			}
		}
		else if ((_2050ade53_Struct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1db360196:;
			{
				jule::Ptr<_20435cc5d_StructIns> _13617_s = _2050ade53_Struct((*_self_)._field_src.ptr());;
				if ((!(_2043220c9_IsImplements(_13617_s.get()._field_Decl.ptr(), _12513_trt)))) {
					_12131_ok = false;
					return _12131_ok;
				};
				if (((!(_12617_ref)) && _205053ca5_traitHasReferenceReceiver(_12513_trt))) {
					_205063ea2_pushErr(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12131_ok = false;
					return _12131_ok;
				};
				_12131_ok = true;
				return _12131_ok;
			}
		}
		else if ((_2050ae1b7_Trait((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1db36021d:;
			{
				_12131_ok = (_12513_trt == _2050ae1b7_Trait((*_self_)._field_src.ptr()));
				return _12131_ok;
			}
		}
		else {
			_case_begin_1db35e8e3:;
			{
				_12131_ok = false;
				return _12131_ok;
			}
		}
		_match_end_1db35e88d:;
	};
}



inline jule::Bool _20506447a_checkPtr(_205063985_typeCompatibilityChecker* _self_) {
	jule::Bool _15229_ok = jule::Bool();
	if (_2050ab813_IsNil((*_self_)._field_src.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	jule::Ptr<_2050b71ae_Ptr> _15617_dest = _2050acec9_Ptr((*_self_)._field_dest.ptr());;
	if (_2050b7b82_IsUnsafe(_15617_dest.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	_15229_ok = _2050ab0e8_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15229_ok;
}



inline jule::Bool _2050646de_checkPrim(_205063985_typeCompatibilityChecker* _self_) {
	jule::Bool _16330_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_Variadic))) {
		jule::Ptr<_2050b03b6_Prim> _16517_prim = _2050aca01_Prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _2050b385e_IsAny(_16517_prim.ptr()))) {
			_16330_ok = true;
			return _16330_ok;
		};
	};
	_16330_ok = _2050ab0e8_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16330_ok;
}



inline jule::Bool _205064a96_typeEnum(_205063985_typeCompatibilityChecker* _self_, jule::Ptr<_204ed3130_TypeEnum>& _17328_e, jule::Ptr<_2050aa8de_TypeKind>& _17347_t2) {
	jule::Bool _17364_ok = jule::Bool();
	{
		auto &expr = _17328_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1db368743:;
		if (it != expr.end()) {
			jule::Ptr<_204ed2a69_TypeEnumItem> _17421_item = *it;
			{
				if (_2050ab0e8_Equals(_17421_item.get()._field_Kind.get()._field_Kind, _17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
				jule::Ptr<_204ed3130_TypeEnum> _17821_ke = _2050ad4a2_TypeEnum(_17421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_1db368743;
				};
				if (_205064a96_typeEnum(&(*_self_), _17821_ke,_17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
			}
			_iter_next_1db368743:;
			++it;
			goto _iter_begin_1db368743;
		}
		_iter_end_1db368743:;
	};
	_17364_ok = false;
	return _17364_ok;
}



inline jule::Bool _205064d0a_checkTypeEnum(_205063985_typeCompatibilityChecker* _self_) {
	jule::Bool _18934_ok = jule::Bool();
	if (_2050ab0e8_Equals((*_self_)._field_dest, (*_self_)._field_src)) {
		_18934_ok = true;
		return _18934_ok;
	};
	jule::Ptr<_204ed3130_TypeEnum> _19317_e = _2050ad4a2_TypeEnum((*_self_)._field_dest.ptr());;
	_18934_ok = _205064a96_typeEnum(&(*_self_), _19317_e,(*_self_)._field_src);
	return _18934_ok;
}



inline jule::Bool _20506506e_check(_205063985_typeCompatibilityChecker* _self_) {
	jule::Bool _19726_ok = jule::Bool();
	if ((_2050acec9_Ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_19726_ok = _20506447a_checkPtr(&(*_self_));
		return _19726_ok;
	};
	if (_2050ac050_NilCompatible((*_self_)._field_dest.ptr())) {
		if (_2050ab813_IsNil((*_self_)._field_src.ptr())) {
			_19726_ok = true;
			return _19726_ok;
		};
	};
	{
		
		if ((_2050aca01_Prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1db36de74:;
			{
				_19726_ok = _2050646de_checkPrim(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_2050ad4a2_TypeEnum((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1db36deda:;
			{
				_19726_ok = _205064d0a_checkTypeEnum(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_2050ae1b7_Trait((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1db36e31a:;
			{
				_19726_ok = _205064216_checkTrait(&(*_self_));
				return _19726_ok;
			}
		}
		else {
			_case_begin_1db36d8ad:;
			{
				_19726_ok = _2050ab0e8_Equals((*_self_)._field_dest, (*_self_)._field_src);
				return _19726_ok;
			}
		}
		_match_end_1db36ce84:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _205063985_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _205065a20_pushErr(_2050655ad_assignTypeChecker* _self_, jule::Str _22926_fmt, jule::Slice<jule::Any> _22939_args) {
	_205016c24_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_22926_fmt,jule::Any(_22939_args));
}



inline jule::Bool _205065c84_checkValidity(_2050655ad_assignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_2050adbde_Fn((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db372b04:;
			{
				jule::Ptr<_204ec7454_FnIns> _23717_f = _2050adbde_Fn((*_self_)._field_d.get()._field_Kind.ptr());;
				{
					
					if (_204ec7641_IsBuiltin(_23717_f.ptr())) {
						_case_begin_1db374331:;
						{
							_205065a20_pushErr(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_1db3743a8:;
						{
							_205065a20_pushErr(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_Decl.get()._field_Statically)) && _2043a626d_IsMethod(_23717_f.get()._field_Decl.ptr()))) {
						_case_begin_1db374430:;
						{
							_205065a20_pushErr(&(*_self_), jule::Str("non-static methods cannot use as anonymous function", 51),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_23717_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1db3744a7:;
						{
							_205065a20_pushErr(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_205017043_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_1db374254:;
				};
			}
		}
		else if ((_2050ae690_Tup((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db372b7b:;
			{
				_205065a20_pushErr(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_1db372a49:;
	};
	return _23417_valid;
}



inline jule::Bool _205065ee8_checkConst(_2050655ad_assignTypeChecker* _self_) {
	if (((((!(_20508050c_IsConst((*_self_)._field_d.ptr()))) || (_2050aca01_Prim((*_self_)._field_dest.ptr()) == nullptr)) || (_2050aca01_Prim((*_self_)._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_204ebe56c_IsNum(_2050aca01_Prim((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_Model != (*_self_)._field_d.get()._field_Constant)) {
		return false;
	};
	jule::Str _27413_kind = _2050aca01_Prim((*_self_)._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_204ebe43a_IsFloat(_27413_kind)) {
			_case_begin_1db37c625:;
			{
				if ((!(_20504a72a_floatAssignable(_27413_kind,(*_self_)._field_d)))) {
					_205065a20_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
				(*_self_)._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else if (_204ebe308_IsInt(_27413_kind)) {
			_case_begin_1db37bdc7:;
			{
				if ((!(_205062753_intAssignable(_27413_kind,(*_self_)._field_d)))) {
					_205065a20_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
				(*_self_)._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else {
			_case_begin_1db37bd61:;
			{
				return false;
			}
		}
		_match_end_1db37bcea:;
	};
	return true;
}



inline jule::Bool _20506625c_isPrim(_2050655ad_assignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_Variadic || (*_self_)._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;
	};
	if ((_2050ab59e_CppLinked((*_self_)._field_dest.ptr()) || _2050ab59e_CppLinked((*_self_)._field_d.get()._field_Kind.ptr()))) {
		return false;
	};
	return ((_2050aca01_Prim((*_self_)._field_dest.ptr()) != nullptr) && (_2050aca01_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr));
}



inline jule::Bool _2050664c1_checkCompatibility(_2050655ad_assignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1db381e21:;
			{
				return false;
			}
		}
		else if ((!(_205065c84_checkValidity(&(*_self_))))) {
			_case_begin_1db381e98:;
			{
				return false;
			}
		}
		else if (_205065ee8_checkConst(&(*_self_))) {
			_case_begin_1db382020:;
			{
				return true;
			}
		}
		else if ((_2050ad23d_Enum((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db382097:;
			{
				jule::Ptr<_2050aa8de_TypeKind> _31821_dkind = (*_self_)._field_dest;;
				if ((_2050ad23d_Enum((*_self_)._field_dest.ptr()) != nullptr)) {
					_31821_dkind=_2050ad23d_Enum((*_self_)._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_2050aca01_Prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1db381cde;
				};
				if (_20474d912_TypesAreCompatible(_2050aca01_Prim(_2050ad23d_Enum((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind,_2050aca01_Prim(_31821_dkind.ptr()).get()._field_Kind)) {
					return true;
				};
			}
		}
		else if (_20506625c_isPrim(&(*_self_))) {
			_case_begin_1db38211e:;
			{
				jule::Ptr<_2050b03b6_Prim> _32817_dest = _2050aca01_Prim((*_self_)._field_dest.ptr());;
				if (_2050b385e_IsAny(_32817_dest.ptr())) {
					return true;
				};
				jule::Ptr<_2050b03b6_Prim> _33221_src = _2050aca01_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_20474d912_TypesAreCompatible(_32817_dest.get()._field_Kind,_33221_src.get()._field_Kind)) {
					return true;
				};
			}
		}
		_match_end_1db381cde:;
	};
	return _20501e05b_checkTypeCompatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_Kind,(*_self_)._field_errorToken);
}



inline jule::Bool _205066735_check(_2050655ad_assignTypeChecker* _self_) {
	jule::Bool _34113_ok = _2050664c1_checkCompatibility(&(*_self_));;
	if (_34113_ok) {
		_2050c4188_applyImplicitCast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _34113_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _2050655ad_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1db39c5bd_annotateConstraintElem(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _36049_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_204343a79_ArrTypeDecl>>()) {
			_case_begin_1db39dc2e:;
			{
				jule::Ptr<_2050aa8de_TypeKind> _36321_elem = nullptr;;
				{
					
{
						_case_begin_1db39eb64:;
						{
							_36321_elem=_2050ad716_Arr(_36049_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1db39eaa9:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_204343a79_ArrTypeDecl>().get()._field_Elem;
				return _205068627_annotateConstraint(&(*_self_), _36321_elem);
			}
		}
		_match_end_1db39dbc9:;
	};
	return false;
}

inline jule::Bool _1db39bc60_annotateConstraintElem(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _36049_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_204342d20_SlcTypeDecl>>()) {
			_case_begin_1db3a26c2:;
			{
				jule::Ptr<_2050aa8de_TypeKind> _36321_elem = nullptr;;
				{
					
{
						_case_begin_1db3a3690:;
						{
							_36321_elem=_2050ad97a_Slc(_36049_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1db3a354c:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_204342d20_SlcTypeDecl>().get()._field_Elem;
				return _205068627_annotateConstraint(&(*_self_), _36321_elem);
			}
		}
		_match_end_1db3a266c:;
	};
	return false;
}

inline jule::Bool _1db39c04b_annotateConstraintElem(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _36049_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_2043433e7_PtrTypeDecl>>()) {
			_case_begin_1db3a62db:;
			{
				jule::Ptr<_2050aa8de_TypeKind> _36321_elem = nullptr;;
				{
					
{
						_case_begin_1db3a7320:;
						{
							_36321_elem=_2050acec9_Ptr(_36049_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1db3a7166:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_2043433e7_PtrTypeDecl>().get()._field_Elem;
				return _205068627_annotateConstraint(&(*_self_), _36321_elem);
			}
		}
		_match_end_1db3a6286:;
	};
	return false;
}

inline jule::Bool _1db3a584b_annotateConstraintElem(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _36049_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_204342924_SptrTypeDecl>>()) {
			_case_begin_1db3a98c7:;
			{
				jule::Ptr<_2050aa8de_TypeKind> _36321_elem = nullptr;;
				{
					
{
						_case_begin_1db3aa972:;
						{
							_36321_elem=_2050acc65_Sptr(_36049_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1db3aa752:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_204342924_SptrTypeDecl>().get()._field_Elem;
				return _205068627_annotateConstraint(&(*_self_), _36321_elem);
			}
		}
		_match_end_1db3a9872:;
	};
	return false;
}



inline jule::Bool _2050678ac_annotateConstraintMap(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _38045_k) {
	jule::Bool _38061_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_2043442c7_MapTypeDecl>>()) {
			_case_begin_1db38a2e2:;
			{
				jule::Ptr<_2050b5b5d_Map> _38321_m = _2050ae42b_Map(_38045_k.ptr());;
				jule::Ptr<_2043442c7_MapTypeDecl> _38421_m2 = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_2043442c7_MapTypeDecl>();;
				(*_self_)._field_c=_38421_m2.get()._field_Key;
				if ((!(_205068627_annotateConstraint(&(*_self_), _38321_m.get()._field_Key)))) {
					_38061_ok = false;
					return _38061_ok;
				};
				(*_self_)._field_c=_38421_m2.get()._field_Val;
				_38061_ok = _205068627_annotateConstraint(&(*_self_), _38321_m.get()._field_Val);
				return _38061_ok;
			}
		}
		_match_end_1db38a28c:;
	};
	_38061_ok = false;
	return _38061_ok;
}



inline jule::Bool _205067bba_annotateConstraintTup(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _39545_k) {
	jule::Bool _39561_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_20434310b_TupleTypeDecl>>()) {
			_case_begin_1db38d13b:;
			{
				jule::Ptr<_20434310b_TupleTypeDecl> _39821_tup = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_20434310b_TupleTypeDecl>();;
				jule::Ptr<_2050b5135_Tuple> _39921_tup2 = _2050ae690_Tup(_39545_k.ptr());;
				{
					auto &expr = _39921_tup2.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1db38e527:;
					if (it != expr.end()) {
						jule::Ptr<_2050aa8de_TypeKind> _40025_t2 = *it;
						{
							{
								auto &expr = _39821_tup.get()._field_Types;
								auto it = expr.begin();
								_iter_begin_1db38ded8:;
								if (it != expr.end()) {
									jule::Ptr<_20434156b_TypeDecl> _40129_t = *it;
									{
										(*_self_)._field_c=_40129_t;
										if (_205068627_annotateConstraint(&(*_self_), _40025_t2)) {
											_39561_ok = true;
											return _39561_ok;
										};
									}
									_iter_next_1db38ded8:;
									++it;
									goto _iter_begin_1db38ded8;
								}
								_iter_end_1db38ded8:;
							};
						}
						_iter_next_1db38e527:;
						++it;
						goto _iter_begin_1db38e527;
					}
					_iter_end_1db38e527:;
				};
			}
		}
		_match_end_1db38cd61:;
	};
	_39561_ok = false;
	return _39561_ok;
}



inline jule::Bool _205067ec8_annotateConstraintFn(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _41244_k) {
	jule::Bool _41260_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_204352eea_FnDecl>>()) {
			_case_begin_1db3905b1:;
			{
				jule::Ptr<_204352eea_FnDecl> _41521_pf = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_204352eea_FnDecl>();;
				jule::Ptr<_204ec7454_FnIns> _41621_f = _2050adbde_Fn(_41244_k.ptr());;
				{
					auto &expr = _41621_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1db3925a2:;
					if (it != expr.end()) {
						jule::I64 _41718_i = it - expr.begin();
						jule::Ptr<_204ec7267_ParamIns> _41725_fp = *it;
						{
							(*_self_)._field_c=_41521_pf.get()._field_Params[_41718_i].get()._field_Kind;
							if (_205068627_annotateConstraint(&(*_self_), _41725_fp.get()._field_Kind)) {
								_41260_ok = true;
								return _41260_ok;
							};
						}
						_iter_next_1db3925a2:;
						++it;
						_41718_i++;
						goto _iter_begin_1db3925a2;
					}
					_iter_end_1db3925a2:;
				};
				if ((_41521_pf.get()._field_Result != nullptr)) {
					(*_self_)._field_c=_41521_pf.get()._field_Result.get()._field_Kind;
					if (_205068627_annotateConstraint(&(*_self_), _41621_f.get()._field_Result)) {
						_41260_ok = true;
						return _41260_ok;
					};
				};
			}
		}
		_match_end_1db38ec64:;
	};
	_41260_ok = false;
	return _41260_ok;
}



inline jule::Bool _205068308_annotateConstraintIdent(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _43347_k) {
	jule::Ptr<_204341b32_IdentTypeDecl> _43417_ident = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_204341b32_IdentTypeDecl>();;
	jule::Ptr<_20435cc5d_StructIns> _43517_s = _2050ade53_Struct(_43347_k.ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1db395de1:;
		if (it != expr.end()) {
			jule::I64 _43613_i = it - expr.begin();
			jule::Ptr<_20434d864_GenericDecl> _43616_g = *it;
			{
				if ((_43616_g.get()._field_Ident == _43417_ident.get()._field_Ident)) {
					jule::Ptr<_2050a91b2_InsGeneric> _43825_fg = (*_self_)._field_f.get()._field_Generics[_43613_i];;
					if ((_43825_fg != nullptr)) {
						return false;
					};
					_205068946_pushGeneric(&(*_self_), _43347_k,_43613_i);
					return true;
				};
				if ((_43517_s == nullptr)) {
					goto _iter_next_1db395de1;
				};
				jule::Ptr<_20434156b_TypeDecl> _44821_c = (*_self_)._field_c;;
				{
					auto &expr = _43417_ident.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1db398dc2:;
					if (it != expr.end()) {
						jule::Ptr<_20434156b_TypeDecl> _44925_ig = *it;
						{
							(*_self_)._field_c=_44925_ig;
							{
								auto &expr = _43517_s.get()._field_Generics;
								auto it = expr.begin();
								_iter_begin_1db3996b9:;
								if (it != expr.end()) {
									jule::Ptr<_2050a91b2_InsGeneric> _45129_sg = *it;
									{
										if (_205068627_annotateConstraint(&(*_self_), _45129_sg.get()._field_Kind)) {
											return true;
										};
									}
									_iter_next_1db3996b9:;
									++it;
									goto _iter_begin_1db3996b9;
								}
								_iter_end_1db3996b9:;
							};
						}
						_iter_next_1db398dc2:;
						++it;
						goto _iter_begin_1db398dc2;
					}
					_iter_end_1db398dc2:;
				};
				(*_self_)._field_c=_44821_c;
			}
			_iter_next_1db395de1:;
			++it;
			_43613_i++;
			goto _iter_begin_1db395de1;
		}
		_iter_end_1db395de1:;
	};
	return false;
}



inline jule::Bool _205068627_annotateConstraint(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _46242_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_204341b32_IdentTypeDecl>>()) {
			_case_begin_1db399323:;
			{
				return _205068308_annotateConstraintIdent(&(*_self_), _46242_k);
			}
		}
		_match_end_1db3992bd:;
	};
	{
		
		if ((_2050ad716_Arr(_46242_k.ptr()) != nullptr)) {
			_case_begin_1db39aa3e:;
			{
				return _1db39c5bd_annotateConstraintElem(&(*_self_), _46242_k);
			}
		}
		else if ((_2050ad97a_Slc(_46242_k.ptr()) != nullptr)) {
			_case_begin_1db39aaa5:;
			{
				return _1db39bc60_annotateConstraintElem(&(*_self_), _46242_k);
			}
		}
		else if ((_2050acec9_Ptr(_46242_k.ptr()) != nullptr)) {
			_case_begin_1db39ab1b:;
			{
				return _1db39c04b_annotateConstraintElem(&(*_self_), _46242_k);
			}
		}
		else if ((_2050acc65_Sptr(_46242_k.ptr()) != nullptr)) {
			_case_begin_1db39ab82:;
			{
				return _1db3a584b_annotateConstraintElem(&(*_self_), _46242_k);
			}
		}
		else if ((_2050ae42b_Map(_46242_k.ptr()) != nullptr)) {
			_case_begin_1db39b4e0:;
			{
				return _2050678ac_annotateConstraintMap(&(*_self_), _46242_k);
			}
		}
		else if ((_2050adbde_Fn(_46242_k.ptr()) != nullptr)) {
			_case_begin_1db39b556:;
			{
				return _205067ec8_annotateConstraintFn(&(*_self_), _46242_k);
			}
		}
		else if ((_2050ae690_Tup(_46242_k.ptr()) != nullptr)) {
			_case_begin_1db39b5bc:;
			{
				return _205067bba_annotateConstraintTup(&(*_self_), _46242_k);
			}
		}
		else {
			_case_begin_1db39adc4:;
			{
				return false;
			}
		}
		_match_end_1db39ad6e:;
	};
}



inline void _205068946_pushGeneric(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _48735_k, jule::I64 _48749_i) {
	(*_self_)._field_f.get()._field_Generics[_48749_i]=jule::new_ptr<_2050a91b2_InsGeneric>(_2050a91b2_InsGeneric{._field_Kind=_48735_k, });
	jule::Ptr<_20434d864_GenericDecl> _48917_gd = (*_self_)._field_f.get()._field_Decl.get()._field_Generics[_48749_i];;
	if (((_48917_gd.get()._field_Constraint == nullptr) || (_48917_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*_self_)._field_c=_48917_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_205068627_annotateConstraint(&(*_self_), _48735_k);
}



inline jule::Bool _205068c54_annotatePrim(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _49743_k) {
	jule::Bool _49759_ok = jule::Bool();
	_49759_ok = _20506aa7a_annotateAny(&(*_self_), _49743_k);
	return _49759_ok;
}



inline jule::Bool _205069062_annotateArr(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _50142_k) {
	jule::Bool _50158_ok = jule::Bool();
	jule::Ptr<_2050b6752_Arr> _50217_parr = _2050ad716_Arr((*((*_self_)._field_k)).ptr());;
	if ((_50217_parr == nullptr)) {
		_50158_ok = false;
		return _50158_ok;
	};
	jule::Ptr<_2050b6752_Arr> _50617_arr = _2050ad716_Arr(_50142_k.ptr());;
	(*_self_)._field_k=(&(_50217_parr.get()._field_Elem));
	_50158_ok = _20506ad88_annotateKind(&(*_self_), _50617_arr.get()._field_Elem);
	return _50158_ok;
}



inline jule::Bool _205069370_annotateSlc(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _51142_k) {
	jule::Bool _51158_ok = jule::Bool();
	jule::Ptr<_2050b45a7_Slc> _51217_pslc = _2050ad97a_Slc((*((*_self_)._field_k)).ptr());;
	if ((_51217_pslc == nullptr)) {
		_51158_ok = false;
		return _51158_ok;
	};
	jule::Ptr<_2050b45a7_Slc> _51617_slc = _2050ad97a_Slc(_51142_k.ptr());;
	(*_self_)._field_k=(&(_51217_pslc.get()._field_Elem));
	_51158_ok = _20506ad88_annotateKind(&(*_self_), _51617_slc.get()._field_Elem);
	return _51158_ok;
}



inline jule::Bool _205069727_checkMapKey(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>* _52141_k, jule::Ptr<_2050aa8de_TypeKind>& _52161_ck) {
	jule::Bool _52178_ok = jule::Bool();
	jule::Ptr<_2050aa8de_TypeKind>* _52217_old = (*_self_)._field_k;;
	(*_self_)._field_k=_52141_k;
	_52178_ok=_20506ad88_annotateKind(&(*_self_), _52161_ck);
	(*_self_)._field_k=_52217_old;
	return _52178_ok;
}



inline jule::Bool _205069a35_annotateMap(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _52942_k) {
	jule::Bool _52958_ok = jule::Bool();
	jule::Ptr<_2050b5b5d_Map> _53017_pmap = _2050ae42b_Map((*((*_self_)._field_k)).ptr());;
	if ((_53017_pmap == nullptr)) {
		_52958_ok = false;
		return _52958_ok;
	};
	jule::Ptr<_2050b5b5d_Map> _53417_m = _2050ae42b_Map(_52942_k.ptr());;
	_52958_ok = (_205069727_checkMapKey(&(*_self_), (&(_53017_pmap.get()._field_Key)),_53417_m.get()._field_Key) && _205069727_checkMapKey(&(*_self_), (&(_53017_pmap.get()._field_Val)),_53417_m.get()._field_Val));
	return _52958_ok;
}



inline jule::Bool _205069d43_annotateFn(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _53941_k) {
	jule::Bool _53957_ok = jule::Bool();
	jule::Ptr<_204ec7454_FnIns> _54017_pf = _2050adbde_Fn((*((*_self_)._field_k)).ptr());;
	if ((_54017_pf == nullptr)) {
		_53957_ok = false;
		return _53957_ok;
	};
	jule::Ptr<_204ec7454_FnIns> _54417_f = _2050adbde_Fn(_53941_k.ptr());;
	{
		
		if ((_54017_pf.get()._field_Params.len() != _54417_f.get()._field_Params.len())) {
			_case_begin_1db3ba7d9:;
			{
				_53957_ok = false;
				return _53957_ok;
			}
		}
		else if ((_2043a5a53_IsVoid(_54017_pf.get()._field_Decl.ptr()) != _2043a5a53_IsVoid(_54417_f.get()._field_Decl.ptr()))) {
			_case_begin_1db3ba861:;
			{
				_53957_ok = false;
				return _53957_ok;
			}
		}
		_match_end_1db3ba773:;
	};
	_53957_ok=true;
	jule::Ptr<_2050aa8de_TypeKind>* _55317_old = (*_self_)._field_k;;
	{
		auto &expr = _54417_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1db3bc434:;
		if (it != expr.end()) {
			jule::I64 _55414_i = it - expr.begin();
			jule::Ptr<_204ec7267_ParamIns> _55421_fp = *it;
			{
				(*_self_)._field_k=(&(_54017_pf.get()._field_Params[_55414_i].get()._field_Kind));
				_53957_ok=(_20506ad88_annotateKind(&(*_self_), _55421_fp.get()._field_Kind) && _53957_ok);
			}
			_iter_next_1db3bc434:;
			++it;
			_55414_i++;
			goto _iter_begin_1db3bc434;
		}
		_iter_end_1db3bc434:;
	};
	if ((!(_2043a5a53_IsVoid(_54017_pf.get()._field_Decl.ptr())))) {
		(*_self_)._field_k=(&(_54017_pf.get()._field_Result));
		_53957_ok=(_20506ad88_annotateKind(&(*_self_), _54417_f.get()._field_Result) && _53957_ok);
	};
	(*_self_)._field_k=_55317_old;
	return _53957_ok;
}



inline jule::Bool _20506a151_annotatePtr(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _56842_k) {
	jule::Bool _56858_ok = jule::Bool();
	jule::Ptr<_2050b71ae_Ptr> _56917_pptr = _2050acec9_Ptr((*((*_self_)._field_k)).ptr());;
	if ((_56917_pptr == nullptr)) {
		_56858_ok = false;
		return _56858_ok;
	};
	jule::Ptr<_2050b71ae_Ptr> _57317_ptr = _2050acec9_Ptr(_56842_k.ptr());;
	(*_self_)._field_k=(&(_56917_pptr.get()._field_Elem));
	_56858_ok = _20506ad88_annotateKind(&(*_self_), _57317_ptr.get()._field_Elem);
	return _56858_ok;
}



inline jule::Bool _20506a45e_annotateSptr(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _57843_k) {
	jule::Bool _57859_ok = jule::Bool();
	jule::Ptr<_2050b3b4a_Sptr> _57917_ssptr = _2050acc65_Sptr((*((*_self_)._field_k)).ptr());;
	if ((_57917_ssptr == nullptr)) {
		_57859_ok = false;
		return _57859_ok;
	};
	jule::Ptr<_2050b3b4a_Sptr> _58317_sptr = _2050acc65_Sptr(_57843_k.ptr());;
	(*_self_)._field_k=(&(_57917_ssptr.get()._field_Elem));
	_57859_ok = _20506ad88_annotateKind(&(*_self_), _58317_sptr.get()._field_Elem);
	return _57859_ok;
}



inline jule::Bool _20506a76c_annotateStruct(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _58845_k) {
	jule::Bool _58861_ok = jule::Bool();
	jule::Ptr<_20435cc5d_StructIns> _58917_s = _2050ade53_Struct((*((*_self_)._field_k)).ptr());;
	if ((_58917_s == nullptr)) {
		_58861_ok = false;
		return _58861_ok;
	};
	jule::Ptr<_20435cc5d_StructIns> _59317_s2 = _2050ade53_Struct(_58845_k.ptr());;
	if ((_58917_s.get()._field_Generics.len() != _59317_s2.get()._field_Generics.len())) {
		_58861_ok = false;
		return _58861_ok;
	};
	{
		auto &expr = _58917_s.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1db3c663b:;
		if (it != expr.end()) {
			jule::I64 _59714_i = it - expr.begin();
			jule::Ptr<_2050a91b2_InsGeneric> _59721_g = *it;
			{
				jule::Ptr<_2050a91b2_InsGeneric> _59821_g2 = _59317_s2.get()._field_Generics[_59714_i];;
				if (_2050ab0e8_Equals(_59721_g.get()._field_Kind, _59821_g2.get()._field_Kind)) {
					goto _iter_next_1db3c663b;
				};
				(*_self_)._field_k=(&(_59721_g.get()._field_Kind));
				if ((!(_20506ad88_annotateKind(&(*_self_), _59821_g2.get()._field_Kind)))) {
					_58861_ok = false;
					return _58861_ok;
				};
			}
			_iter_next_1db3c663b:;
			++it;
			_59714_i++;
			goto _iter_begin_1db3c663b;
		}
		_iter_end_1db3c663b:;
	};
	_58861_ok = true;
	return _58861_ok;
}



inline jule::Bool _20506aa7a_annotateAny(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _61042_k) {
	jule::Bool _61058_ok = jule::Bool();
	jule::Str _61113_kind = _2050aacda_Str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1db3c981a:;
		if (it != expr.end()) {
			jule::I64 _61213_i = it - expr.begin();
			jule::Ptr<_20434d864_GenericDecl> _61216_g = *it;
			{
				if ((_61113_kind != _61216_g.get()._field_Ident)) {
					goto _iter_next_1db3c981a;
				};
				jule::Ptr<_2050a91b2_InsGeneric> _61617_t = (*_self_)._field_f.get()._field_Generics[_61213_i];;
				{
					
					if ((_61617_t == nullptr) || (_61617_t.get()._field_Kind == nullptr)) {
						_case_begin_1db3cb542:;
						{
							_205068946_pushGeneric(&(*_self_), _61042_k,_61213_i);
						}
					}
					else if ((!(_2050ab0e8_Equals(_61617_t.get()._field_Kind, _61042_k)))) {
						_case_begin_1db3cb5b9:;
						{
							_61058_ok = false;
							return _61058_ok;
						}
					}
					_match_end_1db3cb3cc:;
				};
				(*((*_self_)._field_k)).get()._field_Kind=_61042_k.get()._field_Kind;
				_61058_ok = true;
				return _61058_ok;
			}
			_iter_next_1db3c981a:;
			++it;
			_61213_i++;
			goto _iter_begin_1db3c981a;
		}
		_iter_end_1db3c981a:;
	};
	_61058_ok = false;
	return _61058_ok;
}



inline jule::Bool _20506ad88_annotateKind(_205066ec7_dynamicTypeAnnotation* _self_, jule::Ptr<_2050aa8de_TypeKind>& _63243_k) {
	jule::Bool _63259_ok = jule::Bool();
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _63259_ok;
	};
	{
		
		if (_20506aa7a_annotateAny(&(*_self_), _63243_k)) {
			_case_begin_1db3ce930:;
			{
				_63259_ok = true;
				return _63259_ok;
			}
		}
		else if ((_2050aca01_Prim(_63243_k.ptr()) != nullptr)) {
			_case_begin_1db3ce9a7:;
			{
				_63259_ok = _205068c54_annotatePrim(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_2050ad716_Arr(_63243_k.ptr()) != nullptr)) {
			_case_begin_1db3ce622:;
			{
				_63259_ok = _205069062_annotateArr(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_2050ad97a_Slc(_63243_k.ptr()) != nullptr)) {
			_case_begin_1db3ce688:;
			{
				_63259_ok = _205069370_annotateSlc(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_2050ae42b_Map(_63243_k.ptr()) != nullptr)) {
			_case_begin_1db3ce6ee:;
			{
				_63259_ok = _205069a35_annotateMap(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_2050adbde_Fn(_63243_k.ptr()) != nullptr)) {
			_case_begin_1db3ce204:;
			{
				_63259_ok = _205069d43_annotateFn(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_2050acec9_Ptr(_63243_k.ptr()) != nullptr)) {
			_case_begin_1db3ce26a:;
			{
				_63259_ok = _20506a151_annotatePtr(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_2050acc65_Sptr(_63243_k.ptr()) != nullptr)) {
			_case_begin_1db3ce2d1:;
			{
				_63259_ok = _20506a45e_annotateSptr(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_2050ade53_Struct(_63243_k.ptr()) != nullptr)) {
			_case_begin_1db3ce358:;
			{
				_63259_ok = _20506a76c_annotateStruct(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else {
			_case_begin_1db3ce18d:;
			{
				_63259_ok = false;
				return _63259_ok;
			}
		}
		_match_end_1db3ce138:;
	};
}



inline jule::Bool _20506b0ec_annotate(_205066ec7_dynamicTypeAnnotation* _self_) {
	jule::Bool _66036_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_Kind));
	_66036_ok = _20506ad88_annotateKind(&(*_self_), (*_self_)._field_a.get()._field_Kind);
	return _66036_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _205066ec7_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c;
	_Stream << "}";
	return _Stream;
}



inline void _20506bd23_pushErrToken(_20506b7c3_fnCallArgChecker* _self_, jule::Ptr<_202b89679_Token> _67631_token, jule::Str _67646_fmt, jule::Slice<jule::Any> _67659_args) {
	_205016c24_pushErr((*_self_)._field_e.get()._field_s.ptr(), _67631_token,_67646_fmt,jule::Any(_67659_args));
}



inline void _20506c142_pushErr(_20506b7c3_fnCallArgChecker* _self_, jule::Str _68026_fmt, jule::Slice<jule::Any> _68039_args) {
	_20506bd23_pushErrToken(&(*_self_), (*_self_)._field_errorToken,_68026_fmt,jule::Any(_68039_args));
}



inline jule::Slice<jule::Ptr<_204ec7267_ParamIns>> _20506c3a6_getParams(_20506b7c3_fnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_Params.len() > 0LL) && ((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _204395b64_IsSelf((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*_self_)._field_f.get()._field_Params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_Params;
}



inline jule::Bool _20506c6b4_checkCounts(_20506b7c3_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_204ec7267_ParamIns>>& _69331_params) {
	jule::Bool _69354_ok = jule::Bool();
	jule::I64 _69417_n = _69331_params.len();;
	if (((_69417_n > 0LL) && _204395b64_IsSelf(_69331_params[0LL].get()._field_Decl.ptr()))) {
		(_69417_n)--;
	};
	jule::I64 _69917_diff = (_69417_n - (*_self_)._field_args.len());;
	{
		
		if ((_69917_diff == 0LL)) {
			_case_begin_1db3dbcb1:;
			{
				_69354_ok = true;
				return _69354_ok;
			}
		}
		else if (((_69417_n > 0LL) && _69331_params[(_69417_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1db3dbd38:;
			{
				_69354_ok = true;
				return _69354_ok;
			}
		}
		else if (((_69917_diff < 0LL) || (_69917_diff > _69331_params.len()))) {
			_case_begin_1db3dbdb0:;
			{
				_20506c142_pushErr(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_69354_ok = false;
				return _69354_ok;
			}
		}
		_match_end_1db3dbc06:;
	};
	jule::Str _71017_idents = jule::Str();;
	for (; (_69917_diff > 0LL); (_69917_diff)--) {
		{
			_71017_idents+=(jule::Str(", ", 2) + _69331_params[(_69417_n - _69917_diff)].get()._field_Decl.get()._field_Ident);
		}
	_iter_next_1db3dd9e9:;
	}
	_iter_end_1db3dd9e9:;;
	(_71017_idents).mut_slice(2LL);;
	_20506c142_pushErr(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_71017_idents)}));
	_69354_ok = false;
	return _69354_ok;
}



inline jule::Bool _20506cb15_checkArg(_20506b7c3_fnCallArgChecker* _self_, jule::Ptr<_204ec7267_ParamIns>& _72032_p, jule::Ptr<_20507eb49_Data>& _72051_arg, jule::Ptr<_202b89679_Token>& _72068_errorToken) {
	jule::Bool _72090_ok = jule::Bool();
	if (((*_self_)._field_dynamicAnnotation && _204ec7b19_parameterUsesGenerics(_72032_p.get()._field_Decl,(*_self_)._field_f.get()._field_Decl.get()._field_Generics))) {
		_72090_ok=(!(_72032_p.get()._field_Decl.get()._field_Variadic));
		if (_72090_ok) {
			_205066ec7_dynamicTypeAnnotation _72425_dta = _205066ec7_dynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_72032_p, ._field_a=_72051_arg, ._field_errorToken=_72068_errorToken, };;
			_72090_ok=_20506b0ec_annotate(&_72425_dta);
		};
		if ((!(_72090_ok))) {
			_20506bd23_pushErrToken(&(*_self_), _72068_errorToken,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_72090_ok = false;
			return _72090_ok;
		};
	};
	if (_205021844_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, _72032_p.get()._field_Decl.get()._field_Mutable,_72032_p.get()._field_Decl.get()._field_Reference,_72032_p.get()._field_Kind,_72051_arg,_72068_errorToken)) {
		_20501db0a_checkAssignType((*_self_)._field_e.get()._field_s, _72032_p.get()._field_Decl.get()._field_Reference,_72032_p.get()._field_Kind,_72051_arg,_72068_errorToken);
	};
	_72090_ok = true;
	return _72090_ok;
}



inline jule::Bool _20506cebc_push(_20506b7c3_fnCallArgChecker* _self_, jule::Ptr<_204ec7267_ParamIns>& _74728_p, jule::Ptr<_204345a8c_Expr> _74746_arg) {
	jule::Bool _74760_ok = jule::Bool();
	jule::Ptr<_2050aa8de_TypeKind> _74817_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _74913_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_20507eb49_Data> _75017_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_74728_p.get()._field_Decl.get()._field_Mutable));
	if (((!((*_self_)._field_dynamicAnnotation)) && (!(_74728_p.get()._field_Decl.get()._field_Variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_74728_p.get()._field_Kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_75017_d=_20509b9bd_evalExprKind((*_self_)._field_e, _74746_arg.get()._field_Kind);
	(*_self_)._field_e.get()._field_prefix=_74817_old;
	(*_self_)._field_e.get()._field_immutable=_74913_old_immut;
	if ((_75017_d == nullptr)) {
		_74760_ok = false;
		return _74760_ok;
	};
	_74760_ok=_20506cb15_checkArg(&(*_self_), _74728_p,_75017_d,_74746_arg.get()._field_Token);
	(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_75017_d.get()._field_Model);;
	return _74760_ok;
}



inline jule::Bool _20506d374_pushVariadic(_20506b7c3_fnCallArgChecker* _self_, jule::Ptr<_204ec7267_ParamIns>& _77236_p, jule::I64 _77254_i) {
	jule::Bool _77264_ok = jule::Bool();
	_77264_ok=true;
	jule::Bool _77417_variadiced = false;;
	jule::Bool _77513_more = ((_77254_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_204ec2394_SliceExprModel> _77617_model = jule::new_ptr<_204ec2394_SliceExprModel>(_204ec2394_SliceExprModel{._field_ElemKind=_77236_p.get()._field_Kind, });;
	jule::Ptr<_2050aa8de_TypeKind> _78017_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _78513_variadic = _77236_p.get()._field_Kind.get()._field_Variadic;;
	_77236_p.get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		_77236_p.get()._field_Kind.get()._field_Variadic=_78513_variadic;
	});;
	for (; (_77254_i < (*_self_)._field_args.len()); (_77254_i)++) {
		{
			jule::Ptr<_204345a8c_Expr> _79221_arg = (*_self_)._field_args[_77254_i];;
			{
				auto &_match_expr{ _79221_arg.get()._field_Kind };
				
				if (_match_expr.type_is<jule::Ptr<_20434830e_VariadicExpr>>()) {
					_case_begin_1db3ee6ca:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(jule::new_ptr<_2050b45a7_Slc>(_2050b45a7_Slc{._field_Elem=_77236_p.get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_1db3ee2ce:;
					{
						(*_self_)._field_e.get()._field_prefix=_77236_p.get()._field_Kind;
					}
				}
				_match_end_1db3ee0c0:;
			};
			jule::Ptr<_20507eb49_Data> _80521_d = _20509bccb_eval((*_self_)._field_e, _79221_arg);;
			if ((_80521_d == nullptr)) {
				_77264_ok=false;
				goto _iter_next_1db3eca5d;
			};
			if (_80521_d.get()._field_Kind.get()._field_Variadic) {
				_77417_variadiced=true;
				_77236_p.get()._field_Kind.get()._field_Variadic=true;
				_77264_ok=(_77264_ok && _20506cb15_checkArg(&(*_self_), _77236_p,_80521_d,_79221_arg.get()._field_Token));
				{
					auto &_match_expr{ _80521_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_204ec2394_SliceExprModel>>()) {
						_case_begin_1db402aa7:;
						{
							_77617_model=_80521_d.get()._field_Model.operator jule::Ptr<_204ec2394_SliceExprModel>();
							_77617_model.get()._field_ElemKind=_77236_p.get()._field_Kind;
						}
					}
					else {
						_case_begin_1db402579:;
						{
							_77617_model=nullptr;
							(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_80521_d.get()._field_Model);;
						}
					}
					_match_end_1db4018db:;
				};
				(_77254_i)++;
				goto _iter_end_1db3eca5d;
			};
			_77264_ok=(_77264_ok && _20506cb15_checkArg(&(*_self_), _77236_p,_80521_d,_79221_arg.get()._field_Token));
			_77617_model.get()._field_Elems = jule::alloc_for_append(_77617_model.get()._field_Elems,1);_77617_model.get()._field_Elems.__push(_80521_d.get()._field_Model);;
		}
	_iter_next_1db3eca5d:;
	}
	_iter_end_1db3eca5d:;;
	(*_self_)._field_e.get()._field_prefix=_78017_old;
	if ((_77417_variadiced && _77513_more)) {
		_20506bd23_pushErrToken(&(*_self_), (*_self_)._field_args[_77254_i].get()._field_Token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_77617_model != nullptr)) {
		(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(static_cast<jule::Any>(_77617_model));;
	};
	return _77264_ok;
}



inline jule::Bool _20506d682_checkArgs(_20506b7c3_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_204ec7267_ParamIns>>& _84833_params) {
	jule::Bool _84856_ok = jule::Bool();
	jule::Bool _84913_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_84856_ok=true;
	jule::I64 _85317_i = 0LL;;
	if (((_84833_params.len() > 0LL) && _204395b64_IsSelf(_84833_params[0LL].get()._field_Decl.ptr()))) {
		(_85317_i)++;
	};
	_julec_label_iter:;
	while ((_85317_i < _84833_params.len())) {
		{
			jule::Ptr<_204ec7267_ParamIns> _86021_p = _84833_params[_85317_i];;
			{
				
				if (_86021_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1da0ce5ba:;
					{
						_84856_ok=(_20506d374_pushVariadic(&(*_self_), _86021_p,_85317_i) && _84856_ok);
						goto _iter_end_1db407727;
					}
				}
				else if (((*_self_)._field_args.len() <= _85317_i)) {
					_case_begin_1dacaeed1:;
					{
						_84856_ok=false;
						goto _iter_end_1db407727;
					}
				}
				else {
					_case_begin_1da0d2bc8:;
					{
						_84856_ok=(_20506cebc_push(&(*_self_), _86021_p,(*_self_)._field_args[_85317_i]) && _84856_ok);
					}
				}
				_match_end_1da0d4e94:;
			};
			(_85317_i)++;
		}
	_iter_next_1db407727:;
	}
	_iter_end_1db407727:;;
	(*_self_)._field_e.get()._field_arg=_84913_arg;
	return _84856_ok;
}



inline jule::Bool _20506d918_checkDynamicTypeAnnotation(_20506b7c3_fnCallArgChecker* _self_) {
	jule::Bool _87947_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1db1aee5d:;
		if (it != expr.end()) {
			jule::Ptr<_2050a91b2_InsGeneric> _88016_g = *it;
			{
				if ((_88016_g == nullptr)) {
					_20506c142_pushErr(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_87947_ok = false;
					return _87947_ok;
				};
			}
			_iter_next_1db1aee5d:;
			++it;
			goto _iter_begin_1db1aee5d;
		}
		_iter_end_1db1aee5d:;
	};
	_87947_ok = true;
	return _87947_ok;
}



inline jule::Bool _20506db8d_check(_20506b7c3_fnCallArgChecker* _self_) {
	jule::Bool _88926_ok = jule::Bool();
	jule::Slice<jule::Ptr<_204ec7267_ParamIns>> _89017_params = _20506c3a6_getParams(&(*_self_));;
	_88926_ok=_20506c6b4_checkCounts(&(*_self_), _89017_params);
	if ((!(_88926_ok))) {
		_88926_ok = false;
		return _88926_ok;
	};
	_88926_ok=_20506d682_checkArgs(&(*_self_), _89017_params);
	if ((_88926_ok && (*_self_)._field_dynamicAnnotation)) {
		_88926_ok=_20506d918_checkDynamicTypeAnnotation(&(*_self_));
	};
	return _88926_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _20506b7c3_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels;
	_Stream << "}";
	return _Stream;
}



inline void _20506e6d8_pushErr(_20506e1cc_structLitChecker* _self_, jule::Ptr<_202b89679_Token> _91126_token, jule::Str _91141_fmt, jule::Slice<jule::Any> _91154_args) {
	_205081bc3_pushErr((*_self_)._field_e.ptr(), _91126_token,_91141_fmt,jule::Any(_91154_args));
}



inline void _20506ea07_pushSugggestion(_20506e1cc_structLitChecker* _self_, jule::Str _91634_fmt, jule::Slice<jule::Any> _91647_args) {
	_205081ee2_pushSugggestion((*_self_)._field_e.ptr(), _91634_fmt,jule::Any(_91647_args));
}



inline void _20506edc0_pushMatch(_20506e1cc_structLitChecker* _self_, jule::Ptr<_2043393bb_FieldIns>& _92033_f, jule::Ptr<_20507eb49_Data>& _92052_d, jule::Ptr<_202b89679_Token>& _92067_errorToken) {
	;
	if (_205021844_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_92033_f.get()._field_Kind,_92052_d,_92067_errorToken)) {
		_20501db0a_checkAssignType((*_self_)._field_e.get()._field_s, false,_92033_f.get()._field_Kind,_92052_d,_92067_errorToken);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_204ec1904_StructArgExprModel>(_204ec1904_StructArgExprModel{._field_Field=_92033_f, ._field_Expr=_92052_d.get()._field_Model}));;
}



inline void _2050701de_checkPair(_20506e1cc_structLitChecker* _self_, jule::Ptr<_20434a4ed_FieldExprPair>& _93333_pair, jule::Slice<jule::Ptr<_204345a8c_Expr>>& _93360_exprs) {
	jule::Ptr<_2043393bb_FieldIns> _93517_f = _204336e02_FindField((*_self_)._field_s.ptr(), _93333_pair.get()._field_Field.get()._field_Kind);;
	if ((_93517_f == nullptr)) {
		_20506e6d8_pushErr(&(*_self_), _93333_pair.get()._field_Field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_93333_pair.get()._field_Field.get()._field_Kind)}));
		return;;
	};
	if ((!(_2050173ea_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _93517_f.get()._field_Decl.get()._field_Public,_93517_f.get()._field_Decl.get()._field_Token)))) {
		_20506e6d8_pushErr(&(*_self_), _93333_pair.get()._field_Field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_93333_pair.get()._field_Field.get()._field_Kind)}));
		_20506ea07_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _93360_exprs;
		auto it = expr.begin();
		_iter_begin_1db1baa4b:;
		if (it != expr.end()) {
			jule::Ptr<_204345a8c_Expr> _94721_expr = *it;
			{
				{
					auto &_match_expr{ _94721_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_20434a4ed_FieldExprPair>>()) {
						_case_begin_1db1bb475:;
						{
							jule::Ptr<_20434a4ed_FieldExprPair> _95025_dpair = _94721_expr.get()._field_Kind.operator jule::Ptr<_20434a4ed_FieldExprPair>();;
							{
								
								if ((_93333_pair == _95025_dpair)) {
									_case_begin_1db1bc487:;
									{
										goto _iter_end_1db1baa4b;
									}
								}
								else if ((_93333_pair.get()._field_Field.get()._field_Kind == _95025_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1db1bc50e:;
									{
										_20506e6d8_pushErr(&(*_self_), _93333_pair.get()._field_Field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_93333_pair.get()._field_Field.get()._field_Kind)}));
										goto _iter_end_1db1baa4b;
									}
								}
								_match_end_1db1bc3cc:;
							};
						}
					}
					_match_end_1db1bb255:;
				};
			}
			_iter_next_1db1baa4b:;
			++it;
			goto _iter_begin_1db1baa4b;
		}
		_iter_end_1db1baa4b:;
	};
	jule::Ptr<_2050aa8de_TypeKind> _96117_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_96117_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_93517_f.get()._field_Kind;
	jule::Ptr<_20507eb49_Data> _96517_d = _20509b9bd_evalExprKind((*_self_)._field_e, _93333_pair.get()._field_Expr.get()._field_Kind);;
	if ((_96517_d == nullptr)) {
		return;;
	};
	_20506edc0_pushMatch(&(*_self_), _93517_f,_96517_d,_93333_pair.get()._field_Field);
}



inline jule::Bool _2050704ec_readyExprs(_20506e1cc_structLitChecker* _self_, jule::Slice<jule::Ptr<_204345a8c_Expr>>& _97234_exprs) {
	jule::Bool _97317_ok = true;;
	{
		auto &expr = _97234_exprs;
		auto it = expr.begin();
		_iter_begin_1db1c13d1:;
		if (it != expr.end()) {
			jule::I64 _97414_i = it - expr.begin();
			jule::Ptr<_204345a8c_Expr> _97421_expr = *it;
			{
				{
					auto &_match_expr{ _97421_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_20434b994_KeyValPair>>()) {
						_case_begin_1db1c21b2:;
						{
							jule::Ptr<_20434b994_KeyValPair> _97725_pair = _97421_expr.get()._field_Kind.operator jule::Ptr<_20434b994_KeyValPair>();;
							{
								auto &_match_expr{ _97725_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type_is<jule::Ptr<_20434774d_IdentExpr>>()) {
									_case_begin_1db1c36be:;
									{
										goto _match_end_1db1c325c;
									}
								}
								else {
									_case_begin_1db1c32b2:;
									{
										_20506e6d8_pushErr(&(*_self_), _97725_pair.get()._field_Colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_97317_ok=false;
										goto _iter_next_1db1c13d1;
									}
								}
								_match_end_1db1c325c:;
							};
							_97234_exprs[_97414_i].get()._field_Kind=static_cast<jule::Any>(jule::new_ptr<_20434a4ed_FieldExprPair>(_20434a4ed_FieldExprPair{._field_Field=_97725_pair.get()._field_Key.get()._field_Token, ._field_Expr=_97725_pair.get()._field_Val}));
						}
					}
					_match_end_1db1c1e92:;
				};
			}
			_iter_next_1db1c13d1:;
			++it;
			_97414_i++;
			goto _iter_begin_1db1c13d1;
		}
		_iter_end_1db1c13d1:;
	};
	return _97317_ok;
}



inline void _205070772_check(_20506e1cc_structLitChecker* _self_, jule::Slice<jule::Ptr<_204345a8c_Expr>>& _99629_exprs) {
	if ((_99629_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_2050704ec_readyExprs(&(*_self_), _99629_exprs)))) {
		return;;
	};
	jule::Bool _100317_paired = false;;
	{
		auto &expr = _99629_exprs;
		auto it = expr.begin();
		_iter_begin_1db1c5aab:;
		if (it != expr.end()) {
			jule::I64 _100414_i = it - expr.begin();
			jule::Ptr<_204345a8c_Expr> _100421_expr = *it;
			{
				{
					auto &_match_expr{ _100421_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_20434a4ed_FieldExprPair>>()) {
						_case_begin_1db1cbb7d:;
						{
							jule::Ptr<_20434a4ed_FieldExprPair> _100725_pair = _100421_expr.get()._field_Kind.operator jule::Ptr<_20434a4ed_FieldExprPair>();;
							if (((_100414_i > 0LL) && (!(_100317_paired)))) {
								_20506e6d8_pushErr(&(*_self_), _100725_pair.get()._field_Field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_100317_paired=true;
							_2050701de_checkPair(&(*_self_), _100725_pair,_99629_exprs);
						}
					}
					else {
						_case_begin_1db1c67e3:;
						{
							if (_100317_paired) {
								_20506e6d8_pushErr(&(*_self_), _100421_expr.get()._field_Token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_100414_i >= (*_self_)._field_s.get()._field_Fields.len())) {
								_20506e6d8_pushErr(&(*_self_), _100421_expr.get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1db1c5aab;
							};
							jule::Ptr<_2043393bb_FieldIns> _102225_field = (*_self_)._field_s.get()._field_Fields[_100414_i];;
							if ((!(_2050173ea_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _102225_field.get()._field_Decl.get()._field_Public,_102225_field.get()._field_Decl.get()._field_Token)))) {
								_20506e6d8_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_20506ea07_pushSugggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_2050aa8de_TypeKind> _103025_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_103025_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_102225_field.get()._field_Kind;
							jule::Ptr<_20507eb49_Data> _103425_d = _20509b9bd_evalExprKind((*_self_)._field_e, _100421_expr.get()._field_Kind);;
							if ((_103425_d == nullptr)) {
								goto _iter_next_1db1c5aab;
							};
							_20506edc0_pushMatch(&(*_self_), _102225_field,_103425_d,_100421_expr.get()._field_Token);
						}
					}
					_match_end_1db1c6639:;
				};
			}
			_iter_next_1db1c5aab:;
			++it;
			_100414_i++;
			goto _iter_begin_1db1c5aab;
		}
		_iter_end_1db1c5aab:;
	};
	if ((!(_100317_paired))) {
		jule::I64 _104517_n = (*_self_)._field_s.get()._field_Fields.len();;
		jule::I64 _104621_diff = (_104517_n - _99629_exprs.len());;
		{
			
			if ((_104621_diff <= 0LL)) {
				_case_begin_1db1ceb1a:;
				{
					return;;
				}
			}
			_match_end_1db1ce9b6:;
		};
		jule::Str _105221_idents = jule::Str();;
		for (; (_104621_diff > 0LL); (_104621_diff)--) {
			{
				_105221_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_Fields[(_104517_n - _104621_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1db1d05cc:;
		}
		_iter_end_1db1d05cc:;;
		(_105221_idents).mut_slice(2LL);;
		_20506e6d8_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_105221_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20506e1cc_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_205031cb6_Var> _205071256_buildVar(_205070cb1_rangeChecker* _self_, jule::Ptr<_204353ec9_VarDecl>& _107128_decl) {
	jule::Ptr<_205031cb6_Var> _107217_v = _204eca303_buildVar(_107128_decl);;
	return _107217_v;
}



inline void _205071432_setSizeKey(_205070cb1_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _202b8be1d_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyA=_205071256_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_2050aea47_TypeSymbol>(_2050aea47_TypeSymbol{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_205031cb6_Var>>()) {
			_case_begin_1db1d4724:;
			{
				(*_self_)._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_205030d4d_IterRelation>(_205030d4d_IterRelation{._field_Range=(*_self_)._field_d.get()._field_Model.operator jule::Ptr<_205031cb6_Var>()});
			}
		}
		_match_end_1db1d227c:;
	};
}



inline void _2050717ea_checkRangeExprValidity(_205070cb1_rangeChecker* _self_, jule::Ptr<_20507eb49_Data>& _110246_d, jule::Ptr<_205031cb6_Var>& _110257_key, jule::Ptr<_2050aa8de_TypeKind>& _110273_k) {
	jule::Bool _110317__mut = _110257_key.get()._field_Mutable;;
	if ((_110317__mut && (!(_2050abcdb_Mutable(_110273_k.ptr()))))) {
		_110317__mut=false;
	};
	_205021844_checkValidityForInitExpr((*_self_)._field_sc.get()._field_s, _110317__mut,_110257_key.get()._field_Reference,_110257_key.get()._field_Kind.get()._field_Kind,_110246_d,(*_self_)._field_rang.get()._field_InToken);
}



inline void _2050719c6_checkSlice(_205070cb1_rangeChecker* _self_) {
	_205071432_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _202b8be1d_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_2050b45a7_Slc> _112117_slc = _2050ad97a_Slc((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_205071256_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_2050aea47_TypeSymbol>(_2050aea47_TypeSymbol{._field_Kind=_112117_slc.get()._field_Elem});
	_2050717ea_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_112117_slc.get()._field_Elem);
}



inline void _205071ba2_checkArray(_205070cb1_rangeChecker* _self_) {
	_205071432_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _202b8be1d_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_2050b6752_Arr> _113417_arr = _2050ad716_Arr((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_205071256_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_2050aea47_TypeSymbol>(_2050aea47_TypeSymbol{._field_Kind=_113417_arr.get()._field_Elem});
	_2050717ea_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_113417_arr.get()._field_Elem);
}



inline void _205071d7d_checkMapKeyA(_205070cb1_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _202b8be1d_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_2050b5b5d_Map> _114617_m = _2050ae42b_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyA=_205071256_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_2050aea47_TypeSymbol>(_2050aea47_TypeSymbol{._field_Kind=_114617_m.get()._field_Key});
	jule::Ptr<_20507eb49_Data> _115017_d = jule::new_ptr<_20507eb49_Data>((*((*_self_)._field_d)));;
	_115017_d.get()._field_Kind=_114617_m.get()._field_Key;
	_2050717ea_checkRangeExprValidity(&(*_self_), _115017_d,(*_self_)._field_Kind.get()._field_KeyA,_114617_m.get()._field_Key);
}



inline void _205072059_checkMapKeyB(_205070cb1_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _202b8be1d_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_2050b5b5d_Map> _116117_m = _2050ae42b_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_205071256_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_2050aea47_TypeSymbol>(_2050aea47_TypeSymbol{._field_Kind=_116117_m.get()._field_Val});
	jule::Ptr<_20507eb49_Data> _116517_d = jule::new_ptr<_20507eb49_Data>((*((*_self_)._field_d)));;
	_116517_d.get()._field_Kind=_116117_m.get()._field_Val;
	_2050717ea_checkRangeExprValidity(&(*_self_), _116517_d,(*_self_)._field_Kind.get()._field_KeyB,_116117_m.get()._field_Val);
}



inline void _205072235_checkMap(_205070cb1_rangeChecker* _self_) {
	_205071d7d_checkMapKeyA(&(*_self_));
	_205072059_checkMapKeyB(&(*_self_));
}



inline void _205072411_checkStr(_205070cb1_rangeChecker* _self_) {
	_205071432_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _202b8be1d_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyB=_205071256_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_2050aea47_TypeSymbol>(_2050aea47_TypeSymbol{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _205072675_check(_205070cb1_rangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1db1ea33e:;
		}
		else if ((_2050ad97a_Slc((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db1ea471:;
			{
				_2050719c6_checkSlice(&(*_self_));
				return true;
			}
		}
		else if ((_2050ad716_Arr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db1e8c77:;
			{
				_205071ba2_checkArray(&(*_self_));
				return true;
			}
		}
		else if ((_2050ae42b_Map((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db1e8cdd:;
			{
				_205072235_checkMap(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1db1e8c11:;
			{
				jule::Ptr<_2050b03b6_Prim> _120317_prim = _2050aca01_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (((_120317_prim != nullptr) && _2050b35ea_IsStr(_120317_prim.ptr()))) {
					_205072411_checkStr(&(*_self_));
					return true;
				};
			}
		}
		_match_end_1db1e8b34:;
	};
	_205016c24_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_InToken,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _205070cb1_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _2050733bd_prepareTypes(_205072e17_retTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_2043c5237_Types((*_self_)._field_f.ptr());
	};
}



inline void _205073643_prepareExprs(_205072e17_retTypeChecker* _self_, jule::Ptr<_204345a8c_Expr>& _123236_e) {
	if ((_123236_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _123236_e.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_204346719_TupleExpr>>()) {
			_case_begin_1db200a5e:;
			{
				(*_self_)._field_exprs=_123236_e.get()._field_Kind.operator jule::Ptr<_204346719_TupleExpr>().get()._field_Expr;
			}
		}
		else {
			_case_begin_1db1ee970:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_123236_e);;
			}
		}
		_match_end_1db1eea6e:;
	};
}



inline void _20507381e_retVars(_205072e17_retTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _2043a5a53_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_205031cb6_Var>>::alloc(0LL,(*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len());
	jule::Ptr<_204ee42a6_scopeChecker> _125017_rootScope = _204ee73b9_getRoot((*_self_)._field_sc);;
	jule::I64 _125217_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1db20317c:;
		if (it != expr.end()) {
			jule::I64 _125313_i = it - expr.begin();
			jule::Ptr<_202b89679_Token> _125316_ident = *it;
			{
				if (((!(_202b8be1d_IsIgnoreIdent(_125316_ident.get()._field_Kind))) && (!(_202b8c1b5_IsAnonIdent(_125316_ident.get()._field_Kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_125017_rootScope.get()._field_table.get()._field_Vars[_125217_j]);;
					(_125217_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_205031cb6_Var>(_205031cb6_Var{._field_Ident=jule::Str("_", 1), ._field_Kind=jule::new_ptr<_2050aea47_TypeSymbol>(_2050aea47_TypeSymbol{._field_Kind=(*_self_)._field_types[_125313_i]}), }));;
				};
			}
			_iter_next_1db20317c:;
			++it;
			_125313_i++;
			goto _iter_begin_1db20317c;
		}
		_iter_end_1db20317c:;
	};
	if ((_125217_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _2050739ea_checkExprs(_205072e17_retTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_20507eb49_Data>> _127517_datas = jule::Slice<jule::Ptr<_20507eb49_Data>>::alloc(0LL,(*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1db207417:;
		if (it != expr.end()) {
			jule::I64 _127614_i = it - expr.begin();
			jule::Ptr<_204345a8c_Expr> _127621_expr = *it;
			{
				if ((_127614_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1db207417;
				};
				jule::Ptr<_2050aa8de_TypeKind> _128121_t = (*_self_)._field_types[_127614_i];;
				jule::Ptr<_20507eb49_Data> _128321_d = _20509c0d9_evalExpr(_20501d302_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_2050c6520_Lookup>((*_self_)._field_sc, 0),_128121_t), _127621_expr);;
				if ((_128321_d == nullptr)) {
					goto _iter_next_1db207417;
				};
				_127517_datas = jule::alloc_for_append(_127517_datas,1);_127517_datas.__push(_128321_d);;
				if (((!(_128321_d.get()._field_Mutable)) && _2050abcdb_Mutable(_128321_d.get()._field_Kind.ptr()))) {
					_205016c24_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_2050655ad_assignTypeChecker _129521_ac = _2050655ad_assignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_128121_t, ._field_d=_128321_d, ._field_errorToken=(*_self_)._field_errorToken};;
				_205066735_check(&_129521_ac);
			}
			_iter_next_1db207417:;
			++it;
			_127614_i++;
			goto _iter_begin_1db207417;
		}
		_iter_end_1db207417:;
	};
	if ((_127517_datas.len() > 1LL)) {
		(*_self_)._field_model=static_cast<jule::Any>(jule::new_ptr<_204ec3dce_TupleExprModel>(_204ec3dce_TupleExprModel{._field_Datas=_127517_datas}));
	} else if ((_127517_datas.len() == 1LL)) {
		(*_self_)._field_model=_127517_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _205073d08_check(_205072e17_retTypeChecker* _self_, jule::Ptr<_204345a8c_Expr>& _131429_e) {
	_2050733bd_prepareTypes(&(*_self_));
	_205073643_prepareExprs(&(*_self_), _131429_e);
	_20507381e_retVars(&(*_self_));
	jule::I64 _131913_n = (*_self_)._field_exprs.len();;
	if (((_131913_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_20439a2ea_AnyVar((*_self_)._field_f.get()._field_Decl.ptr())))) {
			_205016c24_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_131913_n > 0LL) && ((*_self_)._field_f != nullptr)) && _2043a5a53_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		_205016c24_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_131913_n > (*_self_)._field_types.len())) {
		_205016c24_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_131913_n < (*_self_)._field_types.len())) {
		_205016c24_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_2050739ea_checkExprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _205072e17_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20500ae16_ImportInfo> _2050754d0_FindPackage(_205074eb3_SymbolTable* _self_, jule::Str _2630_ident) {
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1db214765:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2630_ident)) {
					return _2721_pkg;
				};
			}
			_iter_next_1db214765:;
			++it;
			goto _iter_begin_1db214765;
		}
		_iter_end_1db214765:;
	};
	return nullptr;
}



inline jule::Ptr<_20500ae16_ImportInfo> _2050757dd_SelectPackage(_205074eb3_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_20500ae16_ImportInfo>)> _3832_selector) {
	if ((_3832_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1db214d2b:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _4221_pkg = *it;
			{
				if (_3832_selector(_4221_pkg)) {
					return _4221_pkg;
				};
			}
			_iter_next_1db214d2b:;
			++it;
			goto _iter_begin_1db214d2b;
		}
		_iter_end_1db214d2b:;
	};
	return nullptr;
}



inline jule::Ptr<_205031cb6_Var> _205075b95_FindVar(_205074eb3_SymbolTable* _self_, jule::Str _5226_ident, jule::Bool _5238_cppLinked) {
	return _20507c5b4_findVar(&(*_self_), _5226_ident,_5238_cppLinked,false);
}



inline jule::Ptr<_2050a9beb_TypeAlias> _20507604c_FindTypeAlias(_205074eb3_SymbolTable* _self_, jule::Str _5832_ident, jule::Bool _5844_cppLinked) {
	return _20507ca15_findTypeAlias(&(*_self_), _5832_ident,_5844_cppLinked,false);
}



inline jule::Ptr<_20433367e_Struct> _205076404_FindStruct(_205074eb3_SymbolTable* _self_, jule::Str _6429_ident, jule::Bool _6441_cppLinked) {
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1db2186c0:;
		if (it != expr.end()) {
			jule::Ptr<_20433367e_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6429_ident) && (_6521_s.get()._field_CppLinked == _6441_cppLinked))) {
					return _6521_s;
				};
			}
			_iter_next_1db2186c0:;
			++it;
			goto _iter_begin_1db2186c0;
		}
		_iter_end_1db2186c0:;
	};
	return nullptr;
}



inline jule::Ptr<_204ec707a_Fn> _2050767ab_FindFn(_205074eb3_SymbolTable* _self_, jule::Str _7525_ident, jule::Bool _7537_cppLinked) {
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1db219c21:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7525_ident) && (_7621_f.get()._field_CppLinked == _7537_cppLinked))) {
					return _7621_f;
				};
			}
			_iter_next_1db219c21:;
			++it;
			goto _iter_begin_1db219c21;
		}
		_iter_end_1db219c21:;
	};
	return nullptr;
}



inline jule::Ptr<_204ece8e0_Trait> _20507b926_FindTrait(_205074eb3_SymbolTable* _self_, jule::Str _8628_ident) {
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1db21b063:;
		if (it != expr.end()) {
			jule::Ptr<_204ece8e0_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8628_ident)) {
					return _8721_t;
				};
			}
			_iter_next_1db21b063:;
			++it;
			goto _iter_begin_1db21b063;
		}
		_iter_end_1db21b063:;
	};
	return nullptr;
}



inline jule::Ptr<_204ed1a35_Enum> _20507bc34_FindEnum(_205074eb3_SymbolTable* _self_, jule::Str _9727_ident) {
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1db21b41a:;
		if (it != expr.end()) {
			jule::Ptr<_204ed1a35_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9727_ident)) {
					return _9821_e;
				};
			}
			_iter_next_1db21b41a:;
			++it;
			goto _iter_begin_1db21b41a;
		}
		_iter_end_1db21b41a:;
	};
	return nullptr;
}



inline jule::Ptr<_204ed3130_TypeEnum> _20507c042_FindTypeEnum(_205074eb3_SymbolTable* _self_, jule::Str _10831_ident) {
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1db21c42c:;
		if (it != expr.end()) {
			jule::Ptr<_204ed3130_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10831_ident)) {
					return _10921_e;
				};
			}
			_iter_next_1db21c42c:;
			++it;
			goto _iter_begin_1db21c42c;
		}
		_iter_end_1db21c42c:;
	};
	return nullptr;
}



inline jule::Ptr<_205031cb6_Var> _20507c5b4_findVar(_205074eb3_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I64 _12121_i = ((*_self_)._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_205031cb6_Var> _12325_v = (*_self_)._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;
				};
			}
		_iter_next_1db2200de:;
		}
		_iter_end_1db2200de:;;
	} else {
		{
			auto &expr = (*_self_)._field_Vars;
			auto it = expr.begin();
			_iter_begin_1db220397:;
			if (it != expr.end()) {
				jule::Ptr<_205031cb6_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;
					};
				}
				_iter_next_1db220397:;
				++it;
				goto _iter_begin_1db220397;
			}
			_iter_end_1db220397:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_2050a9beb_TypeAlias> _20507ca15_findTypeAlias(_205074eb3_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I64 _14021_i = ((*_self_)._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_2050a9beb_TypeAlias> _14225_ta = (*_self_)._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;
				};
			}
		_iter_next_1db2235ed:;
		}
		_iter_end_1db2235ed:;;
	} else {
		{
			auto &expr = (*_self_)._field_TypeAliases;
			auto it = expr.begin();
			_iter_begin_1db2238a6:;
			if (it != expr.end()) {
				jule::Ptr<_2050a9beb_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;
					};
				}
				_iter_next_1db2238a6:;
				++it;
				goto _iter_begin_1db2238a6;
			}
			_iter_end_1db2238a6:;
		};
	};
	return nullptr;
}



inline jule::Any _20507cdbc_defByIdent(_205074eb3_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1db225c0a:;
		if (it != expr.end()) {
			jule::Ptr<_205031cb6_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v);
				};
			}
			_iter_next_1db225c0a:;
			++it;
			goto _iter_begin_1db225c0a;
		}
		_iter_end_1db225c0a:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1db226e3c:;
		if (it != expr.end()) {
			jule::Ptr<_2050a9beb_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta);
				};
			}
			_iter_next_1db226e3c:;
			++it;
			goto _iter_begin_1db226e3c;
		}
		_iter_end_1db226e3c:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1db227ca6:;
		if (it != expr.end()) {
			jule::Ptr<_20433367e_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s);
				};
			}
			_iter_next_1db227ca6:;
			++it;
			goto _iter_begin_1db227ca6;
		}
		_iter_end_1db227ca6:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1db228ba8:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f);
				};
			}
			_iter_next_1db228ba8:;
			++it;
			goto _iter_begin_1db228ba8;
		}
		_iter_end_1db228ba8:;
	};
	if (_15941_cppLinked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1db229d63:;
		if (it != expr.end()) {
			jule::Ptr<_204ece8e0_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t);
				};
			}
			_iter_next_1db229d63:;
			++it;
			goto _iter_begin_1db229d63;
		}
		_iter_end_1db229d63:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1db22a69e:;
		if (it != expr.end()) {
			jule::Ptr<_204ed1a35_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e);
				};
			}
			_iter_next_1db22a69e:;
			++it;
			goto _iter_begin_1db22a69e;
		}
		_iter_end_1db22a69e:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1db22b64a:;
		if (it != expr.end()) {
			jule::Ptr<_204ed3130_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te);
				};
			}
			_iter_next_1db22b64a:;
			++it;
			goto _iter_begin_1db22b64a;
		}
		_iter_end_1db22b64a:;
	};
	return nullptr;
}



inline jule::Bool _20507d31d_isDuplicatedIdent(_205074eb3_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1db22c607:;
		if (it != expr.end()) {
			jule::Ptr<_205031cb6_Var> &_21316_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21316_v) != _21232_itself) && (_21316_v.get()._field_Ident == _21249_ident)) && (_21316_v.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1db22c607:;
			++it;
			goto _iter_begin_1db22c607;
		}
		_iter_end_1db22c607:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1db22d240:;
		if (it != expr.end()) {
			jule::Ptr<_2050a9beb_TypeAlias> &_21916_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21916_ta) != _21232_itself) && (_21916_ta.get()._field_Ident == _21249_ident)) && (_21916_ta.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1db22d240:;
			++it;
			goto _iter_begin_1db22d240;
		}
		_iter_end_1db22d240:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1db22d52b:;
		if (it != expr.end()) {
			jule::Ptr<_20433367e_Struct> &_22516_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22516_s) != _21232_itself) && (_22516_s.get()._field_Ident == _21249_ident)) && (_22516_s.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1db22d52b:;
			++it;
			goto _iter_begin_1db22d52b;
		}
		_iter_end_1db22d52b:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1db22e719:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> &_23116_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23116_f) != _21232_itself) && (_23116_f.get()._field_Ident == _21249_ident)) && (_23116_f.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1db22e719:;
			++it;
			goto _iter_begin_1db22e719;
		}
		_iter_end_1db22e719:;
	};
	if (_21261_cppLinked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1db232530:;
		if (it != expr.end()) {
			jule::Ptr<_204ece8e0_Trait> &_24116_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24116_t) != _21232_itself) && (_24116_t.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1db232530:;
			++it;
			goto _iter_begin_1db232530;
		}
		_iter_end_1db232530:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1db232a2a:;
		if (it != expr.end()) {
			jule::Ptr<_204ed1a35_Enum> &_24716_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24716_e) != _21232_itself) && (_24716_e.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1db232a2a:;
			++it;
			goto _iter_begin_1db232a2a;
		}
		_iter_end_1db232a2a:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1db233157:;
		if (it != expr.end()) {
			jule::Ptr<_204ed3130_TypeEnum> &_25316_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25316_te) != _21232_itself) && (_25316_te.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1db233157:;
			++it;
			goto _iter_begin_1db233157;
		}
		_iter_end_1db233157:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _205074eb3_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _205080034_IsNil(_20507eb49_Data* _self_) {
	return _2050ab813_IsNil((*_self_)._field_Kind.ptr());
}



inline jule::Bool _205080298_IsVoid(_20507eb49_Data* _self_) {
	return _2050aba77_Void((*_self_)._field_Kind.ptr());
}



inline jule::Bool _20508050c_IsConst(_20507eb49_Data* _self_) {
	return ((*_self_)._field_Constant != nullptr);
}



inline jule::Bool _20508081a_GoodOperand(_20507eb49_Data* _self_, jule::Ptr<_20507eb49_Data>& _9831_other) {
	if ((_2050ad4a2_TypeEnum(_9831_other.get()._field_Kind.ptr()) != nullptr)) {
		return false;
	};
	return ((((_2050aca01_Prim(_9831_other.get()._field_Kind.ptr()) == nullptr) || (!(_2050b385e_IsAny(_2050aca01_Prim(_9831_other.get()._field_Kind.ptr()).ptr())))) && (_2050ae1b7_Trait(_9831_other.get()._field_Kind.ptr()) == nullptr)) && (!(_2050ab813_IsNil((*_self_)._field_Kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _20507eb49_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _205080bc2_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _205081bc3_pushErr(_2050816b7_Eval* _self_, jule::Ptr<_202b89679_Token> _12926_token, jule::Str _12941_fmt, jule::Slice<jule::Any> _12954_args) {
	_205016c24_pushErr((*_self_)._field_s.ptr(), _12926_token,_12941_fmt,jule::Any(_12954_args));
}



inline void _205081ee2_pushSugggestion(_2050816b7_Eval* _self_, jule::Str _13434_fmt, jule::Slice<jule::Any> _13447_args) {
	_205017043_pushSugggestion((*_self_)._field_s.ptr(), _13434_fmt,jule::Any(_13447_args));
}



inline void _2050821bd_allowBuiltin(_2050816b7_Eval* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _205082399_disallowBuiltin(_2050816b7_Eval* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Bool _20508260d_isUnsafe(_2050816b7_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _205082872_isGlobal(_2050816b7_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_205014062_Sema>>()) {
			_case_begin_1db2682be:;
			{
				return true;
			}
		}
		else {
			_case_begin_1db267642:;
			{
				return false;
			}
		}
		_match_end_1db267b2b:;
	};
}



inline jule::Bool _205082b4c_applyNumericPrefix(_2050816b7_Eval* _self_, jule::Ptr<_20507eb49_Data>& _16142_d) {
	if (((((_16142_d == nullptr) || (!(_20508050c_IsConst(_16142_d.ptr())))) || (_2050aca01_Prim(_16142_d.get()._field_Kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_2050b03b6_Prim> _16813_prim = _2050aca01_Prim((*_self_)._field_prefix.ptr());;
	if ((_16813_prim == nullptr)) {
		return false;
	};
	{
		
		if (_204ebe43a_IsFloat(_2050b0729_Str(_16813_prim.ptr()))) {
			_case_begin_1db26a524:;
			{
				_16142_d.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>((*((*_self_)._field_prefix)));
				_20447c223_SetF64(_16142_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_20446423d_AsF64(_16142_d.get()._field_Constant.ptr())));
			}
		}
		else if (_204ebe094_IsSigInt(_2050b0729_Str(_16813_prim.ptr()))) {
			_case_begin_1db26a58a:;
			{
				if ((!(_20504a85c_sigAssignable(_2050b0729_Str(_16813_prim.ptr()),_16142_d)))) {
					return false;
				};
				_16142_d.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>((*((*_self_)._field_prefix)));
				_2044650eb_SetI64(_16142_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_204463270_AsI64(_16142_d.get()._field_Constant.ptr())));
			}
		}
		else if (_204ebe1c6_IsUnsigInt(_2050b0729_Str(_16813_prim.ptr()))) {
			_case_begin_1db26a601:;
			{
				if ((!(_205062621_unsigAssignable(_2050b0729_Str(_16813_prim.ptr()),_16142_d)))) {
					return false;
				};
				_16142_d.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>((*((*_self_)._field_prefix)));
				_204477c13_SetU64(_16142_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_2044573b8_AsU64(_16142_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1db26a843:;
	};
	return true;
}



inline jule::Ptr<_20507eb49_Data> _205082db1_litNil(_2050816b7_Eval* _self_) {
	jule::Ptr<_2044102b6_Const> _19717_constant = static__20445596b_NewNil();;
	return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_19717_constant), ._field_Constant=_19717_constant});
}



inline jule::Ptr<_20507eb49_Data> _2050831be_litStr(_2050816b7_Eval* _self_, jule::Ptr<_204346ac1_LitExpr>& _20622_l) {
	jule::Str _20717_s = _20622_l.get()._field_Value.slice(1LL,(_20622_l.get()._field_Value.len() - 1LL));;
	if (_202b8a9cc_IsRawStr(_20622_l.get()._field_Value)) {
		_20717_s=_20506292e_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20717_s));
	} else {
		_20717_s=_205062bd7_ToStr(static_cast<jule::Slice<jule::U8>>(_20717_s));
	};
	jule::Ptr<_2044102b6_Const> _21317_constant = static__204454030_NewStr(_20717_s);;
	return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_21317_constant), ._field_Constant=_21317_constant});
}



inline jule::Ptr<_20507eb49_Data> _2050834cc_litBool(_2050816b7_Eval* _self_, jule::Ptr<_204346ac1_LitExpr>& _22523_l) {
	jule::Ptr<_2044102b6_Const> _22617_constant = static__2044521d7_NewBool((_22523_l.get()._field_Value == jule::Str("true", 4)));;
	return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_22617_constant), ._field_Constant=_22617_constant});
}



inline jule::Ptr<_20507eb49_Data> _2050837da_litRune(_2050816b7_Eval* _self_, jule::Ptr<_204346ac1_LitExpr>& _23723_l) {
	;
	;
	jule::Str _24213_lt = _23723_l.get()._field_Value.slice(1LL,(_23723_l.get()._field_Value.len() - 1LL));;
	jule::I32 _24313_r = _20504a43e_ToRune(static_cast<jule::Slice<jule::U8>>(_24213_lt));;
	jule::Ptr<_20507eb49_Data> _24417_data = jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Constant=static__204420804_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24313_r)))});;
	jule::Bool _24813_isAscii = _20504a30c_IsAscii(_24313_r);;
	if (_24813_isAscii) {
		_24417_data.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_24417_data.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_24417_data.get()._field_Mutable=true;
	_24417_data.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec6222_RuneExprModel>(_204ec6222_RuneExprModel{._field_Code=_24313_r}));
	_24417_data.get()._field_IsRune=true;
	_24417_data.get()._field_untyped=true;
	return _24417_data;
}



inline jule::Ptr<_20507eb49_Data> _205083ae8_litFloat(_2050816b7_Eval* _self_, jule::Ptr<_204346ac1_LitExpr>& _26624_l) {
	;
	jule::F64 _26813_f = ({
		auto except = _204d350b4_ParseFloat(_26624_l.get()._field_Value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_2044102b6_Const> _26917_constant = static__20445521d_NewF64(_26813_f);;
	return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_untyped=true, ._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_26917_constant), ._field_Constant=_26917_constant});
}



inline jule::Ptr<_20507eb49_Data> _205083e06_litInt(_2050816b7_Eval* _self_, jule::Ptr<_204346ac1_LitExpr>& _28126_l) {
	;
	jule::Str _28417_lit = _28126_l.get()._field_Value;;
	jule::I64 _28517_base = 0LL;;
	{
		
		if (_2027ce8da_HasPrefix(_28417_lit,jule::Str("0x", 2))) {
			_case_begin_1db27cc2e:;
			{
				(_28417_lit).mut_slice(2LL);;
				_28517_base=16LLU;
			}
		}
		else if (_2027ce8da_HasPrefix(_28417_lit,jule::Str("0b", 2))) {
			_case_begin_1db27cc95:;
			{
				(_28417_lit).mut_slice(2LL);;
				_28517_base=2LLU;
			}
		}
		else if (_2027ce8da_HasPrefix(_28417_lit,jule::Str("0o", 2))) {
			_case_begin_1db27cd0b:;
			{
				(_28417_lit).mut_slice(2LL);;
				_28517_base=8LLU;
			}
		}
		else if (((_28417_lit[0LL] == '0') && (_28417_lit.len() > 1LL))) {
			_case_begin_1db27c8ee:;
			{
				(_28417_lit).mut_slice(1LL);;
				_28517_base=8LLU;
			}
		}
		else {
			_case_begin_1db27c888:;
			{
				_28517_base=10LLU;
			}
		}
		_match_end_1db27c833:;
	};
	jule::Ptr<_20507eb49_Data> _30517_d = jule::new_ptr<_20507eb49_Data>();;
	jule::Bool _30717_ok = true;;
	jule::I64 _30813_sig = ({
		auto except = _204bc6609_ParseInt(_28417_lit,_28517_base,64LL);
		(except.ok()) ? (except.result) : ({
			_30717_ok=false;
			0LL;
		});
	});;
	if (_30717_ok) {
		_30517_d.get()._field_Constant=static__204420804_NewI64(_30813_sig);
		_30517_d.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _31817_unsig = ({
			auto except = _204b44b1b_ParseUint(_28417_lit,_28517_base,64LL);
			(except.ok()) ? (except.result) : ({
				_205081bc3_pushErr(&(*_self_), _28126_l.get()._field_Token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_205081ee2_pushSugggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_30517_d.get()._field_Constant=static__20443783d_NewU64(_31817_unsig);
		_30517_d.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_30517_d.get()._field_Model=static_cast<jule::Any>(_30517_d.get()._field_Constant);
	if ((!(_205082b4c_applyNumericPrefix(&(*_self_), _30517_d)))) {
		_2050a5631_fitBitsize(_30517_d);
	};
	_30517_d.get()._field_Mutable=true;
	_30517_d.get()._field_untyped=true;
	return _30517_d;
}



inline jule::Ptr<_20507eb49_Data> _205084214_litNum(_2050816b7_Eval* _self_, jule::Ptr<_204346ac1_LitExpr>& _34126_l) {
	{
		
		if (_202b8b637_IsFloat(_34126_l.get()._field_Value)) {
			_case_begin_1db28685e:;
			{
				return _205083ae8_litFloat(&(*_self_), _34126_l);
			}
		}
		else {
			_case_begin_1db2860de:;
			{
				return _205083e06_litInt(&(*_self_), _34126_l);
			}
		}
		_match_end_1db286012:;
	};
}



inline jule::Ptr<_20507eb49_Data> _205084522_evalLit(_2050816b7_Eval* _self_, jule::Ptr<_204346ac1_LitExpr> _35026_lit) {
	{
		
		if (_204346e23_IsNil(_35026_lit.ptr())) {
			_case_begin_1db287b3a:;
			{
				return _205082db1_litNil(&(*_self_));
			}
		}
		else if (_202b8a735_IsStr(_35026_lit.get()._field_Value)) {
			_case_begin_1db2874a8:;
			{
				return _2050831be_litStr(&(*_self_), _35026_lit);
			}
		}
		else if (_202b8b390_IsBool(_35026_lit.get()._field_Value)) {
			_case_begin_1db28751e:;
			{
				return _2050834cc_litBool(&(*_self_), _35026_lit);
			}
		}
		else if (_202b8ac74_IsRune(_35026_lit.get()._field_Value)) {
			_case_begin_1db287596:;
			{
				return _2050837da_litRune(&(*_self_), _35026_lit);
			}
		}
		else if (_202b8b8ce_IsNum(_35026_lit.get()._field_Value)) {
			_case_begin_1db28761d:;
			{
				return _205084214_litNum(&(*_self_), _35026_lit);
			}
		}
		else {
			_case_begin_1db286e7a:;
			{
				return nullptr;
			}
		}
		_match_end_1db286dc0:;
	};
}



inline jule::Any _205084830_findBuiltins(_2050816b7_Eval* _self_, jule::Str _36731_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_20500ae16_ImportInfo>>()) {
			_case_begin_1db287e48:;
			{
				jule::Any _37021_def = _2050a5422_findBuiltinsImport(_36731_ident,(*_self_)._field_lookup.operator jule::Ptr<_20500ae16_ImportInfo>());;
				if ((_37021_def != nullptr)) {
					return jule::Any(_37021_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_205014062_Sema>>()) {
			_case_begin_1db28a3bd:;
			{
				jule::Any _37521_def = _2050a60b0_findBuiltinsSema(_36731_ident,(*_self_)._field_lookup.operator jule::Ptr<_205014062_Sema>());;
				if ((_37521_def != nullptr)) {
					return jule::Any(_37521_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ee42a6_scopeChecker>>()) {
			_case_begin_1db28a434:;
			{
				jule::Any _38021_def = _2050a60b0_findBuiltinsSema(_36731_ident,(*_self_)._field_lookup.operator jule::Ptr<_204ee42a6_scopeChecker>().get()._field_s);;
				if ((_38021_def != nullptr)) {
					return jule::Any(_38021_def);
				};
			}
		}
		_match_end_1db287de3:;
	};
	if ((*_self_)._field_disBuiltin) {
		return nullptr;
	};
	return jule::Any(_2050d69c5_findBuiltinDef(_36731_ident));
}



inline jule::Any _205084bd7_getDef(_2050816b7_Eval* _self_, jule::Str _39125_ident, jule::Bool _39137_cppLinked) {
	jule::Ptr<_205031cb6_Var> _39617_v = _2050c6520_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._2050c4d8c_FindVar((*_self_)._field_lookup, _39125_ident,_39137_cppLinked);;
	if ((_39617_v != nullptr)) {
		return jule::Any(_39617_v);
	};
	jule::Ptr<_2050a9beb_TypeAlias> _40117_ta = _2050c6520_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._2050c5244_FindTypeAlias((*_self_)._field_lookup, _39125_ident,_39137_cppLinked);;
	if ((_40117_ta != nullptr)) {
		return jule::Any(_40117_ta);
	};
	if ((!(_39137_cppLinked))) {
		jule::Ptr<_204ed1a35_Enum> _40721_enm = _2050c6520_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._2050c60be_FindEnum((*_self_)._field_lookup, _39125_ident);;
		if ((_40721_enm != nullptr)) {
			return jule::Any(_40721_enm);
		};
		jule::Ptr<_204ed3130_TypeEnum> _41221_tenm = _2050c6520_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._2050c63cc_FindTypeEnum((*_self_)._field_lookup, _39125_ident);;
		if ((_41221_tenm != nullptr)) {
			return jule::Any(_41221_tenm);
		};
	};
	jule::Ptr<_204ec707a_Fn> _41817_f = _2050c6520_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._2050c59a3_FindFn((*_self_)._field_lookup, _39125_ident,_39137_cppLinked);;
	if ((_41817_f != nullptr)) {
		return jule::Any(_41817_f);
	};
	jule::Ptr<_20433367e_Struct> _42317_s = _2050c6520_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._2050c55eb_FindStruct((*_self_)._field_lookup, _39125_ident,_39137_cppLinked);;
	if ((_42317_s != nullptr)) {
		return jule::Any(_42317_s);
	};
	return jule::Any(_205084830_findBuiltins(&(*_self_), _39125_ident));
}



inline void _1db2a268d_pushReference(_2050816b7_Eval* _self_, jule::Ptr<_204ec7454_FnIns>& _43140_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_204ee42a6_scopeChecker>>()) {
			_case_begin_1db2a4aad:;
			{
				jule::Ptr<_204ee42a6_scopeChecker> _43421_sc = _204ee762d_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_204ee42a6_scopeChecker>());;
				if ((!(_1db2a50ca_Exist(_43421_sc.get()._field_owner.get()._field_Refers.ptr(), _43140_ref)))) {
					_204ec84aa_Push(_43421_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43140_ref));
				};
			}
		}
		else {
			_case_begin_1db2a3b56:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1db2a50ca_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43140_ref))))) {
					_204ec84aa_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43140_ref));
				};
			}
		}
		_match_end_1db2a3b01:;
	};
}

inline void _1db2b82b9_pushReference(_2050816b7_Eval* _self_, jule::Ptr<_205031cb6_Var>& _43140_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_204ee42a6_scopeChecker>>()) {
			_case_begin_1db2ba50d:;
			{
				jule::Ptr<_204ee42a6_scopeChecker> _43421_sc = _204ee762d_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_204ee42a6_scopeChecker>());;
				if ((!(_1db2baa2a_Exist(_43421_sc.get()._field_owner.get()._field_Refers.ptr(), _43140_ref)))) {
					_204ec84aa_Push(_43421_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43140_ref));
				};
			}
		}
		else {
			_case_begin_1db2b95a6:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1db2baa2a_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43140_ref))))) {
					_204ec84aa_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43140_ref));
				};
			}
		}
		_match_end_1db2b9551:;
	};
}

inline void _1db4c4096_pushReference(_2050816b7_Eval* _self_, jule::Ptr<_20435cc5d_StructIns>& _43140_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_204ee42a6_scopeChecker>>()) {
			_case_begin_1db4c63a6:;
			{
				jule::Ptr<_204ee42a6_scopeChecker> _43421_sc = _204ee762d_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_204ee42a6_scopeChecker>());;
				if ((!(_1db4c68c3_Exist(_43421_sc.get()._field_owner.get()._field_Refers.ptr(), _43140_ref)))) {
					_204ec84aa_Push(_43421_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43140_ref));
				};
			}
		}
		else {
			_case_begin_1db4c544e:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1db4c68c3_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43140_ref))))) {
					_204ec84aa_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43140_ref));
				};
			}
		}
		_match_end_1db4c53e9:;
	};
}



inline jule::Ptr<_20507eb49_Data> _20508526a__evalEnum(_2050816b7_Eval* _self_, jule::Ptr<_204ed1a35_Enum> _44528_enm) {
	return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_44528_enm, 3)}), ._field_Decl=true, });
}



inline jule::Ptr<_20507eb49_Data> _205085622_evalEnum(_2050816b7_Eval* _self_, jule::Ptr<_204ed1a35_Enum> _45431_enm, jule::Ptr<_202b89679_Token> _45443_errorToken) {
	if ((!(_2050173ea_isAccessibleDefine((*_self_)._field_s.ptr(), _45431_enm.get()._field_Public,_45431_enm.get()._field_Token)))) {
		_205081bc3_pushErr(&(*_self_), _45443_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_45431_enm.get()._field_Ident)}));
		_205081ee2_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _20508526a__evalEnum(&(*_self_), _45431_enm);
}



inline jule::Ptr<_20507eb49_Data> _205085930__evalTypeEnum(_2050816b7_Eval* _self_, jule::Ptr<_204ed3130_TypeEnum> _46332_enm) {
	return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_46332_enm, 4)}), ._field_Decl=true, });
}



inline jule::Ptr<_20507eb49_Data> _205085cd7_evalTypeEnum(_2050816b7_Eval* _self_, jule::Ptr<_204ed3130_TypeEnum> _47235_enm, jule::Ptr<_202b89679_Token> _47251_errorToken) {
	if ((!(_2050173ea_isAccessibleDefine((*_self_)._field_s.ptr(), _47235_enm.get()._field_Public,_47235_enm.get()._field_Token)))) {
		_205081bc3_pushErr(&(*_self_), _47251_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_47235_enm.get()._field_Ident)}));
		_205081ee2_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _205085930__evalTypeEnum(&(*_self_), _47235_enm);
}



inline jule::Ptr<_20507eb49_Data> _2050860e5__evalStruct(_2050816b7_Eval* _self_, jule::Ptr<_20435cc5d_StructIns> _48130_s) {
	return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_48130_s, 0)}), ._field_Model=static_cast<jule::Any>(_48130_s), ._field_Decl=true, });
}



inline jule::Ptr<_20507eb49_Data> _20508649c_evalStruct(_2050816b7_Eval* _self_, jule::Ptr<_20435cc5d_StructIns> _49133_s, jule::Ptr<_202b89679_Token> _49148_errorToken) {
	if ((!(_2050173ea_isAccessibleDefine((*_self_)._field_s.ptr(), _49133_s.get()._field_Decl.get()._field_Public,_49133_s.get()._field_Decl.get()._field_Token)))) {
		_205081bc3_pushErr(&(*_self_), _49148_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_49133_s.get()._field_Decl.get()._field_Ident)}));
		_205081ee2_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_205086ac9_checkDeprecated(&(*_self_), _49133_s.get()._field_Decl.get()._field_Directives,_49148_errorToken);
	return _2050860e5__evalStruct(&(*_self_), _49133_s);
}



inline jule::Ptr<_20507eb49_Data> _2050867aa_evalFnIns(_2050816b7_Eval* _self_, jule::Ptr<_204ec7454_FnIns> _50128_f) {
	return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_50128_f, 1)}), ._field_Model=static_cast<jule::Any>(_50128_f), });
}



inline void _205086ac9_checkDeprecated(_2050816b7_Eval* _self_, jule::Slice<jule::Ptr<_20430829c_Directive>>& _51039_directives, jule::Ptr<_202b89679_Token> _51070_tok) {
	if (_20508260d_isUnsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_20430829c_Directive> _51513_d = _2050a508c_findDirective(_51039_directives,jule::Str("deprecated", 10));;
	if ((_51513_d != nullptr)) {
		if ((_51513_d.get()._field_Args.len() == 0LL)) {
			_205081bc3_pushErr(&(*_self_), _51070_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_205081bc3_pushErr(&(*_self_), _51070_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_51513_d.get()._field_Args[0LL].get()._field_Kind)}));
		};
		_205081ee2_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_20507eb49_Data> _205086e81_evalFn(_2050816b7_Eval* _self_, jule::Ptr<_204ec707a_Fn> _52629_f, jule::Ptr<_202b89679_Token> _52637_errorToken) {
	if ((!(_2050173ea_isAccessibleDefine((*_self_)._field_s.ptr(), _52629_f.get()._field_Public,_52629_f.get()._field_Token)))) {
		_205081bc3_pushErr(&(*_self_), _52637_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52629_f.get()._field_Ident)}));
		_205081ee2_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_205086ac9_checkDeprecated(&(*_self_), _52629_f.get()._field_Directives,_52637_errorToken);
	jule::Ptr<_204ec7454_FnIns> _53517_ins = _20439cb9e_instance(_52629_f);;
	_1db2a268d_pushReference(&(*_self_), _53517_ins);
	return _2050867aa_evalFnIns(&(*_self_), _53517_ins);
}



inline void _205087349_pushIllegalCycleError(_2050816b7_Eval* _self_, jule::Ptr<_205031cb6_Var>& _54041_v1, jule::Ptr<_205031cb6_Var>& _54052_v2, jule::Str& _54067_message) {
	;
	jule::Str _54213_refers_to = _20285bbed_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_54041_v1.get()._field_Ident),jule::Any(_54052_v2.get()._field_Ident)}));;
	(_54067_message).buffer.insert(0, (((_2027b6509_Repeat(jule::Str(" ", 1),4LL) + _54213_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _205087701_checkCrossCycle(_2050816b7_Eval* _self_, jule::Ptr<_205031cb6_Var>& _54635_v, jule::Str& _54649_message) {
	{
		auto &expr = _54635_v.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_1db2aa71d:;
		if (it != expr.end()) {
			jule::Ptr<_205031cb6_Var> &_54716_d = *it;
			{
				if ((_54716_d == (*_self_)._field_owner)) {
					_205087349_pushIllegalCycleError(&(*_self_), _54635_v,_54716_d,_54649_message);
					return false;
				};
				if ((!(_205087701_checkCrossCycle(&(*_self_), _54716_d,_54649_message)))) {
					_205087349_pushIllegalCycleError(&(*_self_), _54635_v,_54716_d,_54649_message);
					return false;
				};
			}
			_iter_next_1db2aa71d:;
			++it;
			goto _iter_begin_1db2aa71d;
		}
		_iter_end_1db2aa71d:;
	};
	return true;
}



inline jule::Bool _205087aa8_checkIllegalCycles(_2050816b7_Eval* _self_, jule::Ptr<_205031cb6_Var>& _56542_v, jule::Ptr<_202b89679_Token> _56551_decl_token) {
	jule::Bool _56573_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_56573_ok = true;
		return _56573_ok;
	};
	if (((*_self_)._field_owner == _56542_v)) {
		_205081bc3_pushErr(&(*_self_), (*_self_)._field_owner.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_Ident)}));
		_56573_ok = false;
		return _56573_ok;
	};
	jule::Str _57717_message = jule::Str();;
	if ((!(_205087701_checkCrossCycle(&(*_self_), _56542_v,_57717_message)))) {
		jule::Str _58021_errMsg = _57717_message;;
		_57717_message=jule::Str();
		_205087349_pushIllegalCycleError(&(*_self_), (*_self_)._field_owner,_56542_v,_57717_message);
		_58021_errMsg+=_57717_message;
		_205081bc3_pushErr(&(*_self_), _56551_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_58021_errMsg)}));
		_56573_ok = false;
		return _56573_ok;
	};
	(*_self_)._field_owner.get()._field_Depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_Depends,1);(*_self_)._field_owner.get()._field_Depends.__push(_56542_v);;
	_56573_ok = true;
	return _56573_ok;
}



inline jule::Ptr<_20507eb49_Data> _205087e60_evalVar(_2050816b7_Eval* _self_, jule::Ptr<_205031cb6_Var> _59230_v, jule::Ptr<_202b89679_Token> _59239_errorToken) {
	if ((!(_2050173ea_isAccessibleDefine((*_self_)._field_s.ptr(), _59230_v.get()._field_Public,_59230_v.get()._field_Token)))) {
		_205081bc3_pushErr(&(*_self_), _59239_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_59230_v.get()._field_Ident)}));
		_205081ee2_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_205086ac9_checkDeprecated(&(*_self_), _59230_v.get()._field_Directives,_59239_errorToken);
	_59230_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_205014062_Sema>>()) {
			_case_begin_1db2b3b44:;
			{
				jule::Bool _60617_ok = _205087aa8_checkIllegalCycles(&(*_self_), _59230_v,_59239_errorToken);;
				if ((!(_60617_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ee42a6_scopeChecker>>()) {
			_case_begin_1db2b3bdd:;
			{
				if (((!(_59230_v.get()._field_Reference)) || _20508260d_isUnsafe(&(*_self_)))) {
					goto _match_end_1db2b3ade;
				};
				jule::Ptr<_204ee42a6_scopeChecker> _61421_s = (*_self_)._field_lookup.operator jule::Ptr<_204ee42a6_scopeChecker>();;
				while (((_61421_s.get()._field_owner == nullptr) && (_61421_s.get()._field_parent != nullptr))) {
					{
						_61421_s=_61421_s.get()._field_parent;
					}
				_iter_next_1db2b5d88:;
				}
				_iter_end_1db2b5d88:;;
				if ((((_61421_s.get()._field_owner != nullptr) && _61421_s.get()._field_owner.get()._field_Anon) && (_59230_v.get()._field_Scope != _61421_s.get()._field_owner.get()._field_Scope))) {
					_205081bc3_pushErr(&(*_self_), _59239_errorToken,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_59230_v.get()._field_Ident)}));
				};
			}
		}
		_match_end_1db2b3ade:;
	};
	if ((_59230_v.get()._field_Scope == nullptr)) {
		_1db2b82b9_pushReference(&(*_self_), _59230_v);
	};
	if (((!(_59230_v.get()._field_CppLinked)) && ((_59230_v.get()._field_Value == nullptr) || (_59230_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_59230_v.get()._field_Constant) {
			_20502982a_checkTypeVar((*_self_)._field_s, _59230_v,jule::Trait<_2050c6520_Lookup>((*_self_)._field_s, 3));
			if ((_59230_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_59230_v.get()._field_Kind == nullptr) || (_59230_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_59230_v.get()._field_Scope != nullptr)) {
			return nullptr;
		};
		_20502982a_checkTypeVar((*_self_)._field_s, _59230_v,(*_self_)._field_lookup);
		if (((_59230_v.get()._field_Kind == nullptr) || (_59230_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_20507eb49_Data> _65717_d = jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=_59230_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_59230_v.get()._field_Mutable, ._field_Reference=_59230_v.get()._field_Reference, ._field_Lvalue=(!(_59230_v.get()._field_Constant)), ._field_Model=static_cast<jule::Any>(_59230_v), });;
	if ((((!(_59230_v.get()._field_CppLinked)) && _20503217e_IsInitialized(_59230_v.ptr())) && (_59230_v.get()._field_Value.get()._field_Data != nullptr))) {
		_65717_d.get()._field_IsRune=_59230_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_59230_v.get()._field_Constant && (_59230_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_65717_d.get()._field_Constant=jule::new_ptr<_2044102b6_Const>((*(_59230_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_65717_d.get()._field_Model=static_cast<jule::Any>(_65717_d.get()._field_Constant);
		if (_205032657_untypedConstant(_59230_v.ptr())) {
			_205082b4c_applyNumericPrefix(&(*_self_), _65717_d);
			_65717_d.get()._field_untyped=true;
		};
	};
	return _65717_d;
}



inline jule::Ptr<_20507eb49_Data> _205088317_evalTypeAlias(_2050816b7_Eval* _self_, jule::Ptr<_2050a9beb_TypeAlias> _68136_ta, jule::Ptr<_202b89679_Token> _68152_errorToken) {
	if ((!(_2050173ea_isAccessibleDefine((*_self_)._field_s.ptr(), _68136_ta.get()._field_Public,_68136_ta.get()._field_Token)))) {
		_205081bc3_pushErr(&(*_self_), _68152_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_68136_ta.get()._field_Ident)}));
		_205081ee2_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_68136_ta.get()._field_Used=true;
	jule::Trait<_2050aa4b0_Kind> _69017_kind = _68136_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_20507eb49_Data> _69117_d = nullptr;;
	{
		auto &_match_expr{ _69017_kind };
		
		if (_match_expr.type_is<jule::Ptr<_20435cc5d_StructIns>>()) {
			_case_begin_1db2ca4da:;
			{
				_69117_d=_2050860e5__evalStruct(&(*_self_), _69017_kind.operator jule::Ptr<_20435cc5d_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ed1a35_Enum>>()) {
			_case_begin_1db2cb002:;
			{
				_69117_d=_20508526a__evalEnum(&(*_self_), _69017_kind.operator jule::Ptr<_204ed1a35_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ed3130_TypeEnum>>()) {
			_case_begin_1db2c96e8:;
			{
				_69117_d=_205085930__evalTypeEnum(&(*_self_), _69017_kind.operator jule::Ptr<_204ed3130_TypeEnum>());
			}
		}
		else {
			_case_begin_1db2c95c7:;
			{
				_69117_d=jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=_68136_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_68136_ta.get()._field_CppLinked) {
					_69117_d.get()._field_Kind.get()._field_CppIdent=_68136_ta.get()._field_Ident;
				} else {
					_69117_d.get()._field_Kind.get()._field_CppIdent=_68136_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_69117_d.get()._field_Model=static_cast<jule::Any>(_69117_d.get()._field_Kind);
			}
		}
		_match_end_1db2c9572:;
	};
	_69117_d.get()._field_Kind.get()._field_Generic=_68136_ta.get()._field_Generic;
	return _69117_d;
}



inline jule::Ptr<_20507eb49_Data> _2050886be_evalDef(_2050816b7_Eval* _self_, jule::Any _71730_def, jule::Ptr<_202b89679_Token> _71740_ident) {
	{
		auto &_match_expr{ _71730_def };
		
		if (_match_expr.type_is<jule::Ptr<_205031cb6_Var>>()) {
			_case_begin_1db43e275:;
			{
				return _205087e60_evalVar(&(*_self_), _71730_def.operator jule::Ptr<_205031cb6_Var>(),_71740_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ed1a35_Enum>>()) {
			_case_begin_1db43e2db:;
			{
				return _205085622_evalEnum(&(*_self_), _71730_def.operator jule::Ptr<_204ed1a35_Enum>(),_71740_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ed3130_TypeEnum>>()) {
			_case_begin_1db43e352:;
			{
				return _205085cd7_evalTypeEnum(&(*_self_), _71730_def.operator jule::Ptr<_204ed3130_TypeEnum>(),_71740_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20433367e_Struct>>()) {
			_case_begin_1db43e3b8:;
			{
				return _20508649c_evalStruct(&(*_self_), _20430d48e_instance(_71730_def.operator jule::Ptr<_20433367e_Struct>()),_71740_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec707a_Fn>>()) {
			_case_begin_1db43e440:;
			{
				jule::Ptr<_204ec707a_Fn> _72821_f = _71730_def.operator jule::Ptr<_204ec707a_Fn>();;
				if ((_72821_f.get()._field_Ident != jule::Str("init", 4))) {
					return _205086e81_evalFn(&(*_self_), _72821_f,_71740_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec7454_FnIns>>()) {
			_case_begin_1db43e4b7:;
			{
				return _2050867aa_evalFnIns(&(*_self_), _71730_def.operator jule::Ptr<_204ec7454_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2050a9beb_TypeAlias>>()) {
			_case_begin_1db43e53e:;
			{
				return _205088317_evalTypeAlias(&(*_self_), _71730_def.operator jule::Ptr<_2050a9beb_TypeAlias>(),_71740_ident);
			}
		}
		_match_end_1db43e176:;
	};
	_205081bc3_pushErr(&(*_self_), _71740_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_71740_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_20507eb49_Data> _2050889cc_evalIdent(_2050816b7_Eval* _self_, jule::Ptr<_20434774d_IdentExpr> _74128_ident) {
	jule::Any _74217_def = _205084bd7_getDef(&(*_self_), _74128_ident.get()._field_Ident,_74128_ident.get()._field_CppLinked);;
	return _2050886be_evalDef(&(*_self_), jule::Any(_74217_def),_74128_ident.get()._field_Token);
}



inline jule::Ptr<_20507eb49_Data> _205088cda_evalUnary(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_204347e57_UnaryExpr> _74633_u) {
	_20509c55c_unaryEval _74717_unary = static__20509ca13_new(_self_);;
	return _20509dcab_eval(&_74717_unary, _74633_u);
}



inline jule::Ptr<_20507eb49_Data> _2050890e8_evalVariadic(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_20434830e_VariadicExpr> _75136_v) {
	if ((_75136_v.get()._field_Expr == nullptr)) {
		_205081bc3_pushErr(_self_.ptr(), _75136_v.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_2050aa8de_TypeKind> _75717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_75717_prefix;
	});;
	jule::Ptr<_20507eb49_Data> _76117_d = _20509b9bd_evalExprKind(_self_, _75136_v.get()._field_Expr.get()._field_Kind);;
	if ((_76117_d == nullptr)) {
		return nullptr;
	};
	if ((!(_2050ac78c_Variadicable(_76117_d.get()._field_Kind.ptr())))) {
		_205081bc3_pushErr(_self_.ptr(), _75136_v.get()._field_Token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_76117_d.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_2050b45a7_Slc> _77113_slc = _2050ad97a_Slc(_76117_d.get()._field_Kind.ptr());;
	_76117_d.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_CppIdent=_77113_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_77113_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_77113_slc.get()._field_Elem.get()._field_Kind});
	return _76117_d;
}



inline jule::Ptr<_20507eb49_Data> _205089406_evalUnsafe(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_2043472ca_UnsafeExpr> _78134_u) {
	jule::Bool _78213_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_20507eb49_Data> _78417_d = _20509b9bd_evalExprKind(_self_, _78134_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_78213_unsafety;
	return _78417_d;
}



inline jule::Ptr<_20507eb49_Data> _205089714_evalArr(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_20434c17b_SliceExpr> _78931_s) {
	jule::Ptr<_2050b6752_Arr> _79117_pt = _2050ad716_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_2050b6752_Arr> _79317_arr = jule::new_ptr<_2050b6752_Arr>(_2050b6752_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_79117_pt.get()._field_Elem});;
	jule::Bool _79917_filled = false;;
	if ((_78931_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _78931_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_20434830e_VariadicExpr>>()) {
				_case_begin_1db44e8a1:;
				{
					if ((_78931_s.get()._field_Exprs[1LL].get()._field_Kind.operator jule::Ptr<_20434830e_VariadicExpr>().get()._field_Expr != nullptr)) {
						goto _match_end_1db44e807;
					};
					if (_79117_pt.get()._field_Auto) {
						_205081bc3_pushErr(_self_.ptr(), _78931_s.get()._field_Token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_79917_filled=true;
					_78931_s.get()._field_Exprs=_78931_s.get()._field_Exprs.slice(0LL,1LL);
				}
			}
			_match_end_1db44e807:;
		};
	};
	_79317_arr.get()._field_N=static_cast<jule::I64>(_78931_s.get()._field_Exprs.len());
	if ((!(_79117_pt.get()._field_Auto))) {
		if ((_79317_arr.get()._field_N > _79117_pt.get()._field_N)) {
			_205081bc3_pushErr(_self_.ptr(), _78931_s.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_79317_arr.get()._field_N < _79117_pt.get()._field_N)) {
			_79317_arr.get()._field_N=_79117_pt.get()._field_N;
		};
	};
	jule::Ptr<_204ec3818_ArrayExprModel> _82817_model = jule::new_ptr<_204ec3818_ArrayExprModel>(_204ec3818_ArrayExprModel{._field_Kind=_79317_arr, });;
	if (_79917_filled) {
		_82817_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_82817_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL,_78931_s.get()._field_Exprs.len());
	};
	jule::Ptr<_2050aa8de_TypeKind> _83717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_79317_arr.get()._field_Elem;
	{
		auto &expr = _78931_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1db454ad7:;
		if (it != expr.end()) {
			jule::Ptr<_204345a8c_Expr> _83921_elem = *it;
			{
				jule::Ptr<_20507eb49_Data> _84021_d = _20509b9bd_evalExprKind(_self_, _83921_elem.get()._field_Kind);;
				if ((_84021_d == nullptr)) {
					goto _iter_next_1db454ad7;
				};
				_20501db0a_checkAssignType(_self_.get()._field_s, false,_79317_arr.get()._field_Elem,_84021_d,_78931_s.get()._field_Token);
				_82817_model.get()._field_Elems = jule::alloc_for_append(_82817_model.get()._field_Elems,1);_82817_model.get()._field_Elems.__push(_84021_d.get()._field_Model);;
			}
			_iter_next_1db454ad7:;
			++it;
			goto _iter_begin_1db454ad7;
		}
		_iter_end_1db454ad7:;
	};
	_self_.get()._field_prefix=_83717_prefix;
	if (_79917_filled) {
		_82817_model.get()._field_Elems = jule::alloc_for_append(_82817_model.get()._field_Elems,1);_82817_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_79317_arr, 11)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_82817_model), });
}



inline jule::Ptr<_20507eb49_Data> _205089b65_evalExpSlc(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_20434c17b_SliceExpr> _86434_s, jule::Ptr<_2050aa8de_TypeKind> _86453_t, jule::Any _86471_first) {
	jule::Ptr<_2050b45a7_Slc> _86517_slc = jule::new_ptr<_2050b45a7_Slc>(_2050b45a7_Slc{._field_Elem=_86453_t});;
	jule::Ptr<_204ec2394_SliceExprModel> _86917_model = jule::new_ptr<_204ec2394_SliceExprModel>(_204ec2394_SliceExprModel{._field_ElemKind=_86453_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL,_86434_s.get()._field_Exprs.len())});;
	if ((_86471_first != nullptr)) {
		_86917_model.get()._field_Elems = jule::alloc_for_append(_86917_model.get()._field_Elems,1);_86917_model.get()._field_Elems.__push(_86471_first);;
		_86434_s.get()._field_Exprs=_86434_s.get()._field_Exprs.slice(1LL);
	};
	jule::Ptr<_2050aa8de_TypeKind> _87817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_86517_slc.get()._field_Elem;
	{
		auto &expr = _86434_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1db45978a:;
		if (it != expr.end()) {
			jule::Ptr<_204345a8c_Expr> _88021_elem = *it;
			{
				jule::Ptr<_20507eb49_Data> _88121_d = _20509b9bd_evalExprKind(_self_, _88021_elem.get()._field_Kind);;
				if ((_88121_d == nullptr)) {
					goto _iter_next_1db45978a;
				};
				_20501db0a_checkAssignType(_self_.get()._field_s, false,_86517_slc.get()._field_Elem,_88121_d,_86434_s.get()._field_Token);
				_86917_model.get()._field_Elems = jule::alloc_for_append(_86917_model.get()._field_Elems,1);_86917_model.get()._field_Elems.__push(_88121_d.get()._field_Model);;
			}
			_iter_next_1db45978a:;
			++it;
			goto _iter_begin_1db45978a;
		}
		_iter_end_1db45978a:;
	};
	_self_.get()._field_prefix=_87817_prefix;
	return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_86517_slc, 8)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_86917_model), });
}



inline jule::Ptr<_20507eb49_Data> _205089e73_evalSliceExpr(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_20434c17b_SliceExpr> _89937_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_2050ad716_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1db45dd99:;
				{
					return _205089714_evalArr(_self_, _89937_s);
				}
			}
			else if ((_2050ad97a_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1db45de21:;
				{
					jule::Ptr<_2050b45a7_Slc> _90525_pt = _2050ad97a_Slc(_self_.get()._field_prefix.ptr());;
					return _205089b65_evalExpSlc(_self_, _89937_s,_90525_pt.get()._field_Elem,nullptr);
				}
			}
			_match_end_1db45dc78:;
		};
	};
	jule::Ptr<_2050aa8de_TypeKind> _91017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_89937_s.get()._field_Exprs.len() == 0LL)) {
		_205081bc3_pushErr(_self_.ptr(), _89937_s.get()._field_Token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20507eb49_Data> _91817_first_elem = _20509b9bd_evalExprKind(_self_, _89937_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_91817_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_20507eb49_Data> _92317_d = _205089b65_evalExpSlc(_self_, _89937_s,_91817_first_elem.get()._field_Kind,_91817_first_elem.get()._field_Model);;
	_self_.get()._field_prefix=_91017_prefix;
	return _92317_d;
}



inline void _20508a2b4_checkIntegerIndexingByData(_2050816b7_Eval* _self_, jule::Ptr<_20507eb49_Data>& _92950_d, jule::Ptr<_202b89679_Token> _92960_token) {
	jule::Str _93013_err_key = _2050a7534_checkDataForIntegerIndexing(_92950_d);;
	{
		auto &_match_expr{ _93013_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1db465048:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1db465455:;
			{
				_205081bc3_pushErr(&(*_self_), _92960_token,_93013_err_key,jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_92950_d.get()._field_Kind.ptr()))}));
			}
		}
		else {
			_case_begin_1db464b19:;
			{
				_205081bc3_pushErr(&(*_self_), _92960_token,_93013_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1db464a2b:;
	};
}



inline void _20508a68d_indexingPtr(_2050816b7_Eval* _self_, jule::Ptr<_20507eb49_Data>& _94135_d, jule::Ptr<_20507eb49_Data>& _94150_index, jule::Ptr<_20434c9ea_IndexingExpr>& _94165_i) {
	_20508a2b4_checkIntegerIndexingByData(&(*_self_), _94150_index,_94165_i.get()._field_Token);
	jule::Ptr<_2050b71ae_Ptr> _94417_ptr = _2050acec9_Ptr(_94135_d.get()._field_Kind.ptr());;
	{
		
		if (_2050b7b82_IsUnsafe(_94417_ptr.ptr())) {
			_case_begin_1db4677cb:;
			{
				_205081bc3_pushErr(&(*_self_), _94165_i.get()._field_Token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_20508260d_isUnsafe(&(*_self_))))) {
			_case_begin_1db467842:;
			{
				_205081bc3_pushErr(&(*_self_), _94165_i.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1db467677:;
	};
	_94135_d.get()._field_Kind=_94417_ptr.get()._field_Elem;
}



inline void _20508aa56_indexingArr(_2050816b7_Eval* _self_, jule::Ptr<_20507eb49_Data>& _95635_d, jule::Ptr<_20507eb49_Data>& _95650_index, jule::Ptr<_20434c9ea_IndexingExpr>& _95665_i) {
	jule::Ptr<_2050b6752_Arr> _95717_arr = _2050ad716_Arr(_95635_d.get()._field_Kind.ptr());;
	_95635_d.get()._field_Kind=_95717_arr.get()._field_Elem;
	_20508a2b4_checkIntegerIndexingByData(&(*_self_), _95650_index,_95665_i.get()._field_Token);
	if ((_20508050c_IsConst(_95650_index.ptr()) && (_20446423d_AsF64(_95650_index.get()._field_Constant.ptr()) >= static_cast<jule::F64>(_95717_arr.get()._field_N)))) {
		_205081bc3_pushErr(&(*_self_), _95665_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _20508ae1e_indexingSlc(_2050816b7_Eval* _self_, jule::Ptr<_20507eb49_Data>& _96535_d, jule::Ptr<_20507eb49_Data>& _96550_index, jule::Ptr<_20434c9ea_IndexingExpr>& _96565_i) {
	jule::Ptr<_2050b45a7_Slc> _96617_slc = _2050ad97a_Slc(_96535_d.get()._field_Kind.ptr());;
	_96535_d.get()._field_Kind=_96617_slc.get()._field_Elem;
	_20508a2b4_checkIntegerIndexingByData(&(*_self_), _96550_index,_96565_i.get()._field_Token);
	if ((!(_20508050c_IsConst(_96550_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _96535_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_204ec2394_SliceExprModel>>()) {
			_case_begin_1db46d826:;
			{
				jule::Ptr<_204ec2394_SliceExprModel> _97621_m = _96535_d.get()._field_Model.operator jule::Ptr<_204ec2394_SliceExprModel>();;
				jule::F64 _97717_indx = _20446423d_AsF64(_96550_index.get()._field_Constant.ptr());;
				if ((_97717_indx >= static_cast<jule::F64>(_97621_m.get()._field_Elems.len()))) {
					_205081bc3_pushErr(&(*_self_), _96565_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_96535_d.get()._field_Model=_97621_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_97717_indx))];
					_96535_d.get()._field_Decl=true;
				};
			}
		}
		_match_end_1db46d7c1:;
	};
}



inline void _20508b2d7_indexingMap(_2050816b7_Eval* _self_, jule::Ptr<_20507eb49_Data>& _98735_d, jule::Ptr<_20507eb49_Data>& _98750_index, jule::Ptr<_20434c9ea_IndexingExpr>& _98769_i) {
	if ((_98750_index == nullptr)) {
		return;;
	};
	jule::Ptr<_2050b5b5d_Map> _99117_m = _2050ae42b_Map(_98735_d.get()._field_Kind.ptr());;
	_2050655ad_assignTypeChecker _99217_atc = _2050655ad_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_99117_m.get()._field_Key, ._field_d=_98750_index, ._field_errorToken=_98769_i.get()._field_Token};;
	_205066735_check(&_99217_atc);
	_98735_d.get()._field_Kind=_99117_m.get()._field_Val;
}



inline void _20508b6a0_indexingStr(_2050816b7_Eval* _self_, jule::Ptr<_20507eb49_Data>& _100235_d, jule::Ptr<_20507eb49_Data>& _100250_index, jule::Ptr<_20434c9ea_IndexingExpr>& _100265_i) {
	;
	_100235_d.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("u8", 2)), 6)});
	if ((_100250_index == nullptr)) {
		return;;
	};
	_20508a2b4_checkIntegerIndexingByData(&(*_self_), _100250_index,_100265_i.get()._field_Token);
	if ((!(_20508050c_IsConst(_100250_index.ptr())))) {
		_100235_d.get()._field_Constant=nullptr;
		return;;
	};
	if (_20508050c_IsConst(_100235_d.ptr())) {
		jule::Ptr<_202b89679_Token> _101817_errorToken = _100265_i.get()._field_Token;;
		jule::I64 _101917_j = _204463270_AsI64(_100250_index.get()._field_Constant.ptr());;
		jule::Str _102017_s = _204461834_ReadStr(_100235_d.get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_101917_j) >= _102017_s.len())) {
			_205081bc3_pushErr(&(*_self_), _101817_errorToken,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_204477c13_SetU64(_100235_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_102017_s[_101917_j])));
		};
	};
}



inline void _20508ba68_toIndexing(_2050816b7_Eval* _self_, jule::Ptr<_20507eb49_Data>& _102934_d, jule::Ptr<_20507eb49_Data>& _102949_index, jule::Ptr<_20434c9ea_IndexingExpr>& _102968_i) {
	{
		
		if ((_2050acec9_Ptr(_102934_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db47906d:;
			{
				_20508a68d_indexingPtr(&(*_self_), _102934_d,_102949_index,_102968_i);
				return;;
			}
		}
		else if ((_2050ad716_Arr(_102934_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db4790e5:;
			{
				_20508aa56_indexingArr(&(*_self_), _102934_d,_102949_index,_102968_i);
				return;;
			}
		}
		else if ((_2050ad97a_Slc(_102934_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db47916c:;
			{
				_20508ae1e_indexingSlc(&(*_self_), _102934_d,_102949_index,_102968_i);
				return;;
			}
		}
		else if ((_2050ae42b_Map(_102934_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db4791e4:;
			{
				_20508b2d7_indexingMap(&(*_self_), _102934_d,_102949_index,_102968_i);
				return;;
			}
		}
		else if ((_2050aca01_Prim(_102934_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db47926b:;
			{
				jule::Ptr<_2050b03b6_Prim> _104417_prim = _2050aca01_Prim(_102934_d.get()._field_Kind.ptr());;
				{
					
					if (_2050b35ea_IsStr(_104417_prim.ptr())) {
						_case_begin_1db47d737:;
						{
							_20508b6a0_indexingStr(&(*_self_), _102934_d,_102949_index,_102968_i);
							return;;
						}
					}
					_match_end_1db47d68d:;
				};
			}
		}
		_match_end_1db478e19:;
	};
	_205081bc3_pushErr(&(*_self_), _102968_i.get()._field_Token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_102934_d.get()._field_Kind.ptr()))}));
}



inline jule::Bool _20508bedb_pushGenericsFromExprSubIdent(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_204348ee1_SubIdentExpr>& _105453_sexpr, jule::Slice<jule::Ptr<_20434156b_TypeDecl>>& _105514_generics, jule::Ptr<_204345a8c_Expr>& _105542_expr) {
	jule::Ptr<_204342281_SubIdentTypeDecl> _105617_t = jule::new_ptr<_204342281_SubIdentTypeDecl>();;
	if ((!(_2050a8304_pushSubIdentFromExpr(static_cast<jule::Any>(_105453_sexpr),_105617_t)))) {
		_205081bc3_pushErr(_self_.ptr(), _105542_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	_105514_generics = jule::alloc_for_append(_105514_generics,1);_105514_generics.__push(jule::new_ptr<_20434156b_TypeDecl>(_20434156b_TypeDecl{._field_Kind=static_cast<jule::Any>(_105617_t)}));;
	return true;
}



inline jule::Bool _20508c3a4_pushGenericsFromData(jule::Ptr<_2050816b7_Eval> _self_, jule::Slice<jule::Ptr<_20434156b_TypeDecl>>& _106545_generics, jule::Ptr<_204345a8c_Expr>& _106573_expr) {
	{
		auto &_match_expr{ _106573_expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_204347e57_UnaryExpr>>()) {
			_case_begin_1db482c03:;
			{
				jule::Ptr<_20507eb49_Data> _107021_d = _205088cda_evalUnary(_self_, _106573_expr.get()._field_Kind.operator jule::Ptr<_204347e57_UnaryExpr>());;
				if ((!(_107021_d.get()._field_Decl))) {
					_205081bc3_pushErr(_self_.ptr(), _106573_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_106545_generics = jule::alloc_for_append(_106545_generics,1);_106545_generics.__push(jule::new_ptr<_20434156b_TypeDecl>(_20434156b_TypeDecl{._field_Token=_106573_expr.get()._field_Token, ._field_Kind=(*(((jule::Any*)((&(_107021_d.get()._field_Kind.get()._field_Kind))))))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20434156b_TypeDecl>>()) {
			_case_begin_1db481e77:;
			{
				_106545_generics = jule::alloc_for_append(_106545_generics,1);_106545_generics.__push(_106573_expr.get()._field_Kind.operator jule::Ptr<_20434156b_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204348ee1_SubIdentExpr>>()) {
			_case_begin_1db481edd:;
			{
				jule::Ptr<_204348ee1_SubIdentExpr> _108221_sexpr = _106573_expr.get()._field_Kind.operator jule::Ptr<_204348ee1_SubIdentExpr>();;
				return _20508bedb_pushGenericsFromExprSubIdent(_self_, _108221_sexpr,_106545_generics,_106573_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20434774d_IdentExpr>>()) {
			_case_begin_1db482054:;
			{
				jule::Ptr<_20434774d_IdentExpr> _108521_ident = _106573_expr.get()._field_Kind.operator jule::Ptr<_20434774d_IdentExpr>();;
				_106545_generics = jule::alloc_for_append(_106545_generics,1);_106545_generics.__push(jule::new_ptr<_20434156b_TypeDecl>(_20434156b_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_204341b32_IdentTypeDecl>(_204341b32_IdentTypeDecl{._field_Token=_108521_ident.get()._field_Token, ._field_Ident=_108521_ident.get()._field_Ident, ._field_CppLinked=_108521_ident.get()._field_CppLinked, }))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204346719_TupleExpr>>()) {
			_case_begin_1db4820ba:;
			{
				{
					auto &expr = _106573_expr.get()._field_Kind.operator jule::Ptr<_204346719_TupleExpr>().get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_1db48708c:;
					if (it != expr.end()) {
						jule::Ptr<_204345a8c_Expr> _109425_texpr = *it;
						{
							if ((!(_20508c3a4_pushGenericsFromData(_self_, _106545_generics,_109425_texpr)))) {
								return false;
							};
						}
						_iter_next_1db48708c:;
						++it;
						goto _iter_begin_1db48708c;
					}
					_iter_end_1db48708c:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204348a6d_NsSelectionExpr>>()) {
			_case_begin_1db482939:;
			{
				jule::Ptr<_204348a6d_NsSelectionExpr> _110021_ns = _106573_expr.get()._field_Kind.operator jule::Ptr<_204348a6d_NsSelectionExpr>();;
				jule::Ptr<_204341b32_IdentTypeDecl> _110121_decl = jule::new_ptr<_204341b32_IdentTypeDecl>(_204341b32_IdentTypeDecl{._field_Token=_110021_ns.get()._field_Ident, ._field_Ident=_110021_ns.get()._field_Ident.get()._field_Kind, });;
				_106545_generics = jule::alloc_for_append(_106545_generics,1);_106545_generics.__push(jule::new_ptr<_20434156b_TypeDecl>(_20434156b_TypeDecl{._field_Token=_110121_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_204342638_NamespaceTypeDecl>(_204342638_NamespaceTypeDecl{._field_Idents=_110021_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_20434156b_TypeDecl>(_20434156b_TypeDecl{._field_Token=_110121_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(_110121_decl)})}))}));;
			}
		}
		else {
			_case_begin_1db481c35:;
			{
				_205081bc3_pushErr(_self_.ptr(), _106573_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1db481e11:;
	};
	return true;
}



inline void _20508c6e5_evalIdentDeclFromIndexing(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_20507eb49_Data>& _112250_d, jule::Ptr<_20434c9ea_IndexingExpr>& _112265_i) {
	jule::Ptr<_20435cc5d_StructIns> _112317_s = _2050ade53_Struct(_112250_d.get()._field_Kind.ptr());;
	if ((_112317_s == nullptr)) {
		_205081bc3_pushErr(_self_.ptr(), _112265_i.get()._field_Expr.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_112250_d.get()._field_Kind.ptr()))}));
		_112250_d=nullptr;
		return;;
	};
	jule::Ptr<_204341b32_IdentTypeDecl> _113017_decl = nullptr;;
	{
		auto &_match_expr{ _112265_i.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_20434774d_IdentExpr>>()) {
			_case_begin_1db48db43:;
			{
				jule::Ptr<_20434774d_IdentExpr> _113321_expr = _112265_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_20434774d_IdentExpr>();;
				_113017_decl=jule::new_ptr<_204341b32_IdentTypeDecl>(_204341b32_IdentTypeDecl{._field_Token=_113321_expr.get()._field_Token, ._field_Ident=_113321_expr.get()._field_Ident, ._field_CppLinked=_113321_expr.get()._field_CppLinked, });
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204348a6d_NsSelectionExpr>>()) {
			_case_begin_1db48cb31:;
			{
				jule::Ptr<_204348a6d_NsSelectionExpr> _114021_expr = _112265_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_204348a6d_NsSelectionExpr>();;
				_113017_decl=jule::new_ptr<_204341b32_IdentTypeDecl>(_204341b32_IdentTypeDecl{._field_Token=_114021_expr.get()._field_Ident, ._field_Ident=_114021_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1db48d11a:;
			{
				_205081bc3_pushErr(_self_.ptr(), _112265_i.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_112250_d=nullptr;
				return;;
			}
		}
		_match_end_1db48cca7:;
	};
	if ((!(_20508c3a4_pushGenericsFromData(_self_, _113017_decl.get()._field_Generics,_112265_i.get()._field_Index)))) {
		_112250_d=nullptr;
		return;;
	};
	_112317_s=({ auto _wrap_copy = _20509394e_typeChecker(_self_.ptr()); _2050bcc97_fromStruct(&_wrap_copy, _113017_decl,_112317_s.get()._field_Decl); });
	if ((_112317_s == nullptr)) {
		_112250_d=nullptr;
		return;;
	};
	_112250_d.get()._field_Kind.get()._field_Kind=jule::Trait<_2050aa4b0_Kind>(_112317_s, 0);
}



inline jule::Bool _20508cb57_checkGenericFn(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_204ec7454_FnIns>& _116539_f, jule::Ptr<_202b89679_Token>& _116555_et, jule::Any& _116572_model) {
	jule::Bool _116613_ok = _205020ce9_reloadFnInsTypes(_self_.get()._field_s, _116539_f);;
	_116539_f.get()._field_reloaded=true;
	if ((!(_116613_ok))) {
		return false;
	};
	jule::Ptr<_204ec7454_FnIns> _117117_existInstance = _2043949cb_appendInstance(_116539_f.get()._field_Decl.ptr(), _116539_f);;
	if ((!(_20501ee5d_checkConstraintsFn(_self_.get()._field_s, _116539_f,_116555_et,_117117_existInstance)))) {
		return false;
	};
	if ((_117117_existInstance != nullptr)) {
		_116539_f=_117117_existInstance;
		_2050a80b2_updateModelToGenericIns(_116572_model,_117117_existInstance);
	} else {
		_20502c630_checkFnInsCaller(_self_.get()._field_s, _116539_f,_116555_et);
	};
	return true;
}



inline void _20508ce98_evalFnGenericFromIndexing(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_20507eb49_Data>& _119050_d, jule::Ptr<_20434c9ea_IndexingExpr>& _119065_i) {
	jule::Slice<jule::Ptr<_20434156b_TypeDecl>> _119117_generics = jule::Slice<jule::Ptr<_20434156b_TypeDecl>>::alloc(0LL,8LLU);;
	if ((!(_20508c3a4_pushGenericsFromData(_self_, _119117_generics,_119065_i.get()._field_Index)))) {
		_119050_d=nullptr;
		return;;
	};
	jule::Ptr<_204ec7454_FnIns> _119717_f = _2050adbde_Fn(_119050_d.get()._field_Kind.ptr());;
	jule::I64 _119817_genericsLen = 0LL;;
	if ((_119717_f.get()._field_Decl != nullptr)) {
		_119817_genericsLen=static_cast<jule::I64>(_119717_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_2050180bb_checkGenericQuantity(_self_.get()._field_s.ptr(), _119817_genericsLen,static_cast<jule::I64>(_119117_generics.len()),_119065_i.get()._field_Expr.get()._field_Token)))) {
		_119050_d=nullptr;
		return;;
	};
	_119717_f.get()._field_Generics=jule::Slice<jule::Ptr<_2050a91b2_InsGeneric>>::alloc(0LL,_119717_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto &expr = _119117_generics;
		auto it = expr.begin();
		_iter_begin_1db498510:;
		if (it != expr.end()) {
			jule::Ptr<_20434156b_TypeDecl> _120921_g = *it;
			{
				jule::Ptr<_20507eb49_Data> _121021_k = _205093c5c_evalType(_self_.ptr(), _120921_g);;
				if ((_121021_k == nullptr)) {
					_119050_d=nullptr;
					return;;
				};
				_119717_f.get()._field_Generics = jule::alloc_for_append(_119717_f.get()._field_Generics,1);_119717_f.get()._field_Generics.__push(jule::new_ptr<_2050a91b2_InsGeneric>(_2050a91b2_InsGeneric{._field_Kind=_121021_k.get()._field_Kind, }));;
			}
			_iter_next_1db498510:;
			++it;
			goto _iter_begin_1db498510;
		}
		_iter_end_1db498510:;
	};
	if (_204ec7641_IsBuiltin(_119717_f.ptr())) {
		return;;
	};
	if (_20508cb57_checkGenericFn(_self_, _119717_f,_119065_i.get()._field_Expr.get()._field_Token,_119050_d.get()._field_Model)) {
		_119050_d.get()._field_Kind.get()._field_Kind=jule::Trait<_2050aa4b0_Kind>(_119717_f, 1);
	} else {
		_119050_d=nullptr;
	};
}



inline jule::Ptr<_20507eb49_Data> _20508d2b7_evalIndexing(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_20434c9ea_IndexingExpr> _122936_i) {
	jule::Ptr<_2050aa8de_TypeKind> _123017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_123017_prefix;
	});;
	jule::Ptr<_20507eb49_Data> _123417_d = _20509b9bd_evalExprKind(_self_, _122936_i.get()._field_Expr.get()._field_Kind);;
	if ((_123417_d == nullptr)) {
		return nullptr;
	};
	if (_123417_d.get()._field_Decl) {
		_20508c6e5_evalIdentDeclFromIndexing(_self_, _123417_d,_122936_i);
		return _123417_d;
	};
	if ((_2050adbde_Fn(_123417_d.get()._field_Kind.ptr()) != nullptr)) {
		_20508ce98_evalFnGenericFromIndexing(_self_, _123417_d,_122936_i);
		return _123417_d;
	};
	_20507eb49_Data _125017_old_d = (*(_123417_d));;
	jule::Ptr<_20507eb49_Data> _125217_index = _20509b9bd_evalExprKind(_self_, _122936_i.get()._field_Index.get()._field_Kind);;
	if ((_125217_index == nullptr)) {
		return nullptr;
	};
	_123417_d.get()._field_Decl=false;
	_20508ba68_toIndexing(_self_.ptr(), _123417_d,_125217_index,_122936_i);
	if (_20508050c_IsConst(_123417_d.ptr())) {
		_123417_d.get()._field_Decl=false;
		_123417_d.get()._field_Model=static_cast<jule::Any>(_123417_d.get()._field_Constant);
	} else if (_123417_d.get()._field_Decl) {
		_123417_d.get()._field_Decl=false;
	} else {
		_123417_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec2581_IndexingExprModel>(_204ec2581_IndexingExprModel{._field_Token=_122936_i.get()._field_Token, ._field_Expr=jule::new_ptr<_20507eb49_Data>(_125017_old_d), ._field_Index=_125217_index}));
	};
	return _123417_d;
}



inline std::tuple<jule::Ptr<_20507eb49_Data>,jule::Ptr<_20507eb49_Data>> _20508d5c5_evalSlicingExprs(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_20434d105_SlicingExpr>& _128341_s) {
	jule::Ptr<_2050aa8de_TypeKind> _128417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_128417_prefix;
	});;
	jule::Ptr<_20507eb49_Data> _128817_l = nullptr;;
	jule::Ptr<_20507eb49_Data> _128917_r = nullptr;;
	if ((_128341_s.get()._field_Start != nullptr)) {
		_128817_l=_20509b9bd_evalExprKind(_self_, _128341_s.get()._field_Start.get()._field_Kind);
		if ((_128817_l != nullptr)) {
			_20508a2b4_checkIntegerIndexingByData(_self_.ptr(), _128817_l,_128341_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_128817_l=jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__204420804_NewI64(0LL)});
		_128817_l.get()._field_Model=static_cast<jule::Any>(_128817_l.get()._field_Constant);
	};
	if ((_128341_s.get()._field_To != nullptr)) {
		_128917_r=_20509b9bd_evalExprKind(_self_, _128341_s.get()._field_To.get()._field_Kind);
		if ((_128917_r != nullptr)) {
			_20508a2b4_checkIntegerIndexingByData(_self_.ptr(), _128917_r,_128341_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_128817_l,_128917_r);
}



inline void _20508d84a_slicingArr(_2050816b7_Eval* _self_, jule::Ptr<_20507eb49_Data>& _131830_d) {
	jule::Ptr<_2050aa8de_TypeKind> _131917_elemType = _2050ad716_Arr(_131830_d.get()._field_Kind.ptr()).get()._field_Elem;;
	_131830_d.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(jule::new_ptr<_2050b45a7_Slc>(_2050b45a7_Slc{._field_Elem=_131917_elemType}), 8)});
	_131830_d.get()._field_Lvalue=false;
	_131830_d.get()._field_Mutable=(_131830_d.get()._field_Mutable || (!(_2050abcdb_Mutable(_131917_elemType.ptr()))));
}



inline void _20508dc13_slicingStr(_2050816b7_Eval* _self_, jule::Ptr<_20507eb49_Data>& _133330_d, jule::Ptr<_20507eb49_Data>& _133341_l, jule::Ptr<_20507eb49_Data>& _133352_r) {
	_133330_d.get()._field_Lvalue=false;
	_133330_d.get()._field_Mutable=true;
	if ((!(_20508050c_IsConst(_133330_d.ptr())))) {
		return;;
	};
	if (((_133341_l == nullptr) || (_133352_r == nullptr))) {
		_133330_d.get()._field_Constant=nullptr;
		return;;
	};
	if ((_20508050c_IsConst(_133341_l.ptr()) && _20508050c_IsConst(_133352_r.ptr()))) {
		jule::I64 _134617_left = _204463270_AsI64(_133341_l.get()._field_Constant.ptr());;
		if ((_134617_left < 0LL)) {
			return;;
		};
		jule::Str _135117_s = _204461834_ReadStr(_133330_d.get()._field_Constant.ptr());;
		jule::I64 _135221_right = 0LL;;
		if ((_133352_r == nullptr)) {
			_135221_right=static_cast<jule::I64>(static_cast<jule::I64>(_135117_s.len()));
		} else {
			_135221_right=static_cast<jule::I64>(_204463270_AsI64(_133352_r.get()._field_Constant.ptr()));
		};
		if ((_134617_left > _135221_right)) {
			return;;
		};
		_20447b695_SetStr(_133330_d.get()._field_Constant.ptr(), _135117_s.slice(_134617_left,_135221_right));
		_133330_d.get()._field_Decl=true;
	} else {
		_133330_d.get()._field_Constant=nullptr;
	};
}



inline void _20508e175_checkSlicing(_2050816b7_Eval* _self_, jule::Ptr<_20507eb49_Data>& _136936_d, jule::Ptr<_20507eb49_Data>& _136947_l, jule::Ptr<_20507eb49_Data>& _136958_r, jule::Ptr<_20434d105_SlicingExpr>& _136969_s) {
	{
		
		if ((_2050ad716_Arr(_136936_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db4b2a57:;
			{
				_20508d84a_slicingArr(&(*_self_), _136936_d);
				return;;
			}
		}
		else if ((_2050ad97a_Slc(_136936_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db4b2ace:;
			{
				return;;
			}
		}
		else if ((_2050aca01_Prim(_136936_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db4b2b56:;
			{
				jule::Ptr<_2050b03b6_Prim> _137717_prim = _2050aca01_Prim(_136936_d.get()._field_Kind.ptr());;
				{
					
					if (_2050b35ea_IsStr(_137717_prim.ptr())) {
						_case_begin_1db4b5362:;
						{
							_20508dc13_slicingStr(&(*_self_), _136936_d,_136947_l,_136958_r);
							return;;
						}
					}
					_match_end_1db4b52b8:;
				};
			}
		}
		_match_end_1db4b2925:;
	};
	_205081bc3_pushErr(&(*_self_), _136969_s.get()._field_Token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_136936_d.get()._field_Kind.ptr()))}));
}



inline jule::Ptr<_20507eb49_Data> _20508e483_evalSlicing(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_20434d105_SlicingExpr> _138835_s) {
	jule::Ptr<_20507eb49_Data> _138917_d = _20509b9bd_evalExprKind(_self_, _138835_s.get()._field_Expr.get()._field_Kind);;
	if ((_138917_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_20507eb49_Data> _139418_l;;
	jule::Ptr<_20507eb49_Data> _139425_r;;
	std::tie(_139418_l,_139425_r) = _20508d5c5_evalSlicingExprs(_self_, _138835_s);
	if ((_139418_l == nullptr)) {
		return _138917_d;
	};
	_138917_d.get()._field_Decl=false;
	_20508e175_checkSlicing(_self_.ptr(), _138917_d,_139418_l,_139425_r,_138835_s);
	if (_20508050c_IsConst(_138917_d.ptr())) {
		_138917_d.get()._field_Decl=false;
		_138917_d.get()._field_Model=static_cast<jule::Any>(_138917_d.get()._field_Constant);
	} else if (_138917_d.get()._field_Decl) {
		_138917_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_204ec2d34_SlicingExprModel> _141221_model = jule::new_ptr<_204ec2d34_SlicingExprModel>(_204ec2d34_SlicingExprModel{._field_Token=_138835_s.get()._field_Token, ._field_Expr=_138917_d.get()._field_Model, ._field_Left=_139418_l.get()._field_Model, });;
		if ((_139425_r != nullptr)) {
			_141221_model.get()._field_Right=_139425_r.get()._field_Model;
		};
		_138917_d.get()._field_Model=static_cast<jule::Any>(_141221_model);
	};
	return _138917_d;
}



inline void _20508e84b_castPtr(_2050816b7_Eval* _self_, jule::Ptr<_2050aa8de_TypeKind> _142530_t, jule::Ptr<_20507eb49_Data> _142548_d, jule::Ptr<_202b89679_Token> _142558_errorToken) {
	_142548_d.get()._field_Constant=nullptr;
	jule::Ptr<_2050b3b4a_Sptr> _142713_sptr = _2050acc65_Sptr(_142548_d.get()._field_Kind.ptr());;
	if ((_142713_sptr != nullptr)) {
		if ((!(_2050ab0e8_Equals(_2050acec9_Ptr(_142530_t.ptr()).get()._field_Elem, _142713_sptr.get()._field_Elem)))) {
			_205081bc3_pushErr(&(*_self_), _142558_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_142548_d.get()._field_Kind.ptr())),jule::Any(_2050aacda_Str(_142530_t.ptr()))}));
		};
		return;;
	};
	if ((!(_20508260d_isUnsafe(&(*_self_))))) {
		_205081bc3_pushErr(&(*_self_), _142558_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2050b03b6_Prim> _144013_prim = _2050aca01_Prim(_142548_d.get()._field_Kind.ptr());;
	if (((_2050acec9_Ptr(_142548_d.get()._field_Kind.ptr()) == nullptr) && ((_144013_prim == nullptr) || (!(_204ebe308_IsInt(_2050b0729_Str(_144013_prim.ptr()))))))) {
		_205081bc3_pushErr(&(*_self_), _142558_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_142548_d.get()._field_Kind.ptr())),jule::Any(_2050aacda_Str(_142530_t.ptr()))}));
	};
}



inline void _20508ec14_castStruct(_2050816b7_Eval* _self_, jule::Ptr<_2050aa8de_TypeKind> _144633_t, jule::Ptr<_20507eb49_Data> _144651_d, jule::Ptr<_202b89679_Token> _144661_errorToken) {
	_144651_d.get()._field_Constant=nullptr;
	jule::Ptr<_204ece8e0_Trait> _144817_tr = _2050ae1b7_Trait(_144651_d.get()._field_Kind.ptr());;
	if ((_144817_tr == nullptr)) {
		_205081bc3_pushErr(&(*_self_), _144661_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_144651_d.get()._field_Kind.ptr())),jule::Any(_2050aacda_Str(_144633_t.ptr()))}));
		return;;
	};
	jule::Ptr<_20435cc5d_StructIns> _145417_s = _2050ade53_Struct(_144633_t.ptr());;
	_1db4c4096_pushReference(&(*_self_), _145417_s);
	if ((!(_2043220c9_IsImplements(_145417_s.get()._field_Decl.ptr(), _144817_tr)))) {
		_205081bc3_pushErr(&(*_self_), _144661_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_144651_d.get()._field_Kind.ptr())),jule::Any(_2050aacda_Str(_144633_t.ptr()))}));
	};
}



inline void _2050900cc_castRef(_2050816b7_Eval* _self_, jule::Ptr<_2050aa8de_TypeKind> _146230_t, jule::Ptr<_20507eb49_Data> _146248_d, jule::Ptr<_202b89679_Token> _146258_errorToken) {
	_146248_d.get()._field_Constant=nullptr;
	jule::Ptr<_2050b3b4a_Sptr> _146417_sptr = _2050acc65_Sptr(_146230_t.ptr());;
	jule::Ptr<_2050b71ae_Ptr> _146617_ptr = _2050acec9_Ptr(_146248_d.get()._field_Kind.ptr());;
	if (((_146617_ptr != nullptr) && _2050ab0e8_Equals(_146417_sptr.get()._field_Elem, _146617_ptr.get()._field_Elem))) {
		if ((!(_20508260d_isUnsafe(&(*_self_))))) {
			_205081bc3_pushErr(&(*_self_), _146258_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_2050ade53_Struct(_146417_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_20508ec14_castStruct(&(*_self_), _146417_sptr.get()._field_Elem,_146248_d,_146258_errorToken);
		return;;
	};
	_205081bc3_pushErr(&(*_self_), _146258_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_146248_d.get()._field_Kind.ptr())),jule::Any(_2050aacda_Str(_146230_t.ptr()))}));
}



inline void _205090495_castSlc(_2050816b7_Eval* _self_, jule::Ptr<_2050aa8de_TypeKind> _148430_t, jule::Ptr<_20507eb49_Data> _148448_d, jule::Ptr<_202b89679_Token> _148458_errorToken) {
	_148448_d.get()._field_Constant=nullptr;
	if ((_2050ad23d_Enum(_148448_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_2050aca01_Prim(_2050ad23d_Enum(_148448_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_2050b35ea_IsStr(_2050aca01_Prim(_2050ad23d_Enum(_148448_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_205081bc3_pushErr(&(*_self_), _148458_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_148448_d.get()._field_Kind.ptr())),jule::Any(_2050aacda_Str(_148430_t.ptr()))}));
			return;;
		};
	} else if (((_2050aca01_Prim(_148448_d.get()._field_Kind.ptr()) == nullptr) || (!(_2050b35ea_IsStr(_2050aca01_Prim(_148448_d.get()._field_Kind.ptr()).ptr()))))) {
		_205081bc3_pushErr(&(*_self_), _148458_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_148448_d.get()._field_Kind.ptr())),jule::Any(_2050aacda_Str(_148430_t.ptr()))}));
		return;;
	};
	_148430_t=_2050ad97a_Slc(_148430_t.ptr()).get()._field_Elem;
	jule::Ptr<_2050b03b6_Prim> _149713_prim = _2050aca01_Prim(_148430_t.ptr());;
	if (((_149713_prim == nullptr) || ((!(_2050b1bc0_IsU8(_149713_prim.ptr()))) && (!(_2050b16e7_IsI32(_149713_prim.ptr())))))) {
		_205081bc3_pushErr(&(*_self_), _148458_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_148448_d.get()._field_Kind.ptr())),jule::Any(_2050aacda_Str(_148430_t.ptr()))}));
	};
}



inline void _2050907b4_castStr(_2050816b7_Eval* _self_, jule::Ptr<_20507eb49_Data> _150330_d, jule::Ptr<_202b89679_Token> _150340_errorToken) {
	_150330_d.get()._field_Constant=nullptr;
	if ((_2050ad23d_Enum(_150330_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_204ed1a35_Enum> _150621_e = _2050ad23d_Enum(_150330_d.get()._field_Kind.ptr());;
		if (((_2050aca01_Prim(_150621_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _2050b35ea_IsStr(_2050aca01_Prim(_150621_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_2050aca01_Prim(_150330_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_2050b03b6_Prim> _151317_prim = _2050aca01_Prim(_150330_d.get()._field_Kind.ptr());;
		if (((!(_2050b1bc0_IsU8(_151317_prim.ptr()))) && (!(_2050b16e7_IsI32(_151317_prim.ptr()))))) {
			_205081bc3_pushErr(&(*_self_), _150340_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_2050aacda_Str(_150330_d.get()._field_Kind.ptr()))}));
		};
		return;;
	};
	if ((_2050ad97a_Slc(_150330_d.get()._field_Kind.ptr()) == nullptr)) {
		_205081bc3_pushErr(&(*_self_), _150340_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_2050aacda_Str(_150330_d.get()._field_Kind.ptr()))}));
		return;;
	};
	jule::Ptr<_2050aa8de_TypeKind> _152517_t = _2050ad97a_Slc(_150330_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_2050b03b6_Prim> _152613_prim = _2050aca01_Prim(_152517_t.ptr());;
	if (((_152613_prim == nullptr) || ((!(_2050b1bc0_IsU8(_152613_prim.ptr()))) && (!(_2050b16e7_IsI32(_152613_prim.ptr())))))) {
		_205081bc3_pushErr(&(*_self_), _150340_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_2050aacda_Str(_150330_d.get()._field_Kind.ptr()))}));
	};
}



inline void _205090b7c_castInt(_2050816b7_Eval* _self_, jule::Ptr<_2050aa8de_TypeKind> _153230_t, jule::Ptr<_20507eb49_Data> _153248_d, jule::Ptr<_202b89679_Token> _153258_errorToken) {
	if (_20508050c_IsConst(_153248_d.ptr())) {
		jule::Ptr<_2050b03b6_Prim> _153417_prim = _2050aca01_Prim(_153230_t.ptr());;
		{
			
			if (_204ebe094_IsSigInt(_153417_prim.get()._field_Kind)) {
				_case_begin_1db4e0db5:;
				{
					_2044650eb_SetI64(_153248_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_204463270_AsI64(_153248_d.get()._field_Constant.ptr())));
				}
			}
			else if (_204ebe1c6_IsUnsigInt(_153417_prim.get()._field_Kind)) {
				_case_begin_1db4e0e3c:;
				{
					_204477c13_SetU64(_153248_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_2044573b8_AsU64(_153248_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1db4e0d0a:;
		};
	} else {
		_153248_d.get()._field_Constant=nullptr;
	};
	if ((_2050ad23d_Enum(_153248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_204ed1a35_Enum> _154617_e = _2050ad23d_Enum(_153248_d.get()._field_Kind.ptr());;
		if (_204ebe56c_IsNum(_2050aacda_Str(_154617_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_2050acc65_Sptr(_153248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_2050b03b6_Prim> _155317_prim = _2050aca01_Prim(_153230_t.ptr());;
		if ((!(_2050b3122_IsUintptr(_155317_prim.ptr())))) {
			_205081bc3_pushErr(&(*_self_), _153258_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_153248_d.get()._field_Kind.ptr())),jule::Any(_2050aacda_Str(_153230_t.ptr()))}));
		};
		return;;
	};
	if ((_2050acec9_Ptr(_153248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_2050b03b6_Prim> _156017_prim = _2050aca01_Prim(_153230_t.ptr());;
		if (_2050b3122_IsUintptr(_156017_prim.ptr())) {
		} else if ((!(_20508260d_isUnsafe(&(*_self_))))) {
			_205081bc3_pushErr(&(*_self_), _153258_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_2050b03b6_Prim> _156913_prim = _2050aca01_Prim(_153248_d.get()._field_Kind.ptr());;
	if (((_156913_prim != nullptr) && _204ebe56c_IsNum(_2050b0729_Str(_156913_prim.ptr())))) {
		return;;
	};
	_205081bc3_pushErr(&(*_self_), _153258_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_153248_d.get()._field_Kind.ptr())),jule::Any(_2050aacda_Str(_153230_t.ptr()))}));
}



inline void _205091045_castNum(_2050816b7_Eval* _self_, jule::Ptr<_2050aa8de_TypeKind> _157730_t, jule::Ptr<_20507eb49_Data> _157748_d, jule::Ptr<_202b89679_Token> _157758_errorToken) {
	if (_20508050c_IsConst(_157748_d.ptr())) {
		jule::Ptr<_2050b03b6_Prim> _157917_prim = _2050aca01_Prim(_157730_t.ptr());;
		{
			
			if (_204ebe43a_IsFloat(_157917_prim.get()._field_Kind)) {
				_case_begin_1db4ea81a:;
				{
					_20447c223_SetF64(_157748_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_20446423d_AsF64(_157748_d.get()._field_Constant.ptr())));
				}
			}
			else if (_204ebe094_IsSigInt(_157917_prim.get()._field_Kind)) {
				_case_begin_1db4ea892:;
				{
					_2044650eb_SetI64(_157748_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_204463270_AsI64(_157748_d.get()._field_Constant.ptr())));
				}
			}
			else if (_204ebe1c6_IsUnsigInt(_157917_prim.get()._field_Kind)) {
				_case_begin_1db4ea919:;
				{
					_204477c13_SetU64(_157748_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_2044573b8_AsU64(_157748_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1db4ea74e:;
		};
	} else {
		_157748_d.get()._field_Constant=nullptr;
	};
	if ((_2050ad23d_Enum(_157748_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_204ed1a35_Enum> _159317_e = _2050ad23d_Enum(_157748_d.get()._field_Kind.ptr());;
		if (_204ebe56c_IsNum(_2050aacda_Str(_159317_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_2050b03b6_Prim> _159913_prim = _2050aca01_Prim(_157748_d.get()._field_Kind.ptr());;
	if (((_159913_prim != nullptr) && _204ebe56c_IsNum(_2050b0729_Str(_159913_prim.ptr())))) {
		return;;
	};
	_205081bc3_pushErr(&(*_self_), _157758_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_157748_d.get()._field_Kind.ptr())),jule::Any(_2050aacda_Str(_157730_t.ptr()))}));
}



inline void _20509140d_castPrim(_2050816b7_Eval* _self_, jule::Ptr<_2050aa8de_TypeKind> _160731_t, jule::Ptr<_20507eb49_Data> _160749_d, jule::Ptr<_202b89679_Token> _160759_errorToken) {
	jule::Ptr<_2050b03b6_Prim> _160813_prim = _2050aca01_Prim(_160731_t.ptr());;
	{
		
		if (_2050b385e_IsAny(_160813_prim.ptr())) {
			_case_begin_1db501c2d:;
			{
				_160749_d.get()._field_Constant=nullptr;
			}
		}
		else if (_2050b35ea_IsStr(_160813_prim.ptr())) {
			_case_begin_1db502316:;
			{
				_2050907b4_castStr(&(*_self_), _160749_d,_160759_errorToken);
			}
		}
		else if (_204ebe308_IsInt(_2050b0729_Str(_160813_prim.ptr()))) {
			_case_begin_1db50237c:;
			{
				_205090b7c_castInt(&(*_self_), _160731_t,_160749_d,_160759_errorToken);
			}
		}
		else if (_204ebe56c_IsNum(_2050b0729_Str(_160813_prim.ptr()))) {
			_case_begin_1db5023e3:;
			{
				_205091045_castNum(&(*_self_), _160731_t,_160749_d,_160759_errorToken);
			}
		}
		else {
			_case_begin_1db5022a0:;
			{
				_205081bc3_pushErr(&(*_self_), _160759_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_160731_t.ptr()))}));
			}
		}
		_match_end_1db502239:;
	};
}



inline void _20509172c_castConstant(_2050816b7_Eval* _self_, jule::Ptr<_2050aa8de_TypeKind>& _162436_t, jule::Ptr<_20507eb49_Data>& _162455_d) {
	if (((_162455_d == nullptr) || (!(_20508050c_IsConst(_162455_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_2050b03b6_Prim> _162813_prim = _2050aca01_Prim(_162436_t.ptr());;
	_2050a7aa6_castConstByType(_162813_prim.get()._field_Kind,_162455_d);
	_162455_d.get()._field_Model=static_cast<jule::Any>(_162455_d.get()._field_Constant);
}



inline void _205091ae5_castTypeEnum(_2050816b7_Eval* _self_, jule::Ptr<_2050aa8de_TypeKind>& _163336_t, jule::Ptr<_20507eb49_Data>& _163355_d, jule::Ptr<_202b89679_Token>& _163370_errorToken) {
	jule::I64 _163413_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_20501e05b_checkTypeCompatibility((*_self_)._field_s, _163355_d.get()._field_Kind,_163336_t,_163370_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_163413_n);
		_205081bc3_pushErr(&(*_self_), _163370_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_163355_d.get()._field_Kind.ptr())),jule::Any(_2050aacda_Str(_163336_t.ptr()))}));
	};
	_163355_d.get()._field_Constant=nullptr;
}



inline void _205091ead_castTypeEnumT(_2050816b7_Eval* _self_, jule::Ptr<_2050aa8de_TypeKind>& _164237_t, jule::Ptr<_20507eb49_Data>& _164256_d, jule::Ptr<_202b89679_Token>& _164271_errorToken) {
	jule::I64 _164313_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_20501e05b_checkTypeCompatibility((*_self_)._field_s, _164237_t,_164256_d.get()._field_Kind,_164271_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_164313_n);
		_205081bc3_pushErr(&(*_self_), _164271_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_164256_d.get()._field_Kind.ptr())),jule::Any(_2050aacda_Str(_164237_t.ptr()))}));
	};
	_164256_d.get()._field_Constant=nullptr;
}



inline jule::Ptr<_20507eb49_Data> _20509240e_evalCastByTypeNData(_2050816b7_Eval* _self_, jule::Ptr<_2050aa8de_TypeKind> _165142_t, jule::Ptr<_20507eb49_Data> _165160_d, jule::Ptr<_202b89679_Token> _165174_errorToken) {
	if (((_165160_d != nullptr) && _165160_d.get()._field_Decl)) {
		_205081bc3_pushErr(&(*_self_), _165174_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (_205080034_IsNil(_165160_d.ptr())) {
			_case_begin_1db50dd4a:;
			{
				if ((!(_2050ac050_NilCompatible(_165142_t.ptr())))) {
					_205081bc3_pushErr(&(*_self_), _165174_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5)),jule::Any(_2050aacda_Str(_165142_t.ptr()))}));
				};
				_165160_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_2050aca01_Prim(_165160_d.get()._field_Kind.ptr()) != nullptr) && _2050b385e_IsAny(_2050aca01_Prim(_165160_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1db50e697:;
			{
				if ((_2050ad23d_Enum(_165142_t.ptr()) != nullptr)) {
					_205081bc3_pushErr(&(*_self_), _165174_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_205081ee2_pushSugggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_2050ad4a2_TypeEnum(_165142_t.ptr()) != nullptr)) {
					_205081bc3_pushErr(&(*_self_), _165174_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
				_165160_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_2050ad4a2_TypeEnum(_165160_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db50dc29:;
			{
				_205091ae5_castTypeEnum(&(*_self_), _165142_t,_165160_d,_165174_errorToken);
			}
		}
		else if ((_2050ad4a2_TypeEnum(_165142_t.ptr()) != nullptr)) {
			_case_begin_1db50d993:;
			{
				_205091ead_castTypeEnumT(&(*_self_), _165142_t,_165160_d,_165174_errorToken);
			}
		}
		else if ((_2050acec9_Ptr(_165142_t.ptr()) != nullptr)) {
			_case_begin_1db50da09:;
			{
				_20508e84b_castPtr(&(*_self_), _165142_t,_165160_d,_165174_errorToken);
			}
		}
		else if ((_2050acc65_Sptr(_165142_t.ptr()) != nullptr)) {
			_case_begin_1db50e7eb:;
			{
				_2050900cc_castRef(&(*_self_), _165142_t,_165160_d,_165174_errorToken);
			}
		}
		else if ((_2050ad97a_Slc(_165142_t.ptr()) != nullptr)) {
			_case_begin_1db50e862:;
			{
				_205090495_castSlc(&(*_self_), _165142_t,_165160_d,_165174_errorToken);
			}
		}
		else if ((_2050ade53_Struct(_165142_t.ptr()) != nullptr)) {
			_case_begin_1db50e8c8:;
			{
				_20508ec14_castStruct(&(*_self_), _165142_t,_165160_d,_165174_errorToken);
			}
		}
		else if ((_2050aca01_Prim(_165142_t.ptr()) != nullptr)) {
			_case_begin_1db50e93e:;
			{
				_20509140d_castPrim(&(*_self_), _165142_t,_165160_d,_165174_errorToken);
				_20509172c_castConstant(&(*_self_), _165142_t,_165160_d);
			}
		}
		else {
			_case_begin_1db50d872:;
			{
				_205081bc3_pushErr(&(*_self_), _165174_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_165142_t.ptr()))}));
				_165160_d=nullptr;
			}
		}
		_match_end_1db50d80b:;
	};
	if ((_165160_d == nullptr)) {
		return nullptr;
	};
	_165160_d.get()._field_Mutable=(_165160_d.get()._field_Mutable || ((!(_2050abcdb_Mutable(_165160_d.get()._field_Kind.ptr()))) && _2050abcdb_Mutable(_165142_t.ptr())));
	_165160_d.get()._field_Lvalue=false;
	_165160_d.get()._field_Decl=false;
	if (((_2050ad23d_Enum(_165160_d.get()._field_Kind.ptr()) == nullptr) || (!(_2050ab0e8_Equals(_2050ad23d_Enum(_165160_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _165142_t))))) {
		_2050a706c_applyCastKind(_165160_d,_165142_t);
		_165160_d.get()._field_Model.operator jule::Ptr<_204ec1eba_CastingExprModel>().get()._field_Token=_165174_errorToken;
	} else {
		_165160_d.get()._field_Kind=_165142_t;
	};
	_165160_d.get()._field_untyped=false;
	if (_20508050c_IsConst(_165160_d.ptr())) {
		_165160_d.get()._field_Constant.get()._field_Kind=_2050aca01_Prim(_165142_t.ptr()).get()._field_Kind;
	};
	return _165160_d;
}



inline jule::Ptr<_20507eb49_Data> _205092860_evalCastT(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_2050aa8de_TypeKind>& _171634_t, jule::Ptr<_204345a8c_Expr>& _171653_e, jule::Ptr<_202b89679_Token>& _171668_et) {
	jule::Ptr<_2050aa8de_TypeKind> _171717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_171717_prefix;
	});;
	if ((_2050ad97a_Slc(_171634_t.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _171653_e.get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_20434c17b_SliceExpr>>()) {
				_case_begin_1db51d72d:;
				{
					_self_.get()._field_prefix=_171634_t;
				}
			}
			_match_end_1db51c760:;
		};
	};
	jule::Ptr<_20507eb49_Data> _172617_d = _20509b9bd_evalExprKind(_self_, _171653_e.get()._field_Kind);;
	if (((_172617_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _172617_d;
	};
	return _20509240e_evalCastByTypeNData(_self_.ptr(), _171634_t,_172617_d,_171668_et);
}



inline jule::Ptr<_20507eb49_Data> _205092b6d_evalCast(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_2043486b6_CastExpr> _173332_c) {
	jule::Ptr<_2050aea47_TypeSymbol> _173417_t = _204ec890b_buildType(_173332_c.get()._field_Kind);;
	jule::Bool _173513_ok = _20501be7c_checkType(_self_.get()._field_s, _173417_t,_self_.get()._field_lookup);;
	if ((!(_173513_ok))) {
		return nullptr;
	};
	return _205092860_evalCastT(_self_, _173417_t.get()._field_Kind,_173332_c.get()._field_Expr,_173332_c.get()._field_Kind.get()._field_Token);
}



inline jule::Ptr<_20507eb49_Data> _205092e7b_evalNsSelection(_2050816b7_Eval* _self_, jule::Ptr<_204348a6d_NsSelectionExpr> _174234_s) {
	jule::Str _174313_path = _2050c34d9_buildLinkPathByTokens(_174234_s.get()._field_Ns);;
	jule::Ptr<_20500ae16_ImportInfo> _174417_imp = _2050c6520_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._2050c49d5_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_20500ae16_ImportInfo>)>([=](jule::Ptr<_20500ae16_ImportInfo> _174452_imp) mutable -> jule::Bool {
		if (((_174234_s.get()._field_Ns.len() == 1LL) && (_174452_imp.get()._field_Alias == _174313_path))) {
			return true;
		};
		return ((_174452_imp.get()._field_LinkPath == _174313_path) && _20500da73_isAccessibleViaSelection(_174452_imp.ptr()));
	}));;
	if ((_174417_imp == nullptr)) {
		_205081bc3_pushErr(&(*_self_), _174234_s.get()._field_Ns[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_174313_path)}));
		return nullptr;
	};
	jule::Trait<_2050c6520_Lookup> _175617_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_2050c6520_Lookup>(_174417_imp, 1);
	;
	_205082399_disallowBuiltin(&(*_self_));
	jule::Any _176117_def = _205084bd7_getDef(&(*_self_), _174234_s.get()._field_Ident.get()._field_Kind,false);;
	_2050821bd_allowBuiltin(&(*_self_));
	(*_self_)._field_lookup=_175617_lookup;
	jule::Ptr<_20507eb49_Data> _176417_d = _2050886be_evalDef(&(*_self_), jule::Any(_176117_def),_174234_s.get()._field_Ident);;
	return _176417_d;
}



inline jule::Ptr<_20507eb49_Data> _2050933cc_evalStructLitExplicit(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_20435cc5d_StructIns> _176845_s, jule::Slice<jule::Ptr<_204345a8c_Expr>> _176913_exprs, jule::Ptr<_202b89679_Token> _176933_errorToken) {
	jule::Bool _177013_ok = _2050180bb_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_176845_s.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_176845_s.get()._field_Generics.len()),_176933_errorToken);;
	if ((!(_177013_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _176845_s.get()._field_Decl))) {
		_205081bc3_pushErr(_self_.ptr(), _176933_errorToken,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_176845_s.get()._field_Decl.get()._field_Ident)}));
	};
	_1db4c4096_pushReference(_self_.ptr(), _176845_s);
	_205086ac9_checkDeprecated(_self_.ptr(), _176845_s.get()._field_Decl.get()._field_Directives,_176933_errorToken);
	_20506e1cc_structLitChecker _178317_slc = _20506e1cc_structLitChecker{._field_e=_self_, ._field_errorToken=_176933_errorToken, ._field_s=_176845_s, };;
	_205070772_check(&_178317_slc, _176913_exprs);
	return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_176845_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec1ae1_StructLitExprModel>(_204ec1ae1_StructLitExprModel{._field_Strct=_176845_s, ._field_Args=_178317_slc._field_args})), });
}



inline jule::Ptr<_20507eb49_Data> _2050936da_evalStructLit(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_20434ac4b_StructLit> _180237_lit) {
	jule::Ptr<_2050aea47_TypeSymbol> _180317_t = _204ec890b_buildType(_180237_lit.get()._field_Kind);;
	jule::Bool _180413_ok = _20501be7c_checkType(_self_.get()._field_s, _180317_t,_self_.get()._field_lookup);;
	if ((!(_180413_ok))) {
		return nullptr;
	};
	jule::Ptr<_20435cc5d_StructIns> _180917_s = _2050ade53_Struct(_180317_t.get()._field_Kind.ptr());;
	if ((_180917_s == nullptr)) {
		if ((_2050acc65_Sptr(_180317_t.get()._field_Kind.ptr()) != nullptr)) {
			_180917_s=_2050ade53_Struct(_2050acc65_Sptr(_180317_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_180917_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_205081bc3_pushErr(_self_.ptr(), _180237_lit.get()._field_Kind.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_20507eb49_Data> _182217_d = _2050933cc_evalStructLitExplicit(_self_, _180917_s,_180237_lit.get()._field_Exprs,_180237_lit.get()._field_Kind.get()._field_Token);;
	if ((_2050acc65_Sptr(_180317_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_204ec1ae1_StructLitExprModel> _182421_model = _182217_d.get()._field_Model.operator jule::Ptr<_204ec1ae1_StructLitExprModel>();;
		_2050a592d_makeStructLitAlloc(_182217_d,_182421_model);
	};
	return _182217_d;
}



inline _2050b8e19_typeChecker _20509394e_typeChecker(_2050816b7_Eval* _self_) {
	return _20501ad6b_typeChecker((*_self_)._field_s, (*_self_)._field_lookup,nullptr,nullptr);
}



inline jule::Ptr<_20507eb49_Data> _205093c5c_evalType(_2050816b7_Eval* _self_, jule::Ptr<_20434156b_TypeDecl> _183431_t) {
	jule::Ptr<_2050aea47_TypeSymbol> _183517_tk = _204ec890b_buildType(_183431_t);;
	jule::Bool _183613_ok = _20501be7c_checkType((*_self_)._field_s, _183517_tk,(*_self_)._field_lookup);;
	if ((!(_183613_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=_183517_tk.get()._field_Kind, ._field_Model=static_cast<jule::Any>(_183517_tk.get()._field_Kind), ._field_Decl=true, });
}



inline void _20509407b_callTypeFn(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_204349a6e_FnCallExpr>& _184735_fc, jule::Ptr<_20507eb49_Data>& _184757_d) {
	if ((_184735_fc.get()._field_Args.len() < 1LL)) {
		_205081bc3_pushErr(_self_.ptr(), _184735_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_184735_fc.get()._field_Args.len() > 1LL)) {
		_205081bc3_pushErr(_self_.ptr(), _184735_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	} else if (_184735_fc.get()._field_IsCo) {
		_205081bc3_pushErr(_self_.ptr(), _184735_fc.get()._field_Token,jule::Str("concurrent calls are not allowed for type-cast calls", 52),jule::Slice<jule::Any>());
		_184757_d=nullptr;
		return;;
	} else if ((_184735_fc.get()._field_Exception != nullptr)) {
		_205081bc3_pushErr(_self_.ptr(), _184735_fc.get()._field_Token,jule::Str("exceptionals are not supported for type-cast call", 49),jule::Slice<jule::Any>());
		_184757_d=nullptr;
		return;;
	};
	if ((_184735_fc.get()._field_Args.len() > 0LL)) {
		jule::Ptr<_204345a8c_Expr> _186321_arg = _184735_fc.get()._field_Args[0LL];;
		_184757_d=_205092860_evalCastT(_self_, _184757_d.get()._field_Kind,_186321_arg,_186321_arg.get()._field_Token);
		return;;
	};
	if ((_184757_d != nullptr)) {
		_184757_d.get()._field_Decl=false;
	};
}



inline void _20509439a_callBuiltinFn(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_204349a6e_FnCallExpr>& _187338_fc, jule::Ptr<_20507eb49_Data>& _187360_d) {
	_187360_d=_2050adbde_Fn(_187360_d.get()._field_Kind.ptr()).get()._field_caller(_self_,_187338_fc,_187360_d);
	if ((_187360_d == nullptr)) {
		return;;
	};
	_187360_d.get()._field_Mutable=true;
}



inline void _2050946db_checkFnOfConcurrentCall(_2050816b7_Eval* _self_, jule::Ptr<_204ec7454_FnIns>& _188143_f, jule::Ptr<_202b89679_Token> _188154_errorToken) {
	if (_20508260d_isUnsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _188143_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1db540574:;
		if (it != expr.end()) {
			jule::Ptr<_204ec7267_ParamIns> &_188516_p = *it;
			{
				if (_204395b64_IsSelf(_188516_p.get()._field_Decl.ptr())) {
					if ((!(_204396e2e_IsRef(_188516_p.get()._field_Decl.ptr())))) {
						_205081bc3_pushErr(&(*_self_), _188154_errorToken,jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97),jule::Slice<jule::Any>());
						_205081ee2_pushSugggestion(&(*_self_), jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99),jule::Slice<jule::Any>());
					};
				};
				if (_188516_p.get()._field_Decl.get()._field_Reference) {
					_205081bc3_pushErr(&(*_self_), _188154_errorToken,jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96),jule::Slice<jule::Any>());
					_205081ee2_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1db540574:;
			++it;
			goto _iter_begin_1db540574;
		}
		_iter_end_1db540574:;
	};
}



inline void _205094ad7_processExceptionalHandler(_2050816b7_Eval* _self_, jule::Ptr<_204ec7454_FnIns>& _190049_f, jule::Ptr<_204349a6e_FnCallExpr>& _190065_fc, jule::Ptr<_20507eb49_Data>& _190087_d) {
	jule::Bool _190113_resultNeeded = ((!(_2043a5a53_IsVoid(_190049_f.get()._field_Decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_204ee42a6_scopeChecker> _190217_csc = nullptr;;
	jule::Ptr<_204edc645_Scope> _190317_ch = nullptr;;
	jule::Ptr<_204ec21a7_FnCallExprModel> _190517_model = _190087_d.get()._field_Model.operator jule::Ptr<_204ec21a7_FnCallExprModel>();;
	jule::Ptr<_204ee42a6_scopeChecker> _190917_sc = (*_self_)._field_lookup.operator jule::Ptr<_204ee42a6_scopeChecker>();;
	_190217_csc=_2050042d8_newChildChecker(_190917_sc);
	if (_190113_resultNeeded) {
		_190217_csc.get()._field_result=_190049_f;
	};
	_190317_ch=_204ee8b6d_getChild(_190917_sc.ptr());
	_190065_fc.get()._field_Exception.get()._field_Parent=_190917_sc.get()._field_tree;
	_190217_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_190217_csc.get()._field_table.get()._field_Vars,1);_190217_csc.get()._field_table.get()._field_Vars.__push(_2050a5c6e_buildErrorVar(_190317_ch,_190065_fc));;
	_204ee9036_checkChildSsc(_190917_sc, _190065_fc.get()._field_Exception,_190317_ch,_190217_csc);
	_190517_model.get()._field_Assigned=_190113_resultNeeded;
	_190517_model.get()._field_Except=_190317_ch;
	if ((_190113_resultNeeded && (_190217_csc.get()._field_result != nullptr))) {
		_205081bc3_pushErr(&(*_self_), _190065_fc.get()._field_Token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _205094e17_callFn(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_204349a6e_FnCallExpr>& _192731_fc, jule::Ptr<_20507eb49_Data>& _192753_d) {
	jule::Ptr<_204ec7454_FnIns> _192817_f = _2050adbde_Fn(_192753_d.get()._field_Kind.ptr());;
	if (_204ec7641_IsBuiltin(_192817_f.ptr())) {
		_20509439a_callBuiltinFn(_self_, _192731_fc,_192753_d);
		return;;
	};
	if ((_205082872_isGlobal(_self_.ptr()) && _192817_f.get()._field_Decl.get()._field_Exceptional)) {
		_205081bc3_pushErr(_self_.ptr(), _192731_fc.get()._field_Token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_205081ee2_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_192753_d=nullptr;
		return;;
	};
	if (((!(_2043a626d_IsMethod(_192817_f.get()._field_Decl.ptr()))) && _2050c263c_hasDirective(_192817_f.get()._field_Decl.get()._field_Directives,jule::Str("test", 4)))) {
		_205081bc3_pushErr(_self_.ptr(), _192731_fc.get()._field_Token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_192753_d=nullptr;
		return;;
	};
	if (((((!(_192753_d.get()._field_Mutable)) && _2043a626d_IsMethod(_192817_f.get()._field_Decl.ptr())) && (!(_192817_f.get()._field_Decl.get()._field_Statically))) && _192817_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_205081bc3_pushErr(_self_.ptr(), _192731_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_20508260d_isUnsafe(_self_.ptr()))) && _192817_f.get()._field_Decl.get()._field_Unsafety)) {
		_205081bc3_pushErr(_self_.ptr(), _192731_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _195217_dynamicAnnotation = (((_192817_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_192817_f.get()._field_Generics.len() == 0LL)) && (_192817_f.get()._field_Params.len() > 0LL));;
	if (_195217_dynamicAnnotation) {
		_192817_f.get()._field_Generics=jule::Slice<jule::Ptr<_2050a91b2_InsGeneric>>::alloc(_192817_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_192817_f.get()._field_Generics.len() != _192817_f.get()._field_Decl.get()._field_Generics.len())) {
		_2050180bb_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_192817_f.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_192817_f.get()._field_Generics.len()),_192731_fc.get()._field_Token);
		_192753_d=nullptr;
		return;;
	};
	jule::Ptr<_205014062_Sema> _196117_old = _self_.get()._field_s;;
	if ((_192817_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_192817_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_196117_old != _self_.get()._field_s)) {
			_196117_old.get()._field_errors=jule::append(_196117_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_196117_old;
	});;
	if ((!(_195217_dynamicAnnotation))) {
		if ((!(_192817_f.get()._field_reloaded))) {
			jule::Bool _197621_ok = _205020ce9_reloadFnInsTypes(_self_.get()._field_s, _192817_f);;
			_192817_f.get()._field_reloaded=true;
			if ((!(_197621_ok))) {
				_192753_d=nullptr;
				return;;
			};
		};
		jule::Ptr<_204ec7454_FnIns> _198321_existInstance = _2043949cb_appendInstance(_192817_f.get()._field_Decl.ptr(), _192817_f);;
		if ((_198321_existInstance != nullptr)) {
			_192817_f=_198321_existInstance;
		};
	} else {
		_20501e6dd_buildFnNonGenericTypeKinds(_self_.get()._field_s, _192817_f);
	};
	_20506b7c3_fnCallArgChecker _199117_fcac = _20506b7c3_fnCallArgChecker{._field_e=_self_, ._field_args=_192731_fc.get()._field_Args, ._field_errorToken=_192731_fc.get()._field_Token, ._field_f=_192817_f, ._field_dynamicAnnotation=_195217_dynamicAnnotation, };;
	jule::Bool _199817_ok = false;;
	if ((_192817_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		std::tie(_196117_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_196117_old);
		_199817_ok=_20506db8d_check(&_199117_fcac);
		std::tie(_196117_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_196117_old);
	} else {
		_199817_ok=_20506db8d_check(&_199117_fcac);
	};
	if (_195217_dynamicAnnotation) {
		if ((!(_199817_ok))) {
			_192753_d=nullptr;
			return;;
		};
		if ((!(_20508cb57_checkGenericFn(_self_, _192817_f,_192731_fc.get()._field_Token,_192753_d.get()._field_Model)))) {
			_192753_d=nullptr;
			return;;
		};
	};
	jule::Any _201817_callModel = _192753_d.get()._field_Model;;
	if (_2043a5a53_IsVoid(_192817_f.get()._field_Decl.ptr())) {
		_192753_d=_2050a726a_buildVoidData();
	} else {
		_192753_d.get()._field_Kind=_192817_f.get()._field_Result;
		_192753_d.get()._field_Lvalue=false;
	};
	jule::Ptr<_204ec21a7_FnCallExprModel> _202717_model = jule::new_ptr<_204ec21a7_FnCallExprModel>(_204ec21a7_FnCallExprModel{._field_Token=_192731_fc.get()._field_Token, ._field_Func=_192817_f, ._field_IsCo=_192731_fc.get()._field_IsCo, ._field_Expr=_201817_callModel, ._field_Args=_199117_fcac._field_argModels, });;
	_192753_d.get()._field_Model=static_cast<jule::Any>(_202717_model);
	_192753_d.get()._field_Mutable=true;
	if (_192817_f.get()._field_Decl.get()._field_Exceptional) {
		if (_192731_fc.get()._field_IsCo) {
			_205016c24_pushErr(_self_.get()._field_s.ptr(), _192731_fc.get()._field_Token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
			_205017043_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
		};
		{
			
			if (_204349dd2_Unhandled(_192731_fc.ptr())) {
				_case_begin_1db55ed9b:;
				{
					_205081bc3_pushErr(_self_.ptr(), _192731_fc.get()._field_Token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_205081ee2_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_20434a146_Ignored(_192731_fc.ptr())) {
				_case_begin_1db55ea5a:;
				{
					goto _match_end_1db55dad1;
				}
			}
			else {
				_case_begin_1db55db47:;
				{
					_205094ad7_processExceptionalHandler(_self_.ptr(), _192817_f,_192731_fc,_192753_d);
				}
			}
			_match_end_1db55dad1:;
		};
	} else if ((!(_204349dd2_Unhandled(_192731_fc.ptr())))) {
		_205081bc3_pushErr(_self_.ptr(), _192731_fc.get()._field_Token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
	if (_192731_fc.get()._field_IsCo) {
		_2050946db_checkFnOfConcurrentCall(_self_.ptr(), _202717_model.get()._field_Func,_192731_fc.get()._field_Token);
	};
}



inline jule::Ptr<_20507eb49_Data> _205095225_evalFnCall(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_204349a6e_FnCallExpr> _206234_fc) {
	jule::Ptr<_2050aa8de_TypeKind> _206317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_206317_prefix;
	});;
	{
		auto &_match_expr{ _206234_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_20434774d_IdentExpr>>()) {
			_case_begin_1db563113:;
			{
				if ((_206234_fc.get()._field_Expr.get()._field_Token.get()._field_Kind == jule::Str("error", 5))) {
					return _205166b87_builtinCallerError(_self_,_206234_fc);
				};
			}
		}
		_match_end_1db5630ad:;
	};
	jule::Ptr<_20507eb49_Data> _207617_d = _20509b9bd_evalExprKind(_self_, _206234_fc.get()._field_Expr.get()._field_Kind);;
	if ((_207617_d == nullptr)) {
		return nullptr;
	};
	if (_207617_d.get()._field_Decl) {
		_20509407b_callTypeFn(_self_, _206234_fc,_207617_d);
		return _207617_d;
	};
	if ((_2050adbde_Fn(_207617_d.get()._field_Kind.ptr()) == nullptr)) {
		_205081bc3_pushErr(_self_.ptr(), _206234_fc.get()._field_Token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_205094e17_callFn(_self_, _206234_fc,_207617_d);
	return _207617_d;
}



inline jule::Ptr<_20507eb49_Data> _2050955cc_evalEnumStatic(_2050816b7_Eval* _self_, jule::Ptr<_204ed1a35_Enum> _209537_enm, jule::Ptr<_202b89679_Token> _209549_ident) {
	jule::Ptr<_20507eb49_Data> _209617_d = jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_209537_enm, 3)}), });;
	jule::Ptr<_204ed1040_EnumItem> _210217_item = _204ed25e6_FindItem(_209537_enm.ptr(), _209549_ident.get()._field_Kind);;
	if ((_210217_item == nullptr)) {
		_205081bc3_pushErr(&(*_self_), _209549_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_209537_enm.get()._field_Ident),jule::Any(_209549_ident.get()._field_Kind)}));
	} else {
		_209617_d.get()._field_Constant=jule::new_ptr<_2044102b6_Const>((*(_210217_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_209617_d.get()._field_Model=static_cast<jule::Any>(_209617_d.get()._field_Constant);
		_2050a77ed_applyCastModelByEnum(_209617_d,_209537_enm);
	};
	return _209617_d;
}



inline jule::Ptr<_20507eb49_Data> _205095984_evalTypeEnumStatic(_2050816b7_Eval* _self_, jule::Ptr<_204ed3130_TypeEnum> _211441_enm, jule::Ptr<_202b89679_Token> _211457_ident) {
	jule::Ptr<_204ed2a69_TypeEnumItem> _211517_item = _204ed3b69_FindItem(_211441_enm.ptr(), _211457_ident.get()._field_Kind);;
	if ((_211517_item == nullptr)) {
		_205081bc3_pushErr(&(*_self_), _211457_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_211441_enm.get()._field_Ident),jule::Any(_211457_ident.get()._field_Kind)}));
		return nullptr;
	};
	{
		
		if ((_2050ad23d_Enum(_211517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db56bc65:;
			{
				return _20508526a__evalEnum(&(*_self_), _2050ad23d_Enum(_211517_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_2050ad4a2_TypeEnum(_211517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db56c5c3:;
			{
				return _205085930__evalTypeEnum(&(*_self_), _2050ad4a2_TypeEnum(_211517_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_2050ade53_Struct(_211517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db56b6d2:;
			{
				return _2050860e5__evalStruct(&(*_self_), _2050ade53_Struct(_211517_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else {
			_case_begin_1db56b616:;
			{
				jule::Ptr<_20507eb49_Data> _212821_d = jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=_211517_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_212821_d.get()._field_Model=static_cast<jule::Any>(_212821_d.get()._field_Kind);
				return _212821_d;
			}
		}
		_match_end_1db56a879:;
	};
}



inline jule::Ptr<_20507eb49_Data> _205095d3b_evalStructStatic(_2050816b7_Eval* _self_, jule::Ptr<_20435cc5d_StructIns> _213739_s, jule::Ptr<_202b89679_Token> _213754_ident) {
	jule::Ptr<_20507eb49_Data> _213817_d = jule::new_ptr<_20507eb49_Data>();;
	;
	jule::Ptr<_204ec707a_Fn> _214217_method = _204334a9d_FindMethod(_213739_s.ptr(), _213754_ident.get()._field_Kind,true);;
	if ((_214217_method != nullptr)) {
		if ((!(_2050173ea_isAccessibleDefine((*_self_)._field_s.ptr(), _214217_method.get()._field_Public,_214217_method.get()._field_Token)))) {
			_205081bc3_pushErr(&(*_self_), _213754_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_213754_ident.get()._field_Kind)}));
			_205081ee2_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_204ec7454_FnIns> _214921_ins = _20439cb9e_instance(_214217_method);;
		_214921_ins.get()._field_Owner=_213739_s;
		_1db2a268d_pushReference(&(*_self_), _214921_ins);
		_213817_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec362b_StructStaticIdentExprModel>(_204ec362b_StructStaticIdentExprModel{._field_Structure=_213739_s, ._field_Expr=_213817_d.get()._field_Model, ._field_Method=_214921_ins}));
		_213817_d.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_214921_ins, 1)});
		return _213817_d;
	};
	jule::Ptr<_205031cb6_Var> _216317_sttc = _204338222_FindStatic(_213739_s.ptr(), _213754_ident.get()._field_Kind);;
	if ((_216317_sttc != nullptr)) {
		return _205087e60_evalVar(&(*_self_), _216317_sttc,_213754_ident);
	};
	_205081bc3_pushErr(&(*_self_), _213754_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_213739_s.get()._field_Decl.get()._field_Ident),jule::Any(_213754_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_20507eb49_Data> _20509628c_evalTraitSubIdent(_2050816b7_Eval* _self_, jule::Ptr<_20507eb49_Data> _217240_d, jule::Ptr<_204ece8e0_Trait> _217254_trt, jule::Ptr<_202b89679_Token> _217271_ident) {
	jule::Ptr<_204ec707a_Fn> _217317_f = _204ed076a_FindMethod(_217254_trt.ptr(), _217271_ident.get()._field_Kind);;
	if ((_217317_f == nullptr)) {
		_205081bc3_pushErr(&(*_self_), _217271_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_217254_trt.get()._field_Ident),jule::Any(_217271_ident.get()._field_Kind)}));
		return nullptr;
	};
	return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_20439cb9e_instance(_217317_f), 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec3021_TraitSubIdentExprModel>(_204ec3021_TraitSubIdentExprModel{._field_Token=_217271_ident, ._field_Expr=_217240_d.get()._field_Model, ._field_Method=_217317_f, ._field_Trt=_217254_trt})), });
}



inline jule::Ptr<_20507eb49_Data> _205096787_evalStructSubIdent(_2050816b7_Eval* _self_, jule::Ptr<_20507eb49_Data> _219141_d, jule::Ptr<_20435cc5d_StructIns> _219155_s, jule::Ptr<_204348ee1_SubIdentExpr> _219174_si, jule::Bool _219193_ref) {
	jule::Ptr<_2043393bb_FieldIns> _219217_f = _204336e02_FindField(_219155_s.ptr(), _219174_si.get()._field_Ident.get()._field_Kind);;
	if ((_219217_f != nullptr)) {
		if ((!(_2050173ea_isAccessibleDefine((*_self_)._field_s.ptr(), _219217_f.get()._field_Decl.get()._field_Public,_219217_f.get()._field_Decl.get()._field_Token)))) {
			_205081bc3_pushErr(&(*_self_), _219174_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_219217_f.get()._field_Decl.get()._field_Ident)}));
			_205081ee2_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_204ec343e_StructSubIdentExprModel> _219921_model = jule::new_ptr<_204ec343e_StructSubIdentExprModel>(_204ec343e_StructSubIdentExprModel{._field_Token=_219174_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_20507eb49_Data>((*(_219141_d))), ._field_ExprKind=_219141_d.get()._field_Kind, ._field_Field=_219217_f, ._field_Owner=_219155_s});;
		_219141_d.get()._field_Model=static_cast<jule::Any>(_219921_model);
		_219141_d.get()._field_Kind=_219217_f.get()._field_Kind;
		_219141_d.get()._field_Lvalue=true;
		if ((_219217_f.get()._field_Decl.get()._field_Mutable && (!(_219141_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_204ee42a6_scopeChecker>>()) {
					_case_begin_1db57e32c:;
					{
						jule::Ptr<_204ee42a6_scopeChecker> _221425_scope = _204ee73b9_getRoot((*_self_)._field_lookup.operator jule::Ptr<_204ee42a6_scopeChecker>());;
						_219141_d.get()._field_Mutable=((_221425_scope.get()._field_owner != nullptr) && (_221425_scope.get()._field_owner.get()._field_Owner == _219155_s));
					}
				}
				_match_end_1db57e2c7:;
			};
		};
		return _219141_d;
	};
	;
	jule::Ptr<_204ec707a_Fn> _222317_m = _204334a9d_FindMethod(_219155_s.ptr(), _219174_si.get()._field_Ident.get()._field_Kind,false);;
	if ((_222317_m == nullptr)) {
		_205081bc3_pushErr(&(*_self_), _219174_si.get()._field_Ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_219155_s.get()._field_Decl.get()._field_Ident),jule::Any(_219174_si.get()._field_Ident.get()._field_Kind)}));
		return nullptr;
	};
	if ((!(_2050173ea_isAccessibleDefine((*_self_)._field_s.ptr(), _222317_m.get()._field_Public,_222317_m.get()._field_Token)))) {
		_205081bc3_pushErr(&(*_self_), _219174_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_222317_m.get()._field_Ident)}));
		_205081ee2_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_204396e2e_IsRef(_222317_m.get()._field_Params[0LL].ptr()) && (!(_219193_ref)))) {
		_205081bc3_pushErr(&(*_self_), _219174_si.get()._field_Ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_205086ac9_checkDeprecated(&(*_self_), _222317_m.get()._field_Directives,_219174_si.get()._field_Ident);
	jule::Ptr<_204ec7454_FnIns> _223917_ins = _20439cb9e_instance(_222317_m);;
	_223917_ins.get()._field_Owner=_219155_s;
	_1db2a268d_pushReference(&(*_self_), _223917_ins);
	jule::Ptr<_20507eb49_Data> _224217_model = jule::new_ptr<_20507eb49_Data>((*(_219141_d)));;
	_219141_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec343e_StructSubIdentExprModel>(_204ec343e_StructSubIdentExprModel{._field_Token=_219174_si.get()._field_Ident, ._field_Expr=_224217_model, ._field_ExprKind=_219141_d.get()._field_Kind, ._field_Method=_223917_ins, ._field_Owner=_219155_s}));
	_219141_d.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_223917_ins, 1)});
	return _219141_d;
}



inline jule::Ptr<_20507eb49_Data> _205096b3e_evalSliceSubIdent(_2050816b7_Eval* _self_, jule::Ptr<_20507eb49_Data> _225440_d, jule::Ptr<_202b89679_Token> _225454_ident) {
	{
		auto &_match_expr{ _225454_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1db5887ba:;
			{
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_Params=jule::Slice<jule::Ptr<_204ec7267_ParamIns>>::make({jule::new_ptr<_204ec7267_ParamIns>(_204ec7267_ParamIns{._field_Decl=jule::new_ptr<_204ec6d8d_Param>(_204ec6d8d_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_204ec7267_ParamIns>(_204ec7267_ParamIns{._field_Decl=jule::new_ptr<_204ec6d8d_Param>(_204ec6d8d_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_205166846_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_225440_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec3be2_CommonSubIdentExprModel>(_204ec3be2_CommonSubIdentExprModel{._field_ExprKind=_225440_d.get()._field_Kind, ._field_Expr=_225440_d.get()._field_Model, ._field_Token=_225454_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1db588754:;
			{
				_205081bc3_pushErr(&(*_self_), _225454_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_225440_d.get()._field_Kind.ptr())),jule::Any(_225454_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1db5886dd:;
	};
}



inline jule::Ptr<_20507eb49_Data> _205096ee6_evalArraySubIdent(_2050816b7_Eval* _self_, jule::Ptr<_20507eb49_Data> _229140_d, jule::Ptr<_202b89679_Token> _229154_ident) {
	{
		auto &_match_expr{ _229154_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1db58be50:;
			{
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_Params=jule::Slice<jule::Ptr<_204ec7267_ParamIns>>::make({jule::new_ptr<_204ec7267_ParamIns>(_204ec7267_ParamIns{._field_Decl=jule::new_ptr<_204ec6d8d_Param>(_204ec6d8d_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_204ec7267_ParamIns>(_204ec7267_ParamIns{._field_Decl=jule::new_ptr<_204ec6d8d_Param>(_204ec6d8d_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_205166846_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_229140_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec3be2_CommonSubIdentExprModel>(_204ec3be2_CommonSubIdentExprModel{._field_ExprKind=_229140_d.get()._field_Kind, ._field_Expr=_229140_d.get()._field_Model, ._field_Token=_229154_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1db58bdd9:;
			{
				_205081bc3_pushErr(&(*_self_), _229154_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_229140_d.get()._field_Kind.ptr())),jule::Any(_229154_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1db58bd0c:;
	};
}



inline jule::Ptr<_20507eb49_Data> _205097304_evalIntTypeStatic(_2050816b7_Eval* _self_, jule::Ptr<_202b89679_Token> _232836_ident) {
	;
	{
		auto &_match_expr{ _232836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1db5908c1:;
			{
				jule::Ptr<_2044102b6_Const> _233221_c = static__204420804_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2048802e6_Max(jule::Str("int", 3)))));;
				_233221_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_233221_c), ._field_Constant=_233221_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1db590937:;
			{
				jule::Ptr<_2044102b6_Const> _234021_c = static__204420804_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2048774b9_Min(jule::Str("int", 3)))));;
				_234021_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_234021_c), ._field_Constant=_234021_c});
			}
		}
		else {
			_case_begin_1db59067e:;
			{
				_205081bc3_pushErr(&(*_self_), _232836_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_232836_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1db59085a:;
	};
}



inline jule::Ptr<_20507eb49_Data> _205097612_evalUintTypeStatic(_2050816b7_Eval* _self_, jule::Ptr<_202b89679_Token> _235337_ident) {
	;
	{
		auto &_match_expr{ _235337_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1db59a2c1:;
			{
				jule::Ptr<_2044102b6_Const> _235721_c = static__20443783d_NewU64(static_cast<jule::U64>(static_cast<jule::U64>(_2048802e6_Max(jule::Str("uint", 4)))));;
				_235721_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=static_cast<jule::Any>(_235721_c), ._field_Constant=_235721_c});
			}
		}
		else {
			_case_begin_1db599875:;
			{
				_205081bc3_pushErr(&(*_self_), _235337_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_235337_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1db599820:;
	};
}



inline jule::Ptr<_20507eb49_Data> _205097920_evalI8TypeStatic(_2050816b7_Eval* _self_, jule::Ptr<_202b89679_Token> _237035_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _237035_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1db59ce72:;
			{
				jule::Ptr<_2044102b6_Const> _237621_c = static__204420804_NewI64(127LL);;
				_237621_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_237621_c), ._field_Constant=_237621_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1db59ced8:;
			{
				jule::Ptr<_2044102b6_Const> _238421_c = static__204420804_NewI64(-128LL);;
				_238421_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_238421_c), ._field_Constant=_238421_c});
			}
		}
		else {
			_case_begin_1db59ce0b:;
			{
				_205081bc3_pushErr(&(*_self_), _237035_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_237035_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1db59cb0e:;
	};
}



inline jule::Ptr<_20507eb49_Data> _205097c2d_evalI16TypeStatic(_2050816b7_Eval* _self_, jule::Ptr<_202b89679_Token> _239736_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _239736_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1db5a24c6:;
			{
				jule::Ptr<_2044102b6_Const> _240321_c = static__204420804_NewI64(32767LL);;
				_240321_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_240321_c), ._field_Constant=_240321_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1db5a253c:;
			{
				jule::Ptr<_2044102b6_Const> _241121_c = static__204420804_NewI64(-32768LL);;
				_241121_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_241121_c), ._field_Constant=_241121_c});
			}
		}
		else {
			_case_begin_1db5a2460:;
			{
				_205081bc3_pushErr(&(*_self_), _239736_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_239736_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1db5a2163:;
	};
}



inline jule::Ptr<_20507eb49_Data> _20509803b_evalI32TypeStatic(_2050816b7_Eval* _self_, jule::Ptr<_202b89679_Token> _242436_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _242436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1db5a6a2a:;
			{
				jule::Ptr<_2044102b6_Const> _243021_c = static__204420804_NewI64(2147483647LL);;
				_243021_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_243021_c), ._field_Constant=_243021_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1db5a6a91:;
			{
				jule::Ptr<_2044102b6_Const> _243821_c = static__204420804_NewI64(-2147483648LL);;
				_243821_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_243821_c), ._field_Constant=_243821_c});
			}
		}
		else {
			_case_begin_1db5a69b4:;
			{
				_205081bc3_pushErr(&(*_self_), _242436_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_242436_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1db5a66b7:;
	};
}



inline jule::Ptr<_20507eb49_Data> _205098349_evalI64TypeStatic(_2050816b7_Eval* _self_, jule::Ptr<_202b89679_Token> _245136_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _245136_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1db5ab07e:;
			{
				jule::Ptr<_2044102b6_Const> _245721_c = static__204420804_NewI64(jule::MAX_I64);;
				_245721_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_245721_c), ._field_Constant=_245721_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1db5ab0e5:;
			{
				jule::Ptr<_2044102b6_Const> _246521_c = static__204420804_NewI64(jule::MIN_I64);;
				_246521_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_246521_c), ._field_Constant=_246521_c});
			}
		}
		else {
			_case_begin_1db5ab018:;
			{
				_205081bc3_pushErr(&(*_self_), _245136_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_245136_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1db5aac1b:;
	};
}



inline jule::Ptr<_20507eb49_Data> _205098657_evalU8TypeStatic(_2050816b7_Eval* _self_, jule::Ptr<_202b89679_Token> _247835_ident) {
	;
	;
	{
		auto &_match_expr{ _247835_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1db5b0193:;
			{
				jule::Ptr<_2044102b6_Const> _248321_c = static__20443783d_NewU64(255LLU);;
				_248321_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_248321_c), ._field_Constant=_248321_c});
			}
		}
		else {
			_case_begin_1db5ab15b:;
			{
				_205081bc3_pushErr(&(*_self_), _247835_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_247835_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1db5aee95:;
	};
}



inline jule::Ptr<_20507eb49_Data> _205098965_evalU16TypeStatic(_2050816b7_Eval* _self_, jule::Ptr<_202b89679_Token> _249636_ident) {
	;
	;
	{
		auto &_match_expr{ _249636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1db5b3031:;
			{
				jule::Ptr<_2044102b6_Const> _250121_c = static__20443783d_NewU64(65535LLU);;
				_250121_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_250121_c), ._field_Constant=_250121_c});
			}
		}
		else {
			_case_begin_1db5b0209:;
			{
				_205081bc3_pushErr(&(*_self_), _249636_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_249636_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1db5b2d33:;
	};
}



inline jule::Ptr<_20507eb49_Data> _205098c73_evalU32TypeStatic(_2050816b7_Eval* _self_, jule::Ptr<_202b89679_Token> _251436_ident) {
	;
	;
	{
		auto &_match_expr{ _251436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1db5b5dbe:;
			{
				jule::Ptr<_2044102b6_Const> _251921_c = static__20443783d_NewU64(4294967295LLU);;
				_251921_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_251921_c), ._field_Constant=_251921_c});
			}
		}
		else {
			_case_begin_1db5b3097:;
			{
				_205081bc3_pushErr(&(*_self_), _251436_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_251436_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1db5b5bc1:;
	};
}



inline jule::Ptr<_20507eb49_Data> _205099081_evalU64TypeStatic(_2050816b7_Eval* _self_, jule::Ptr<_202b89679_Token> _253236_ident) {
	;
	;
	{
		auto &_match_expr{ _253236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1db5b8c5c:;
			{
				jule::Ptr<_2044102b6_Const> _253721_c = static__20443783d_NewU64(jule::MAX_U64);;
				_253721_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_253721_c), ._field_Constant=_253721_c});
			}
		}
		else {
			_case_begin_1db5b5e35:;
			{
				_205081bc3_pushErr(&(*_self_), _253236_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_253236_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1db5b8a5e:;
	};
}



inline jule::Ptr<_20507eb49_Data> _20509938e_evalF32TypeStatic(_2050816b7_Eval* _self_, jule::Ptr<_202b89679_Token> _255036_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _255036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1db5bc337:;
			{
				jule::Ptr<_2044102b6_Const> _255721_c = static__20445521d_NewF64(340282346638528860000000000000000000000.0);;
				_255721_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_255721_c), ._field_Constant=_255721_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1db5bc39d:;
			{
				jule::Ptr<_2044102b6_Const> _256521_c = static__20445521d_NewF64(-340282346638528860000000000000000000000.0);;
				_256521_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_256521_c), ._field_Constant=_256521_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1db5bc414:;
			{
				jule::Ptr<_2044102b6_Const> _257321_c = static__20445521d_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_257321_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_257321_c), ._field_Constant=_257321_c});
			}
		}
		else {
			_case_begin_1db5bc28d:;
			{
				_205081bc3_pushErr(&(*_self_), _255036_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_255036_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1db5bc227:;
	};
}



inline jule::Ptr<_20507eb49_Data> _20509969c_evalF64TypeStatic(_2050816b7_Eval* _self_, jule::Ptr<_202b89679_Token> _258636_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _258636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1db5c2ea8:;
			{
				jule::Ptr<_2044102b6_Const> _259321_c = static__20445521d_NewF64(jule::MAX_F64);;
				_259321_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_259321_c), ._field_Constant=_259321_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1db5c301e:;
			{
				jule::Ptr<_2044102b6_Const> _260121_c = static__20445521d_NewF64(jule::MIN_F64);;
				_260121_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_260121_c), ._field_Constant=_260121_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1db5c3085:;
			{
				jule::Ptr<_2044102b6_Const> _260921_c = static__20445521d_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_260921_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_260921_c), ._field_Constant=_260921_c});
			}
		}
		else {
			_case_begin_1db5c2e0e:;
			{
				_205081bc3_pushErr(&(*_self_), _258636_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_258636_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1db5c2d98:;
	};
}



inline jule::Ptr<_20507eb49_Data> _205099a54_evalPrimStatic(_2050816b7_Eval* _self_, jule::Str _262233_kind, jule::Ptr<_202b89679_Token> _262244_ident) {
	{
		auto &_match_expr{ _262233_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1db5c7b5b:;
			{
				return _205097304_evalIntTypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1db5c7bc2:;
			{
				return _205097612_evalUintTypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1db5c8563:;
			{
				return _205097920_evalI8TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1db5c85c9:;
			{
				return _205097c2d_evalI16TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1db5c8640:;
			{
				return _20509803b_evalI32TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1db5c86a6:;
			{
				return _205098349_evalI64TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1db5c872d:;
			{
				return _205098657_evalU8TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1db5c87a5:;
			{
				return _205098965_evalU16TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1db5c8860:;
			{
				return _205098c73_evalU32TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1db5c88c6:;
			{
				return _205099081_evalU64TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1db5c893c:;
			{
				return _20509938e_evalF32TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1db5c89a3:;
			{
				return _20509969c_evalF64TypeStatic(&(*_self_), _262244_ident);
			}
		}
		else {
			_case_begin_1db5c794c:;
			{
				_205081bc3_pushErr(&(*_self_), _262244_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_262233_kind),jule::Any(_262244_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1db5c4c68:;
	};
}



inline jule::Ptr<_20507eb49_Data> _205099e0b_evalTypeStatic(_2050816b7_Eval* _self_, jule::Ptr<_20507eb49_Data> _265437_d, jule::Ptr<_204348ee1_SubIdentExpr> _265451_si) {
	{
		
		if ((_2050aca01_Prim(_265437_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db5cd4ad:;
			{
				return _205099a54_evalPrimStatic(&(*_self_), _2050b0729_Str(_2050aca01_Prim(_265437_d.get()._field_Kind.ptr()).ptr()),_265451_si.get()._field_Ident);
			}
		}
		else if ((_2050ad23d_Enum(_265437_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db5cd524:;
			{
				return _2050955cc_evalEnumStatic(&(*_self_), _2050ad23d_Enum(_265437_d.get()._field_Kind.ptr()),_265451_si.get()._field_Ident);
			}
		}
		else if ((_2050ad4a2_TypeEnum(_265437_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db5cd58a:;
			{
				return _205095984_evalTypeEnumStatic(&(*_self_), _2050ad4a2_TypeEnum(_265437_d.get()._field_Kind.ptr()),_265451_si.get()._field_Ident);
			}
		}
		else if ((_2050ade53_Struct(_265437_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db5ce2e4:;
			{
				return _205095d3b_evalStructStatic(&(*_self_), _2050ade53_Struct(_265437_d.get()._field_Kind.ptr()),_265451_si.get()._field_Ident);
			}
		}
		else {
			_case_begin_1db5cd3e2:;
			{
				_205081bc3_pushErr(&(*_self_), _265451_si.get()._field_Ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_265437_d.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1db5cd337:;
	};
}



inline jule::Ptr<_20507eb49_Data> _20509a2b3_evalObjSubIdent(_2050816b7_Eval* _self_, jule::Ptr<_20507eb49_Data> _267038_d, jule::Ptr<_204348ee1_SubIdentExpr> _267052_si) {
	if (_202b8be1d_IsIgnoreIdent(_267052_si.get()._field_Ident.get()._field_Kind)) {
		_205081bc3_pushErr(&(*_self_), _267052_si.get()._field_Ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_2050aa8de_TypeKind> _267617_kind = _267038_d.get()._field_Kind;;
	{
		
		if ((_2050acec9_Ptr(_267038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db5d47e4:;
			{
				jule::Ptr<_2050b71ae_Ptr> _267917_ptr = _2050acec9_Ptr(_267038_d.get()._field_Kind.ptr());;
				if (_2050b7b82_IsUnsafe(_267917_ptr.ptr())) {
					goto _match_end_1db5d4690;
				};
				if (((!(_267052_si.get()._field_IsSelf)) && (!(_20508260d_isUnsafe(&(*_self_)))))) {
					_205081bc3_pushErr(&(*_self_), _267052_si.get()._field_Ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_267617_kind=_2050acec9_Ptr(_267038_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_2050acc65_Sptr(_267038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db5d485a:;
			{
				_267617_kind=_2050acc65_Sptr(_267038_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1db5d4690:;
	};
	{
		
		if ((_2050ae1b7_Trait(_267038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db5d75a5:;
			{
				return _20509628c_evalTraitSubIdent(&(*_self_), _267038_d,_2050ae1b7_Trait(_267038_d.get()._field_Kind.ptr()),_267052_si.get()._field_Ident);
			}
		}
		else if ((_2050ade53_Struct(_267617_kind.ptr()) != nullptr)) {
			_case_begin_1db5d762c:;
			{
				jule::Ptr<_20435cc5d_StructIns> _269517_s = _2050ade53_Struct(_267617_kind.ptr());;
				if (_2050a670e_isInstancedStruct(_269517_s)) {
					jule::Bool _269725_usedReferenceElem = (_2050acc65_Sptr(_267038_d.get()._field_Kind.ptr()) != nullptr);;
					return _205096787_evalStructSubIdent(&(*_self_), _267038_d,_2050ade53_Struct(_267617_kind.ptr()),_267052_si,_269725_usedReferenceElem);
				};
			}
		}
		else if ((_2050ad97a_Slc(_267617_kind.ptr()) != nullptr)) {
			_case_begin_1db5d76a4:;
			{
				return _205096b3e_evalSliceSubIdent(&(*_self_), _267038_d,_267052_si.get()._field_Ident);
			}
		}
		else if ((_2050ad716_Arr(_267617_kind.ptr()) != nullptr)) {
			_case_begin_1db5d772b:;
			{
				return _205096ee6_evalArraySubIdent(&(*_self_), _267038_d,_267052_si.get()._field_Ident);
			}
		}
		_match_end_1db5d74c8:;
	};
	_205081bc3_pushErr(&(*_self_), _267052_si.get()._field_Ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_267038_d.get()._field_Kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_20507eb49_Data> _20509a5c1_evalSubIdent(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_204348ee1_SubIdentExpr> _270936_si) {
	jule::Ptr<_2050aa8de_TypeKind> _271017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_271017_prefix;
	});;
	jule::Ptr<_20507eb49_Data> _271417_d = _20509b9bd_evalExprKind(_self_, _270936_si.get()._field_Expr.get()._field_Kind);;
	if ((_271417_d == nullptr)) {
		return nullptr;
	};
	if (_271417_d.get()._field_Decl) {
		return _205099e0b_evalTypeStatic(_self_.ptr(), _271417_d,_270936_si);
	};
	return _20509a2b3_evalObjSubIdent(_self_.ptr(), _271417_d,_270936_si);
}



inline jule::Ptr<_20507eb49_Data> _20509a8ce_evalTuple(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_204346719_TupleExpr> _272633_tup) {
	jule::Ptr<_2050b5135_Tuple> _272717_tupT = jule::new_ptr<_2050b5135_Tuple>();;
	_272717_tupT.get()._field_Types=jule::Slice<jule::Ptr<_2050aa8de_TypeKind>>::alloc(0LL,_272633_tup.get()._field_Expr.len());
	jule::Ptr<_204ec3dce_TupleExprModel> _273017_model = jule::new_ptr<_204ec3dce_TupleExprModel>(_204ec3dce_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_20507eb49_Data>>::alloc(0LL,_272633_tup.get()._field_Expr.len())});;
	jule::Bool _273417_ok = true;;
	{
		auto &expr = _272633_tup.get()._field_Expr;
		auto it = expr.begin();
		_iter_begin_1db5e2390:;
		if (it != expr.end()) {
			jule::Ptr<_204345a8c_Expr> _273521_expr = *it;
			{
				jule::Ptr<_20507eb49_Data> _273621_d = _20509b9bd_evalExprKind(_self_, _273521_expr.get()._field_Kind);;
				if ((_273621_d == nullptr)) {
					_273417_ok=false;
					goto _iter_next_1db5e2390;
				};
				_272717_tupT.get()._field_Types = jule::alloc_for_append(_272717_tupT.get()._field_Types,1);_272717_tupT.get()._field_Types.__push(_273621_d.get()._field_Kind);;
				_273017_model.get()._field_Datas = jule::alloc_for_append(_273017_model.get()._field_Datas,1);_273017_model.get()._field_Datas.__push(_273621_d);;
			}
			_iter_next_1db5e2390:;
			++it;
			goto _iter_begin_1db5e2390;
		}
		_iter_end_1db5e2390:;
	};
	if ((!(_273417_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_272717_tupT, 9)}), ._field_Model=static_cast<jule::Any>(_273017_model), });
}



inline jule::Ptr<_20507eb49_Data> _20509ac86_evalMap(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_2050b5b5d_Map> _275531_m, jule::Ptr<_20434b1be_BraceLit> _275544_lit) {
	jule::Ptr<_204ec2b47_MapExprModel> _275617_model = jule::new_ptr<_204ec2b47_MapExprModel>(_204ec2b47_MapExprModel{._field_KeyKind=_275531_m.get()._field_Key, ._field_ValKind=_275531_m.get()._field_Val, });;
	{
		auto &expr = _275544_lit.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1db5e587c:;
		if (it != expr.end()) {
			jule::Ptr<_204345a8c_Expr> _276121_expr = *it;
			{
				{
					auto &_match_expr{ _276121_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_20434b994_KeyValPair>>()) {
						_case_begin_1db5e63e9:;
						{
							goto _match_end_1db5e61c9;
						}
					}
					else {
						_case_begin_1db5e6383:;
						{
							_205081bc3_pushErr(_self_.ptr(), _275544_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1db5e61c9:;
				};
				jule::Ptr<_20434b994_KeyValPair> _277121_pair = _276121_expr.get()._field_Kind.operator jule::Ptr<_20434b994_KeyValPair>();;
				jule::Ptr<_20507eb49_Data> _277321_key = _20509b9bd_evalExprKind(_self_, _277121_pair.get()._field_Key.get()._field_Kind);;
				if ((_277321_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_20507eb49_Data> _277821_val = _20509b9bd_evalExprKind(_self_, _277121_pair.get()._field_Val.get()._field_Kind);;
				if ((_277821_val == nullptr)) {
					return nullptr;
				};
				_20501db0a_checkAssignType(_self_.get()._field_s, false,_275531_m.get()._field_Key,_277321_key,_277121_pair.get()._field_Colon);
				_20501db0a_checkAssignType(_self_.get()._field_s, false,_275531_m.get()._field_Val,_277821_val,_277121_pair.get()._field_Colon);
				_275617_model.get()._field_Entries = jule::alloc_for_append(_275617_model.get()._field_Entries,1);_275617_model.get()._field_Entries.__push(jule::new_ptr<_204ec295a_KeyValPairExprModel>(_204ec295a_KeyValPairExprModel{._field_Key=_277321_key.get()._field_Model, ._field_Val=_277821_val.get()._field_Model}));;
			}
			_iter_next_1db5e587c:;
			++it;
			goto _iter_begin_1db5e587c;
		}
		_iter_end_1db5e587c:;
	};
	return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_275531_m, 10)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_275617_model), });
}



inline jule::Ptr<_20507eb49_Data> _20509b094_evalBraceLit(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_20434b1be_BraceLit> _279936_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1db5eb223:;
			{
				_205081bc3_pushErr(_self_.ptr(), _279936_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_2050ae42b_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1db5eb289:;
			{
				return _20509ac86_evalMap(_self_, _2050ae42b_Map(_self_.get()._field_prefix.ptr()),_279936_lit);
			}
		}
		else if ((_2050ade53_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1db5eb300:;
			{
				return _2050933cc_evalStructLitExplicit(_self_, _2050ade53_Struct(_self_.get()._field_prefix.ptr()),_279936_lit.get()._field_Exprs,_279936_lit.get()._field_Token);
			}
		}
		else {
			_case_begin_1db5eb168:;
			{
				_205081bc3_pushErr(_self_.ptr(), _279936_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1db5eb0ad:;
	};
}



inline jule::Ptr<_20507eb49_Data> _20509b3a2_evalAnonFn(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_204352eea_FnDecl> _281434_decl) {
	_2050b8e19_typeChecker _281517_tc = _2050b8e19_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_204ec7454_FnIns> _282017_ins = _2050c075b_buildFn(&_281517_tc, _281434_decl);;
	if ((_282017_ins == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_204ee42a6_scopeChecker>>()) {
			_case_begin_1db601547:;
			{
				jule::Ptr<_204ee42a6_scopeChecker> _282621_sc = _self_.get()._field_lookup.operator jule::Ptr<_204ee42a6_scopeChecker>();;
				jule::Ptr<_204ee42a6_scopeChecker> _282721_scc = _2050042d8_newChildChecker(_282621_sc);;
				_282721_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_204ee301e_scopeLabel>>>(nullptr);
				_282721_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_204ee3492_scopeGoto>>>(nullptr);
				_282721_scc.get()._field_owner=nullptr;
				_282721_scc.get()._field_childIndex=0LL;
				_282721_scc.get()._field_it=0LLU;
				_282721_scc.get()._field_cse=0LLU;
				_282721_scc.get()._field_owner=_282017_ins;
				_20502c311_checkFnInsSc(_self_.get()._field_s.ptr(), _282017_ins,_282721_scc);
			}
		}
		else {
			_case_begin_1db600c3e:;
			{
				_20502c8a5_checkFnIns(_self_.get()._field_s, _282017_ins);
			}
		}
		_match_end_1db600bd9:;
	};
	return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_282017_ins, 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec276d_AnonFnExprModel>(_204ec276d_AnonFnExprModel{._field_Func=_282017_ins, ._field_Global=_205082872_isGlobal(_self_.ptr())})), });
}



inline jule::Ptr<_20507eb49_Data> _20509b6b0_evalBinop(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_204349464_BinopExpr> _284933_op) {
	_20509e2ea_binaryEval _285017_bs = static__20509e8b1_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_2050b03b6_Prim> _285317_prim = _2050aca01_Prim(_self_.get()._field_prefix.ptr());;
		if (((_285317_prim == nullptr) || (!(_204ebe56c_IsNum(_2050b0729_Str(_285317_prim.ptr())))))) {
			jule::Ptr<_2050aa8de_TypeKind> _285525_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_285525_prefix;
			});;
			return _2050a4b91_eval(&_285017_bs, _284933_op);
		};
	};
	return _2050a4b91_eval(&_285017_bs, _284933_op);
}



inline jule::Ptr<_20507eb49_Data> _20509b9bd_evalExprKind(jule::Ptr<_2050816b7_Eval> _self_, jule::Any _286436_kind) {
	{
		auto &_match_expr{ _286436_kind };
		
		if (_match_expr.type_is<jule::Ptr<_204345d78_RangeExpr>>()) {
			_case_begin_1db608829:;
			{
				jule::Ptr<_204345d78_RangeExpr> _286721_e = _286436_kind.operator jule::Ptr<_204345d78_RangeExpr>();;
				return _20509b9bd_evalExprKind(_self_, _286721_e.get()._field_Expr.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204346ac1_LitExpr>>()) {
			_case_begin_1db6089e4:;
			{
				return _205084522_evalLit(_self_.ptr(), _286436_kind.operator jule::Ptr<_204346ac1_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20434774d_IdentExpr>>()) {
			_case_begin_1db608a5a:;
			{
				return _2050889cc_evalIdent(_self_.ptr(), _286436_kind.operator jule::Ptr<_20434774d_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204347e57_UnaryExpr>>()) {
			_case_begin_1db608ac1:;
			{
				return _205088cda_evalUnary(_self_, _286436_kind.operator jule::Ptr<_204347e57_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20434830e_VariadicExpr>>()) {
			_case_begin_1db608b48:;
			{
				return _2050890e8_evalVariadic(_self_, _286436_kind.operator jule::Ptr<_20434830e_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2043472ca_UnsafeExpr>>()) {
			_case_begin_1db608bc0:;
			{
				return _205089406_evalUnsafe(_self_, _286436_kind.operator jule::Ptr<_2043472ca_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20434c17b_SliceExpr>>()) {
			_case_begin_1db608c47:;
			{
				return _205089e73_evalSliceExpr(_self_, _286436_kind.operator jule::Ptr<_20434c17b_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20434c9ea_IndexingExpr>>()) {
			_case_begin_1db608d02:;
			{
				return _20508d2b7_evalIndexing(_self_, _286436_kind.operator jule::Ptr<_20434c9ea_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20434d105_SlicingExpr>>()) {
			_case_begin_1db608d68:;
			{
				return _20508e483_evalSlicing(_self_, _286436_kind.operator jule::Ptr<_20434d105_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2043486b6_CastExpr>>()) {
			_case_begin_1db608dce:;
			{
				return _205092b6d_evalCast(_self_, _286436_kind.operator jule::Ptr<_2043486b6_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204348a6d_NsSelectionExpr>>()) {
			_case_begin_1db608e45:;
			{
				return _205092e7b_evalNsSelection(_self_.ptr(), _286436_kind.operator jule::Ptr<_204348a6d_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20434ac4b_StructLit>>()) {
			_case_begin_1db608ebc:;
			{
				return _2050936da_evalStructLit(_self_, _286436_kind.operator jule::Ptr<_20434ac4b_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20434156b_TypeDecl>>()) {
			_case_begin_1db609044:;
			{
				return _205093c5c_evalType(_self_.ptr(), _286436_kind.operator jule::Ptr<_20434156b_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204349a6e_FnCallExpr>>()) {
			_case_begin_1db6090bb:;
			{
				return _205095225_evalFnCall(_self_, _286436_kind.operator jule::Ptr<_204349a6e_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204348ee1_SubIdentExpr>>()) {
			_case_begin_1db609143:;
			{
				return _20509a5c1_evalSubIdent(_self_, _286436_kind.operator jule::Ptr<_204348ee1_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204346719_TupleExpr>>()) {
			_case_begin_1db6091ba:;
			{
				return _20509a8ce_evalTuple(_self_, _286436_kind.operator jule::Ptr<_204346719_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20434b1be_BraceLit>>()) {
			_case_begin_1db609242:;
			{
				return _20509b094_evalBraceLit(_self_, _286436_kind.operator jule::Ptr<_20434b1be_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204352eea_FnDecl>>()) {
			_case_begin_1db6092b9:;
			{
				return _20509b3a2_evalAnonFn(_self_, _286436_kind.operator jule::Ptr<_204352eea_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204349464_BinopExpr>>()) {
			_case_begin_1db609341:;
			{
				return _20509b6b0_evalBinop(_self_, _286436_kind.operator jule::Ptr<_204349464_BinopExpr>());
			}
		}
		else {
			_case_begin_1db608571:;
			{
				return nullptr;
			}
		}
		_match_end_1db608483:;
	};
}



inline jule::Ptr<_20507eb49_Data> _20509bccb_eval(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_204345a8c_Expr> _291228_expr) {
	jule::Ptr<_20507eb49_Data> _291317_d = _20509b9bd_evalExprKind(_self_, _291228_expr.get()._field_Kind);;
	if (((_291317_d == nullptr) || (_291317_d.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_2050adbde_Fn(_291317_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db6146ae:;
			{
				jule::Ptr<_204ec7454_FnIns> _292021_f = _2050adbde_Fn(_291317_d.get()._field_Kind.ptr());;
				if (_204ec7641_IsBuiltin(_292021_f.ptr())) {
					goto _match_end_1db614538;
				};
				if ((_292021_f.get()._field_Generics.len() != _292021_f.get()._field_Decl.get()._field_Generics.len())) {
					_205016c24_pushErr(_self_.get()._field_s.ptr(), _291228_expr.get()._field_Token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (((!(_292021_f.get()._field_Decl.get()._field_Statically)) && _2043a626d_IsMethod(_292021_f.get()._field_Decl.ptr()))) {
					_205016c24_pushErr(_self_.get()._field_s.ptr(), _291228_expr.get()._field_Token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1db614538:;
	};
	return _291317_d;
}



inline jule::Ptr<_20507eb49_Data> _20509c0d9_evalExpr(jule::Ptr<_2050816b7_Eval> _self_, jule::Ptr<_204345a8c_Expr> _293832_expr) {
	jule::Ptr<_20507eb49_Data> _293917_d = _20509bccb_eval(_self_, _293832_expr);;
	{
		
		if ((_293917_d == nullptr)) {
			_case_begin_1db61875c:;
			{
				return nullptr;
			}
		}
		else if (_293917_d.get()._field_Decl) {
			_case_begin_1db6187d4:;
			{
				_205081bc3_pushErr(_self_.ptr(), _293832_expr.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1db6186c4:;
			{
				return _293917_d;
			}
		}
		_match_end_1db61865d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2050816b7_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _20509c55c_unaryEval static__20509ca13_new(jule::Ptr<_2050816b7_Eval> _295923_e) {
	return _20509c55c_unaryEval{._field_e=_295923_e, };
}



inline void _20509cbde_minus(_20509c55c_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1db61a51c:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_2050aca01_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db61a9c3:;
			{
				if ((!(_204ebe56c_IsNum(_2050aacda_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_2050ade53_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db61aa39:;
			{
				if ((_2050ade53_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1db61a176:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1db619cd0:;
	};
	if (_20508050c_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_204477240_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1db61e125:;
				{
					_20447c223_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_2044623b2_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_20447788e_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1db61e19c:;
				{
					_2044650eb_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_204457561_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_2044223e9_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1db61e224:;
				{
					_2044650eb_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_204463270_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1db61dee3:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec1717_UnaryExprModel>(_204ec1717_UnaryExprModel{._field_Expr=jule::new_ptr<_20507eb49_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _20509cdba_plus(_20509c55c_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1db623cc8:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_2050aca01_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db62427e:;
			{
				if ((!(_204ebe56c_IsNum(_2050aacda_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_2050ade53_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db6242e5:;
			{
				if ((_2050ade53_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1db623932:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1db623855:;
	};
	if (_20508050c_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_204477240_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1db6278d1:;
				{
					_20447c223_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_2044623b2_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_20447788e_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1db627958:;
				{
					_2044650eb_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_204457561_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_2044223e9_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1db6279d0:;
				{
					_2044650eb_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_204463270_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1db62779e:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec1717_UnaryExprModel>(_204ec1717_UnaryExprModel{._field_Expr=jule::new_ptr<_20507eb49_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _20509d096_caret(_20509c55c_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1db62c584:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_2050aca01_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db62ca3a:;
			{
				if ((!(_204ebe308_IsInt(_2050aacda_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_2050ade53_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db62caa1:;
			{
				if ((_2050ade53_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1db62c1dd:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1db62c111:;
	};
	if (_20508050c_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_20447788e_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1db63117b:;
				{
					_2044650eb_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_204457561_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_2044223e9_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1db631203:;
				{
					_204477c13_SetU64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_20445874e_ReadU64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1db63105a:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec1717_UnaryExprModel>(_204ec1717_UnaryExprModel{._field_Expr=jule::new_ptr<_20507eb49_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _20509d272_excl(_20509c55c_unaryEval* _self_) {
	jule::Ptr<_2050b03b6_Prim> _307813_t = _2050aca01_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
	if (((_307813_t == nullptr) || (!(_2050b3386_IsBool(_307813_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_20508050c_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_20442483b_IsBool((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1db636181:;
				{
					_20447ab5b_SetBool((*_self_)._field_d.get()._field_Constant.ptr(), (!(_204458e9c_ReadBool((*_self_)._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_1db636071:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec1717_UnaryExprModel>(_204ec1717_UnaryExprModel{._field_Expr=jule::new_ptr<_20507eb49_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _20509d44d_star(_20509c55c_unaryEval* _self_) {
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec1717_UnaryExprModel>(_204ec1717_UnaryExprModel{._field_Expr=jule::new_ptr<_20507eb49_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
	{
		
		if ((_2050acec9_Ptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db639481:;
			{
				if ((!(_20508260d_isUnsafe((*_self_)._field_e.ptr())))) {
					_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_2050b71ae_Ptr> _311021_t = _2050acec9_Ptr((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_2050b7b82_IsUnsafe(_311021_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_Kind=_311021_t.get()._field_Elem;
			}
		}
		else if ((_2050acc65_Sptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db639937:;
			{
				(*_self_)._field_d.get()._field_Kind=_2050acc65_Sptr((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1db6390da:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1db639074:;
	};
	(*_self_)._field_d.get()._field_Constant=nullptr;
	(*_self_)._field_d.get()._field_Lvalue=true;
}



inline void _20509d629_amper(_20509c55c_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_204ec1ae1_StructLitExprModel>>()) {
			_case_begin_1db6406b8:;
			{
				jule::Ptr<_204ec1ae1_StructLitExprModel> _313021_lit = (*_self_)._field_d.get()._field_Model.operator jule::Ptr<_204ec1ae1_StructLitExprModel>();;
				_2050a592d_makeStructLitAlloc((*_self_)._field_d,_313021_lit);
			}
		}
		else {
			_case_begin_1db63de69:;
			{
				{
					
					if (_2050c28d4_canGetPtr((*_self_)._field_d)) {
						_case_begin_1db63eb4b:;
						{
							(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(jule::new_ptr<_2050b71ae_Ptr>(_2050b71ae_Ptr{._field_Elem=(*_self_)._field_d.get()._field_Kind}), 12)});
							(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec1717_UnaryExprModel>(_204ec1717_UnaryExprModel{._field_Expr=jule::new_ptr<_20507eb49_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
						}
					}
					else {
						_case_begin_1db63e530:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1db63e453:;
				};
			}
		}
		_match_end_1db63de14:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_Constant=nullptr;
		(*_self_)._field_d.get()._field_Lvalue=false;
	};
}



inline void _20509d805_typeDecl(_20509c55c_unaryEval* _self_) {
	_2050b8e19_typeChecker _315417_tc = _2050b8e19_typeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_rootLookup=(*_self_)._field_e.get()._field_lookup, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_errorToken=(*_self_)._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1db6458dd:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050be0ea_buildPtrFromType(&_315417_tc, (*_self_)._field_d.get()._field_Kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1db6430c2:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050bd9ce_buildSptrFromType(&_315417_tc, (*_self_)._field_d.get()._field_Kind), 7)});
			}
		}
		else {
			_case_begin_1db644249:;
			{
				_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_2050aacda_Str((*_self_)._field_d.get()._field_Kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1db6441e4:;
	};
	(*_self_)._field_d.get()._field_Decl=true;
}



inline void _20509d9d1_evalData(_20509c55c_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1db648418:;
			{
				jule::Ptr<_2050aa8de_TypeKind> _317721_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_20509b9bd_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
				(*_self_)._field_e.get()._field_prefix=_317721_prefix;
			}
		}
		else {
			_case_begin_1db647d96:;
			{
				(*_self_)._field_d=_20509b9bd_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_1db647cdb:;
	};
}



inline jule::Ptr<_20507eb49_Data> _20509dcab_eval(_20509c55c_unaryEval* _self_, jule::Ptr<_204347e57_UnaryExpr> _318627_u) {
	(*_self_)._field_u=_318627_u;
	_20509d9d1_evalData(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_Decl) {
		_20509d805_typeDecl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_2050aa8de_TypeKind> _319713_kind = (*_self_)._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1db64c9e4:;
			{
				_20509cbde_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1db64cbc0:;
			{
				_20509cdba_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1db64c6a3:;
			{
				_20509d096_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1db64c719:;
			{
				_20509d272_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1db64c780:;
			{
				_20509d44d_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1db64c807:;
			{
				_20509d629_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1db64c63c:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1db64c5d7:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1db64cd9b:;
			{
				_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_2050aacda_Str(_319713_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_20508050c_IsConst((*_self_)._field_d.ptr())) {
			_case_begin_1db64d781:;
			{
				(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>((*_self_)._field_d.get()._field_Constant);
			}
		}
		_match_end_1db64ede2:;
	};
	(*_self_)._field_d.get()._field_Mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _20509c55c_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _20509e2ea_binaryEval static__20509e8b1_newPlain(jule::Ptr<_2050816b7_Eval> _323528_e) {
	return _20509e2ea_binaryEval{._field_e=_323528_e, };
}



inline _20509e2ea_binaryEval static__20509ec02_new(jule::Ptr<_2050816b7_Eval> _324123_e, jule::Ptr<_202b89679_Token> _324137_op) {
	return _20509e2ea_binaryEval{._field_e=_324123_e, ._field_op=_324137_op};
}



inline jule::Bool _20509ee66_checkTypeCompatibility(_20509e2ea_binaryEval* _self_) {
	return _20501e05b_checkTypeCompatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_Kind,(*_self_)._field_r.get()._field_Kind,(*_self_)._field_op);
}



inline jule::Bool _2050a020d_checkStructCommonOperatorCompatibility(_20509e2ea_binaryEval* _self_) {
	jule::Ptr<_204ec7454_FnIns> _325517_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1db654da3:;
			{
				_325517_overload=_2050ade53_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1db654e19:;
			{
				_325517_overload=_2050ade53_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1db654e80:;
			{
				_325517_overload=_2050ade53_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1db654ee6:;
			{
				_325517_overload=_2050ade53_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1db656107:;
			{
				_325517_overload=_2050ade53_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1db65616d:;
			{
				_325517_overload=_2050ade53_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1db6561d4:;
			{
				_325517_overload=_2050ade53_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1db65624a:;
			{
				_325517_overload=_2050ade53_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1db656437:;
			{
				_325517_overload=_2050ade53_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1db65649d:;
			{
				_325517_overload=_2050ade53_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1db654d3c:;
			{
				_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_2050aacda_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return false;
			}
		}
		_match_end_1db654cd7:;
	};
	if ((_325517_overload == nullptr)) {
		_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_2050aacda_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
		return false;
	};
	jule::Ptr<_204ec7267_ParamIns> _328717_p = _325517_overload.get()._field_Params[1LL];;
	return _20501db0a_checkAssignType((*_self_)._field_e.get()._field_s, _328717_p.get()._field_Decl.get()._field_Reference,_328717_p.get()._field_Kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_20507eb49_Data> _2050a04a5_evalNil(_20509e2ea_binaryEval* _self_) {
	if ((!(_2050ac050_NilCompatible((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_2050aacda_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1db6613a9:;
			{
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1db661343:;
			{
				_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1db661299:;
	};
}



inline jule::Ptr<_20507eb49_Data> _2050a0719_evalEnum(_20509e2ea_binaryEval* _self_) {
	jule::Ptr<_204ed1a35_Enum> _331217_enm = _2050ad23d_Enum((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1db663840:;
			{
				jule::Ptr<_2050aa8de_TypeKind> _331621_rkind = (*_self_)._field_r.get()._field_Kind;;
				if ((_2050ad23d_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_331621_rkind=_2050ad23d_Enum((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_20501e05b_checkTypeCompatibility((*_self_)._field_e.get()._field_s, _331217_enm.get()._field_Kind.get()._field_Kind,_331621_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1db6637da:;
	};
	if (((_2050ad23d_Enum((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr) || (_331217_enm != _2050ad23d_Enum((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_331217_enm.get()._field_Ident),jule::Any(_2050aacda_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1db6683a0:;
			{
				if ((!(_204ebe56c_IsNum(_2050aacda_Str(_331217_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_331217_enm.get()._field_Ident)}));
					return nullptr;
				};
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1db668416:;
			{
				if (((_2050aca01_Prim(_331217_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_204ebe308_IsInt(_2050b0729_Str(_2050aca01_Prim(_331217_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_331217_enm.get()._field_Ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1db668339:;
			{
				_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_331217_enm.get()._field_Ident)}));
				return nullptr;
			}
		}
		_match_end_1db66827e:;
	};
}



inline jule::Ptr<_20507eb49_Data> _2050a097d_evalTypeEnum(_20509e2ea_binaryEval* _self_) {
	jule::Ptr<_204ed3130_TypeEnum> _336317_enm = _2050ad4a2_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr());;
	if ((!(_20509ee66_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1db66eac1:;
			{
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1db66e263:;
			{
				_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_204ed3460_Str(_336317_enm.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1db66e94a:;
	};
}



inline jule::Ptr<_20507eb49_Data> _2050a0be2_evalSptr(_20509e2ea_binaryEval* _self_) {
	if ((!(_20509ee66_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1db671e03:;
			{
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1db671b06:;
			{
				_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_2050aacda_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1db671320:;
	};
}



inline jule::Ptr<_20507eb49_Data> _2050a0e56_evalPtr(_20509e2ea_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1db674048:;
			{
				if ((!(_20509ee66_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1db6740ae:;
			{
				if ((_2050acec9_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_2050b7b82_IsUnsafe(_2050acec9_Ptr((*_self_)._field_l.get()._field_Kind.ptr()).ptr())) {
					_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_2050aacda_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				};
				if ((!(_2050a6a72_isPtrArithmeticCompatible((*_self_)._field_l,(*_self_)._field_r)))) {
					_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1db6737ea:;
			{
				_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_2050aacda_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1db673388:;
	};
}



inline jule::Ptr<_20507eb49_Data> _2050a11ba_evalArr(_20509e2ea_binaryEval* _self_) {
	if ((!(_20509ee66_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1db67ac42:;
			{
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1db67a912:;
			{
				_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_2050aacda_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1db67ab76:;
	};
}



inline jule::Ptr<_20507eb49_Data> _2050a142e_evalSlc(_20509e2ea_binaryEval* _self_) {
	if ((!(_20509ee66_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1db67d261:;
			{
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1db67ce64:;
			{
				_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_2050aacda_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1db67c67d:;
	};
}



inline jule::Ptr<_20507eb49_Data> _2050a1693_evalFn(_20509e2ea_binaryEval* _self_) {
	if ((!(_20509ee66_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1db680780:;
			{
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1db680483:;
			{
				_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_2050aacda_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1db67eb9c:;
	};
}



inline jule::Ptr<_20507eb49_Data> _2050a1907_evalStruct(_20509e2ea_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1db6821dd:;
			{
				if ((_2050ade53_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_2050aacda_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1db682254:;
			{
				if ((_2050ade53_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_2050aacda_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1db6828c5:;
			{
				if ((_2050ade53_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_2050aacda_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1db68293b:;
			{
				if ((_2050ade53_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_2050aacda_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1db6829a2:;
			{
				if ((!(_20509ee66_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1db681c15:;
	};
	if ((!(_2050a020d_checkStructCommonOperatorCompatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_20507eb49_Data> _2050a1b6b_evalTrait(_20509e2ea_binaryEval* _self_) {
	if ((!(_20509ee66_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1db68cbee:;
			{
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1db68c5e4:;
			{
				_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_2050aacda_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1db68cb33:;
	};
}



inline jule::Ptr<_20507eb49_Data> _2050a1dd0_evalAny(_20509e2ea_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1db68ed44:;
			{
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1db68e5e6:;
			{
				_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1db68e184:;
	};
}



inline jule::Ptr<_20507eb49_Data> _2050a2144_evalBool(_20509e2ea_binaryEval* _self_) {
	if ((!(_20509ee66_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1db691e67:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1db691b6a:;
			{
				_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_2050aacda_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1db691384:;
	};
}



inline jule::Ptr<_20507eb49_Data> _2050a23a8_evalStr(_20509e2ea_binaryEval* _self_) {
	jule::Str _360517_rk = _2050aacda_Str((*_self_)._field_r.get()._field_Kind.ptr());;
	if ((_360517_rk != jule::Str("str", 3))) {
		_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_360517_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1db695575:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1db6955db:;
			{
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1db694486:;
			{
				_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1db695421:;
	};
}



inline void _2050a2584_setTypeToGreater(_20509e2ea_binaryEval* _self_) {
	jule::Ptr<_2050b03b6_Prim> _363213_lp = _2050aca01_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_2050b03b6_Prim> _363313_rp = _2050aca01_Prim((*_self_)._field_r.get()._field_Kind.ptr());;
	if (_20508050c_IsConst((*_self_)._field_l.ptr())) {
		if ((!(_20508050c_IsConst((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_363313_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_20508050c_IsConst((*_self_)._field_r.ptr())) {
		(*_self_)._field_r.get()._field_Constant.get()._field_Kind=_363213_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*_self_)._field_l.get()._field_untyped && (!((*_self_)._field_r.get()._field_untyped)))) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
		if (_20508050c_IsConst((*_self_)._field_l.ptr())) {
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_363313_rp.get()._field_Kind;
		};
		(*_self_)._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*_self_)._field_l.get()._field_untyped)) && (*_self_)._field_r.get()._field_untyped)) {
		return;;
	};
	if (_204ebdb54_IsGreater(_363313_rp.get()._field_Kind,_363213_lp.get()._field_Kind)) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
		if (_20508050c_IsConst((*_self_)._field_l.ptr())) {
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_363313_rp.get()._field_Kind;
		};
	};
}



inline void _2050a27c6_checkModData(_20509e2ea_binaryEval* _self_, jule::Ptr<_20507eb49_Data>& _366536_d) {
	if ((!(_20508050c_IsConst(_366536_d.ptr())))) {
		if (((_2050aca01_Prim(_366536_d.get()._field_Kind.ptr()) == nullptr) || (!(_204ebe308_IsInt(_2050aca01_Prim(_366536_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_20504a85c_sigAssignable(jule::Str("i64", 3),_366536_d)) {
			_case_begin_1db6a20cb:;
			{
				_2044650eb_SetI64(_366536_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_204463270_AsI64(_366536_d.get()._field_Constant.ptr())));
			}
		}
		else if (_205062621_unsigAssignable(jule::Str("u64", 3),_366536_d)) {
			_case_begin_1db6a1e99:;
			{
				_204477c13_SetU64(_366536_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_2044573b8_AsU64(_366536_d.get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1db6a1b25:;
			{
				_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1db6a0294:;
	};
}



inline void _2050a29a2_mod(_20509e2ea_binaryEval* _self_) {
	_2050a27c6_checkModData(&(*_self_), (*_self_)._field_l);
	_2050a27c6_checkModData(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _2050a2d59_numbersAreCompatibile(_20509e2ea_binaryEval* _self_, jule::Str& _368737_lk, jule::Str& _368747_rk) {
	if ((!(_204ebe56c_IsNum(_368747_rk)))) {
		return false;
	};
	if ((_20508050c_IsConst((*_self_)._field_l.ptr()) && (*_self_)._field_l.get()._field_untyped)) {
		return true;
	};
	if ((_368737_lk == jule::Str("f32", 3))) {
		if ((_20508050c_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
			return true;
		};
		return (_368747_rk == jule::Str("f32", 3));
	};
	if ((_368737_lk == jule::Str("f64", 3))) {
		if ((_20508050c_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
			return true;
		};
		return (_368747_rk == jule::Str("f64", 3));
	};
	if ((_20508050c_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
		return true;
	};
	return (_368737_lk == _368747_rk);
}



inline jule::Ptr<_20507eb49_Data> _2050a30bd_evalFloat(_20509e2ea_binaryEval* _self_) {
	jule::Str _371313_lk = _2050aca01_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _371413_rk = _2050aca01_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_2050a2d59_numbersAreCompatibile(&(*_self_), _371313_lk,_371413_rk)))) {
		_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_371313_lk),jule::Any(_371413_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1db6aacc7:;
			{
				if (((!(_20508050c_IsConst((*_self_)._field_l.ptr()))) || (!(_205062753_intAssignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_371313_lk),jule::Any(_371413_rk)}));
					return nullptr;
				};
				if (((!(_20508050c_IsConst((*_self_)._field_r.ptr()))) || (!(_205062753_intAssignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_371313_lk),jule::Any(_371413_rk)}));
					return nullptr;
				};
				_2044650eb_SetI64((*_self_)._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_204463270_AsI64((*_self_)._field_l.get()._field_Constant.ptr())));
				_204477c13_SetU64((*_self_)._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_2044573b8_AsU64((*_self_)._field_r.get()._field_Constant.ptr())));
				if ((!(_2050a6357_isOkForShifting((*_self_)._field_r)))) {
					_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1db6aabd9:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1db6ab3c1:;
			{
				_2050a2584_setTypeToGreater(&(*_self_));
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1dacdaec9:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1db6b19e2:;
			{
				_2050a2584_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1db6b1a58:;
			{
				if ((!(_204ebe308_IsInt(_371413_rk)))) {
					_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_371313_lk),jule::Any(_371413_rk)}));
					return nullptr;
				};
				_2050a29a2_mod(&(*_self_));
				_2050a2584_setTypeToGreater(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1db6b2284:;
			{
				_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1db6b24e8:;
	};
}



inline jule::Ptr<_20507eb49_Data> _2050a3332_evalInt(_20509e2ea_binaryEval* _self_) {
	jule::Str _377913_lk = _2050aca01_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _378013_rk = _2050aca01_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1db6b33c8:;
			{
				if (((!(_204ebe308_IsInt(_377913_lk))) || (!(_204ebe308_IsInt(_378013_rk))))) {
					_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_377913_lk),jule::Any(_378013_rk)}));
					return nullptr;
				};
				if ((!(_2050a6357_isOkForShifting((*_self_)._field_r)))) {
					_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1db6b6882:;
	};
	if ((!(_2050a2d59_numbersAreCompatibile(&(*_self_), _377913_lk,_378013_rk)))) {
		_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_377913_lk),jule::Any(_378013_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1db6ba358:;
			{
				return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1db6ba215:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1db6bad09:;
			{
				_2050a2584_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1db6bad70:;
			{
				_2050a29a2_mod(&(*_self_));
				_2050a2584_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1db6bb106:;
			{
				_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1db6bb535:;
	};
}



inline jule::Ptr<_20507eb49_Data> _2050a3596_evalPrim(_20509e2ea_binaryEval* _self_) {
	jule::Ptr<_2050b03b6_Prim> _383813_prim = _2050aca01_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		
		if (_2050b3386_IsBool(_383813_prim.ptr())) {
			_case_begin_1db6bea00:;
			{
				return _2050a2144_evalBool(&(*_self_));
			}
		}
		else if (_2050b35ea_IsStr(_383813_prim.ptr())) {
			_case_begin_1db6bea77:;
			{
				return _2050a23a8_evalStr(&(*_self_));
			}
		}
		_match_end_1db6be945:;
	};
	if ((_2050aca01_Prim((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_2050b0729_Str(_383813_prim.ptr())),jule::Any(_2050aacda_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_204ebe43a_IsFloat(_383813_prim.get()._field_Kind)) {
			_case_begin_1db6c275b:;
			{
				return _2050a30bd_evalFloat(&(*_self_));
			}
		}
		else if (_204ebe308_IsInt(_383813_prim.get()._field_Kind)) {
			_case_begin_1db6c20a7:;
			{
				return _2050a3332_evalInt(&(*_self_));
			}
		}
		else {
			_case_begin_1db6c2041:;
			{
				return nullptr;
			}
		}
		_match_end_1db6c1d87:;
	};
}



inline jule::Ptr<_20507eb49_Data> _2050a380a_evalOp(_20509e2ea_binaryEval* _self_) {
	{
		
		if (_2050aba77_Void((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1db6c2a58:;
			{
				_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_2050aca01_Prim((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr) && _2050b385e_IsAny(_2050aca01_Prim((*_self_)._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1db6c3dcd:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1db6c3b14;
			}
		}
		else if (((_2050aca01_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr) && _2050b385e_IsAny(_2050aca01_Prim((*_self_)._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1db6c3b14:;
			{
				return _2050a1dd0_evalAny(&(*_self_));
			}
		}
		else if ((_2050ad4a2_TypeEnum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db6c3b7a:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1db6c3be1;
			}
		}
		else if ((_2050ad4a2_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db6c3be1:;
			{
				return _2050a097d_evalTypeEnum(&(*_self_));
			}
		}
		else if (_2050ab813_IsNil((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1db6c3c57:;
			{
				return _2050a04a5_evalNil(&(*_self_));
			}
		}
		else if ((_2050ad23d_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db6c3cbd:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1db6c3eaa;
			}
		}
		else if ((_2050ad23d_Enum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db6c3eaa:;
			{
				return _2050a0719_evalEnum(&(*_self_));
			}
		}
		else if ((_2050acc65_Sptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db6c4021:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1db6c4087;
			}
		}
		else if ((_2050acc65_Sptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db6c4087:;
			{
				return _2050a0be2_evalSptr(&(*_self_));
			}
		}
		else if ((_2050acec9_Ptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db6c40ed:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1db6c4175;
			}
		}
		else if ((_2050acec9_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db6c4175:;
			{
				return _2050a0e56_evalPtr(&(*_self_));
			}
		}
		else if ((_2050ad716_Arr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db6c41ec:;
			{
				return _2050a11ba_evalArr(&(*_self_));
			}
		}
		else if ((_2050ad97a_Slc((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db6c4274:;
			{
				return _2050a142e_evalSlc(&(*_self_));
			}
		}
		else if ((_2050adbde_Fn((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db6c42eb:;
			{
				return _2050a1693_evalFn(&(*_self_));
			}
		}
		else if ((_2050ae1b7_Trait((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db6c4373:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1db6c43ea;
			}
		}
		else if ((_2050ae1b7_Trait((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db6c43ea:;
			{
				return _2050a1b6b_evalTrait(&(*_self_));
			}
		}
		else if ((_2050ade53_Struct((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db6c4472:;
			{
				return _2050a1907_evalStruct(&(*_self_));
			}
		}
		else if ((_2050aca01_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db6c44e9:;
			{
				return _2050a3596_evalPrim(&(*_self_));
			}
		}
		else {
			_case_begin_1db6c286b:;
			{
				return nullptr;
			}
		}
		_match_end_1db6c354d:;
	};
}



inline void _2050a3a80_evalConst(_20509e2ea_binaryEval* _self_, jule::Ptr<_20507eb49_Data>& _391333_d) {
	{
		
		if ((_391333_d == nullptr)) {
			_case_begin_1db6d4cac:;
			{
				return;;
			}
		}
		else if ((!(_20508050c_IsConst((*_self_)._field_l.ptr()))) || (!(_20508050c_IsConst((*_self_)._field_r.ptr())))) {
			_case_begin_1db6d4d23:;
			{
				_391333_d.get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1db6d4581:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1db6d6550:;
			{
				_391333_d.get()._field_Constant=static__2044521d7_NewBool(_204ebeca9_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1db6d65b6:;
			{
				_391333_d.get()._field_Constant=static__2044521d7_NewBool((!(_204ebeca9_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1db6d662c:;
			{
				_391333_d.get()._field_Constant=static__2044521d7_NewBool(_204ebeb77_Or((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1db6d6693:;
			{
				_391333_d.get()._field_Constant=static__2044521d7_NewBool(_204ebea45_And((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1db6d6709:;
			{
				_391333_d.get()._field_Constant=static__2044521d7_NewBool(_204ec0150_Gt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1db6d6770:;
			{
				_391333_d.get()._field_Constant=static__2044521d7_NewBool(_204ebeddb_Lt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1db6d67d6:;
			{
				_391333_d.get()._field_Constant=static__2044521d7_NewBool(_204ec0282_GtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1db6d684c:;
			{
				_391333_d.get()._field_Constant=static__2044521d7_NewBool(_204ec001d_LtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1db6d68b3:;
			{
				_204ec03b4_Add((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1db6d693a:;
			{
				_204ec04e6_Sub((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1db6d69b2:;
			{
				_204ec0628_Mul((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1db6d6a39:;
			{
				jule::Bool _395017_ok = _204ec075a_Div((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_395017_ok)) && (_20446423d_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
				jule::Ptr<_2050b03b6_Prim> _395521_prim = _2050aca01_Prim(_391333_d.get()._field_Kind.ptr());;
				{
					
					if (_204ebe094_IsSigInt(_395521_prim.get()._field_Kind)) {
						_case_begin_1db6e46b2:;
						{
							_2044650eb_SetI64(_391333_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_204463270_AsI64(_391333_d.get()._field_Constant.ptr())));
						}
					}
					else if (_204ebe1c6_IsUnsigInt(_395521_prim.get()._field_Kind)) {
						_case_begin_1db6e4739:;
						{
							_204477c13_SetU64(_391333_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_2044573b8_AsU64(_391333_d.get()._field_Constant.ptr())));
						}
					}
					_match_end_1db6e4607:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1db6d6ab1:;
			{
				jule::Bool _396317_ok = _204ec088c_Mod((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_396317_ok)) && (_20446423d_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1db6d6b38:;
			{
				_204ec0b01_BitwiseOr((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1db6d6bb0:;
			{
				_204ec09be_BitwiseAnd((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1db6d6c37:;
			{
				_204ec0c33_Xor((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1db6d6cae:;
			{
				_204ec0d65_Lshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1db6d6d36:;
			{
				_204ec0e97_Rshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_391333_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		_match_end_1db6d5cd0:;
	};
	_391333_d.get()._field_Model=static_cast<jule::Any>(_391333_d.get()._field_Constant);
	_2050a77ed_applyCastModelByEnum(_391333_d,_2050ad23d_Enum(_391333_d.get()._field_Kind.ptr()));
}



inline void _2050a3d05_checkData(_20509e2ea_binaryEval* _self_, jule::Ptr<_20507eb49_Data>& _398833_d) {
	jule::Ptr<_204ec7454_FnIns> _398913_f = _2050adbde_Fn(_398833_d.get()._field_Kind.ptr());;
	if ((((_398913_f != nullptr) && (_398913_f.get()._field_Decl != nullptr)) && _2043a626d_IsMethod(_398913_f.get()._field_Decl.ptr()))) {
		_205081bc3_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _2050a3ed1_checkDatas(_20509e2ea_binaryEval* _self_) {
	_2050a3d05_checkData(&(*_self_), (*_self_)._field_l);
	_2050a3d05_checkData(&(*_self_), (*_self_)._field_r);
}



inline void _2050a4256_setModel(_20509e2ea_binaryEval* _self_, jule::Ptr<_20507eb49_Data>& _400032_d) {
	if (_20508050c_IsConst(_400032_d.ptr())) {
		if ((_20508050c_IsConst((*_self_)._field_l.ptr()) && _20508050c_IsConst((*_self_)._field_r.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_20507eb49_Data> _400818_l = (*_self_)._field_l;;
	jule::Ptr<_20507eb49_Data> _400825_r = (*_self_)._field_r;;
	std::tie(_400818_l,_400825_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_20508081a_GoodOperand(_400818_l.ptr(), _400825_r)))) {
		std::tie(_400818_l,_400825_r) = std::make_tuple(_400825_r,_400818_l);
	};
	_400032_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec152a_BinopExprModel>(_204ec152a_BinopExprModel{._field_Left=jule::new_ptr<_204ec133d_OperandExprModel>(_204ec133d_OperandExprModel{._field_Kind=_400818_l.get()._field_Kind, ._field_Model=_400818_l.get()._field_Model}), ._field_Right=jule::new_ptr<_204ec133d_OperandExprModel>(_204ec133d_OperandExprModel{._field_Kind=_400825_r.get()._field_Kind, ._field_Model=_400825_r.get()._field_Model}), ._field_Op=(*_self_)._field_op}));
}



inline void _2050a44cb_postEval(_20509e2ea_binaryEval* _self_, jule::Ptr<_20507eb49_Data>& _402632_d) {
	_402632_d.get()._field_Lvalue=false;
	_2050a4256_setModel(&(*_self_), _402632_d);
}



inline jule::Ptr<_20507eb49_Data> _2050a4883_solveExplicit(_20509e2ea_binaryEval* _self_, jule::Ptr<_20507eb49_Data>& _403137_l, jule::Ptr<_20507eb49_Data>& _403152_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_403137_l,_403152_r);
	_2050a3ed1_checkDatas(&(*_self_));
	jule::Ptr<_20507eb49_Data> _403617_d = _2050a380a_evalOp(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_403137_l,_403152_r);
	_2050a3a80_evalConst(&(*_self_), _403617_d);
	if ((_403617_d != nullptr)) {
		_403617_d.get()._field_Mutable=true;
		_2050a44cb_postEval(&(*_self_), _403617_d);
	};
	return _403617_d;
}



inline jule::Ptr<_20507eb49_Data> _2050a4b91_eval(_20509e2ea_binaryEval* _self_, jule::Ptr<_204349464_BinopExpr>& _405128_op) {
	if ((_405128_op.get()._field_Op.get()._field_Kind == jule::Str("=", 1))) {
		_205081bc3_pushErr((*_self_)._field_e.ptr(), _405128_op.get()._field_Op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_205081ee2_pushSugggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20507eb49_Data> _405817_l = _20509b9bd_evalExprKind((*_self_)._field_e, _405128_op.get()._field_Left.get()._field_Kind);;
	if (((_405817_l == nullptr) || (_405817_l.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_2050aa8de_TypeKind> _406317_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_405817_l.get()._field_Kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_406317_prefix;
	});;
	jule::Ptr<_20507eb49_Data> _406617_r = _20509b9bd_evalExprKind((*_self_)._field_e, _405128_op.get()._field_Right.get()._field_Kind);;
	if (((_406617_r == nullptr) || (_406617_r.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_405128_op.get()._field_Op;
	jule::Ptr<_20507eb49_Data> _407317_d = _2050a4883_solveExplicit(&(*_self_), _405817_l,_406617_r);;
	if ((((_407317_d != nullptr) && _405817_l.get()._field_IsRune) && _406617_r.get()._field_IsRune)) {
		_407317_d.get()._field_IsRune=true;
	};
	return _407317_d;
}







std::ostream &operator<<(std::ostream &_Stream, _20509e2ea_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2050a91b2_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2050a9beb_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2050aacda_Str(_2050aa8de_TypeKind* _self_) {
	if (_2050ab813_IsNil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*_self_)._field_Variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_2050ab59e_CppLinked(&(*_self_))) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*_self_)._field_CppIdent;
	} else {
		_7417_kind+=_2050aa4b0_Kind_mptr_data[((*_self_)._field_Kind).type_offset]._2050aa05e_Str((*_self_)._field_Kind);
	};
	return _7417_kind;
}



inline jule::Bool _2050ab0e8_Equals(jule::Ptr<_2050aa8de_TypeKind> _self_, jule::Ptr<_2050aa8de_TypeKind> _9022_other) {
	if (_2050ab813_IsNil(_self_.ptr())) {
		return _2050ab813_IsNil(_9022_other.ptr());
	};
	if (_2050ab59e_CppLinked(_self_.ptr())) {
		return (_2050ab59e_CppLinked(_9022_other.ptr()) && (_self_.get()._field_CppIdent == _9022_other.get()._field_CppIdent));
	};
	return _2050aa4b0_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._2050aa36c_Equals(_self_.get()._field_Kind, _9022_other);
}



inline jule::Bool _2050ab59e_CppLinked(_2050aa8de_TypeKind* _self_) {
	return ((*_self_)._field_CppIdent.len() != 0LL);
}



inline jule::Bool _2050ab813_IsNil(_2050aa8de_TypeKind* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}



inline jule::Bool _2050aba77_Void(_2050aa8de_TypeKind* _self_) {
	jule::Ptr<_2050b03b6_Prim> _11113_prim = _2050aca01_Prim(&(*_self_));;
	return ((_11113_prim != nullptr) && (_11113_prim.get()._field_Kind == jule::Str("void", 4)));
}



inline jule::Bool _2050abcdb_Mutable(_2050aa8de_TypeKind* _self_) {
	{
		_2050aa8de_TypeKind* _11821__self = (&((*_self_)));;
		if ((_2050ade53_Struct(_11821__self) != nullptr)) {
			return _2050ade53_Struct(_11821__self).get()._field_Mutable;
		};
		if ((_2050ae1b7_Trait(_11821__self) != nullptr)) {
			return _2050ae1b7_Trait(_11821__self).get()._field_Mutable;
		};
		if ((_2050aca01_Prim(_11821__self) != nullptr)) {
			jule::Ptr<_2050b03b6_Prim> _12721_p = _2050aca01_Prim(_11821__self);;
			return _2050b385e_IsAny(_12721_p.ptr());
		};
		if ((_2050ad716_Arr(_11821__self) != nullptr)) {
			return _2050abcdb_Mutable(_2050ad716_Arr(_11821__self).get()._field_Elem.ptr());
		};
		return (((_2050ad97a_Slc(_11821__self) != nullptr) || (_2050acec9_Ptr(_11821__self) != nullptr)) || (_2050acc65_Sptr(_11821__self) != nullptr));
	};
}



inline jule::Bool _2050ac050_NilCompatible(_2050aa8de_TypeKind* _self_) {
	{
		_2050aa8de_TypeKind* _14221__self = (&((*_self_)));;
		jule::Ptr<_2050b03b6_Prim> _14417_prim = _2050aca01_Prim(_14221__self);;
		if (((_14417_prim != nullptr) && _2050b385e_IsAny(_14417_prim.ptr()))) {
			return true;
		};
		return (((((((_2050ab813_IsNil(_14221__self) || (_2050adbde_Fn(_14221__self) != nullptr)) || (_2050acc65_Sptr(_14221__self) != nullptr)) || (_2050acec9_Ptr(_14221__self) != nullptr)) || (_2050ae1b7_Trait(_14221__self) != nullptr)) || (_2050ad97a_Slc(_14221__self) != nullptr)) || (_2050ae42b_Map(_14221__self) != nullptr)) || (_2050ad4a2_TypeEnum(_14221__self) != nullptr));
	};
}



inline jule::Bool _2050ac2b4_PerformsRC(_2050aa8de_TypeKind* _self_) {
	{
		_2050aa8de_TypeKind* _16321__self = (&((*_self_)));;
		jule::Ptr<_2050b03b6_Prim> _16417_prim = _2050aca01_Prim(_16321__self);;
		if ((_16417_prim != nullptr)) {
			return _2050b385e_IsAny(_16417_prim.ptr());
		};
		return (((_2050acc65_Sptr(_16321__self) != nullptr) || (_2050ad97a_Slc(_16321__self) != nullptr)) || (_2050ae1b7_Trait(_16321__self) != nullptr));
	};
}



inline jule::Bool _2050ac528_SupportsCloning(_2050aa8de_TypeKind* _self_) {
	{
		_2050aa8de_TypeKind* _17521__self = (&((*_self_)));;
		{
			
			if ((_2050aca01_Prim(_17521__self) != nullptr)) {
				_case_begin_1db73b176:;
				{
					return (!(_2050b385e_IsAny(_2050aca01_Prim(_17521__self).ptr())));
				}
			}
			else if ((_2050ad23d_Enum(_17521__self) != nullptr)) {
				_case_begin_1db73b1dc:;
				{
					return true;
				}
			}
			else if ((_2050adbde_Fn(_17521__self) != nullptr)) {
				_case_begin_1db73b253:;
				{
					return true;
				}
			}
			else if ((_2050acec9_Ptr(_17521__self) != nullptr)) {
				_case_begin_1db73b2b9:;
				{
					return true;
				}
			}
			else if ((_2050ad97a_Slc(_17521__self) != nullptr)) {
				_case_begin_1db73b594:;
				{
					return _2050ac528_SupportsCloning(_2050ad97a_Slc(_17521__self).get()._field_Elem.ptr());
				}
			}
			else if ((_2050ae42b_Map(_17521__self) != nullptr)) {
				_case_begin_1db73b60a:;
				{
					jule::Ptr<_2050b5b5d_Map> _18821_m = _2050ae42b_Map(_17521__self);;
					return (_2050ac528_SupportsCloning(_18821_m.get()._field_Key.ptr()) && _2050ac528_SupportsCloning(_18821_m.get()._field_Val.ptr()));
				}
			}
			else if ((_2050ad716_Arr(_17521__self) != nullptr)) {
				_case_begin_1db73b671:;
				{
					return _2050ac528_SupportsCloning(_2050ad716_Arr(_17521__self).get()._field_Elem.ptr());
				}
			}
			else if ((_2050acc65_Sptr(_17521__self) != nullptr)) {
				_case_begin_1db73b6d7:;
				{
					return _2050ac528_SupportsCloning(_2050acc65_Sptr(_17521__self).get()._field_Elem.ptr());
				}
			}
			else if ((_2050ade53_Struct(_17521__self) != nullptr)) {
				_case_begin_1db73b74d:;
				{
					jule::Ptr<_20435cc5d_StructIns> _19525_s = _2050ade53_Struct(_17521__self);;
					return (((_19525_s.get()._field_Decl != nullptr) && (!(_19525_s.get()._field_Decl.get()._field_CppLinked))) && _204321518_IsDerives(_19525_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_1db73b110:;
				{
					return false;
				}
			}
			_match_end_1db73b099:;
		};
	};
}



inline jule::Bool _2050ac78c_Variadicable(_2050aa8de_TypeKind* _self_) {
	{
		_2050aa8de_TypeKind* _20821__self = (&((*_self_)));;
		return (_2050ad97a_Slc(_20821__self) != nullptr);
	};
}



inline jule::Ptr<_2050b03b6_Prim> _2050aca01_Prim(_2050aa8de_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_2050b03b6_Prim>>()) {
			_case_begin_1db744789:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_2050b03b6_Prim>();
			}
		}
		else {
			_case_begin_1db74406e:;
			{
				return nullptr;
			}
		}
		_match_end_1db72b166:;
	};
}



inline jule::Ptr<_2050b3b4a_Sptr> _2050acc65_Sptr(_2050aa8de_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_2050b3b4a_Sptr>>()) {
			_case_begin_1db7454c1:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_2050b3b4a_Sptr>();
			}
		}
		else {
			_case_begin_1db744ee8:;
			{
				return nullptr;
			}
		}
		_match_end_1db744c0c:;
	};
}



inline jule::Ptr<_2050b71ae_Ptr> _2050acec9_Ptr(_2050aa8de_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_2050b71ae_Ptr>>()) {
			_case_begin_1db7462b3:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_2050b71ae_Ptr>();
			}
		}
		else {
			_case_begin_1db745cda:;
			{
				return nullptr;
			}
		}
		_match_end_1db7459ee:;
	};
}



inline jule::Ptr<_204ed1a35_Enum> _2050ad23d_Enum(_2050aa8de_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_204ed1a35_Enum>>()) {
			_case_begin_1db7470a5:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_204ed1a35_Enum>();
			}
		}
		else {
			_case_begin_1db746acc:;
			{
				return nullptr;
			}
		}
		_match_end_1db7467e1:;
	};
}



inline jule::Ptr<_204ed3130_TypeEnum> _2050ad4a2_TypeEnum(_2050aa8de_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_204ed3130_TypeEnum>>()) {
			_case_begin_1db747d97:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_204ed3130_TypeEnum>();
			}
		}
		else {
			_case_begin_1db7478be:;
			{
				return nullptr;
			}
		}
		_match_end_1db7475d3:;
	};
}



inline jule::Ptr<_2050b6752_Arr> _2050ad716_Arr(_2050aa8de_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_2050b6752_Arr>>()) {
			_case_begin_1db748b89:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_2050b6752_Arr>();
			}
		}
		else {
			_case_begin_1db7486b1:;
			{
				return nullptr;
			}
		}
		_match_end_1db7483c5:;
	};
}



inline jule::Ptr<_2050b45a7_Slc> _2050ad97a_Slc(_2050aa8de_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_2050b45a7_Slc>>()) {
			_case_begin_1db74997b:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_2050b45a7_Slc>();
			}
		}
		else {
			_case_begin_1db7494a3:;
			{
				return nullptr;
			}
		}
		_match_end_1db7491b7:;
	};
}



inline jule::Ptr<_204ec7454_FnIns> _2050adbde_Fn(_2050aa8de_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_204ec7454_FnIns>>()) {
			_case_begin_1db74a76d:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_204ec7454_FnIns>();
			}
		}
		else {
			_case_begin_1db74a295:;
			{
				return nullptr;
			}
		}
		_match_end_1db749ea9:;
	};
}



inline jule::Ptr<_20435cc5d_StructIns> _2050ade53_Struct(_2050aa8de_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_20435cc5d_StructIns>>()) {
			_case_begin_1db74b560:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_20435cc5d_StructIns>();
			}
		}
		else {
			_case_begin_1db74b087:;
			{
				return nullptr;
			}
		}
		_match_end_1db74ac9b:;
	};
}



inline jule::Ptr<_204ece8e0_Trait> _2050ae1b7_Trait(_2050aa8de_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_204ece8e0_Trait>>()) {
			_case_begin_1db74c352:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_204ece8e0_Trait>();
			}
		}
		else {
			_case_begin_1db74bd79:;
			{
				return nullptr;
			}
		}
		_match_end_1db74ba8d:;
	};
}



inline jule::Ptr<_2050b5b5d_Map> _2050ae42b_Map(_2050aa8de_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_2050b5b5d_Map>>()) {
			_case_begin_1db74d144:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_2050b5b5d_Map>();
			}
		}
		else {
			_case_begin_1db74cb6b:;
			{
				return nullptr;
			}
		}
		_match_end_1db74c880:;
	};
}



inline jule::Ptr<_2050b5135_Tuple> _2050ae690_Tup(_2050aa8de_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_2050b5135_Tuple>>()) {
			_case_begin_1db74de36:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_2050b5135_Tuple>();
			}
		}
		else {
			_case_begin_1db74d95d:;
			{
				return nullptr;
			}
		}
		_match_end_1db74d672:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2050aa8de_TypeKind _Src) {
	_Stream << _2050aacda_Str(&_Src);
	return _Stream;
}



inline jule::Bool _2050aedee_checked(_2050aea47_TypeSymbol* _self_) {
	return ((*_self_)._field_Kind != nullptr);
}



inline void _2050b00ca_removeKind(_2050aea47_TypeSymbol* _self_) {
	(*_self_)._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _2050aea47_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2050b0729_Str(_2050b03b6_Prim* _self_) {
	return (*_self_)._field_Kind;
}



inline jule::Bool _2050b0a37_Equals(jule::Ptr<_2050b03b6_Prim> _self_, jule::Ptr<_2050aa8de_TypeKind> _36122_other) {
	jule::Ptr<_2050b03b6_Prim> _36213_prim = _2050aca01_Prim(_36122_other.ptr());;
	if ((_36213_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_Kind == _36213_prim.get()._field_Kind);
}



inline jule::Bool _2050b0eaa_IsConstraint(_2050b03b6_Prim* _self_) {
	return ((((!(_2050b35ea_IsStr(&(*_self_)))) && (!(_2050b385e_IsAny(&(*_self_))))) && (!(_2050b3386_IsBool(&(*_self_))))) && (!(_204ebe56c_IsNum((*_self_)._field_Kind))));
}



inline jule::Bool _2050b121e_IsI8(_2050b03b6_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i8", 2));
}



inline jule::Bool _2050b1483_IsI16(_2050b03b6_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i16", 3));
}



inline jule::Bool _2050b16e7_IsI32(_2050b03b6_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i32", 3));
}



inline jule::Bool _2050b195b_IsI64(_2050b03b6_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i64", 3));
}



inline jule::Bool _2050b1bc0_IsU8(_2050b03b6_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u8", 2));
}



inline jule::Bool _2050b1e34_IsU16(_2050b03b6_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u16", 3));
}



inline jule::Bool _2050b2198_IsU32(_2050b03b6_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u32", 3));
}



inline jule::Bool _2050b240c_IsU64(_2050b03b6_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u64", 3));
}



inline jule::Bool _2050b2671_IsF32(_2050b03b6_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f32", 3));
}



inline jule::Bool _2050b28d5_IsF64(_2050b03b6_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f64", 3));
}



inline jule::Bool _2050b2b49_IsInt(_2050b03b6_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("int", 3));
}



inline jule::Bool _2050b2dad_IsUint(_2050b03b6_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uint", 4));
}



inline jule::Bool _2050b3122_IsUintptr(_2050b03b6_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uintptr", 7));
}



inline jule::Bool _2050b3386_IsBool(_2050b03b6_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("bool", 4));
}



inline jule::Bool _2050b35ea_IsStr(_2050b03b6_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("str", 3));
}



inline jule::Bool _2050b385e_IsAny(_2050b03b6_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _2050b03b6_Prim _Src) {
	_Stream << _2050b0729_Str(&_Src);
	return _Stream;
}



inline jule::Str _2050b3ead_Str(_2050b3b4a_Sptr* _self_) {
	return (jule::Str("&", 1) + _2050aacda_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _2050b42bb_Equals(jule::Ptr<_2050b3b4a_Sptr> _self_, jule::Ptr<_2050aa8de_TypeKind> _43822_other) {
	jule::Ptr<_2050b3b4a_Sptr> _43913_sptr = _2050acc65_Sptr(_43822_other.ptr());;
	if ((_43913_sptr == nullptr)) {
		return false;
	};
	return _2050ab0e8_Equals(_self_.get()._field_Elem, _43913_sptr.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _2050b3b4a_Sptr _Src) {
	_Stream << _2050b3ead_Str(&_Src);
	return _Stream;
}



inline jule::Str _2050b4ab3_Str(_2050b45a7_Slc* _self_) {
	return (jule::Str("[]", 2) + _2050aacda_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _2050b4dc1_Equals(jule::Ptr<_2050b45a7_Slc> _self_, jule::Ptr<_2050aa8de_TypeKind> _45722_other) {
	jule::Ptr<_2050b45a7_Slc> _45813_slc = _2050ad97a_Slc(_45722_other.ptr());;
	if ((_45813_slc == nullptr)) {
		return false;
	};
	return _2050ab0e8_Equals(_self_.get()._field_Elem, _45813_slc.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _2050b45a7_Slc _Src) {
	_Stream << _2050b4ab3_Str(&_Src);
	return _Stream;
}



inline jule::Str _2050b5498_Str(_2050b5135_Tuple* _self_) {
	jule::Str _47417_s = jule::Str("(", 1);;
	_47417_s+=_2050aacda_Str((*_self_)._field_Types[0LL].ptr());
	{
		auto expr = (*_self_)._field_Types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1db75e4b8:;
		if (it != expr.end()) {
			jule::Ptr<_2050aa8de_TypeKind> &_47616_t = *it;
			{
				_47417_s+=jule::Str(",", 1);
				_47417_s+=_2050aacda_Str(_47616_t.ptr());
			}
			_iter_next_1db75e4b8:;
			++it;
			goto _iter_begin_1db75e4b8;
		}
		_iter_end_1db75e4b8:;
	};
	_47417_s+=jule::Str(")", 1);
	return _47417_s;
}



inline jule::Bool _2050b57a6_Equals(jule::Ptr<_2050b5135_Tuple> _self_, jule::Ptr<_2050aa8de_TypeKind> _48522_other) {
	jule::Ptr<_2050b5135_Tuple> _48613_tup = _2050ae690_Tup(_48522_other.ptr());;
	if ((_48613_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Types.len() != _48613_tup.get()._field_Types.len())) {
		return false;
	};
	jule::I64 _49317_i = 0LL;;
	for (; (_49317_i < _self_.get()._field_Types.len()); (_49317_i)++) {
		{
			if ((!(_2050ab0e8_Equals(_self_.get()._field_Types[_49317_i], _48613_tup.get()._field_Types[_49317_i])))) {
				return false;
			};
		}
	_iter_next_1db76229b:;
	}
	_iter_end_1db76229b:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _2050b5135_Tuple _Src) {
	_Stream << _2050b5498_Str(&_Src);
	return _Stream;
}



inline jule::Str _2050b5ec1_Str(_2050b5b5d_Map* _self_) {
	jule::Str _51317_s = jule::Str("[", 1);;
	_51317_s+=_2050aacda_Str((*_self_)._field_Key.ptr());
	_51317_s+=jule::Str(":", 1);
	_51317_s+=_2050aacda_Str((*_self_)._field_Val.ptr());
	_51317_s+=jule::Str("]", 1);
	return _51317_s;
}



inline jule::Bool _2050b62ce_Equals(jule::Ptr<_2050b5b5d_Map> _self_, jule::Ptr<_2050aa8de_TypeKind> _52222_other) {
	jule::Ptr<_2050b5b5d_Map> _52313_m = _2050ae42b_Map(_52222_other.ptr());;
	if ((_52313_m == nullptr)) {
		return false;
	};
	return (_2050ab0e8_Equals(_self_.get()._field_Key, _52313_m.get()._field_Key) && _2050ab0e8_Equals(_self_.get()._field_Val, _52313_m.get()._field_Val));
}







std::ostream &operator<<(std::ostream &_Stream, _2050b5b5d_Map _Src) {
	_Stream << _2050b5ec1_Str(&_Src);
	return _Stream;
}



inline jule::Str _2050b6ab5_Str(_2050b6752_Arr* _self_) {
	jule::Str _54117_s = jule::Str("[", 1);;
	_54117_s+=_204ebc823_Itoa((*_self_)._field_N);
	_54117_s+=jule::Str("]", 1);
	_54117_s+=_2050aacda_Str((*_self_)._field_Elem.ptr());
	return _54117_s;
}



inline jule::Bool _2050b6dc3_Equals(jule::Ptr<_2050b6752_Arr> _self_, jule::Ptr<_2050aa8de_TypeKind> _54922_other) {
	jule::Ptr<_2050b6752_Arr> _55013_arr = _2050ad716_Arr(_54922_other.ptr());;
	if ((_55013_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_N == _55013_arr.get()._field_N) && _2050ab0e8_Equals(_self_.get()._field_Elem, _55013_arr.get()._field_Elem));
}







std::ostream &operator<<(std::ostream &_Stream, _2050b6752_Arr _Src) {
	_Stream << _2050b6ab5_Str(&_Src);
	return _Stream;
}



inline jule::Str _2050b7522_Str(_2050b71ae_Ptr* _self_) {
	if (_2050b7b82_IsUnsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _2050aacda_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _2050b7830_Equals(jule::Ptr<_2050b71ae_Ptr> _self_, jule::Ptr<_2050aa8de_TypeKind> _57322_other) {
	jule::Ptr<_2050b71ae_Ptr> _57413_ptr = _2050acec9_Ptr(_57322_other.ptr());;
	if ((_57413_ptr == nullptr)) {
		return false;
	};
	return _2050ab0e8_Equals(_self_.get()._field_Elem, _57413_ptr.get()._field_Elem);
}



inline jule::Bool _2050b7b82_IsUnsafe(_2050b71ae_Ptr* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _2050b71ae_Ptr _Src) {
	_Stream << _2050b7522_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2050b8105_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _2050b9623_pushErr(_2050b8e19_typeChecker* _self_, jule::Ptr<_202b89679_Token> _65626_token, jule::Str _65641_fmt, jule::Slice<jule::Any> _65654_args) {
	_205016c24_pushErr((*_self_)._field_s.ptr(), _65626_token,_65641_fmt,jule::Any(_65654_args));
}



inline void _2050b97ee_allowBuiltin(_2050b8e19_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _2050b99ca_disallowBuiltin(_2050b8e19_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Ptr<_2050b03b6_Prim> _2050b9cd8_buildPrim(_2050b8e19_typeChecker* _self_, jule::Ptr<_204341b32_IdentTypeDecl>& _66829_decl) {
	if ((!(_2050c3dd0_isPrim(_66829_decl.get()._field_Ident)))) {
		_2050b9623_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_66829_decl.get()._field_Generics.len() > 0LL)) {
		_2050b9623_pushErr(&(*_self_), _66829_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_66829_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _2050c3891_buildPrimType(_66829_decl.get()._field_Ident);
}



inline void _1db7729b5_pushReference(_2050b8e19_typeChecker* _self_, jule::Ptr<_20435cc5d_StructIns>& _68240_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1db4c68c3_Exist((*_self_)._field_refers.ptr(), _68240_t)) {
		return;;
	};
	_204ec84aa_Push((*_self_)._field_refers.ptr(), jule::Any(_68240_t));
}

inline void _1db775c1b_pushReference(_2050b8e19_typeChecker* _self_, jule::Ptr<_204ece8e0_Trait>& _68240_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1db777a42_Exist((*_self_)._field_refers.ptr(), _68240_t)) {
		return;;
	};
	_204ec84aa_Push((*_self_)._field_refers.ptr(), jule::Any(_68240_t));
}



inline void _2050ba2d3_pushReferenceByKind(_2050b8e19_typeChecker* _self_, jule::Ptr<_2050aa8de_TypeKind>& _69243_k) {
	{
		
		if ((_2050ade53_Struct(_69243_k.ptr()) != nullptr)) {
			_case_begin_1db7715a7:;
			{
				jule::Ptr<_20435cc5d_StructIns> _69521_t = _2050ade53_Struct(_69243_k.ptr());;
				_1db7729b5_pushReference(&(*_self_), _69521_t);
			}
		}
		else if ((_2050ae1b7_Trait(_69243_k.ptr()) != nullptr)) {
			_case_begin_1db77162e:;
			{
				jule::Ptr<_204ece8e0_Trait> _69821_t = _2050ae1b7_Trait(_69243_k.ptr());;
				_1db775c1b_pushReference(&(*_self_), _69821_t);
			}
		}
		_match_end_1db771486:;
	};
}



inline void _2050ba69b_pushCycleError(_2050b8e19_typeChecker* _self_, jule::Any _70329_def1, jule::Any _70340_def2, jule::Str& _70356_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _70513_getIdent = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _70528_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _70528_def };
			
			if (_match_expr.type_is<jule::Ptr<_2050a9beb_TypeAlias>>()) {
				_case_begin_1db77b55c:;
				{
					return _70528_def.operator jule::Ptr<_2050a9beb_TypeAlias>().get()._field_Ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_20433367e_Struct>>()) {
				_case_begin_1db77ae74:;
				{
					return _70528_def.operator jule::Ptr<_20433367e_Struct>().get()._field_Ident;
				}
			}
			else {
				_case_begin_1db77ad31:;
				{
					return jule::Str();
				}
			}
			_match_end_1db77ac43:;
		};
	});;
	jule::Str _71513_def1Ident = _70513_getIdent(_70329_def1);;
	jule::Str _71613_def2Ident = _70513_getIdent(_70340_def2);;
	jule::Str _71713_refersTo = _20285bbed_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_71513_def1Ident),jule::Any(_71613_def2Ident)}));;
	(_70356_message).buffer.insert(0, (((_2027b6509_Repeat(jule::Str(" ", 1),4LL) + _71713_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _2050baa53_checkCrossCycle(_2050b8e19_typeChecker* _self_, jule::Any _72130_decl, jule::Str& _72146_message) {
	{
		auto &_match_expr{ _72130_decl };
		
		if (_match_expr.type_is<jule::Ptr<_2050a9beb_TypeAlias>>()) {
			_case_begin_1db77d9c1:;
			{
				jule::Ptr<_2050a9beb_TypeAlias> _72417_ta = _72130_decl.operator jule::Ptr<_2050a9beb_TypeAlias>();;
				{
					auto &expr = _72417_ta.get()._field_Refers;
					auto it = expr.begin();
					_iter_begin_1db77e780:;
					if (it != expr.end()) {
						jule::Any &_72520_d = *it;
						{
							{
								
								if ((_72520_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_1db780275:;
									{
										_2050ba69b_pushCycleError(&(*_self_), jule::Any(_72417_ta),jule::Any(_72520_d),_72146_message);
										return false;
									}
								}
								else if ((!(_2050baa53_checkCrossCycle(&(*_self_), jule::Any(_72520_d),_72146_message)))) {
									_case_begin_1db7802ec:;
									{
										_2050ba69b_pushCycleError(&(*_self_), jule::Any(_72417_ta),jule::Any(_72520_d),_72146_message);
										return false;
									}
								}
								_match_end_1db780154:;
							};
						}
						_iter_next_1db77e780:;
						++it;
						goto _iter_begin_1db77e780;
					}
					_iter_end_1db77e780:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20433367e_Struct>>()) {
			_case_begin_1db77da37:;
			{
				jule::Ptr<_20433367e_Struct> _73617_s = _72130_decl.operator jule::Ptr<_20433367e_Struct>();;
				{
					auto &expr = _73617_s.get()._field_Depends;
					auto it = expr.begin();
					_iter_begin_1db77ee89:;
					if (it != expr.end()) {
						jule::Ptr<_20433367e_Struct> &_73720_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _73720_d)) {
									_case_begin_1db782a4c:;
									{
										_2050ba69b_pushCycleError(&(*_self_), jule::Any(_73617_s),jule::Any(_73720_d),_72146_message);
										return false;
									}
								}
								else if ((!(_2050baa53_checkCrossCycle(&(*_self_), jule::Any(_73720_d),_72146_message)))) {
									_case_begin_1db782ac4:;
									{
										_2050ba69b_pushCycleError(&(*_self_), jule::Any(_73617_s),jule::Any(_73720_d),_72146_message);
										return false;
									}
								}
								_match_end_1db78292b:;
							};
						}
						_iter_next_1db77ee89:;
						++it;
						goto _iter_begin_1db77ee89;
					}
					_iter_end_1db77ee89:;
				};
			}
		}
		_match_end_1db77d96b:;
	};
	return true;
}



inline jule::Bool _2050bae0a_checkIllegalCycles(_2050b8e19_typeChecker* _self_, jule::Ptr<_204341b32_IdentTypeDecl>& _75538_ident, jule::Any _75565_decl) {
	jule::Bool _75578_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_75578_ok = true;
		return _75578_ok;
	};
	{
		auto &_match_expr{ _75565_decl };
		
		if (_match_expr.type_is<jule::Ptr<_20433367e_Struct>>()) {
			_case_begin_1db7824db:;
			{
				if (((*_self_)._field_notPlain || _75565_decl.operator jule::Ptr<_20433367e_Struct>().get()._field_CppLinked)) {
					_75578_ok = true;
					return _75578_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2050a9beb_TypeAlias>>()) {
			_case_begin_1db782552:;
			{
				if (_75565_decl.operator jule::Ptr<_2050a9beb_TypeAlias>().get()._field_CppLinked) {
					_75578_ok = true;
					return _75578_ok;
				};
			}
		}
		_match_end_1db78271c:;
	};
	if ((_75565_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_2050b9623_pushErr(&(*_self_), _75538_ident.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_75578_ok = false;
		return _75578_ok;
	};
	jule::Str _77817_message = jule::Str();;
	if ((!(_2050baa53_checkCrossCycle(&(*_self_), jule::Any(_75565_decl),_77817_message)))) {
		jule::Str _78121_errMsg = _77817_message;;
		_77817_message=jule::Str();
		_2050ba69b_pushCycleError(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_75565_decl),_77817_message);
		_78121_errMsg+=_77817_message;
		_2050b9623_pushErr(&(*_self_), _75538_ident.get()._field_Token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_78121_errMsg)}));
		_75578_ok = false;
		return _75578_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_2050a9beb_TypeAlias>>()) {
			_case_begin_1db78949e:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({jule::Any(_75565_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20433367e_Struct>>()) {
			_case_begin_1db789603:;
			{
				{
					auto &_match_expr{ _75565_decl };
					
					if (_match_expr.type_is<jule::Ptr<_20433367e_Struct>>()) {
						_case_begin_1db789da6:;
						{
							jule::Ptr<_20433367e_Struct> _79725_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_20433367e_Struct>();;
							_79725_s.get()._field_Depends = jule::alloc_for_append(_79725_s.get()._field_Depends,1);_79725_s.get()._field_Depends.__push(_75565_decl.operator jule::Ptr<_20433367e_Struct>());;
						}
					}
					_match_end_1db789ca7:;
				};
			}
		}
		_match_end_1db789229:;
	};
	_75578_ok = true;
	return _75578_ok;
}



inline jule::Trait<_2050aa4b0_Kind> _2050bb2b2_fromTypeAlias(_2050b8e19_typeChecker* _self_, jule::Ptr<_204341b32_IdentTypeDecl>& _80533_decl, jule::Ptr<_2050a9beb_TypeAlias>& _80560_ta) {
	if ((!(_2050173ea_isAccessibleDefine((*_self_)._field_s.ptr(), _80560_ta.get()._field_Public,_80560_ta.get()._field_Token)))) {
		_2050b9623_pushErr(&(*_self_), _80533_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_80533_decl.get()._field_Ident)}));
		return nullptr;
	};
	_80560_ta.get()._field_Used=true;
	if ((_80533_decl.get()._field_Generics.len() > 0LL)) {
		_2050b9623_pushErr(&(*_self_), _80533_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_80533_decl.get()._field_Ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_bannedGenerics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1db78ec68:;
			if (it != expr.end()) {
				jule::Ptr<_2050a9beb_TypeAlias> _82220_bg = *it;
				{
					if (((_82220_bg == _80560_ta) || ((_80560_ta.get()._field_Kind.get()._field_Kind != nullptr) && _2050ab0e8_Equals(_80560_ta.get()._field_Kind.get()._field_Kind, _82220_bg.get()._field_Kind.get()._field_Kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1db78ec68;
					};
				}
				_iter_next_1db78ec68:;
				++it;
				goto _iter_begin_1db78ec68;
			}
			_iter_end_1db78ec68:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1db791cc0:;
			if (it != expr.end()) {
				jule::Ptr<_2050a9beb_TypeAlias> _83320_bg = *it;
				{
					if ((_83320_bg == _80560_ta)) {
						_2050b9623_pushErr(&(*_self_), _80533_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80533_decl.get()._field_Ident)}));
						return nullptr;
					};
					{
						auto &expr = _80560_ta.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1db792760:;
						if (it != expr.end()) {
							jule::Ptr<_2050a9beb_TypeAlias> _83824_dg = *it;
							{
								if ((_83320_bg == _83824_dg)) {
									_2050b9623_pushErr(&(*_self_), _80533_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80533_decl.get()._field_Ident)}));
									return nullptr;
								};
							}
							_iter_next_1db792760:;
							++it;
							goto _iter_begin_1db792760;
						}
						_iter_end_1db792760:;
					};
				}
				_iter_next_1db791cc0:;
				++it;
				goto _iter_begin_1db791cc0;
			}
			_iter_end_1db791cc0:;
		};
	};
	jule::Bool _84717_ok = _2050bae0a_checkIllegalCycles(&(*_self_), _80533_decl,jule::Any(_80560_ta));;
	if ((!(_84717_ok))) {
		return nullptr;
	};
	_84717_ok=_205021c0c_checkTypeAliasDeclKind((*_self_)._field_s, _80560_ta,(*_self_)._field_lookup);
	if ((!(_84717_ok))) {
		return nullptr;
	};
	if ((_80560_ta.get()._field_Generic && ((*_self_)._field_ownerAlias != nullptr))) {
		(*_self_)._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*_self_)._field_ownerAlias.get()._field_Generics,1);(*_self_)._field_ownerAlias.get()._field_Generics.__push(_80560_ta);;
	};
	jule::Ptr<_2050aa8de_TypeKind> _86417_tk = jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Generic=_80560_ta.get()._field_Generic, ._field_Kind=_80560_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_2050ba2d3_pushReferenceByKind(&(*_self_), _86417_tk);
	if (_80560_ta.get()._field_CppLinked) {
		_86417_tk.get()._field_CppIdent=_80560_ta.get()._field_Ident;
	} else {
		_86417_tk.get()._field_CppIdent=_80560_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_2050aa4b0_Kind>(_86417_tk, 5);
}



inline jule::Ptr<_204ed1a35_Enum> _2050bb669_fromEnum(_2050b8e19_typeChecker* _self_, jule::Ptr<_204341b32_IdentTypeDecl>& _87728_decl, jule::Ptr<_204ed1a35_Enum>& _87755_e) {
	if ((!(_2050173ea_isAccessibleDefine((*_self_)._field_s.ptr(), _87755_e.get()._field_Public,_87755_e.get()._field_Token)))) {
		_2050b9623_pushErr(&(*_self_), _87728_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_87728_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_87728_decl.get()._field_Generics.len() > 0LL)) {
		_2050b9623_pushErr(&(*_self_), _87728_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_87728_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _87755_e;
}



inline jule::Ptr<_204ed3130_TypeEnum> _2050bba21_fromTypeEnum(_2050b8e19_typeChecker* _self_, jule::Ptr<_204341b32_IdentTypeDecl>& _88932_decl, jule::Ptr<_204ed3130_TypeEnum>& _88959_e) {
	if ((!(_2050173ea_isAccessibleDefine((*_self_)._field_s.ptr(), _88959_e.get()._field_Public,_88959_e.get()._field_Token)))) {
		_2050b9623_pushErr(&(*_self_), _88932_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_88932_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_88932_decl.get()._field_Generics.len() > 0LL)) {
		_2050b9623_pushErr(&(*_self_), _88932_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_88932_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _88959_e;
}



inline jule::Ptr<_204ece8e0_Trait> _2050bbdc8_fromTrait(_2050b8e19_typeChecker* _self_, jule::Ptr<_204341b32_IdentTypeDecl>& _90129_decl, jule::Ptr<_204ece8e0_Trait>& _90156_t) {
	if ((!(_2050173ea_isAccessibleDefine((*_self_)._field_s.ptr(), _90156_t.get()._field_Public,_90156_t.get()._field_Token)))) {
		_2050b9623_pushErr(&(*_self_), _90129_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_90129_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_90129_decl.get()._field_Generics.len() > 0LL)) {
		_2050b9623_pushErr(&(*_self_), _90129_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_90129_decl.get()._field_Ident)}));
		return nullptr;
	};
	_1db775c1b_pushReference(&(*_self_), _90156_t);
	return _90156_t;
}



inline jule::Bool _2050bc280_checkStructIns(_2050b8e19_typeChecker* _self_, jule::Ptr<_20435cc5d_StructIns>& _91438_ins, jule::Ptr<_202b89679_Token>& _91460_errorToken) {
	jule::Bool _91482_ok = jule::Bool();
	if (_91438_ins.get()._field_Checked) {
		_91482_ok = true;
		return _91482_ok;
	};
	_91438_ins.get()._field_Checked=true;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _91438_ins.get()._field_Decl))) {
		_91482_ok = true;
		return _91482_ok;
	};
	if ((!(_20502ad8c_precheckStructIns((*_self_)._field_s, _91438_ins,_91460_errorToken)))) {
		_91482_ok = false;
		return _91482_ok;
	};
	if ((_91438_ins.get()._field_Generics.len() > 0LL)) {
		_20502b80a_checkStructInsOperators((*_self_)._field_s, _91438_ins);
		_20502b112_checkStructIns((*_self_)._field_s, _91438_ins);
	};
	_91482_ok = true;
	return _91482_ok;
}



inline void _2050bc527_appendUsedStructReference(_2050b8e19_typeChecker* _self_, jule::Ptr<_20433367e_Struct>& _93549_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_20433367e_Struct>>()) {
			_case_begin_1db7a4e59:;
			{
				jule::Ptr<_20433367e_Struct> _94121_refS = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_20433367e_Struct>();;
				if ((!(_204323916_IsUses(_94121_refS.ptr(), _93549_s)))) {
					_94121_refS.get()._field_Uses = jule::alloc_for_append(_94121_refS.get()._field_Uses,1);_94121_refS.get()._field_Uses.__push(_93549_s);;
				};
			}
		}
		_match_end_1db7a4be5:;
	};
}



inline jule::Ptr<_20435cc5d_StructIns> _2050bc8e0_buildStructInstance(_2050b8e19_typeChecker* _self_, jule::Ptr<_204341b32_IdentTypeDecl>& _94843_decl, jule::Ptr<_20433367e_Struct>& _94870_s) {
	jule::Ptr<_2050b8105_referencer> _95017_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>> _95217_bannedGenerics = (*_self_)._field_bannedGenerics;;
	if (((*_self_)._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_204ee42a6_scopeChecker>>()) {
				_case_begin_1db7a7db3:;
				{
					jule::Ptr<_204ee42a6_scopeChecker> _95925_sc = (*_self_)._field_lookup.operator jule::Ptr<_204ee42a6_scopeChecker>();;
					jule::Ptr<_204ee42a6_scopeChecker> _96025_hard = _204ee762d_getHardRoot(_95925_sc);;
					if (((_96025_hard.get()._field_owner.get()._field_Owner == nullptr) || (_96025_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != _94870_s))) {
						goto _match_end_1db7a6d3a;
					};
					jule::I64 _96421_n = (_96025_hard.get()._field_owner.get()._field_Generics.len() + _96025_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*_self_)._field_bannedGenerics=_96025_hard.get()._field_table.get()._field_TypeAliases.slice(0LL,_96421_n);
				}
			}
			_match_end_1db7a6d3a:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Trait<_2050c6520_Lookup> _97417_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=(*_self_)._field_rootLookup;
	jule::Ptr<_20435cc5d_StructIns> _97817_ins = _20430d48e_instance(_94870_s);;
	_97817_ins.get()._field_Generics=jule::Slice<jule::Ptr<_2050a91b2_InsGeneric>>::alloc(0LL,_94843_decl.get()._field_Generics.len());
	{
		auto &expr = _94843_decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1db7a54a9:;
		if (it != expr.end()) {
			jule::Ptr<_20434156b_TypeDecl> _98021_g = *it;
			{
				jule::Ptr<_2050aa8de_TypeKind> _98121_kind = _2050c0d77_build(&(*_self_), _98021_g.get()._field_Kind);;
				if ((_98121_kind == nullptr)) {
					return nullptr;
				};
				_97817_ins.get()._field_Generics = jule::alloc_for_append(_97817_ins.get()._field_Generics,1);_97817_ins.get()._field_Generics.__push(jule::new_ptr<_2050a91b2_InsGeneric>(_2050a91b2_InsGeneric{._field_Kind=_98121_kind, }));;
			}
			_iter_next_1db7a54a9:;
			++it;
			goto _iter_begin_1db7a54a9;
		}
		_iter_end_1db7a54a9:;
	};
	(*_self_)._field_lookup=_97417_lookup;
	(*_self_)._field_bannedGenerics=_95217_bannedGenerics;
	(*_self_)._field_referencer=_95017_referencer;
	return _97817_ins;
}



inline jule::Ptr<_20435cc5d_StructIns> _2050bcc97_fromStruct(_2050b8e19_typeChecker* _self_, jule::Ptr<_204341b32_IdentTypeDecl>& _99634_decl, jule::Ptr<_20433367e_Struct>& _99661_s) {
	if ((!(_2050173ea_isAccessibleDefine((*_self_)._field_s.ptr(), _99661_s.get()._field_Public,_99661_s.get()._field_Token)))) {
		_2050b9623_pushErr(&(*_self_), _99634_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_99634_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_99634_decl.get()._field_Generics.len() > 0LL)) {
			_2050b9623_pushErr(&(*_self_), _99634_decl.get()._field_Token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_20435cc5d_StructIns>(_20435cc5d_StructIns{._field_Decl=_99661_s, });
	};
	jule::Bool _101417_ok = ((*_self_)._field_notPlain || _2050bae0a_checkIllegalCycles(&(*_self_), _99634_decl,jule::Any(_99661_s)));;
	if ((!(_101417_ok))) {
		return nullptr;
	};
	_2050bc527_appendUsedStructReference(&(*_self_), _99661_s);
	jule::Ptr<_20435cc5d_StructIns> _102017_ins = _2050bc8e0_buildStructInstance(&(*_self_), _99634_decl,_99661_s);;
	if ((_102017_ins == nullptr)) {
		return nullptr;
	};
	_101417_ok=_2050180bb_checkGenericQuantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_102017_ins.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_102017_ins.get()._field_Generics.len()),_99634_decl.get()._field_Token);
	if ((!(_101417_ok))) {
		return nullptr;
	};
	jule::Ptr<_20435cc5d_StructIns> _103017_existInstance = _2043193e0_appendInstance(_99661_s.ptr(), _102017_ins);;
	if ((_103017_existInstance != nullptr)) {
		if ((!(_2050203ae_checkConstraintsStruct((*_self_)._field_s, _102017_ins,_99634_decl.get()._field_Token,_103017_existInstance)))) {
			return nullptr;
		};
		_1db7729b5_pushReference(&(*_self_), _103017_existInstance);
		return _103017_existInstance;
	};
	if ((!(_2050bc280_checkStructIns(&(*_self_), _102017_ins,_99634_decl.get()._field_Token)))) {
		return nullptr;
	};
	_1db7729b5_pushReference(&(*_self_), _102017_ins);
	return _102017_ins;
}



inline jule::Trait<_2050aa4b0_Kind> _2050bd0a5_getDef(_2050b8e19_typeChecker* _self_, jule::Ptr<_204341b32_IdentTypeDecl>& _105430_decl) {
	{
		auto &expr = (*_self_)._field_ignoreGenerics;
		auto it = expr.begin();
		_iter_begin_1db7b8049:;
		if (it != expr.end()) {
			jule::Ptr<_20434d864_GenericDecl> _105516_g = *it;
			{
				if ((_105516_g.get()._field_Ident == _105430_decl.get()._field_Ident)) {
					return jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(_105516_g.get()._field_Ident), 6);
				};
			}
			_iter_next_1db7b8049:;
			++it;
			goto _iter_begin_1db7b8049;
		}
		_iter_end_1db7b8049:;
	};
	{
		auto &expr = (*_self_)._field_useGenerics;
		auto it = expr.begin();
		_iter_begin_1db7b89a6:;
		if (it != expr.end()) {
			jule::Ptr<_2050a9beb_TypeAlias> _106121_g = *it;
			{
				if ((_106121_g.get()._field_Ident == _105430_decl.get()._field_Ident)) {
					if ((_105430_decl.get()._field_Generics.len() > 0LL)) {
						_2050b9623_pushErr(&(*_self_), _105430_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_105430_decl.get()._field_Ident)}));
						return nullptr;
					};
					jule::Ptr<_20435cc5d_StructIns> _106725_st = _2050ade53_Struct(_106121_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_106725_st != nullptr)) {
						jule::Bool _106925_ok = _2050bae0a_checkIllegalCycles(&(*_self_), _105430_decl,jule::Any(_106725_st.get()._field_Decl));;
						if ((!(_106925_ok))) {
							return nullptr;
						};
					};
					return _106121_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;
				};
			}
			_iter_next_1db7b89a6:;
			++it;
			goto _iter_begin_1db7b89a6;
		}
		_iter_end_1db7b89a6:;
	};
	if ((!(_105430_decl.get()._field_CppLinked))) {
		jule::Ptr<_204ed1a35_Enum> _107921_e = _2050c6520_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._2050c60be_FindEnum((*_self_)._field_lookup, _105430_decl.get()._field_Ident);;
		if ((_107921_e != nullptr)) {
			return jule::Trait<_2050aa4b0_Kind>(_2050bb669_fromEnum(&(*_self_), _105430_decl,_107921_e), 3);
		};
		jule::Ptr<_204ed3130_TypeEnum> _108421_te = _2050c6520_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._2050c63cc_FindTypeEnum((*_self_)._field_lookup, _105430_decl.get()._field_Ident);;
		if ((_108421_te != nullptr)) {
			return jule::Trait<_2050aa4b0_Kind>(_2050bba21_fromTypeEnum(&(*_self_), _105430_decl,_108421_te), 4);
		};
		jule::Ptr<_204ece8e0_Trait> _108921_t = _2050c6520_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._2050c5cb1_FindTrait((*_self_)._field_lookup, _105430_decl.get()._field_Ident);;
		if ((_108921_t != nullptr)) {
			return jule::Trait<_2050aa4b0_Kind>(_2050bbdc8_fromTrait(&(*_self_), _105430_decl,_108921_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_2050b9623_pushErr(&(*_self_), _105430_decl.get()._field_Token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20433367e_Struct> _109817_s = _2050c6520_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._2050c55eb_FindStruct((*_self_)._field_lookup, _105430_decl.get()._field_Ident,_105430_decl.get()._field_CppLinked);;
	if ((_109817_s != nullptr)) {
		return jule::Trait<_2050aa4b0_Kind>(_2050bcc97_fromStruct(&(*_self_), _105430_decl,_109817_s), 0);
	};
	jule::Ptr<_2050a9beb_TypeAlias> _110317_ta = _2050c6520_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._2050c5244_FindTypeAlias((*_self_)._field_lookup, _105430_decl.get()._field_Ident,_105430_decl.get()._field_CppLinked);;
	if (((_110317_ta == nullptr) && (!((*_self_)._field_disBuiltin)))) {
		_110317_ta=_2050d5e14_findBuiltinTypeAlias(_105430_decl.get()._field_Ident);
	};
	if ((_110317_ta != nullptr)) {
		return _2050bb2b2_fromTypeAlias(&(*_self_), _105430_decl,_110317_ta);
	};
	_2050b9623_pushErr(&(*_self_), _105430_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_105430_decl.get()._field_Ident)}));
	return nullptr;
}



inline jule::Trait<_2050aa4b0_Kind> _2050bd3b3_buildIdent(_2050b8e19_typeChecker* _self_, jule::Ptr<_204341b32_IdentTypeDecl> _111533_decl) {
	{
		
		if (_2050c3dd0_isPrim(_111533_decl.get()._field_Ident)) {
			_case_begin_1db7c4ebd:;
			{
				return jule::Trait<_2050aa4b0_Kind>(_2050b9cd8_buildPrim(&(*_self_), _111533_decl), 6);
			}
		}
		else {
			_case_begin_1db7c474d:;
			{
				return _2050bd0a5_getDef(&(*_self_), _111533_decl);
			}
		}
		_match_end_1db7c4671:;
	};
}



inline jule::Trait<_2050aa4b0_Kind> _2050bd6c1_buildSubIdent(_2050b8e19_typeChecker* _self_, jule::Ptr<_204342281_SubIdentTypeDecl> _112436_decl) {
	jule::Trait<_2050aa4b0_Kind> _112517_ident = _2050bd3b3_buildIdent(&(*_self_), _112436_decl.get()._field_Idents[0LL]);;
	if ((_112517_ident == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _112517_ident };
		
		if (_match_expr.type_is<jule::Ptr<_204ed3130_TypeEnum>>()) {
			_case_begin_1db7c7223:;
			{
				goto _match_end_1db7c6882;
			}
		}
		else {
			_case_begin_1db7c68d7:;
			{
				_2050b9623_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1db7c6882:;
	};
	jule::Ptr<_204ed3130_TypeEnum> _113617_t = _112517_ident.operator jule::Ptr<_204ed3130_TypeEnum>();;
	jule::Slice<jule::Ptr<_204341b32_IdentTypeDecl>> _113717_idents = _112436_decl.get()._field_Idents.slice(1LL);;
	{
		auto &expr = _113717_idents;
		auto it = expr.begin();
		_iter_begin_1db7c80ae:;
		if (it != expr.end()) {
			jule::I64 _113813_i = it - expr.begin();
			jule::Ptr<_204341b32_IdentTypeDecl> _113816_id = *it;
			{
				jule::Ptr<_204ed2a69_TypeEnumItem> _113921_item = _204ed3b69_FindItem(_113617_t.ptr(), _113816_id.get()._field_Ident);;
				if ((_113921_item == nullptr)) {
					_2050b9623_pushErr(&(*_self_), _113816_id.get()._field_Token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_113617_t.get()._field_Ident),jule::Any(_113816_id.get()._field_Ident)}));
					return nullptr;
				};
				if (((_113717_idents.len() - _113813_i) == 1LL)) {
					_2050ba2d3_pushReferenceByKind(&(*_self_), _113921_item.get()._field_Kind.get()._field_Kind);
					return jule::Trait<_2050aa4b0_Kind>(_113921_item.get()._field_Kind.get()._field_Kind, 5);
				};
				_113617_t=_2050ad4a2_TypeEnum(_113921_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_113617_t == nullptr)) {
					_2050b9623_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
			_iter_next_1db7c80ae:;
			++it;
			_113813_i++;
			goto _iter_begin_1db7c80ae;
		}
		_iter_end_1db7c80ae:;
	};
	return nullptr;
}



inline jule::Ptr<_2050b3b4a_Sptr> _2050bd9ce_buildSptrFromType(_2050b8e19_typeChecker* _self_, jule::Ptr<_2050aa8de_TypeKind>& _115841_elem) {
	{
		
		if ((_115841_elem == nullptr)) {
			_case_begin_1db7c8b1a:;
			{
				return nullptr;
			}
		}
		else if ((_2050ade53_Struct(_115841_elem.ptr()) != nullptr)) {
			_case_begin_1db7cc668:;
			{
				jule::Ptr<_20435cc5d_StructIns> _116417_s = _2050ade53_Struct(_115841_elem.ptr());;
				if (((_116417_s.get()._field_Decl != nullptr) && _116417_s.get()._field_Decl.get()._field_CppLinked)) {
					_2050b9623_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_2050ad716_Arr(_115841_elem.ptr()) != nullptr) && _2050ad716_Arr(_115841_elem.ptr()).get()._field_Auto)) {
			_case_begin_1db7cc6ce:;
			{
				_2050b9623_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1db7c89d8:;
	};
	return jule::new_ptr<_2050b3b4a_Sptr>(_2050b3b4a_Sptr{._field_Elem=_115841_elem});
}



inline jule::Ptr<_2050b3b4a_Sptr> _2050bdcdc_buildSptr(_2050b8e19_typeChecker* _self_, jule::Ptr<_204342924_SptrTypeDecl> _117832_decl) {
	jule::Bool _117913_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_117913_notPlain;
	});;
	jule::Ptr<_2050aa8de_TypeKind> _118317_elem = _2050c1185_checkDecl(&(*_self_), _117832_decl.get()._field_Elem);;
	return _2050bd9ce_buildSptrFromType(&(*_self_), _118317_elem);
}



inline jule::Ptr<_2050b71ae_Ptr> _2050be0ea_buildPtrFromType(_2050b8e19_typeChecker* _self_, jule::Ptr<_2050aa8de_TypeKind>& _118740_elem) {
	{
		
		if ((_118740_elem == nullptr)) {
			_case_begin_1db7d2b13:;
			{
				return nullptr;
			}
		}
		else if (((_2050ad716_Arr(_118740_elem.ptr()) != nullptr) && _2050ad716_Arr(_118740_elem.ptr()).get()._field_Auto)) {
			_case_begin_1db7d2b8a:;
			{
				_2050b9623_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_2050b71ae_Ptr>();
			}
		}
		_match_end_1db7d29e2:;
	};
	return jule::new_ptr<_2050b71ae_Ptr>(_2050b71ae_Ptr{._field_Elem=_118740_elem});
}



inline jule::Ptr<_2050b71ae_Ptr> _2050be408_buildPtr(_2050b8e19_typeChecker* _self_, jule::Ptr<_2043433e7_PtrTypeDecl> _120231_decl) {
	jule::Bool _120313_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_120313_notPlain;
	});;
	jule::Ptr<_2050aa8de_TypeKind> _120717_elem = nullptr;;
	if ((!(_204343749_IsUnsafe(_120231_decl.ptr())))) {
		_120717_elem=_2050c1185_checkDecl(&(*_self_), _120231_decl.get()._field_Elem);
		return _2050be0ea_buildPtrFromType(&(*_self_), _120717_elem);
	};
	return jule::new_ptr<_2050b71ae_Ptr>(_2050b71ae_Ptr{._field_Elem=_120717_elem});
}



inline jule::Ptr<_2050b45a7_Slc> _2050be716_buildSlc(_2050b8e19_typeChecker* _self_, jule::Ptr<_204342d20_SlcTypeDecl> _121931_decl) {
	jule::Bool _122013_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_122013_notPlain;
	});;
	jule::Ptr<_2050aa8de_TypeKind> _122417_elem = _2050c1185_checkDecl(&(*_self_), _121931_decl.get()._field_Elem);;
	{
		
		if ((_122417_elem == nullptr)) {
			_case_begin_1db7d8333:;
			{
				return nullptr;
			}
		}
		else if (((_2050ad716_Arr(_122417_elem.ptr()) != nullptr) && _2050ad716_Arr(_122417_elem.ptr()).get()._field_Auto)) {
			_case_begin_1db7d83aa:;
			{
				_2050b9623_pushErr(&(*_self_), _121931_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1db7d8278:;
	};
	return jule::new_ptr<_2050b45a7_Slc>(_2050b45a7_Slc{._field_Elem=_122417_elem});
}



inline jule::Ptr<_2050b6752_Arr> _2050bea24_buildArr(_2050b8e19_typeChecker* _self_, jule::Ptr<_204343a79_ArrTypeDecl> _124031_decl) {
	jule::Bool _124113_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_124113_notPlain;
	});;
	jule::I64 _124517_n = 0LL;;
	if ((!(_204343e53_AutoSized(_124031_decl.ptr())))) {
		jule::Ptr<_20507eb49_Data> _124821_size = _20509c0d9_evalExpr(_20501d610_eval((*_self_)._field_s, (*_self_)._field_lookup), _124031_decl.get()._field_Size);;
		if ((_124821_size == nullptr)) {
			return nullptr;
		};
		if ((!(_20508050c_IsConst(_124821_size.ptr())))) {
			_2050b9623_pushErr(&(*_self_), _124031_decl.get()._field_Size.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_2050aca01_Prim(_124821_size.get()._field_Kind.ptr()) == nullptr) || (!(_204ebe308_IsInt(_2050aca01_Prim(_124821_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_2050b9623_pushErr(&(*_self_), _124031_decl.get()._field_Size.get()._field_Token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_124517_n=static_cast<jule::I64>(static_cast<jule::I64>(_204463270_AsI64(_124821_size.get()._field_Constant.ptr())));
		if ((_124517_n < 0LL)) {
			_2050b9623_pushErr(&(*_self_), _124031_decl.get()._field_Elem.get()._field_Token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_2044caace_BitSize != 64LL) && (static_cast<jule::F64>(_124517_n) > _2048802e6_Max(jule::Str("int", 3))))) {
			_2050b9623_pushErr(&(*_self_), _124031_decl.get()._field_Size.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_2050aa8de_TypeKind> _127117_elem = _2050c1185_checkDecl(&(*_self_), _124031_decl.get()._field_Elem);;
	{
		
		if ((_127117_elem == nullptr)) {
			_case_begin_1db7e27e3:;
			{
				return nullptr;
			}
		}
		else if (((_2050ad716_Arr(_127117_elem.ptr()) != nullptr) && _2050ad716_Arr(_127117_elem.ptr()).get()._field_Auto)) {
			_case_begin_1db7e2859:;
			{
				_2050b9623_pushErr(&(*_self_), _124031_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1db7e256d:;
	};
	return jule::new_ptr<_2050b6752_Arr>(_2050b6752_Arr{._field_Auto=_204343e53_AutoSized(_124031_decl.ptr()), ._field_N=_124517_n, ._field_Elem=_127117_elem});
}



inline jule::Ptr<_2050b5b5d_Map> _2050bed32_buildMap(_2050b8e19_typeChecker* _self_, jule::Ptr<_2043442c7_MapTypeDecl> _128931_decl) {
	jule::Bool _129013_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_129013_notPlain;
	});;
	jule::Ptr<_2050aa8de_TypeKind> _129417_key = _2050c1185_checkDecl(&(*_self_), _128931_decl.get()._field_Key);;
	if ((_129417_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_2050aa8de_TypeKind> _129917_val = _2050c1185_checkDecl(&(*_self_), _128931_decl.get()._field_Val);;
	if ((_129917_val == nullptr)) {
		return nullptr;
	};
	if ((_2050ad23d_Enum(_129917_val.ptr()) != nullptr)) {
		_2050b9623_pushErr(&(*_self_), _128931_decl.get()._field_Val.get()._field_Token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_2050b5b5d_Map>(_2050b5b5d_Map{._field_Key=_129417_key, ._field_Val=_129917_val});
}



inline jule::Ptr<_2050b5135_Tuple> _2050c0140_buildTuple(_2050b8e19_typeChecker* _self_, jule::Ptr<_20434310b_TupleTypeDecl> _131333_decl) {
	jule::Slice<jule::Ptr<_2050aa8de_TypeKind>> _131417_types = jule::Slice<jule::Ptr<_2050aa8de_TypeKind>>::alloc(0LL,_131333_decl.get()._field_Types.len());;
	{
		auto &expr = _131333_decl.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1db7e8662:;
		if (it != expr.end()) {
			jule::Ptr<_20434156b_TypeDecl> _131521_t = *it;
			{
				jule::Ptr<_2050aa8de_TypeKind> _131621_kind = _2050c1185_checkDecl(&(*_self_), _131521_t);;
				if ((_131621_kind == nullptr)) {
					return nullptr;
				};
				_131417_types = jule::alloc_for_append(_131417_types,1);_131417_types.__push(_131621_kind);;
			}
			_iter_next_1db7e8662:;
			++it;
			goto _iter_begin_1db7e8662;
		}
		_iter_end_1db7e8662:;
	};
	return jule::new_ptr<_2050b5135_Tuple>(_2050b5135_Tuple{._field_Types=_131417_types});
}



inline jule::Bool _2050c044d_checkFnTypes(_2050b8e19_typeChecker* _self_, jule::Ptr<_204ec7454_FnIns>& _132636_f) {
	jule::Bool _132649_ok = jule::Bool();
	{
		auto &expr = _132636_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1db7ea554:;
		if (it != expr.end()) {
			jule::Ptr<_204ec7267_ParamIns> _132721_p = *it;
			{
				_132721_p.get()._field_Kind=_2050c0d77_build(&(*_self_), _132721_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind);
				_132649_ok=(_132721_p.get()._field_Kind != nullptr);
				if ((!(_132649_ok))) {
					_132649_ok = false;
					return _132649_ok;
				};
				_2050209db_checkFnParamKind((*_self_)._field_s, _132721_p);
			}
			_iter_next_1db7ea554:;
			++it;
			goto _iter_begin_1db7ea554;
		}
		_iter_end_1db7ea554:;
	};
	if ((!(_2043a5a53_IsVoid(_132636_f.get()._field_Decl.ptr())))) {
		_132636_f.get()._field_Result=_2050c0d77_build(&(*_self_), _132636_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind);
		_132649_ok = (_132636_f.get()._field_Result != nullptr);
		return _132649_ok;
	};
	_132649_ok = true;
	return _132649_ok;
}



inline jule::Ptr<_204ec7454_FnIns> _2050c075b_buildFn(_2050b8e19_typeChecker* _self_, jule::Ptr<_204352eea_FnDecl> _134430_decl) {
	if ((_134430_decl.get()._field_Generics.len() > 0LL)) {
		_2050b9623_pushErr(&(*_self_), _134430_decl.get()._field_Token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_204ec707a_Fn> _135017_f = _204ec94de_buildFn(_134430_decl);;
	jule::I64 _135213_n = (*_self_)._field_s.get()._field_errors.len();;
	_205027905_checkFnDecl((*_self_)._field_s, _135017_f);
	if ((_135213_n != (*_self_)._field_s.get()._field_errors.len())) {
		return nullptr;
	};
	jule::Ptr<_204ec7454_FnIns> _135817_ins = _20439bdce_instanceForce(_135017_f);;
	_135817_ins.get()._field_Anon=true;
	jule::Bool _136113_ok = _2050c044d_checkFnTypes(&(*_self_), _135817_ins);;
	if ((!(_136113_ok))) {
		return nullptr;
	};
	return _135817_ins;
}



inline jule::Trait<_2050aa4b0_Kind> _2050c0a69_buildByNamespace(_2050b8e19_typeChecker* _self_, jule::Ptr<_204342638_NamespaceTypeDecl> _136939_decl) {
	jule::Str _137013_path = _2050c34d9_buildLinkPathByTokens(_136939_decl.get()._field_Idents);;
	jule::Ptr<_20500ae16_ImportInfo> _137117_imp = _2050c6520_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._2050c49d5_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_20500ae16_ImportInfo>)>([=](jule::Ptr<_20500ae16_ImportInfo> _137152_imp) mutable -> jule::Bool {
		if (((_136939_decl.get()._field_Idents.len() == 1LL) && (_137152_imp.get()._field_Alias == _137013_path))) {
			return true;
		};
		return ((_137152_imp.get()._field_LinkPath == _137013_path) && _20500da73_isAccessibleViaSelection(_137152_imp.ptr()));
	}));;
	if (((_137117_imp == nullptr) || (!(_20500d4ce_isLookupable(_137117_imp.ptr(), jule::Str("self", 4)))))) {
		_2050b9623_pushErr(&(*_self_), _136939_decl.get()._field_Idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_137013_path)}));
		return nullptr;
	};
	_2050b99ca_disallowBuiltin(&(*_self_));
	jule::Trait<_2050c6520_Lookup> _138417_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_2050c6520_Lookup>(_137117_imp, 1);
	jule::Ptr<_2050aa8de_TypeKind> _138617_kind = _2050c1185_checkDecl(&(*_self_), _136939_decl.get()._field_Kind);;
	(*_self_)._field_lookup=_138417_lookup;
	_2050b97ee_allowBuiltin(&(*_self_));
	return jule::Trait<_2050aa4b0_Kind>(_138617_kind, 5);
}



inline jule::Ptr<_2050aa8de_TypeKind> _2050c0d77_build(_2050b8e19_typeChecker* _self_, jule::Any& _139229_declKind) {
	jule::Trait<_2050aa4b0_Kind> _139317_kind = nullptr;;
	{
		auto &_match_expr{ _139229_declKind };
		
		if (_match_expr.type_is<jule::Ptr<_204341b32_IdentTypeDecl>>()) {
			_case_begin_1db80ae27:;
			{
				jule::Trait<_2050aa4b0_Kind> _139621_t = _2050bd3b3_buildIdent(&(*_self_), _139229_declKind.operator jule::Ptr<_204341b32_IdentTypeDecl>());;
				if ((_139621_t != nullptr)) {
					_139317_kind=_139621_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204342281_SubIdentTypeDecl>>()) {
			_case_begin_1db80b17a:;
			{
				jule::Trait<_2050aa4b0_Kind> _140121_t = _2050bd6c1_buildSubIdent(&(*_self_), _139229_declKind.operator jule::Ptr<_204342281_SubIdentTypeDecl>());;
				if ((_140121_t != nullptr)) {
					_139317_kind=_140121_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204342924_SptrTypeDecl>>()) {
			_case_begin_1db809b3a:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_2050b3b4a_Sptr> _140721_t = _2050bdcdc_buildSptr(&(*_self_), _139229_declKind.operator jule::Ptr<_204342924_SptrTypeDecl>());;
				if ((_140721_t != nullptr)) {
					_139317_kind=jule::Trait<_2050aa4b0_Kind>(_140721_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2043433e7_PtrTypeDecl>>()) {
			_case_begin_1db80ad06:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_2050b71ae_Ptr> _141321_t = _2050be408_buildPtr(&(*_self_), _139229_declKind.operator jule::Ptr<_2043433e7_PtrTypeDecl>());;
				if ((_141321_t != nullptr)) {
					_139317_kind=jule::Trait<_2050aa4b0_Kind>(_141321_t, 12);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204342d20_SlcTypeDecl>>()) {
			_case_begin_1db808cb0:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_2050b45a7_Slc> _141921_t = _2050be716_buildSlc(&(*_self_), _139229_declKind.operator jule::Ptr<_204342d20_SlcTypeDecl>());;
				if ((_141921_t != nullptr)) {
					_139317_kind=jule::Trait<_2050aa4b0_Kind>(_141921_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204343a79_ArrTypeDecl>>()) {
			_case_begin_1db808d26:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_2050b6752_Arr> _142521_t = _2050bea24_buildArr(&(*_self_), _139229_declKind.operator jule::Ptr<_204343a79_ArrTypeDecl>());;
				if ((_142521_t != nullptr)) {
					_139317_kind=jule::Trait<_2050aa4b0_Kind>(_142521_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2043442c7_MapTypeDecl>>()) {
			_case_begin_1db808d8c:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_2050b5b5d_Map> _143121_t = _2050bed32_buildMap(&(*_self_), _139229_declKind.operator jule::Ptr<_2043442c7_MapTypeDecl>());;
				if ((_143121_t != nullptr)) {
					_139317_kind=jule::Trait<_2050aa4b0_Kind>(_143121_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20434310b_TupleTypeDecl>>()) {
			_case_begin_1db808e03:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_2050b5135_Tuple> _143721_t = _2050c0140_buildTuple(&(*_self_), _139229_declKind.operator jule::Ptr<_20434310b_TupleTypeDecl>());;
				if ((_143721_t != nullptr)) {
					_139317_kind=jule::Trait<_2050aa4b0_Kind>(_143721_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204352eea_FnDecl>>()) {
			_case_begin_1db80a6a7:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_204ec7454_FnIns> _144321_t = _2050c075b_buildFn(&(*_self_), _139229_declKind.operator jule::Ptr<_204352eea_FnDecl>());;
				if ((_144321_t != nullptr)) {
					_139317_kind=jule::Trait<_2050aa4b0_Kind>(_144321_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204342638_NamespaceTypeDecl>>()) {
			_case_begin_1db80a71d:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_2050aa4b0_Kind> _144921_t = _2050c0a69_buildByNamespace(&(*_self_), _139229_declKind.operator jule::Ptr<_204342638_NamespaceTypeDecl>());;
				if ((_144921_t != nullptr)) {
					_139317_kind=_144921_t;
				};
			}
		}
		else {
			_case_begin_1db808b17:;
			{
				jule::Any _145421_udeclKind = (*(((jule::Any*)((&(_139229_declKind))))));;
				{
					auto &_match_expr{ _145421_udeclKind };
					
					if (_match_expr.type_is<jule::Ptr<_2050b3b4a_Sptr>>()) {
						_case_begin_1db809a4c:;
						{
							_139317_kind=jule::Trait<_2050aa4b0_Kind>(_145421_udeclKind.operator jule::Ptr<_2050b3b4a_Sptr>(), 7);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2050b71ae_Ptr>>()) {
						_case_begin_1db809ab3:;
						{
							_139317_kind=jule::Trait<_2050aa4b0_Kind>(_145421_udeclKind.operator jule::Ptr<_2050b71ae_Ptr>(), 12);
						}
					}
					else {
						_case_begin_1db8098c6:;
						{
							_2050b9623_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1db8097c7:;
				};
			}
		}
		_match_end_1db808ab2:;
	};
	if ((_139317_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _139317_kind };
		
		if (_match_expr.type_is<jule::Ptr<_2050aa8de_TypeKind>>()) {
			_case_begin_1db81850b:;
			{
				return _139317_kind.operator jule::Ptr<_2050aa8de_TypeKind>();
			}
		}
		else {
			_case_begin_1db817c47:;
			{
				return jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=_139317_kind});
			}
		}
		_match_end_1db817be2:;
	};
}



inline jule::Ptr<_2050aa8de_TypeKind> _2050c1185_checkDecl(_2050b8e19_typeChecker* _self_, jule::Ptr<_20434156b_TypeDecl>& _147833_decl) {
	jule::Ptr<_202b89679_Token> _148017_errorToken = (*_self_)._field_errorToken;;
	(*_self_)._field_errorToken=_147833_decl.get()._field_Token;
	jule::Ptr<_2050aa8de_TypeKind> _148317_kind = _2050c0d77_build(&(*_self_), _147833_decl.get()._field_Kind);;
	(*_self_)._field_errorToken=_148017_errorToken;
	return _148317_kind;
}



inline void _2050c140a_check(_2050b8e19_typeChecker* _self_, jule::Ptr<_2050aea47_TypeSymbol>& _148929_t) {
	if ((_148929_t.get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_2050aa8de_TypeKind> _149317_kind = _2050c1185_checkDecl(&(*_self_), _148929_t.get()._field_Decl);;
	if ((_149317_kind == nullptr)) {
		_2050b00ca_removeKind(_148929_t.ptr());
		return;;
	};
	_148929_t.get()._field_Kind=_149317_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _2050b8e19_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__2050c1a6a_identTypeDecl(jule::Str& _150530_ident, jule::Ptr<_204341b32_IdentTypeDecl> _150542_t) {
	if ((_150542_t.get()._field_Ident == _150530_ident)) {
		return true;
	};
	{
		auto &expr = _150542_t.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1db81c147:;
		if (it != expr.end()) {
			jule::Ptr<_20434156b_TypeDecl> &_150916_g = *it;
			{
				if (static__2050c1dab_exist(_150530_ident,_150916_g.get()._field_Kind)) {
					return true;
				};
			}
			_iter_next_1db81c147:;
			++it;
			goto _iter_begin_1db81c147;
		}
		_iter_end_1db81c147:;
	};
	return false;
}



inline jule::Bool static__2050c1dab_exist(jule::Str& _151722_ident, jule::Any& _151735_k) {
	{
		auto &_match_expr{ _151735_k };
		
		if (_match_expr.type_is<jule::Ptr<_204341b32_IdentTypeDecl>>()) {
			_case_begin_1db81d401:;
			{
				return static__2050c1a6a_identTypeDecl(_151722_ident,_151735_k.operator jule::Ptr<_204341b32_IdentTypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204342281_SubIdentTypeDecl>>()) {
			_case_begin_1db81d467:;
			{
				jule::Ptr<_204342281_SubIdentTypeDecl> _152217_sit = _151735_k.operator jule::Ptr<_204342281_SubIdentTypeDecl>();;
				{
					auto &expr = _152217_sit.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_1db81eda3:;
					if (it != expr.end()) {
						jule::Ptr<_204341b32_IdentTypeDecl> &_152320_id = *it;
						{
							if (static__2050c1a6a_identTypeDecl(_151722_ident,_152320_id)) {
								return true;
							};
						}
						_iter_next_1db81eda3:;
						++it;
						goto _iter_begin_1db81eda3;
					}
					_iter_end_1db81eda3:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204342924_SptrTypeDecl>>()) {
			_case_begin_1db81d4cd:;
			{
				jule::Ptr<_204342924_SptrTypeDecl> _153017_sptr = _151735_k.operator jule::Ptr<_204342924_SptrTypeDecl>();;
				return static__2050c1dab_exist(_151722_ident,_153017_sptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2043433e7_PtrTypeDecl>>()) {
			_case_begin_1db81d544:;
			{
				jule::Ptr<_2043433e7_PtrTypeDecl> _153317_ptr = _151735_k.operator jule::Ptr<_2043433e7_PtrTypeDecl>();;
				return static__2050c1dab_exist(_151722_ident,_153317_ptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204342d20_SlcTypeDecl>>()) {
			_case_begin_1db81d720:;
			{
				jule::Ptr<_204342d20_SlcTypeDecl> _153617_slc = _151735_k.operator jule::Ptr<_204342d20_SlcTypeDecl>();;
				return static__2050c1dab_exist(_151722_ident,_153617_slc.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204343a79_ArrTypeDecl>>()) {
			_case_begin_1db81d786:;
			{
				jule::Ptr<_204343a79_ArrTypeDecl> _153917_arr = _151735_k.operator jule::Ptr<_204343a79_ArrTypeDecl>();;
				return static__2050c1dab_exist(_151722_ident,_153917_arr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2043442c7_MapTypeDecl>>()) {
			_case_begin_1db81d7ec:;
			{
				jule::Ptr<_2043442c7_MapTypeDecl> _154217_m = _151735_k.operator jule::Ptr<_2043442c7_MapTypeDecl>();;
				return (static__2050c1dab_exist(_151722_ident,_154217_m.get()._field_Key.get()._field_Kind) || static__2050c1dab_exist(_151722_ident,_154217_m.get()._field_Val.get()._field_Kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204352eea_FnDecl>>()) {
			_case_begin_1db81d863:;
			{
				jule::Ptr<_204352eea_FnDecl> _154617_f = _151735_k.operator jule::Ptr<_204352eea_FnDecl>();;
				{
					auto &expr = _154617_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1db82555c:;
					if (it != expr.end()) {
						jule::Ptr<_204351bca_ParamDecl> &_154720_p = *it;
						{
							if (_20435203d_IsSelf(_154720_p.ptr())) {
								goto _iter_next_1db82555c;
							};
							if (static__2050c1dab_exist(_151722_ident,_154720_p.get()._field_Kind.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_1db82555c:;
						++it;
						goto _iter_begin_1db82555c;
					}
					_iter_end_1db82555c:;
				};
				if ((_154617_f.get()._field_Result != nullptr)) {
					return static__2050c1dab_exist(_151722_ident,_154617_f.get()._field_Result.get()._field_Kind.get()._field_Kind);
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20434310b_TupleTypeDecl>>()) {
			_case_begin_1db81d8c9:;
			{
				jule::Ptr<_20434310b_TupleTypeDecl> _156017_tup = _151735_k.operator jule::Ptr<_20434310b_TupleTypeDecl>();;
				{
					auto &expr = _156017_tup.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1db827ad1:;
					if (it != expr.end()) {
						jule::Ptr<_20434156b_TypeDecl> &_156120_t = *it;
						{
							if (static__2050c1dab_exist(_151722_ident,_156120_t.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_1db827ad1:;
						++it;
						goto _iter_begin_1db827ad1;
					}
					_iter_end_1db827ad1:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204342638_NamespaceTypeDecl>>()) {
			_case_begin_1db81da83:;
			{
				jule::Ptr<_204342638_NamespaceTypeDecl> _156817_ns = _151735_k.operator jule::Ptr<_204342638_NamespaceTypeDecl>();;
				return static__2050c1dab_exist(_151722_ident,_156817_ns.get()._field_Kind.get()._field_Kind);
			}
		}
		else {
			_case_begin_1db81d29c:;
			{
				return false;
			}
		}
		_match_end_1db81d247:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2050c162a_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2057e150e_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20583d083_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _20583e040_stop(_20583d8ad_scopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _20583e2a4_stopped(_20583d8ad_scopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _20583e518_finished(_20583d8ad_scopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _20583e77c_isLastSt(_20583d8ad_scopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _20583ea9b_pushErr(_20583d8ad_scopeParser* _self_, jule::Ptr<_202b89679_Token> _19126_token, jule::Str _19141_fmt) {
	_20585a963_pushErr((*_self_)._field_p.ptr(), _19126_token,_19141_fmt,jule::Slice<jule::Any>());
}



inline void _20583edba_pushSuggestion(_20583d8ad_scopeParser* _self_, jule::Str _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	_20585ac82_pushSuggestion((*_self_)._field_p.ptr(), _19633_fmt,jule::Any(_19646_args));
}



inline void _205840140_insertAsNext(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _20036_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_20583d083_stmt>(_20583d083_stmt{._field_tokens=_20036_tokens, });
}



inline jule::Ptr<_20583d083_stmt> _2058403a4_next(_20583d8ad_scopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_204351504_ScopeTree> _20584075b_buildScope(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _21034_tokens, jule::Ptr<_202b89679_Token> _21056_end) {
	jule::Ptr<_204351504_ScopeTree> _21117_s = _20583be61_newScope();;
	_21117_s.get()._field_Parent=(*_self_)._field_s;
	_21117_s.get()._field_End=_21056_end;
	_20583d8ad_scopeParser _21417_ssp = _20583d8ad_scopeParser{._field_p=(*_self_)._field_p, };;
	_205849446_build(&_21417_ssp, _21034_tokens,_21117_s);
	return _21117_s;
}



inline jule::Ptr<_204353ec9_VarDecl> _205840a69_buildVarSt(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _22134_tokens) {
	jule::Ptr<_204353ec9_VarDecl> _22217_v = _20585d49e_buildVar((*_self_)._field_p, _22134_tokens);;
	_22217_v.get()._field_Scope=(*_self_)._field_s;
	return _22217_v;
}



inline jule::Ptr<_204354381_RetSt> _205840d77_buildRetSt(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _22733_tokens) {
	jule::Ptr<_204354381_RetSt> _22817_st = jule::new_ptr<_204354381_RetSt>(_204354381_RetSt{._field_Token=_22733_tokens[0LL], });;
	if ((_22733_tokens.len() > 1LL)) {
		_22733_tokens=_22733_tokens.slice(1LL);
		_22817_st.get()._field_Expr=_20585b090_buildExpr((*_self_)._field_p, _22733_tokens);
	};
	return _22817_st;
}



inline jule::Ptr<_2043549e1_Iter> _205841185_buildWhileNextIter(_20583d8ad_scopeParser* _self_, jule::Ptr<_20583d083_stmt>& _23842_s) {
	jule::Ptr<_2043549e1_Iter> _23917_it = jule::new_ptr<_2043549e1_Iter>(_2043549e1_Iter{._field_Token=_23842_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_202b89679_Token>> _24217_tokens = _23842_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_2043552b6_WhileKind> _24317_kind = jule::new_ptr<_2043552b6_WhileKind>();;
	if ((_24217_tokens.len() > 0LL)) {
		_24317_kind.get()._field_Expr=_20585b090_buildExpr((*_self_)._field_p, _24217_tokens);
	};
	if (_20583e77c_isLastSt(&(*_self_))) {
		_20583ea9b_pushErr(&(*_self_), _23917_it.get()._field_Token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24217_tokens=_2058403a4_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_202b89679_Token>> _25517_stTokens = _205855199_getBlockExpr(_24217_tokens);;
	if ((_25517_stTokens.len() > 0LL)) {
		jule::Ptr<_20583d083_stmt> _25721_stmt = jule::new_ptr<_20583d083_stmt>(_20583d083_stmt{._field_tokens=_25517_stTokens, ._field_terminated=_23842_s.get()._field_terminated});;
		_24317_kind.get()._field_NextToken=_25517_stTokens[0LL];
		_24317_kind.get()._field_Next=_205849127_buildSt(&(*_self_), _25721_stmt);
	};
	jule::I64 _26517_i = _25517_stTokens.len();;
	jule::Slice<jule::Ptr<_202b89679_Token>> _26617_blockTokens = _205858268_range(_26517_i,jule::Str("{", 1),jule::Str("}", 1),_24217_tokens);;
	if ((_26617_blockTokens == nullptr)) {
		_20583e040_stop(&(*_self_));
		_20583ea9b_pushErr(&(*_self_), _23917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_20583edba_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26517_i < _24217_tokens.len())) {
		_20583ea9b_pushErr(&(*_self_), _24217_tokens[_26517_i],jule::Str("invalid syntax", 14));
	};
	_23917_it.get()._field_Scope=_20584075b_buildScope(&(*_self_), _26617_blockTokens,_24217_tokens[(_26517_i - 1LL)]);
	_23917_it.get()._field_Kind=static_cast<jule::Any>(_24317_kind);
	return _23917_it;
}



inline jule::Ptr<_2043552b6_WhileKind> _205841493_buildWhileIterKind(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _28342_tokens) {
	return jule::new_ptr<_2043552b6_WhileKind>(_2043552b6_WhileKind{._field_Expr=_20585b090_buildExpr((*_self_)._field_p, _28342_tokens), });
}



inline jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _2058417a1_getRangeKindKeysTokens(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _28946_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _29018_vars;;
	jule::Slice<_20285b7ad_Log> _29024_errs;;
	std::tie(_29018_vars,_29024_errs) = _205858cd5_parts(_28946_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29024_errs);
	return _29018_vars;
}



inline jule::Ptr<_204353ec9_VarDecl> _205841aae_buildRangeKindKey(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _29541_tokens) {
	if ((_29541_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_204353ec9_VarDecl> _29917_key = jule::new_ptr<_204353ec9_VarDecl>(_204353ec9_VarDecl{._field_Token=_29541_tokens[0LL], });;
	if ((_29917_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_29917_key.get()._field_Mutable=true;
		if ((_29541_tokens.len() == 1LL)) {
			_20583ea9b_pushErr(&(*_self_), _29917_key.get()._field_Token,jule::Str("invalid syntax", 14));
		};
		_29917_key.get()._field_Token=_29541_tokens[1LL];
	} else if ((_29541_tokens.len() > 1LL)) {
		_20583ea9b_pushErr(&(*_self_), _29541_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_29917_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_20583ea9b_pushErr(&(*_self_), _29917_key.get()._field_Token,jule::Str("invalid syntax", 14));
		_20583edba_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_29917_key.get()._field_Ident=_29917_key.get()._field_Token.get()._field_Kind;
	return _29917_key;
}



inline jule::Slice<jule::Ptr<_204353ec9_VarDecl>> _205841dbc_buildRangeKindKeys(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>>& _32042_parts) {
	jule::Slice<jule::Ptr<_204353ec9_VarDecl>> _32117_keys = nullptr;;
	{
		auto &expr = _32042_parts;
		auto it = expr.begin();
		_iter_begin_1db9c0a37:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_202b89679_Token>> _32221_tokens = *it;
			{
				_32117_keys = jule::alloc_for_append(_32117_keys,1);_32117_keys.__push(_205841aae_buildRangeKindKey(&(*_self_), _32221_tokens));;
			}
			_iter_next_1db9c0a37:;
			++it;
			goto _iter_begin_1db9c0a37;
		}
		_iter_end_1db9c0a37:;
	};
	return _32117_keys;
}



inline void _20584220d_setupRangeKindKeysPlain(_20583d8ad_scopeParser* _self_, jule::Ptr<_204355b57_RangeKind>& _32847_rng, jule::Slice<jule::Ptr<_202b89679_Token>>& _32869_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _32917_keyTokens = _2058417a1_getRangeKindKeysTokens(&(*_self_), _32869_tokens);;
	if ((_32917_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32917_keyTokens.len() > 2LL)) {
		_20583ea9b_pushErr(&(*_self_), _32847_rng.get()._field_InToken,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_204353ec9_VarDecl>> _33617_keys = _205841dbc_buildRangeKindKeys(&(*_self_), _32917_keyTokens);;
	_32847_rng.get()._field_KeyA=_33617_keys[0LL];
	if ((_33617_keys.len() > 1LL)) {
		_32847_rng.get()._field_KeyB=_33617_keys[1LL];
	};
}



inline void _205842560_setupRangeKindKeysExplicit(_20583d8ad_scopeParser* _self_, jule::Ptr<_204355b57_RangeKind>& _34350_rng, jule::Slice<jule::Ptr<_202b89679_Token>>& _34372_tokens) {
	jule::I64 _34417_i = 0LL;;
	jule::Slice<jule::Ptr<_202b89679_Token>> _34517_rang = _205858268_range(_34417_i,jule::Str("(", 1),jule::Str(")", 1),_34372_tokens);;
	if ((_34417_i < _34372_tokens.len())) {
		_20583ea9b_pushErr(&(*_self_), _34350_rng.get()._field_InToken,jule::Str("invalid syntax", 14));
	};
	_20584220d_setupRangeKindKeysPlain(&(*_self_), _34350_rng,_34517_rang);
}



inline void _205842890_setupRangeKindKeys(_20583d8ad_scopeParser* _self_, jule::Ptr<_204355b57_RangeKind>& _35242_rng, jule::Slice<jule::Ptr<_202b89679_Token>>& _35264_tokens) {
	if ((_35264_tokens[0LL].get()._field_Id == static_cast<jule::U64>(3LLU))) {
		if ((_35264_tokens[0LL].get()._field_Kind != jule::Str("(", 1))) {
			_20583ea9b_pushErr(&(*_self_), _35264_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_205842560_setupRangeKindKeysExplicit(&(*_self_), _35242_rng,_35264_tokens);
		return;;
	};
	_20584220d_setupRangeKindKeysPlain(&(*_self_), _35242_rng,_35264_tokens);
}



inline jule::Ptr<_204355b57_RangeKind> _205842ce1_buildRangeIterKind(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _36442_var_tokens, jule::Slice<jule::Ptr<_202b89679_Token>>& _36514_exprTokens, jule::Ptr<_202b89679_Token>& _36541_inToken) {
	jule::Ptr<_204355b57_RangeKind> _36617_rng = jule::new_ptr<_204355b57_RangeKind>(_204355b57_RangeKind{._field_InToken=_36541_inToken, });;
	if ((_36514_exprTokens.len() == 0LL)) {
		_20583ea9b_pushErr(&(*_self_), _36617_rng.get()._field_InToken,jule::Str("expression missing", 18));
		return _36617_rng;
	};
	_36617_rng.get()._field_Expr=_20585b090_buildExpr((*_self_)._field_p, _36514_exprTokens);
	if ((_36442_var_tokens.len() > 0LL)) {
		_205842890_setupRangeKindKeys(&(*_self_), _36617_rng,_36442_var_tokens);
	};
	return _36617_rng;
}



inline jule::Any _205843198_buildCommonIterKind(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _38043_tokens, jule::Ptr<_202b89679_Token>& _38062_err_tok) {
	jule::I64 _38117_braceN = 0LL;;
	{
		auto &expr = _38043_tokens;
		auto it = expr.begin();
		_iter_begin_1db9cc0e8:;
		if (it != expr.end()) {
			jule::I64 _38214_i = it - expr.begin();
			jule::Ptr<_202b89679_Token> _38221_tok = *it;
			{
				if ((_38221_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38221_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1db9cd0b6:;
							{
								(_38117_braceN)++;
								goto _iter_next_1db9cc0e8;
							}
						}
						else {
							_case_begin_1db9cd3a2:;
							{
								(_38117_braceN)--;
							}
						}
						_match_end_1db9cd182:;
					};
				};
				if ((_38117_braceN != 0LL)) {
					goto _iter_next_1db9cc0e8;
				};
				{
					auto &_match_expr{ _38221_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1db9ce1a5:;
						{
							jule::Slice<jule::Ptr<_202b89679_Token>> _39925_declTokens = _38043_tokens.slice(0LL,_38214_i);;
							jule::Slice<jule::Ptr<_202b89679_Token>> _40025_exprTokens = _38043_tokens.slice((_38214_i + 1LL));;
							return static_cast<jule::Any>(_205842ce1_buildRangeIterKind(&(*_self_), _39925_declTokens,_40025_exprTokens,_38221_tok));
						}
					}
					_match_end_1db9ccca8:;
				};
			}
			_iter_next_1db9cc0e8:;
			++it;
			_38214_i++;
			goto _iter_begin_1db9cc0e8;
		}
		_iter_end_1db9cc0e8:;
	};
	return static_cast<jule::Any>(_205841493_buildWhileIterKind(&(*_self_), _38043_tokens));
}



inline jule::Ptr<_2043549e1_Iter> _2058434a6_buildCommonIter(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _40738_tokens) {
	jule::Ptr<_2043549e1_Iter> _40817_it = jule::new_ptr<_2043549e1_Iter>(_2043549e1_Iter{._field_Token=_40738_tokens[0LL], });;
	_40738_tokens=_40738_tokens.slice(1LL);
	if ((_40738_tokens.len() == 0LL)) {
		_20583e040_stop(&(*_self_));
		_20583ea9b_pushErr(&(*_self_), _40817_it.get()._field_Token,jule::Str("body is not exist", 17));
		_20583edba_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_202b89679_Token>> _41817_exprTokens = _205855199_getBlockExpr(_40738_tokens);;
	if ((_41817_exprTokens.len() > 0LL)) {
		_40817_it.get()._field_Kind=_205843198_buildCommonIterKind(&(*_self_), _41817_exprTokens,_40817_it.get()._field_Token);
	};
	jule::I64 _42217_i = _41817_exprTokens.len();;
	jule::Slice<jule::Ptr<_202b89679_Token>> _42317_scopeTokens = _205858268_range(_42217_i,jule::Str("{", 1),jule::Str("}", 1),_40738_tokens);;
	if ((_42317_scopeTokens == nullptr)) {
		_20583e040_stop(&(*_self_));
		_20583ea9b_pushErr(&(*_self_), _40817_it.get()._field_Token,jule::Str("body is not exist", 17));
		_20583edba_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42217_i < _40738_tokens.len())) {
		_20583ea9b_pushErr(&(*_self_), _40738_tokens[_42217_i],jule::Str("invalid syntax", 14));
	};
	_40817_it.get()._field_Scope=_20584075b_buildScope(&(*_self_), _42317_scopeTokens,_40738_tokens[(_42217_i - 1LL)]);
	return _40817_it;
}



inline jule::Ptr<_2043549e1_Iter> _2058437b4_buildIterSt(_20583d8ad_scopeParser* _self_, jule::Ptr<_20583d083_stmt>& _43735_st) {
	if (_43735_st.get()._field_terminated) {
		return _205841185_buildWhileNextIter(&(*_self_), _43735_st);
	};
	return _2058434a6_buildCommonIter(&(*_self_), _43735_st.get()._field_tokens);
}



inline jule::Ptr<_20435600e_BreakSt> _205843ac2_buildBreakSt(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _44436_tokens) {
	jule::Ptr<_20435600e_BreakSt> _44517_brk = jule::new_ptr<_20435600e_BreakSt>(_20435600e_BreakSt{._field_Token=_44436_tokens[0LL], });;
	if ((_44436_tokens.len() > 1LL)) {
		if ((_44436_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_20583ea9b_pushErr(&(*_self_), _44436_tokens[1LL],jule::Str("invalid syntax", 14));
			_20583edba_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44517_brk.get()._field_Label=_44436_tokens[1LL];
			if ((_44436_tokens.len() > 2LL)) {
				_20583ea9b_pushErr(&(*_self_), _44436_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44517_brk;
}



inline jule::Ptr<_2043563b6_ContSt> _205843dd0_buildContSt(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _46235_tokens) {
	jule::Ptr<_2043563b6_ContSt> _46317_cont = jule::new_ptr<_2043563b6_ContSt>(_2043563b6_ContSt{._field_Token=_46235_tokens[0LL], });;
	if ((_46235_tokens.len() > 1LL)) {
		if ((_46235_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_20583ea9b_pushErr(&(*_self_), _46235_tokens[1LL],jule::Str("invalid syntax", 14));
			_20583edba_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46317_cont.get()._field_Label=_46235_tokens[1LL];
			if ((_46235_tokens.len() > 2LL)) {
				_20583ea9b_pushErr(&(*_self_), _46235_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46317_cont;
}



inline jule::Ptr<_204356839_If> _2058441dd_buildIf(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _48031_tokens) {
	jule::Ptr<_204356839_If> _48117_model = jule::new_ptr<_204356839_If>(_204356839_If{._field_Token=_48031_tokens[0LL], });;
	_48031_tokens=_48031_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_202b89679_Token>> _48517_exprTokens = _205855199_getBlockExpr(_48031_tokens);;
	jule::I64 _48617_i = 0LL;;
	if ((_48517_exprTokens.len() == 0LL)) {
		_20583ea9b_pushErr(&(*_self_), _48117_model.get()._field_Token,jule::Str("expression missing", 18));
	} else {
		_48617_i=static_cast<jule::I64>(_48517_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_202b89679_Token>> _49217_scopeTokens = _205858268_range(_48617_i,jule::Str("{", 1),jule::Str("}", 1),_48031_tokens);;
	if ((_49217_scopeTokens == nullptr)) {
		_20583e040_stop(&(*_self_));
		_20583ea9b_pushErr(&(*_self_), _48117_model.get()._field_Token,jule::Str("body is not exist", 17));
		_20583edba_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_202b89679_Token> _49917_end = _48031_tokens[(_48617_i - 1LL)];;
	if ((_48617_i < _48031_tokens.len())) {
		if ((_48031_tokens[_48617_i].get()._field_Id == static_cast<jule::U64>(17LLU))) {
			_48031_tokens=_48031_tokens.slice(_48617_i);
		} else {
			_20583ea9b_pushErr(&(*_self_), _48031_tokens[_48617_i],jule::Str("invalid syntax", 14));
			_48031_tokens=nullptr;
		};
	};
	_48117_model.get()._field_Expr=_20585b090_buildExpr((*_self_)._field_p, _48517_exprTokens);
	_48117_model.get()._field_Scope=_20584075b_buildScope(&(*_self_), _49217_scopeTokens,_49917_end);
	return _48117_model;
}



inline jule::Ptr<_204356be1_Else> _2058444eb_buildElse(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _51333_tokens) {
	jule::Ptr<_204356be1_Else> _51417_els = jule::new_ptr<_204356be1_Else>(_204356be1_Else{._field_Token=_51333_tokens[0LL], });;
	_51333_tokens=_51333_tokens.slice(1LL);
	jule::I64 _51817_i = 0LL;;
	jule::Slice<jule::Ptr<_202b89679_Token>> _51917_scopeTokens = _205858268_range(_51817_i,jule::Str("{", 1),jule::Str("}", 1),_51333_tokens);;
	if ((_51917_scopeTokens == nullptr)) {
		if ((_51817_i < _51333_tokens.len())) {
			_20583ea9b_pushErr(&(*_self_), _51417_els.get()._field_Token,jule::Str("else's cannot have any expression", 33));
		} else {
			_20583e040_stop(&(*_self_));
			_20583ea9b_pushErr(&(*_self_), _51417_els.get()._field_Token,jule::Str("body is not exist", 17));
			_20583edba_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51817_i < _51333_tokens.len())) {
		_20583ea9b_pushErr(&(*_self_), _51333_tokens[_51817_i],jule::Str("invalid syntax", 14));
	};
	_51417_els.get()._field_Scope=_20584075b_buildScope(&(*_self_), _51917_scopeTokens,_51333_tokens[(_51817_i - 1LL)]);
	return _51417_els;
}



inline jule::Ptr<_204357164_Conditional> _205844809_buildIfElseChain(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _53739_tokens) {
	jule::Ptr<_204357164_Conditional> _53817_chain = jule::new_ptr<_204357164_Conditional>(_204357164_Conditional{._field_Head=_2058441dd_buildIf(&(*_self_), _53739_tokens), });;
	if ((_53817_chain.get()._field_Head == nullptr)) {
		return nullptr;
	};
	while ((_53739_tokens.len() != 0LL)) {
		{
			if ((_53739_tokens[0LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1db9eb9b9;
			};
			if (((_53739_tokens.len() > 1LL) && (_53739_tokens[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
				_53739_tokens=_53739_tokens.slice(1LL);
				jule::Ptr<_204356839_If> _55025_elif = _2058441dd_buildIf(&(*_self_), _53739_tokens);;
				_53817_chain.get()._field_Tail = jule::alloc_for_append(_53817_chain.get()._field_Tail,1);_53817_chain.get()._field_Tail.__push(_55025_elif);;
				goto _iter_next_1db9eb9b9;
			};
			_53817_chain.get()._field_Default=_2058444eb_buildElse(&(*_self_), _53739_tokens);
			goto _iter_end_1db9eb9b9;
		}
	_iter_next_1db9eb9b9:;
	}
	_iter_end_1db9eb9b9:;;
	return _53817_chain;
}



inline jule::Ptr<_204345a8c_Expr> _205844b17_buildCoCallSt(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _56036_tokens) {
	jule::Ptr<_202b89679_Token> _56113_token = _56036_tokens[0LL];;
	_56036_tokens=_56036_tokens.slice(1LL);
	jule::Ptr<_204345a8c_Expr> _56317_e = _20585b090_buildExpr((*_self_)._field_p, _56036_tokens);;
	if ((_56317_e == nullptr)) {
		return _56317_e;
	};
	{
		auto &_match_expr{ _56317_e.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_204349a6e_FnCallExpr>>()) {
			_case_begin_1dba01590:;
			{
				_56317_e.get()._field_Kind.operator jule::Ptr<_204349a6e_FnCallExpr>().get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_1dba01183:;
			{
				_20583ea9b_pushErr(&(*_self_), _56113_token,jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_1dba0101d:;
	};
	return _56317_e;
}



inline jule::Ptr<_20434e0c3_GotoSt> _205844e25_buildGotoSt(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _57635_tokens) {
	jule::Ptr<_20434e0c3_GotoSt> _57717_gt = jule::new_ptr<_20434e0c3_GotoSt>(_20434e0c3_GotoSt{._field_Token=_57635_tokens[0LL], });;
	if ((_57635_tokens.len() == 1LL)) {
		_20583ea9b_pushErr(&(*_self_), _57717_gt.get()._field_Token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_57635_tokens.len() > 2LL)) {
		_20583ea9b_pushErr(&(*_self_), _57635_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_202b89679_Token> _58617_identToken = _57635_tokens[1LL];;
	if ((_58617_identToken.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_20583ea9b_pushErr(&(*_self_), _58617_identToken,jule::Str("invalid syntax", 14));
		_20583edba_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57717_gt;
	};
	_57717_gt.get()._field_Label=_58617_identToken;
	return _57717_gt;
}



inline jule::Ptr<_20434e3ae_FallSt> _205845233_buildFallSt(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _59635_tokens) {
	jule::Ptr<_20434e3ae_FallSt> _59717_fll = jule::new_ptr<_20434e3ae_FallSt>(_20434e3ae_FallSt{._field_Token=_59635_tokens[0LL]});;
	if ((_59635_tokens.len() > 1LL)) {
		_20583ea9b_pushErr(&(*_self_), _59635_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59717_fll;
}



inline jule::Ptr<_20435783a_TypeAliasDecl> _205845541_buildTypeAliasSt(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _60640_tokens) {
	jule::Ptr<_20435783a_TypeAliasDecl> _60717_tad = _20585c68a_buildTypeAliasDecl((*_self_)._field_p, _60640_tokens);;
	_60717_tad.get()._field_Scope=(*_self_)._field_s;
	return _60717_tad;
}



inline void _2058459a3_pushCaseExpr(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _61235_tokens, jule::Ptr<_202b89679_Token> _61257_token, jule::Bool _6139_typeMatch, jule::Slice<jule::Ptr<_204345a8c_Expr>>& _61331_exprs) {
	if ((_61235_tokens.len() == 0LL)) {
		return;;
	};
	if (_6139_typeMatch) {
		jule::I64 _61921_i = 0LL;;
		jule::Ptr<_20434156b_TypeDecl> _62022_t;;
		jule::Bool _62025_ok;;
		std::tie(_62022_t,_62025_ok) = _20585c37c_buildType((*_self_)._field_p, _61235_tokens,(&(_61921_i)),true);
		if (_62025_ok) {
			_61331_exprs = jule::alloc_for_append(_61331_exprs,1);_61331_exprs.__push(jule::new_ptr<_204345a8c_Expr>(_204345a8c_Expr{._field_Token=_61235_tokens[0LL], ._field_End=_61235_tokens[(_61235_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_62022_t)}));;
			if ((_61921_i < _61235_tokens.len())) {
				_20583ea9b_pushErr(&(*_self_), _61235_tokens[_61921_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_61331_exprs = jule::alloc_for_append(_61331_exprs,1);_61331_exprs.__push(_20585b090_buildExpr((*_self_)._field_p, _61235_tokens));;
}



inline jule::Slice<jule::Ptr<_204345a8c_Expr>> _205845e04_buildCaseExprs(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _63638_tokens, jule::Ptr<_202b89679_Token>& _63661_colon, jule::Bool _63676_typeMatch) {
	jule::Slice<jule::Ptr<_204345a8c_Expr>> _63717_exprs = jule::Slice<jule::Ptr<_204345a8c_Expr>>::alloc(0LL,1LL);;
	jule::I64 _63917_braceN = 0LL;;
	jule::I64 _64017_j = 0LL;;
	{
		auto &expr = _63638_tokens;
		auto it = expr.begin();
		_iter_begin_1dba0dee8:;
		if (it != expr.end()) {
			jule::I64 _64114_i = it - expr.begin();
			jule::Ptr<_202b89679_Token> _64121_tok = *it;
			{
				if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _64121_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1dba10109:;
							{
								(_63917_braceN)++;
							}
						}
						else {
							_case_begin_1dba103e5:;
							{
								(_63917_braceN)--;
							}
						}
						_match_end_1dba101c5:;
					};
					goto _iter_next_1dba0dee8;
				} else if ((_63917_braceN != 0LL)) {
					goto _iter_next_1dba0dee8;
				};
				{
					
					if (((_64121_tok.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_64121_tok.get()._field_Kind == jule::Str("|", 1)))) {
						_case_begin_1dba108e0:;
						{
							jule::Slice<jule::Ptr<_202b89679_Token>> _65721_exprTokens = _63638_tokens.slice(_64017_j,_64114_i);;
							if ((_65721_exprTokens.len() == 0LL)) {
								_20583ea9b_pushErr(&(*_self_), _64121_tok,jule::Str("expression missing", 18));
							} else {
								_2058459a3_pushCaseExpr(&(*_self_), _63638_tokens.slice(_64017_j,_64114_i),_64121_tok,_63676_typeMatch,_63717_exprs);
							};
							_64017_j=static_cast<jule::I64>((_64114_i + 1LL));
						}
					}
					else if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1dba11292:;
						{
							_63661_colon=_64121_tok;
							_2058459a3_pushCaseExpr(&(*_self_), _63638_tokens.slice(_64017_j,_64114_i),_64121_tok,_63676_typeMatch,_63717_exprs);
							_63638_tokens=_63638_tokens.slice((_64114_i + 1LL));
							return _63717_exprs;
						}
					}
					_match_end_1dba1001b:;
				};
			}
			_iter_next_1dba0dee8:;
			++it;
			_64114_i++;
			goto _iter_begin_1dba0dee8;
		}
		_iter_end_1dba0dee8:;
	};
	_20583ea9b_pushErr(&(*_self_), _63638_tokens[0LL],jule::Str("invalid syntax", 14));
	_63638_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_204351504_ScopeTree> _205846212_buildCaseScope(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _67638_tokens) {
	jule::I64 _67717_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67921_i = 0LL;;
			jule::Slice<jule::Ptr<_202b89679_Token>> _68022_next;;
			std::tie(_68022_next,std::ignore) = _20583cc86_skipSt(_67921_i,_67638_tokens.slice(_67717_n));
			if ((_68022_next.len() == 0LL)) {
				goto _iter_end_1dba151ca;
			};
			jule::Ptr<_202b89679_Token> _68417_tok = _68022_next[0LL];;
			if (((_68417_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_68417_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_67717_n+=_67921_i;
				goto _iter_next_1dba151ca;
			};
			jule::Slice<jule::Ptr<_202b89679_Token>> _68921_scopeTokens = _67638_tokens.slice(0LL,_67717_n);;
			jule::Ptr<_204351504_ScopeTree> _69021_scope = _20584075b_buildScope(&(*_self_), _68921_scopeTokens,_67638_tokens[_67717_n]);;
			_67638_tokens=_67638_tokens.slice(_67717_n);
			return _69021_scope;
		}
	_iter_next_1dba151ca:;
	}
	_iter_end_1dba151ca:;;
	jule::Ptr<_202b89679_Token> _69417_end = jule::Ptr<_202b89679_Token>();;
	if ((_67638_tokens.len() > 0LL)) {
		_69417_end=_67638_tokens[(_67638_tokens.len() - 1LL)];
	};
	jule::Ptr<_204351504_ScopeTree> _69817_scope = _20584075b_buildScope(&(*_self_), _67638_tokens,_69417_end);;
	_67638_tokens=nullptr;
	return _69817_scope;
}



inline std::tuple<jule::Ptr<_204357cad_Case>,jule::Bool> _2058465b9_buildCase(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _70333_tokens, jule::Bool _70351_typeMatch) {
	jule::Ptr<_204357cad_Case> _70417_c = jule::new_ptr<_204357cad_Case>(_204357cad_Case{._field_Token=_70333_tokens[0LL], });;
	_70333_tokens=_70333_tokens.slice(1LL);
	jule::Ptr<_202b89679_Token> _70817_colon = nullptr;;
	_70417_c.get()._field_Exprs=_205845e04_buildCaseExprs(&(*_self_), _70333_tokens,_70817_colon,_70351_typeMatch);
	_70417_c.get()._field_Scope=_205846212_buildCaseScope(&(*_self_), _70333_tokens);
	if ((_70417_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70417_c.get()._field_Scope.get()._field_End=_70817_colon;
	};
	jule::Bool _71413_isDefault = (_70417_c.get()._field_Exprs.len() == 0LL);;
	return std::make_tuple(_70417_c,_71413_isDefault);
}



inline std::tuple<jule::Slice<jule::Ptr<_204357cad_Case>>,jule::Ptr<_204356be1_Else>> _205846971_buildCases(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _71833_tokens, jule::Bool _71851_typeMatch) {
	jule::Slice<jule::Ptr<_204357cad_Case>> _71917_cases = nullptr;;
	jule::Ptr<_204356be1_Else> _72017_def = nullptr;;
	jule::Bool _72117_defNotLast = false;;
	while ((_71833_tokens.len() > 0LL)) {
		{
			jule::Ptr<_202b89679_Token> _72321_tok = _71833_tokens[0LL];;
			if (((_72321_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_72321_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_20583ea9b_pushErr(&(*_self_), _72321_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1dba1e547;
			};
			jule::Ptr<_204357cad_Case> _72822_c;;
			jule::Bool _72825_isDefault;;
			std::tie(_72822_c,_72825_isDefault) = _2058465b9_buildCase(&(*_self_), _71833_tokens,_71851_typeMatch);
			if (_72825_isDefault) {
				_72822_c.get()._field_Token=_72321_tok;
				if ((_72017_def == nullptr)) {
					_72017_def=jule::new_ptr<_204356be1_Else>(_204356be1_Else{._field_Token=_72822_c.get()._field_Token, ._field_Scope=_72822_c.get()._field_Scope});
				} else {
					_20583ea9b_pushErr(&(*_self_), _72321_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_72117_defNotLast=(_72117_defNotLast || (_72017_def != nullptr));
				_71917_cases = jule::alloc_for_append(_71917_cases,1);_71917_cases.__push(_72822_c);;
			};
		}
	_iter_next_1dba1e547:;
	}
	_iter_end_1dba1e547:;;
	if (_72117_defNotLast) {
		_20583ea9b_pushErr(&(*_self_), _72017_def.get()._field_Token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_71917_cases,_72017_def);
}



inline jule::Ptr<_204358484_MatchCase> _205846c7e_buildMatchCase(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _75237_tokens) {
	jule::Ptr<_204358484_MatchCase> _75317_m = jule::new_ptr<_204358484_MatchCase>(_204358484_MatchCase{._field_Token=_75237_tokens[0LL], });;
	_75237_tokens=_75237_tokens.slice(1LL);
	if (((_75237_tokens.len() > 0LL) && (_75237_tokens[0LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		_75317_m.get()._field_TypeMatch=true;
		_75237_tokens=_75237_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_202b89679_Token>> _76317_exprTokens = _205855199_getBlockExpr(_75237_tokens);;
	if ((_76317_exprTokens.len() > 0LL)) {
		_75317_m.get()._field_Expr=_20585b090_buildExpr((*_self_)._field_p, _76317_exprTokens);
	} else if (_75317_m.get()._field_TypeMatch) {
		_20583ea9b_pushErr(&(*_self_), _75317_m.get()._field_Token,jule::Str("expression missing", 18));
	};
	jule::I64 _77017_i = _76317_exprTokens.len();;
	jule::Slice<jule::Ptr<_202b89679_Token>> _77117_blockToks = _205858268_range(_77017_i,jule::Str("{", 1),jule::Str("}", 1),_75237_tokens);;
	if ((_77117_blockToks == nullptr)) {
		_20583e040_stop(&(*_self_));
		_20583ea9b_pushErr(&(*_self_), _75317_m.get()._field_Token,jule::Str("body is not exist", 17));
		_20583edba_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_77017_i < _75237_tokens.len())) {
		_20583ea9b_pushErr(&(*_self_), _75237_tokens[_77017_i],jule::Str("invalid syntax", 14));
	};
	_75317_m.get()._field_End=_75237_tokens[(_77017_i - 1LL)];
	std::tie(_75317_m.get()._field_Cases,_75317_m.get()._field_Default) = _205846971_buildCases(&(*_self_), _77117_blockToks,_75317_m.get()._field_TypeMatch);
	return _75317_m;
}



inline jule::Ptr<_204351504_ScopeTree> _20584708c_buildScopeSt(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _78535_tokens) {
	jule::Bool _78617_isUnsafe = false;;
	jule::Bool _78717_isDeferred = false;;
	jule::Ptr<_202b89679_Token> _78817_token = _78535_tokens[0LL];;
	if ((_78817_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_78617_isUnsafe=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_20583ea9b_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_78817_token=_78535_tokens[0LL];
		if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
			_78717_isDeferred=true;
			_78535_tokens=_78535_tokens.slice(1LL);
			if ((_78535_tokens.len() == 0LL)) {
				_20583ea9b_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_78717_isDeferred=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_20583ea9b_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I64 _81417_i = 0LL;;
	jule::Slice<jule::Ptr<_202b89679_Token>> _81517_scopeTokens = _205858268_range(_81417_i,jule::Str("{", 1),jule::Str("}", 1),_78535_tokens);;
	if ((_81517_scopeTokens == nullptr)) {
		_20583ea9b_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_81417_i < _78535_tokens.len())) {
		_20583ea9b_pushErr(&(*_self_), _78535_tokens[_81417_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_204351504_ScopeTree> _82217_scope = _20584075b_buildScope(&(*_self_), _81517_scopeTokens,_78535_tokens[(_81417_i - 1LL)]);;
	_82217_scope.get()._field_Unsafety=_78617_isUnsafe;
	_82217_scope.get()._field_Deferred=_78717_isDeferred;
	return _82217_scope;
}



inline jule::Ptr<_20434dc1b_LabelSt> _20584739a_buildLabelSt(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _82836_tokens) {
	jule::Ptr<_20434dc1b_LabelSt> _82917_lbl = jule::new_ptr<_20434dc1b_LabelSt>(_20434dc1b_LabelSt{._field_Token=_82836_tokens[0LL], ._field_Ident=_82836_tokens[0LL].get()._field_Kind});;
	if ((_82836_tokens.len() > 2LL)) {
		_82836_tokens=_82836_tokens.slice(2LL);
		_205840140_insertAsNext(&(*_self_), _82836_tokens);
	};
	return _82917_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _2058476a8_buildIdSt(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _84333_tokens) {
	jule::Bool _84363_ok = jule::Bool();
	if ((_84333_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_84363_ok);
	};
	jule::Ptr<_202b89679_Token> _84817_token = _84333_tokens[1LL];;
	{
		auto &_match_expr{ _84817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1dba36790:;
			{
				_84363_ok = true;
				return std::make_tuple(static_cast<jule::Any>(_20584739a_buildLabelSt(&(*_self_), _84333_tokens)),_84363_ok);
			}
		}
		_match_end_1dba37472:;
	};
	return std::make_tuple(jule::Any(),_84363_ok);
}



inline jule::Ptr<_2058566c8_assignInfo> _2058479b6_buildAssignInfo(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _85739_tokens) {
	jule::Ptr<_2058566c8_assignInfo> _85817_info = jule::new_ptr<_2058566c8_assignInfo>(_2058566c8_assignInfo{._field_ok=true});;
	jule::I64 _86117_braceN = 0LL;;
	{
		auto &expr = _85739_tokens;
		auto it = expr.begin();
		_iter_begin_1dba394a7:;
		if (it != expr.end()) {
			jule::I64 _86214_i = it - expr.begin();
			jule::Ptr<_202b89679_Token> _86221_token = *it;
			{
				if ((_86221_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _86221_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1dba3a4a8:;
							{
								(_86117_braceN)++;
							}
						}
						else {
							_case_begin_1dba3a794:;
							{
								(_86117_braceN)--;
							}
						}
						_match_end_1dba3a574:;
					};
				};
				{
					
					if ((_86117_braceN > 0LL)) {
						_case_begin_1dba3a19a:;
						{
							goto _iter_next_1dba394a7;
						}
					}
					else if ((_86221_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1dba3a211:;
						{
							goto _iter_next_1dba394a7;
						}
					}
					else if ((!(_202b8e261_IsAssignOp(_86221_token.get()._field_Kind)))) {
						_case_begin_1dba3a277:;
						{
							goto _iter_next_1dba394a7;
						}
					}
					_match_end_1dba3ac8e:;
				};
				_85817_info.get()._field_l=_85739_tokens.slice(0LL,_86214_i);
				if ((_85817_info.get()._field_l.len() == 0LL)) {
					_85817_info.get()._field_ok=false;
				};
				_85817_info.get()._field_setter=_86221_token;
				if (((_86214_i + 1LL) >= _85739_tokens.len())) {
					_85817_info.get()._field_r=nullptr;
					_85817_info.get()._field_ok=_202b8deb9_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_1dba394a7;
				};
				_85817_info.get()._field_r=_85739_tokens.slice((_86214_i + 1LL));
				if (_202b8deb9_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind)) {
					if ((_85817_info.get()._field_r.len() > 0LL)) {
						_20583ea9b_pushErr(&(*_self_), _85817_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_85817_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1dba394a7;
			}
			_iter_next_1dba394a7:;
			++it;
			_86214_i++;
			goto _iter_begin_1dba394a7;
		}
		_iter_end_1dba394a7:;
	};
	return _85817_info;
}



inline jule::Ptr<_20434e9b9_AssignLeft> _205847cc4_buildAssignL(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _90536_tokens) {
	jule::Ptr<_20434e9b9_AssignLeft> _90617_l = jule::new_ptr<_20434e9b9_AssignLeft>(_20434e9b9_AssignLeft{._field_Token=_90536_tokens[0LL], });;
	if ((_90536_tokens[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		_90617_l.get()._field_Ident=_90617_l.get()._field_Token.get()._field_Kind;
	};
	_90617_l.get()._field_Expr=_20585b090_buildExpr((*_self_)._field_p, _90536_tokens);
	return _90617_l;
}



inline jule::Slice<jule::Ptr<_20434e9b9_AssignLeft>> _2058480d2_buildAssignLs(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>>& _91637_parts) {
	jule::Slice<jule::Ptr<_20434e9b9_AssignLeft>> _91717_lefts = nullptr;;
	{
		auto &expr = _91637_parts;
		auto it = expr.begin();
		_iter_begin_1dba43549:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_202b89679_Token>> _91821_part = *it;
			{
				jule::Ptr<_20434e9b9_AssignLeft> _91921_l = _205847cc4_buildAssignL(&(*_self_), _91821_part);;
				_91717_lefts = jule::alloc_for_append(_91717_lefts,1);_91717_lefts.__push(_91921_l);;
			}
			_iter_next_1dba43549:;
			++it;
			goto _iter_begin_1dba43549;
		}
		_iter_end_1dba43549:;
	};
	return _91717_lefts;
}



inline std::tuple<jule::Ptr<_204350008_AssignSt>,jule::Bool> _2058483e0_buildPlainAssign(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _92640_tokens) {
	jule::Ptr<_2058566c8_assignInfo> _92717_info = _2058479b6_buildAssignInfo(&(*_self_), _92640_tokens);;
	if ((!(_92717_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_204350008_AssignSt> _93217_assign = jule::new_ptr<_204350008_AssignSt>(_204350008_AssignSt{._field_Setter=_92717_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _93618_parts;;
	jule::Slice<_20285b7ad_Log> _93625_errs;;
	std::tie(_93618_parts,_93625_errs) = _205858cd5_parts(_92717_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_93625_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_93625_errs);
		return std::make_tuple(nullptr,false);
	};
	_93217_assign.get()._field_Left=_2058480d2_buildAssignLs(&(*_self_), _93618_parts);
	if ((_92717_info.get()._field_r != nullptr)) {
		_93217_assign.get()._field_Right=_20585b090_buildExpr((*_self_)._field_p, _92717_info.get()._field_r);
	};
	return std::make_tuple(_93217_assign,true);
}



inline std::tuple<jule::Ptr<_204350008_AssignSt>,jule::Bool> _2058486ed_buildDeclAssign(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _95038_tokens) {
	if ((_95038_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_95038_tokens=_95038_tokens.slice(1LL);
	jule::Ptr<_202b89679_Token> _95617_token = _95038_tokens[0LL];;
	if (((_95617_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_95617_token.get()._field_Kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_204350008_AssignSt> _96117_assign = jule::new_ptr<_204350008_AssignSt>(_204350008_AssignSt{._field_Declarative=true, });;
	jule::I64 _96517_i = 0LL;;
	jule::Slice<jule::Ptr<_202b89679_Token>> _96617_rang = _205858268_range(_96517_i,jule::Str("(", 1),jule::Str(")", 1),_95038_tokens);;
	if ((_96617_rang == nullptr)) {
		_20583ea9b_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_96517_i + 1LL) < _95038_tokens.len())) {
		_96117_assign.get()._field_Setter=_95038_tokens[_96517_i];
		(_96517_i)++;
		jule::Slice<jule::Ptr<_202b89679_Token>> _97321_exprTokens = _95038_tokens.slice(_96517_i);;
		_96117_assign.get()._field_Right=_20585b090_buildExpr((*_self_)._field_p, _97321_exprTokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _97818_parts;;
	jule::Slice<_20285b7ad_Log> _97825_errs;;
	std::tie(_97818_parts,_97825_errs) = _205858cd5_parts(_96617_rang,static_cast<jule::U64>(8LLU),true);
	if ((_97825_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_97825_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _97818_parts;
		auto it = expr.begin();
		_iter_begin_1dba50e6e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_202b89679_Token>> _98421_part = *it;
			{
				jule::Bool _98521_isMut = false;;
				jule::Bool _98621_isRef = false;;
				_95617_token=_98421_part[0LL];
				if ((_95617_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_98521_isMut=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_20583ea9b_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1dba50e6e;
					};
				};
				if (((_98421_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_98421_part[0LL].get()._field_Kind == jule::Str("&", 1)))) {
					_98621_isRef=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_20583ea9b_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1dba50e6e;
					};
				};
				if ((((_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU)) && (_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(3LLU))) && (_98421_part[0LL].get()._field_Kind != jule::Str("(", 1)))) {
					_20583ea9b_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1dba50e6e;
				};
				jule::Ptr<_20434e9b9_AssignLeft> _101421_l = _205847cc4_buildAssignL(&(*_self_), _98421_part);;
				_101421_l.get()._field_Mutable=_98521_isMut;
				_101421_l.get()._field_Reference=_98621_isRef;
				_96117_assign.get()._field_Left = jule::alloc_for_append(_96117_assign.get()._field_Left,1);_96117_assign.get()._field_Left.__push(_101421_l);;
			}
			_iter_next_1dba50e6e:;
			++it;
			goto _iter_begin_1dba50e6e;
		}
		_iter_end_1dba50e6e:;
	};
	return std::make_tuple(_96117_assign,true);
}



inline std::tuple<jule::Ptr<_204350008_AssignSt>,jule::Bool> _205848a0b_buildAssignSt(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _102337_tokens) {
	jule::Ptr<_204350008_AssignSt> _102357_st = jule::Ptr<_204350008_AssignSt>();
	jule::Bool _102372_ok = jule::Bool();
	if ((!(_205856a6e_checkAssignTokens(_102337_tokens)))) {
		_102357_st = nullptr;
		_102372_ok = false;
		return std::make_tuple(_102357_st,_102372_ok);
	};
	{
		auto &_match_expr{ _102337_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1dba59708:;
			{
				std::tie(_102357_st,_102372_ok) = _2058486ed_buildDeclAssign(&(*_self_), _102337_tokens);
			}
		}
		else {
			_case_begin_1dba592c9:;
			{
				std::tie(_102357_st,_102372_ok) = _2058483e0_buildPlainAssign(&(*_self_), _102337_tokens);
			}
		}
		_match_end_1dba59274:;
	};
	return std::make_tuple(_102357_st,_102372_ok);
}



inline jule::Ptr<_20434642d_UseExpr> _205848d19_buildUseExpr(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _103836_tokens) {
	if ((_103836_tokens.len() == 1LL)) {
		_20583ea9b_pushErr(&(*_self_), _103836_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_20434642d_UseExpr> _104317_ue = jule::new_ptr<_20434642d_UseExpr>(_20434642d_UseExpr{._field_Token=_103836_tokens[0LL], });;
	_103836_tokens=_103836_tokens.slice(1LL);
	_104317_ue.get()._field_Expr=_20585b090_buildExpr((*_self_)._field_p, _103836_tokens);
	return _104317_ue;
}



inline jule::Any _205849127_buildSt(_20583d8ad_scopeParser* _self_, jule::Ptr<_20583d083_stmt>& _105131_st) {
	jule::Ptr<_202b89679_Token> _105217_token = _105131_st.get()._field_tokens[0LL];;
	if ((_105217_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		jule::Any _105422_s;;
		jule::Bool _105425_ok;;
		std::tie(_105422_s,_105425_ok) = _2058476a8_buildIdSt(&(*_self_), _105131_st.get()._field_tokens);
		if (_105425_ok) {
			return _105422_s;
		};
	};
	jule::Ptr<_204350008_AssignSt> _106018_s;;
	jule::Bool _106021_ok;;
	std::tie(_106018_s,_106021_ok) = _205848a0b_buildAssignSt(&(*_self_), _105131_st.get()._field_tokens);
	if (_106021_ok) {
		return static_cast<jule::Any>(_106018_s);
	};
	{
		auto &_match_expr{ _105217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1dba5ed6d:;
			{
				return static_cast<jule::Any>(_205848d19_buildUseExpr(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1dba5eac6:;
			{
				return static_cast<jule::Any>(_205840a69_buildVarSt(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1dba6016a:;
			{
				return static_cast<jule::Any>(_205840d77_buildRetSt(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1dba601d1:;
			{
				return static_cast<jule::Any>(_2058437b4_buildIterSt(&(*_self_), _105131_st));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1dba60247:;
			{
				return static_cast<jule::Any>(_205843ac2_buildBreakSt(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1dba602ad:;
			{
				return static_cast<jule::Any>(_205843dd0_buildContSt(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1dba60324:;
			{
				return static_cast<jule::Any>(_205844809_buildIfElseChain(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1dba6038a:;
			{
				return static_cast<jule::Any>(_205844b17_buildCoCallSt(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1dba60401:;
			{
				return static_cast<jule::Any>(_205844e25_buildGotoSt(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1dba60467:;
			{
				return static_cast<jule::Any>(_205845233_buildFallSt(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1dba604cd:;
			{
				return static_cast<jule::Any>(_205845541_buildTypeAliasSt(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1dba60555:;
			{
				return static_cast<jule::Any>(_205846c7e_buildMatchCase(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1dba605cc:;
			{
				return static_cast<jule::Any>(_20584708c_buildScopeSt(&(*_self_), _105131_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1dba60654:;
			{
				if ((_105217_token.get()._field_Kind == jule::Str("{", 1))) {
					return static_cast<jule::Any>(_20584708c_buildScopeSt(&(*_self_), _105131_st.get()._field_tokens));
				};
			}
		}
		_match_end_1dba5ebe7:;
	};
	jule::Ptr<_204345a8c_Expr> _110117_expr = _20585b090_buildExpr((*_self_)._field_p, _105131_st.get()._field_tokens);;
	if ((_110117_expr != nullptr)) {
		return static_cast<jule::Any>(_110117_expr);
	};
	_20583ea9b_pushErr(&(*_self_), _105217_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _205849446_build(_20583d8ad_scopeParser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _110929_tokens, jule::Ptr<_204351504_ScopeTree>& _110952_s) {
	if ((_110952_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_20583d429_splitStmts(_110929_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_110952_s;
	while (((!(_20583e77c_isLastSt(&(*_self_)))) && (!(_20583e518_finished(&(*_self_)))))) {
		{
			jule::Ptr<_20583d083_stmt> _111721_st = _2058403a4_next(&(*_self_));;
			jule::Any _111821_data = _205849127_buildSt(&(*_self_), _111721_st);;
			if ((_111821_data != nullptr)) {
				(*_self_)._field_s.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_Stmts,1);(*_self_)._field_s.get()._field_Stmts.__push(_204350de9_Stmt{._field_Token=_111721_st.get()._field_tokens[0LL], ._field_Data=_111821_data});;
			};
			if (_20583e2a4_stopped(&(*_self_))) {
				goto _iter_end_1dba69592;
			};
		}
	_iter_next_1dba69592:;
	}
	_iter_end_1dba69592:;;
}







std::ostream &operator<<(std::ostream &_Stream, _20583d8ad_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _20584a667_pushErr(_205849d70_exprBuilder* _self_, jule::Ptr<_202b89679_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_20585a963_pushErr((*_self_)._field_p.ptr(), _4426_token,_4441_fmt,jule::Any(_4454_args));
}



inline void _20584a986_pushSuggestion(_205849d70_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_20585ac82_pushSuggestion((*_self_)._field_p.ptr(), _4933_fmt,jule::Any(_4946_args));
}



inline jule::Ptr<_204346719_TupleExpr> _20584ac94_buildTuple(_205849d70_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>>& _5334_parts) {
	jule::Ptr<_204346719_TupleExpr> _5417_tuple = jule::new_ptr<_204346719_TupleExpr>(_204346719_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_204345a8c_Expr>>::alloc(0LL,_5334_parts.len())});;
	{
		auto &expr = _5334_parts;
		auto it = expr.begin();
		_iter_begin_1dba8bb9c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_202b89679_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_2058547b4_buildFromTokens(&(*_self_), _5721_part));;
			}
			_iter_next_1dba8bb9c:;
			++it;
			goto _iter_begin_1dba8bb9c;
		}
		_iter_end_1dba8bb9c:;
	};
	return _5417_tuple;
}



inline jule::Ptr<_204346ac1_LitExpr> _20584b0a2_buildLit(_205849d70_exprBuilder* _self_, jule::Ptr<_202b89679_Token> _6327_token) {
	return jule::new_ptr<_204346ac1_LitExpr>(_204346ac1_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});
}



inline jule::Ptr<_20434156b_TypeDecl> _20584b3b0_buildPrimitiveType(_205849d70_exprBuilder* _self_, jule::Ptr<_202b89679_Token>& _7038_token) {
	return _20586a786_buildPrimType(_7038_token);
}



inline jule::Any _20584b6bd_buildSingle(_205849d70_exprBuilder* _self_, jule::Ptr<_202b89679_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1dba8da17:;
			{
				return static_cast<jule::Any>(_20584b0a2_buildLit(&(*_self_), _7434_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1dba8da7d:;
			{
				if ((_7434_token.get()._field_Kind == jule::Str("...", 3))) {
					return static_cast<jule::Any>(jule::new_ptr<_20434830e_VariadicExpr>(_20434830e_VariadicExpr{._field_Token=_7434_token, }));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(27LLU) || _match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1dba8dae4:;
			{
				return static_cast<jule::Any>(_205855a6d_buildIdentExpr(_7434_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1dba8db5a:;
			{
				return static_cast<jule::Any>(_20584b3b0_buildPrimitiveType(&(*_self_), _7434_token));
			}
		}
		_match_end_1dba8c96c:;
	};
	_20584a667_pushErr(&(*_self_), _7434_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_20434774d_IdentExpr> _20584b9cb_buildCppLinkedIdent(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _9543_tokens) {
	if ((_9543_tokens[0LL].get()._field_Id != static_cast<jule::U64>(30LLU))) {
		return nullptr;
	} else if ((_9543_tokens[1LL].get()._field_Id != static_cast<jule::U64>(20LLU))) {
		_20584a667_pushErr(&(*_self_), _9543_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_20584a986_pushSuggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_202b89679_Token> _10317_token = _9543_tokens[2LL];;
	if ((_10317_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_20584a667_pushErr(&(*_self_), _9543_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_20584a986_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20434774d_IdentExpr> _10917_expr = _205855a6d_buildIdentExpr(_10317_token);;
	_10917_expr.get()._field_CppLinked=true;
	return _10917_expr;
}



inline jule::Ptr<_204347e57_UnaryExpr> _20584bcd9_buildUnary(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _11433_tokens) {
	jule::Ptr<_202b89679_Token> _11517_op = _11433_tokens[0LL];;
	if ((_11433_tokens.len() == 1LL)) {
		_20584a667_pushErr(&(*_self_), _11517_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_202b89d83_IsUnaryOp(_11517_op.get()._field_Kind)))) {
		_20584a667_pushErr(&(*_self_), _11517_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_11517_op.get()._field_Kind)}));
		return nullptr;
	};
	_11433_tokens=_11433_tokens.slice(1LL);
	return jule::new_ptr<_204347e57_UnaryExpr>(_204347e57_UnaryExpr{._field_Op=_11517_op, ._field_Expr=_2058547b4_buildFromTokens(&(*_self_), _11433_tokens)});
}



inline jule::Ptr<_204348ee1_SubIdentExpr> _20584c0e7_buildObjSubIdent(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _13539_tokens) {
	jule::I64 _13617_i = (_13539_tokens.len() - 1LL);;
	jule::Ptr<_202b89679_Token> _13717_identToken = _13539_tokens[_13617_i];;
	(_13617_i)--;
	_13539_tokens=_13539_tokens.slice(0LL,_13617_i);
	if ((_13539_tokens.len() == 0LL)) {
		_20584a667_pushErr(&(*_self_), _13717_identToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_204348ee1_SubIdentExpr>(_204348ee1_SubIdentExpr{._field_Expr=_2058547b4_buildFromTokens(&(*_self_), _13539_tokens), ._field_Ident=_13717_identToken});
}



inline jule::Ptr<_204348a6d_NsSelectionExpr> _20584c405_buildNsSubIdent(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _15039_tokens) {
	jule::Ptr<_204348a6d_NsSelectionExpr> _15117_ns = jule::new_ptr<_204348a6d_NsSelectionExpr>();;
	{
		auto &expr = _15039_tokens;
		auto it = expr.begin();
		_iter_begin_1dba9ada9:;
		if (it != expr.end()) {
			jule::I64 _15214_i = it - expr.begin();
			jule::Ptr<_202b89679_Token> _15221_token = *it;
			{
				if (((_15214_i & 1LL) == 0LL)) {
					if ((_15221_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
						_20584a667_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_20584a986_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_15117_ns.get()._field_Ns = jule::alloc_for_append(_15117_ns.get()._field_Ns,1);_15117_ns.get()._field_Ns.__push(_15221_token);;
				} else if ((_15221_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_20584a667_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_20584a986_pushSuggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1dba9ada9:;
			++it;
			_15214_i++;
			goto _iter_begin_1dba9ada9;
		}
		_iter_end_1dba9ada9:;
	};
	_15117_ns.get()._field_Ident=_15117_ns.get()._field_Ns[(_15117_ns.get()._field_Ns.len() - 1LL)];
	_15117_ns.get()._field_Ns=_15117_ns.get()._field_Ns.slice(0LL,(_15117_ns.get()._field_Ns.len() - 1LL));
	return _15117_ns;
}



inline jule::Ptr<_20434156b_TypeDecl> _20584c713_buildType(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _16933_tokens) {
	jule::I64 _17017_i = 0LL;;
	jule::Ptr<_20434156b_TypeDecl> _17118_t;;
	jule::Bool _17121_ok;;
	std::tie(_17118_t,_17121_ok) = _20585c37c_buildType((*_self_)._field_p, _16933_tokens,(&(_17017_i)),false);
	if ((!(_17121_ok))) {
		_20584a667_pushErr(&(*_self_), _16933_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_17017_i < _16933_tokens.len())) {
		_20584a667_pushErr(&(*_self_), _16933_tokens[_17017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _17118_t;
}



inline jule::Any _20584ca21_buildSubIdent(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _18337_tokens) {
	jule::I64 _18413_i = (_18337_tokens.len() - 2LL);;
	jule::Ptr<_202b89679_Token> _18513_token = _18337_tokens[_18413_i];;
	{
		auto &_match_expr{ _18513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1dbaa3a82:;
			{
				return static_cast<jule::Any>(_20584c0e7_buildObjSubIdent(&(*_self_), _18337_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1dbaa4104:;
			{
				return static_cast<jule::Any>(_20584c405_buildNsSubIdent(&(*_self_), _18337_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1dbaa416a:;
			{
				if ((_18513_token.get()._field_Kind == jule::Str("]", 1))) {
					return static_cast<jule::Any>(_20584c713_buildType(&(*_self_), _18337_tokens));
				};
			}
		}
		_match_end_1dbaa3e6c:;
	};
	_20584a667_pushErr(&(*_self_), _18513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_20434830e_VariadicExpr> _20584cd2e_buildVariadic(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _20136_tokens) {
	jule::Ptr<_202b89679_Token> _20217_token = _20136_tokens[(_20136_tokens.len() - 1LL)];;
	_20136_tokens=_20136_tokens.slice(0LL,(_20136_tokens.len() - 1LL));
	return jule::new_ptr<_20434830e_VariadicExpr>(_20434830e_VariadicExpr{._field_Token=_20217_token, ._field_Expr=_2058547b4_buildFromTokens(&(*_self_), _20136_tokens)});
}



inline jule::Any _20584d13c_buildOpRight(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _21036_tokens) {
	jule::Ptr<_202b89679_Token> _21117_token = _21036_tokens[(_21036_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _21117_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1dbaa86ad:;
			{
				_21036_tokens=_21036_tokens.slice(0LL,(_21036_tokens.len() - 1LL));
				jule::Any _21521_d = _205854198_build(&(*_self_), _21036_tokens);;
				if ((_21521_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _21521_d };
					
					if (_match_expr.type_is<jule::Ptr<_204349a6e_FnCallExpr>>()) {
						_case_begin_1dbaa9e84:;
						{
							_21521_d.operator jule::Ptr<_204349a6e_FnCallExpr>().get()._field_Exception=jule::new_ptr<_204351504_ScopeTree>(_204351504_ScopeTree{._field_Deferred=true, });
							return _21521_d;
						}
					}
					_match_end_1dbaa9deb:;
				};
			}
		}
		_match_end_1dbaa8647:;
	};
	_20584a667_pushErr(&(*_self_), _21117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_204345d78_RangeExpr> _20584d46c_buildBetweenParentheses(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _23146_tokens) {
	if ((_23146_tokens.len() == 2LL)) {
		_20584a667_pushErr(&(*_self_), _23146_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_20584a986_pushSuggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_23146_tokens=_23146_tokens.slice(1LL,(_23146_tokens.len() - 1LL));
	return jule::new_ptr<_204345d78_RangeExpr>(_204345d78_RangeExpr{._field_Expr=_2058547b4_buildFromTokens(&(*_self_), _23146_tokens)});
}



inline jule::Ptr<_2043486b6_CastExpr> _20584d78b_tryBuildCast(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _24336_tokens) {
	jule::I64 _24417_rangeN = 0LL;;
	{
		auto &expr = _24336_tokens;
		auto it = expr.begin();
		_iter_begin_1dbaad73a:;
		if (it != expr.end()) {
			jule::I64 _24513_i = it - expr.begin();
			jule::Ptr<_202b89679_Token> _24516_token = *it;
			{
				if ((_24516_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _24516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1dbaae65e:;
							{
								(_24417_rangeN)++;
								goto _iter_next_1dbaad73a;
							}
						}
						else {
							_case_begin_1dbaae94a:;
							{
								(_24417_rangeN)--;
							}
						}
						_match_end_1dbaae72a:;
					};
				};
				if ((_24417_rangeN > 0LL)) {
					goto _iter_next_1dbaad73a;
				} else if (((_24513_i + 1LL) == _24336_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_202b89679_Token>> _26421_typeTokens = _24336_tokens.slice(0LL,(_24513_i + 1LL));;
				jule::Slice<jule::Ptr<_202b89679_Token>> _26521_exprTokens = _24336_tokens.slice((_24513_i + 1LL));;
				if ((_26521_exprTokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_202b89679_Token> _27217_tok = _26521_exprTokens[0LL];;
				if (((_27217_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_27217_tok.get()._field_Kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_2043486b6_CastExpr> _27721_cast = jule::new_ptr<_2043486b6_CastExpr>(_2043486b6_CastExpr{});;
				if ((_26521_exprTokens.len() == 2LL)) {
					_20584a667_pushErr(&(*_self_), _26521_exprTokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_20584a986_pushSuggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_26421_typeTokens.len() == 2LL)) {
					_20584a667_pushErr(&(*_self_), _26421_typeTokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_20584a986_pushSuggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_26421_typeTokens=_26421_typeTokens.slice(1LL,(_26421_typeTokens.len() - 1LL));
					jule::I64 _29125_typeIndex = 0LL;;
					jule::Ptr<_20434156b_TypeDecl> _29226_t;;
					jule::Bool _29229_ok;;
					std::tie(_29226_t,_29229_ok) = _20585c37c_buildType((*_self_)._field_p, _26421_typeTokens,(&(_29125_typeIndex)),true);
					if ((_29229_ok && (_29125_typeIndex < _26421_typeTokens.len()))) {
						_20584a667_pushErr(&(*_self_), _26421_typeTokens[_29125_typeIndex],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_29229_ok))) {
						return _27721_cast;
					};
					_27721_cast.get()._field_Kind=_29226_t;
					if ((_26521_exprTokens.len() > 2LL)) {
						jule::I64 _30229_j = 0LL;;
						_205858268_range(_30229_j,jule::Str("(", 1),jule::Str(")", 1),_26521_exprTokens);
						if ((_30229_j < _26521_exprTokens.len())) {
							return nullptr;
						};
						_26521_exprTokens=_26521_exprTokens.slice(0LL,_30229_j);
						_27721_cast.get()._field_Expr=_2058547b4_buildFromTokens(&(*_self_), _26521_exprTokens);
					};
				};
				return _27721_cast;
			}
			_iter_next_1dbaad73a:;
			++it;
			_24513_i++;
			goto _iter_begin_1dbaad73a;
		}
		_iter_end_1dbaad73a:;
	};
	return nullptr;
}



inline void _20584db54_pushArg(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_204345a8c_Expr>>& _31731_args, jule::Slice<jule::Ptr<_202b89679_Token>> _31750_tokens, jule::Ptr<_202b89679_Token> _31768_err_token) {
	if ((_31750_tokens.len() == 0LL)) {
		_20584a667_pushErr(&(*_self_), _31768_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_20584a986_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_31731_args = jule::alloc_for_append(_31731_args,1);_31731_args.__push(_2058547b4_buildFromTokens(&(*_self_), _31750_tokens));;
}



inline jule::Slice<jule::Ptr<_204345a8c_Expr>> _20584de62_buildArgs(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _32632_tokens) {
	if ((_32632_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_204345a8c_Expr>> _33217_args = nullptr;;
	jule::I64 _33317_last = 0LL;;
	jule::I64 _33417_rangeN = 0LL;;
	_32632_tokens=_32632_tokens.slice(1LL,(_32632_tokens.len() - 1LL));
	{
		auto &expr = _32632_tokens;
		auto it = expr.begin();
		_iter_begin_1dbabd55d:;
		if (it != expr.end()) {
			jule::I64 _33613_i = it - expr.begin();
			jule::Ptr<_202b89679_Token> _33616_token = *it;
			{
				if ((_33616_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _33616_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1dbabe905:;
							{
								(_33417_rangeN)++;
							}
						}
						else {
							_case_begin_1dbabebe1:;
							{
								(_33417_rangeN)--;
							}
						}
						_match_end_1dbabe9c1:;
					};
				};
				if (((_33417_rangeN > 0LL) || (_33616_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1dbabd55d;
				};
				_20584db54_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last,_33613_i),_33616_token);
				_33317_last=static_cast<jule::I64>((_33613_i + 1LL));
			}
			_iter_next_1dbabd55d:;
			++it;
			_33613_i++;
			goto _iter_begin_1dbabd55d;
		}
		_iter_end_1dbabd55d:;
	};
	if ((_33317_last < _32632_tokens.len())) {
		if ((_33317_last == 0LL)) {
			if ((_32632_tokens.len() > 0LL)) {
				_20584db54_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[_33317_last]);
			};
		} else {
			_20584db54_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[(_33317_last - 1LL)]);
		};
	};
	return _33217_args;
}



inline jule::Slice<jule::Ptr<_20434156b_TypeDecl>> _20584e270_buildCallGenerics(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _36840_tokens) {
	if ((_36840_tokens.len() == 0LL)) {
		return nullptr;
	};
	_36840_tokens=_36840_tokens.slice(1LL,(_36840_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _37418_parts;;
	jule::Slice<_20285b7ad_Log> _37425_errs;;
	std::tie(_37418_parts,_37425_errs) = _205858cd5_parts(_36840_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_20434156b_TypeDecl>> _37517_generics = jule::Slice<jule::Ptr<_20434156b_TypeDecl>>::alloc(0LL,_37418_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_37425_errs);
	{
		auto &expr = _37418_parts;
		auto it = expr.begin();
		_iter_begin_1dbac2c9e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_202b89679_Token>> _37721_part = *it;
			{
				if ((_37721_part.len() == 0LL)) {
					goto _iter_next_1dbac2c9e;
				};
				jule::I64 _38121_j = 0LL;;
				jule::Ptr<_20434156b_TypeDecl> _38222_generic;;
				std::tie(_38222_generic,std::ignore) = _20585c37c_buildType((*_self_)._field_p, _37721_part,(&(_38121_j)),true);
				if ((_38121_j < _37721_part.len())) {
					_20584a667_pushErr(&(*_self_), _37721_part[_38121_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_37517_generics = jule::alloc_for_append(_37517_generics,1);_37517_generics.__push(_38222_generic);;
			}
			_iter_next_1dbac2c9e:;
			++it;
			goto _iter_begin_1dbac2c9e;
		}
		_iter_end_1dbac2c9e:;
	};
	return _37517_generics;
}



inline jule::Ptr<_204349a6e_FnCallExpr> _20584e6c1_buildFnCall(_205849d70_exprBuilder* _self_, jule::Ptr<_202b89679_Token>& _39235_token, jule::Slice<jule::Ptr<_202b89679_Token>>& _39255_expr, jule::Slice<jule::Ptr<_202b89679_Token>>& _39276_args) {
	return jule::new_ptr<_204349a6e_FnCallExpr>(_204349a6e_FnCallExpr{._field_Token=_39235_token, ._field_Expr=_2058547b4_buildFromTokens(&(*_self_), _39255_expr), ._field_Args=_20584de62_buildArgs(&(*_self_), _39276_args), });
}



inline jule::Any _20584e9ce_buildParenthesesRange(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _40045_tokens) {
	jule::Ptr<_202b89679_Token> _40117_token = _40045_tokens[0LL];;
	{
		auto &_match_expr{ _40117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1dbac9c1d:;
			{
				{
					auto &_match_expr{ _40117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1dbaca5d1:;
						{
							jule::Ptr<_2043486b6_CastExpr> _40625_expr = _20584d78b_tryBuildCast(&(*_self_), _40045_tokens);;
							if ((_40625_expr != nullptr)) {
								return static_cast<jule::Any>(_40625_expr);
							};
						}
					}
					_match_end_1dbaca3e4:;
				};
			}
		}
		_match_end_1dbac9bb8:;
	};
	jule::Slice<jule::Ptr<_202b89679_Token>> _41218_exprTokens;;
	jule::Slice<jule::Ptr<_202b89679_Token>> _41234_args_tokens;;
	std::tie(_41218_exprTokens,_41234_args_tokens) = _205858510_rangeLast(_40045_tokens);
	if ((_41218_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_20584d46c_buildBetweenParentheses(&(*_self_), _41234_args_tokens));
	};
	return static_cast<jule::Any>(_20584e6c1_buildFnCall(&(*_self_), _40117_token,_41218_exprTokens,_41234_args_tokens));
}



inline jule::Ptr<_2043472ca_UnsafeExpr> _20584ecdc_buildUnsafeExpr(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _42138_tokens) {
	jule::Ptr<_202b89679_Token> _42217_token = _42138_tokens[0LL];;
	_42138_tokens=_42138_tokens.slice(1LL);
	jule::I64 _42417_i = 0LL;;
	jule::Slice<jule::Ptr<_202b89679_Token>> _42517_rangeTokens = _205858268_range(_42417_i,jule::Str("{", 1),jule::Str("}", 1),_42138_tokens);;
	if ((_42517_rangeTokens.len() == 0LL)) {
		_20584a667_pushErr(&(*_self_), _42138_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_2043472ca_UnsafeExpr>(_2043472ca_UnsafeExpr{._field_Token=_42217_token, ._field_Expr=_2058547b4_buildFromTokens(&(*_self_), _42517_rangeTokens)});
}



inline jule::Ptr<_204352eea_FnDecl> _2058500ea_buildAnonFn(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _43635_tokens) {
	jule::Ptr<_204352eea_FnDecl> _43717_f = _2058614c4_buildFn((*_self_)._field_p, _43635_tokens,false,false);;
	if ((!(_20435334c_IsAnon(_43717_f.ptr())))) {
		_20584a667_pushErr(&(*_self_), _43717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_20584a986_pushSuggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _43717_f;
}



inline jule::Any _205850408_buildUnsafe(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _44535_tokens) {
	{
		auto &_match_expr{ _44535_tokens[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1db410158:;
			{
				return static_cast<jule::Any>(_2058500ea_buildAnonFn(&(*_self_), _44535_tokens));
			}
		}
		else {
			_case_begin_1db4106a8:;
			{
				return static_cast<jule::Any>(_20584ecdc_buildUnsafeExpr(&(*_self_), _44535_tokens));
			}
		}
		_match_end_1db4105cb:;
	};
}



inline void _2058507c1_pushRangeLitPart(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _45539_part, jule::Ptr<_202b89679_Token> _4569_errorToken, jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>>& _45634_parts) {
	if ((_45539_part.len() == 0LL)) {
		_20584a667_pushErr(&(*_self_), _4569_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_20584a986_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_45634_parts = jule::alloc_for_append(_45634_parts,1);_45634_parts.__push(_45539_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _205850b01_getBraceRangeLitExprParts(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _46648_tokens) {
	if ((_46648_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _47217_parts = nullptr;;
	jule::I64 _47417_last = 0LL;;
	jule::I64 _47517_rangeN = 0LL;;
	_46648_tokens=_46648_tokens.slice(1LL,(_46648_tokens.len() - 1LL));
	{
		auto &expr = _46648_tokens;
		auto it = expr.begin();
		_iter_begin_1db414b41:;
		if (it != expr.end()) {
			jule::I64 _47713_i = it - expr.begin();
			jule::Ptr<_202b89679_Token> _47716_token = *it;
			{
				if ((_47716_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _47716_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1db415ed8:;
							{
								(_47517_rangeN)++;
							}
						}
						else {
							_case_begin_1db4162c4:;
							{
								(_47517_rangeN)--;
							}
						}
						_match_end_1db4160a4:;
					};
				};
				if (((_47517_rangeN > 0LL) || (_47716_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1db414b41;
				};
				_2058507c1_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last,_47713_i),_47716_token,_47217_parts);
				_47417_last=static_cast<jule::I64>((_47713_i + 1LL));
			}
			_iter_next_1db414b41:;
			++it;
			_47713_i++;
			goto _iter_begin_1db414b41;
		}
		_iter_end_1db414b41:;
	};
	if ((_47417_last < _46648_tokens.len())) {
		if ((_47417_last == 0LL)) {
			if ((_46648_tokens.len() > 0LL)) {
				_2058507c1_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[_47417_last],_47217_parts);
			};
		} else {
			_2058507c1_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[(_47417_last - 1LL)],_47217_parts);
		};
	};
	return _47217_parts;
}



inline jule::Ptr<_20434a4ed_FieldExprPair> _205850e20_buildFieldExprPair(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _50841_tokens) {
	if (((_50841_tokens.len() - 2LL) == 0LL)) {
		_20584a667_pushErr(&(*_self_), _50841_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20434a4ed_FieldExprPair> _51317_pair = jule::new_ptr<_20434a4ed_FieldExprPair>(_20434a4ed_FieldExprPair{._field_Field=_50841_tokens[0LL], });;
	_50841_tokens=_50841_tokens.slice(2LL);
	_51317_pair.get()._field_Expr=_2058547b4_buildFromTokens(&(*_self_), _50841_tokens);
	return _51317_pair;
}



inline jule::Ptr<_204345a8c_Expr> _20585122d_buildStructLitExpr(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _52142_tokens) {
	jule::Ptr<_202b89679_Token> _52217_token = _52142_tokens[0LL];;
	if (((_52217_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && (_52142_tokens.len() > 1LL))) {
		_52217_token=_52142_tokens[1LL];
		if ((_52217_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_204345a8c_Expr>(_204345a8c_Expr{._field_Token=_52217_token, ._field_End=_52142_tokens[(_52142_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_205850e20_buildFieldExprPair(&(*_self_), _52142_tokens))});
		};
	};
	return _2058547b4_buildFromTokens(&(*_self_), _52142_tokens);
}



inline jule::Slice<jule::Ptr<_204345a8c_Expr>> _20585153b_buildStructLitExprs(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _53643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _53717_parts = _205850b01_getBraceRangeLitExprParts(&(*_self_), _53643_tokens);;
	if ((_53717_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_204345a8c_Expr>> _54217_pairs = jule::Slice<jule::Ptr<_204345a8c_Expr>>::alloc(0LL,_53717_parts.len());;
	{
		auto &expr = _53717_parts;
		auto it = expr.begin();
		_iter_begin_1db42129b:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_202b89679_Token>> _54321_part = *it;
			{
				_54217_pairs = jule::alloc_for_append(_54217_pairs,1);_54217_pairs.__push(_20585122d_buildStructLitExpr(&(*_self_), _54321_part));;
			}
			_iter_next_1db42129b:;
			++it;
			goto _iter_begin_1db42129b;
		}
		_iter_end_1db42129b:;
	};
	return _54217_pairs;
}



inline jule::Ptr<_20434ac4b_StructLit> _20585186b_buildTypedStructLiteral(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _54946_tokens) {
	jule::I64 _55017_i = 0LL;;
	jule::Ptr<_20434156b_TypeDecl> _55118_t;;
	jule::Bool _55121_ok;;
	std::tie(_55118_t,_55121_ok) = _20585c37c_buildType((*_self_)._field_p, _54946_tokens,(&(_55017_i)),true);
	if ((!(_55121_ok))) {
		return nullptr;
	} else if ((_55017_i >= _54946_tokens.len())) {
		_20584a667_pushErr(&(*_self_), _54946_tokens[_55017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_54946_tokens=_54946_tokens.slice(_55017_i);
	jule::Ptr<_202b89679_Token> _56013_token = _54946_tokens[0LL];;
	if (((_56013_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_56013_token.get()._field_Kind != jule::Str("{", 1)))) {
		_20584a667_pushErr(&(*_self_), _56013_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_20434ac4b_StructLit>(_20434ac4b_StructLit{._field_End=_54946_tokens[(_54946_tokens.len() - 1LL)], ._field_Kind=_55118_t, ._field_Exprs=_20585153b_buildStructLitExprs(&(*_self_), _54946_tokens)});
}



inline jule::Ptr<_204345a8c_Expr> _205851b8a_buildBraceLitPart(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _57341_tokens) {
	jule::Slice<jule::Ptr<_202b89679_Token>> _57418_l;;
	jule::Slice<jule::Ptr<_202b89679_Token>> _57425_r;;
	std::tie(_57418_l,_57425_r) = _20585552e_splitDelim(_57341_tokens,static_cast<jule::U64>(11LLU));
	if ((_57418_l != nullptr)) {
		return jule::new_ptr<_204345a8c_Expr>(_204345a8c_Expr{._field_Token=_57341_tokens[0LL], ._field_End=_57341_tokens[(_57341_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_20434b994_KeyValPair>(_20434b994_KeyValPair{._field_Key=_2058547b4_buildFromTokens(&(*_self_), _57418_l), ._field_Val=_2058547b4_buildFromTokens(&(*_self_), _57425_r), ._field_Colon=_57341_tokens[_57418_l.len()]}))});
	};
	return _2058547b4_buildFromTokens(&(*_self_), _57341_tokens);
}



inline jule::Ptr<_20434b1be_BraceLit> _205851e98_buildBraceLit(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _59037_tokens) {
	jule::Ptr<_20434b1be_BraceLit> _59117_lit = jule::new_ptr<_20434b1be_BraceLit>(_20434b1be_BraceLit{._field_Token=_59037_tokens[0LL], ._field_End=_59037_tokens[(_59037_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _59617_parts = _205850b01_getBraceRangeLitExprParts(&(*_self_), _59037_tokens);;
	if ((_59617_parts == nullptr)) {
		return _59117_lit;
	};
	_59117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_204345a8c_Expr>>::alloc(0LL,_59617_parts.len());
	{
		auto &expr = _59617_parts;
		auto it = expr.begin();
		_iter_begin_1db42ab02:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_202b89679_Token>> _60221_part = *it;
			{
				_59117_lit.get()._field_Exprs = jule::alloc_for_append(_59117_lit.get()._field_Exprs,1);_59117_lit.get()._field_Exprs.__push(_205851b8a_buildBraceLitPart(&(*_self_), _60221_part));;
			}
			_iter_next_1db42ab02:;
			++it;
			goto _iter_begin_1db42ab02;
		}
		_iter_end_1db42ab02:;
	};
	return _59117_lit;
}



inline jule::Any _2058522a6_buildBraceRange(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _60939_tokens) {
	jule::Slice<jule::Ptr<_202b89679_Token>> _61018_exprTokens;;
	jule::I64 _61030_rangeN;;
	std::tie(_61018_exprTokens,_61030_rangeN) = _205855d15_getRangeExprTokens(_60939_tokens);
	{
		
		if ((_61018_exprTokens.len() == 0LL)) {
			_case_begin_1db42c6c5:;
			{
				return static_cast<jule::Any>(_205851e98_buildBraceLit(&(*_self_), _60939_tokens));
			}
		}
		else if ((_61030_rangeN > 0LL)) {
			_case_begin_1db42c74c:;
			{
				_20584a667_pushErr(&(*_self_), _60939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1db42c61a:;
	};
	jule::Ptr<_202b89679_Token> _62113_elseToken = _61018_exprTokens[(_61018_exprTokens.len() - 1LL)];;
	if ((_61018_exprTokens[(_61018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(17LLU))) {
		_61018_exprTokens=_61018_exprTokens.slice(0LL,(_61018_exprTokens.len() - 1LL));
		jule::Any _62421_d = _205854198_build(&(*_self_), _61018_exprTokens);;
		if ((_62421_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _62421_d };
			
			if (_match_expr.type_is<jule::Ptr<_204349a6e_FnCallExpr>>()) {
				_case_begin_1db431014:;
				{
					_60939_tokens=_60939_tokens.slice((_61018_exprTokens.len() + 1LL));
					jule::I64 _63125_i = 0LL;;
					jule::Slice<jule::Ptr<_202b89679_Token>> _63225_rangeTokens = _205858268_range(_63125_i,jule::Str("{", 1),jule::Str("}", 1),_60939_tokens);;
					jule::Ptr<_204349a6e_FnCallExpr> _63325_model = _62421_d.operator jule::Ptr<_204349a6e_FnCallExpr>();;
					if (_20434a146_Ignored(_63325_model.ptr())) {
						_20584a667_pushErr(&(*_self_), _62113_elseToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_20584a986_pushSuggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_63325_model.get()._field_Exception=_20585b9ca_buildScope((*_self_)._field_p, _63225_rangeTokens,_60939_tokens[(_63125_i - 1LL)]);
					return _62421_d;
				}
			}
			else {
				_case_begin_1db430c17:;
				{
					_20584a667_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_1db430a91:;
		};
	};
	{
		auto &_match_expr{ _61018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1db435403:;
			{
				return _205850408_buildUnsafe(&(*_self_), _60939_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1db435469:;
			{
				return static_cast<jule::Any>(_2058500ea_buildAnonFn(&(*_self_), _60939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1db4354d0:;
			{
				return static_cast<jule::Any>(_20585186b_buildTypedStructLiteral(&(*_self_), _60939_tokens));
			}
		}
		else {
			_case_begin_1db433522:;
			{
				_20584a667_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1db43514a:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _2058525b4_getEnumerableParts(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _66141_tokens) {
	_66141_tokens=_66141_tokens.slice(1LL,(_66141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _66318_parts;;
	jule::Slice<_20285b7ad_Log> _66325_errors;;
	std::tie(_66318_parts,_66325_errors) = _205858cd5_parts(_66141_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_66325_errors);
	return _66318_parts;
}



inline jule::Ptr<_20434c17b_SliceExpr> _2058528c2_buildSlice(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _66833_tokens) {
	jule::Ptr<_20434c17b_SliceExpr> _66917_slc = jule::new_ptr<_20434c17b_SliceExpr>(_20434c17b_SliceExpr{._field_Token=_66833_tokens[0LL], ._field_End=_66833_tokens[(_66833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _67417_parts = _2058525b4_getEnumerableParts(&(*_self_), _66833_tokens);;
	if ((_67417_parts.len() == 0LL)) {
		return _66917_slc;
	};
	_66917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_204345a8c_Expr>>::alloc(0LL,_67417_parts.len());
	{
		auto &expr = _67417_parts;
		auto it = expr.begin();
		_iter_begin_1dbb2993d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_202b89679_Token>> _68021_p = *it;
			{
				if ((_68021_p.len() == 0LL)) {
					goto _iter_next_1dbb2993d;
				};
				_66917_slc.get()._field_Exprs = jule::alloc_for_append(_66917_slc.get()._field_Exprs,1);_66917_slc.get()._field_Exprs.__push(_2058547b4_buildFromTokens(&(*_self_), _68021_p));;
			}
			_iter_next_1dbb2993d:;
			++it;
			goto _iter_begin_1dbb2993d;
		}
		_iter_end_1dbb2993d:;
	};
	return _66917_slc;
}



inline jule::Ptr<_20434c9ea_IndexingExpr> _205852d23_buildIndexing(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _69036_exprTokens, jule::Slice<jule::Ptr<_202b89679_Token>> _69113_tokens, jule::Ptr<_202b89679_Token> _69135_errorToken) {
	jule::Ptr<_202b89679_Token> _69217_end = _69113_tokens[(_69113_tokens.len() - 1LL)];;
	_69113_tokens=_69113_tokens.slice(1LL,(_69113_tokens.len() - 1LL));
	if ((_69113_tokens.len() == 0LL)) {
		_20584a667_pushErr(&(*_self_), _69135_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_204345a8c_Expr> _69817_expr = _2058547b4_buildFromTokens(&(*_self_), _69036_exprTokens);;
	if ((_69817_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_204345a8c_Expr> _70217_index = _2058547b4_buildFromTokens(&(*_self_), _69113_tokens);;
	if ((_70217_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_20434c9ea_IndexingExpr>(_20434c9ea_IndexingExpr{._field_Token=_69135_errorToken, ._field_End=_69217_end, ._field_Expr=_69817_expr, ._field_Index=_70217_index});
}



inline jule::Ptr<_20434d105_SlicingExpr> _2058533b7_buildSlicing(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _71436_exprTokens, jule::Slice<jule::Ptr<_202b89679_Token>>& _71463_start, jule::Slice<jule::Ptr<_202b89679_Token>>& _71514_to, jule::Ptr<_202b89679_Token>& _71533_errorToken, jule::Ptr<_202b89679_Token> _71557_end) {
	jule::Ptr<_20434d105_SlicingExpr> _71617_slc = jule::new_ptr<_20434d105_SlicingExpr>(_20434d105_SlicingExpr{._field_Token=_71533_errorToken, ._field_End=_71557_end, ._field_Expr=_2058547b4_buildFromTokens(&(*_self_), _71436_exprTokens), });;
	if ((_71463_start.len() > 0LL)) {
		_71617_slc.get()._field_Start=_2058547b4_buildFromTokens(&(*_self_), _71463_start);
	};
	if ((_71514_to.len() > 0LL)) {
		_71617_slc.get()._field_To=_2058547b4_buildFromTokens(&(*_self_), _71514_to);
	};
	return _71617_slc;
}



inline jule::Any _2058536c5_buildBracketRange(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _73040_tokens) {
	jule::Ptr<_202b89679_Token> _73117_errorToken = _73040_tokens[0LL];;
	jule::Slice<jule::Ptr<_202b89679_Token>> _73218_exprTokens;;
	jule::I64 _73230_rangeN;;
	std::tie(_73218_exprTokens,_73230_rangeN) = _205855d15_getRangeExprTokens(_73040_tokens);
	if ((_73218_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_2058528c2_buildSlice(&(*_self_), _73040_tokens));
	} else if ((_73230_rangeN > 0LL)) {
		_20584a667_pushErr(&(*_self_), _73117_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_73040_tokens=_73040_tokens.slice(_73218_exprTokens.len());
	jule::Slice<jule::Ptr<_202b89679_Token>> _74717_splitTokens = _73040_tokens.slice(1LL,(_73040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_202b89679_Token>> _74818_start;;
	jule::Slice<jule::Ptr<_202b89679_Token>> _74829_to;;
	std::tie(_74818_start,_74829_to) = _20585552e_splitDelim(_74717_splitTokens,static_cast<jule::U64>(11LLU));
	if (((_74818_start != nullptr) || (_74829_to != nullptr))) {
		return static_cast<jule::Any>(_2058533b7_buildSlicing(&(*_self_), _73218_exprTokens,_74818_start,_74829_to,_73117_errorToken,_73040_tokens[(_73040_tokens.len() - 1LL)]));
	};
	return static_cast<jule::Any>(_205852d23_buildIndexing(&(*_self_), _73218_exprTokens,_73040_tokens,_73117_errorToken));
}



inline jule::Any _2058539d3_buildData(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _75533_tokens) {
	{
		auto _match_expr{ _75533_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1dbb373a7:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1dbb3741d:;
			{
				return _20584b6bd_buildSingle(&(*_self_), _75533_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1dbb37484:;
			{
				if ((_75533_tokens[0LL].get()._field_Id == static_cast<jule::U64>(30LLU))) {
					return static_cast<jule::Any>(_20584b9cb_buildCppLinkedIdent(&(*_self_), _75533_tokens));
				};
			}
		}
		_match_end_1dbb37121:;
	};
	jule::Ptr<_202b89679_Token> _76717_token = _75533_tokens[(_75533_tokens.len() - 1LL)];;
	if (((_76717_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_76717_token.get()._field_Kind == jule::Str("...", 3)))) {
		return static_cast<jule::Any>(_20584cd2e_buildVariadic(&(*_self_), _75533_tokens));
	};
	_76717_token=_75533_tokens[0LL];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1dbb3aac5:;
			{
				if (((_75533_tokens.len() > 1LL) && (_76717_token.get()._field_Kind == jule::Str("*", 1)))) {
					_76717_token=_75533_tokens[1LL];
					if (((_76717_token.get()._field_Id == static_cast<jule::U64>(1LLU)) || (_76717_token.get()._field_Id == static_cast<jule::U64>(34LLU)))) {
						return static_cast<jule::Any>(_20584c713_buildType(&(*_self_), _75533_tokens));
					};
				};
				return static_cast<jule::Any>(_20584bcd9_buildUnary(&(*_self_), _75533_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1dbb3ab4c:;
			{
				if ((_75533_tokens.len() < 3LL)) {
					goto _match_end_1dbb3aa5e;
				};
				if ((_75533_tokens.len() > 3LL)) {
					jule::Ptr<_202b89679_Token> _78921_t = _75533_tokens[(_75533_tokens.len() - 1LL)];;
					if (((_78921_t.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_78921_t.get()._field_Kind == jule::Str(")", 1)))) {
						goto _match_end_1dbb3aa5e;
					};
				};
				jule::Ptr<_202b89679_Token> _79517_next = _75533_tokens[1LL];;
				if (((_79517_next.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_79517_next.get()._field_Kind != jule::Str("]", 1)))) {
					goto _match_end_1dbb3aa5e;
				};
				return static_cast<jule::Any>(_20584c713_buildType(&(*_self_), _75533_tokens));
			}
		}
		_match_end_1dbb3aa5e:;
	};
	_76717_token=_75533_tokens[(_75533_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1dbb39d7c:;
			{
				return _20584ca21_buildSubIdent(&(*_self_), _75533_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1dbb41c85:;
			{
				return static_cast<jule::Any>(_20584c713_buildType(&(*_self_), _75533_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1dbb41ceb:;
			{
				return _20584d13c_buildOpRight(&(*_self_), _75533_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1dbb41d62:;
			{
				{
					auto &_match_expr{ _76717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1dbb43825:;
						{
							return _20584e9ce_buildParenthesesRange(&(*_self_), _75533_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1dbb4389c:;
						{
							return _2058522a6_buildBraceRange(&(*_self_), _75533_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1dbb43924:;
						{
							return _2058536c5_buildBracketRange(&(*_self_), _75533_tokens);
						}
					}
					_match_end_1dbb43209:;
				};
			}
		}
		_match_end_1dbb3b19c:;
	};
	if ((_76717_token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		return static_cast<jule::Any>(_20584c713_buildType(&(*_self_), _75533_tokens));
	};
	_20584a667_pushErr(&(*_self_), _76717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Any _205853d8a_buildBinop(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _83134_tokens, jule::I64 _83152_i) {
	jule::Ptr<_202b89679_Token> _83217_op = _83134_tokens[_83152_i];;
	jule::Slice<jule::Ptr<_202b89679_Token>> _83317_leftTokens = _83134_tokens.slice(0LL,_83152_i);;
	if ((_205854b16_isTypeOp(_83217_op.get()._field_Kind) && _205854e02_isTypeRange(_83317_leftTokens))) {
		return static_cast<jule::Any>(_20584c713_buildType(&(*_self_), _83134_tokens));
	};
	jule::Slice<jule::Ptr<_202b89679_Token>> _83817_rightTokens = _83134_tokens.slice((_83152_i + 1LL));;
	if ((_83317_leftTokens.len() == 0LL)) {
		_20584a667_pushErr(&(*_self_), _83134_tokens[_83152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_20584a986_pushSuggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_83817_rightTokens.len() == 0LL)) {
		_20584a667_pushErr(&(*_self_), _83134_tokens[_83152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_20584a986_pushSuggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return static_cast<jule::Any>(jule::new_ptr<_204349464_BinopExpr>(_204349464_BinopExpr{._field_Left=_2058547b4_buildFromTokens(&(*_self_), _83317_leftTokens), ._field_Right=_2058547b4_buildFromTokens(&(*_self_), _83817_rightTokens), ._field_Op=_83217_op}));
}



inline jule::Any _205854198_build(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _85629_tokens) {
	jule::I64 _85713_i = _2058557c6_findLowestPrecOp(_85629_tokens);;
	if ((_85713_i == -1LL)) {
		return _2058539d3_buildData(&(*_self_), _85629_tokens);
	};
	return _205853d8a_buildBinop(&(*_self_), _85629_tokens,_85713_i);
}



inline jule::Any _2058544a6_buildKind(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _86433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _86518_parts;;
	jule::Slice<_20285b7ad_Log> _86525_errors;;
	std::tie(_86518_parts,_86525_errors) = _205858cd5_parts(_86433_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_86525_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_86525_errors);
		return nullptr;
	} else if ((_86518_parts.len() > 1LL)) {
		return static_cast<jule::Any>(_20584ac94_buildTuple(&(*_self_), _86518_parts));
	};
	return _205854198_build(&(*_self_), _86433_tokens);
}



inline jule::Ptr<_204345a8c_Expr> _2058547b4_buildFromTokens(_205849d70_exprBuilder* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _87538_tokens) {
	if ((_87538_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_204345a8c_Expr>(_204345a8c_Expr{._field_Token=_87538_tokens[0LL], ._field_End=_87538_tokens[(_87538_tokens.len() - 1LL)], ._field_Kind=_2058544a6_buildKind(&(*_self_), _87538_tokens)});
}







std::ostream &operator<<(std::ostream &_Stream, _205849d70_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2058566c8_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _20585a336_stop(_20585a006_parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _20585a59a_stopped(_20585a006_parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _20585a963_pushErr(_20585a006_parser* _self_, jule::Ptr<_202b89679_Token> _28126_token, jule::Str _28141_fmt, jule::Slice<jule::Any> _28154_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_205859467_compilerErr(_28126_token,_28141_fmt,jule::Any(_28154_args)));;
}



inline void _20585ac82_pushSuggestion(_20585a006_parser* _self_, jule::Str _28633_fmt, jule::Slice<jule::Any> _28646_args) {
	{
		_205859896_pushSuggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_28633_fmt,jule::Any(_28646_args));
	};
}



inline jule::Ptr<_204345a8c_Expr> _20585b090_buildExpr(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _29034_tokens) {
	jule::Ptr<_205849d70_exprBuilder> _29117_ep = jule::new_ptr<_205849d70_exprBuilder>(_205849d70_exprBuilder{._field_p=_self_});;
	jule::Ptr<_204345a8c_Expr> _29417_expr = _2058547b4_buildFromTokens(_29117_ep.ptr(), _29034_tokens);;
	return _29417_expr;
}



inline jule::Ptr<_20430829c_Directive> _20585b39d_buildDirective(_20585a006_parser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _29837_tokens) {
	if ((_29837_tokens.len() == 1LL)) {
		_20585a963_pushErr(&(*_self_), _29837_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_29837_tokens[1LL].get()._field_Column != (_29837_tokens[0LL].get()._field_Column + 1LL))) {
		_20585a963_pushErr(&(*_self_), _29837_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_20430829c_Directive>(_20430829c_Directive{._field_Tag=_29837_tokens[1LL], ._field_Args=_29837_tokens.slice(2LL)});
}



inline void _20585b623_pushDirective(_20585a006_parser* _self_, jule::Ptr<_20430829c_Directive> _31336_d) {
	if ((_31336_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1dbb7b84c:;
		if (it != expr.end()) {
			jule::Ptr<_20430829c_Directive> _31816_pd = *it;
			{
				if ((_31336_d.get()._field_Tag.get()._field_Kind == _31816_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1dbb7b84c:;
			++it;
			goto _iter_begin_1dbb7b84c;
		}
		_iter_end_1dbb7b84c:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_31336_d);;
}



inline jule::Ptr<_204351504_ScopeTree> _20585b9ca_buildScope(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _32635_tokens, jule::Ptr<_202b89679_Token> _32657_end) {
	jule::Ptr<_204351504_ScopeTree> _32717_s = _20583be61_newScope();;
	_32717_s.get()._field_End=_32657_end;
	_20583d8ad_scopeParser _32917_sp = _20583d8ad_scopeParser{._field_p=_self_, };;
	_205849446_build(&_32917_sp, _32635_tokens,_32717_s);
	return _32717_s;
}



inline std::tuple<jule::Ptr<_20434156b_TypeDecl>,jule::Bool> _20585be2b__buildType(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _33642_tokens, jule::I64* _33713_i, jule::Bool _33722_err) {
	_20586ac1a_typeBuilder _33817_tb = _20586ac1a_typeBuilder{._field_p=_self_, ._field_tokens=_33642_tokens, ._field_i=_33713_i, ._field_err=_33722_err};;
	jule::Ptr<_20434156b_TypeDecl> _34418_decl;;
	jule::Bool _34424_ok;;
	std::tie(_34418_decl,_34424_ok) = _20586deb5_build(&_33817_tb);
	return std::make_tuple(_34418_decl,_34424_ok);
}



inline std::tuple<jule::Ptr<_20434156b_TypeDecl>,jule::Bool> _20585c37c_buildType(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _34941_tokens, jule::I64* _35013_i, jule::Bool _35022_err) {
	jule::Ptr<_202b89679_Token> _35113_token = _34941_tokens[(*(_35013_i))];;
	jule::Ptr<_20434156b_TypeDecl> _35218_t;;
	jule::Bool _35221_ok;;
	std::tie(_35218_t,_35221_ok) = _20585be2b__buildType(_self_, _34941_tokens,_35013_i,_35022_err);
	if ((_35022_err && (!(_35221_ok)))) {
		_20585a963_pushErr(_self_.ptr(), _35113_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_35218_t,_35221_ok);
}



inline jule::Ptr<_20435783a_TypeAliasDecl> _20585c68a_buildTypeAliasDecl(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _35943_tokens) {
	jule::I64 _36017_i = 1LL;;
	if ((_36017_i >= _35943_tokens.len())) {
		_20585a963_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20435783a_TypeAliasDecl> _36517_tad = jule::new_ptr<_20435783a_TypeAliasDecl>(_20435783a_TypeAliasDecl{._field_Token=_35943_tokens[1LL], ._field_Ident=_35943_tokens[1LL].get()._field_Kind, });;
	jule::Ptr<_202b89679_Token> _36917_token = _35943_tokens[_36017_i];;
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_20585a963_pushErr(_self_.ptr(), _36917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_36017_i)++;
	if ((_36017_i >= _35943_tokens.len())) {
		_20585a963_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _36517_tad;
	};
	_36917_token=_35943_tokens[_36017_i];
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_20585a963_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _36517_tad;
	};
	(_36017_i)++;
	if ((_36017_i >= _35943_tokens.len())) {
		_20585a963_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _36517_tad;
	};
	jule::Ptr<_20434156b_TypeDecl> _39018_t;;
	jule::Bool _39021_ok;;
	std::tie(_39018_t,_39021_ok) = _20585c37c_buildType(_self_, _35943_tokens,(&(_36017_i)),true);
	_36517_tad.get()._field_Kind=_39018_t;
	if ((_39021_ok && (_36017_i < _35943_tokens.len()))) {
		_20585a963_pushErr(_self_.ptr(), _35943_tokens[_36017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_36517_tad.get()._field_Public=_205869ba3_isPub(_36517_tad.get()._field_Ident);
	return _36517_tad;
}



inline void _20585c9a9_buildVarTypeAndExpr(jule::Ptr<_20585a006_parser> _self_, jule::Ptr<_204353ec9_VarDecl>& _39944_v, jule::Slice<jule::Ptr<_202b89679_Token>>& _39962_tokens) {
	jule::I64 _40017_i = 0LL;;
	jule::Ptr<_202b89679_Token> _40117_tok = _39962_tokens[_40017_i];;
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_40017_i)++;
		if (((_40017_i >= _39962_tokens.len()) || ((_39962_tokens[_40017_i].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_39962_tokens[_40017_i].get()._field_Kind == jule::Str("=", 1))))) {
			_20585a963_pushErr(_self_.ptr(), _40117_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_20434156b_TypeDecl> _40922_t;;
		jule::Bool _40925_ok;;
		std::tie(_40922_t,_40925_ok) = _20585c37c_buildType(_self_, _39962_tokens,(&(_40017_i)),true);
		if (_40925_ok) {
			_39944_v.get()._field_Kind=_40922_t;
			if ((_40017_i >= _39962_tokens.len())) {
				return;;
			};
			_40117_tok=_39962_tokens[_40017_i];
		};
	};
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(7LLU))) {
		if ((_40117_tok.get()._field_Kind != jule::Str("=", 1))) {
			_20585a963_pushErr(_self_.ptr(), _40117_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_202b89679_Token>> _42421_exprTokens = _39962_tokens.slice((_40017_i + 1LL));;
		if ((_42421_exprTokens.len() == 0LL)) {
			_20585a963_pushErr(_self_.ptr(), _40117_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_39944_v.get()._field_Expr=_20585b090_buildExpr(_self_, _42421_exprTokens);
	} else {
		_20585a963_pushErr(_self_.ptr(), _40117_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _20585ccc8_buildVarCommon(jule::Ptr<_20585a006_parser> _self_, jule::Ptr<_204353ec9_VarDecl>& _43539_v, jule::Slice<jule::Ptr<_202b89679_Token>> _43556_tokens) {
	_43539_v.get()._field_Token=_43556_tokens[0LL];
	if ((_43539_v.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_20585a963_pushErr(_self_.ptr(), _43539_v.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_43539_v.get()._field_Ident=_43539_v.get()._field_Token.get()._field_Kind;
	_43539_v.get()._field_Public=_205869ba3_isPub(_43539_v.get()._field_Ident);
	_43539_v.get()._field_Kind=nullptr;
	if ((_43556_tokens.len() > 1LL)) {
		_43556_tokens=_43556_tokens.slice(1LL);
		_20585c9a9_buildVarTypeAndExpr(_self_, _43539_v,_43556_tokens);
	};
}



inline void _20585d191_buildVarBegin(_20585a006_parser* _self_, jule::Ptr<_204353ec9_VarDecl>& _45137_v, jule::I64& _45155_i, jule::Slice<jule::Ptr<_202b89679_Token>>& _45164_tokens) {
	jule::Ptr<_202b89679_Token> _45213_tok = _45164_tokens[_45155_i];;
	{
		auto &_match_expr{ _45213_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1dbb98858:;
			{
				_45137_v.get()._field_Statically=true;
				goto _case_begin_1dbb988be;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1dbb988be:;
			{
				(_45155_i)++;
				if ((_45155_i >= _45164_tokens.len())) {
					_20585a963_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_45164_tokens[_45155_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_45137_v.get()._field_Mutable=true;
					(_45155_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1dbb97ea6:;
			{
				(_45155_i)++;
				_45137_v.get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1dbb97deb:;
			{
				_20585a963_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1dbb97d85:;
	};
	if ((_45155_i >= _45164_tokens.len())) {
		_20585a963_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_204353ec9_VarDecl> _20585d49e_buildVar(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _48132_tokens) {
	jule::I64 _48217_i = 0LL;;
	jule::Ptr<_204353ec9_VarDecl> _48317_v = jule::new_ptr<_204353ec9_VarDecl>(_204353ec9_VarDecl{._field_Token=_48132_tokens[0LL], });;
	_20585d191_buildVarBegin(_self_.ptr(), _48317_v,_48217_i,_48132_tokens);
	if ((_48217_i >= _48132_tokens.len())) {
		return nullptr;
	};
	_48132_tokens=_48132_tokens.slice(_48217_i);
	if (((_48132_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_48132_tokens[0LL].get()._field_Kind == jule::Str("&", 1)))) {
		_48317_v.get()._field_Reference=true;
		if ((_48132_tokens.len() == 1LL)) {
			return nullptr;
		};
		_48132_tokens=_48132_tokens.slice(1LL);
	};
	_20585ccc8_buildVarCommon(_self_, _48317_v,_48132_tokens);
	return _48317_v;
}



inline jule::Ptr<_20434d864_GenericDecl> _20585d7ac_buildGeneric(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _50337_tokens) {
	jule::Ptr<_20434d864_GenericDecl> _50417_g = jule::new_ptr<_20434d864_GenericDecl>(_20434d864_GenericDecl{._field_Token=_50337_tokens[0LL], });;
	if ((_50417_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_20585a963_pushErr(_self_.ptr(), _50417_g.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_50417_g.get()._field_Ident=_50417_g.get()._field_Token.get()._field_Kind;
	if ((_50337_tokens.len() > 1LL)) {
		if ((_50337_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
			_20585a963_pushErr(_self_.ptr(), _50337_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		if ((_50337_tokens.len() == 2LL)) {
			_20585a963_pushErr(_self_.ptr(), _50337_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		jule::Slice<jule::Ptr<_202b89679_Token>> _52121_constraintTokens = _50337_tokens.slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _52222_parts;;
		jule::Slice<_20285b7ad_Log> _52229_errors;;
		std::tie(_52222_parts,_52229_errors) = _2058588ea_partsKind(_52121_constraintTokens,jule::Str("|", 1),true);
		if ((_52229_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52229_errors);
			return nullptr;
		};
		_50417_g.get()._field_Constraint=jule::new_ptr<_20434d3e1_Constraint>(_20434d3e1_Constraint{._field_Mask=jule::Slice<jule::Ptr<_20434156b_TypeDecl>>::alloc(0LL,_52222_parts.len())});
		{
			auto &expr = _52222_parts;
			auto it = expr.begin();
			_iter_begin_1dbba613a:;
			if (it != expr.end()) {
				jule::Slice<jule::Ptr<_202b89679_Token>> _52825_part = *it;
				{
					jule::I64 _52925_i = 0LL;;
					jule::Ptr<_20434156b_TypeDecl> _53026_kind;;
					std::tie(_53026_kind,std::ignore) = _20585c37c_buildType(_self_, _52825_part,(&(_52925_i)),true);
					_50417_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_50417_g.get()._field_Constraint.get()._field_Mask,1);_50417_g.get()._field_Constraint.get()._field_Mask.__push(_53026_kind);;
					if ((_52925_i < _52825_part.len())) {
						_20585a963_pushErr(_self_.ptr(), _52825_part[_52925_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				}
				_iter_next_1dbba613a:;
				++it;
				goto _iter_begin_1dbba613a;
			}
			_iter_end_1dbba613a:;
		};
	};
	return _50417_g;
}



inline jule::Slice<jule::Ptr<_20434d864_GenericDecl>> _20585db64_buildGenerics(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _54038_tokens, jule::Ptr<_202b89679_Token>& _54057_errorToken) {
	if ((_54038_tokens.len() == 0LL)) {
		_20585a963_pushErr(_self_.ptr(), _54057_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _54618_parts;;
	jule::Slice<_20285b7ad_Log> _54625_errors;;
	std::tie(_54618_parts,_54625_errors) = _205858cd5_parts(_54038_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_54625_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_54625_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_20434d864_GenericDecl>> _55217_generics = jule::Slice<jule::Ptr<_20434d864_GenericDecl>>::alloc(0LL,_54618_parts.len());;
	{
		auto &expr = _54618_parts;
		auto it = expr.begin();
		_iter_begin_1dbbabae1:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_202b89679_Token>> _55321_part = *it;
			{
				_55217_generics = jule::alloc_for_append(_55217_generics,1);_55217_generics.__push(_20585d7ac_buildGeneric(_self_, _55321_part));;
			}
			_iter_next_1dbbabae1:;
			++it;
			goto _iter_begin_1dbbabae1;
		}
		_iter_end_1dbbabae1:;
	};
	return _55217_generics;
}



inline jule::Ptr<_204351bca_ParamDecl> _20585de72_buildSelfParam(_20585a006_parser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _56037_tokens) {
	if ((_56037_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_204351bca_ParamDecl> _56517_param = jule::new_ptr<_204351bca_ParamDecl>();;
	jule::I64 _56817_i = 0LL;;
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_56517_param.get()._field_Mutable=true;
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_20585a963_pushErr(&(*_self_), _56037_tokens[(_56817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Kind == jule::Str("&", 1))) {
		_56517_param.get()._field_Ident=jule::Str("&", 1);
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_20585a963_pushErr(&(*_self_), _56037_tokens[(_56817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(27LLU))) {
		_56517_param.get()._field_Ident+=jule::Str("self", 4);
		_56517_param.get()._field_Token=_56037_tokens[_56817_i];
		(_56817_i)++;
		if ((_56817_i < _56037_tokens.len())) {
			_20585a963_pushErr(&(*_self_), _56037_tokens[_56817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _56517_param;
}



inline void _20585e33a_paramTypeBegin(_20585a006_parser* _self_, jule::Ptr<_204351bca_ParamDecl>& _59938_param, jule::I64& _59962_i, jule::Slice<jule::Ptr<_202b89679_Token>>& _59971_tokens) {
	for (; (_59962_i < _59971_tokens.len()); (_59962_i)++) {
		{
			jule::Ptr<_202b89679_Token> _60117_token = _59971_tokens[_59962_i];;
			if ((_60117_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60117_token.get()._field_Kind != jule::Str("...", 3))) {
				return;;
			};
			if (_59938_param.get()._field_Variadic) {
				_20585a963_pushErr(&(*_self_), _60117_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1dbbb3ac6;
			};
			_59938_param.get()._field_Variadic=true;
		}
	_iter_next_1dbbb3ac6:;
	}
	_iter_end_1dbbb3ac6:;;
}



inline void _20585e659_buildParamType(jule::Ptr<_20585a006_parser> _self_, jule::Ptr<_204351bca_ParamDecl>& _61639_param, jule::Slice<jule::Ptr<_202b89679_Token>>& _61663_tokens) {
	jule::I64 _61717_i = 0LL;;
	_20585e33a_paramTypeBegin(_self_.ptr(), _61639_param,_61717_i,_61663_tokens);
	if ((_61717_i >= _61663_tokens.len())) {
		return;;
	};
	std::tie(_61639_param.get()._field_Kind,std::ignore) = _20585c37c_buildType(_self_, _61663_tokens,(&(_61717_i)),true);
	if ((_61717_i < _61663_tokens.len())) {
		_20585a963_pushErr(_self_.ptr(), _61663_tokens[_61717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _20585e978_buildParamBody(jule::Ptr<_20585a006_parser> _self_, jule::Ptr<_204351bca_ParamDecl>& _62939_param, jule::Slice<jule::Ptr<_202b89679_Token>> _62962_tokens) {
	jule::Ptr<_202b89679_Token> _63017_tok = _62962_tokens[0LL];;
	_62939_param.get()._field_Ident=_63017_tok.get()._field_Kind;
	if ((_62962_tokens.len() == 1LL)) {
		return;;
	} else if ((_62962_tokens.len() < 3LL)) {
		_20585a963_pushErr(_self_.ptr(), _63017_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_62962_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_20585e659_buildParamType(_self_, _62939_param,_62962_tokens);
		return;;
	};
	_62962_tokens=_62962_tokens.slice(2LL);
	_20585e659_buildParamType(_self_, _62939_param,_62962_tokens);
}



inline jule::Ptr<_204351bca_ParamDecl> _20585ec86_buildParam(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _64734_tokens) {
	jule::Ptr<_204351bca_ParamDecl> _64817_param = jule::new_ptr<_204351bca_ParamDecl>(_204351bca_ParamDecl{._field_Token=_64734_tokens[0LL], });;
	if ((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_64817_param.get()._field_Mutable=true;
		if ((_64734_tokens.len() == 1LL)) {
			_20585a963_pushErr(_self_.ptr(), _64734_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_64734_tokens=_64734_tokens.slice(1LL);
		_64817_param.get()._field_Token=_64734_tokens[0LL];
	};
	if ((_64734_tokens.len() >= 3LL)) {
		if (((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_64817_param.get()._field_Token.get()._field_Kind == jule::Str("&", 1)))) {
			if ((_64734_tokens.len() == 1LL)) {
				_20585a963_pushErr(_self_.ptr(), _64734_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_64734_tokens[1LL].get()._field_Id == static_cast<jule::U64>(2LLU)) && (_64734_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
				_64817_param.get()._field_Reference=true;
				_64734_tokens=_64734_tokens.slice(1LL);
				_64817_param.get()._field_Token=_64734_tokens[0LL];
			};
		};
	};
	if ((_64817_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_64817_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_20585e659_buildParamType(_self_, _64817_param,_64734_tokens);
	} else {
		_20585e978_buildParamBody(_self_, _64817_param,_64734_tokens);
	};
	return _64817_param;
}



inline void _20586000b_checkParams(_20585a006_parser* _self_, jule::Slice<jule::Ptr<_204351bca_ParamDecl>>& _69035_params) {
	{
		auto &expr = _69035_params;
		auto it = expr.begin();
		_iter_begin_1dbbc4059:;
		if (it != expr.end()) {
			jule::Ptr<_204351bca_ParamDecl> _69121_param = *it;
			{
				if ((_20435203d_IsSelf(_69121_param.ptr()) || (_69121_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1dbbc4059;
				};
				if ((_69121_param.get()._field_Token == nullptr)) {
					_20585a963_pushErr(&(*_self_), _69121_param.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_69121_param.get()._field_Kind=jule::new_ptr<_20434156b_TypeDecl>(_20434156b_TypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_204341b32_IdentTypeDecl>(_204341b32_IdentTypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Ident=_69121_param.get()._field_Token.get()._field_Kind, }))});
					_69121_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1dbbc4059:;
			++it;
			goto _iter_begin_1dbbc4059;
		}
		_iter_end_1dbbc4059:;
	};
}



inline jule::Slice<jule::Ptr<_204351bca_ParamDecl>> _2058603b3_buildParams(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _71036_tokens, jule::Bool _71054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _71118_parts;;
	jule::Slice<_20285b7ad_Log> _71125_errs;;
	std::tie(_71118_parts,_71125_errs) = _205858cd5_parts(_71036_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71125_errs);
	if ((_71118_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_204351bca_ParamDecl>> _71717_params = nullptr;;
	if ((_71054_method && (_71118_parts.len() > 0LL))) {
		jule::Ptr<_204351bca_ParamDecl> _71921_param = _20585de72_buildSelfParam(_self_.ptr(), _71118_parts[0LL]);;
		if (((_71921_param != nullptr) && _20435203d_IsSelf(_71921_param.ptr()))) {
			_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_71921_param);;
			_71118_parts=_71118_parts.slice(1LL);
		};
	};
	{
		auto &expr = _71118_parts;
		auto it = expr.begin();
		_iter_begin_1dbbc9d95:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_202b89679_Token>> _72621_part = *it;
			{
				jule::Ptr<_204351bca_ParamDecl> _72721_param = _20585ec86_buildParam(_self_, _72621_part);;
				if ((_72721_param != nullptr)) {
					_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_72721_param);;
				};
			}
			_iter_next_1dbbc9d95:;
			++it;
			goto _iter_begin_1dbbc9d95;
		}
		_iter_end_1dbbc9d95:;
	};
	_20586000b_checkParams(_self_.ptr(), _71717_params);
	return _71717_params;
}



inline std::tuple<jule::Ptr<_20434467e_RetTypeDecl>,jule::Bool> _20586076a_buildMultiRetType(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _73742_tokens, jule::I64& _73765_i) {
	jule::Ptr<_20434467e_RetTypeDecl> _73775_t = jule::Ptr<_20434467e_RetTypeDecl>();
	jule::Bool _73792_ok = jule::Bool();
	_73775_t=jule::new_ptr<_20434467e_RetTypeDecl>();
	(_73765_i)++;
	if ((_73765_i >= _73742_tokens.len())) {
		(_73765_i)--;
		std::tie(_73775_t.get()._field_Kind,_73792_ok) = _20585c37c_buildType(_self_, _73742_tokens,(&(_73765_i)),false);
		return std::make_tuple(_73775_t,_73792_ok);
	};
	(_73765_i)--;
	jule::Slice<jule::Ptr<_202b89679_Token>> _74717_rangeTokens = _205858268_range(_73765_i,jule::Str("(", 1),jule::Str(")", 1),_73742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _74918_parts;;
	jule::Slice<_20285b7ad_Log> _74925_errs;;
	std::tie(_74918_parts,_74925_errs) = _205858cd5_parts(_74717_rangeTokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_74925_errs);
	if ((_74918_parts.len() == 0LL)) {
		return std::make_tuple(_73775_t,_73792_ok);
	};
	jule::Slice<jule::Ptr<_20434156b_TypeDecl>> _75517_types = jule::Slice<jule::Ptr<_20434156b_TypeDecl>>::alloc(0LL,_74918_parts.len());;
	_73775_t.get()._field_Idents=jule::Slice<jule::Ptr<_202b89679_Token>>::alloc(0LL,_74918_parts.len());
	{
		auto &expr = _74918_parts;
		auto it = expr.begin();
		_iter_begin_1dbbd0494:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_202b89679_Token>> _75721_part = *it;
			{
				jule::Ptr<_202b89679_Token> _75821_token = _75721_part[0LL];;
				jule::I64 _75921_offset = 0LL;;
				if ((_75721_part.len() > 1LL)) {
					_75821_token=_75721_part[1LL];
					if ((_75821_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_75921_offset=2LL;
						if ((_75721_part.len() < 3LL)) {
							_20585a963_pushErr(_self_.ptr(), _75821_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1dbbd0494;
						};
					};
				};
				_75821_token=_75721_part[0LL];
				if ((_75921_offset != 2LL)) {
					jule::Ptr<_202b89679_Token> _77525_newToken = jule::new_ptr<_202b89679_Token>((*(_75821_token)));;
					_77525_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					_73775_t.get()._field_Idents = jule::alloc_for_append(_73775_t.get()._field_Idents,1);_73775_t.get()._field_Idents.__push(_77525_newToken);;
				} else {
					_73775_t.get()._field_Idents = jule::alloc_for_append(_73775_t.get()._field_Idents,1);_73775_t.get()._field_Idents.__push(_75821_token);;
				};
				jule::Ptr<_20434156b_TypeDecl> _78222_tk;;
				std::tie(_78222_tk,std::ignore) = _20585c37c_buildType(_self_, _75721_part,(&(_75921_offset)),true);
				if ((_75921_offset < _75721_part.len())) {
					_20585a963_pushErr(_self_.ptr(), _75721_part[_75921_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_75517_types = jule::alloc_for_append(_75517_types,1);_75517_types.__push(_78222_tk);;
			}
			_iter_next_1dbbd0494:;
			++it;
			goto _iter_begin_1dbbd0494;
		}
		_iter_end_1dbbd0494:;
	};
	if ((_75517_types.len() > 1LL)) {
		_73775_t.get()._field_Kind=jule::new_ptr<_20434156b_TypeDecl>(_20434156b_TypeDecl{._field_Token=_73742_tokens[0LL], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_20434310b_TupleTypeDecl>(_20434310b_TupleTypeDecl{._field_Types=_75517_types}))});
	} else {
		_73775_t.get()._field_Kind=_75517_types[0LL];
	};
	_73792_ok=true;
	return std::make_tuple(_73775_t,_73792_ok);
}



inline std::tuple<jule::Ptr<_20434467e_RetTypeDecl>,jule::Bool> _205860b22_buildRetType(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _80537_tokens, jule::I64& _80560_i) {
	jule::Ptr<_20434467e_RetTypeDecl> _80570_t = jule::Ptr<_20434467e_RetTypeDecl>();
	jule::Bool _80587_ok = jule::Bool();
	_80570_t=jule::new_ptr<_20434467e_RetTypeDecl>();
	if ((_80560_i >= _80537_tokens.len())) {
		return std::make_tuple(_80570_t,_80587_ok);
	};
	jule::Ptr<_202b89679_Token> _81117_token = _80537_tokens[_80560_i];;
	{
		auto &_match_expr{ _81117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1dbbd97ab:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("{", 1))) {
					return std::make_tuple(_80570_t,_80587_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1dbbd9b41:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("=", 1))) {
					return std::make_tuple(_80570_t,_80587_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1dbbd9bb8:;
			{
				if (((_80560_i + 1LL) >= _80537_tokens.len())) {
					_20585a963_pushErr(_self_.ptr(), _81117_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_80570_t,_80587_ok);
				};
				(_80560_i)++;
				_81117_token=_80537_tokens[_80560_i];
				if ((_81117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81117_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1dbbdc946:;
							{
								std::tie(_80570_t,_80587_ok) = _20586076a_buildMultiRetType(_self_, _80537_tokens,_80560_i);
								return std::make_tuple(_80570_t,_80587_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1dbbdc9bd:;
							{
								_20585a963_pushErr(_self_.ptr(), _81117_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_80570_t,_80587_ok);
							}
						}
						_match_end_1dbbdc748:;
					};
				};
				std::tie(_80570_t.get()._field_Kind,_80587_ok) = _20585c37c_buildType(_self_, _80537_tokens,(&(_80560_i)),true);
				return std::make_tuple(_80570_t,_80587_ok);
			}
		}
		_match_end_1dbbd8e2b:;
	};
	(_80560_i)++;
	_20585a963_pushErr(_self_.ptr(), _81117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_80570_t,_80587_ok);
}



inline jule::Ptr<_204352eea_FnDecl> _205861073_buildFnPrototype(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _85041_tokens, jule::I64& _85064_i, jule::Bool _85072_method) {
	jule::Ptr<_204352eea_FnDecl> _85117_f = jule::new_ptr<_204352eea_FnDecl>(_204352eea_FnDecl{._field_Token=_85041_tokens[_85064_i], });;
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		_85117_f.get()._field_Statically=true;
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_20585a963_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85117_f.get()._field_Token=_85041_tokens[_85064_i];
	};
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_85117_f.get()._field_Unsafety=true;
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_20585a963_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85117_f.get()._field_Token=_85041_tokens[_85064_i];
	};
	(_85064_i)++;
	if ((_85064_i >= _85041_tokens.len())) {
		_20585a963_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_202b89679_Token> _88413_tok = _85041_tokens[_85064_i];;
	if ((_88413_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_20585a963_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85117_f.get()._field_Ident=_88413_tok.get()._field_Kind;
	} else {
		_85117_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_202b89679_Token> _89613_errorToken = _85041_tokens[_85064_i];;
	jule::Slice<jule::Ptr<_202b89679_Token>> _89717_genericsTokens = _205858268_range(_85064_i,jule::Str("[", 1),jule::Str("]", 1),_85041_tokens);;
	if ((_89717_genericsTokens != nullptr)) {
		_85117_f.get()._field_Generics=_20585db64_buildGenerics(_self_, _89717_genericsTokens,_89613_errorToken);
	};
	if ((_85041_tokens[_85064_i].get()._field_Kind != jule::Str("(", 1))) {
		_20585a963_pushErr(_self_.ptr(), _85041_tokens[_85064_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_202b89679_Token>> _90717_paramsToks = _205858268_range(_85064_i,jule::Str("(", 1),jule::Str(")", 1),_85041_tokens);;
	if ((_90717_paramsToks.len() > 0LL)) {
		_85117_f.get()._field_Params=_2058603b3_buildParams(_self_, _90717_paramsToks,_85072_method);
	};
	if ((_85064_i < _85041_tokens.len())) {
		jule::Ptr<_202b89679_Token> _91317_token = _85041_tokens[_85064_i];;
		if (((_91317_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_91317_token.get()._field_Kind == jule::Str("!", 1)))) {
			_85117_f.get()._field_Exceptional=true;
			(_85064_i)++;
		};
	};
	_85117_f.get()._field_Public=_205869ba3_isPub(_85117_f.get()._field_Ident);
	std::tie(_85117_f.get()._field_Result,std::ignore) = _205860b22_buildRetType(_self_, _85041_tokens,_85064_i);
	return _85117_f;
}



inline jule::Ptr<_204352eea_FnDecl> _2058614c4_buildFn(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _92732_tokens, jule::Bool _92750_method, jule::Bool _92764_prototype) {
	jule::I64 _92817_i = 0LL;;
	jule::Ptr<_204352eea_FnDecl> _92917_f = _205861073_buildFnPrototype(_self_, _92732_tokens,_92817_i,_92750_method);;
	if (_92764_prototype) {
		if ((_92817_i < _92732_tokens.len())) {
			_20585a963_pushErr(_self_.ptr(), _92732_tokens[(_92817_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _92917_f;
	} else if ((_92917_f == nullptr)) {
		return _92917_f;
	};
	if ((_92817_i >= _92732_tokens.len())) {
		_20585a336_stop(_self_.ptr());
		_20585a963_pushErr(_self_.ptr(), _92917_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_202b89679_Token>> _94517_blockTokens = _205858268_range(_92817_i,jule::Str("{", 1),jule::Str("}", 1),_92732_tokens);;
	if ((_94517_blockTokens != nullptr)) {
		_92917_f.get()._field_Scope=_20585b9ca_buildScope(_self_, _94517_blockTokens,_92732_tokens[(_92817_i - 1LL)]);
		_92917_f.get()._field_Scope.get()._field_Unsafety=_92917_f.get()._field_Unsafety;
		if ((_92817_i < _92732_tokens.len())) {
			_20585a963_pushErr(_self_.ptr(), _92732_tokens[_92817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_20585a336_stop(_self_.ptr());
		_20585a963_pushErr(_self_.ptr(), _92917_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _92917_f;
}



inline jule::Slice<jule::Ptr<_202b89679_Token>> _2058617d2_getUseDeclSelectors(_20585a006_parser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _96142_tokens) {
	jule::I64 _96217_i = 0LL;;
	_96142_tokens=_205858268_range(_96217_i,jule::Str("{", 1),jule::Str("}", 1),_96142_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _96418_parts;;
	jule::Slice<_20285b7ad_Log> _96425_errs;;
	std::tie(_96418_parts,_96425_errs) = _205858cd5_parts(_96142_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_96425_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_96425_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_202b89679_Token>> _97017_selectors = jule::Slice<jule::Ptr<_202b89679_Token>>::alloc(0LL,_96418_parts.len());;
	{
		auto &expr = _96418_parts;
		auto it = expr.begin();
		_iter_begin_1dbc05a80:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_202b89679_Token>> _97121_part = *it;
			{
				if ((_97121_part.len() > 1LL)) {
					_20585a963_pushErr(&(*_self_), _97121_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_202b89679_Token> _97521_tok = _97121_part[0LL];;
				if (((_97521_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97521_tok.get()._field_Id != static_cast<jule::U64>(27LLU)))) {
					_20585a963_pushErr(&(*_self_), _97521_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_20585ac82_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1dbc05a80;
				};
				_97017_selectors = jule::alloc_for_append(_97017_selectors,1);_97017_selectors.__push(_97521_tok);;
			}
			_iter_next_1dbc05a80:;
			++it;
			goto _iter_begin_1dbc05a80;
		}
		_iter_end_1dbc05a80:;
	};
	return _97017_selectors;
}



inline void _205861b01_buildCppUseDecl(_20585a006_parser* _self_, jule::Ptr<_204358c26_UseDecl>& _98639_decl, jule::Slice<jule::Ptr<_202b89679_Token>>& _98656_tokens) {
	if ((_98656_tokens.len() > 1LL)) {
		_20585a963_pushErr(&(*_self_), _98656_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_202b89679_Token> _99013_token = _98656_tokens[0LL];;
	if (((_99013_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || ((_99013_token.get()._field_Kind[0LL] != '`') && (_99013_token.get()._field_Kind[0LL] != '\"')))) {
		_20585a963_pushErr(&(*_self_), _99013_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_98639_decl.get()._field_CppLinked=true;
	_98639_decl.get()._field_LinkPath=_99013_token.get()._field_Kind.slice(1LL,(_99013_token.get()._field_Kind.len() - 1LL));
}



inline void _205861e20_buildStdUseDecl(_20585a006_parser* _self_, jule::Ptr<_204358c26_UseDecl>& _99939_decl, jule::Slice<jule::Ptr<_202b89679_Token>> _99959_tokens) {
	_99939_decl.get()._field_Std=true;
	jule::Ptr<_202b89679_Token> _100217_token = _99959_tokens[0LL];;
	if ((_99959_tokens.len() < 3LL)) {
		_20585a963_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_99959_tokens=_99959_tokens.slice(2LL);
	_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1dbc100ea:;
			{
				_20585a963_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1dbc10172:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("}", 1))) {
					_20585a963_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_202b89679_Token>> _101921_selectors = nullptr;;
				std::tie(_99959_tokens,_101921_selectors) = _205858510_rangeLast(_99959_tokens);
				_99939_decl.get()._field_Selected=_2058617d2_getUseDeclSelectors(&(*_self_), _101921_selectors);
				if ((_99959_tokens.len() == 0LL)) {
					_20585a963_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_20585a963_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_20585a963_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1dbc101e9:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("*", 1))) {
					_20585a963_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_20585a963_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_20585a963_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_20585a963_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99939_decl.get()._field_Full=true;
			}
		}
		_match_end_1dbc10073:;
	};
	_99939_decl.get()._field_LinkPath=(jule::Str("std::", 5) + _205859b3d_tokstoa(_99959_tokens));
}



inline void _20586223e_buildIdentUseDecl(_20585a006_parser* _self_, jule::Ptr<_204358c26_UseDecl>& _106141_decl, jule::Slice<jule::Ptr<_202b89679_Token>> _106161_tokens) {
	_106141_decl.get()._field_Std=false;
	jule::Ptr<_202b89679_Token> _106417_token = _106161_tokens[(_106161_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1dbc1a5ab:;
			{
				_20585a963_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1dbc1ada3:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("}", 1))) {
					_20585a963_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_202b89679_Token>> _107521_selectors = nullptr;;
				std::tie(_106161_tokens,_107521_selectors) = _205858510_rangeLast(_106161_tokens);
				_106141_decl.get()._field_Selected=_2058617d2_getUseDeclSelectors(&(*_self_), _107521_selectors);
				if ((_106161_tokens.len() == 0LL)) {
					_20585a963_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_20585a963_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_20585a963_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1dbc1ae19:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("*", 1))) {
					_20585a963_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_20585a963_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_20585a963_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_20585a963_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106141_decl.get()._field_Full=true;
			}
		}
		_match_end_1dbc1aa95:;
	};
	_106141_decl.get()._field_LinkPath=_205859b3d_tokstoa(_106161_tokens);
}



inline void _20586255d_parseUseDecl(_20585a006_parser* _self_, jule::Ptr<_204358c26_UseDecl>& _112436_decl, jule::Slice<jule::Ptr<_202b89679_Token>> _112456_tokens) {
	if (_112436_decl.get()._field_CppLinked) {
		_205861b01_buildCppUseDecl(&(*_self_), _112436_decl,_112456_tokens);
		return;;
	};
	jule::Ptr<_202b89679_Token> _113017_token = _112456_tokens[0LL];;
	if ((_113017_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_20585a963_pushErr(&(*_self_), _113017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_112456_tokens.len() > 2LL) && (_112456_tokens[1LL].get()._field_Id == static_cast<jule::U64>(12LLU)))) {
		_112436_decl.get()._field_Alias=_113017_token.get()._field_Kind;
		if ((_112456_tokens[2LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_20585a963_pushErr(&(*_self_), _113017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_20585ac82_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_112456_tokens=_112456_tokens.slice(2LL);
		_113017_token=_112456_tokens[0LL];
	};
	;
	{
		
		if ((_113017_token.get()._field_Kind == jule::Str("std", 3))) {
			_case_begin_1dbc281ce:;
			{
				_205861e20_buildStdUseDecl(&(*_self_), _112436_decl,_112456_tokens);
			}
		}
		else {
			_case_begin_1dbc2a577:;
			{
				_20586223e_buildIdentUseDecl(&(*_self_), _112436_decl,_112456_tokens);
			}
		}
		_match_end_1dbc2a511:;
	};
}



inline jule::Ptr<_204358c26_UseDecl> _205862915_buildUseDecl(_20585a006_parser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _115835_tokens, jule::Bool _115853_cpp_linked) {
	jule::Ptr<_204358c26_UseDecl> _115917_decl = jule::new_ptr<_204358c26_UseDecl>(_204358c26_UseDecl{._field_Token=_115835_tokens[0LL], ._field_CppLinked=_115853_cpp_linked, });;
	if ((_115835_tokens.len() < 2LL)) {
		_20585a963_pushErr(&(*_self_), _115917_decl.get()._field_Token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_115835_tokens=_115835_tokens.slice(1LL);
	_20586255d_parseUseDecl(&(*_self_), _115917_decl,_115835_tokens);
	return _115917_decl;
}



inline jule::Ptr<_20434156b_TypeDecl> _205862cbc_buildTypeEnumItemKind(jule::Ptr<_20585a006_parser> _self_, jule::I64& _117246_i, jule::Slice<jule::Ptr<_202b89679_Token>>& _117259_tokens) {
	jule::I64 _117317_braceN = 0LL;;
	jule::I64 _117413_exprStart = _117246_i;;
	for (; (_117246_i < _117259_tokens.len()); (_117246_i)++) {
		{
			jule::Ptr<_202b89679_Token> _117617_t = _117259_tokens[_117246_i];;
			if ((_117617_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _117617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1dbc2edd9:;
						{
							(_117317_braceN)++;
							goto _iter_next_1dbc2e724;
						}
					}
					else {
						_case_begin_1dbc307e1:;
						{
							(_117317_braceN)--;
						}
					}
					_match_end_1dbc305c1:;
				};
			};
			if ((_117317_braceN > 0LL)) {
				goto _iter_next_1dbc2e724;
			};
			if (((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_117246_i + 1LL) >= _117259_tokens.len()))) {
				jule::Slice<jule::Ptr<_202b89679_Token>> _119225_kindTokens = nullptr;;
				if ((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_119225_kindTokens=_117259_tokens.slice(_117413_exprStart,_117246_i);
				} else {
					_119225_kindTokens=_117259_tokens.slice(_117413_exprStart);
				};
				jule::I64 _119825_j = 0LL;;
				jule::Ptr<_20434156b_TypeDecl> _119926_kind;;
				std::tie(_119926_kind,std::ignore) = _20585c37c_buildType(_self_, _119225_kindTokens,(&(_119825_j)),true);
				if ((_119825_j < _119225_kindTokens.len())) {
					_20585a963_pushErr(_self_.ptr(), _119225_kindTokens[_119825_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _119926_kind;
			};
		}
	_iter_next_1dbc2e724:;
	}
	_iter_end_1dbc2e724:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_20435a6c8_TypeEnumItemDecl>> _2058630ca_buildTypeEnumItems(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _120943_tokens) {
	jule::Slice<jule::Ptr<_20435a6c8_TypeEnumItemDecl>> _121017_items = jule::Slice<jule::Ptr<_20435a6c8_TypeEnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _121117_i = 0LL;;
	for (; (_121117_i < _120943_tokens.len()); (_121117_i)++) {
		{
			jule::Ptr<_202b89679_Token> _121321_t = _120943_tokens[_121117_i];;
			jule::Ptr<_20435a6c8_TypeEnumItemDecl> _121421_item = jule::new_ptr<_20435a6c8_TypeEnumItemDecl>();;
			_121421_item.get()._field_Token=_121321_t;
			if (((_121421_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(2LLU)) && ((_120943_tokens.len() - _121117_i) > 2LL))) {
				_121421_item.get()._field_Ident=_121421_item.get()._field_Token.get()._field_Kind;
				_121321_t=_120943_tokens[(_121117_i + 1LL)];
				if ((_121321_t.get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_121117_i+=2LL;
					if (((_121117_i >= _120943_tokens.len()) || (_120943_tokens[_121117_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
						_20585a963_pushErr(_self_.ptr(), _121321_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_1dbc35be2;
					};
				};
			};
			_121421_item.get()._field_Kind=_205862cbc_buildTypeEnumItemKind(_self_, _121117_i,_120943_tokens);
			_121017_items = jule::alloc_for_append(_121017_items,1);_121017_items.__push(_121421_item);;
		}
	_iter_next_1dbc35be2:;
	}
	_iter_end_1dbc35be2:;;
	return _121017_items;
}



inline jule::Ptr<_20435acd3_TypeEnumDecl> _2058633d8_buildTypeEnumDecl(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _123342_tokens) {
	jule::I64 _123417_i = 1LL;;
	jule::Ptr<_20435acd3_TypeEnumDecl> _123517_e = jule::new_ptr<_20435acd3_TypeEnumDecl>(_20435acd3_TypeEnumDecl{._field_Token=_123342_tokens[_123417_i], });;
	if ((_123517_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_20585a963_pushErr(_self_.ptr(), _123517_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Ident=_123517_e.get()._field_Token.get()._field_Kind;
	_123417_i+=3LL;
	jule::Slice<jule::Ptr<_202b89679_Token>> _124517_itemTokens = _205858268_range(_123417_i,jule::Str("{", 1),jule::Str("}", 1),_123342_tokens);;
	if ((_124517_itemTokens == nullptr)) {
		_20585a336_stop(_self_.ptr());
		_20585a963_pushErr(_self_.ptr(), _123517_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _123517_e;
	} else if ((_123417_i < _123342_tokens.len())) {
		_20585a963_pushErr(_self_.ptr(), _123342_tokens[_123417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Public=_205869ba3_isPub(_123517_e.get()._field_Ident);
	_123517_e.get()._field_End=_123342_tokens[(_123417_i - 1LL)];
	_123517_e.get()._field_Items=_2058630ca_buildTypeEnumItems(_self_, _124517_itemTokens);
	return _123517_e;
}



inline jule::Ptr<_204345a8c_Expr> _205863790_buildEnumItemExpr(jule::Ptr<_20585a006_parser> _self_, jule::I64& _126042_i, jule::Slice<jule::Ptr<_202b89679_Token>>& _126055_tokens) {
	jule::I64 _126117_braceN = 0LL;;
	jule::I64 _126213_exprStart = _126042_i;;
	for (; (_126042_i < _126055_tokens.len()); (_126042_i)++) {
		{
			jule::Ptr<_202b89679_Token> _126417_t = _126055_tokens[_126042_i];;
			if ((_126417_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _126417_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1dbc4243a:;
						{
							(_126117_braceN)++;
							goto _iter_next_1dbc41c75;
						}
					}
					else {
						_case_begin_1dbc42d42:;
						{
							(_126117_braceN)--;
						}
					}
					_match_end_1dbc42b22:;
				};
			};
			if ((_126117_braceN > 0LL)) {
				goto _iter_next_1dbc41c75;
			};
			if (((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_126042_i + 1LL) >= _126055_tokens.len()))) {
				jule::Slice<jule::Ptr<_202b89679_Token>> _128025_exprTokens = nullptr;;
				if ((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart,_126042_i);
				} else {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart);
				};
				return _20585b090_buildExpr(_self_, _128025_exprTokens);
			};
		}
	_iter_next_1dbc41c75:;
	}
	_iter_end_1dbc41c75:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_204359199_EnumItemDecl>> _205863a9d_buildEnumItems(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _129239_tokens) {
	jule::Slice<jule::Ptr<_204359199_EnumItemDecl>> _129317_items = jule::Slice<jule::Ptr<_204359199_EnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _129417_i = 0LL;;
	for (; (_129417_i < _129239_tokens.len()); (_129417_i)++) {
		{
			jule::Ptr<_202b89679_Token> _129621_t = _129239_tokens[_129417_i];;
			jule::Ptr<_204359199_EnumItemDecl> _129721_item = jule::new_ptr<_204359199_EnumItemDecl>();;
			_129721_item.get()._field_Token=_129621_t;
			if ((_129721_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
				_20585a963_pushErr(_self_.ptr(), _129721_item.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_129721_item.get()._field_Ident=_129721_item.get()._field_Token.get()._field_Kind;
			if ((((_129417_i + 1LL) >= _129239_tokens.len()) || (_129239_tokens[(_129417_i + 1LL)].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				if (((_129417_i + 1LL) < _129239_tokens.len())) {
					(_129417_i)++;
				};
				_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
				goto _iter_next_1dbc46b7b;
			};
			(_129417_i)++;
			_129621_t=_129239_tokens[_129417_i];
			(_129417_i)++;
			if ((_129621_t.get()._field_Id != static_cast<jule::U64>(11LLU))) {
				_20585a963_pushErr(_self_.ptr(), _129621_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_1dbc46b7b;
			};
			if (((_129417_i >= _129239_tokens.len()) || (_129239_tokens[_129417_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_20585a963_pushErr(_self_.ptr(), _129621_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1dbc46b7b;
			};
			_129721_item.get()._field_Expr=_205863790_buildEnumItemExpr(_self_, _129417_i,_129239_tokens);
			_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
		}
	_iter_next_1dbc46b7b:;
	}
	_iter_end_1dbc46b7b:;;
	return _129317_items;
}



inline jule::Ptr<_204359bc2_EnumDecl> _205863dab_buildEnumDecl(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _132938_tokens) {
	if ((_132938_tokens.len() < 3LL)) {
		_20585a963_pushErr(_self_.ptr(), _132938_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_204359bc2_EnumDecl> _133417_e = jule::new_ptr<_204359bc2_EnumDecl>(_204359bc2_EnumDecl{._field_Token=_132938_tokens[1LL], });;
	if ((_133417_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_20585a963_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Ident=_133417_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134217_i = 2LL;;
	if ((_132938_tokens[_134217_i].get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_134217_i)++;
		if ((_134217_i >= _132938_tokens.len())) {
			_20585a963_pushErr(_self_.ptr(), _132938_tokens[(_134217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _133417_e;
		};
		std::tie(_133417_e.get()._field_Kind,std::ignore) = _20585c37c_buildType(_self_, _132938_tokens,(&(_134217_i)),true);
		if ((_134217_i >= _132938_tokens.len())) {
			_20585a336_stop(_self_.ptr());
			_20585a963_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _133417_e;
		};
	} else {
		_133417_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_202b89679_Token>> _135917_itemTokens = _205858268_range(_134217_i,jule::Str("{", 1),jule::Str("}", 1),_132938_tokens);;
	if ((_135917_itemTokens == nullptr)) {
		_20585a336_stop(_self_.ptr());
		_20585a963_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _133417_e;
	} else if ((_134217_i < _132938_tokens.len())) {
		_20585a963_pushErr(_self_.ptr(), _132938_tokens[_134217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Public=_205869ba3_isPub(_133417_e.get()._field_Ident);
	_133417_e.get()._field_End=_132938_tokens[(_134217_i - 1LL)];
	_133417_e.get()._field_Items=_205863a9d_buildEnumItems(_self_, _135917_itemTokens);
	return _133417_e;
}



inline jule::Any _2058641b9_buildNodeEnumDecl(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _137442_tokens) {
	if (((_137442_tokens.len() > 3LL) && (_137442_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		if ((_137442_tokens[3LL].get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return static_cast<jule::Any>(_2058633d8_buildTypeEnumDecl(_self_, _137442_tokens));
		};
	};
	return static_cast<jule::Any>(_205863dab_buildEnumDecl(_self_, _137442_tokens));
}



inline jule::Ptr<_20435aed1_FieldDecl> _2058644c7_buildField(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _138334_tokens) {
	jule::Ptr<_20435aed1_FieldDecl> _138417_f = jule::new_ptr<_20435aed1_FieldDecl>();;
	_138417_f.get()._field_Mutable=(_138334_tokens[0LL].get()._field_Id == static_cast<jule::U64>(35LLU));
	if (_138417_f.get()._field_Mutable) {
		if ((_138334_tokens.len() == 1LL)) {
			_20585a963_pushErr(_self_.ptr(), _138334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138334_tokens=_138334_tokens.slice(1LL);
	};
	_138417_f.get()._field_Token=_138334_tokens[0LL];
	if ((_138417_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_20585a963_pushErr(_self_.ptr(), _138417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138417_f.get()._field_Ident=_138417_f.get()._field_Token.get()._field_Kind;
	if ((_138334_tokens.len() == 1LL)) {
		_20585a963_pushErr(_self_.ptr(), _138334_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_138334_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_20585a963_pushErr(_self_.ptr(), _138334_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138334_tokens=_138334_tokens.slice(2LL);
	jule::I64 _141217_i = 0LL;;
	std::tie(_138417_f.get()._field_Kind,std::ignore) = _20585c37c_buildType(_self_, _138334_tokens,(&(_141217_i)),true);
	if ((_141217_i < _138334_tokens.len())) {
		jule::Ptr<_202b89679_Token> _141517_token = _138334_tokens[_141217_i];;
		if (((_141517_token.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_141517_token.get()._field_Kind != jule::Str("=", 1)))) {
			_20585a963_pushErr(_self_.ptr(), _138334_tokens[_141217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_141217_i)++;
		if ((_141217_i >= _138334_tokens.len())) {
			_20585a963_pushErr(_self_.ptr(), _141517_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138334_tokens=_138334_tokens.slice(_141217_i);
		_138417_f.get()._field_Default=_20585b090_buildExpr(_self_, _138334_tokens);
	};
	_138417_f.get()._field_Public=_205869ba3_isPub(_138417_f.get()._field_Ident);
	return _138417_f;
}



inline jule::Slice<jule::Ptr<_20435aed1_FieldDecl>> _2058647d5_buildStructDeclFields(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _143245_tokens) {
	jule::Slice<jule::Ptr<_20435aed1_FieldDecl>> _143317_fields = nullptr;;
	jule::Slice<jule::Ptr<_20583d083_stmt>> _143417_stmts = _20583d429_splitStmts(_143245_tokens);;
	{
		auto &expr = _143417_stmts;
		auto it = expr.begin();
		_iter_begin_1dbc65b9a:;
		if (it != expr.end()) {
			jule::Ptr<_20583d083_stmt> _143521_stmt = *it;
			{
				_143245_tokens=_143521_stmt.get()._field_tokens;
				jule::Ptr<_20435aed1_FieldDecl> _143721_f = _2058644c7_buildField(_self_, _143245_tokens);;
				_143317_fields = jule::alloc_for_append(_143317_fields,1);_143317_fields.__push(_143721_f);;
			}
			_iter_next_1dbc65b9a:;
			++it;
			goto _iter_begin_1dbc65b9a;
		}
		_iter_end_1dbc65b9a:;
	};
	return _143317_fields;
}



inline jule::Ptr<_20435b784_StructDecl> _205864ae3_buildStructDecl(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _144340_tokens) {
	if ((_144340_tokens.len() < 3LL)) {
		_20585a963_pushErr(_self_.ptr(), _144340_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _144917_i = 1LL;;
	jule::Ptr<_20435b784_StructDecl> _145017_s = jule::new_ptr<_20435b784_StructDecl>(_20435b784_StructDecl{._field_Token=_144340_tokens[_144917_i], });;
	if ((_145017_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_20585a963_pushErr(_self_.ptr(), _145017_s.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_144917_i)++;
	if ((_144917_i >= _144340_tokens.len())) {
		_20585a963_pushErr(_self_.ptr(), _144340_tokens[_144917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _145017_s;
	};
	_145017_s.get()._field_Ident=_145017_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_202b89679_Token> _146413_errorToken = _144340_tokens[_144917_i];;
	jule::Slice<jule::Ptr<_202b89679_Token>> _146517_genericsTokens = _205858268_range(_144917_i,jule::Str("[", 1),jule::Str("]", 1),_144340_tokens);;
	if ((_146517_genericsTokens != nullptr)) {
		_145017_s.get()._field_Generics=_20585db64_buildGenerics(_self_, _146517_genericsTokens,_146413_errorToken);
	};
	if ((_144917_i >= _144340_tokens.len())) {
		_20585a963_pushErr(_self_.ptr(), _144340_tokens[(_144917_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145017_s;
	};
	jule::Slice<jule::Ptr<_202b89679_Token>> _147517_bodyTokens = _205858268_range(_144917_i,jule::Str("{", 1),jule::Str("}", 1),_144340_tokens);;
	if ((_147517_bodyTokens == nullptr)) {
		_20585a336_stop(_self_.ptr());
		_20585a963_pushErr(_self_.ptr(), _145017_s.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145017_s;
	};
	if ((_144917_i < _144340_tokens.len())) {
		_20585a963_pushErr(_self_.ptr(), _144340_tokens[_144917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_145017_s.get()._field_Public=_205869ba3_isPub(_145017_s.get()._field_Ident);
	_145017_s.get()._field_Fields=_2058647d5_buildStructDeclFields(_self_, _147517_bodyTokens);
	_145017_s.get()._field_End=_144340_tokens[(_144917_i - 1LL)];
	return _145017_s;
}



inline void _205864d68_checkMethodReceiver(_20585a006_parser* _self_, jule::Ptr<_204352eea_FnDecl>& _149139_f) {
	if (_149139_f.get()._field_Statically) {
		if (((_149139_f.get()._field_Params.len() > 0LL) && _20435203d_IsSelf(_149139_f.get()._field_Params[0LL].ptr()))) {
			_20585a963_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_149139_f.get()._field_Params.len() == 0LL)) {
		_20585a963_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_204351bca_ParamDecl> _150313_param = _149139_f.get()._field_Params[0LL];;
	if ((!(_20435203d_IsSelf(_150313_param.ptr())))) {
		_20585a963_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_204352eea_FnDecl>> _205865176_buildTraitMethods(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _151041_tokens) {
	jule::Slice<jule::Ptr<_204352eea_FnDecl>> _151117_methods = nullptr;;
	jule::Slice<jule::Ptr<_20583d083_stmt>> _151217_stmts = _20583d429_splitStmts(_151041_tokens);;
	{
		auto &expr = _151217_stmts;
		auto it = expr.begin();
		_iter_begin_1dbc76370:;
		if (it != expr.end()) {
			jule::Ptr<_20583d083_stmt> _151321_stmt = *it;
			{
				_151041_tokens=_151321_stmt.get()._field_tokens;
				if ((_151041_tokens.len() == 0LL)) {
					goto _iter_next_1dbc76370;
				};
				jule::Ptr<_204352eea_FnDecl> _151821_f = _2058614c4_buildFn(_self_, _151041_tokens,true,true);;
				if ((_151821_f != nullptr)) {
					if (_20435334c_IsAnon(_151821_f.ptr())) {
						_20585a963_pushErr(_self_.ptr(), _151821_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_205864d68_checkMethodReceiver(_self_.ptr(), _151821_f);
					if ((_151821_f.get()._field_Generics.len() > 0LL)) {
						_20585a963_pushErr(_self_.ptr(), _151821_f.get()._field_Token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_151117_methods = jule::alloc_for_append(_151117_methods,1);_151117_methods.__push(_151821_f);;
				};
			}
			_iter_next_1dbc76370:;
			++it;
			goto _iter_begin_1dbc76370;
		}
		_iter_end_1dbc76370:;
	};
	return _151117_methods;
}



inline jule::Ptr<_20435bd8e_TraitDecl> _205865484_buildTraitDecl(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _153339_tokens) {
	if ((_153339_tokens.len() < 3LL)) {
		_20585a963_pushErr(_self_.ptr(), _153339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20435bd8e_TraitDecl> _153817_t = jule::new_ptr<_20435bd8e_TraitDecl>(_20435bd8e_TraitDecl{._field_Token=_153339_tokens[1LL], });;
	if ((_153817_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_20585a963_pushErr(_self_.ptr(), _153817_t.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Ident=_153817_t.get()._field_Token.get()._field_Kind;
	jule::I64 _154617_i = 2LL;;
	jule::Slice<jule::Ptr<_202b89679_Token>> _154717_bodyTokens = _205858268_range(_154617_i,jule::Str("{", 1),jule::Str("}", 1),_153339_tokens);;
	if ((_154717_bodyTokens == nullptr)) {
		_20585a336_stop(_self_.ptr());
		_20585a963_pushErr(_self_.ptr(), _153817_t.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_154617_i < _153339_tokens.len())) {
		_20585a963_pushErr(_self_.ptr(), _153339_tokens[_154617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Public=_205869ba3_isPub(_153817_t.get()._field_Ident);
	_153817_t.get()._field_Methods=_205865176_buildTraitMethods(_self_, _154717_bodyTokens);
	_153817_t.get()._field_End=_153339_tokens[(_154617_i - 1LL)];
	return _153817_t;
}



inline jule::Ptr<_204352eea_FnDecl> _205865792_buildCppLinkFn(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _156338_tokens) {
	_156338_tokens=_156338_tokens.slice(1LL);
	jule::Ptr<_204352eea_FnDecl> _156517_f = _2058614c4_buildFn(_self_, _156338_tokens,false,true);;
	if ((_156517_f != nullptr)) {
		if (_20435334c_IsAnon(_156517_f.ptr())) {
			_20585a963_pushErr(_self_.ptr(), _156517_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_156517_f.get()._field_Public=false;
		_156517_f.get()._field_CppLinked=true;
	};
	return _156517_f;
}



inline jule::Ptr<_204353ec9_VarDecl> _205865aa0_buildCppLinkVar(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _157639_tokens) {
	_157639_tokens=_157639_tokens.slice(1LL);
	jule::Ptr<_204353ec9_VarDecl> _157817_v = _20585d49e_buildVar(_self_, _157639_tokens);;
	if ((_157817_v != nullptr)) {
		_157817_v.get()._field_Public=false;
		_157817_v.get()._field_CppLinked=true;
		if ((_157817_v.get()._field_Expr != nullptr)) {
			_20585a963_pushErr(_self_.ptr(), _157817_v.get()._field_Token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _157817_v;
}



inline jule::Ptr<_20435b784_StructDecl> _205865dad_buildCppLinkStruct(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _158942_tokens) {
	_158942_tokens=_158942_tokens.slice(1LL);
	jule::Ptr<_20435b784_StructDecl> _159117_s = _205864ae3_buildStructDecl(_self_, _158942_tokens);;
	if ((_159117_s != nullptr)) {
		_159117_s.get()._field_Public=false;
		{
			auto &expr = _159117_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1dbc8be35:;
			if (it != expr.end()) {
				jule::Ptr<_20435aed1_FieldDecl> _159425_f = *it;
				{
					_159425_f.get()._field_Public=true;
				}
				_iter_next_1dbc8be35:;
				++it;
				goto _iter_begin_1dbc8be35;
			}
			_iter_end_1dbc8be35:;
		};
		_159117_s.get()._field_CppLinked=true;
	};
	return _159117_s;
}



inline jule::Ptr<_20435783a_TypeAliasDecl> _2058661bb_buildCppLinkTypeAlias(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _160345_tokens) {
	_160345_tokens=_160345_tokens.slice(1LL);
	jule::Ptr<_20435783a_TypeAliasDecl> _160517_t = _20585c68a_buildTypeAliasDecl(_self_, _160345_tokens);;
	if ((_160517_t != nullptr)) {
		_160517_t.get()._field_Public=false;
		_160517_t.get()._field_CppLinked=true;
	};
	return _160517_t;
}



inline jule::Ptr<_204358c26_UseDecl> _2058664c9_buildCppLinkUse(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _161339_tokens) {
	if ((_161339_tokens.len() == 1LL)) {
		_20585a963_pushErr(_self_.ptr(), _161339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_161339_tokens=_161339_tokens.slice(1LL);
	;
	return _205862915_buildUseDecl(_self_.ptr(), _161339_tokens,true);
}



inline jule::Any _2058667d7_buildCppLink(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _162437_tokens) {
	jule::Ptr<_202b89679_Token> _162517_token = _162437_tokens[0LL];;
	if ((_162437_tokens.len() == 1LL)) {
		_20585a963_pushErr(_self_.ptr(), _162517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_162517_token=_162437_tokens[1LL];
	{
		auto &_match_expr{ _162517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1dbc91d2a:;
			{
				return static_cast<jule::Any>(_205865792_buildCppLinkFn(_self_, _162437_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1dbc92eb3:;
			{
				return static_cast<jule::Any>(_205865aa0_buildCppLinkVar(_self_, _162437_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1dbc93029:;
			{
				return static_cast<jule::Any>(_205865dad_buildCppLinkStruct(_self_, _162437_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1dbc93090:;
			{
				return static_cast<jule::Any>(_2058661bb_buildCppLinkTypeAlias(_self_, _162437_tokens));
			}
		}
		else {
			_case_begin_1dbc92d5e:;
			{
				_20585a963_pushErr(_self_.ptr(), _162517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1dbc91c4d:;
	};
	return nullptr;
}



inline jule::Ptr<_204352eea_FnDecl> _205866ae5_getMethod(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _164834_tokens) {
	jule::I64 _164917_i = 0LL;;
	jule::Ptr<_202b89679_Token> _165017_token = _164834_tokens[_164917_i];;
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		if (((_164917_i + 1LL) >= _164834_tokens.len())) {
			_20585a963_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_164917_i)++;
		_165017_token=_164834_tokens[_164917_i];
	};
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_164917_i + 1LL) >= _164834_tokens.len())) {
			_20585a963_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_164917_i)++;
		_165017_token=_164834_tokens[_164917_i];
	};
	if ((_165017_token.get()._field_Id != static_cast<jule::U64>(32LLU))) {
		_20585a963_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_204352eea_FnDecl> _167417_f = _2058614c4_buildFn(_self_, _164834_tokens,true,false);;
	if (((_167417_f != nullptr) && _20435334c_IsAnon(_167417_f.ptr()))) {
		_20585a963_pushErr(_self_.ptr(), _167417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _167417_f;
}



inline void _205866e14_parseImplBody(jule::Ptr<_20585a006_parser> _self_, jule::Ptr<_20435c499_Impl>& _168138_ipl, jule::Slice<jule::Ptr<_202b89679_Token>>& _168155_tokens) {
	jule::Slice<jule::Ptr<_20583d083_stmt>> _168217_stmts = _20583d429_splitStmts(_168155_tokens);;
	{
		auto &expr = _168217_stmts;
		auto it = expr.begin();
		_iter_begin_1dbc9bb26:;
		if (it != expr.end()) {
			jule::Ptr<_20583d083_stmt> _168321_stmt = *it;
			{
				_168155_tokens=_168321_stmt.get()._field_tokens;
				jule::Ptr<_202b89679_Token> _168521_token = _168155_tokens[0LL];;
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(38LLU)) {
						_case_begin_1dbc9c484:;
						{
							_20585b623_pushDirective(_self_.ptr(), _20585b39d_buildDirective(_self_.ptr(), _168155_tokens));
							goto _iter_next_1dbc9bb26;
						}
					}
					_match_end_1dbc9cd36:;
				};
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1dbc9debe:;
						{
							jule::Ptr<_204353ec9_VarDecl> _169425_v = _20585d49e_buildVar(_self_, _168155_tokens);;
							if ((_169425_v != nullptr)) {
								_168138_ipl.get()._field_Statics = jule::alloc_for_append(_168138_ipl.get()._field_Statics,1);_168138_ipl.get()._field_Statics.__push(_169425_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1dbc9d034:;
						{
							jule::Ptr<_204352eea_FnDecl> _170125_f = _205866ae5_getMethod(_self_, _168155_tokens);;
							if ((_170125_f != nullptr)) {
								_205864d68_checkMethodReceiver(_self_.ptr(), _170125_f);
								_2058677a5_applyFnMeta(_self_.ptr(), _170125_f);
								_168138_ipl.get()._field_Methods = jule::alloc_for_append(_168138_ipl.get()._field_Methods,1);_168138_ipl.get()._field_Methods.__push(_170125_f);;
							};
						}
					}
					else {
						_case_begin_1dbc9d3ca:;
						{
							_20585a963_pushErr(_self_.ptr(), _168521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1dbc9bb26;
						}
					}
					_match_end_1dbc9d5b7:;
				};
			}
			_iter_next_1dbc9bb26:;
			++it;
			goto _iter_begin_1dbc9bb26;
		}
		_iter_end_1dbc9bb26:;
	};
}



inline jule::Ptr<_20435c499_Impl> _205867222_buildImpl(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _171433_tokens) {
	jule::Ptr<_202b89679_Token> _171517_token = _171433_tokens[0LL];;
	if ((_171433_tokens.len() < 2LL)) {
		_20585a963_pushErr(_self_.ptr(), _171517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _172117_i = 1LL;;
	jule::Ptr<_20434156b_TypeDecl> _172318_base;;
	jule::Bool _172328_ok;;
	std::tie(_172318_base,_172328_ok) = _20585c37c_buildType(_self_, _171433_tokens,(&(_172117_i)),true);
	if ((!(_172328_ok))) {
		return nullptr;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_20585a963_pushErr(_self_.ptr(), _171517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20435c499_Impl> _173217_ipl = jule::new_ptr<_20435c499_Impl>(_20435c499_Impl{._field_Base=_172318_base, });;
	_171517_token=_171433_tokens[_172117_i];
	if ((_171517_token.get()._field_Id != static_cast<jule::U64>(12LLU))) {
		if (((_171517_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_171517_token.get()._field_Kind == jule::Str("{", 1)))) {
			std::tie(_173217_ipl.get()._field_Base,_173217_ipl.get()._field_Dest) = std::make_tuple(_173217_ipl.get()._field_Dest,_173217_ipl.get()._field_Base);
			goto _julec_label_body;
		};
		_20585a336_stop(_self_.ptr());
		_20585a963_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_172117_i)++;
	if ((_172117_i >= _171433_tokens.len())) {
		_20585a336_stop(_self_.ptr());
		_20585a963_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_173217_ipl.get()._field_Dest,_172328_ok) = _20585c37c_buildType(_self_, _171433_tokens,(&(_172117_i)),true);
	if ((!(_172328_ok))) {
		return nullptr;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_20585a336_stop(_self_.ptr());
		_20585a963_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_202b89679_Token>> _177017_bodyTokens = _205858268_range(_172117_i,jule::Str("{", 1),jule::Str("}", 1),_171433_tokens);;
	if ((_177017_bodyTokens == nullptr)) {
		_20585a336_stop(_self_.ptr());
		_20585a963_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_172117_i < _171433_tokens.len())) {
		_20585a963_pushErr(_self_.ptr(), _171433_tokens[_172117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_173217_ipl.get()._field_End=_171433_tokens[(_172117_i - 1LL)];
	_205866e14_parseImplBody(_self_, _173217_ipl,_177017_bodyTokens);
	return _173217_ipl;
}



inline jule::Any _205867530_buildNodeData(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _178538_tokens) {
	jule::Ptr<_202b89679_Token> _178617_token = _178538_tokens[0LL];;
	{
		auto &_match_expr{ _178617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1dbcb0563:;
			{
				jule::Ptr<_204352eea_FnDecl> _179021_f = _2058614c4_buildFn(_self_, _178538_tokens,false,false);;
				if ((_179021_f != nullptr)) {
					_179021_f.get()._field_Global=true;
					if (_20435334c_IsAnon(_179021_f.ptr())) {
						_20585a963_pushErr(_self_.ptr(), _179021_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return static_cast<jule::Any>(_179021_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1dbcb05c9:;
			{
				return static_cast<jule::Any>(_20585d49e_buildVar(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1dbcb0640:;
			{
				return static_cast<jule::Any>(_20585c68a_buildTypeAliasDecl(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1dbcb0d6b:;
			{
				return _2058641b9_buildNodeEnumDecl(_self_, _178538_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1dbcb0dd2:;
			{
				return static_cast<jule::Any>(_205864ae3_buildStructDecl(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1dbcb0e48:;
			{
				return static_cast<jule::Any>(_205865484_buildTraitDecl(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1dbcb0eae:;
			{
				return static_cast<jule::Any>(_205867222_buildImpl(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1dbcb1036:;
			{
				return _2058667d7_buildCppLink(_self_, _178538_tokens);
			}
		}
		else {
			_case_begin_1dbcb0453:;
			{
				_20585a963_pushErr(_self_.ptr(), _178617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1dbcb03ed:;
	};
}



inline void _2058677a5_applyFnMeta(_20585a006_parser* _self_, jule::Ptr<_204352eea_FnDecl>& _182135_f) {
	_182135_f.get()._field_Directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _205867a2a_applyMeta(_20585a006_parser* _self_, _204307da1_Node& _182633_node) {
	{
		auto &_match_expr{ _182633_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_204353ec9_VarDecl>>()) {
			_case_begin_1dbcb737d:;
			{
				jule::Ptr<_204353ec9_VarDecl> _182921_v = _182633_node._field_Data.operator jule::Ptr<_204353ec9_VarDecl>();;
				if ((_182921_v == nullptr)) {
					return;;
				};
				_182921_v.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204352eea_FnDecl>>()) {
			_case_begin_1dbcb7405:;
			{
				jule::Ptr<_204352eea_FnDecl> _183621_f = _182633_node._field_Data.operator jule::Ptr<_204352eea_FnDecl>();;
				if ((_183621_f == nullptr)) {
					return;;
				};
				_2058677a5_applyFnMeta(&(*_self_), _183621_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20435b784_StructDecl>>()) {
			_case_begin_1dbcb747c:;
			{
				jule::Ptr<_20435b784_StructDecl> _184221_sd = _182633_node._field_Data.operator jule::Ptr<_20435b784_StructDecl>();;
				if ((_184221_sd == nullptr)) {
					return;;
				};
				_184221_sd.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_1dbcb716e:;
	};
}



inline void _205867ca0_pushUseDecl(jule::Ptr<_20585a006_parser> _self_, jule::Ptr<_204358c26_UseDecl>& _185136_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push(_185136_decl);;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_20585a963_pushErr(_self_.ptr(), _185136_decl.get()._field_Token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_20585ac82_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _2058680ad_pushMetaNodes(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _185938_tokens) {
	{
		auto &_match_expr{ _185938_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1dbcbd61a:;
			{
				;
				jule::Ptr<_204358c26_UseDecl> _186321_decl = _205862915_buildUseDecl(_self_.ptr(), _185938_tokens,false);;
				_205867ca0_pushUseDecl(_self_, _186321_decl);
				return true;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1dbcbd692:;
			{
				if (((_185938_tokens.len() > 1LL) && (_185938_tokens[1LL].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_204358c26_UseDecl> _186825_decl = _2058664c9_buildCppLinkUse(_self_, _185938_tokens);;
					_205867ca0_pushUseDecl(_self_, _186825_decl);
					return true;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1dbcbd719:;
			{
				_20585b623_pushDirective(_self_.ptr(), _20585b39d_buildDirective(_self_.ptr(), _185938_tokens));
				return true;
			}
		}
		_match_end_1dbcbd4d8:;
	};
	return false;
}



inline _204307da1_Node _2058683bb_parseNode(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _187934_st) {
	_204307da1_Node _188017_node = _204307da1_Node{._field_Token=_187934_st[0LL], };;
	if (_2058680ad_pushMetaNodes(_self_, _187934_st)) {
		return _188017_node;
	};
	jule::Any _188817_data = _205867530_buildNodeData(_self_, _187934_st);;
	if ((_188817_data == nullptr)) {
		return _188017_node;
	};
	_188017_node._field_Data=_188817_data;
	_205867a2a_applyMeta(_self_.ptr(), _188017_node);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_20585a963_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _188017_node;
}



inline void _205868641_appendNode(jule::Ptr<_20585a006_parser> _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _190335_st) {
	if ((_190335_st.len() == 0LL)) {
		return;;
	};
	_204307da1_Node _190717_node = _2058683bb_parseNode(_self_, _190335_st);;
	if (((_190717_node._field_Data == nullptr) || _20585a59a_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_190717_node);;
}



inline void _205868aa3_removeRange(_20585a006_parser* _self_, jule::I64 _191430_i, jule::Str _191438_kind, jule::Slice<jule::Ptr<_202b89679_Token>>& _191450_tokens, jule::Slice<jule::I64>& _191473_ranges) {
	jule::Str _191513_close = _20585907c_getCloseKindOfBrace(_191438_kind);;
	for (; (_191430_i >= 0LL); (_191430_i)--) {
		{
			jule::Ptr<_202b89679_Token> _191717_tok = _191450_tokens[_191473_ranges[_191430_i]];;
			if ((_191717_tok.get()._field_Kind != _191513_close)) {
				goto _iter_next_1dbad1b59;
			};
			_191473_ranges=jule::append(_191473_ranges.slice(0LL,_191430_i),_191473_ranges.slice((_191430_i + 1LL)));
			goto _iter_end_1dbad1b59;
		}
	_iter_next_1dbad1b59:;
	}
	_iter_end_1dbad1b59:;;
}



inline void _205868e6b_pushWrongOrderCloseErr(_20585a006_parser* _self_, jule::Ptr<_202b89679_Token>& _192642_t, jule::Slice<jule::Ptr<_202b89679_Token>>& _192654_tokens, jule::Slice<jule::I64>& _192673_ranges) {
	{
		auto &_match_expr{ _192654_tokens[_192673_ranges[(_192673_ranges.len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1dbad3e9c:;
			{
				_20585a963_pushErr(&(*_self_), _192642_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1dbad4024:;
			{
				_20585a963_pushErr(&(*_self_), _192642_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1dbad409b:;
			{
				_20585a963_pushErr(&(*_self_), _192642_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1dbad3d6a:;
	};
}



inline void _2058693cd_pushRangeClose(_20585a006_parser* _self_, jule::Ptr<_202b89679_Token> _193733_t, jule::Str _193744_left, jule::Slice<jule::Ptr<_202b89679_Token>>& _193756_tokens, jule::Slice<jule::I64>& _193779_ranges) {
	jule::I64 _193813_n = _193779_ranges.len();;
	if ((_193813_n == 0LL)) {
		{
			auto &_match_expr{ _193733_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1dbad6da1:;
				{
					_20585a963_pushErr(&(*_self_), _193733_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1dbad6e28:;
				{
					_20585a963_pushErr(&(*_self_), _193733_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1dbad6ea0:;
				{
					_20585a963_pushErr(&(*_self_), _193733_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1dbad6ce6:;
		};
		return;;
	} else if ((_193756_tokens[_193779_ranges[(_193813_n - 1LL)]].get()._field_Kind != _193744_left)) {
		_205868e6b_pushWrongOrderCloseErr(&(*_self_), _193733_t,_193756_tokens,_193779_ranges);
	};
	_205868aa3_removeRange(&(*_self_), static_cast<jule::I64>((_193813_n - 1LL)),_193733_t.get()._field_Kind,_193756_tokens,_193779_ranges);
}



inline void _205869653_checkRanges(_20585a006_parser* _self_, jule::Slice<jule::Ptr<_202b89679_Token>>& _195531_tokens) {
	jule::Slice<jule::I64> _195617_ranges = nullptr;;
	{
		auto &expr = _195531_tokens;
		auto it = expr.begin();
		_iter_begin_1dbada536:;
		if (it != expr.end()) {
			jule::I64 _195813_i = it - expr.begin();
			jule::Ptr<_202b89679_Token> &_195816_token = *it;
			{
				if ((_195816_token.get()._field_Id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1dbada536;
				};
				{
					auto &_match_expr{ _195816_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1dbadb7ce:;
						{
							_195617_ranges = jule::alloc_for_append(_195617_ranges,1);_195617_ranges.__push(_195813_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1dbadb944:;
						{
							_2058693cd_pushRangeClose(&(*_self_), _195816_token,jule::Str("(", 1),_195531_tokens,_195617_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1dbadb9aa:;
						{
							_2058693cd_pushRangeClose(&(*_self_), _195816_token,jule::Str("{", 1),_195531_tokens,_195617_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1dbadba21:;
						{
							_2058693cd_pushRangeClose(&(*_self_), _195816_token,jule::Str("[", 1),_195531_tokens,_195617_ranges);
						}
					}
					_match_end_1dbadb6be:;
				};
			}
			_iter_next_1dbada536:;
			++it;
			_195813_i++;
			goto _iter_begin_1dbada536;
		}
		_iter_end_1dbada536:;
	};
	{
		auto &expr = _195617_ranges;
		auto it = expr.begin();
		_iter_begin_1dbada4c0:;
		if (it != expr.end()) {
			jule::I64 _197616_i = *it;
			{
				jule::Ptr<_202b89679_Token> _197717_token = _195531_tokens[_197616_i];;
				{
					auto &_match_expr{ _197717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1dbade4a2:;
						{
							_20585a963_pushErr(&(*_self_), _197717_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1dbade518:;
						{
							_20585a963_pushErr(&(*_self_), _197717_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1dbade57e:;
						{
							_20585a963_pushErr(&(*_self_), _197717_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1dbade23d:;
				};
			}
			_iter_next_1dbada4c0:;
			++it;
			goto _iter_begin_1dbada4c0;
		}
		_iter_end_1dbada4c0:;
	};
}



inline void _2058698c8_parse(jule::Ptr<_20585a006_parser> _self_, jule::Ptr<_202b8ea14_File>& _198930_f) {
	_self_.get()._field_ast=jule::new_ptr<_204307202_Ast>(_204307202_Ast{._field_File=_198930_f, });
	_205869653_checkRanges(_self_.ptr(), _198930_f.get()._field_Tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_20583d083_stmt>> _199917_stmts = _20583d429_splitStmts(_198930_f.get()._field_Tokens);;
	jule::I64 _200217_i = 0LL;;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_20583d083_stmt> _200421_stmt = _199917_stmts[_200217_i];;
			if ((_200421_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200421_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(38LLU))) {
				goto _iter_end_1dbae2928;
			};
			if ((!(_20285d6d3_IsTopDirective(_200421_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1dbae2928;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_20585b39d_buildDirective(_self_.ptr(), _200421_stmt.get()._field_tokens));;
		}
	_iter_next_1dbae2928:;
	}
	_iter_end_1dbae2928:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_20583d083_stmt> _202121_stmt = _199917_stmts[_200217_i];;
			_205868641_appendNode(_self_, _202121_stmt.get()._field_tokens);
			if (_20585a59a_stopped(_self_.ptr())) {
				goto _iter_end_1dbae5ca0;
			};
		}
	_iter_next_1dbae5ca0:;
	}
	_iter_end_1dbae5ca0:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_20585a963_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20585a006_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _20586b2e2_pushErr(_20586ac1a_typeBuilder* _self_, jule::Ptr<_202b89679_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*_self_)._field_err) {
		_20585a963_pushErr((*_self_)._field_p.ptr(), _4126_token,_4141_fmt,jule::Slice<jule::Any>());
	};
}



inline void _20586b611_pushSuggestion(_20586ac1a_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*_self_)._field_err) {
		_20585ac82_pushSuggestion((*_self_)._field_p.ptr(), _4833_fmt,jule::Any(_4846_args));
	};
}



inline jule::Ptr<_20434156b_TypeDecl> _20586b875_buildPrim(_20586ac1a_typeBuilder* _self_) {
	jule::Ptr<_20434156b_TypeDecl> _5517_t = _20586a786_buildPrimType((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _5517_t;
}



inline jule::Ptr<_20434156b_TypeDecl> _20586bad9_buildNamespace(_20586ac1a_typeBuilder* _self_) {
	jule::Ptr<_20434156b_TypeDecl> _6117_t = jule::new_ptr<_20434156b_TypeDecl>(_20434156b_TypeDecl{._field_Token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_204342638_NamespaceTypeDecl> _6517_nst = jule::new_ptr<_204342638_NamespaceTypeDecl>();;
	jule::I64 _6617_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_202b89679_Token> _6821_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_6617_n & 1LL) == 0LL)) {
				if ((_6821_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
					_20586b2e2_pushErr(&(*_self_), _6821_token,jule::Str("invalid syntax", 14));
					_20586b611_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_6517_nst.get()._field_Idents = jule::alloc_for_append(_6517_nst.get()._field_Idents,1);_6517_nst.get()._field_Idents.__push(_6821_token);;
			} else if ((_6821_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
				goto _iter_end_1dbaec23a;
			};
			(_6617_n)++;
		}
	_iter_next_1dbaec23a:;
	}
	_iter_end_1dbaec23a:;;
	_6517_nst.get()._field_Idents=_6517_nst.get()._field_Idents.slice(0LL,(_6517_nst.get()._field_Idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_6517_nst.get()._field_Kind=_20586c326_buildIdent(&(*_self_));
	_6117_t.get()._field_Kind=static_cast<jule::Any>(_6517_nst);
	return _6117_t;
}



inline jule::Slice<jule::Ptr<_20434156b_TypeDecl>> _20586bd4d_buildGenerics(_20586ac1a_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_202b89679_Token> _9413_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_9413_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_9413_token.get()._field_Kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _9917_parts = _20586c0b2_identGenerics(&(*_self_));;
	if ((_9917_parts.len() == 0LL)) {
		_20586b2e2_pushErr(&(*_self_), _9413_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_20434156b_TypeDecl>> _10517_types = jule::Slice<jule::Ptr<_20434156b_TypeDecl>>::alloc(0LL,_9917_parts.len());;
	{
		auto &expr = _9917_parts;
		auto it = expr.begin();
		_iter_begin_1dbb0551d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_202b89679_Token>> _10621_part = *it;
			{
				jule::I64 _10721_j = 0LL;;
				jule::Ptr<_20434156b_TypeDecl> _10822_t;;
				std::tie(_10822_t,std::ignore) = _20585c37c_buildType((*_self_)._field_p, _10621_part,(&(_10721_j)),true);
				if ((_10721_j < _10621_part.len())) {
					_20586b2e2_pushErr(&(*_self_), _10621_part[_10721_j],jule::Str("invalid syntax", 14));
				};
				_10517_types = jule::alloc_for_append(_10517_types,1);_10517_types.__push(_10822_t);;
			}
			_iter_next_1dbb0551d:;
			++it;
			goto _iter_begin_1dbb0551d;
		}
		_iter_end_1dbb0551d:;
	};
	return _10517_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _20586c0b2_identGenerics(_20586ac1a_typeBuilder* _self_) {
	jule::I64 _11813_first = (*((*_self_)._field_i));;
	jule::I64 _11917_rangeN = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_202b89679_Token> _12117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_12117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _12117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1dbb09665:;
						{
							(_11917_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1dbb096dc:;
						{
							(_11917_rangeN)--;
						}
					}
					_match_end_1dbb09401:;
				};
			};
			if ((_11917_rangeN == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1dbb08213;
			};
		}
	_iter_next_1dbb08213:;
	}
	_iter_end_1dbb08213:;;
	jule::Slice<jule::Ptr<_202b89679_Token>> _13517_tokens = (*_self_)._field_tokens.slice((_11813_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _13618_parts;;
	jule::Slice<_20285b7ad_Log> _13625_errors;;
	std::tie(_13618_parts,_13625_errors) = _205858cd5_parts(_13517_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_13625_errors);
	};
	return _13618_parts;
}



inline jule::Ptr<_20434156b_TypeDecl> _20586c326_buildIdent(_20586ac1a_typeBuilder* _self_) {
	jule::Bool _14417_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_14417_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return _20586bad9_buildNamespace(&(*_self_));
	};
	jule::Ptr<_202b89679_Token> _14817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_204341b32_IdentTypeDecl> _14917_it = jule::new_ptr<_204341b32_IdentTypeDecl>(_204341b32_IdentTypeDecl{._field_Token=_14817_token, ._field_Ident=_14817_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_20434156b_TypeDecl> _15517_itd = jule::new_ptr<_20434156b_TypeDecl>(_20434156b_TypeDecl{._field_Token=_14817_token, ._field_Kind=static_cast<jule::Any>(_14917_it)});;
	if (((!(_14417_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_14917_it.get()._field_Generics=_20586bd4d_buildGenerics(&(*_self_));
		return _15517_itd;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_20586b2e2_pushErr(&(*_self_), _14817_token,jule::Str("invalid syntax", 14));
		return _15517_itd;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_20586b2e2_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _15517_itd;
	};
	jule::Ptr<_204342281_SubIdentTypeDecl> _17217_sit = jule::new_ptr<_204342281_SubIdentTypeDecl>();;
	_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_14917_it);;
	jule::Ptr<_20434156b_TypeDecl> _17417_ident = _20586c326_buildIdent(&(*_self_));;
	{
		auto &_match_expr{ _17417_ident.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_204341b32_IdentTypeDecl>>()) {
			_case_begin_1dbb15572:;
			{
				_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_17417_ident.get()._field_Kind.operator jule::Ptr<_204341b32_IdentTypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204342281_SubIdentTypeDecl>>()) {
			_case_begin_1dbb155d8:;
			{
				_17217_sit.get()._field_Idents=jule::append(_17217_sit.get()._field_Idents,_17417_ident.get()._field_Kind.operator jule::Ptr<_204342281_SubIdentTypeDecl>().get()._field_Idents);
			}
		}
		_match_end_1dbb154d9:;
	};
	return jule::new_ptr<_20434156b_TypeDecl>(_20434156b_TypeDecl{._field_Token=_14817_token, ._field_Kind=static_cast<jule::Any>(_17217_sit)});
}



inline jule::Ptr<_20434156b_TypeDecl> _20586c58a_buildCppLink(_20586ac1a_typeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_20586b2e2_pushErr(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_20434156b_TypeDecl> _19317_t = _20586c326_buildIdent(&(*_self_));;
	_19317_t.get()._field_Kind.operator jule::Ptr<_204341b32_IdentTypeDecl>().get()._field_CppLinked=true;
	return _19317_t;
}



inline jule::Ptr<_20434156b_TypeDecl> _20586c7ee_buildFn(_20586ac1a_typeBuilder* _self_) {
	jule::Ptr<_202b89679_Token> _19917_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_204352eea_FnDecl> _20017_f = _205861073_buildFnPrototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_20017_f == nullptr)) {
		return nullptr;
	};
	if ((!(_20435334c_IsAnon(_20017_f.ptr())))) {
		_20586b2e2_pushErr(&(*_self_), _20017_f.get()._field_Token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_20434156b_TypeDecl>(_20434156b_TypeDecl{._field_Token=_19917_token, ._field_Kind=static_cast<jule::Any>(_20017_f)});
}



inline jule::Ptr<_20434156b_TypeDecl> _20586ca63_buildPtr(_20586ac1a_typeBuilder* _self_) {
	jule::Ptr<_202b89679_Token> _21417_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_20586b2e2_pushErr(&(*_self_), _21417_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_20434156b_TypeDecl>(_20434156b_TypeDecl{._field_Token=_21417_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_2043433e7_PtrTypeDecl>(_2043433e7_PtrTypeDecl{._field_Elem=nullptr}))});
	};
	jule::Ptr<_20434156b_TypeDecl> _23117_elem = _20586dc51_step(&(*_self_));;
	if ((_23117_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_20434156b_TypeDecl>(_20434156b_TypeDecl{._field_Token=_21417_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_2043433e7_PtrTypeDecl>(_2043433e7_PtrTypeDecl{._field_Elem=_23117_elem}))});
}



inline jule::Ptr<_20434156b_TypeDecl> _20586ccc7_buildSptr(_20586ac1a_typeBuilder* _self_) {
	jule::Ptr<_202b89679_Token> _24517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_20586b2e2_pushErr(&(*_self_), _24517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_20434156b_TypeDecl> _25217_elem = _20586dc51_step(&(*_self_));;
	if ((_25217_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_20434156b_TypeDecl>(_20434156b_TypeDecl{._field_Token=_24517_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_204342924_SptrTypeDecl>(_204342924_SptrTypeDecl{._field_Elem=_25217_elem}))});
}



inline jule::Ptr<_20434156b_TypeDecl> _20586d03b_buildOp(_20586ac1a_typeBuilder* _self_) {
	jule::Ptr<_202b89679_Token> _26617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _26617_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1dbde0e35:;
			{
				return _20586ca63_buildPtr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1dbde0e9b:;
			{
				return _20586ccc7_buildSptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1dbde1012:;
			{
				return jule::new_ptr<_20434156b_TypeDecl>(_20434156b_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_204342924_SptrTypeDecl>(_204342924_SptrTypeDecl{._field_Elem=_20586ccc7_buildSptr(&(*_self_))}))});
			}
		}
		else {
			_case_begin_1dbde0d7a:;
			{
				_20586b2e2_pushErr(&(*_self_), _26617_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1dbde0d14:;
	};
}



inline jule::Ptr<_20434156b_TypeDecl> _20586d2a0_buildSlc(_20586ac1a_typeBuilder* _self_) {
	jule::Ptr<_202b89679_Token> _28517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_20434156b_TypeDecl> _28717_elem = _20586dc51_step(&(*_self_));;
	if ((_28717_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_20434156b_TypeDecl>(_20434156b_TypeDecl{._field_Token=_28517_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_204342d20_SlcTypeDecl>(_204342d20_SlcTypeDecl{._field_Elem=_28717_elem}))});
}



inline jule::Ptr<_20434156b_TypeDecl> _20586d514_buildArr(_20586ac1a_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_202b89679_Token>> _30017_exprTokens = _205858268_range((*((*_self_)._field_i)),jule::Str("[", 1),jule::Str("]", 1),(*_self_)._field_tokens);;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_20586b2e2_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Ptr<_20434156b_TypeDecl> _30617_elem = _20586dc51_step(&(*_self_));;
	if ((_30617_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_204343a79_ArrTypeDecl> _31117_arrt = jule::new_ptr<_204343a79_ArrTypeDecl>(_204343a79_ArrTypeDecl{._field_Elem=_30617_elem, });;
	jule::Ptr<_202b89679_Token> _31517_token = _30017_exprTokens[0LL];;
	if ((((_30017_exprTokens.len() == 1LL) && (_31517_token.get()._field_Id == static_cast<jule::U64>(7LLU))) && (_31517_token.get()._field_Kind == jule::Str("...", 3)))) {
	} else {
		_31117_arrt.get()._field_Size=_20585b090_buildExpr((*_self_)._field_p, _30017_exprTokens);
	};
	return jule::new_ptr<_20434156b_TypeDecl>(_20434156b_TypeDecl{._field_Token=_31517_token, ._field_Kind=static_cast<jule::Any>(_31117_arrt)});
}



inline jule::Ptr<_20434156b_TypeDecl> _20586d778_buildMap(_20586ac1a_typeBuilder* _self_) {
	jule::Ptr<_202b89679_Token> _32917_mapToken = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_20586b2e2_pushErr(&(*_self_), _32917_mapToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_202b89679_Token>> _33717_keyTokens = _205858268_range((*((*_self_)._field_i)),jule::Str("[", 1),jule::Str("]", 1),(*_self_)._field_tokens);;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_20586b2e2_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	} else if ((_33717_keyTokens.len() == 0LL)) {
		_20586b2e2_pushErr(&(*_self_), _32917_mapToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Ptr<_2043442c7_MapTypeDecl> _34617_mapt = jule::new_ptr<_2043442c7_MapTypeDecl>();;
	jule::I64 _34717_j = 0LL;;
	jule::Ptr<_20434156b_TypeDecl> _34818_keyt;;
	jule::Bool _34828_ok;;
	std::tie(_34818_keyt,_34828_ok) = _20585c37c_buildType((*_self_)._field_p, _33717_keyTokens,(&(_34717_j)),(*_self_)._field_err);
	if ((!(_34828_ok))) {
		return nullptr;
	} else if ((_34717_j < _33717_keyTokens.len())) {
		_20586b2e2_pushErr(&(*_self_), _33717_keyTokens[_34717_j],jule::Str("invalid syntax", 14));
	};
	_34617_mapt.get()._field_Key=_34818_keyt;
	jule::Ptr<_20434156b_TypeDecl> _35618_valt;;
	std::tie(_35618_valt,_34828_ok) = _20585c37c_buildType((*_self_)._field_p, (*_self_)._field_tokens,(*_self_)._field_i,(*_self_)._field_err);
	if ((!(_34828_ok))) {
		return nullptr;
	};
	_34617_mapt.get()._field_Val=_35618_valt;
	return jule::new_ptr<_20434156b_TypeDecl>(_20434156b_TypeDecl{._field_Token=_32917_mapToken, ._field_Kind=static_cast<jule::Any>(_34617_mapt)});
}



inline jule::Ptr<_20434156b_TypeDecl> _20586d9dc_buildEnumerable(_20586ac1a_typeBuilder* _self_) {
	jule::Ptr<_202b89679_Token> _36817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_36817_token.get()._field_Id != static_cast<jule::U64>(3LLU))) || (_36817_token.get()._field_Kind != jule::Str("[", 1)))) {
		_20586b2e2_pushErr(&(*_self_), _36817_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_36817_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_36817_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_36817_token.get()._field_Kind == jule::Str("]", 1)))) {
		return _20586d2a0_buildSlc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	return _20586d514_buildArr(&(*_self_));
}



inline jule::Ptr<_20434156b_TypeDecl> _20586dc51_step(_20586ac1a_typeBuilder* _self_) {
	jule::Ptr<_202b89679_Token> _38513_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _38513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1dbe06d3b:;
			{
				return _20586b875_buildPrim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1dbe07347:;
			{
				return _20586c326_buildIdent(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1dbe073ad:;
			{
				return _20586c58a_buildCppLink(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1dbe07215:;
			{
				return _20586c7ee_buildFn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1dbe0727b:;
			{
				return _20586d03b_buildOp(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1dbe06610:;
			{
				return _20586d9dc_buildEnumerable(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1dbe06676:;
			{
				return _20586d778_buildMap(&(*_self_));
			}
		}
		else {
			_case_begin_1dbe06599:;
			{
				((*((*_self_)._field_i)))++;
				_20586b2e2_pushErr(&(*_self_), _38513_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1dbe06533:;
	};
}



inline std::tuple<jule::Ptr<_20434156b_TypeDecl>,jule::Bool> _20586deb5_build(_20586ac1a_typeBuilder* _self_) {
	jule::Bool _41044_ok = jule::Bool();
	jule::Ptr<_20434156b_TypeDecl> _41117_root = _20586dc51_step(&(*_self_));;
	if ((_41117_root == nullptr)) {
		_41044_ok = false;
		return std::make_tuple(_20586a522_buildVoidType(),_41044_ok);
	};
	_41044_ok = true;
	return std::make_tuple(_41117_root,_41044_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _20586ac1a_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20518b9c0_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _20518d373_pushErr(_20518cd23_directiveEval* _self_, jule::Ptr<_202b89679_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_20285b7ad_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_20285bbed_Logf(_2137_fmt,jule::Any(_2150_args)), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _20518d72a_splitOperans(_20518cd23_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_202b89679_Token>>& _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>>::alloc(0LL,10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3351_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_202b89679_Token> _4017_b = _3351_tokens[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1dbe3021b:;
						{
							(_3717_rangeN)++;
							goto _iter_next_1dbe2e0b6;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1dbe30293:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_1dbe30051:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1dbe2e0b6;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1dbe2e0b6:;
	}
	_iter_end_1dbe2e0b6:;;
	if ((_3817_last < _3351_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last));;
	} else {
		_20518d373_pushErr(&(*_self_), _3351_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _20518da38_evalDirectiveIdent(_20518cd23_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1dbe3365e:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7333_ident)) {
					return true;
				};
			}
			_iter_next_1dbe3365e:;
			++it;
			goto _iter_begin_1dbe3365e;
		}
		_iter_end_1dbe3365e:;
	};
	return false;
}



inline jule::Bool _20518dd46_evalDirectivePart(_20518cd23_directiveEval* _self_, jule::Slice<jule::Ptr<_202b89679_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_8740_part[0LL].get()._field_Kind == jule::Str("!", 1)));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_20518d373_pushErr(&(*_self_), _8740_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _20518da38_evalDirectiveIdent(&(*_self_), _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _20518e0aa_eval(_20518cd23_directiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_Args.len() == 0LL)) {
		_20518d373_pushErr(&(*_self_), (*_self_)._field_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _11317_logicalOrParts = _20518d72a_splitOperans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_Args);;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logicalOrParts;
		auto it = expr.begin();
		_iter_begin_1dbe39e3a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_202b89679_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _12021_logicalAndParts = _20518d72a_splitOperans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logicalAndParts;
					auto it = expr.begin();
					_iter_begin_1dbe3b964:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_202b89679_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_202b89679_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_Kind == jule::Str("(", 1)))) {
								jule::Ptr<_202b89679_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_Kind != jule::Str(")", 1)))) {
									_20518d373_pushErr(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_andPart=_12525_andPart.slice(1LL,(_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _20518dd46_evalDirectivePart(&(*_self_), _12525_andPart));
						}
						_iter_next_1dbe3b964:;
						++it;
						goto _iter_begin_1dbe3b964;
					}
					_iter_end_1dbe3b964:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1dbe39e3a:;
			++it;
			goto _iter_begin_1dbe39e3a;
		}
		_iter_end_1dbe39e3a:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _20518cd23_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2052896b1_JuleImporter> static__205308d29_New(_20518b9c0_CompileInfo _5819_info) {
	jule::Ptr<_2052896b1_JuleImporter> _5917_imp = jule::new_ptr<_2052896b1_JuleImporter>(_2052896b1_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_2028954d9_PathStdlib}), });;
	_20518c2d9_initVars(_5917_imp.get()._field_vars,_5819_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_20500ae16_ImportInfo>> _2053145d7_AllPackages(_2052896b1_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _20533a366_SetModPath(_2052896b1_JuleImporter* _self_, jule::Str _7529_path) {
	(*_self_)._field_mod=_7529_path;
}



inline jule::Str _2053ed627_GetModPath(_2052896b1_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _20540edec_ModById(_2052896b1_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*_self_)._field_mods[_8322_id];
}



inline jule::Ptr<_20500ae16_ImportInfo> _20541aa73_GetImport(_2052896b1_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1dbe44571:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;
				};
			}
			_iter_next_1dbe44571:;
			++it;
			goto _iter_begin_1dbe44571;
		}
		_iter_end_1dbe44571:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_204307202_Ast>>,jule::Slice<_20285b7ad_Log>> _20546986e_ImportPackage(_2052896b1_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	jule::Slice<jule::Ptr<_2009634dd_DirEntry>> _9717_dirents = ({
		auto except = static__2017969e6_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_20285b7ad_Log>::make({_2052e7444_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))}));
		} jule::Slice<jule::Ptr<_2009634dd_DirEntry>>();});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _20519d0a8_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_newMod;
			jule::Slice<_20285b7ad_Log> _10525_errs = _20519d33e_CheckModuleFile((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_204307202_Ast>> _11217_asts = jule::Slice<jule::Ptr<_204307202_Ast>>::alloc(0LL,_9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1dbe48cb2:;
		if (it != expr.end()) {
			jule::Ptr<_2009634dd_DirEntry> _11316_dirent = *it;
			{
				if ((_200970792_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_2027ceda2_HasSuffix(_11316_dirent.get()._field_Name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1dbe48cb2;
				};
				jule::Str _11917__path = _201840276_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_202b8ea14_File> _12021_file = _202b91043_NewFileSet(_11917__path);;
				_202b90196_Fill(_12021_file.ptr(), _205283c4e_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_20285b7ad_Log> _12221_errors = _202b9b977_Lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_2057e150e_FileInfo> _12721_finfo = _2057e41d2_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_Errors);
				};
				if ((!(_205171db2_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1dbe48cb2;
				};
				jule::Bool _13718_r;;
				jule::Slice<_20285b7ad_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _2054908b7_isPassBuildDirectives(&(*_self_), _12721_finfo.get()._field_Ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_1dbe48cb2;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_1dbe48cb2:;
			++it;
			goto _iter_begin_1dbe48cb2;
		}
		_iter_end_1dbe48cb2:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _20547c530_Imported(_2052896b1_JuleImporter* _self_, jule::Ptr<_20500ae16_ImportInfo> _15331_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1dbe4c6cd:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1dbe4c6cd:;
			++it;
			goto _iter_begin_1dbe4c6cd;
		}
		_iter_end_1dbe4c6cd:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1dbe514b2:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1dbe514b2:;
				++it;
				_16217_i++;
				goto _iter_begin_1dbe514b2;
			}
			_iter_end_1dbe514b2:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15331_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_20285b7ad_Log>> _2054908b7_isPassBuildDirectives(_2052896b1_JuleImporter* _self_, jule::Ptr<_204307202_Ast>& _17945_file) {
	{
		auto &expr = _17945_file.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1dbe549c1:;
		if (it != expr.end()) {
			jule::Ptr<_20430829c_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_Tag.get()._field_Kind != jule::Str("build", 5))) {
					goto _iter_next_1dbe549c1;
				};
				_20518cd23_directiveEval _18421_de = _20518cd23_directiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _20518e0aa_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_1dbe549c1:;
			++it;
			goto _iter_begin_1dbe549c1;
		}
		_iter_end_1dbe549c1:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _2052896b1_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _205829877_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dbe78264_isCommonOrdered(jule::Slice<jule::Ptr<_20433367e_Struct>>& _1835_s, jule::Ptr<_20433367e_Struct> _1844_t) {
	jule::Ptr<_20433367e_Struct>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_20433367e_Struct>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_1dbe7aeae:;
		if (it != expr.end()) {
			jule::Ptr<_20433367e_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_1dbe7aeae;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1dbe7aeae:;
			++it;
			goto _iter_begin_1dbe7aeae;
		}
		_iter_end_1dbe7aeae:;
	};
	return false;
}

inline jule::Bool _1dbe81a75_isCommonOrdered(jule::Slice<jule::Ptr<_205031cb6_Var>>& _1835_s, jule::Ptr<_205031cb6_Var> _1844_t) {
	jule::Ptr<_205031cb6_Var>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_205031cb6_Var>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_1dbe8477b:;
		if (it != expr.end()) {
			jule::Ptr<_205031cb6_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_1dbe8477b;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1dbe8477b:;
			++it;
			goto _iter_begin_1dbe8477b;
		}
		_iter_end_1dbe8477b:;
	};
	return false;
}



inline void _1dbe7420a_orderCommon(jule::Slice<jule::Ptr<_20433367e_Struct>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_1dbe7552a:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_20433367e_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1dbe7552a:;
			++it;
			_4114_j++;
			goto _iter_begin_1dbe7552a;
		}
		_iter_end_1dbe7552a:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1dbe78264_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1dbe77b7b:;
			}
			_iter_end_1dbe77b7b:;;
		}
	_iter_next_1dbe754a3:;
	}
	_iter_end_1dbe754a3:;;
}

inline void _1dbe74ccc_orderCommon(jule::Slice<jule::Ptr<_205031cb6_Var>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_1dbe7dd3b:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_205031cb6_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1dbe7dd3b:;
			++it;
			_4114_j++;
			goto _iter_begin_1dbe7dd3b;
		}
		_iter_end_1dbe7dd3b:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1dbe81a75_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1dbe8148c:;
			}
			_iter_end_1dbe8148c:;;
		}
	_iter_next_1dbe7dcb4:;
	}
	_iter_end_1dbe7dcb4:;;
}



inline void static__20566d644_orderStructures(jule::Slice<jule::Ptr<_20433367e_Struct>>& _6136_structs) {
	_1dbe7420a_orderCommon(_6136_structs);
}



inline void static__20567e523_orderVars(jule::Slice<jule::Ptr<_205031cb6_Var>>& _6730_vars) {
	_1dbe74ccc_orderCommon(_6730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _20527bb6a_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _205939d2d_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _205971507_optimizeChild(jule::Ptr<_20597102e_scopeDeadCode> _self_, jule::Ptr<_204edc645_Scope>& _3938_s) {
	jule::Ptr<_20597102e_scopeDeadCode> _4017_sdc = jule::new_ptr<_20597102e_scopeDeadCode>(_20597102e_scopeDeadCode{._field_parent=_self_, ._field_s=_3938_s, ._field_stmts=(&(_3938_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_205973b47_optimizeStmts(_4017_sdc);
	};
}



inline void _20597179e_optimizeBodyChildExceptional(jule::Ptr<_20597102e_scopeDeadCode> _self_, jule::Ptr<_204edc645_Scope>& _5053_s) {
	jule::Ptr<_20597102e_scopeDeadCode> _5117_sdc = jule::new_ptr<_20597102e_scopeDeadCode>(_20597102e_scopeDeadCode{._field_s=_5053_s, ._field_stmts=(&(_5053_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_205973b47_optimizeStmts(_5117_sdc);
	};
}



inline void _205971a35_optimizeBodyChild(jule::Ptr<_20597102e_scopeDeadCode> _self_, jule::Ptr<_204edc645_Scope>& _6142_s) {
	jule::Ptr<_20597102e_scopeDeadCode> _6217_sdc = jule::new_ptr<_20597102e_scopeDeadCode>(_20597102e_scopeDeadCode{._field_s=_6142_s, ._field_stmts=(&(_6142_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_205973b47_optimizeStmts(_6217_sdc);
	};
}



inline void _205971caa_optimizeExprModel(jule::Ptr<_20597102e_scopeDeadCode> _self_, jule::Any& _7142_model) {
	_205974e89_exprDeadCode _7213_edc = static__2059755b6_new(_self_);;
	_20597b2d1_optimize(&_7213_edc, _7142_model);
}



inline void _205971e86_eliminateFollowed(_20597102e_scopeDeadCode* _self_) {
	if (((*((*_self_)._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_20597102e_scopeDeadCode> _8317_parent = (*_self_)._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL,(_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1dc0091a2:;
	}
	_iter_end_1dc0091a2:;;
}



inline void _20597220b_pushGoto(jule::Ptr<_20597102e_scopeDeadCode> _self_, jule::Ptr<_204ee0170_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1dc00be74:;
	}
	_iter_end_1dc00be74:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_204ee0170_GotoSt>>::make({_9232_gt}));
}



inline void _205972481_pushLabel(jule::Ptr<_20597102e_scopeDeadCode> _self_, jule::Ptr<_204eded84_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_1dc00d915;
			};
			(_10317_i)++;
		}
	_iter_next_1dc00d915:;
	}
	_iter_end_1dc00d915:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_204eded84_Label>>::make({_10233_l}));
}



inline void _205972706_optimizeRangeIter(jule::Ptr<_20597102e_scopeDeadCode> _self_, jule::Ptr<_204ede2e5_RangeIter> _11541_it) {
	_205971caa_optimizeExprModel(_self_, _11541_it.get()._field_Expr.get()._field_Model);
	_205971a35_optimizeBodyChild(_self_, _11541_it.get()._field_Scope);
}



inline void _20597297b_optimizeWhileIter(jule::Ptr<_20597102e_scopeDeadCode> _self_, jule::Ptr<_204edd910_WhileIter> _12041_it) {
	_205971caa_optimizeExprModel(_self_, _12041_it.get()._field_Expr);
	if ((_12041_it.get()._field_Next != nullptr)) {
		_20597396b_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_205971a35_optimizeBodyChild(_self_, _12041_it.get()._field_Scope);
}



inline void _205972c01_optimizeInfIter(jule::Ptr<_20597102e_scopeDeadCode> _self_, jule::Ptr<_204edd48c_InfIter> _12839_it) {
	_205971a35_optimizeBodyChild(_self_, _12839_it.get()._field_Scope);
}



inline void _205972e76_optimizeConditional(jule::Ptr<_20597102e_scopeDeadCode> _self_, jule::Ptr<_204edd1a1_Conditional> _13243_c) {
	{
		auto &expr = _13243_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1dc015301:;
		if (it != expr.end()) {
			jule::Ptr<_204edca41_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_205971caa_optimizeExprModel(_self_, _13321_case.get()._field_Expr);
					_205971a35_optimizeBodyChild(_self_, _13321_case.get()._field_Scope);
				};
			}
			_iter_next_1dc015301:;
			++it;
			goto _iter_begin_1dc015301;
		}
		_iter_end_1dc015301:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_205971507_optimizeChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		} else {
			_205971a35_optimizeBodyChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _2059731eb_optimizeMatch(jule::Ptr<_20597102e_scopeDeadCode> _self_, jule::Ptr<_204ee1391_Match> _15037_m) {
	{
		auto &expr = _15037_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1dc018227:;
		if (it != expr.end()) {
			jule::Ptr<_204ee1ddb_Case> _15121_case = *it;
			{
				{
					auto &expr = _15121_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1dc018aeb:;
					if (it != expr.end()) {
						jule::Ptr<_20507eb49_Data> _15225_expr = *it;
						{
							_205971caa_optimizeExprModel(_self_, _15225_expr.get()._field_Model);
						}
						_iter_next_1dc018aeb:;
						++it;
						goto _iter_begin_1dc018aeb;
					}
					_iter_end_1dc018aeb:;
				};
				_205971a35_optimizeBodyChild(_self_, _15121_case.get()._field_Scope);
			}
			_iter_next_1dc018227:;
			++it;
			goto _iter_begin_1dc018227;
		}
		_iter_end_1dc018227:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_205971507_optimizeChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		} else {
			_205971a35_optimizeBodyChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _205973471_optimizeAssign(jule::Ptr<_20597102e_scopeDeadCode> _self_, jule::Ptr<_204ee099a_Assign> _16838_assign) {
	_205971caa_optimizeExprModel(_self_, _16838_assign.get()._field_L.get()._field_Model);
	_205971caa_optimizeExprModel(_self_, _16838_assign.get()._field_R.get()._field_Model);
}



inline void _2059736e6_optimizeMultiAssign(jule::Ptr<_20597102e_scopeDeadCode> _self_, jule::Ptr<_204ee0d52_MultiAssign> _17343_assign) {
	{
		auto &expr = _17343_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1dc01c47e:;
		if (it != expr.end()) {
			jule::Any _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_205971caa_optimizeExprModel(_self_, _17421_l);
				};
			}
			_iter_next_1dc01c47e:;
			++it;
			goto _iter_begin_1dc01c47e;
		}
		_iter_end_1dc01c47e:;
	};
	_205971caa_optimizeExprModel(_self_, _17343_assign.get()._field_R);
}



inline void _20597396b_optimizeStmt(jule::Ptr<_20597102e_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type_is<jule::Ptr<_204edc645_Scope>>()) {
			_case_begin_1dc01db78:;
			{
				jule::Ptr<_204edc645_Scope> _18521_scope = _18236_st.operator jule::Ptr<_204edc645_Scope>();;
				if (_18521_scope.get()._field_Deferred) {
					_205973e33_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_205971507_optimizeChild(_self_, _18521_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ede2e5_RangeIter>>()) {
			_case_begin_1dc01dcdd:;
			{
				_205972706_optimizeRangeIter(_self_, _18236_st.operator jule::Ptr<_204ede2e5_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204edd910_WhileIter>>()) {
			_case_begin_1dc01dd54:;
			{
				_20597297b_optimizeWhileIter(_self_, _18236_st.operator jule::Ptr<_204edd910_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204edd48c_InfIter>>()) {
			_case_begin_1dc01ddcb:;
			{
				_205972c01_optimizeInfIter(_self_, _18236_st.operator jule::Ptr<_204edd48c_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204edd1a1_Conditional>>()) {
			_case_begin_1dc01de53:;
			{
				_205972e76_optimizeConditional(_self_, _18236_st.operator jule::Ptr<_204edd1a1_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ee1391_Match>>()) {
			_case_begin_1dc01deca:;
			{
				_2059731eb_optimizeMatch(_self_, _18236_st.operator jule::Ptr<_204ee1391_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ee099a_Assign>>()) {
			_case_begin_1dc01e052:;
			{
				_205973471_optimizeAssign(_self_, _18236_st.operator jule::Ptr<_204ee099a_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ee0d52_MultiAssign>>()) {
			_case_begin_1dc01e0c9:;
			{
				_2059736e6_optimizeMultiAssign(_self_, _18236_st.operator jule::Ptr<_204ee0d52_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20507eb49_Data>>()) {
			_case_begin_1dc01e151:;
			{
				jule::Ptr<_20507eb49_Data> _20621_d = _18236_st.operator jule::Ptr<_20507eb49_Data>();;
				if (_self_.get()._field_except) {
					goto _match_end_1dc01dc88;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_204ec486e_BuiltinPanicCallExprModel>>()) {
						_case_begin_1dc025399:;
						{
							_205971e86_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1dc024ad5:;
						{
							_205971caa_optimizeExprModel(_self_, _20621_d.get()._field_Model);
						}
					}
					_match_end_1dc024a80:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ee2914_RetSt>>()) {
			_case_begin_1dc01e1c8:;
			{
				_205971e86_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ee0170_GotoSt>>()) {
			_case_begin_1dc01e250:;
			{
				_20597220b_pushGoto(_self_, _18236_st.operator jule::Ptr<_204ee0170_GotoSt>());
				_205971e86_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204eded84_Label>>()) {
			_case_begin_1dc01e2c7:;
			{
				_205972481_pushLabel(_self_, _18236_st.operator jule::Ptr<_204eded84_Label>());
			}
		}
		_match_end_1dc01dc88:;
	};
}



inline void _205973b47_optimizeStmts(jule::Ptr<_20597102e_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_20597396b_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1dc0272be:;
	}
	_iter_end_1dc0272be:;;
}







std::ostream &operator<<(std::ostream &_Stream, _20597102e_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _205974e89_exprDeadCode static__2059755b6_new(jule::Ptr<_20597102e_scopeDeadCode>& _5024_s) {
	return _205974e89_exprDeadCode{._field_s=_5024_s};
}



inline void _20597583b_binary(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec152a_BinopExprModel> _5625_m) {
	_20597b2d1_optimize(&(*_self_), _5625_m.get()._field_Left.get()._field_Model);
	_20597b2d1_optimize(&(*_self_), _5625_m.get()._field_Right.get()._field_Model);
}



inline void _205975ab1_unary(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec1717_UnaryExprModel> _6124_m) {
	_20597b2d1_optimize(&(*_self_), _6124_m.get()._field_Expr.get()._field_Model);
}



inline void _205975d36_structureLit(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec1ae1_StructLitExprModel> _6531_m) {
	{
		auto &expr = _6531_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1dc02a877:;
		if (it != expr.end()) {
			jule::Ptr<_204ec1904_StructArgExprModel> _6621_arg = *it;
			{
				_20597b2d1_optimize(&(*_self_), _6621_arg.get()._field_Expr);
			}
			_iter_next_1dc02a877:;
			++it;
			goto _iter_begin_1dc02a877;
		}
		_iter_end_1dc02a877:;
	};
}



inline void _2059760ab_allocStructure(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec1ccd_AllocStructLitExprModel> _7133_m) {
	_205975d36_structureLit(&(*_self_), _7133_m.get()._field_Lit);
}



inline void _205976331_casting(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec1eba_CastingExprModel> _7526_m) {
	_20597b2d1_optimize(&(*_self_), _7526_m.get()._field_Expr);
}



inline void _2059765a6_args(_205974e89_exprDeadCode* _self_, jule::Slice<jule::Any>& _7924_args) {
	{
		auto &expr = _7924_args;
		auto it = expr.begin();
		_iter_begin_1dc02cc53:;
		if (it != expr.end()) {
			jule::Any _8021_arg = *it;
			{
				_20597b2d1_optimize(&(*_self_), _8021_arg);
			}
			_iter_next_1dc02cc53:;
			++it;
			goto _iter_begin_1dc02cc53;
		}
		_iter_end_1dc02cc53:;
	};
}



inline void _20597682b_funcCall(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec21a7_FnCallExprModel> _8527_m) {
	_20597b2d1_optimize(&(*_self_), _8527_m.get()._field_Expr);
	_2059765a6_args(&(*_self_), _8527_m.get()._field_Args);
	if ((_8527_m.get()._field_Except != nullptr)) {
		_20597179e_optimizeBodyChildExceptional((*_self_)._field_s, _8527_m.get()._field_Except);
	};
}



inline void _205976aa1_slice(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec2394_SliceExprModel> _9324_m) {
	_2059765a6_args(&(*_self_), _9324_m.get()._field_Elems);
}



inline void _205976d26_array(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec3818_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_20597b2d1_optimize(&(*_self_), _9724_m.get()._field_Elems[0LL]);
	};
	_2059765a6_args(&(*_self_), _9724_m.get()._field_Elems);
}



inline void _20597709b_indexing(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec2581_IndexingExprModel> _10427_m) {
	_20597b2d1_optimize(&(*_self_), _10427_m.get()._field_Expr.get()._field_Model);
	_20597b2d1_optimize(&(*_self_), _10427_m.get()._field_Index.get()._field_Model);
}



inline void _205977321_anonFunc(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec276d_AnonFnExprModel> _10927_m) {
	_205973e33_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _205977596_mapExpr(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec2b47_MapExprModel> _11326_m) {
	{
		auto &expr = _11326_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1dc034353:;
		if (it != expr.end()) {
			jule::Ptr<_204ec295a_KeyValPairExprModel> _11421_pair = *it;
			{
				_20597b2d1_optimize(&(*_self_), _11421_pair.get()._field_Key);
				_20597b2d1_optimize(&(*_self_), _11421_pair.get()._field_Val);
			}
			_iter_next_1dc034353:;
			++it;
			goto _iter_begin_1dc034353;
		}
		_iter_end_1dc034353:;
	};
}



inline void _20597781b_slicing(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec2d34_SlicingExprModel> _12026_m) {
	_20597b2d1_optimize(&(*_self_), _12026_m.get()._field_Expr);
	_20597b2d1_optimize(&(*_self_), _12026_m.get()._field_Left);
	if ((_12026_m.get()._field_Right != nullptr)) {
		_20597b2d1_optimize(&(*_self_), _12026_m.get()._field_Right);
	};
}



inline void _205977a91_traitSub(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec3021_TraitSubIdentExprModel> _12827_m) {
	_20597b2d1_optimize(&(*_self_), _12827_m.get()._field_Expr);
}



inline void _205977d16_structureSub(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec343e_StructSubIdentExprModel> _13231_m) {
	_20597b2d1_optimize(&(*_self_), _13231_m.get()._field_Expr.get()._field_Model);
}



inline void _20597808b_commonSub(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec3be2_CommonSubIdentExprModel> _13628_m) {
	_20597b2d1_optimize(&(*_self_), _13628_m.get()._field_Expr);
}



inline void _205978311_tuple(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec3dce_TupleExprModel> _14024_m) {
	{
		auto &expr = _14024_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1dc038c70:;
		if (it != expr.end()) {
			jule::Ptr<_20507eb49_Data> _14121_d = *it;
			{
				_20597b2d1_optimize(&(*_self_), _14121_d.get()._field_Model);
			}
			_iter_next_1dc038c70:;
			++it;
			goto _iter_begin_1dc038c70;
		}
		_iter_end_1dc038c70:;
	};
}



inline void _205978586_newCall(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec4682_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_20597b2d1_optimize(&(*_self_), _14626_m.get()._field_Init);
	};
}



inline void _20597880b_outCall(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec40bb_BuiltinOutCallExprModel> _15226_m) {
	_20597b2d1_optimize(&(*_self_), _15226_m.get()._field_Expr);
}



inline void _205978a81_outlnCall(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec42a8_BuiltinOutlnCallExprModel> _15628_m) {
	_20597b2d1_optimize(&(*_self_), _15628_m.get()._field_Expr);
}



inline void _205978d06_panicCall(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec486e_BuiltinPanicCallExprModel> _16028_m) {
	_20597b2d1_optimize(&(*_self_), _16028_m.get()._field_Expr);
}



inline void _20597907b_assertCall(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec4a5b_BuiltinAssertCallExprModel> _16429_m) {
	_20597b2d1_optimize(&(*_self_), _16429_m.get()._field_Expr);
}



inline void _205979301_errorCall(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel> _16828_m) {
	_20597b2d1_optimize(&(*_self_), _16828_m.get()._field_Err);
}



inline void _205979576_makeCall(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec4c48_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_20597b2d1_optimize(&(*_self_), _17227_m.get()._field_Len);
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_20597b2d1_optimize(&(*_self_), _17227_m.get()._field_Cap);
	};
}



inline void _2059797eb_appendCall(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec4e35_BuiltinAppendCallExprModel> _18129_m) {
	_20597b2d1_optimize(&(*_self_), _18129_m.get()._field_Dest);
	_20597b2d1_optimize(&(*_self_), _18129_m.get()._field_Elements);
}



inline void _205979a71_lenCall(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec5122_BuiltinLenCallExprModel> _18626_m) {
	_20597b2d1_optimize(&(*_self_), _18626_m.get()._field_Expr.get()._field_Model);
}



inline void _205979ce6_capCall(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec530e_BuiltinCapCallExprModel> _19026_m) {
	_20597b2d1_optimize(&(*_self_), _19026_m.get()._field_Expr.get()._field_Model);
}



inline void _20597a06b_cloneCall(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec4495_BuiltinCloneCallExprModel> _19428_m) {
	_20597b2d1_optimize(&(*_self_), _19428_m.get()._field_Expr);
}



inline void _20597a2e1_deleteCall(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec320d_BuiltinDeleteCallExprModel> _19829_m) {
	_20597b2d1_optimize(&(*_self_), _19829_m.get()._field_Dest.get()._field_Model);
	if ((_19829_m.get()._field_Key != nullptr)) {
		_20597b2d1_optimize(&(*_self_), _19829_m.get()._field_Key.get()._field_Model);
	};
}



inline void _20597a566_sizeof(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec5d48_SizeofExprModel> _20525_m) {
	_20597b2d1_optimize(&(*_self_), _20525_m.get()._field_Expr);
}



inline void _20597a7db_alignof(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec6035_AlignofExprModel> _20926_m) {
	_20597b2d1_optimize(&(*_self_), _20926_m.get()._field_Expr);
}



inline void _20597aa61_integratedToStr(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec640e_IntegratedToStrExprModel> _21334_m) {
	_20597b2d1_optimize(&(*_self_), _21334_m.get()._field_Expr);
}



inline void _20597acd6_free(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec67d8_FreeExprModel> _21723_m) {
	_20597b2d1_optimize(&(*_self_), _21723_m.get()._field_Expr);
}



inline void _20597b05b_backendEmit(_205974e89_exprDeadCode* _self_, jule::Ptr<_204ec65eb_BackendEmitExprModel> _22130_m) {
	_2059765a6_args(&(*_self_), _22130_m.get()._field_Exprs);
}



inline void _20597b2d1_optimize(_205974e89_exprDeadCode* _self_, jule::Any& _22528_model) {
	{
		auto &_match_expr{ _22528_model };
		
		if (_match_expr.type_is<jule::Ptr<_204ec152a_BinopExprModel>>()) {
			_case_begin_1dc04c0e6:;
			{
				_20597583b_binary(&(*_self_), _22528_model.operator jule::Ptr<_204ec152a_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec1717_UnaryExprModel>>()) {
			_case_begin_1dc04c16d:;
			{
				_205975ab1_unary(&(*_self_), _22528_model.operator jule::Ptr<_204ec1717_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec1ae1_StructLitExprModel>>()) {
			_case_begin_1dc04c1e5:;
			{
				_205975d36_structureLit(&(*_self_), _22528_model.operator jule::Ptr<_204ec1ae1_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec1ccd_AllocStructLitExprModel>>()) {
			_case_begin_1dc04c5ad:;
			{
				_2059760ab_allocStructure(&(*_self_), _22528_model.operator jule::Ptr<_204ec1ccd_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec1eba_CastingExprModel>>()) {
			_case_begin_1dc04c635:;
			{
				_205976331_casting(&(*_self_), _22528_model.operator jule::Ptr<_204ec1eba_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec21a7_FnCallExprModel>>()) {
			_case_begin_1dc04c6ac:;
			{
				_20597682b_funcCall(&(*_self_), _22528_model.operator jule::Ptr<_204ec21a7_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec2394_SliceExprModel>>()) {
			_case_begin_1dc04c734:;
			{
				_205976aa1_slice(&(*_self_), _22528_model.operator jule::Ptr<_204ec2394_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec3818_ArrayExprModel>>()) {
			_case_begin_1dc04c7ab:;
			{
				_205976d26_array(&(*_self_), _22528_model.operator jule::Ptr<_204ec3818_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec2581_IndexingExprModel>>()) {
			_case_begin_1dc04c833:;
			{
				_20597709b_indexing(&(*_self_), _22528_model.operator jule::Ptr<_204ec2581_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec276d_AnonFnExprModel>>()) {
			_case_begin_1dc04c8aa:;
			{
				_205977321_anonFunc(&(*_self_), _22528_model.operator jule::Ptr<_204ec276d_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec2b47_MapExprModel>>()) {
			_case_begin_1dc04c932:;
			{
				_205977596_mapExpr(&(*_self_), _22528_model.operator jule::Ptr<_204ec2b47_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec2d34_SlicingExprModel>>()) {
			_case_begin_1dc04c9a9:;
			{
				_20597781b_slicing(&(*_self_), _22528_model.operator jule::Ptr<_204ec2d34_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec3021_TraitSubIdentExprModel>>()) {
			_case_begin_1dc04ca31:;
			{
				_205977a91_traitSub(&(*_self_), _22528_model.operator jule::Ptr<_204ec3021_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec343e_StructSubIdentExprModel>>()) {
			_case_begin_1dc04caa8:;
			{
				_205977d16_structureSub(&(*_self_), _22528_model.operator jule::Ptr<_204ec343e_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec3be2_CommonSubIdentExprModel>>()) {
			_case_begin_1dc04cb30:;
			{
				_20597808b_commonSub(&(*_self_), _22528_model.operator jule::Ptr<_204ec3be2_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec3dce_TupleExprModel>>()) {
			_case_begin_1dc04cba7:;
			{
				_205978311_tuple(&(*_self_), _22528_model.operator jule::Ptr<_204ec3dce_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec40bb_BuiltinOutCallExprModel>>()) {
			_case_begin_1dc04cc2e:;
			{
				_20597880b_outCall(&(*_self_), _22528_model.operator jule::Ptr<_204ec40bb_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec42a8_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1dc04cca6:;
			{
				_205978a81_outlnCall(&(*_self_), _22528_model.operator jule::Ptr<_204ec42a8_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec4682_BuiltinNewCallExprModel>>()) {
			_case_begin_1dc04cd2d:;
			{
				_205978586_newCall(&(*_self_), _22528_model.operator jule::Ptr<_204ec4682_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec486e_BuiltinPanicCallExprModel>>()) {
			_case_begin_1dc04cda5:;
			{
				_205978d06_panicCall(&(*_self_), _22528_model.operator jule::Ptr<_204ec486e_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec4a5b_BuiltinAssertCallExprModel>>()) {
			_case_begin_1dc04ce2c:;
			{
				_20597907b_assertCall(&(*_self_), _22528_model.operator jule::Ptr<_204ec4a5b_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel>>()) {
			_case_begin_1dc04cea4:;
			{
				_205979301_errorCall(&(*_self_), _22528_model.operator jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec4c48_BuiltinMakeCallExprModel>>()) {
			_case_begin_1dc04d02b:;
			{
				_205979576_makeCall(&(*_self_), _22528_model.operator jule::Ptr<_204ec4c48_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec4e35_BuiltinAppendCallExprModel>>()) {
			_case_begin_1dc04d0a3:;
			{
				_2059797eb_appendCall(&(*_self_), _22528_model.operator jule::Ptr<_204ec4e35_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec5122_BuiltinLenCallExprModel>>()) {
			_case_begin_1dc04d12a:;
			{
				_205979a71_lenCall(&(*_self_), _22528_model.operator jule::Ptr<_204ec5122_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec530e_BuiltinCapCallExprModel>>()) {
			_case_begin_1dc04d1a2:;
			{
				_205979ce6_capCall(&(*_self_), _22528_model.operator jule::Ptr<_204ec530e_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec4495_BuiltinCloneCallExprModel>>()) {
			_case_begin_1dc04d229:;
			{
				_20597a06b_cloneCall(&(*_self_), _22528_model.operator jule::Ptr<_204ec4495_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec320d_BuiltinDeleteCallExprModel>>()) {
			_case_begin_1dc04d2a1:;
			{
				_20597a2e1_deleteCall(&(*_self_), _22528_model.operator jule::Ptr<_204ec320d_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec5d48_SizeofExprModel>>()) {
			_case_begin_1dc04d328:;
			{
				_20597a566_sizeof(&(*_self_), _22528_model.operator jule::Ptr<_204ec5d48_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec6035_AlignofExprModel>>()) {
			_case_begin_1dc04d3a0:;
			{
				_20597a7db_alignof(&(*_self_), _22528_model.operator jule::Ptr<_204ec6035_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec640e_IntegratedToStrExprModel>>()) {
			_case_begin_1dc04d427:;
			{
				_20597aa61_integratedToStr(&(*_self_), _22528_model.operator jule::Ptr<_204ec640e_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec67d8_FreeExprModel>>()) {
			_case_begin_1dc04d49e:;
			{
				_20597acd6_free(&(*_self_), _22528_model.operator jule::Ptr<_204ec67d8_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec65eb_BackendEmitExprModel>>()) {
			_case_begin_1dc04d526:;
			{
				_20597b05b_backendEmit(&(*_self_), _22528_model.operator jule::Ptr<_204ec65eb_BackendEmitExprModel>());
			}
		}
		_match_end_1dc04c2e4:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _205974e89_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _202bb6cc2_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2036d843b_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _203acb950_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20407b10d_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _202c0764d_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_203018e48_scopeOptimizer> static__202baea01_new(jule::Ptr<_204edc645_Scope> _4523_scope) {
	return jule::new_ptr<_203018e48_scopeOptimizer>(_203018e48_scopeOptimizer{._field_scope=_4523_scope});
}



inline void _202bc9a93_setCurrentStmt(_203018e48_scopeOptimizer* _self_, jule::Any _5137_stmt) {
	(*_self_)._field_scope.get()._field_Stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5137_stmt))))));
}



inline void _202bd79b3_optimizeData(_203018e48_scopeOptimizer* _self_, jule::Ptr<_20507eb49_Data> _5535_d) {
	{
		auto &_match_expr{ _5535_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_204ec21a7_FnCallExprModel>>()) {
			_case_begin_1dc08bb3b:;
			{
				jule::Ptr<_204ec21a7_FnCallExprModel> _5821_m = _5535_d.get()._field_Model.operator jule::Ptr<_204ec21a7_FnCallExprModel>();;
				if (_20089198d_Production) {
					if (((!(_204ec7641_IsBuiltin(_5821_m.get()._field_Func.ptr()))) && _202d01417_isStdPackage(_5821_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("debug", 5)))) {
						_202bc9a93_setCurrentStmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1dc08b92c:;
	};
	static__202d2dd29_optimize(_5535_d.get()._field_Model);
}



inline void _202bd86a6_optimizeVar(_203018e48_scopeOptimizer* _self_, jule::Ptr<_205031cb6_Var> _7034_v) {
	if ((_7034_v.get()._field_Value != nullptr)) {
		static__202d2dd29_optimize(_7034_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _202c06ad1_optimizeConditional(_203018e48_scopeOptimizer* _self_, jule::Ptr<_204edd1a1_Conditional> _7642_c) {
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1dc08eea2:;
		if (it != expr.end()) {
			jule::Ptr<_204edca41_If> _7721_elif = *it;
			{
				static__202d2dd29_optimize(_7721_elif.get()._field_Expr);
				_202ceb247_optimizeChild(&(*_self_), _7721_elif.get()._field_Scope);
			}
			_iter_next_1dc08eea2:;
			++it;
			goto _iter_begin_1dc08eea2;
		}
		_iter_end_1dc08eea2:;
	};
	if ((_7642_c.get()._field_Default != nullptr)) {
		_202ceb247_optimizeChild(&(*_self_), _7642_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_202c08a39_Cond))) {
		return;;
	};
	jule::Bool _8917_constCase = false;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1dc0921d5:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_204edca41_If> _9221_elif = *it;
			{
				if ((!(_202d04096_isConstantValidConditionalCase(_9221_elif)))) {
					goto _iter_next_1dc0921d5;
				};
				_8917_constCase=true;
				_7642_c.get()._field_Elifs=_7642_c.get()._field_Elifs.slice(0LL,_9214_i);
				_7642_c.get()._field_Default=jule::new_ptr<_204edcd2c_Else>(_204edcd2c_Else{._field_Scope=_9221_elif.get()._field_Scope});
				goto _iter_end_1dc0921d5;
			}
			_iter_next_1dc0921d5:;
			++it;
			_9214_i++;
			goto _iter_begin_1dc0921d5;
		}
		_iter_end_1dc0921d5:;
	};
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_204edca41_If>* _10917_i = (&(_7642_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_204edca41_If>* _11013_end = (&(_7642_c.get()._field_Elifs[(_7642_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_202d09585_isUnreachableConditionalCase((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1dc095804:;
	}
	_iter_end_1dc095804:;;
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_constCase))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1dc097174:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_204edca41_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1dc097174:;
			++it;
			_12913_j++;
			goto _iter_begin_1dc097174;
		}
		_iter_end_1dc097174:;
	};
	if ((_12817_only != -1LL)) {
		_202bc9a93_setCurrentStmt(&(*_self_), jule::Any(_7642_c.get()._field_Elifs[_12817_only].get()._field_Scope));
	};
}



inline void _202c0b795_buildDefaultConstatTrueCase(_203018e48_scopeOptimizer* _self_, jule::Ptr<_204ee1ddb_Case> _14550_case, jule::I64& _14568_i, jule::Ptr<_204ee1391_Match>& _14581_m) {
	_14550_case.get()._field_Exprs=nullptr;
	jule::I64 _14713_start = _14568_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14550_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1dc099a39;
			};
			jule::Any &_15322_stmt = _14550_case.get()._field_Scope.get()._field_Stmts[(_14550_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_204ee2491_FallSt>>()) {
					_case_begin_1dc09a40d:;
					{
						(_14568_i)++;
						if ((_14568_i >= _14581_m.get()._field_Cases.len())) {
							_15322_stmt=static_cast<jule::Any>(_14581_m.get()._field_Default.get()._field_Scope);
							goto _iter_end_1dc099a39;
						};
						_14550_case=_14581_m.get()._field_Cases[_14568_i];
						_15322_stmt=static_cast<jule::Any>(_14550_case.get()._field_Scope);
					}
				}
				else {
					_case_begin_1dc09bb29:;
					{
						goto _iter_end_1dc099a39;
					}
				}
				_match_end_1dc09ba2a:;
			};
		}
	_iter_next_1dc099a39:;
	}
	_iter_end_1dc099a39:;;
	_14581_m.get()._field_Default=_14581_m.get()._field_Cases[_14713_start];
	_14581_m.get()._field_Cases=_14581_m.get()._field_Cases.slice(0LL,_14713_start);
}



inline void _202c0cc3b_optimizeMatch(_203018e48_scopeOptimizer* _self_, jule::Ptr<_204ee1391_Match> _17136_m) {
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1dc09dde5:;
		if (it != expr.end()) {
			jule::Ptr<_204ee1ddb_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1dc09e7b9:;
					if (it != expr.end()) {
						jule::Ptr<_20507eb49_Data> _17325_expr = *it;
						{
							static__202d2dd29_optimize(_17325_expr.get()._field_Model);
						}
						_iter_next_1dc09e7b9:;
						++it;
						goto _iter_begin_1dc09e7b9;
					}
					_iter_end_1dc09e7b9:;
				};
				_202ceb247_optimizeChild(&(*_self_), _17221_case.get()._field_Scope);
			}
			_iter_next_1dc09dde5:;
			++it;
			goto _iter_begin_1dc09dde5;
		}
		_iter_end_1dc09dde5:;
	};
	if ((_17136_m.get()._field_Default != nullptr)) {
		_202ceb247_optimizeChild(&(*_self_), _17136_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_202c08a39_Cond))) {
		return;;
	};
	jule::Bool _18617_constCase = false;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1dc0a1722:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_204ee1ddb_Case> _18925_case = *it;
			{
				if ((!(_202d08331_isConstantValidMatchCase(_18925_case)))) {
					goto _iter_next_1dc0a1722;
				};
				_18617_constCase=true;
				_202c0b795_buildDefaultConstatTrueCase(&(*_self_), _18925_case,_18918_i,_17136_m);
				goto _iter_end_1dc0a1722;
			}
			_iter_next_1dc0a1722:;
			++it;
			_18918_i++;
			goto _iter_begin_1dc0a1722;
		}
		_iter_end_1dc0a1722:;
	};
	if ((_17136_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_204ee1ddb_Case>* _20317_i = (&(_17136_m.get()._field_Cases[0LL]));;
	jule::Ptr<_204ee1ddb_Case>* _20413_end = (&(_17136_m.get()._field_Cases[(_17136_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_202d1248e_isUnreachableMatchCase((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1dc0a4846:;
	}
	_iter_end_1dc0a4846:;;
	if ((!(_18617_constCase))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1dc0a5a89:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_204ee1ddb_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1dc0a5a89:;
			++it;
			_21913_j++;
			goto _iter_begin_1dc0a5a89;
		}
		_iter_end_1dc0a5a89:;
	};
	if ((_21817_only != -1LL)) {
		_202bc9a93_setCurrentStmt(&(*_self_), jule::Any(_17136_m.get()._field_Cases[_21817_only].get()._field_Scope));
	};
}



inline void _202c0dcb4_optimizeRangeIter(_203018e48_scopeOptimizer* _self_, jule::Ptr<_204ede2e5_RangeIter> _23540_it) {
	static__202d2dd29_optimize(_23540_it.get()._field_Expr.get()._field_Model);
	_202ceb247_optimizeChild(&(*_self_), _23540_it.get()._field_Scope);
}



inline void _202c0e204_optimizeWhileIter(_203018e48_scopeOptimizer* _self_, jule::Ptr<_204edd910_WhileIter> _24040_it) {
	static__202d2dd29_optimize(_24040_it.get()._field_Expr);
	_202ce682a_optimizeStmt(&(*_self_), _24040_it.get()._field_Next);
	_202ceb247_optimizeChild(&(*_self_), _24040_it.get()._field_Scope);
}



inline jule::Bool _202c4259a_substr(_203018e48_scopeOptimizer* _self_, jule::Ptr<_204ee099a_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_204ec2d34_SlicingExprModel>>()) {
			_case_begin_1dc0aa0ee:;
			{
				jule::Ptr<_204ec2d34_SlicingExprModel> _24921_sem = _24629_a.get()._field_R.get()._field_Model.operator jule::Ptr<_204ec2d34_SlicingExprModel>();;
				if ((_24921_sem.get()._field_Expr == _24629_a.get()._field_L.get()._field_Model)) {
					_202bc9a93_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_20407b10d_MutSlicingExprModel>(_20407b10d_MutSlicingExprModel{._field_Token=_24921_sem.get()._field_Token, ._field_Expr=_24921_sem.get()._field_Expr, ._field_Left=_24921_sem.get()._field_Left, ._field_Right=_24921_sem.get()._field_Right})));
					return true;
				};
			}
		}
		_match_end_1dc0aa099:;
	};
	return false;
}



inline jule::Bool _202c42e4c_strInsert(_203018e48_scopeOptimizer* _self_, jule::Ptr<_204ee099a_Assign> _26332_a) {
	{
		auto &_match_expr{ _26332_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_204ec152a_BinopExprModel>>()) {
			_case_begin_1dc0ac772:;
			{
				jule::Ptr<_204ec152a_BinopExprModel> _26621_m = _26332_a.get()._field_R.get()._field_Model.operator jule::Ptr<_204ec152a_BinopExprModel>();;
				if ((_26621_m.get()._field_Right.get()._field_Model == _26332_a.get()._field_L.get()._field_Model)) {
					_202bc9a93_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_202c0764d_StrInsertBeginExprModel>(_202c0764d_StrInsertBeginExprModel{._field_Dest=_26332_a.get()._field_L.get()._field_Model, ._field_Expr=_26621_m.get()._field_Left.get()._field_Model})));
					return true;
				};
			}
		}
		_match_end_1dc0ac4a8:;
	};
	return false;
}



inline jule::Bool _202c5d40c_strAssign(_203018e48_scopeOptimizer* _self_, jule::Ptr<_204ee099a_Assign> _27832_a) {
	if ((_27832_a.get()._field_Op.get()._field_Kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_2050b03b6_Prim> _28213_lp = _2050aca01_Prim(_27832_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_2050b35ea_IsStr(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_202c4259a_substr(&(*_self_), _27832_a) || _202c42e4c_strInsert(&(*_self_), _27832_a)) {
			_case_begin_1dc0b15cd:;
			{
				return true;
			}
		}
		_match_end_1dc0b1534:;
	};
	return false;
}



inline void _202cd89b5_optimizeAssign(_203018e48_scopeOptimizer* _self_, jule::Ptr<_204ee099a_Assign> _29437_assign) {
	if ((_202bc2e43_Copy && _202c5d40c_strAssign(&(*_self_), _29437_assign))) {
		return;;
	};
	static__202d2dd29_optimize(_29437_assign.get()._field_L.get()._field_Model);
	static__202d2dd29_optimize(_29437_assign.get()._field_R.get()._field_Model);
	{
		auto &_match_expr{ _29437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1dc0b3811:;
			{
				if ((_202beba2c_Math && (_2050ade53_Struct(_29437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_29437_assign.get()._field_Op.get()._field_Kind=_29437_assign.get()._field_Op.get()._field_Kind.slice(0LL,(_29437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _30725_model = static_cast<jule::Any>(jule::new_ptr<_204ec152a_BinopExprModel>(_204ec152a_BinopExprModel{._field_Left=_29437_assign.get()._field_L, ._field_Right=_29437_assign.get()._field_R, ._field_Op=_29437_assign.get()._field_Op}));;
					static__202d2dd29_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_204ec152a_BinopExprModel>>()) {
							_case_begin_1dc0b5c97:;
							{
								_29437_assign.get()._field_R=jule::new_ptr<_204ec133d_OperandExprModel>((*(_29437_assign.get()._field_R)));
								_29437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_29437_assign.get()._field_R.get()._field_Model=_30725_model;
								return;;
							}
						}
						_match_end_1dc0b5b87:;
					};
					_29437_assign.get()._field_Op.get()._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1dc0b37ab:;
	};
	if (_202bb120b_Append) {
		{
			auto &_match_expr{ _29437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_204ec4e35_BuiltinAppendCallExprModel>>()) {
				_case_begin_1dc0b7cdd:;
				{
					jule::Ptr<_204ec4e35_BuiltinAppendCallExprModel> _32825_m = _29437_assign.get()._field_R.get()._field_Model.operator jule::Ptr<_204ec4e35_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_Elements };
						
						if (_match_expr.type_is<jule::Ptr<_204ec2394_SliceExprModel>>()) {
							_case_begin_1dc0b8e21:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_Dest };
									
									if (_match_expr.type_is<jule::Ptr<_205031cb6_Var>>() || _match_expr.type_is<jule::Ptr<_204ec343e_StructSubIdentExprModel>>()) {
										_case_begin_1dc0b977e:;
										{
											_202bc9a93_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_203acb950_PushToSliceExprModel>(_203acb950_PushToSliceExprModel{._field_Dest=_32825_m.get()._field_Dest, ._field_Elems=_32825_m.get()._field_Elements.operator jule::Ptr<_204ec2394_SliceExprModel>()})));
										}
									}
									_match_end_1dc0b9718:;
								};
							}
						}
						_match_end_1dc0b8c12:;
					};
				}
			}
			_match_end_1dc0b43e4:;
		};
	};
}



inline void _202ce1cba_optimizeMultiAssign(_203018e48_scopeOptimizer* _self_, jule::Ptr<_204ee0d52_MultiAssign> _34442_assign) {
	{
		auto &expr = _34442_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1dc0b3c84:;
		if (it != expr.end()) {
			jule::I64 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__202d2dd29_optimize(_34521_l);
					_34442_assign.get()._field_L[_34514_i]=_34521_l;
				};
			}
			_iter_next_1dc0b3c84:;
			++it;
			_34514_i++;
			goto _iter_begin_1dc0b3c84;
		}
		_iter_end_1dc0b3c84:;
	};
	static__202d2dd29_optimize(_34442_assign.get()._field_R);
}



inline void _202ce5010_optimizeRet(_203018e48_scopeOptimizer* _self_, jule::Ptr<_204ee2914_RetSt> _35434_r) {
	static__202d2dd29_optimize(_35434_r.get()._field_Expr);
}



inline void _202ce682a_optimizeStmt(_203018e48_scopeOptimizer* _self_, jule::Any _35835_stmt) {
	{
		auto &_match_expr{ _35835_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_204edc645_Scope>>()) {
			_case_begin_1dc0bc5a6:;
			{
				_202ceb247_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_204edc645_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20507eb49_Data>>()) {
			_case_begin_1dc0bc61c:;
			{
				_202bd79b3_optimizeData(&(*_self_), _35835_stmt.operator jule::Ptr<_20507eb49_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_205031cb6_Var>>()) {
			_case_begin_1dc0bc683:;
			{
				_202bd86a6_optimizeVar(&(*_self_), _35835_stmt.operator jule::Ptr<_205031cb6_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204edd1a1_Conditional>>()) {
			_case_begin_1dc0bc70a:;
			{
				_202c06ad1_optimizeConditional(&(*_self_), _35835_stmt.operator jule::Ptr<_204edd1a1_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ede2e5_RangeIter>>()) {
			_case_begin_1dc0bc782:;
			{
				_202c0dcb4_optimizeRangeIter(&(*_self_), _35835_stmt.operator jule::Ptr<_204ede2e5_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204edd910_WhileIter>>()) {
			_case_begin_1dc0bc809:;
			{
				_202c0e204_optimizeWhileIter(&(*_self_), _35835_stmt.operator jule::Ptr<_204edd910_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204edd48c_InfIter>>()) {
			_case_begin_1dc0bc881:;
			{
				_202ceb247_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_204edd48c_InfIter>().get()._field_Scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ee099a_Assign>>()) {
			_case_begin_1dc0bc908:;
			{
				_202cd89b5_optimizeAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_204ee099a_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ee0d52_MultiAssign>>()) {
			_case_begin_1dc0bc980:;
			{
				_202ce1cba_optimizeMultiAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_204ee0d52_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ee1391_Match>>()) {
			_case_begin_1dc0bca07:;
			{
				_202c0cc3b_optimizeMatch(&(*_self_), _35835_stmt.operator jule::Ptr<_204ee1391_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ee2914_RetSt>>()) {
			_case_begin_1dc0bca7e:;
			{
				_202ce5010_optimizeRet(&(*_self_), _35835_stmt.operator jule::Ptr<_204ee2914_RetSt>());
			}
		}
		_match_end_1dc0baecd:;
	};
}



inline void _202ceb247_optimizeChild(_203018e48_scopeOptimizer* _self_, jule::Ptr<_204edc645_Scope> _38536_child) {
	jule::Ptr<_203018e48_scopeOptimizer> _38617_so = static__202baea01_new(_38536_child);;
	_202ce1a23_optimize(_38617_so.ptr());
}



inline void _202ce1a23_optimize(_203018e48_scopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1dc0c3d3d:;
		if (it != expr.end()) {
			jule::I64 _39214_i = it - expr.begin();
			jule::Any _39221_stmt = *it;
			{
				(*_self_)._field_i=_39214_i;
				_202ce682a_optimizeStmt(&(*_self_), _39221_stmt);
			}
			_iter_next_1dc0c3d3d:;
			++it;
			_39214_i++;
			goto _iter_begin_1dc0c3d3d;
		}
		_iter_end_1dc0c3d3d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _203018e48_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__202d2dd29_optimize(jule::Any& _5829_model) {
	if (_205871935_exprEnabled) {
		jule::Ptr<_203577b05_exprOptimizer> _6121_exop = jule::new_ptr<_203577b05_exprOptimizer>(_203577b05_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5829_model))))});;
		_2031e81b0_do(_6121_exop.ptr());
	};
}



inline jule::Bool _202d3257a_strCond(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec152a_BinopExprModel> _6826_m) {
	jule::Ptr<_2050b03b6_Prim> _6913_lp = _2050aca01_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_2050b35ea_IsStr(_6913_lp.ptr()))))) {
		return false;
	};
	if (((_6826_m.get()._field_Op.get()._field_Kind != jule::Str("==", 2)) && (_6826_m.get()._field_Op.get()._field_Kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_2044102b6_Const>>()) {
			_case_begin_1dc0cdc27:;
			{
				std::tie(_6826_m.get()._field_Left,_6826_m.get()._field_Right) = std::make_tuple(_6826_m.get()._field_Right,_6826_m.get()._field_Left);
				goto _julec_label_opt;
			}
		}
		_match_end_1dc0cdbc2:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_2044102b6_Const>>()) {
			_case_begin_1dc0d050e:;
			{
				goto _match_end_1dc0ce92b;
			}
		}
		else {
			_case_begin_1dc0ced7c:;
			{
				return true;
			}
		}
		_match_end_1dc0ce92b:;
	};
	_julec_label_opt:;
	jule::Ptr<_2044102b6_Const> _8813_c = _6826_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_2044102b6_Const>();;
	if ((!(_204461834_ReadStr(_8813_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1dc0d1785:;
			{
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_204ec3be2_CommonSubIdentExprModel>(_204ec3be2_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1dc0d17eb:;
			{
				jule::Ptr<_202b89679_Token> _10021_op = _6826_m.get()._field_Op;;
				_10021_op.get()._field_Kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_204ec1717_UnaryExprModel>(_204ec1717_UnaryExprModel{._field_Expr=jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec3be2_CommonSubIdentExprModel>(_204ec3be2_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)})), }), ._field_Op=_10021_op}));
			}
		}
		_match_end_1dc0d0ec1:;
	};
	return true;
}



inline void _202d32e3d_binary(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec152a_BinopExprModel> _11625_m) {
	static__202d2dd29_optimize(_11625_m.get()._field_Left.get()._field_Model);
	static__202d2dd29_optimize(_11625_m.get()._field_Right.get()._field_Model);
	{
		auto &_match_expr{ _11625_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_2044102b6_Const>>()) {
			_case_begin_1dc0ccc8c:;
			{
				goto _match_end_1dc0d5613;
			}
		}
		else {
			_case_begin_1dc0d5756:;
			{
				return;;
			}
		}
		_match_end_1dc0d5613:;
	};
	if ((_202c08a39_Cond && _202d3257a_strCond(&(*_self_), _11625_m))) {
		return;;
	};
	if ((!(_202beba2c_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _11625_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1dc0d6922:;
			{
				jule::Bool _13618_ok;;
				jule::U64 _13622_x;;
				std::tie(_13618_ok,_13622_x) = _2033ad045_checkForBitShiftOpt(_11625_m.get()._field_Left,_11625_m.get()._field_Right);
				if (_13618_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_2044102b6_Const> _13925_c = _11625_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_2044102b6_Const>();;
					_204477c13_SetU64(_13925_c.ptr(), _13622_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1dc0d6999:;
			{
				jule::Bool _14418_ok;;
				jule::U64 _14422_x;;
				std::tie(_14418_ok,_14422_x) = _2033ad045_checkForBitShiftOpt(_11625_m.get()._field_Left,_11625_m.get()._field_Right);
				if (_14418_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_2044102b6_Const> _14725_c = _11625_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_2044102b6_Const>();;
					_204477c13_SetU64(_14725_c.ptr(), _14422_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1dc0d6a21:;
			{
				jule::Ptr<_2044102b6_Const> _15221_c = _11625_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_2044102b6_Const>();;
				jule::F64 _15317_d = _20446423d_AsF64(_15221_c.ptr());;
				if ((_15317_d == 2LL)) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_2044650eb_SetI64(_15221_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1dc0d6746:;
	};
	jule::Any _15917_model = jule::Any(jule::new_ptr<_202bb6cc2_UnsafeBinopExprModel>(_202bb6cc2_UnsafeBinopExprModel{._field_Node=_11625_m}));;
	(*((*_self_)._field_model))=(*(((jule::Any*)((&(_15917_model))))));
}



inline void _202d39cbe_unary(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec1717_UnaryExprModel> _16324_m) {
	static__202d2dd29_optimize(_16324_m.get()._field_Expr.get()._field_Model);
	if ((_202c08143_Ptr && (_16324_m.get()._field_Op.get()._field_Kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16324_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_204ec1717_UnaryExprModel>>()) {
				_case_begin_1dc0de3db:;
				{
					jule::Ptr<_204ec1717_UnaryExprModel> _16825_um = _16324_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_204ec1717_UnaryExprModel>();;
					if ((_16825_um.get()._field_Op.get()._field_Kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16825_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1dc0de386:;
		};
	};
}



inline void _202d4269a_structureLit(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec1ae1_StructLitExprModel> _17631_m) {
	{
		auto &expr = _17631_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1dc0e1157:;
		if (it != expr.end()) {
			jule::Ptr<_204ec1904_StructArgExprModel> _17721_arg = *it;
			{
				static__202d2dd29_optimize(_17721_arg.get()._field_Expr);
			}
			_iter_next_1dc0e1157:;
			++it;
			goto _iter_begin_1dc0e1157;
		}
		_iter_end_1dc0e1157:;
	};
}



inline void _202d43d94_allocStructure(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec1ccd_AllocStructLitExprModel> _18233_m) {
	_202d4269a_structureLit(&(*_self_), _18233_m.get()._field_Lit);
}



inline void _202d51324_casting(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec1eba_CastingExprModel> _18626_m) {
	static__202d2dd29_optimize(_18626_m.get()._field_Expr);
}



inline void _202d633be_args(_203577b05_exprOptimizer* _self_, jule::Slice<jule::Any>& _19024_args) {
	{
		auto &expr = _19024_args;
		auto it = expr.begin();
		_iter_begin_1dc0e2cd5:;
		if (it != expr.end()) {
			jule::I64 _19114_i = it - expr.begin();
			jule::Any _19121_arg = *it;
			{
				static__202d2dd29_optimize(_19121_arg);
				_19024_args[_19114_i]=_19121_arg;
			}
			_iter_next_1dc0e2cd5:;
			++it;
			_19114_i++;
			goto _iter_begin_1dc0e2cd5;
		}
		_iter_end_1dc0e2cd5:;
	};
}



inline void _202d97c61_scope(_203577b05_exprOptimizer* _self_, jule::Ptr<_204edc645_Scope>& _19725_s) {
	jule::Ptr<_203018e48_scopeOptimizer> _19817_scopt = static__202baea01_new(_19725_s);;
	_202ce1a23_optimize(_19817_scopt.ptr());
}



inline void _202d9b748_funcCall(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec21a7_FnCallExprModel> _20227_m) {
	static__202d2dd29_optimize(_20227_m.get()._field_Expr);
	_202d633be_args(&(*_self_), _20227_m.get()._field_Args);
	if ((_20227_m.get()._field_Except != nullptr)) {
		_202d97c61_scope(&(*_self_), _20227_m.get()._field_Except);
	};
}



inline void _202da5a60_slice(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec2394_SliceExprModel> _21024_m) {
	_202d633be_args(&(*_self_), _21024_m.get()._field_Elems);
}



inline void _202ee163a_array(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec3818_ArrayExprModel> _21424_m) {
	if (((_21424_m.get()._field_Elems.len() == 2LL) && (_21424_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _21621_elem = _21424_m.get()._field_Elems[0LL];;
		static__202d2dd29_optimize(_21621_elem);
		_21424_m.get()._field_Elems[0LL]=_21621_elem;
	};
	_202d633be_args(&(*_self_), _21424_m.get()._field_Elems);
}



inline void _203005660_indexing(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec2581_IndexingExprModel> _22327_m) {
	static__202d2dd29_optimize(_22327_m.get()._field_Expr.get()._field_Model);
	static__202d2dd29_optimize(_22327_m.get()._field_Index.get()._field_Model);
	if ((!(_202c04c55_Access))) {
		return;;
	};
	jule::Bool _22913_array = (_2050ad716_Arr(_22327_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_22913_array && _20508050c_IsConst(_22327_m.get()._field_Index.ptr()))) {
		jule::Any _23221_model = jule::Any(jule::new_ptr<_2036d843b_UnsafeIndexingExprModel>(_2036d843b_UnsafeIndexingExprModel{._field_Node=_22327_m}));;
		(*((*_self_)._field_model))=(*(((jule::Any*)((&(_23221_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22327_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_205031cb6_Var>>()) {
			_case_begin_1dc0ec174:;
			{
				jule::Ptr<_205031cb6_Var> _23817_i = _22327_m.get()._field_Index.get()._field_Model.operator jule::Ptr<_205031cb6_Var>();;
				if ((_23817_i.get()._field_Mutable || (_23817_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1dc0ec11e;
				};
				{
					auto &_match_expr{ _22327_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_205031cb6_Var>>()) {
						_case_begin_1dc0eda7c:;
						{
							jule::Ptr<_205031cb6_Var> _24421_r = _22327_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_205031cb6_Var>();;
							if ((_23817_i.get()._field_IterRelation.get()._field_Range == _24421_r)) {
								jule::Any _24729_model = jule::Any(jule::new_ptr<_2036d843b_UnsafeIndexingExprModel>(_2036d843b_UnsafeIndexingExprModel{._field_Node=_22327_m}));;
								(*((*_self_)._field_model))=(*(((jule::Any*)((&(_24729_model))))));
							};
						}
					}
					_match_end_1dc0eda27:;
				};
			}
		}
		_match_end_1dc0ec11e:;
	};
}



inline void _20300e845_anonFunc(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec276d_AnonFnExprModel> _25427_m) {
	_202d97c61_scope(&(*_self_), _25427_m.get()._field_Func.get()._field_Scope);
}



inline void _2030157c4_mapExpr(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec2b47_MapExprModel> _25826_m) {
	{
		auto &expr = _25826_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1dc1013dc:;
		if (it != expr.end()) {
			jule::Ptr<_204ec295a_KeyValPairExprModel> _25921_pair = *it;
			{
				static__202d2dd29_optimize(_25921_pair.get()._field_Key);
				static__202d2dd29_optimize(_25921_pair.get()._field_Val);
			}
			_iter_next_1dc1013dc:;
			++it;
			goto _iter_begin_1dc1013dc;
		}
		_iter_end_1dc1013dc:;
	};
}



inline void _20301684c_slicing(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec2d34_SlicingExprModel> _26526_m) {
	static__202d2dd29_optimize(_26526_m.get()._field_Expr);
	static__202d2dd29_optimize(_26526_m.get()._field_Left);
	if ((_26526_m.get()._field_Right != nullptr)) {
		static__202d2dd29_optimize(_26526_m.get()._field_Right);
	};
}



inline void _203005099_traitSub(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec3021_TraitSubIdentExprModel> _27327_m) {
	static__202d2dd29_optimize(_27327_m.get()._field_Expr);
}



inline void _20301a6ec_structureSub(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec343e_StructSubIdentExprModel> _27731_m) {
	static__202d2dd29_optimize(_27731_m.get()._field_Expr.get()._field_Model);
}



inline void _20302c995_commonSub(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec3be2_CommonSubIdentExprModel> _28128_m) {
	static__202d2dd29_optimize(_28128_m.get()._field_Expr);
}



inline void _20303259e_tuple(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec3dce_TupleExprModel> _28524_m) {
	{
		auto &expr = _28524_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1dc104ce7:;
		if (it != expr.end()) {
			jule::Ptr<_20507eb49_Data> _28621_d = *it;
			{
				static__202d2dd29_optimize(_28621_d.get()._field_Model);
			}
			_iter_next_1dc104ce7:;
			++it;
			goto _iter_begin_1dc104ce7;
		}
		_iter_end_1dc104ce7:;
	};
}



inline void _203037be2_newCall(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec4682_BuiltinNewCallExprModel> _29126_m) {
	if ((_29126_m.get()._field_Init != nullptr)) {
		static__202d2dd29_optimize(_29126_m.get()._field_Init);
	};
}



inline void _203039100_outCall(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec40bb_BuiltinOutCallExprModel> _29726_m) {
	static__202d2dd29_optimize(_29726_m.get()._field_Expr);
}



inline void _20303a3a9_outlnCall(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec42a8_BuiltinOutlnCallExprModel> _30128_m) {
	static__202d2dd29_optimize(_30128_m.get()._field_Expr);
}



inline void _20303bb4c_panicCall(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec486e_BuiltinPanicCallExprModel> _30528_m) {
	static__202d2dd29_optimize(_30528_m.get()._field_Expr);
}



inline void _203040689_assertCall(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec4a5b_BuiltinAssertCallExprModel> _30929_m) {
	static__202d2dd29_optimize(_30929_m.get()._field_Expr);
}



inline void _20304c4dc_errorCall(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel> _31328_m) {
	static__202d2dd29_optimize(_31328_m.get()._field_Err);
}



inline void _203058e22_makeCall(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec4c48_BuiltinMakeCallExprModel> _31727_m) {
	if ((_31727_m.get()._field_Len != nullptr)) {
		static__202d2dd29_optimize(_31727_m.get()._field_Len);
	};
	if ((_31727_m.get()._field_Cap != nullptr)) {
		static__202d2dd29_optimize(_31727_m.get()._field_Cap);
	};
}



inline void _20305e2ce_appendCall(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec4e35_BuiltinAppendCallExprModel> _32629_m) {
	static__202d2dd29_optimize(_32629_m.get()._field_Dest);
	static__202d2dd29_optimize(_32629_m.get()._field_Elements);
}



inline void _203080399_lenCall(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec5122_BuiltinLenCallExprModel> _33126_m) {
	static__202d2dd29_optimize(_33126_m.get()._field_Expr.get()._field_Model);
}



inline void _203082d80_capCall(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec530e_BuiltinCapCallExprModel> _33526_m) {
	static__202d2dd29_optimize(_33526_m.get()._field_Expr.get()._field_Model);
}



inline void _20308748e_cloneCall(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec4495_BuiltinCloneCallExprModel> _33928_m) {
	static__202d2dd29_optimize(_33928_m.get()._field_Expr);
}



inline void _2030955ac_deleteCall(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec320d_BuiltinDeleteCallExprModel> _34329_m) {
	static__202d2dd29_optimize(_34329_m.get()._field_Dest.get()._field_Model);
	if ((_34329_m.get()._field_Key != nullptr)) {
		static__202d2dd29_optimize(_34329_m.get()._field_Key.get()._field_Model);
	};
}



inline void _2030a89bb_sizeof(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec5d48_SizeofExprModel> _35025_m) {
	static__202d2dd29_optimize(_35025_m.get()._field_Expr);
}



inline void _2030e1c13_alignof(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec6035_AlignofExprModel> _35426_m) {
	static__202d2dd29_optimize(_35426_m.get()._field_Expr);
}



inline void _20313aad6_integratedToStr(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec640e_IntegratedToStrExprModel> _35834_m) {
	static__202d2dd29_optimize(_35834_m.get()._field_Expr);
}



inline void _2031dd65b_free(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec67d8_FreeExprModel> _36223_m) {
	static__202d2dd29_optimize(_36223_m.get()._field_Expr);
}



inline void _2031e161a_backendEmit(_203577b05_exprOptimizer* _self_, jule::Ptr<_204ec65eb_BackendEmitExprModel> _36630_m) {
	_202d633be_args(&(*_self_), _36630_m.get()._field_Exprs);
}



inline void _2031e81b0_do(_203577b05_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_204ec152a_BinopExprModel>>()) {
			_case_begin_1dc10ecad:;
			{
				_202d32e3d_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec152a_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec1717_UnaryExprModel>>()) {
			_case_begin_1dc10ed24:;
			{
				_202d39cbe_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec1717_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec1ae1_StructLitExprModel>>()) {
			_case_begin_1dc10ed8a:;
			{
				_202d4269a_structureLit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec1ae1_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec1ccd_AllocStructLitExprModel>>()) {
			_case_begin_1dc10ee01:;
			{
				_202d43d94_allocStructure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec1ccd_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec1eba_CastingExprModel>>()) {
			_case_begin_1dc10ee67:;
			{
				_202d51324_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec1eba_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec21a7_FnCallExprModel>>()) {
			_case_begin_1dc10eecd:;
			{
				_202d9b748_funcCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec21a7_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec2394_SliceExprModel>>()) {
			_case_begin_1dc110044:;
			{
				_202da5a60_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec2394_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec3818_ArrayExprModel>>()) {
			_case_begin_1dc1100bb:;
			{
				_202ee163a_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec3818_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec2581_IndexingExprModel>>()) {
			_case_begin_1dc110143:;
			{
				_203005660_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec2581_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec276d_AnonFnExprModel>>()) {
			_case_begin_1dc1101ba:;
			{
				_20300e845_anonFunc(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec276d_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec2b47_MapExprModel>>()) {
			_case_begin_1dc110242:;
			{
				_2030157c4_mapExpr(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec2b47_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec2d34_SlicingExprModel>>()) {
			_case_begin_1dc1102b9:;
			{
				_20301684c_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec2d34_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec3021_TraitSubIdentExprModel>>()) {
			_case_begin_1dc110341:;
			{
				_203005099_traitSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec3021_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec343e_StructSubIdentExprModel>>()) {
			_case_begin_1dc1103b8:;
			{
				_20301a6ec_structureSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec343e_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec3be2_CommonSubIdentExprModel>>()) {
			_case_begin_1dc110440:;
			{
				_20302c995_commonSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec3be2_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec3dce_TupleExprModel>>()) {
			_case_begin_1dc1104b7:;
			{
				_20303259e_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec3dce_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec40bb_BuiltinOutCallExprModel>>()) {
			_case_begin_1dc11053e:;
			{
				_203039100_outCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec40bb_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec42a8_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1dc1105b6:;
			{
				_20303a3a9_outlnCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec42a8_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec4682_BuiltinNewCallExprModel>>()) {
			_case_begin_1dc11063d:;
			{
				_203037be2_newCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec4682_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec486e_BuiltinPanicCallExprModel>>()) {
			_case_begin_1dc1106b5:;
			{
				_20303bb4c_panicCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec486e_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec4a5b_BuiltinAssertCallExprModel>>()) {
			_case_begin_1dc11073c:;
			{
				_203040689_assertCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec4a5b_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel>>()) {
			_case_begin_1dc1107b4:;
			{
				_20304c4dc_errorCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec4c48_BuiltinMakeCallExprModel>>()) {
			_case_begin_1dc11083b:;
			{
				_203058e22_makeCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec4c48_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec4e35_BuiltinAppendCallExprModel>>()) {
			_case_begin_1dc1108b3:;
			{
				_20305e2ce_appendCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec4e35_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec5122_BuiltinLenCallExprModel>>()) {
			_case_begin_1dc11093a:;
			{
				_203080399_lenCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec5122_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec530e_BuiltinCapCallExprModel>>()) {
			_case_begin_1dc1109b2:;
			{
				_203082d80_capCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec530e_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec4495_BuiltinCloneCallExprModel>>()) {
			_case_begin_1dc110a39:;
			{
				_20308748e_cloneCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec4495_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec320d_BuiltinDeleteCallExprModel>>()) {
			_case_begin_1dc110ab1:;
			{
				_2030955ac_deleteCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec320d_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec5d48_SizeofExprModel>>()) {
			_case_begin_1dc110b38:;
			{
				_2030a89bb_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec5d48_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec6035_AlignofExprModel>>()) {
			_case_begin_1dc110bb0:;
			{
				_2030e1c13_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec6035_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec640e_IntegratedToStrExprModel>>()) {
			_case_begin_1dc110c37:;
			{
				_20313aad6_integratedToStr(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec640e_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec67d8_FreeExprModel>>()) {
			_case_begin_1dc110cae:;
			{
				_2031dd65b_free(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec67d8_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec65eb_BackendEmitExprModel>>()) {
			_case_begin_1dc110d36:;
			{
				_2031e161a_backendEmit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_204ec65eb_BackendEmitExprModel>());
			}
		}
		_match_end_1dc10e9a0:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _203577b05_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2059453aa_Optimizer> static__20588eec5_New(jule::Ptr<_2054b956c_IR>& _2524_ir) {
	return jule::new_ptr<_2059453aa_Optimizer>(_2059453aa_Optimizer{._field_ir=_2524_ir});
}



inline void _2058908bb_optimizeGlobal(_2059453aa_Optimizer* _self_, jule::Ptr<_205031cb6_Var>& _3138_v) {
	if ((!(_3138_v.get()._field_CppLinked))) {
		static__202d2dd29_optimize(_3138_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _20589e028_optimizeFunction(_2059453aa_Optimizer* _self_, jule::Ptr<_204ec707a_Fn>& _3740_func) {
	if (_3740_func.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _3740_func.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1dc129a20:;
		if (it != expr.end()) {
			jule::Ptr<_204ec7454_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_203018e48_scopeOptimizer> _4221_so = static__202baea01_new(_4121_ins.get()._field_Scope);;
				_202ce1a23_optimize(_4221_so.ptr());
			}
			_iter_next_1dc129a20:;
			++it;
			goto _iter_begin_1dc129a20;
		}
		_iter_end_1dc129a20:;
	};
}



inline void _20587212d_optimizeStruct(_2059453aa_Optimizer* _self_, jule::Ptr<_20433367e_Struct>& _4738_s) {
	if (_4738_s.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _4738_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1dc12ad84:;
		if (it != expr.end()) {
			jule::Ptr<_20435cc5d_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1dc12b6c0:;
					if (it != expr.end()) {
						jule::Ptr<_2043393bb_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__202d2dd29_optimize(_5225_f.get()._field_Default.get()._field_Model);
							};
						}
						_iter_next_1dc12b6c0:;
						++it;
						goto _iter_begin_1dc12b6c0;
					}
					_iter_end_1dc12b6c0:;
				};
				{
					auto &expr = _5121_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1dc12ca56:;
					if (it != expr.end()) {
						jule::Ptr<_204ec707a_Fn> _5725_m = *it;
						{
							_20589e028_optimizeFunction(&(*_self_), _5725_m);
						}
						_iter_next_1dc12ca56:;
						++it;
						goto _iter_begin_1dc12ca56;
					}
					_iter_end_1dc12ca56:;
				};
			}
			_iter_next_1dc12ad84:;
			++it;
			goto _iter_begin_1dc12ad84;
		}
		_iter_end_1dc12ad84:;
	};
}



inline void _2058d3007_optimizeGlobals(_2059453aa_Optimizer* _self_, jule::Ptr<_20500dd70_Package>& _6339_p) {
	{
		auto &expr = _6339_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1dc12ccdc:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1dc12daac:;
					if (it != expr.end()) {
						jule::Ptr<_205031cb6_Var> _6525_v = *it;
						{
							_2058908bb_optimizeGlobal(&(*_self_), _6525_v);
						}
						_iter_next_1dc12daac:;
						++it;
						goto _iter_begin_1dc12daac;
					}
					_iter_end_1dc12daac:;
				};
			}
			_iter_next_1dc12ccdc:;
			++it;
			goto _iter_begin_1dc12ccdc;
		}
		_iter_end_1dc12ccdc:;
	};
}



inline void _2058d33ae_optimizeFunctions(_2059453aa_Optimizer* _self_, jule::Ptr<_20500dd70_Package>& _7141_p) {
	{
		auto &expr = _7141_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1dc12e22d:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1dc13000e:;
					if (it != expr.end()) {
						jule::Ptr<_204ec707a_Fn> _7325_func = *it;
						{
							_20589e028_optimizeFunction(&(*_self_), _7325_func);
						}
						_iter_next_1dc13000e:;
						++it;
						goto _iter_begin_1dc13000e;
					}
					_iter_end_1dc13000e:;
				};
			}
			_iter_next_1dc12e22d:;
			++it;
			goto _iter_begin_1dc12e22d;
		}
		_iter_end_1dc12e22d:;
	};
}



inline void _2058d4d3e_optimizeStructs(_2059453aa_Optimizer* _self_, jule::Ptr<_20500dd70_Package>& _7939_p) {
	{
		auto &expr = _7939_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1dc130680:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1dc131461:;
					if (it != expr.end()) {
						jule::Ptr<_20433367e_Struct> _8125_s = *it;
						{
							_20587212d_optimizeStruct(&(*_self_), _8125_s);
						}
						_iter_next_1dc131461:;
						++it;
						goto _iter_begin_1dc131461;
					}
					_iter_end_1dc131461:;
				};
			}
			_iter_next_1dc130680:;
			++it;
			goto _iter_begin_1dc130680;
		}
		_iter_end_1dc130680:;
	};
}



inline void _2058db153_optimizePackage(_2059453aa_Optimizer* _self_, jule::Ptr<_20500dd70_Package>& _8739_p) {
	_2058d3007_optimizeGlobals(&(*_self_), _8739_p);
	_2058d33ae_optimizeFunctions(&(*_self_), _8739_p);
	_2058d4d3e_optimizeStructs(&(*_self_), _8739_p);
}



inline void _2058e29c8_Optimize(_2059453aa_Optimizer* _self_) {
	_2058ead77_detectEnabled();
	if (_202bc7475_Deadcode) {
		_20596eb10_EliminateDefines((*_self_)._field_ir);
	};
	if ((_205872a8a_scopeEnabled || _205871935_exprEnabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_Used;
			auto it = expr.begin();
			_iter_begin_1dc133034:;
			if (it != expr.end()) {
				jule::Ptr<_20500ae16_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_2058db153_optimizePackage(&(*_self_), _10325_u.get()._field_Package);
					};
				}
				_iter_next_1dc133034:;
				++it;
				goto _iter_begin_1dc133034;
			}
			_iter_end_1dc133034:;
		};
		_2058db153_optimizePackage(&(*_self_), (*_self_)._field_ir.get()._field_Main);
	};
	if (_202bc7475_Deadcode) {
		_2059748b2_EliminateScopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2059453aa_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__20597d9ba_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__20597eb31_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__20597d9ba_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _20597e944_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__2059812d6_LogFlat(_20285b7ad_Log& _1424_l) {
	jule::outln(_1424_l._field_Text);
}



inline void static__2059814e5_LogError(_20285b7ad_Log& _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1925_l._field_Text);
	static__20597d9ba_Reset();
	if ((_1925_l._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1925_l._field_Path);
	};
	if (((_1925_l._field_Row != 0LL) && (_1925_l._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_204ebc823_Itoa(_1925_l._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_204ebc823_Itoa(_1925_l._field_Column));
	};
	if ((_1925_l._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _2027d66d3_TrimLeft(_1925_l._field_Line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1925_l._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_2027d66d3_TrimLeft(_3621_line,jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _204ebc823_Itoa(_1925_l._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_2027b6509_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_2027b6509_Repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1925_l._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1925_l._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_2027b6509_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__20597eb31_Print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1925_l._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__205981704_Log(_20285b7ad_Log& _6520_l) {
	{
		auto &_match_expr{ _6520_l._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1dc144ae5:;
			{
				static__2059812d6_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1dc144b5b:;
			{
				static__2059814e5_LogError(_6520_l);
			}
		}
		_match_end_1dc144683:;
	};
}



inline void static__205981913_PrintLogs(jule::Slice<_20285b7ad_Log>& _7526_logs) {
	{
		auto &expr = _7526_logs;
		auto it = expr.begin();
		_iter_begin_1dc138de7:;
		if (it != expr.end()) {
			_20285b7ad_Log &_7616_l = *it;
			{
				static__205981704_Log(_7616_l);
			}
			_iter_next_1dc138de7:;
			++it;
			goto _iter_begin_1dc138de7;
		}
		_iter_end_1dc138de7:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_204ebc823_Itoa(static_cast<jule::I64>(_7526_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _20598102d_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1d7dc601d_Unix(_1d7dc5b66_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1d7dc85a3_unixYearToSeconds(_5717_y,_5617_leap);;
	_6817_t+=_1d7dc8938_unixMonthToSeconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_Hour);
	_6817_t+=(60LLU * (*_self_)._field_Minute);
	_6817_t+=(*_self_)._field_Second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7dc5b66_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1d7dc6309_Time static__1d7dc66a0_Unix(jule::U64 _9120_sec) {
	return _1d7dc6309_Time{._field_sec=_9120_sec};
}



inline _1d7dc6309_Time static__1d7dc689d_Now(void) {
	return static__1d7dc66a0_Unix(static_cast<jule::U64>(_1d7dc8295_unix()));
}



inline jule::U64 _1d7dc6cee_Unix(_1d7dc6309_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1d7dc7063_Day(_1d7dc6309_Time* _self_) {
	return _1d7dc7edc_Abs(&(*_self_))._field_Day;
}



inline jule::U64 _1d7dc72c7_Month(_1d7dc6309_Time* _self_) {
	return _1d7dc7edc_Abs(&(*_self_))._field_Month;
}



inline jule::U64 _1d7dc753b_Year(_1d7dc6309_Time* _self_) {
	return _1d7dc7edc_Abs(&(*_self_))._field_Year;
}



inline jule::U64 _1d7dc77a0_Second(_1d7dc6309_Time* _self_) {
	return _1d7dc7edc_Abs(&(*_self_))._field_Second;
}



inline jule::U64 _1d7dc7a14_Minute(_1d7dc6309_Time* _self_) {
	return _1d7dc7edc_Abs(&(*_self_))._field_Minute;
}



inline jule::U64 _1d7dc7c78_Hour(_1d7dc6309_Time* _self_) {
	return _1d7dc7edc_Abs(&(*_self_))._field_Hour;
}



inline _1d7dc5b66_AbsTime _1d7dc7edc_Abs(_1d7dc6309_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1d7dc5209_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1d7dc5209_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1dbcd5cd6:;
	}
	_iter_end_1dbcd5cd6:;;
	_1d7dc5b66_AbsTime _17417_t = _1d7dc5b66_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7dc6309_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d72106cc_scopeCoder> static__1d7210d09_new(jule::Ptr<_1d7dcd553_ObjectCoder>& _5524_oc) {
	return jule::new_ptr<_1d72106cc_scopeCoder>(_1d72106cc_scopeCoder{._field_oc=_5524_oc});
}



inline void _1d721107e_rangeIndexIter(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204ede2e5_RangeIter>& _6139_it) {
	jule::Str _6213_begin = static__1d7d3d6c2_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	jule::Str _6313_next = static__1d7d3dc11_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1d7da5d22_addIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_202bc2e43_Copy && _1d7215eb8_isCopyOptimizable(_6139_it.get()._field_Expr))) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1d7d34ac5_model(_self_.get()._field_oc.get()._field_ec, _6139_it.get()._field_Expr.get()._field_Model);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, _6213_begin);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1d7da5d22_addIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_1d7dceba3_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1d7d4374e_indent(_self_.get()._field_oc);
	};
	if ((_6139_it.get()._field_KeyB != nullptr)) {
		if (_202bc2e43_Copy) {
			_6139_it.get()._field_KeyB.get()._field_Reference=_1d721634d_isIterCopyOptimizable(_6139_it.get()._field_Expr,_6139_it.get()._field_KeyB);
		};
		_1d7dceba3_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1d7d4374e_indent(_self_.get()._field_oc);
	};
	_1d72158e1_scope(_self_, _6139_it.get()._field_Scope);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, _6313_next);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1d7d4374e_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3d42a_var(_6139_it.get()._field_KeyA));
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1d7d4374e_indent(_self_.get()._field_oc);
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1d7d72d77_write(_self_.get()._field_oc, _6213_begin);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1d7da6707_doneIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3d969_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it))));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1d7da6707_doneIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1d7211304_rangeHashmapIter(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204ede2e5_RangeIter>& _12941_it) {
	jule::Str _13013_begin = static__1d7d3d6c2_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	jule::Str _13113_next = static__1d7d3dc11_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1d7da5d22_addIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_202bc2e43_Copy && _1d7215eb8_isCopyOptimizable(_12941_it.get()._field_Expr))) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1d7d34ac5_model(_self_.get()._field_oc.get()._field_ec, _12941_it.get()._field_Expr.get()._field_Model);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, _13013_begin);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1d7da5d22_addIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	if ((_12941_it.get()._field_KeyA != nullptr)) {
		if (_202bc2e43_Copy) {
			_12941_it.get()._field_KeyA.get()._field_Reference=_1d721634d_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyA);
		};
		_1d7dceba3_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1d7d4374e_indent(_self_.get()._field_oc);
	};
	if ((_12941_it.get()._field_KeyB != nullptr)) {
		if (_202bc2e43_Copy) {
			_12941_it.get()._field_KeyB.get()._field_Reference=_1d721634d_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyB);
		};
		_1d7dceba3_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1d7d4374e_indent(_self_.get()._field_oc);
	};
	_1d72158e1_scope(_self_, _12941_it.get()._field_Scope);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, _13113_next);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1d7d72d77_write(_self_.get()._field_oc, _13013_begin);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1d7da6707_doneIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3d969_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it))));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1d7da6707_doneIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1d7211579_ifCase(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204edca41_If> _19530_i) {
	if ((_19530_i.get()._field_Expr != nullptr)) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _19530_i.get()._field_Expr);
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1d72158e1_scope(_self_, _19530_i.get()._field_Scope);
}



inline void _1d72117ee_conditional(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204edd1a1_Conditional> _20435_c) {
	jule::Bool _20517_writed = false;;
	{
		auto &expr = _20435_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1dbd98393:;
		if (it != expr.end()) {
			jule::Ptr<_204edca41_If> _20621_elif = *it;
			{
				if ((_20621_elif == nullptr)) {
					goto _iter_next_1dbd98393;
				};
				if (_20517_writed) {
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_20517_writed=true;
				_1d7211579_ifCase(_self_, _20621_elif);
			}
			_iter_next_1dbd98393:;
			++it;
			goto _iter_begin_1dbd98393;
		}
		_iter_end_1dbd98393:;
	};
	if ((_20435_c.get()._field_Default != nullptr)) {
		if (_20517_writed) {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1d72158e1_scope(_self_, _20435_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1d7211a74_infIter(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204edd48c_InfIter> _22431_it) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1d7da5d22_addIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d72158e1_scope(_self_, _22431_it.get()._field_Scope);
	_1d7da6707_doneIndent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3dc11_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3d969_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1d7211ce9_whileIter(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204edd910_WhileIter> _24133_it) {
	if (((_24133_it.get()._field_Expr != nullptr) && (_24133_it.get()._field_Next == nullptr))) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_24133_it.get()._field_Expr != nullptr)) {
			_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		};
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_24133_it.get()._field_Next != nullptr)) {
			_1d72153e6_st(_self_, _24133_it.get()._field_Next);
		};
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1d7da5d22_addIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d72158e1_scope(_self_, _24133_it.get()._field_Scope);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1d7da6707_doneIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3dc11_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3d969_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1d721206e_rangeIter(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204ede2e5_RangeIter> _27433_it) {
	{
		
		if ((_2050ad97a_Slc(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1dbda9c9a:;
			{
				_1d721107e_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_2050ad716_Arr(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1dbda996a:;
			{
				_1d721107e_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_2050ae42b_Map(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1dbda99d1:;
			{
				_1d7211304_rangeHashmapIter(_self_, _27433_it);
			}
		}
		else {
			_case_begin_1dbda9904:;
			{
				_1d721107e_rangeIndexIter(_self_, _27433_it);
			}
		}
		_match_end_1dbda9827:;
	};
}



inline void _1d72122e4_cont(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204ede6e1_ContSt> _28724_c) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3dc11_iterNext(_28724_c.get()._field_It));
}



inline void _1d7212569_label(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204eded84_Label> _29225_l) {
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3dea8_label(_29225_l.get()._field_Ident));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1d72127de_gotoSt(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204ee0170_GotoSt> _29726_gt) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3dea8_label(_29726_gt.get()._field_Ident));
}



inline void _1d7212a64_postfix(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204ee0527_Postfix> _30231_p) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _30231_p.get()._field_Expr);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1d7d72d77_write(_self_.get()._field_oc, _30231_p.get()._field_Op);
}



inline void _1d7212cd9_assign(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204ee099a_Assign> _30930_a) {
	_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_L.get()._field_Model);
	_1d7d72d77_write(_self_.get()._field_oc, _30930_a.get()._field_Op.get()._field_Kind);
	_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_R.get()._field_Model);
}



inline void _1d721305e_mapLookupAssign(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204ee0d52_MultiAssign>& _31540_a) {
	jule::Ptr<_204ec2581_IndexingExprModel> _31617_iem = _31540_a.get()._field_R.operator jule::Ptr<_204ec2581_IndexingExprModel>();;
	_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _31617_iem.get()._field_Expr.get()._field_Model);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _31617_iem.get()._field_Index.get()._field_Model);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if ((_31540_a.get()._field_L[0LL] != nullptr)) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _31540_a.get()._field_L[0LL]);
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if ((_31540_a.get()._field_L[1LL] != nullptr)) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _31540_a.get()._field_L[1LL]);
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72132d4_multiAssign(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204ee0d52_MultiAssign> _33835_a) {
	{
		auto &_match_expr{ _33835_a.get()._field_R };
		
		if (_match_expr.type_is<jule::Ptr<_204ec2581_IndexingExprModel>>()) {
			_case_begin_1dbdbb95a:;
			{
				_1d721305e_mapLookupAssign(_self_, _33835_a);
				return;;
			}
		}
		_match_end_1dbdbb74b:;
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _33835_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1dbdbbe77:;
		if (it != expr.end()) {
			jule::I64 _34714_i = it - expr.begin();
			jule::Any _34721_l = *it;
			{
				if ((_34721_l == nullptr)) {
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _34721_l);
				};
				if (((_33835_a.get()._field_L.len() - _34714_i) > 1LL)) {
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1dbdbbe77:;
			++it;
			_34714_i++;
			goto _iter_begin_1dbdbbe77;
		}
		_iter_end_1dbdbbe77:;
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _33835_a.get()._field_R);
}



inline jule::Fn<void(void)> _1d72135e2_matchExpr(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204ee1391_Match> _36133_m) {
	if ((!(_20508050c_IsConst(_36133_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_20442483b_IsBool(_36133_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_204458e9c_ReadBool(_36133_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1d7d34ac5_model(_self_.get()._field_oc.get()._field_ec, _36133_m.get()._field_Expr.get()._field_Model);
		});
	};
	return nullptr;
}



inline void _1d7213911_case(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204ee1391_Match> _37128_m, jule::Ptr<_204ee1ddb_Case> _37143_c) {
	if (((_37143_c.get()._field_Exprs.len() != 0LL) && (!(_204ee189c_IsGenericTypeMatch(_37128_m.ptr()))))) {
		if (((_37128_m.get()._field_Cases.len() > 0LL) && (_37128_m.get()._field_Cases[0LL] == _37143_c))) {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _37143_c.get()._field_Exprs;
			auto it = expr.begin();
			_iter_begin_1dbdc51b1:;
			if (it != expr.end()) {
				jule::I64 _37818_i = it - expr.begin();
				jule::Ptr<_20507eb49_Data> _37825_expr = *it;
				{
					{
						
						if ((!(_37128_m.get()._field_TypeMatch))) {
							_case_begin_1dbdc723a:;
							{
								jule::Fn<void(void)> _38125_caseExpr = _1d72135e2_matchExpr(_self_, _37128_m);;
								if (_20508081a_GoodOperand(_37128_m.get()._field_Expr.ptr(), _37825_expr)) {
									if ((_38125_caseExpr != nullptr)) {
										_38125_caseExpr();
										_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _37825_expr.get()._field_Model);
								} else {
									_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _37825_expr.get()._field_Model);
									if ((_38125_caseExpr != nullptr)) {
										_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_38125_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1dbdc6c62:;
							{
								_1d7d72d77_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _37825_expr.get()._field_Model);
								_1d7d72d77_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_1dbdc6b85:;
					};
					if (((_37143_c.get()._field_Exprs.len() - _37818_i) > 1LL)) {
						_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1dbdc51b1:;
				++it;
				_37818_i++;
				goto _iter_begin_1dbdc51b1;
			}
			_iter_end_1dbdc51b1:;
		};
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_37128_m.get()._field_Default == _37143_c) && (_37128_m.get()._field_Cases.len() != 0LL))) {
		_1d7d4374e_indent(_self_.get()._field_oc);
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1d7da5d22_addIndent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3e4e7_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37143_c))));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_37143_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1d7d4374e_indent(_self_.get()._field_oc);
		_1d72158e1_scope(_self_, _37143_c.get()._field_Scope);
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1d7da6707_doneIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1d7213b86_matchSt(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204ee1391_Match> _43031_m) {
	if (((_43031_m.get()._field_Cases.len() == 0LL) && (_43031_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _43513_genericTypeMatch = _204ee189c_IsGenericTypeMatch(_43031_m.ptr());;
	if ((_43513_genericTypeMatch && ((_43031_m.get()._field_Default == nullptr) || (_43031_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1d7da5d22_addIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	if (((!(_43513_genericTypeMatch)) && (!(_20508050c_IsConst(_43031_m.get()._field_Expr.ptr()))))) {
		if ((_202bc2e43_Copy && _1d7215eb8_isCopyOptimizable(_43031_m.get()._field_Expr))) {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _43031_m.get()._field_Expr.get()._field_Model);
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1d7d4374e_indent(_self_.get()._field_oc);
	};
	if ((_43031_m.get()._field_Cases.len() > 0LL)) {
		{
			auto &expr = _43031_m.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1dc1a5705:;
			if (it != expr.end()) {
				jule::Ptr<_204ee1ddb_Case> _45925_c = *it;
				{
					if ((_45925_c == nullptr)) {
						goto _iter_next_1dc1a5705;
					};
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1d7d4374e_indent(_self_.get()._field_oc);
					_1d7213911_case(_self_, _43031_m,_45925_c);
				}
				_iter_next_1dc1a5705:;
				++it;
				goto _iter_begin_1dc1a5705;
			}
			_iter_end_1dc1a5705:;
		};
	};
	if ((_43031_m.get()._field_Default != nullptr)) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1d7213911_case(_self_, _43031_m,_43031_m.get()._field_Default);
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3e250_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43031_m))));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1d7da6707_doneIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1d7213e0b_fallSt(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204ee2491_FallSt> _48626_f) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3e4e7_caseBegin(_48626_f.get()._field_DestCase));
}



inline void _1d7214181_breakSt(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204edea98_BreakSt> _49127_b) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_49127_b.get()._field_It != 0LLU)) {
		_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3d969_iterEnd(_49127_b.get()._field_It));
	} else {
		_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3e250_matchEnd(_49127_b.get()._field_Mtch));
	};
}



inline void _1d7214406_retWithVars(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204ee2914_RetSt> _50035_r) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_50035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_50035_r.get()._field_Func.get()._field_Result));
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_50035_r.get()._field_Vars.len() > 1LL)) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _50035_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1dc1b1090:;
		if (it != expr.end()) {
			jule::I64 _51014_i = it - expr.begin();
			jule::Ptr<_205031cb6_Var> _51021_v = *it;
			{
				if (_202b8be1d_IsIgnoreIdent(_51021_v.get()._field_Ident)) {
					_1d7d35345_initExpr(_self_.get()._field_oc.get()._field_ec, _51021_v.get()._field_Kind.get()._field_Kind);
				} else {
					_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3d42a_var(_51021_v));
				};
				if (((_50035_r.get()._field_Vars.len() - _51014_i) > 1LL)) {
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1dc1b1090:;
			++it;
			_51014_i++;
			goto _iter_begin_1dc1b1090;
		}
		_iter_end_1dc1b1090:;
	};
	if ((_50035_r.get()._field_Vars.len() > 1LL)) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_50035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1d721467b_retTuple(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204ee2914_RetSt> _53032_r) {
	jule::Slice<jule::Ptr<_20507eb49_Data>> _53117_datas = _53032_r.get()._field_Expr.operator jule::Ptr<_204ec3dce_TupleExprModel>().get()._field_Datas;;
	{
		auto &expr = _53032_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1dc1b6617:;
		if (it != expr.end()) {
			jule::I64 _53214_i = it - expr.begin();
			jule::Ptr<_205031cb6_Var> _53221_v = *it;
			{
				if (_202b8be1d_IsIgnoreIdent(_53221_v.get()._field_Ident)) {
					goto _iter_next_1dc1b6617;
				};
				jule::Any _53621_model = _53117_datas[_53214_i].get()._field_Model;;
				if ((_53621_model == _53221_v)) {
					goto _iter_next_1dc1b6617;
				};
				_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3d42a_var(_53221_v));
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _53621_model);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1d7d4374e_indent(_self_.get()._field_oc);
			}
			_iter_next_1dc1b6617:;
			++it;
			_53214_i++;
			goto _iter_begin_1dc1b6617;
		}
		_iter_end_1dc1b6617:;
	};
	if (_53032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_53032_r.get()._field_Func.get()._field_Result));
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _53117_datas;
		auto it = expr.begin();
		_iter_begin_1dc1bb562:;
		if (it != expr.end()) {
			jule::I64 _55714_i = it - expr.begin();
			jule::Ptr<_20507eb49_Data> _55721_d = *it;
			{
				jule::Ptr<_205031cb6_Var> _55821_v = _53032_r.get()._field_Vars[_55714_i];;
				if (_202b8be1d_IsIgnoreIdent(_55821_v.get()._field_Ident)) {
					_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _55721_d.get()._field_Model);
				} else {
					_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3d42a_var(_55821_v));
				};
				if (((_53117_datas.len() - _55714_i) > 1LL)) {
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1dc1bb562:;
			++it;
			_55714_i++;
			goto _iter_begin_1dc1bb562;
		}
		_iter_end_1dc1bb562:;
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_53032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1d7214901_retWithExprs(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204ee2914_RetSt> _57536_r) {
	if ((_57536_r.get()._field_Vars.len() > 1LL)) {
		_1d721467b_retTuple(_self_, _57536_r);
		return;;
	};
	if ((_57536_r.get()._field_Vars.len() > 0LL)) {
		jule::Ptr<_205031cb6_Var> _58321_v = _57536_r.get()._field_Vars[0LL];;
		if (((!(_202b8be1d_IsIgnoreIdent(_58321_v.get()._field_Ident))) && (_57536_r.get()._field_Expr != _58321_v))) {
			jule::Str _58521_ident = static__1d7d3d42a_var(_58321_v);;
			_1d7d72d77_write(_self_.get()._field_oc, _58521_ident);
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _57536_r.get()._field_Expr);
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_1d7d4374e_indent(_self_.get()._field_oc);
			if (_57536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_57536_r.get()._field_Func.get()._field_Result));
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_1d7d72d77_write(_self_.get()._field_oc, _58521_ident);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_1d7d72d77_write(_self_.get()._field_oc, _58521_ident);
			};
			return;;
		};
	};
	if (_57536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_57536_r.get()._field_Func.get()._field_Result));
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _57536_r.get()._field_Expr);
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _57536_r.get()._field_Expr);
	return;;
}



inline void _1d7214b76_retSt(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204ee2914_RetSt> _61929_r) {
	if (((_61929_r.get()._field_Expr == nullptr) && (_61929_r.get()._field_Vars.len() == 0LL))) {
		if (_61929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_61929_r.get()._field_Expr == nullptr)) {
		_1d7214406_retWithVars(_self_, _61929_r);
		return;;
	};
	_1d7214901_retWithExprs(_self_, _61929_r);
}



inline void _1d7215171_var(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_205031cb6_Var> _65427_v) {
	if ((!(_65427_v.get()._field_Constant))) {
		_1d7dcecd5_var(_self_.get()._field_oc, _65427_v);
	};
}



inline void _1d72153e6_st(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Any _66126_st) {
	if ((_66126_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _66126_st };
		
		if (_match_expr.type_is<jule::Ptr<_204edc645_Scope>>()) {
			_case_begin_1dc1d4c1d:;
			{
				_1d72158e1_scope(_self_, _66126_st.operator jule::Ptr<_204edc645_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_205031cb6_Var>>()) {
			_case_begin_1dc1d4712:;
			{
				_1d7215171_var(_self_, _66126_st.operator jule::Ptr<_205031cb6_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20507eb49_Data>>()) {
			_case_begin_1dc1d524b:;
			{
				_1d7d34d4a_expr(_self_.get()._field_oc.get()._field_ec, _66126_st.operator jule::Ptr<_20507eb49_Data>().get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204edd1a1_Conditional>>()) {
			_case_begin_1dc1d52b2:;
			{
				_1d72117ee_conditional(_self_, _66126_st.operator jule::Ptr<_204edd1a1_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204edd48c_InfIter>>()) {
			_case_begin_1dc1d5328:;
			{
				_1d7211a74_infIter(_self_, _66126_st.operator jule::Ptr<_204edd48c_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204edd910_WhileIter>>()) {
			_case_begin_1dc1d538e:;
			{
				_1d7211ce9_whileIter(_self_, _66126_st.operator jule::Ptr<_204edd910_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ede2e5_RangeIter>>()) {
			_case_begin_1dc1d5405:;
			{
				_1d721206e_rangeIter(_self_, _66126_st.operator jule::Ptr<_204ede2e5_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ede6e1_ContSt>>()) {
			_case_begin_1dc1d546b:;
			{
				_1d72122e4_cont(_self_, _66126_st.operator jule::Ptr<_204ede6e1_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204eded84_Label>>()) {
			_case_begin_1dc1d54d2:;
			{
				_1d7212569_label(_self_, _66126_st.operator jule::Ptr<_204eded84_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ee0170_GotoSt>>()) {
			_case_begin_1dc1d5548:;
			{
				_1d72127de_gotoSt(_self_, _66126_st.operator jule::Ptr<_204ee0170_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ee0527_Postfix>>()) {
			_case_begin_1dc1d55ae:;
			{
				_1d7212a64_postfix(_self_, _66126_st.operator jule::Ptr<_204ee0527_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ee099a_Assign>>()) {
			_case_begin_1dc1d5625:;
			{
				_1d7212cd9_assign(_self_, _66126_st.operator jule::Ptr<_204ee099a_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ee0d52_MultiAssign>>()) {
			_case_begin_1dc1d568b:;
			{
				_1d72132d4_multiAssign(_self_, _66126_st.operator jule::Ptr<_204ee0d52_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ee1391_Match>>()) {
			_case_begin_1dc1d5713:;
			{
				_1d7213b86_matchSt(_self_, _66126_st.operator jule::Ptr<_204ee1391_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ee2491_FallSt>>()) {
			_case_begin_1dc1d578a:;
			{
				_1d7213e0b_fallSt(_self_, _66126_st.operator jule::Ptr<_204ee2491_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204edea98_BreakSt>>()) {
			_case_begin_1dc1d5812:;
			{
				_1d7214181_breakSt(_self_, _66126_st.operator jule::Ptr<_204edea98_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ee2914_RetSt>>()) {
			_case_begin_1dc1d5889:;
			{
				_1d7214b76_retSt(_self_, _66126_st.operator jule::Ptr<_204ee2914_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_203acb950_PushToSliceExprModel>>()) {
			_case_begin_1dc1d5911:;
			{
				_1d7d32a5c_pushToSlice(_self_.get()._field_oc.get()._field_ec, _66126_st.operator jule::Ptr<_203acb950_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20407b10d_MutSlicingExprModel>>()) {
			_case_begin_1dc1d5988:;
			{
				_1d7d345ca_mutSlicing(_self_.get()._field_oc.get()._field_ec, _66126_st.operator jule::Ptr<_20407b10d_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_202c0764d_StrInsertBeginExprModel>>()) {
			_case_begin_1dc1d5a10:;
			{
				_1d7d34850_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _66126_st.operator jule::Ptr<_202c0764d_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1dc1d43e3:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1dc1d48ee:;
	};
}



inline void _1d721566b_scopeStmts(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204edc645_Scope>& _71135_s) {
	{
		auto &expr = _71135_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1dc1e117a:;
		if (it != expr.end()) {
			jule::Any _71221_st = *it;
			{
				_1d7d4374e_indent(_self_.get()._field_oc);
				_1d72153e6_st(_self_, _71221_st);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1dc1e117a:;
			++it;
			goto _iter_begin_1dc1e117a;
		}
		_iter_end_1dc1e117a:;
	};
}



inline void _1d72158e1_scope(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204edc645_Scope> _72029_s) {
	_1d7da5d22_addIndent(_self_.get()._field_oc);
	if (_72029_s.get()._field_Deferred) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1d721566b_scopeStmts(_self_, _72029_s);
	_1d7da6707_doneIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_72029_s.get()._field_Deferred) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1d7215b66_funcScope(jule::Ptr<_1d72106cc_scopeCoder> _self_, jule::Ptr<_204ec7454_FnIns> _73633_f) {
	if ((_73633_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1d7da5d22_addIndent(_self_.get()._field_oc);
	if ((!(_2043a5a53_IsVoid(_73633_f.get()._field_Decl.ptr())))) {
		jule::Slice<jule::Ptr<_2050aa8de_TypeKind>> _74321_types = _2043c5237_Types(_73633_f.ptr());;
		{
			auto &expr = _73633_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
			auto it = expr.begin();
			_iter_begin_1dc1e75e3:;
			if (it != expr.end()) {
				jule::I64 _74417_i = it - expr.begin();
				jule::Ptr<_202b89679_Token> _74420_ident = *it;
				{
					if ((_202b8be1d_IsIgnoreIdent(_74420_ident.get()._field_Kind) || _202b8c1b5_IsAnonIdent(_74420_ident.get()._field_Kind))) {
						goto _iter_next_1dc1e75e3;
					};
					_1d7d4374e_indent(_self_.get()._field_oc);
					_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_74321_types[_74417_i]));
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3bd1e_toLocal(_74420_ident.get()._field_Row,_74420_ident.get()._field_Column,_74420_ident.get()._field_Kind));
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1d7d35345_initExpr(_self_.get()._field_oc.get()._field_ec, _74321_types[_74417_i]);
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_1dc1e75e3:;
				++it;
				_74417_i++;
				goto _iter_begin_1dc1e75e3;
			}
			_iter_end_1dc1e75e3:;
		};
	};
	_1d721566b_scopeStmts(_self_, _73633_f.get()._field_Scope);
	if ((_73633_f.get()._field_Decl.get()._field_Exceptional && _2043a5a53_IsVoid(_73633_f.get()._field_Decl.ptr()))) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_1d7da6707_doneIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1d72106cc_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d7d28ca6_exprCoder> static__1d7d291a2_new(jule::Ptr<_1d7dcd553_ObjectCoder>& _10324_oc) {
	return jule::new_ptr<_1d7d28ca6_exprCoder>(_1d7d28ca6_exprCoder{._field_oc=_10324_oc});
}



inline void _1d7d29427_string(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_2044102b6_Const>& _10927_c) {
	jule::Str _11013_content = _204461834_ReadStr(_10927_c.ptr());;
	if ((_11013_content.len() == 0LL)) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _11513_bytes = static_cast<jule::Slice<jule::U8>>(_11013_content);;
	jule::Str _11613_len = _204ebc6e1_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_11513_bytes.len())),10LL);;
	jule::Str _11713_lit = _1d7d36049_cstrLit(_11513_bytes);;
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1d7d72d77_write(_self_.get()._field_oc, _11713_lit);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1d7d72d77_write(_self_.get()._field_oc, _11613_len);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d7d2969c_boolean(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_2044102b6_Const>& _12628_c) {
	if (_204458e9c_ReadBool(_12628_c.ptr())) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _1d7d29878_nilLit(jule::Ptr<_1d7d28ca6_exprCoder> _self_) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1d7d29b86_ftoaSpecialCases(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::F64& _13837_x) {
	{
		
		if (_204e12a76_IsNaN(_13837_x)) {
			_case_begin_1dc21a5b1:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_204e19d7a_IsInf(_13837_x,1LL)) {
			_case_begin_1dc219d52:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_204e19d7a_IsInf(_13837_x,-1LL)) {
			_case_begin_1dc219db8:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1dc219cdb:;
			{
				return false;
			}
		}
		_match_end_1dc219c0e:;
	};
	return true;
}



inline void _1d7d29e0b_float32(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_2044102b6_Const>& _15228_c) {
	jule::F64 _15313_x = _20446423d_AsF64(_15228_c.ptr());;
	if (_1d7d29b86_ftoaSpecialCases(_self_, _15313_x)) {
		return;;
	};
	{
		
		if ((_15313_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1dc21da9d:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15313_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1dc21d482:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1dc21ccab:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, _1d7d36357_ftoa(_15313_x,32LL));
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1dc21cc56:;
	};
}



inline void _1d7d2a181_float64(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_2044102b6_Const>& _17128_c) {
	jule::F64 _17213_x = _20446423d_AsF64(_17128_c.ptr());;
	if (_1d7d29b86_ftoaSpecialCases(_self_, _17213_x)) {
		return;;
	};
	{
		
		if ((_17213_x == jule::MAX_F64)) {
			_case_begin_1dc2216b6:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17213_x == jule::MIN_F64)) {
			_case_begin_1dc221dc0:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1dc221122:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, _1d7d36357_ftoa(_17213_x,64LL));
			}
		}
		_match_end_1dc2210bc:;
	};
}



inline void _1d7d2a406_constant(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_2044102b6_Const> _18932_c) {
	{
		
		if (_2044610e7_IsStr(_18932_c.ptr())) {
			_case_begin_1dc223a92:;
			{
				_1d7d29427_string(_self_, _18932_c);
			}
		}
		else if (_20442483b_IsBool(_18932_c.ptr())) {
			_case_begin_1dc223630:;
			{
				_1d7d2969c_boolean(_self_, _18932_c);
			}
		}
		else if (_204477240_IsF64(_18932_c.ptr())) {
			_case_begin_1dc223696:;
			{
				{
					
					if ((_18932_c.get()._field_Kind == jule::Str("f32", 3))) {
						_case_begin_1dc225ae9:;
						{
							_1d7d29e0b_float32(_self_, _18932_c);
						}
					}
					else {
						_case_begin_1dc225753:;
						{
							_1d7d2a181_float64(_self_, _18932_c);
						}
					}
					_match_end_1dc225676:;
				};
			}
		}
		else if (_20447788e_IsI64(_18932_c.ptr())) {
			_case_begin_1dc22370c:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, _1d7d365ee_itoa(static_cast<jule::I64>(_204457561_ReadI64(_18932_c.ptr()))));
			}
		}
		else if (_2044223e9_IsU64(_18932_c.ptr())) {
			_case_begin_1dc223773:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, _1d7d36896_utoa(static_cast<jule::U64>(_20445874e_ReadU64(_18932_c.ptr()))));
			}
		}
		else if (_204ebe7d1_IsNil(_18932_c.ptr())) {
			_case_begin_1dc22418b:;
			{
				_1d7d29878_nilLit(_self_);
			}
		}
		else {
			_case_begin_1dc2235b9:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1dc2234dc:;
	};
}



inline void _1d7d2a7be_divByZeroBinary(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_202b89679_Token>& _21336_op, jule::Ptr<_204ec133d_OperandExprModel>& _21353_l, jule::Ptr<_204ec133d_OperandExprModel>& _21380_r) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _21336_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1dc22938e:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1dc229405:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1dc2292b2:;
	};
	if ((!(_20089198d_Production))) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1d7da33a2_locInfo(_self_.get()._field_oc, _21336_op);
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1d7d34d4a_expr(_self_, _21353_l.get()._field_Model);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1d7d34d4a_expr(_self_, _21380_r.get()._field_Model);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d7d2aa44_unsafeBinary(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec152a_BinopExprModel> _23536_m) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1d7d34ac5_model(_self_, _23536_m.get()._field_Left.get()._field_Model);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1d7d72d77_write(_self_.get()._field_oc, _23536_m.get()._field_Op.get()._field_Kind);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1d7d34ac5_model(_self_, _23536_m.get()._field_Right.get()._field_Model);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d7d2acb9_binary(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec152a_BinopExprModel> _24530_m) {
	{
		auto &_match_expr{ _24530_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1dc231440:;
			{
				if ((_2050ade53_Struct(_24530_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1d7d2a7be_divByZeroBinary(_self_, _24530_m.get()._field_Op,_24530_m.get()._field_Left,_24530_m.get()._field_Right);
					return;;
				};
			}
		}
		_match_end_1dc231374:;
	};
	_1d7d2aa44_unsafeBinary(_self_, _24530_m);
}



inline void _1d7d2b03e_var(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_205031cb6_Var> _25727_m) {
	if (_25727_m.get()._field_CppLinked) {
		jule::Ptr<_20430829c_Directive> _25917_d = _1d7dd9c24_findDirective(_25727_m.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_25917_d != nullptr)) {
			_1d7d72d77_write(_self_.get()._field_oc, _1d7dd17ed_concatAllParts(_25917_d.get()._field_Args));
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3d42a_var(_25727_m));
}



inline void _1d7d2b2b4_structureIns(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_20435cc5d_StructIns> _26836_m) {
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd5ca8_structureIns(_26836_m));
}



inline void _1d7d2b539_unary(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec1717_UnaryExprModel> _27229_m) {
	{
		auto &_match_expr{ _27229_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1dc2364cd:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1d7d34d4a_expr(_self_, _27229_m.get()._field_Expr.get()._field_Model);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1dc236555:;
			{
				if ((_20089198d_Production || (_2050acc65_Sptr(_27229_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1dc236401;
				};
				_1d7d34d4a_expr(_self_, _27229_m.get()._field_Expr.get()._field_Model);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1d7da33a2_locInfo(_self_.get()._field_oc, _27229_m.get()._field_Op);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1dc236401:;
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1d7d72d77_write(_self_.get()._field_oc, _27229_m.get()._field_Op.get()._field_Kind);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1d7d34d4a_expr(_self_, _27229_m.get()._field_Expr.get()._field_Model);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1d7d2b7ae_structureLit(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec1ae1_StructLitExprModel> _29636_m) {
	if (_29636_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3cddb_structureIns(_29636_m.get()._field_Strct));
	if (_29636_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_29636_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _29636_m.get()._field_Strct.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1dc23e492:;
			if (it != expr.end()) {
				jule::I64 _30917_i = it - expr.begin();
				jule::Ptr<_2043393bb_FieldIns> _30920_f = *it;
				{
					{
						auto &expr = _29636_m.get()._field_Args;
						auto it = expr.begin();
						_iter_begin_1dc240284:;
						if (it != expr.end()) {
							jule::Ptr<_204ec1904_StructArgExprModel> _31029_arg = *it;
							{
								if ((_31029_arg.get()._field_Field == _30920_f)) {
									_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3d183_field(_31029_arg.get()._field_Field.get()._field_Decl));
									_1d7d72d77_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1d7d34d4a_expr(_self_, _31029_arg.get()._field_Expr);
									if (((_29636_m.get()._field_Strct.get()._field_Fields.len() - _30917_i) > 1LL)) {
										_1d7d72d77_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1dc23e492;
								};
							}
							_iter_next_1dc240284:;
							++it;
							goto _iter_begin_1dc240284;
						}
						_iter_end_1dc240284:;
					};
				}
				_iter_next_1dc23e492:;
				++it;
				_30917_i++;
				goto _iter_begin_1dc23e492;
			}
			_iter_end_1dc23e492:;
		};
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1d7d2ba34_allocStructure(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec1ccd_AllocStructLitExprModel> _32738_m) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3cddb_structureIns(_32738_m.get()._field_Lit.get()._field_Strct));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1d7d2b7ae_structureLit(_self_, _32738_m.get()._field_Lit);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d7d2bca9_casting(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec1eba_CastingExprModel> _33531_m) {
	{
		
		if (((_2050aca01_Prim(_33531_m.get()._field_Kind.ptr()) != nullptr) && _2050b385e_IsAny(_2050aca01_Prim(_33531_m.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1dc2469b6:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_33531_m.get()._field_Kind));
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1d7d34ac5_model(_self_, _33531_m.get()._field_Expr);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_2050acec9_Ptr(_33531_m.get()._field_ExprKind.ptr()) != nullptr) || (_2050acec9_Ptr(_33531_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1dc246884:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_33531_m.get()._field_Kind));
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1d7d34d4a_expr(_self_, _33531_m.get()._field_Expr);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_2050ae1b7_Trait(_33531_m.get()._field_ExprKind.ptr()) != nullptr) || ((_2050aca01_Prim(_33531_m.get()._field_ExprKind.ptr()) != nullptr) && _2050b385e_IsAny(_2050aca01_Prim(_33531_m.get()._field_ExprKind.ptr()).ptr())) || (_2050ad4a2_TypeEnum(_33531_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1dc246554:;
			{
				_1d7d34ac5_model(_self_, _33531_m.get()._field_Expr);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_20089198d_Production) {
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_33531_m.get()._field_Kind));
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if ((_2050acc65_Sptr(_33531_m.get()._field_Kind.ptr()) != nullptr)) {
						_1d7d72d77_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_2050acc65_Sptr(_33531_m.get()._field_Kind.ptr()).get()._field_Elem));
					} else {
						_1d7d72d77_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_33531_m.get()._field_Kind));
					};
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_1d7da33a2_locInfo(_self_.get()._field_oc, _33531_m.get()._field_Token);
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_2050ae1b7_Trait(_33531_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1dc2465ba:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_33531_m.get()._field_Kind));
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1d7d34d4a_expr(_self_, _33531_m.get()._field_Expr);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1d7d72d77_write(_self_.get()._field_oc, _204ebc823_Itoa(static_cast<jule::I64>(_1d7d63b9d_findTypeOffset(_self_.get()._field_oc.ptr(), _2050ae1b7_Trait(_33531_m.get()._field_Kind.ptr()),_33531_m.get()._field_ExprKind))));
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1dc2464dd:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_33531_m.get()._field_Kind));
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1d7d34d4a_expr(_self_, _33531_m.get()._field_Expr);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1dc246411:;
	};
}



inline void _1d7d2c02e_args(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Slice<jule::Any> _38628_args) {
	if ((_38628_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _38628_args;
		auto it = expr.begin();
		_iter_begin_1dc258423:;
		if (it != expr.end()) {
			jule::I64 _39014_i = it - expr.begin();
			jule::Any _39021_a = *it;
			{
				_1d7d34d4a_expr(_self_, _39021_a);
				if (((_38628_args.len() - _39014_i) > 1LL)) {
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1dc258423:;
			++it;
			_39014_i++;
			goto _iter_begin_1dc258423;
		}
		_iter_end_1dc258423:;
	};
}



inline void _1d7d2c2a4_modelForCall(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Any _39836_expr) {
	{
		auto &_match_expr{ _39836_expr };
		
		if (_match_expr.type_is<jule::Ptr<_204ec7454_FnIns>>()) {
			_case_begin_1dc25a6ab:;
			{
				_1d7d3030c_funcIns(_self_, _39836_expr.operator jule::Ptr<_204ec7454_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec343e_StructSubIdentExprModel>>()) {
			_case_begin_1dc25a733:;
			{
				jule::Ptr<_204ec343e_StructSubIdentExprModel> _40421_ssie = _39836_expr.operator jule::Ptr<_204ec343e_StructSubIdentExprModel>();;
				if ((_40421_ssie.get()._field_Method != nullptr)) {
					_1d7d3030c_funcIns(_self_, _40421_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1dc25a59b:;
	};
	_1d7d34ac5_model(_self_, _39836_expr);
}



inline void _1d7d2c529_pushCallInf(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec21a7_FnCallExprModel>& _41332_m) {
	if ((_20089198d_Production || ((!(_41332_m.get()._field_Func.get()._field_Anon)) && (!(_1d7d37017_isBuiltinCallHasDebuginf(_41332_m)))))) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_41332_m.get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ _41332_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_204ec343e_StructSubIdentExprModel>>()) {
				_case_begin_1dc25e43a:;
				{
					if (_41332_m.get()._field_Expr.operator jule::Ptr<_204ec343e_StructSubIdentExprModel>().get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1dc25e072;
				}
			}
			else {
				_case_begin_1dc25e072:;
				{
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1dc25ded9:;
		};
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1d7da33a2_locInfo(_self_.get()._field_oc, _41332_m.get()._field_Token);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_41332_m.get()._field_Args.len() != 0LL)) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1d7d2c837_isWrapped(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec21a7_FnCallExprModel>& _43834_m) {
	if ((((!(_204ec7641_IsBuiltin(_43834_m.get()._field_Func.ptr()))) && (_43834_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _204395b64_IsSelf(_43834_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _43834_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_204ec343e_StructSubIdentExprModel>>()) {
				_case_begin_1dc262eee:;
				{
					jule::Ptr<_204ec343e_StructSubIdentExprModel> _44225_ssie = _43834_m.get()._field_Expr.operator jule::Ptr<_204ec343e_StructSubIdentExprModel>();;
					{
						
						if (_204396e2e_IsRef(_43834_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_2050acc65_Sptr(_44225_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1dc2646b5:;
							{
								goto _match_end_1dc263e67;
							}
						}
						else {
							_case_begin_1dc263ecd:;
							{
								if ((_2050ade53_Struct(_44225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_44225_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1d7d72d77_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1d7d34ac5_model(_self_, _44225_ssie.get()._field_Expr.get()._field_Model);
										_1d7d72d77_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_1dc263e67:;
					};
				}
			}
			_match_end_1dc262ce0:;
		};
	};
	return false;
}



inline void _1d7d2caac_pureFuncCall(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec21a7_FnCallExprModel>& _46237_m) {
	jule::Bool _46313_wrapped = _1d7d2c837_isWrapped(_self_, _46237_m);;
	_1d7d2c2a4_modelForCall(_self_, _46237_m.get()._field_Expr);
	if ((!(_204ec7641_IsBuiltin(_46237_m.get()._field_Func.ptr())))) {
		if ((_46237_m.get()._field_Func.get()._field_Decl.get()._field_CppLinked && (_46237_m.get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1d7dda0a9_hasDirective(_46237_m.get()._field_Func.get()._field_Decl.get()._field_Directives,jule::Str("cdef", 4))))) {
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _46237_m.get()._field_Func.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1dc26a127:;
					if (it != expr.end()) {
						jule::I64 _46926_i = it - expr.begin();
						jule::Ptr<_2050a91b2_InsGeneric> _46933_g = *it;
						{
							_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_46933_g.get()._field_Kind));
							if (((_46237_m.get()._field_Func.get()._field_Generics.len() - _46926_i) > 1LL)) {
								_1d7d72d77_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1dc26a127:;
						++it;
						_46926_i++;
						goto _iter_begin_1dc26a127;
					}
					_iter_end_1dc26a127:;
				};
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1d7d2c529_pushCallInf(_self_, _46237_m);
	jule::Bool _48017_locinfo = false;;
	if ((((!(_204ec7641_IsBuiltin(_46237_m.get()._field_Func.ptr()))) && (_46237_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _204395b64_IsSelf(_46237_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _46237_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_204ec343e_StructSubIdentExprModel>>()) {
				_case_begin_1dc26e093:;
				{
					jule::Ptr<_204ec343e_StructSubIdentExprModel> _48425_ssie = _46237_m.get()._field_Expr.operator jule::Ptr<_204ec343e_StructSubIdentExprModel>();;
					{
						
						if (_204396e2e_IsRef(_46237_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1dc271bab:;
							{
								_1d7d34ac5_model(_self_, _48425_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_2050acc65_Sptr(_48425_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1dc271c22:;
							{
								_1d7d34ac5_model(_self_, _48425_ssie.get()._field_Expr.get()._field_Model);
								_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_20089198d_Production))) {
									_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1d7da33a2_locInfo(_self_.get()._field_oc, _46237_m.get()._field_Token);
									_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1dc27010a:;
							{
								if ((_2050ade53_Struct(_48425_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1d7d72d77_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_46313_wrapped) {
									_1d7d72d77_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1d7d34ac5_model(_self_, _48425_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1dc270094:;
					};
					if ((_46237_m.get()._field_Args.len() > 0LL)) {
						_1d7d72d77_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_204ec3021_TraitSubIdentExprModel>>()) {
				_case_begin_1dc26e109:;
				{
					_1d7d34ac5_model(_self_, _46237_m.get()._field_Expr.operator jule::Ptr<_204ec3021_TraitSubIdentExprModel>().get()._field_Expr);
					if ((!(_20089198d_Production))) {
						_48017_locinfo=true;
					};
					if ((_46237_m.get()._field_Args.len() > 0LL)) {
						_1d7d72d77_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1dc26dd84:;
		};
	};
	_1d7d2c02e_args(_self_, _46237_m.get()._field_Args);
	if (_48017_locinfo) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1d7da33a2_locInfo(_self_.get()._field_oc, _46237_m.get()._field_Token);
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_46313_wrapped) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _1d7d2cd32_coFuncCall(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec21a7_FnCallExprModel>& _53435_m) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1d7da5d22_addIndent(_self_.get()._field_oc);
	jule::Str _53717_head = jule::Str("std::thread([", 13);;
	if ((_53435_m.get()._field_Func.get()._field_Owner != nullptr)) {
		_53717_head+=jule::Str("_self_", 6);
		if ((_53435_m.get()._field_Args.len() > 0LL)) {
			_53717_head+=jule::Str(", ", 2);
		};
	};
	{
		auto &expr = _53435_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1dc27d767:;
		if (it != expr.end()) {
			jule::I64 _54413_i = it - expr.begin();
			jule::Any _54416_arg = *it;
			{
				if ((_54413_i > 0LL)) {
					_53717_head+=jule::Str(", ", 2);
				};
				{
					auto &_match_expr{ _54416_arg };
					
					if (_match_expr.type_is<jule::Ptr<_205031cb6_Var>>()) {
						_case_begin_1dc27e56a:;
						{
							jule::Ptr<_205031cb6_Var> _55025_v = _54416_arg.operator jule::Ptr<_205031cb6_Var>();;
							_53717_head+=static__1d7d3d42a_var(_55025_v);
							goto _iter_next_1dc27d767;
						}
					}
					_match_end_1dc27e229:;
				};
				jule::Str _55417_name = (jule::Str("_co_arg_", 8) + _204ebc823_Itoa(_54413_i));;
				_53717_head+=_55417_name;
				_1d7d4374e_indent(_self_.get()._field_oc);
				_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_53435_m.get()._field_Func.get()._field_Params[_54413_i].get()._field_Kind));
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if (_53435_m.get()._field_Func.get()._field_Params[_54413_i].get()._field_Decl.get()._field_Reference) {
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_1d7d72d77_write(_self_.get()._field_oc, _55417_name);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1d7d34d4a_expr(_self_, _54416_arg);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _56617_argS = jule::Any(_55417_name);;
				_53435_m.get()._field_Args[_54413_i]=(*(((jule::Any*)((&(_56617_argS))))));
			}
			_iter_next_1dc27d767:;
			++it;
			_54413_i++;
			goto _iter_begin_1dc27d767;
		}
		_iter_end_1dc27d767:;
	};
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, _53717_head);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_1d7da5d22_addIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d2caac_pureFuncCall(_self_, _53435_m);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1d7da6707_doneIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_1d7da6707_doneIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1d7d2d0a7_funcCall(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec21a7_FnCallExprModel> _58432_m) {
	if (_58432_m.get()._field_IsCo) {
		_1d7d2cd32_coFuncCall(_self_, _58432_m);
		return;;
	};
	if (((_204ec7641_IsBuiltin(_58432_m.get()._field_Func.ptr()) || (!(_58432_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_58432_m.get()._field_Except != nullptr) && (_58432_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1d7d2caac_pureFuncCall(_self_, _58432_m);
		return;;
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1d7da5d22_addIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1d7d2caac_pureFuncCall(_self_, _58432_m);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1d7d4374e_indent(_self_.get()._field_oc);
	if ((_58432_m.get()._field_Except != nullptr)) {
		if (((_58432_m.get()._field_Func.get()._field_Result == nullptr) || (!(_58432_m.get()._field_Assigned)))) {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1d72158e1_scope(_self_.get()._field_oc.get()._field_sc, _58432_m.get()._field_Except);
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _61021_forwarded = _1d7d36c4d_isForwarded(_58432_m.get()._field_Except);;
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_61021_forwarded) {
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_1d72158e1_scope(_self_.get()._field_oc.get()._field_sc, _58432_m.get()._field_Except);
			if (_61021_forwarded) {
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1d7d35345_initExpr(_self_, _58432_m.get()._field_Func.get()._field_Result);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1d7da6707_doneIndent(_self_.get()._field_oc);
	} else {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1d7da33a2_locInfo(_self_.get()._field_oc, _58432_m.get()._field_Token);
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_2043a5a53_IsVoid(_58432_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1d7d4374e_indent(_self_.get()._field_oc);
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1d7da6707_doneIndent(_self_.get()._field_oc);
	};
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1d7d2d32c_slice(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec2394_SliceExprModel> _63929_m) {
	if ((_63929_m.get()._field_Elems.len() == 0LL)) {
		_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd4bdb_asSlice(_63929_m.get()._field_ElemKind));
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd4bdb_asSlice(_63929_m.get()._field_ElemKind));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1d7d2c02e_args(_self_, _63929_m.get()._field_Elems);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1d7d2d5a2_indexing(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec2581_IndexingExprModel> _65132_m) {
	_1d7d34ac5_model(_self_, _65132_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_20089198d_Production || (_2050acec9_Ptr(_65132_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_2050ae42b_Map(_65132_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _1d7d37248_isExprComesFromBind(_65132_m.get()._field_Expr)) {
			_case_begin_1dc29a83e:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1d7d34d4a_expr(_self_, _65132_m.get()._field_Index.get()._field_Model);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1dc29a3ee:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1d7da33a2_locInfo(_self_.get()._field_oc, _65132_m.get()._field_Token);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1d7d34d4a_expr(_self_, _65132_m.get()._field_Index.get()._field_Model);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1dc29a388:;
	};
}



inline void _1d7d2d827_unsafeIndexing(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_2036d843b_UnsafeIndexingExprModel> _67138_m) {
	_1d7d34ac5_model(_self_, _67138_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_20089198d_Production || (_2050acec9_Ptr(_67138_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_2050ae42b_Map(_67138_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1dc2a0734:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1d7d34d4a_expr(_self_, _67138_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1dc2a02e4:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1d7d34d4a_expr(_self_, _67138_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1dc2a027d:;
	};
}



inline void _1d7d2da9c_anonFunc(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec276d_AnonFnExprModel> _68832_m) {
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd711c_func(_68832_m.get()._field_Func));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1d7dcea71_paramsIns(_self_.get()._field_oc, _68832_m.get()._field_Func.get()._field_Params);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd6acd_funcInsResult(_68832_m.get()._field_Func));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1d7215b66_funcScope(_self_.get()._field_oc.get()._field_sc, _68832_m.get()._field_Func);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d7d2dd22_mapExpr(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec2b47_MapExprModel> _69931_m) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_69931_m.get()._field_KeyKind));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_69931_m.get()._field_ValKind));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_69931_m.get()._field_Entries.len() > 0LL)) {
		{
			auto &expr = _69931_m.get()._field_Entries;
			auto it = expr.begin();
			_iter_begin_1dc168322:;
			if (it != expr.end()) {
				jule::I64 _70618_i = it - expr.begin();
				jule::Ptr<_204ec295a_KeyValPairExprModel> _70625_pair = *it;
				{
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1d7d34d4a_expr(_self_, _70625_pair.get()._field_Key);
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1d7d34d4a_expr(_self_, _70625_pair.get()._field_Val);
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_69931_m.get()._field_Entries.len() - _70618_i) > 1LL)) {
						_1d7d72d77_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1dc168322:;
				++it;
				_70618_i++;
				goto _iter_begin_1dc168322;
			}
			_iter_end_1dc168322:;
		};
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1d7d2e097_slicing(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec2d34_SlicingExprModel> _72031_m) {
	_1d7d34ac5_model(_self_, _72031_m.get()._field_Expr);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_20089198d_Production))) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1d7da33a2_locInfo(_self_.get()._field_oc, _72031_m.get()._field_Token);
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1d7d34d4a_expr(_self_, _72031_m.get()._field_Left);
	if ((_72031_m.get()._field_Right != nullptr)) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1d7d34d4a_expr(_self_, _72031_m.get()._field_Right);
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d7d2e31c_traitSub(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec3021_TraitSubIdentExprModel> _73632_m) {
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3c605_traitDecl(_73632_m.get()._field_Trt));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1d7d34ac5_model(_self_, _73632_m.get()._field_Expr);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3c0b6_func(_73632_m.get()._field_Method));
}



inline void _1d7d2e592_structureSub(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec343e_StructSubIdentExprModel> _74536_m) {
	_1d7d34ac5_model(_self_, _74536_m.get()._field_Expr.get()._field_Model);
	if ((_74536_m.get()._field_Field != nullptr)) {
		if ((_2050acec9_Ptr(_74536_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_2050acc65_Sptr(_74536_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_20089198d_Production))) {
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1d7da33a2_locInfo(_self_.get()._field_oc, _74536_m.get()._field_Token);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3d183_field(_74536_m.get()._field_Field.get()._field_Decl));
	};
}



inline void _1d7d2e817_commonIdent(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec3a05_CommonIdentExprModel> _76531_m) {
	_1d7d72d77_write(_self_.get()._field_oc, _76531_m.get()._field_Ident);
}



inline void _1d7d2ea8c_commonSub(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec3be2_CommonSubIdentExprModel> _76933_m) {
	_1d7d34ac5_model(_self_, _76933_m.get()._field_Expr);
	{
		
		if ((_2050acec9_Ptr(_76933_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1dc1795b9:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_2050acc65_Sptr(_76933_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1dc17892b:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_20089198d_Production))) {
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1d7da33a2_locInfo(_self_.get()._field_oc, _76933_m.get()._field_Token);
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1dc179179:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1dc179113:;
	};
	_1d7d72d77_write(_self_.get()._field_oc, _76933_m.get()._field_Ident);
}



inline void _1d7d2ed12_array(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec3818_ArrayExprModel> _78829_m) {
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd6050_array(_78829_m.get()._field_Kind));
	if ((_78829_m.get()._field_Elems.len() == 0LL)) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_78829_m.get()._field_Elems.len() == 2LL) && (_78829_m.get()._field_Elems[1LL] == nullptr))) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1d7d34d4a_expr(_self_, _78829_m.get()._field_Elems[0LL]);
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1d7d2c02e_args(_self_, _78829_m.get()._field_Elems);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1d7d30087_funcInsCommon(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec7454_FnIns> _81137_m) {
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd711c_func(_81137_m));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1d7d3030c_funcIns(_self_, _81137_m);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d7d3030c_funcIns(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec7454_FnIns> _81831_m) {
	if (((_81831_m.get()._field_Decl != nullptr) && _81831_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_20430829c_Directive> _82017_d = _1d7dd9c24_findDirective(_81831_m.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_82017_d != nullptr)) {
			_1d7d72d77_write(_self_.get()._field_oc, _1d7dd17ed_concatAllParts(_82017_d.get()._field_Args));
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3c35d_funcIns(_81831_m));
}



inline void _1d7d30582_tuple(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec3dce_TupleExprModel> _82929_m) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _82929_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1dc1879b2:;
		if (it != expr.end()) {
			jule::I64 _83114_i = it - expr.begin();
			jule::Ptr<_20507eb49_Data> _83121_d = *it;
			{
				_1d7d34d4a_expr(_self_, _83121_d.get()._field_Model);
				if (((_82929_m.get()._field_Datas.len() - _83114_i) > 1LL)) {
					_1d7d72d77_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1dc1879b2:;
			++it;
			_83114_i++;
			goto _iter_begin_1dc1879b2;
		}
		_iter_end_1dc1879b2:;
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d7d30807_newCall(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec4682_BuiltinNewCallExprModel> _84031_m) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_84031_m.get()._field_Kind));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_84031_m.get()._field_Init != nullptr)) {
		_1d7d34d4a_expr(_self_, _84031_m.get()._field_Init);
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d7d30a7c_outCall(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec40bb_BuiltinOutCallExprModel> _85031_m) {
	if ((_85031_m.get()._field_Debug && _20089198d_Production)) {
		return;;
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1d7d34d4a_expr(_self_, _85031_m.get()._field_Expr);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d7d30d02_outlnCall(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec42a8_BuiltinOutlnCallExprModel> _85933_m) {
	if ((_85933_m.get()._field_Debug && _20089198d_Production)) {
		return;;
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1d7d34d4a_expr(_self_, _85933_m.get()._field_Expr);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d7d31077_panicCall(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec486e_BuiltinPanicCallExprModel> _86833_m) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1d7d34d4a_expr(_self_, _86833_m.get()._field_Expr);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1d7da33a2_locInfo(_self_.get()._field_oc, _86833_m.get()._field_Token);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1d7d312ec_assertCall(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec4a5b_BuiltinAssertCallExprModel> _87634_m) {
	if (_20089198d_Production) {
		return;;
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1d7d34d4a_expr(_self_, _87634_m.get()._field_Expr);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1d7d72d77_write(_self_.get()._field_oc, _1d7d36049_cstrLit(static_cast<jule::Slice<jule::U8>>(_87634_m.get()._field_Log)));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1d7da33a2_locInfo(_self_.get()._field_oc, _87634_m.get()._field_Token);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1d7d31572_errorCall(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel> _88933_m) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_2043a5a53_IsVoid(_88933_m.get()._field_Func.get()._field_Decl.ptr())) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_88933_m.get()._field_Func.get()._field_Result));
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_1d7d34d4a_expr(_self_, _88933_m.get()._field_Err);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d7d317e7_copyCall(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec596e_BuiltinCopyCallExprModel> _90232_m) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1d7d34ac5_model(_self_, _90232_m.get()._field_Dest.get()._field_Model);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_2050aca01_Prim(_90232_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1d7d34ac5_model(_self_, _90232_m.get()._field_Src.get()._field_Model);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_2050aca01_Prim(_90232_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d7d31a6c_lenCall(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec5122_BuiltinLenCallExprModel> _91831_m) {
	_1d7d34ac5_model(_self_, _91831_m.get()._field_Expr.get()._field_Model);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _1d7d31ce2_capCall(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec530e_BuiltinCapCallExprModel> _92331_m) {
	_1d7d34ac5_model(_self_, _92331_m.get()._field_Expr.get()._field_Model);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _1d7d32067_deleteCall(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec320d_BuiltinDeleteCallExprModel> _92834_m) {
	_1d7d34ac5_model(_self_, _92834_m.get()._field_Dest.get()._field_Model);
	if ((_92834_m.get()._field_Key != nullptr)) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_1d7d34ac5_model(_self_, _92834_m.get()._field_Key.get()._field_Model);
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _1d7d322dc_makeCallSlice(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec4c48_BuiltinMakeCallExprModel>& _93938_m) {
	jule::Ptr<_2050b45a7_Slc> _94017_slice = _2050ad97a_Slc(_93938_m.get()._field_Kind.ptr());;
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_93938_m.get()._field_Kind));
	if ((_2050ad23d_Enum(_94017_slice.get()._field_Elem.ptr()) != nullptr)) {
		if ((_93938_m.get()._field_Cap != nullptr)) {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
		} else {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("::alloc_def(", 12));
		};
	} else {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	};
	_1d7d34d4a_expr(_self_, _93938_m.get()._field_Len);
	if ((_93938_m.get()._field_Cap != nullptr)) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1d7d34d4a_expr(_self_, _93938_m.get()._field_Cap);
	};
	if ((_2050ad23d_Enum(_94017_slice.get()._field_Elem.ptr()) != nullptr)) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1d7d35345_initExpr(_self_, _94017_slice.get()._field_Elem);
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d7d32562_makeCallStr(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec4c48_BuiltinMakeCallExprModel>& _96536_m) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1d7d34d4a_expr(_self_, _96536_m.get()._field_Len);
	if ((_96536_m.get()._field_Cap != nullptr)) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1d7d34d4a_expr(_self_, _96536_m.get()._field_Cap);
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d7d327d7_makeCall(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec4c48_BuiltinMakeCallExprModel> _97632_m) {
	if ((_2050ad97a_Slc(_97632_m.get()._field_Kind.ptr()) != nullptr)) {
		_1d7d322dc_makeCallSlice(_self_, _97632_m);
		return;;
	};
	_1d7d32562_makeCallStr(_self_, _97632_m);
}



inline void _1d7d32a5c_pushToSlice(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_203acb950_PushToSliceExprModel> _98435_m) {
	jule::I64 _98513_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_1d7d34ac5_model(_self_, _98435_m.get()._field_Dest);
	jule::Str _98713_dest = _self_.get()._field_oc.get()._field_Obj.slice(_98513_n);;
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1d7d72d77_write(_self_.get()._field_oc, _98713_dest);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1d7d72d77_write(_self_.get()._field_oc, _204ebc823_Itoa(static_cast<jule::I64>(_98435_m.get()._field_Elems.get()._field_Elems.len())));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _98435_m.get()._field_Elems.get()._field_Elems;
		auto it = expr.begin();
		_iter_begin_1dc320e7a:;
		if (it != expr.end()) {
			jule::Any _99421_e = *it;
			{
				_1d7d72d77_write(_self_.get()._field_oc, _98713_dest);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1d7d34ac5_model(_self_, _99421_e);
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1dc320e7a:;
			++it;
			goto _iter_begin_1dc320e7a;
		}
		_iter_end_1dc320e7a:;
	};
}



inline void _1d7d32cd2_appendCall(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec4e35_BuiltinAppendCallExprModel> _100334_m) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1d7d34ac5_model(_self_, _100334_m.get()._field_Dest);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1d7d34ac5_model(_self_, _100334_m.get()._field_Elements);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d7d33057_cloneCall(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec4495_BuiltinCloneCallExprModel> _101133_m) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1d7d34ac5_model(_self_, _101133_m.get()._field_Expr);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d7d332cc_sizeof(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec5d48_SizeofExprModel> _101730_m) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1d7d34ac5_model(_self_, _101730_m.get()._field_Expr);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d7d33552_alignof(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec6035_AlignofExprModel> _102331_m) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1d7d34ac5_model(_self_, _102331_m.get()._field_Expr);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1d7d33860_runeLit(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec6222_RuneExprModel> _102927_m) {
	if ((_102927_m.get()._field_Code <= 127LL)) {
		jule::Str _103121_b = _1d7d35983_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_102927_m.get()._field_Code)));;
		if ((_103121_b == jule::Str("'", 1))) {
			_103121_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _103121_b) + jule::Str("'", 1));
	};
	return _1d7d365ee_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_102927_m.get()._field_Code)));
}



inline void _1d7d33ad5_structureStatic(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec362b_StructStaticIdentExprModel> _104039_m) {
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3c35d_funcIns(_104039_m.get()._field_Method));
}



inline void _1d7d33d5a_integratedToStr(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec640e_IntegratedToStrExprModel> _104439_m) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1d7d34ac5_model(_self_, _104439_m.get()._field_Expr);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d7d340d0_backendEmit(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec65eb_BackendEmitExprModel> _105035_m) {
	if ((_105035_m.get()._field_Exprs.len() == 0LL)) {
		_1d7d72d77_write(_self_.get()._field_oc, _105035_m.get()._field_Code);
		return;;
	};
	jule::I64 _105513_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _105617_args = jule::Slice<jule::Any>::alloc(_105035_m.get()._field_Exprs.len());;
	{
		auto &expr = _105035_m.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1dc32e9c2:;
		if (it != expr.end()) {
			jule::I64 _105714_i = it - expr.begin();
			jule::Any _105721_expr = *it;
			{
				_1d7d34d4a_expr(_self_, _105721_expr);
				_105617_args[_105714_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_105513_n));
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL,_105513_n);
			}
			_iter_next_1dc32e9c2:;
			++it;
			_105714_i++;
			goto _iter_begin_1dc32e9c2;
		}
		_iter_end_1dc32e9c2:;
	};
	_1d7d72d77_write(_self_.get()._field_oc, _205165e1c_Format(_105035_m.get()._field_Code,jule::Any(_105617_args)));
}



inline void _1d7d34355_free(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_204ec67d8_FreeExprModel> _106528_m) {
	_1d7d34d4a_expr(_self_, _106528_m.get()._field_Expr);
	if (_200891262_RC) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1d7d345ca_mutSlicing(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_20407b10d_MutSlicingExprModel> _107434_m) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1d7d34ac5_model(_self_, _107434_m.get()._field_Expr);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_20089198d_Production))) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1d7da33a2_locInfo(_self_.get()._field_oc, _107434_m.get()._field_Token);
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1d7d34d4a_expr(_self_, _107434_m.get()._field_Left);
	if ((_107434_m.get()._field_Right != nullptr)) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1d7d34d4a_expr(_self_, _107434_m.get()._field_Right);
	};
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1d7d34850_strInsertBegin(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_202c0764d_StrInsertBeginExprModel> _109138_m) {
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1d7d34ac5_model(_self_, _109138_m.get()._field_Dest);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1d7d34ac5_model(_self_, _109138_m.get()._field_Expr);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1d7d34ac5_model(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Any _109929_m) {
	{
		auto &_match_expr{ _109929_m };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1dc339a87:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, _109929_m.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2050aa8de_TypeKind>>()) {
			_case_begin_1dc3394b0:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_109929_m.operator jule::Ptr<_2050aa8de_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2044102b6_Const>>()) {
			_case_begin_1dc33978a:;
			{
				_1d7d2a406_constant(_self_, _109929_m.operator jule::Ptr<_2044102b6_Const>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_205031cb6_Var>>()) {
			_case_begin_1dc339801:;
			{
				_1d7d2b03e_var(_self_, _109929_m.operator jule::Ptr<_205031cb6_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20435cc5d_StructIns>>()) {
			_case_begin_1dc339867:;
			{
				_1d7d2b2b4_structureIns(_self_, _109929_m.operator jule::Ptr<_20435cc5d_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec7454_FnIns>>()) {
			_case_begin_1dc3398cd:;
			{
				_1d7d30087_funcInsCommon(_self_, _109929_m.operator jule::Ptr<_204ec7454_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_202bb6cc2_UnsafeBinopExprModel>>()) {
			_case_begin_1dc33a4d3:;
			{
				_1d7d2aa44_unsafeBinary(_self_, _109929_m.operator jule::Ptr<_202bb6cc2_UnsafeBinopExprModel>().get()._field_Node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec152a_BinopExprModel>>()) {
			_case_begin_1dc33a549:;
			{
				_1d7d2acb9_binary(_self_, _109929_m.operator jule::Ptr<_204ec152a_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec1717_UnaryExprModel>>()) {
			_case_begin_1dc33a5b0:;
			{
				_1d7d2b539_unary(_self_, _109929_m.operator jule::Ptr<_204ec1717_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec1ae1_StructLitExprModel>>()) {
			_case_begin_1dc33a626:;
			{
				_1d7d2b7ae_structureLit(_self_, _109929_m.operator jule::Ptr<_204ec1ae1_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec1ccd_AllocStructLitExprModel>>()) {
			_case_begin_1dc33a68c:;
			{
				_1d7d2ba34_allocStructure(_self_, _109929_m.operator jule::Ptr<_204ec1ccd_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec1eba_CastingExprModel>>()) {
			_case_begin_1dc33a703:;
			{
				_1d7d2bca9_casting(_self_, _109929_m.operator jule::Ptr<_204ec1eba_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec21a7_FnCallExprModel>>()) {
			_case_begin_1dc33a769:;
			{
				_1d7d2d0a7_funcCall(_self_, _109929_m.operator jule::Ptr<_204ec21a7_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec2394_SliceExprModel>>()) {
			_case_begin_1dc33a7d0:;
			{
				_1d7d2d32c_slice(_self_, _109929_m.operator jule::Ptr<_204ec2394_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec3818_ArrayExprModel>>()) {
			_case_begin_1dc33a846:;
			{
				_1d7d2ed12_array(_self_, _109929_m.operator jule::Ptr<_204ec3818_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2036d843b_UnsafeIndexingExprModel>>()) {
			_case_begin_1dc33a8bd:;
			{
				_1d7d2d827_unsafeIndexing(_self_, _109929_m.operator jule::Ptr<_2036d843b_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec2581_IndexingExprModel>>()) {
			_case_begin_1dc33a945:;
			{
				_1d7d2d5a2_indexing(_self_, _109929_m.operator jule::Ptr<_204ec2581_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec276d_AnonFnExprModel>>()) {
			_case_begin_1dc33a9bc:;
			{
				_1d7d2da9c_anonFunc(_self_, _109929_m.operator jule::Ptr<_204ec276d_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec2b47_MapExprModel>>()) {
			_case_begin_1dc33aa44:;
			{
				_1d7d2dd22_mapExpr(_self_, _109929_m.operator jule::Ptr<_204ec2b47_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec2d34_SlicingExprModel>>()) {
			_case_begin_1dc33aabb:;
			{
				_1d7d2e097_slicing(_self_, _109929_m.operator jule::Ptr<_204ec2d34_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec3021_TraitSubIdentExprModel>>()) {
			_case_begin_1dc33ab43:;
			{
				_1d7d2e31c_traitSub(_self_, _109929_m.operator jule::Ptr<_204ec3021_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec343e_StructSubIdentExprModel>>()) {
			_case_begin_1dc33abba:;
			{
				_1d7d2e592_structureSub(_self_, _109929_m.operator jule::Ptr<_204ec343e_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec3a05_CommonIdentExprModel>>()) {
			_case_begin_1dc33ac42:;
			{
				_1d7d2e817_commonIdent(_self_, _109929_m.operator jule::Ptr<_204ec3a05_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec3be2_CommonSubIdentExprModel>>()) {
			_case_begin_1dc33acb9:;
			{
				_1d7d2ea8c_commonSub(_self_, _109929_m.operator jule::Ptr<_204ec3be2_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec3dce_TupleExprModel>>()) {
			_case_begin_1dc33ad41:;
			{
				_1d7d30582_tuple(_self_, _109929_m.operator jule::Ptr<_204ec3dce_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec40bb_BuiltinOutCallExprModel>>()) {
			_case_begin_1dc33adb8:;
			{
				_1d7d30a7c_outCall(_self_, _109929_m.operator jule::Ptr<_204ec40bb_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec42a8_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1dc33ae40:;
			{
				_1d7d30d02_outlnCall(_self_, _109929_m.operator jule::Ptr<_204ec42a8_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec4682_BuiltinNewCallExprModel>>()) {
			_case_begin_1dc33aeb7:;
			{
				_1d7d30807_newCall(_self_, _109929_m.operator jule::Ptr<_204ec4682_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec486e_BuiltinPanicCallExprModel>>()) {
			_case_begin_1dc33b03e:;
			{
				_1d7d31077_panicCall(_self_, _109929_m.operator jule::Ptr<_204ec486e_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec4a5b_BuiltinAssertCallExprModel>>()) {
			_case_begin_1dc33b0b6:;
			{
				_1d7d312ec_assertCall(_self_, _109929_m.operator jule::Ptr<_204ec4a5b_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel>>()) {
			_case_begin_1dc33b13d:;
			{
				_1d7d31572_errorCall(_self_, _109929_m.operator jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec4c48_BuiltinMakeCallExprModel>>()) {
			_case_begin_1dc33b1b5:;
			{
				_1d7d327d7_makeCall(_self_, _109929_m.operator jule::Ptr<_204ec4c48_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec4e35_BuiltinAppendCallExprModel>>()) {
			_case_begin_1dc33b23c:;
			{
				_1d7d32cd2_appendCall(_self_, _109929_m.operator jule::Ptr<_204ec4e35_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec4495_BuiltinCloneCallExprModel>>()) {
			_case_begin_1dc33b2b4:;
			{
				_1d7d33057_cloneCall(_self_, _109929_m.operator jule::Ptr<_204ec4495_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec596e_BuiltinCopyCallExprModel>>()) {
			_case_begin_1dc33b33b:;
			{
				_1d7d317e7_copyCall(_self_, _109929_m.operator jule::Ptr<_204ec596e_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec5122_BuiltinLenCallExprModel>>()) {
			_case_begin_1dc33b3b3:;
			{
				_1d7d31a6c_lenCall(_self_, _109929_m.operator jule::Ptr<_204ec5122_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec530e_BuiltinCapCallExprModel>>()) {
			_case_begin_1dc33b43a:;
			{
				_1d7d31ce2_capCall(_self_, _109929_m.operator jule::Ptr<_204ec530e_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec320d_BuiltinDeleteCallExprModel>>()) {
			_case_begin_1dc33b4b2:;
			{
				_1d7d32067_deleteCall(_self_, _109929_m.operator jule::Ptr<_204ec320d_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec5d48_SizeofExprModel>>()) {
			_case_begin_1dc33b539:;
			{
				_1d7d332cc_sizeof(_self_, _109929_m.operator jule::Ptr<_204ec5d48_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec6035_AlignofExprModel>>()) {
			_case_begin_1dc33b5b1:;
			{
				_1d7d33552_alignof(_self_, _109929_m.operator jule::Ptr<_204ec6035_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec6222_RuneExprModel>>()) {
			_case_begin_1dc33b638:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, _1d7d33860_runeLit(_self_, _109929_m.operator jule::Ptr<_204ec6222_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec362b_StructStaticIdentExprModel>>()) {
			_case_begin_1dc33b6b0:;
			{
				_1d7d33ad5_structureStatic(_self_, _109929_m.operator jule::Ptr<_204ec362b_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec640e_IntegratedToStrExprModel>>()) {
			_case_begin_1dc33b737:;
			{
				_1d7d33d5a_integratedToStr(_self_, _109929_m.operator jule::Ptr<_204ec640e_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec65eb_BackendEmitExprModel>>()) {
			_case_begin_1dc33b7ae:;
			{
				_1d7d340d0_backendEmit(_self_, _109929_m.operator jule::Ptr<_204ec65eb_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec67d8_FreeExprModel>>()) {
			_case_begin_1dc33b836:;
			{
				_1d7d34355_free(_self_, _109929_m.operator jule::Ptr<_204ec67d8_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20407b10d_MutSlicingExprModel>>()) {
			_case_begin_1dc33b8ad:;
			{
				_1d7d345ca_mutSlicing(_self_, _109929_m.operator jule::Ptr<_20407b10d_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_202c0764d_StrInsertBeginExprModel>>()) {
			_case_begin_1dc33b935:;
			{
				_1d7d34850_strInsertBegin(_self_, _109929_m.operator jule::Ptr<_202c0764d_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1dc339647:;
			{
				_1d7d72d77_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1dc339559:;
	};
}



inline void _1d7d34d4a_expr(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Any _120028_e) {
	_1d7d34ac5_model(_self_, _120028_e);
}



inline void _1d7d350c0_val(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_205080bc2_Value> _120427_v) {
	if (_20508050c_IsConst(_120427_v.get()._field_Data.ptr())) {
		_1d7d2a406_constant(_self_, _120427_v.get()._field_Data.get()._field_Constant);
		return;;
	};
	_1d7d34d4a_expr(_self_, _120427_v.get()._field_Data.get()._field_Model);
}



inline void _1d7d35345_initExpr(jule::Ptr<_1d7d28ca6_exprCoder> _self_, jule::Ptr<_2050aa8de_TypeKind> _121232_t) {
	if (_2050ac050_NilCompatible(_121232_t.ptr())) {
		if ((_2050acec9_Ptr(_121232_t.ptr()) != nullptr)) {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_121232_t));
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_204ed1a35_Enum> _122217_enm = _2050ad23d_Enum(_121232_t.ptr());;
	if ((_122217_enm != nullptr)) {
		_1d7d350c0_val(_self_, _122217_enm.get()._field_Items[0LL].get()._field_Value);
		return;;
	};
	jule::Ptr<_2050b03b6_Prim> _122713_prim = _2050aca01_Prim(_121232_t.ptr());;
	if ((_122713_prim != nullptr)) {
		if (_204ebe56c_IsNum(_122713_prim.get()._field_Kind)) {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_2050b3386_IsBool(_122713_prim.ptr())) {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_2050b35ea_IsStr(_122713_prim.ptr())) {
			_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	jule::Ptr<_20435cc5d_StructIns> _123817_s = _2050ade53_Struct(_121232_t.ptr());;
	if ((((_123817_s != nullptr) && _123817_s.get()._field_Decl.get()._field_CppLinked) && (_1d7dd9c24_findDirective(_123817_s.get()._field_Decl.get()._field_Directives,jule::Str("typedef", 7)) == nullptr))) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_121232_t));
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd73b4_kind(_121232_t));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1d7d28ca6_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1d7d37b50_cloneFuncDecl(jule::Ptr<_20433367e_Struct>& _1030_s) {
	jule::Str _1117_obj = static__1d7dd5a11_structure(_1030_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1d7d37de7_cloneFuncDef(jule::Ptr<_20433367e_Struct>& _1629_s) {
	jule::Str _1717_obj = static__1d7dd5a11_structure(_1629_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7d37853_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d7d38cc7_TestCoder> static__1d7d3924a_New(jule::Ptr<_1d7dcd553_ObjectCoder>& _2824_oc) {
	return jule::new_ptr<_1d7d38cc7_TestCoder>(_1d7d38cc7_TestCoder{._field_oc=_2824_oc});
}



inline jule::Ptr<_20500ae16_ImportInfo> _1d7d394ae_findTestingPackage(jule::Ptr<_1d7d38cc7_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1dc362eab:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_LinkPath == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_1dc362eab:;
			++it;
			goto _iter_begin_1dc362eab;
		}
		_iter_end_1dc362eab:;
	};
	return nullptr;
}



inline void _1d7d39734_appendTest(jule::Ptr<_1d7d38cc7_TestCoder> _self_, jule::Ptr<_204ec7454_FnIns> _4334_f) {
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d39de9_callTmReset(_self_);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1d7d72d77_write(_self_.get()._field_oc, _1d7d36049_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3c35d_funcIns(_4334_f));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1d7d399a9_appendPackageTests(jule::Ptr<_1d7d38cc7_TestCoder> _self_, jule::Ptr<_20500dd70_Package>& _6043_p) {
	{
		auto &expr = _6043_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1dc368ee5:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1dc3698b9:;
					if (it != expr.end()) {
						jule::Ptr<_204ec707a_Fn> _6225_f = *it;
						{
							if (_1d7dda0a9_hasDirective(_6225_f.get()._field_Directives,jule::Str("test", 4))) {
								_1d7d39734_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1dc3698b9:;
						++it;
						goto _iter_begin_1dc3698b9;
					}
					_iter_end_1dc3698b9:;
				};
			}
			_iter_next_1dc368ee5:;
			++it;
			goto _iter_begin_1dc368ee5;
		}
		_iter_end_1dc368ee5:;
	};
}



inline jule::Bool _1d7d39c1d_readyTestingPackage(jule::Ptr<_1d7d38cc7_TestCoder> _self_) {
	jule::Ptr<_20500ae16_ImportInfo> _7117_p = _1d7d394ae_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_20500c357_FindStruct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_204334a9d_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tmFailed=_204334a9d_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6),false);
	_self_.get()._field_tmSkipped=_204334a9d_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7),false);
	return true;
}



inline void _1d7d39de9_callTmReset(jule::Ptr<_1d7d38cc7_TestCoder> _self_) {
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3c0b6_func(_self_.get()._field_tmReset));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1d7d3a0c5_callTmFailed(jule::Ptr<_1d7d38cc7_TestCoder> _self_) {
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3c0b6_func(_self_.get()._field_tmFailed));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1d7d3a2a1_callTmSkipped(jule::Ptr<_1d7d38cc7_TestCoder> _self_) {
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7d3c0b6_func(_self_.get()._field_tmSkipped));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1d7d3a47c_Serialize(jule::Ptr<_1d7d38cc7_TestCoder> _self_) {
	_1d7dd1237_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1d7dd1105_end(_self_.get()._field_oc);
	});;
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1d7da5d22_addIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	if ((!(_1d7d39c1d_readyTestingPackage(_self_)))) {
		_1d7d72d77_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1d7da6707_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd3b1e_asSptr(static__1d7dd5ca8_structureIns(_self_.get()._field_t)));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1d7d72d77_write(_self_.get()._field_oc, static__1d7dd5ca8_structureIns(_self_.get()._field_t));
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1d7da5d22_addIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1d7d3a0c5_callTmFailed(_self_);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1d7d3a2a1_callTmSkipped(_self_);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1d7da6707_doneIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1d7d399a9_appendPackageTests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_Main);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1d7da6707_doneIndent(_self_.get()._field_oc);
	_1d7d4374e_indent(_self_.get()._field_oc);
	_1d7d72d77_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1d7d38cc7_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1d7d3b934_toOut(jule::Str& _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_204ebc5ae_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3322_ident;
		return _3521_obj;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, (_3322_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3322_ident;
	return _4217_obj;
}



inline jule::Str static__1d7d3bd1e_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str& _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_204ebc823_Itoa(_5423_row);
	_5517_obj+=_204ebc823_Itoa(_5433_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5444_ident;
	return _5517_obj;
}



inline jule::Str static__1d7d3c0b6_func(jule::Ptr<_204ec707a_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_CppLinked) {
			_case_begin_1dc383dab:;
			{
				return _6521_f.get()._field_Ident;
			}
		}
		else if ((_6521_f.get()._field_Ident == jule::Str("main", 4))) {
			_case_begin_1dc3842c9:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_2043a626d_IsMethod(_6521_f.ptr())) {
			_case_begin_1dc384340:;
			{
				jule::Str _7221_obj = static__1d7d3b934_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;
				};
				return _7221_obj;
			}
		}
		else {
			_case_begin_1dc3835e7:;
			{
				return static__1d7d3b934_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));
			}
		}
		_match_end_1dc3834e8:;
	};
}



inline jule::Str static__1d7d3c35d_funcIns(jule::Ptr<_204ec7454_FnIns>& _8424_f) {
	if (_204ec7641_IsBuiltin(_8424_f.ptr())) {
		return (jule::Str("jule::", 6) + _8424_f.get()._field_Decl.get()._field_Ident);
	};
	if ((_8424_f.get()._field_Decl.get()._field_CppLinked || (_8424_f.get()._field_Generics.len() == 0LL))) {
		return static__1d7d3c0b6_func(_8424_f.get()._field_Decl);
	};
	return static__1d7d3b934_toOut(_8424_f.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8424_f)));
}



inline jule::Str static__1d7d3c605_traitDecl(jule::Ptr<_204ece8e0_Trait> _9525_t) {
	if (_204ed045c_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);
	};
	return static__1d7d3b934_toOut(_9525_t.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));
}



inline jule::Str static__1d7d3c89c_param(jule::Ptr<_204ec6d8d_Param>& _10322_p) {
	if ((_202b8c1b5_IsAnonIdent(_10322_p.get()._field_Ident) || _202b8be1d_IsIgnoreIdent(_10322_p.get()._field_Ident))) {
		return jule::Str();
	};
	if (_204395b64_IsSelf(_10322_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_10322_p.get()._field_Token == nullptr)) {
		return static__1d7d3bd1e_toLocal(0LL,0LL,_10322_p.get()._field_Ident);
	};
	return static__1d7d3bd1e_toLocal(_10322_p.get()._field_Token.get()._field_Row,_10322_p.get()._field_Token.get()._field_Column,_10322_p.get()._field_Ident);
}



inline jule::Str static__1d7d3cb44_structure(jule::Ptr<_20433367e_Struct>& _11726_s) {
	if (_11726_s.get()._field_CppLinked) {
		if (_1d7dda0a9_hasDirective(_11726_s.get()._field_Directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_Ident;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_Ident);
	};
	return static__1d7d3b934_toOut(_11726_s.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));
}



inline jule::Str static__1d7d3cddb_structureIns(jule::Ptr<_20435cc5d_StructIns>& _12829_s) {
	if ((_12829_s.get()._field_Decl.get()._field_CppLinked || (_12829_s.get()._field_Generics.len() == 0LL))) {
		return static__1d7d3cb44_structure(_12829_s.get()._field_Decl);
	};
	return static__1d7d3b934_toOut(_12829_s.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12829_s)));
}



inline jule::Str static__1d7d3d183_field(jule::Ptr<_204324285_Field>& _13622_f) {
	if (_13622_f.get()._field_Owner.get()._field_CppLinked) {
		return _13622_f.get()._field_Ident;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_Ident);
}



inline jule::Str static__1d7d3d42a_var(jule::Ptr<_205031cb6_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_1dc38eb42:;
			{
				return _14423_v.get()._field_Ident;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("error", 5))) {
			_case_begin_1dc390060:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("self", 4))) {
			_case_begin_1dc3900c6:;
			{
				if ((_2050acc65_Sptr(_14423_v.get()._field_Kind.get()._field_Kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1dc38e37d:;
			{
				return static__1d7d3bd1e_toLocal(_14423_v.get()._field_Token.get()._field_Row,_14423_v.get()._field_Token.get()._field_Column,_14423_v.get()._field_Ident);
			}
		}
		else {
			_case_begin_1dc38e317:;
			{
				return static__1d7d3b934_toOut(_14423_v.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));
			}
		}
		_match_end_1dc38e23a:;
	};
}



inline jule::Str static__1d7d3d6c2_iterBegin(jule::Uintptr _16325_it) {
	jule::Str _16417_obj = jule::Str::alloc(0LL, 30LL);;
	_16417_obj+=jule::Str("_iter_begin_", 12);
	_16417_obj+=_204ebc5ae_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16325_it)),15LL);
	return _16417_obj;
}



inline jule::Str static__1d7d3d969_iterEnd(jule::Uintptr _17123_it) {
	jule::Str _17217_obj = jule::Str::alloc(0LL, 30LL);;
	_17217_obj+=jule::Str("_iter_end_", 10);
	_17217_obj+=_204ebc5ae_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17123_it)),15LL);
	return _17217_obj;
}



inline jule::Str static__1d7d3dc11_iterNext(jule::Uintptr _17924_it) {
	jule::Str _18017_obj = jule::Str::alloc(0LL, 30LL);;
	_18017_obj+=jule::Str("_iter_next_", 11);
	_18017_obj+=_204ebc5ae_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17924_it)),15LL);
	return _18017_obj;
}



inline jule::Str static__1d7d3dea8_label(jule::Str& _18722_ident) {
	jule::Str _18817_obj = jule::Str::alloc(0LL, 30LL);;
	_18817_obj+=jule::Str("_julec_label_", 13);
	_18817_obj+=_18722_ident;
	return _18817_obj;
}



inline jule::Str static__1d7d3e250_matchEnd(jule::Uintptr _19524_m) {
	jule::Str _19617_obj = jule::Str::alloc(0LL, 30LL);;
	_19617_obj+=jule::Str("_match_end_", 11);
	_19617_obj+=_204ebc5ae_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19524_m)),15LL);
	return _19617_obj;
}



inline jule::Str static__1d7d3e4e7_caseBegin(jule::Uintptr _20325_c) {
	jule::Str _20417_obj = jule::Str::alloc(0LL, 30LL);;
	_20417_obj+=jule::Str("_case_begin_", 12);
	_20417_obj+=_204ebc5ae_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20325_c)),15LL);
	return _20417_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7d3b428_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7d44277_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7dcd366_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d7dd27cc_Str(_1d7dd2513_customType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1d7dd2ada_Equals(jule::Ptr<_1d7dd2513_customType> _self_, jule::Ptr<_2050aa8de_TypeKind> _3922_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7dd2513_customType _Src) {
	_Stream << _1d7dd27cc_Str(&_Src);
	return _Stream;
}



inline jule::Str static__1d7dd3338_toType(jule::Str _6026_id) {
	if ((_6026_id != jule::Str("uintptr", 7))) {
		_6026_id=_2044eca24_RealKindOf(_6026_id);
	};
	if (((97LL <= _6026_id[0LL]) && (_6026_id[0LL] <= 122LLU))) {
		_6026_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6026_id);
}



inline jule::Str static__1d7dd35d0_prim(jule::Ptr<_2050b03b6_Prim> _7120_p) {
	return static__1d7dd3338_toType(_2050b0729_Str(_7120_p.ptr()));
}



inline jule::Str static__1d7dd3877_tuple(jule::Ptr<_2050b5135_Tuple> _7625_t) {
	jule::Str _7717_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7625_t.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1dc484c8c:;
		if (it != expr.end()) {
			jule::Ptr<_2050aa8de_TypeKind> _7821_tk = *it;
			{
				_7717_obj+=static__1d7dd73b4_kind(_7821_tk);
				_7717_obj+=jule::Str(",", 1);
			}
			_iter_next_1dc484c8c:;
			++it;
			goto _iter_begin_1dc484c8c;
		}
		_iter_end_1dc484c8c:;
	};
	(_7717_obj).mut_slice(0LL,(_7717_obj.len() - 1LL));;
	_7717_obj+=jule::Str(">", 1);
	return _7717_obj;
}



inline jule::Str static__1d7dd3b1e_asSptr(jule::Str _8822_elem) {
	jule::Str _8917_obj = jule::Str("jule::Ptr<", 10);;
	_8917_obj+=_8822_elem;
	_8917_obj+=jule::Str(">", 1);
	return _8917_obj;
}



inline jule::Str static__1d7dd3db6_asPtr(jule::Str _9621_elem) {
	return (_9621_elem + jule::Str("*", 1));
}



inline jule::Str static__1d7dd415d_sptr(jule::Ptr<_2050b3b4a_Sptr> _10124_sptr) {
	return static__1d7dd3b1e_asSptr(static__1d7dd73b4_kind(_10124_sptr.get()._field_Elem));
}



inline jule::Str static__1d7dd4405_ptr(jule::Ptr<_2050b71ae_Ptr> _10623_p) {
	;
	if (_2050b7b82_IsUnsafe(_10623_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _11117_elem = static__1d7dd73b4_kind(_10623_p.get()._field_Elem);;
	_11117_elem+=jule::Str("*", 1);
	return _11117_elem;
}



inline jule::Str static__1d7dd469c_enumDecl(jule::Ptr<_204ed1a35_Enum> _11728_e) {
	return static__1d7dd73b4_kind(_11728_e.get()._field_Kind.get()._field_Kind);
}



inline jule::Str static__1d7dd4944_typeEnumDecl(jule::Ptr<_204ed3130_TypeEnum> _12232_e) {
	return jule::Str("jule::Any", 9);
}



inline jule::Str static__1d7dd4bdb_asSlice(jule::Ptr<_2050aa8de_TypeKind> _12627_elem) {
	jule::Str _12717_obj = jule::Str("jule::Slice<", 12);;
	_12717_obj+=static__1d7dd73b4_kind(_12627_elem);
	_12717_obj+=jule::Str(">", 1);
	return _12717_obj;
}



inline jule::Str static__1d7dd4e83_slice(jule::Ptr<_2050b45a7_Slc> _13425_s) {
	return static__1d7dd4bdb_asSlice(_13425_s.get()._field_Elem);
}



inline jule::Str static__1d7dd522a_mapType(jule::Ptr<_2050b5b5d_Map> _13927_m) {
	jule::Str _14017_obj = jule::Str("jule::Map<", 10);;
	_14017_obj+=static__1d7dd73b4_kind(_13927_m.get()._field_Key);
	_14017_obj+=jule::Str(",", 1);
	_14017_obj+=static__1d7dd73b4_kind(_13927_m.get()._field_Val);
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;
}



inline jule::Str static__1d7dd54c2_traitIdent(jule::Str _14826_ident) {
	jule::Str _14917_obj = jule::Str("jule::Trait<", 12);;
	_14917_obj+=_14826_ident;
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;
}



inline jule::Str static__1d7dd5769_traitDecl(jule::Ptr<_204ece8e0_Trait> _15625_t) {
	return static__1d7dd54c2_traitIdent(static__1d7d3c605_traitDecl(_15625_t));
}



inline jule::Str static__1d7dd5a11_structure(jule::Ptr<_20433367e_Struct> _16125_s) {
	jule::Str _16217_rep = jule::Str();;
	if ((_16125_s.get()._field_CppLinked && (!(_1d7dda0a9_hasDirective(_16125_s.get()._field_Directives,jule::Str("typedef", 7)))))) {
		_16217_rep+=jule::Str("struct ", 7);
	};
	_16217_rep+=static__1d7d3cb44_structure(_16125_s);
	return _16217_rep;
}



inline jule::Str static__1d7dd5ca8_structureIns(jule::Ptr<_20435cc5d_StructIns> _17132_s) {
	if (_17132_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _17321_ident = static__1d7d3cddb_structureIns(_17132_s);;
		if ((_17132_s.get()._field_Generics.len() > 0LL)) {
			_17321_ident+=jule::Str("<", 1);
			{
				auto &expr = _17132_s.get()._field_Generics;
				auto it = expr.begin();
				_iter_begin_1dc49079d:;
				if (it != expr.end()) {
					jule::Ptr<_2050a91b2_InsGeneric> _17629_g = *it;
					{
						_17321_ident+=static__1d7dd73b4_kind(_17629_g.get()._field_Kind);
						_17321_ident+=jule::Str(",", 1);
					}
					_iter_next_1dc49079d:;
					++it;
					goto _iter_begin_1dc49079d;
				}
				_iter_end_1dc49079d:;
			};
			(_17321_ident).mut_slice(0LL,(_17321_ident.len() - 1LL));;
			_17321_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_20430829c_Directive> _18317_d = _1d7dd9c24_findDirective(_17132_s.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_18317_d != nullptr)) {
			(_17321_ident).buffer.insert(0, ((_1d7dd17ed_concatAllParts(_18317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _17321_ident;
	};
	return static__1d7d3cddb_structureIns(_17132_s);
}



inline jule::Str static__1d7dd6050_array(jule::Ptr<_2050b6752_Arr> _19325_a) {
	jule::Str _19417_obj = jule::Str("jule::Array<", 12);;
	_19417_obj+=static__1d7dd73b4_kind(_19325_a.get()._field_Elem);
	_19417_obj+=jule::Str(",", 1);
	_19417_obj+=_204ebc823_Itoa(_19325_a.get()._field_N);
	_19417_obj+=jule::Str(">", 1);
	return _19417_obj;
}



inline jule::Str static__1d7dd658e_paramIns(jule::Ptr<_204ec7267_ParamIns>& _21929_p) {
	jule::Str _22017_obj = jule::Str();;
	if (_21929_p.get()._field_Decl.get()._field_Variadic) {
		_22017_obj+=jule::Str("jule::Slice<", 12);
		_22017_obj+=static__1d7dd73b4_kind(_21929_p.get()._field_Kind);
		_22017_obj+=jule::Str(">", 1);
	} else {
		_22017_obj+=static__1d7dd73b4_kind(_21929_p.get()._field_Kind);
	};
	if (_21929_p.get()._field_Decl.get()._field_Reference) {
		_22017_obj+=jule::Str("&", 1);
	};
	return _22017_obj;
}



inline jule::Str static__1d7dd6acd_funcInsResult(jule::Ptr<_204ec7454_FnIns>& _24934_f) {
	if (_2043a5a53_IsVoid(_24934_f.get()._field_Decl.ptr())) {
		if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1d7dd73b4_kind(_24934_f.get()._field_Result)) + jule::Str(">", 1));
	};
	return static__1d7dd73b4_kind(_24934_f.get()._field_Result);
}



inline jule::Str static__1d7dd6d75_anonFunc(jule::Ptr<_204ec7454_FnIns> _26228_f) {
	jule::Str _26317_decl = static__1d7dd6acd_funcInsResult(_26228_f);;
	_26317_decl+=jule::Str("(", 1);
	if ((_26228_f.get()._field_Params.len() > 0LL)) {
		{
			auto &expr = _26228_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1dc49cb51:;
			if (it != expr.end()) {
				jule::Ptr<_204ec7267_ParamIns> _26625_param = *it;
				{
					if (_204395b64_IsSelf(_26625_param.get()._field_Decl.ptr())) {
						goto _iter_next_1dc49cb51;
					};
					_26317_decl+=static__1d7dd658e_paramIns(_26625_param);
					_26317_decl+=jule::Str(",", 1);
				}
				_iter_next_1dc49cb51:;
				++it;
				goto _iter_begin_1dc49cb51;
			}
			_iter_end_1dc49cb51:;
		};
		(_26317_decl).mut_slice(0LL,(_26317_decl.len() - 1LL));;
	} else {
		_26317_decl+=jule::Str("void", 4);
	};
	_26317_decl+=jule::Str(")", 1);
	return _26317_decl;
}



inline jule::Str static__1d7dd711c_func(jule::Ptr<_204ec7454_FnIns> _28224_f) {
	jule::Str _28317_obj = jule::Str("jule::Fn<", 9);;
	_28317_obj+=static__1d7dd6d75_anonFunc(_28224_f);
	_28317_obj+=jule::Str(">", 1);
	return _28317_obj;
}



inline jule::Str static__1d7dd73b4_kind(jule::Ptr<_2050aa8de_TypeKind> _29024_k) {
	{
		
		if (_2050ab59e_CppLinked(_29024_k.ptr())) {
			_case_begin_1dc4a0a44:;
			{
				return _29024_k.get()._field_CppIdent;
			}
		}
		else if ((_2050aca01_Prim(_29024_k.ptr()) != nullptr)) {
			_case_begin_1dc4a0aaa:;
			{
				return static__1d7dd35d0_prim(_2050aca01_Prim(_29024_k.ptr()));
			}
		}
		else if ((_2050ae690_Tup(_29024_k.ptr()) != nullptr)) {
			_case_begin_1dc4a0b21:;
			{
				return static__1d7dd3877_tuple(_2050ae690_Tup(_29024_k.ptr()));
			}
		}
		else if ((_2050acc65_Sptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1dc4a0b98:;
			{
				return static__1d7dd415d_sptr(_2050acc65_Sptr(_29024_k.ptr()));
			}
		}
		else if ((_2050acec9_Ptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1dc4a0c20:;
			{
				return static__1d7dd4405_ptr(_2050acec9_Ptr(_29024_k.ptr()));
			}
		}
		else if ((_2050ad23d_Enum(_29024_k.ptr()) != nullptr)) {
			_case_begin_1dc4a0c97:;
			{
				return static__1d7dd469c_enumDecl(_2050ad23d_Enum(_29024_k.ptr()));
			}
		}
		else if ((_2050ad4a2_TypeEnum(_29024_k.ptr()) != nullptr)) {
			_case_begin_1dc4a0d1e:;
			{
				return static__1d7dd4944_typeEnumDecl(_2050ad4a2_TypeEnum(_29024_k.ptr()));
			}
		}
		else if ((_2050ad97a_Slc(_29024_k.ptr()) != nullptr)) {
			_case_begin_1dc4a0d96:;
			{
				return static__1d7dd4e83_slice(_2050ad97a_Slc(_29024_k.ptr()));
			}
		}
		else if ((_2050ae42b_Map(_29024_k.ptr()) != nullptr)) {
			_case_begin_1dc4a0e1d:;
			{
				return static__1d7dd522a_mapType(_2050ae42b_Map(_29024_k.ptr()));
			}
		}
		else if ((_2050ae1b7_Trait(_29024_k.ptr()) != nullptr)) {
			_case_begin_1dc4a0e95:;
			{
				return static__1d7dd5769_traitDecl(_2050ae1b7_Trait(_29024_k.ptr()));
			}
		}
		else if ((_2050ade53_Struct(_29024_k.ptr()) != nullptr)) {
			_case_begin_1dc4a101c:;
			{
				return static__1d7dd5ca8_structureIns(_2050ade53_Struct(_29024_k.ptr()));
			}
		}
		else if ((_2050ad716_Arr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1dc4a1094:;
			{
				return static__1d7dd6050_array(_2050ad716_Arr(_29024_k.ptr()));
			}
		}
		else if ((_2050adbde_Fn(_29024_k.ptr()) != nullptr)) {
			_case_begin_1dc4a111b:;
			{
				return static__1d7dd711c_func(_2050adbde_Fn(_29024_k.ptr()));
			}
		}
		_match_end_1dc4a0835:;
	};
	{
		auto &_match_expr{ _29024_k.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d7dd2513_customType>>()) {
			_case_begin_1dc4a8d8d:;
			{
				return _29024_k.get()._field_Kind.operator jule::Ptr<_1d7dd2513_customType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1dc4a9036:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1dc4a9113:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d7dd2d0a_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dc166045_Name(_1dc4a9eb0_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1dc166177_What(_1dc4a9eb0_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1dc4aa3de_Reset(_1dc4a9eb0_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1dc4aa521_Short(_1dc4a9eb0_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1dc4a9eb0_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1dc4ad821_Name(_1dc4add0a_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1dc4ae0e6_What(_1dc4add0a_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1dc4ae228_Reset(_1dc4add0a_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1dc4ae35a_Short(_1dc4add0a_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1dc4add0a_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1dc4b245c_Name(_1dc4b2946_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1dc4b2c32_What(_1dc4b2946_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1dc4b2d64_Reset(_1dc4b2946_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1dc4b2e96_Short(_1dc4b2946_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1dc4b2946_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1dc4b60dc_Name(_1dc4b65c6_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1dc4b68b2_What(_1dc4b65c6_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1dc4b69e4_Reset(_1dc4b65c6_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1dc4b6b26_Short(_1dc4b65c6_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1dc4b65c6_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1dc4b9c28_Name(_1dc4ba212_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1dc4ba4ed_What(_1dc4ba212_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1dc4ba630_Reset(_1dc4ba212_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1dc4ba762_Short(_1dc4ba212_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1dc4ba212_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d7e1da5a_FlagSet> static__1d7e1dd46_New(void) {
	return jule::new_ptr<_1d7e1da5a_FlagSet>(_1d7e1da5a_FlagSet{._field_flags=jule::Slice<jule::Trait<_1d7e1c0db_CommonFlag>>::alloc(0LL,20LL)});
}



inline jule::Trait<_1d7e1c0db_CommonFlag> _1d7e1e2ca_FindFlag(_1d7e1da5a_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1dc4c6163:;
		if (it != expr.end()) {
			jule::Trait<_1d7e1c0db_CommonFlag> _7221_flag = *it;
			{
				if ((_1d7e1c0db_CommonFlag_mptr_data[(_7221_flag).type_offset]._1d7ddbb9e_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;
				};
			}
			_iter_next_1dc4c6163:;
			++it;
			goto _iter_begin_1dc4c6163;
		}
		_iter_end_1dc4c6163:;
	};
	return nullptr;
}



inline jule::Trait<_1d7e1c0db_CommonFlag> _1d7e1e5d8_FindFlagShort(_1d7e1da5a_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1dc4c65b4:;
		if (it != expr.end()) {
			jule::Trait<_1d7e1c0db_CommonFlag> _8221_flag = *it;
			{
				if ((_1d7e1c0db_CommonFlag_mptr_data[(_8221_flag).type_offset]._1d7ddbcd1_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;
				};
			}
			_iter_next_1dc4c65b4:;
			++it;
			goto _iter_begin_1dc4c65b4;
		}
		_iter_end_1dc4c65b4:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_1d7e1c0db_CommonFlag>> _1d7e1e84c_Flags(_1d7e1da5a_FlagSet* _self_) {
	return (*_self_)._field_flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1d7e1eb5a_Parse(_1d7e1da5a_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1d7e21233_argParser _11617_ap = _1d7e21233_argParser{._field_set=(*_self_), ._field_args=_11524_args, };;
	({
		auto except = _1d7e2261e_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _1d7e1ed36_Reset(_1d7e1da5a_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1dc4c8ce2:;
		if (it != expr.end()) {
			jule::Trait<_1d7e1c0db_CommonFlag> _12616_f = *it;
			{
				_1d7e1c0db_CommonFlag_mptr_data[(_12616_f).type_offset]._1d7ddc09a_Reset(_12616_f);
			}
			_iter_next_1dc4c8ce2:;
			++it;
			goto _iter_begin_1dc4c8ce2;
		}
		_iter_end_1dc4c8ce2:;
	};
}



inline jule::Ptr<_1dc4ba212_Flag> _1dc54428b_addFlagCommon(_1d7e1da5a_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1dc545cc6:;
			{
				goto _match_end_1dc545c2c;
			}
		}
		_match_end_1dc545c2c:;
	};
	if ((_1d7e1e2ca_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1d7e1e5d8_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1dc4ba212_Flag> _14817_flag = jule::new_ptr<_1dc4ba212_Flag>(_1dc4ba212_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_1d7e1c0db_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_1dc4b65c6_Flag> _1dc54d3c7_addFlagCommon(_1d7e1da5a_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1dc54eeab:;
			{
				goto _match_end_1dc54ee12;
			}
		}
		_match_end_1dc54ee12:;
	};
	if ((_1d7e1e2ca_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1d7e1e5d8_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1dc4b65c6_Flag> _14817_flag = jule::new_ptr<_1dc4b65c6_Flag>(_1dc4b65c6_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_1d7e1c0db_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}



inline void _1dc542542_AddVar(_1d7e1da5a_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1dc4ba212_Flag> _17617_flag = _1dc54428b_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1dc54b68e_AddVar(_1d7e1da5a_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1dc4b65c6_Flag> _17617_flag = _1dc54d3c7_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7e1da5a_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_2054b956c_IR>,jule::Slice<_20285b7ad_Log>> static__20429e96e_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	jule::Ptr<_2052896b1_JuleImporter> _2817_importer = static__205308d29_New(_20563ee2e_buildCompileInfo());;
	jule::Slice<jule::Ptr<_204307202_Ast>> _2918_files;;
	jule::Slice<_20285b7ad_Log> _2929_logs;;
	std::tie(_2918_files,_2929_logs) = _20546986e_ImportPackage(_2817_importer.ptr(), _2721_path,true);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_20500dd70_Package> _3918_pkg;;
	std::tie(_3918_pkg,_2929_logs) = _2050c7a1b_AnalyzePackage(_2918_files,jule::Trait<_205008298_Importer>(_2817_importer, 0),_2732_flags);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Ptr<_2054b956c_IR> _4417_ir = jule::new_ptr<_2054b956c_IR>(_2054b956c_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_2053145d7_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_20563474d_getAllUniquePasses(_4417_ir.get()._field_Main,_4417_ir.get()._field_Used);
	return std::make_tuple(_4417_ir,nullptr);
}



inline void _204028cae_appendStructs(_2054b956c_IR* _self_, jule::Ptr<_20500dd70_Package>& _5633_p, jule::Slice<jule::Ptr<_20433367e_Struct>>& _5657_buffer) {
	{
		auto &expr = _5633_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1dbe6ae27:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _5721_f = *it;
			{
				{
					auto &expr = _5721_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1dbe6b620:;
					if (it != expr.end()) {
						jule::Ptr<_20433367e_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								_5657_buffer = jule::alloc_for_append(_5657_buffer,1);_5657_buffer.__push(_5825_s);;
							};
						}
						_iter_next_1dbe6b620:;
						++it;
						goto _iter_begin_1dbe6b620;
					}
					_iter_end_1dbe6b620:;
				};
			}
			_iter_next_1dbe6ae27:;
			++it;
			goto _iter_begin_1dbe6ae27;
		}
		_iter_end_1dbe6ae27:;
	};
}



inline jule::Slice<jule::Ptr<_20433367e_Struct>> _205172555_GetAllStructures(_2054b956c_IR* _self_) {
	jule::Slice<jule::Ptr<_20433367e_Struct>> _6917_buffer = nullptr;;
	_204028cae_appendStructs(&(*_self_), (*_self_)._field_Main,_6917_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1dbe6b4bb:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_204028cae_appendStructs(&(*_self_), _7121_u.get()._field_Package,_6917_buffer);
				};
			}
			_iter_next_1dbe6b4bb:;
			++it;
			goto _iter_begin_1dbe6b4bb;
		}
		_iter_end_1dbe6b4bb:;
	};
	return _6917_buffer;
}



inline void _2054a94a2_appendGlobals(_2054b956c_IR* _self_, jule::Ptr<_20500dd70_Package>& _7933_p, jule::Slice<jule::Ptr<_205031cb6_Var>>& _7957_buffer) {
	{
		auto &expr = _7933_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1dbe6e2b0:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1dbe6e997:;
					if (it != expr.end()) {
						jule::Ptr<_205031cb6_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								_7957_buffer = jule::alloc_for_append(_7957_buffer,1);_7957_buffer.__push(_8125_v);;
							};
						}
						_iter_next_1dbe6e997:;
						++it;
						goto _iter_begin_1dbe6e997;
					}
					_iter_end_1dbe6e997:;
				};
			}
			_iter_next_1dbe6e2b0:;
			++it;
			goto _iter_begin_1dbe6e2b0;
		}
		_iter_end_1dbe6e2b0:;
	};
}



inline jule::Slice<jule::Ptr<_205031cb6_Var>> _2054b1179_GetAllGlobals(_2054b956c_IR* _self_) {
	jule::Slice<jule::Ptr<_205031cb6_Var>> _9217_buffer = nullptr;;
	_2054a94a2_appendGlobals(&(*_self_), (*_self_)._field_Main,_9217_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1dbe71290:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_2054a94a2_appendGlobals(&(*_self_), _9421_u.get()._field_Package,_9217_buffer);
				};
			}
			_iter_next_1dbe71290:;
			++it;
			goto _iter_begin_1dbe71290;
		}
		_iter_end_1dbe71290:;
	};
	return _9217_buffer;
}



inline void _205612077_Order(_2054b956c_IR* _self_) {
	(*_self_)._field_Ordered._field_Structs=_205172555_GetAllStructures(&(*_self_));
	(*_self_)._field_Ordered._field_Globals=_2054b1179_GetAllGlobals(&(*_self_));
	static__20566d644_orderStructures((*_self_)._field_Ordered._field_Structs);
	static__20567e523_orderVars((*_self_)._field_Ordered._field_Globals);
}







std::ostream &operator<<(std::ostream &_Stream, _2054b956c_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _204326be4_Str(_20435cc5d_StructIns* _self_) {
	jule::Str _24917_kind = jule::Str();;
	_24917_kind+=(*_self_)._field_Decl.get()._field_Ident;
	if (((*_self_)._field_Generics.len() > 0LL)) {
		_24917_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_Generics;
			auto it = expr.begin();
			_iter_begin_1dad24243:;
			if (it != expr.end()) {
				jule::Ptr<_2050a91b2_InsGeneric> &_25320_g = *it;
				{
					_24917_kind+=_2050aacda_Str(_25320_g.get()._field_Kind.ptr());
					_24917_kind+=jule::Str(",", 1);
				}
				_iter_next_1dad24243:;
				++it;
				goto _iter_begin_1dad24243;
			}
			_iter_end_1dad24243:;
		};
		(_24917_kind).mut_slice(0LL,(_24917_kind.len() - 1LL));;
		_24917_kind+=jule::Str("]", 1);
	};
	return _24917_kind;
}



inline jule::Bool _2043273a9_Equals(jule::Ptr<_20435cc5d_StructIns> _self_, jule::Ptr<_2050aa8de_TypeKind> _26422_other) {
	jule::Ptr<_20435cc5d_StructIns> _26513_s = _2050ade53_Struct(_26422_other.ptr());;
	if ((_26513_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Decl != _26513_s.get()._field_Decl)) {
		return false;
	};
	if ((_self_.get()._field_Generics.len() != _26513_s.get()._field_Generics.len())) {
		return false;
	};
	jule::I64 _27817_i = 0LL;;
	for (; (_27817_i < _self_.get()._field_Generics.len()); (_27817_i)++) {
		{
			if ((!(_2050ab0e8_Equals(_self_.get()._field_Generics[_27817_i].get()._field_Kind, _26513_s.get()._field_Generics[_27817_i].get()._field_Kind)))) {
				return false;
			};
		}
	_iter_next_1dad27d07:;
	}
	_iter_end_1dad27d07:;;
	return true;
}



inline jule::Bool _204333937_Same(_20435cc5d_StructIns* _self_, jule::Ptr<_20435cc5d_StructIns> _29219_s) {
	if ((((*_self_)._field_Decl != _29219_s.get()._field_Decl) || (_29219_s.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1dad2a568:;
		if (it != expr.end()) {
			jule::I64 _29613_i = it - expr.begin();
			jule::Ptr<_2050a91b2_InsGeneric> &_29616_g = *it;
			{
				if ((!(_2050ab0e8_Equals(_29616_g.get()._field_Kind, _29219_s.get()._field_Generics[_29613_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_1dad2a568:;
			++it;
			_29613_i++;
			goto _iter_begin_1dad2a568;
		}
		_iter_end_1dad2a568:;
	};
	return true;
}



inline jule::Ptr<_204ec707a_Fn> _204334a9d_FindMethod(_20435cc5d_StructIns* _self_, jule::Str _30629_ident, jule::Bool _30641_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1dad2c37d:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> _30721_f = *it;
			{
				if (((_30721_f.get()._field_Statically == _30641_statically) && (_30721_f.get()._field_Ident == _30629_ident))) {
					return _30721_f;
				};
			}
			_iter_next_1dad2c37d:;
			++it;
			goto _iter_begin_1dad2c37d;
		}
		_iter_end_1dad2c37d:;
	};
	return nullptr;
}



inline jule::Ptr<_2043393bb_FieldIns> _204336e02_FindField(_20435cc5d_StructIns* _self_, jule::Str _31728_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1dad2d6c0:;
		if (it != expr.end()) {
			jule::Ptr<_2043393bb_FieldIns> _31821_f = *it;
			{
				if ((_31821_f.get()._field_Decl.get()._field_Ident == _31728_ident)) {
					return _31821_f;
				};
			}
			_iter_next_1dad2d6c0:;
			++it;
			goto _iter_begin_1dad2d6c0;
		}
		_iter_end_1dad2d6c0:;
	};
	return nullptr;
}



inline jule::Ptr<_205031cb6_Var> _204338222_FindStatic(_20435cc5d_StructIns* _self_, jule::Str _32829_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_1dad2dc64:;
		if (it != expr.end()) {
			jule::Ptr<_205031cb6_Var> _32921_v = *it;
			{
				if ((_32921_v.get()._field_Ident == _32829_ident)) {
					return _32921_v;
				};
			}
			_iter_next_1dad2dc64:;
			++it;
			goto _iter_begin_1dad2dc64;
		}
		_iter_end_1dad2dc64:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _20435cc5d_StructIns _Src) {
	_Stream << _204326be4_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_20593a0e7_ObjectDeadCode> static__20593a548_new(jule::Ptr<_2054b956c_IR>& _3424_ir) {
	return jule::new_ptr<_20593a0e7_ObjectDeadCode>(_20593a0e7_ObjectDeadCode{._field_ir=_3424_ir});
}



inline jule::Bool _1dbead321_isLive(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_, jule::Ptr<_204ece8e0_Trait>& _4030_t) {
	jule::Slice<jule::Ptr<_204ece8e0_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1dbeb0444:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1dbeb0367:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1dbeb04aa:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1dbeb04aa:;
			++it;
			_5213_i++;
			goto _iter_begin_1dbeb04aa;
		}
		_iter_end_1dbeb04aa:;
	};
	return false;
}

inline jule::Bool _1dbeb37aa_isLive(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_, jule::Ptr<_204ec7454_FnIns>& _4030_t) {
	jule::Slice<jule::Ptr<_204ec7454_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1dbeb5ca7:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1dbeb5e0b:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1dbeb5c52:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1dbeb5c52:;
			++it;
			_5213_i++;
			goto _iter_begin_1dbeb5c52;
		}
		_iter_end_1dbeb5c52:;
	};
	return false;
}

inline jule::Bool _1dbebd067_isLive(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_, jule::Ptr<_20435cc5d_StructIns>& _4030_t) {
	jule::Slice<jule::Ptr<_20435cc5d_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1dbec018a:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1dbec0124:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1dbec08a5:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1dbec08a5:;
			++it;
			_5213_i++;
			goto _iter_begin_1dbec08a5;
		}
		_iter_end_1dbec08a5:;
	};
	return false;
}

inline jule::Bool _1dbec2cc5_isLive(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_, jule::Ptr<_205031cb6_Var>& _4030_t) {
	jule::Slice<jule::Ptr<_205031cb6_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1dbec4bd9:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1dbec4cc7:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1dbec4b1d:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1dbec4b1d:;
			++it;
			_5213_i++;
			goto _iter_begin_1dbec4b1d;
		}
		_iter_end_1dbec4b1d:;
	};
	return false;
}



inline void _1dbead909_pushLive(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_, jule::Ptr<_204ece8e0_Trait> _6035_t) {
	{
		
{
			_case_begin_1dbeb2787:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_1dbeb2655:;
	};
}

inline void _1dbeb7b88_pushLive(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_, jule::Ptr<_204ec7454_FnIns> _6035_t) {
	{
		
{
			_case_begin_1dbeb889d:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_1dbeb8848:;
	};
}

inline void _1dbebaecc_pushLive(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_, jule::Ptr<_20435cc5d_StructIns> _6035_t) {
	{
		
{
			_case_begin_1dbebc792:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_1dbebc6c6:;
	};
}

inline void _1dbec6823_pushLive(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_, jule::Ptr<_205031cb6_Var> _6035_t) {
	{
		
{
			_case_begin_1dbec73a1:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_1dbec74d3:;
	};
}



inline void _20596ccc8_setReferencesAsLive(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_, jule::Ptr<_204ec7e27_ReferenceStack>& _7344_rs) {
	if ((_7344_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _204ec8246_Len(_7344_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _204ec8378_At(_7344_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type_is<jule::Ptr<_204ece8e0_Trait>>()) {
					_case_begin_1dbeac2cb:;
					{
						jule::Ptr<_204ece8e0_Trait> _8225_t = _7921_ref.operator jule::Ptr<_204ece8e0_Trait>();;
						if (_1dbead321_isLive(_self_, _8225_t)) {
							goto _iter_next_1dbeab61b;
						};
						_1dbead909_pushLive(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1dbeb2017:;
							if (it != expr.end()) {
								jule::Ptr<_204ec707a_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1dbeb2567:;
										if (it != expr.end()) {
											jule::Ptr<_204ec7454_FnIns> _8833_mins = *it;
											{
												if (_1dbeb37aa_isLive(_self_, _8833_mins)) {
													goto _iter_next_1dbeb2567;
												};
												_1dbeb7b88_pushLive(_self_, _8833_mins);
												_20596ccc8_setReferencesAsLive(_self_, _8833_mins.get()._field_Refers);
											}
											_iter_next_1dbeb2567:;
											++it;
											goto _iter_begin_1dbeb2567;
										}
										_iter_end_1dbeb2567:;
									};
								}
								_iter_next_1dbeb2017:;
								++it;
								goto _iter_begin_1dbeb2017;
							}
							_iter_end_1dbeb2017:;
						};
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_204ec7454_FnIns>>()) {
					_case_begin_1dbeac342:;
					{
						jule::Ptr<_204ec7454_FnIns> _9725_f = _7921_ref.operator jule::Ptr<_204ec7454_FnIns>();;
						if (_1dbeb37aa_isLive(_self_, _9725_f)) {
							goto _match_end_1dbeac221;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1dbebd067_isLive(_self_, _9725_f.get()._field_Owner)))) {
								_1dbebaecc_pushLive(_self_, _9725_f.get()._field_Owner);
								_20596ccc8_setReferencesAsLive(_self_, _9725_f.get()._field_Owner.get()._field_Refers);
							};
						};
						_1dbeb7b88_pushLive(_self_, _9725_f);
						_20596ccc8_setReferencesAsLive(_self_, _9725_f.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_205031cb6_Var>>()) {
					_case_begin_1dbeac4b8:;
					{
						jule::Ptr<_205031cb6_Var> _11025_v = _7921_ref.operator jule::Ptr<_205031cb6_Var>();;
						if (_1dbec2cc5_isLive(_self_, _11025_v)) {
							goto _match_end_1dbeac221;
						};
						_1dbec6823_pushLive(_self_, _11025_v);
						_20596ccc8_setReferencesAsLive(_self_, _11025_v.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_20435cc5d_StructIns>>()) {
					_case_begin_1dbeac52e:;
					{
						jule::Ptr<_20435cc5d_StructIns> _11725_s = _7921_ref.operator jule::Ptr<_20435cc5d_StructIns>();;
						if (_1dbebd067_isLive(_self_, _11725_s)) {
							goto _match_end_1dbeac221;
						};
						_1dbebaecc_pushLive(_self_, _11725_s);
						_20596ccc8_setReferencesAsLive(_self_, _11725_s.get()._field_Refers);
						{
							auto &expr = _11725_s.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1dbeca8e3:;
							if (it != expr.end()) {
								jule::Ptr<_204ec707a_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1dbecb493:;
										if (it != expr.end()) {
											jule::Ptr<_204ec7454_FnIns> _12433_mins = *it;
											{
												if (_1dbeb37aa_isLive(_self_, _12433_mins)) {
													goto _iter_next_1dbecb493;
												};
												_1dbeb7b88_pushLive(_self_, _12433_mins);
												_20596ccc8_setReferencesAsLive(_self_, _12433_mins.get()._field_Refers);
											}
											_iter_next_1dbecb493:;
											++it;
											goto _iter_begin_1dbecb493;
										}
										_iter_end_1dbecb493:;
									};
								}
								_iter_next_1dbeca8e3:;
								++it;
								goto _iter_begin_1dbeca8e3;
							}
							_iter_end_1dbeca8e3:;
						};
					}
				}
				_match_end_1dbeac221:;
			};
		}
	_iter_next_1dbeab61b:;
	}
	_iter_end_1dbeab61b:;;
}



inline void _20596d04d_inits(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_, jule::Ptr<_20500dd70_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1dbeaba4a:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1dbecdc26:;
					if (it != expr.end()) {
						jule::Ptr<_204ec707a_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_Ident == jule::Str("init", 4))) {
								jule::Ptr<_204ec7454_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_20596ccc8_setReferencesAsLive(_self_, _14029_ins.get()._field_Refers);
							};
						}
						_iter_next_1dbecdc26:;
						++it;
						goto _iter_begin_1dbecdc26;
					}
					_iter_end_1dbecdc26:;
				};
			}
			_iter_next_1dbeaba4a:;
			++it;
			goto _iter_begin_1dbeaba4a;
		}
		_iter_end_1dbeaba4a:;
	};
}



inline void _20596d2c3_collectLivePackage(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_, jule::Ptr<_20500dd70_Package>& _14843_pkg) {
	_20596d04d_inits(_self_, _14843_pkg);
	if (_200890e65_Test) {
		{
			auto &expr = _14843_pkg.get()._field_Files;
			auto it = expr.begin();
			_iter_begin_1dbed1443:;
			if (it != expr.end()) {
				jule::Ptr<_205074eb3_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_Funcs;
						auto it = expr.begin();
						_iter_begin_1dbed1d17:;
						if (it != expr.end()) {
							jule::Ptr<_204ec707a_Fn> _15529_f = *it;
							{
								if (_2059702d6_hasDirective(_15529_f.get()._field_Directives,jule::Str("test", 4))) {
									jule::Ptr<_204ec7454_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_20596ccc8_setReferencesAsLive(_self_, _15733_ins.get()._field_Refers);
								};
							}
							_iter_next_1dbed1d17:;
							++it;
							goto _iter_begin_1dbed1d17;
						}
						_iter_end_1dbed1d17:;
					};
				}
				_iter_next_1dbed1443:;
				++it;
				goto _iter_begin_1dbed1443;
			}
			_iter_end_1dbed1443:;
		};
	};
}



inline void _20596d49e_collectLive(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1dbed1146:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_20596d2c3_collectLivePackage(_self_, _16721_used.get()._field_Package);
				};
			}
			_iter_next_1dbed1146:;
			++it;
			goto _iter_begin_1dbed1146;
		}
		_iter_end_1dbed1146:;
	};
	_20596d2c3_collectLivePackage(_self_, _self_.get()._field_ir.get()._field_Main);
	jule::Ptr<_204ec707a_Fn> _17517_main = _205010624_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_204ec7454_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_20596ccc8_setReferencesAsLive(_self_, _17617_ins.get()._field_Refers);
}



inline void _20596d724_removeDeadGlobals(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_205031cb6_Var>>& _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18142_vars.len())) {
		{
			jule::Ptr<_205031cb6_Var> _18417_v = _18142_vars[_18217_i];;
			if (_1dbec2cc5_isLive(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_1dbed71e6;
			};
			_18142_vars=jule::append(_18142_vars.slice(0LL,_18217_i),_18142_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_1dbed71e6:;
	}
	_iter_end_1dbed71e6:;;
}



inline void _20596d999_removeDeadFns(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_204ec707a_Fn>>& _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19338_funcs.len())) {
		{
			jule::Ptr<_204ec707a_Fn> _19621_f = _19338_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_204ec7454_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_1dbeb37aa_isLive(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_1dbeda9be;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL,_19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1dbeda9be:;
			}
			_iter_end_1dbeda9be:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				_19338_funcs=jule::append(_19338_funcs.slice(0LL,_19417_i),_19338_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_1dbed7702;
			};
			(_19417_i)++;
		}
	_iter_next_1dbed7702:;
	}
	_iter_end_1dbed7702:;;
}



inline void _20596dc1e_removeDeadStructs(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_20433367e_Struct>>& _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21442_structs.len())) {
		{
			jule::Ptr<_20433367e_Struct> _21721_s = _21442_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_20435cc5d_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_20596d999_removeDeadFns(_self_, _22025_ins.get()._field_Methods);
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _1dbebd067_isLive(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_1dbee0012;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL,_21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1dbee0012:;
			}
			_iter_end_1dbee0012:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				_21442_structs=jule::append(_21442_structs.slice(0LL,_21517_i),_21442_structs.slice((_21517_i + 1LL)));
				goto _iter_next_1dbeddcad;
			};
			(_21517_i)++;
		}
	_iter_next_1dbeddcad:;
	}
	_iter_end_1dbeddcad:;;
}



inline void _20596de94_removeDeadTraits(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_204ece8e0_Trait>>& _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23641_traits.len())) {
		{
			jule::Ptr<_204ece8e0_Trait> _23921_t = _23641_traits[_23717_i];;
			if ((!(_1dbead321_isLive(_self_, _23921_t)))) {
				_23641_traits=jule::append(_23641_traits.slice(0LL,_23717_i),_23641_traits.slice((_23717_i + 1LL)));
				goto _iter_next_1dbee3d07;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_20433367e_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1dbee49c8;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL,_24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1dbee49c8:;
			}
			_iter_end_1dbee49c8:;;
			(_23717_i)++;
		}
	_iter_next_1dbee3d07:;
	}
	_iter_end_1dbee3d07:;;
}



inline void _20596e219_removeDeadsFile(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_, jule::Ptr<_205074eb3_SymbolTable>& _25740_file) {
	_20596d999_removeDeadFns(_self_, _25740_file.get()._field_Funcs);
	_20596dc1e_removeDeadStructs(_self_, _25740_file.get()._field_Structs);
	_20596de94_removeDeadTraits(_self_, _25740_file.get()._field_Traits);
	_20596d724_removeDeadGlobals(_self_, _25740_file.get()._field_Vars);
}



inline void _20596e48e_removeDeadsPackage(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_, jule::Ptr<_20500dd70_Package>& _26443_pkg) {
	{
		auto &expr = _26443_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1dbee9a00:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _26521_file = *it;
			{
				_20596e219_removeDeadsFile(_self_, _26521_file);
			}
			_iter_next_1dbee9a00:;
			++it;
			goto _iter_begin_1dbee9a00;
		}
		_iter_end_1dbee9a00:;
	};
}



inline void _20596e66a_removeDeads(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1dbeea21a:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_20596e48e_removeDeadsPackage(_self_, _27121_used.get()._field_Package);
				};
			}
			_iter_next_1dbeea21a:;
			++it;
			goto _iter_begin_1dbeea21a;
		}
		_iter_end_1dbeea21a:;
	};
	_20596e48e_removeDeadsPackage(_self_, _self_.get()._field_ir.get()._field_Main);
}



inline void _20596e846_elimanate(jule::Ptr<_20593a0e7_ObjectDeadCode> _self_) {
	_20596d49e_collectLive(_self_);
	_20596e66a_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _20593a0e7_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d7dcd553_ObjectCoder> static__1d7d6d724_New(jule::Ptr<_2054b956c_IR>& _7224_ir, _1d7d44277_SerializationInfo _7233_info) {
	jule::Ptr<_1d7dcd553_ObjectCoder> _7317_oc = jule::new_ptr<_1d7dcd553_ObjectCoder>(_1d7dcd553_ObjectCoder{._field_ir=_7224_ir, ._field_info=_7233_info, });;
	_7317_oc.get()._field_ec=static__1d7d291a2_new(_7317_oc);
	_7317_oc.get()._field_sc=static__1d7210d09_new(_7317_oc);
	return _7317_oc;
}



inline void _1d7d72d77_write(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Str _8225_s) {
	_self_.get()._field_Obj+=_8225_s;
}



inline void _1d7da5d22_addIndent(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	;
	_self_.get()._field_indentBuffer+=jule::Str("\t", 1);
}



inline void _1d7da6707_doneIndent(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL,(_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1d7d4374e_indent(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _1d7d63b9d_findTypeOffset(_1d7dcd553_ObjectCoder* _self_, jule::Ptr<_204ece8e0_Trait> _10229_t, jule::Ptr<_2050aa8de_TypeKind> _10244_k) {
	if ((_10229_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_20435cc5d_StructIns> _10617_s = nullptr;;
	if ((_2050acc65_Sptr(_10244_k.ptr()) != nullptr)) {
		_10244_k=_2050acc65_Sptr(_10244_k.ptr()).get()._field_Elem;
	};
	if ((_2050ade53_Struct(_10244_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10617_s=_2050ade53_Struct(_10244_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1dc3a5d9a:;
		if (it != expr.end()) {
			jule::Ptr<_1d7dcd366_traitHash> &_11416_hash = *it;
			{
				if (((_11416_hash.get()._field_t == _10229_t) && (_11416_hash.get()._field_s == _10617_s))) {
					return _11416_hash.get()._field_i;
				};
			}
			_iter_next_1dc3a5d9a:;
			++it;
			goto _iter_begin_1dc3a5d9a;
		}
		_iter_end_1dc3a5d9a:;
	};
	return -1LL;
}



inline void _1d7da33a2_locInfo(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_202b89679_Token>& _12328_t) {
	jule::Str &_12414_loc = _12328_t.get()._field_File.get()._field_Path;;
	if (_20089198d_Production) {
		{
			
			if (_2027ce8da_HasPrefix(_12414_loc,_2028954d9_PathStdlib)) {
				_case_begin_1dc3a86b6:;
				{
					_1d7d72d77_write(_self_, _1d7d35c2a_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_20182c483_Dir(_2028954d9_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_2027ce8da_HasPrefix(_12414_loc,_self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1dc3a8485:;
				{
					_1d7d72d77_write(_self_, _1d7d35c2a_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_20182c483_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1dc3a80cd:;
				{
					_1d7d72d77_write(_self_, _1d7d35c2a_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
				}
			}
			_match_end_1dc3a8001:;
		};
	} else {
		_1d7d72d77_write(_self_, _1d7d35c2a_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
	};
	_1d7d72d77_write(_self_, jule::Str(":", 1));
	_1d7d72d77_write(_self_, _204ebc823_Itoa(_12328_t.get()._field_Row));
	_1d7d72d77_write(_self_, jule::Str(":", 1));
	_1d7d72d77_write(_self_, _204ebc823_Itoa(_12328_t.get()._field_Column));
}



inline void _1d7da38d0_head(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	_1d7dc6309_Time _15013_time = static__1d7dc689d_Now();;
	_1d7dc5b66_AbsTime _15113_abs = _1d7dc7edc_Abs(&_15013_time);;
	_1d7d72d77_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1d7d72d77_write(_self_, jule::Str("// JuleC version: ", 18));
	_1d7d72d77_write(_self_, jule::Str("jule0.0.12 @master", 18));
	_1d7d72d77_write(_self_, jule::Str("\n", 1));
	_1d7d72d77_write(_self_, jule::Str("// Date: ", 9));
	_1d7d72d77_write(_self_, _204ebc5ae_FmtUint(_15113_abs._field_Day,10LL));
	_1d7d72d77_write(_self_, jule::Str("/", 1));
	_1d7d72d77_write(_self_, _204ebc5ae_FmtUint(_15113_abs._field_Month,10LL));
	_1d7d72d77_write(_self_, jule::Str("/", 1));
	_1d7d72d77_write(_self_, _204ebc5ae_FmtUint(_15113_abs._field_Year,10LL));
	_1d7d72d77_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1d7d72d77_write(_self_, _self_.get()._field_info._field_Compiler);
	_1d7d72d77_write(_self_, jule::Str(" ", 1));
	_1d7d72d77_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1d7d72d77_write(_self_, jule::Str("\n\n", 2));
	if (_20089198d_Production) {
		_1d7d72d77_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_200891262_RC))) {
		_1d7d72d77_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_200891680_Safety))) {
		_1d7d72d77_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1d7d72d77_write(_self_, jule::Str("\n\n#include \"", 12));
	_1d7d72d77_write(_self_, _2028a5395_PathApi);
	_1d7d72d77_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1d7d44464_links(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1dc3b50a7:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _18316_used = *it;
			{
				{
					
					if ((!(_18316_used.get()._field_CppLinked))) {
						_case_begin_1dc3b63d8:;
						{
							goto _iter_next_1dc3b50a7;
						}
					}
					else if (_20284e8a0_IsStdHeaderPath(_18316_used.get()._field_Path)) {
						_case_begin_1dc3b6042:;
						{
							_1d7d72d77_write(_self_, jule::Str("#include ", 9));
							_1d7d72d77_write(_self_, _18316_used.get()._field_Path);
							_1d7d72d77_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_1dc3b5b9b:;
						{
							_1d7d72d77_write(_self_, jule::Str("#include \"", 10));
							_1d7d72d77_write(_self_, _18316_used.get()._field_Path);
							_1d7d72d77_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1dc3b5abe:;
				};
			}
			_iter_next_1dc3b50a7:;
			++it;
			goto _iter_begin_1dc3b50a7;
		}
		_iter_end_1dc3b50a7:;
	};
}



inline void _1d7d674cb_prepareStructures(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1dc3b7450:;
		if (it != expr.end()) {
			jule::Ptr<_20433367e_Struct> _20021_s = *it;
			{
				if ((_20021_s.get()._field_Token != nullptr)) {
					_1d7dd15cd_prepareStructure(_20021_s);
				};
			}
			_iter_next_1dc3b7450:;
			++it;
			goto _iter_begin_1dc3b7450;
		}
		_iter_end_1dc3b7450:;
	};
}



inline void _1d7d6e318_iterPackages(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_20500dd70_Package>&)> _20732_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1dc3b96c7:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _20821_used = *it;
			{
				if ((!(_20821_used.get()._field_CppLinked))) {
					_20732_f(_20821_used.get()._field_Package);
				};
			}
			_iter_next_1dc3b96c7:;
			++it;
			goto _iter_begin_1dc3b96c7;
		}
		_iter_end_1dc3b96c7:;
	};
	_20732_f(_self_.get()._field_ir.get()._field_Main);
}



inline void _1d7d6e89b_buildTraitMap(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	_1d7d6e318_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20500dd70_Package>&)>([=](jule::Ptr<_20500dd70_Package>& _21735_pkg) mutable -> void {
		_1d7dd149b_iterFiles(_21735_pkg,jule::Fn<void(jule::Ptr<_205074eb3_SymbolTable>&)>([=](jule::Ptr<_205074eb3_SymbolTable>& _21836_file) mutable -> void {
			{
				auto &expr = _21836_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1dc3bcca2:;
				if (it != expr.end()) {
					jule::Ptr<_204ece8e0_Trait> _21929_t = *it;
					{
						if ((_21929_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_21929_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1d7dcd366_traitHash>(_1d7dcd366_traitHash{._field_t=_21929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1dc3bcca2;
						};
						jule::I64 _23129_i = 0LL;;
						{
							auto &expr = _21929_t.get()._field_Implemented;
							auto it = expr.begin();
							_iter_begin_1dc3bd577:;
							if (it != expr.end()) {
								jule::Ptr<_20433367e_Struct> _23233_s = *it;
								{
									{
										auto &expr = _23233_s.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1dc3c09a8:;
										if (it != expr.end()) {
											jule::Ptr<_20435cc5d_StructIns> _23337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1d7dcd366_traitHash>(_1d7dcd366_traitHash{._field_t=_21929_t, ._field_s=_23337_ins, ._field_i=_23129_i}));;
												(_23129_i)++;
											}
											_iter_next_1dc3c09a8:;
											++it;
											goto _iter_begin_1dc3c09a8;
										}
										_iter_end_1dc3c09a8:;
									};
								}
								_iter_next_1dc3bd577:;
								++it;
								goto _iter_begin_1dc3bd577;
							}
							_iter_end_1dc3bd577:;
						};
					}
					_iter_next_1dc3bcca2:;
					++it;
					goto _iter_begin_1dc3bcca2;
				}
				_iter_end_1dc3bcca2:;
			};
		}));
	}));
}



inline void _1d7d7076a_traitDecls(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	_1d7d6e318_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20500dd70_Package>&)>([=](jule::Ptr<_20500dd70_Package>& _24835_pkg) mutable -> void {
		_1d7dd149b_iterFiles(_24835_pkg,jule::Fn<void(jule::Ptr<_205074eb3_SymbolTable>&)>([=](jule::Ptr<_205074eb3_SymbolTable>& _24936_file) mutable -> void {
			{
				auto &expr = _24936_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1dc3c2b75:;
				if (it != expr.end()) {
					jule::Ptr<_204ece8e0_Trait> _25029_t = *it;
					{
						if ((_25029_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1d7d4374e_indent(_self_);
						_1d7d72d77_write(_self_, jule::Str("struct ", 7));
						_1d7d72d77_write(_self_, static__1d7d3c605_traitDecl(_25029_t));
						_1d7d72d77_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1dc3c2b75:;
					++it;
					goto _iter_begin_1dc3c2b75;
				}
				_iter_end_1dc3c2b75:;
			};
		}));
	}));
}



inline void _1d7d70e30_structurePlainDecl(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_20433367e_Struct>& _26343_s) {
	{
		auto &expr = _26343_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1dc3c2713:;
		if (it != expr.end()) {
			jule::Ptr<_20435cc5d_StructIns> _26421_ins = *it;
			{
				_1d7d72d77_write(_self_, jule::Str("struct ", 7));
				_1d7d72d77_write(_self_, static__1d7d3cddb_structureIns(_26421_ins));
				_1d7d72d77_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1dc3c2713:;
			++it;
			goto _iter_begin_1dc3c2713;
		}
		_iter_end_1dc3c2713:;
	};
}



inline void _1d7d715e5_structurePlainDecls(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1dc3c60da:;
		if (it != expr.end()) {
			jule::Ptr<_20433367e_Struct> _27221_s = *it;
			{
				if ((_27221_s.get()._field_Token != nullptr)) {
					_1d7d70e30_structurePlainDecl(_self_, _27221_s);
				};
			}
			_iter_next_1dc3c60da:;
			++it;
			goto _iter_begin_1dc3c60da;
		}
		_iter_end_1dc3c60da:;
	};
}



inline void _1d7dabba2_fieldDecl(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_2043393bb_FieldIns>& _27934_f) {
	_1d7d72d77_write(_self_, static__1d7dd73b4_kind(_27934_f.get()._field_Kind));
	_1d7d72d77_write(_self_, jule::Str(" ", 1));
	_1d7d72d77_write(_self_, static__1d7d3d183_field(_27934_f.get()._field_Decl));
	if ((_27934_f.get()._field_Default == nullptr)) {
		if (_1d7dda351_shouldInitialized(_27934_f.get()._field_Kind)) {
			_1d7d72d77_write(_self_, jule::Str(" = ", 3));
			_1d7d35345_initExpr(_self_.get()._field_ec, _27934_f.get()._field_Kind);
		};
	} else {
		_1d7d72d77_write(_self_, jule::Str(" = ", 3));
		_1d7d34d4a_expr(_self_.get()._field_ec, _27934_f.get()._field_Default.get()._field_Model);
	};
	_1d7d72d77_write(_self_, jule::Str(";", 1));
}



inline void _1d7d71caa_structureDestructor(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_20435cc5d_StructIns>& _29744_s) {
	;
	jule::Ptr<_204ec707a_Fn> _30013_disposeMethod = _204334a9d_FindMethod(_29744_s.ptr(), jule::Str("Dispose", 7),false);;
	jule::Bool _30117_disposed = static__2050331d5_Dispose(_30013_disposeMethod);;
	if ((!(_30117_disposed))) {
		return;;
	};
	_1d7d72d77_write(_self_, jule::Str("~", 1));
	_1d7d72d77_write(_self_, static__1d7d3cddb_structureIns(_29744_s));
	_1d7d72d77_write(_self_, jule::Str("(void) { ", 9));
	_1d7d72d77_write(_self_, static__1d7d3c0b6_func(_30013_disposeMethod));
	_1d7d72d77_write(_self_, jule::Str("(this); }", 9));
}



inline void _1d7da587c_structureDeriveDefsDecls(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_20435cc5d_StructIns>& _31345_s) {
	if (_204321518_IsDerives(_31345_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1d7d4374e_indent(_self_);
		_1d7d72d77_write(_self_, static__1d7d37b50_cloneFuncDecl(_31345_s.get()._field_Decl));
		_1d7d72d77_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1d7d68895_structureOperatorEq(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Str& _32140_ident, jule::Ptr<_20435cc5d_StructIns>& _32157_s) {
	if ((_32157_s.get()._field_Operators._field_Eq != nullptr)) {
		_1d7dcdc29_structureOperator(_self_, _32140_ident,_32157_s.get()._field_Operators._field_Eq,jule::Str("==", 2));
		return;;
	};
	_1d7d4374e_indent(_self_);
	if (_202c07c25_Inline) {
		_1d7d72d77_write(_self_, jule::Str("inline ", 7));
	};
	_1d7d72d77_write(_self_, jule::Str("bool operator==(", 16));
	_1d7d72d77_write(_self_, _32140_ident);
	_1d7d72d77_write(_self_, jule::Str(" _other) {", 10));
	if ((_32157_s.get()._field_Fields.len() > 0LL)) {
		_1d7da5d22_addIndent(_self_);
		_1d7d72d77_write(_self_, jule::Str("\n", 1));
		_1d7d4374e_indent(_self_);
		_1d7d72d77_write(_self_, jule::Str("return ", 7));
		_1d7da5d22_addIndent(_self_);
		jule::Bool _34121_writed = false;;
		{
			auto &expr = _32157_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1dc3d4bcb:;
			if (it != expr.end()) {
				jule::Ptr<_2043393bb_FieldIns> _34225_f = *it;
				{
					jule::Ptr<_20435cc5d_StructIns> _34421_strct = _2050ade53_Struct(_34225_f.get()._field_Kind.ptr());;
					if ((((_34421_strct != nullptr) && (_34421_strct.get()._field_Decl != nullptr)) && _34421_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_1dc3d4bcb;
					};
					if (_34121_writed) {
						_1d7d72d77_write(_self_, jule::Str(" &&", 3));
					};
					_34121_writed=true;
					_1d7d72d77_write(_self_, jule::Str("\n", 1));
					_1d7d4374e_indent(_self_);
					_1d7d72d77_write(_self_, jule::Str("this->", 6));
					jule::Str _35621_fIdent = static__1d7d3d183_field(_34225_f.get()._field_Decl);;
					_1d7d72d77_write(_self_, _35621_fIdent);
					_1d7d72d77_write(_self_, jule::Str(" == _other.", 11));
					_1d7d72d77_write(_self_, _35621_fIdent);
				}
				_iter_next_1dc3d4bcb:;
				++it;
				goto _iter_begin_1dc3d4bcb;
			}
			_iter_end_1dc3d4bcb:;
		};
		_1d7da6707_doneIndent(_self_);
		if ((!(_34121_writed))) {
			_1d7d72d77_write(_self_, jule::Str("true", 4));
		};
		_1d7d72d77_write(_self_, jule::Str(";\n", 2));
		_1d7da6707_doneIndent(_self_);
		_1d7d4374e_indent(_self_);
		_1d7d72d77_write(_self_, jule::Str("}", 1));
	} else {
		_1d7d72d77_write(_self_, jule::Str(" return true; }", 15));
	};
	_1d7d72d77_write(_self_, jule::Str("\n\n", 2));
}



inline void _1d7dcdae7_structureOperatorNotEq(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Str& _37543_ident, jule::Ptr<_20435cc5d_StructIns>& _37560_s) {
	_1d7d4374e_indent(_self_);
	if (_202c07c25_Inline) {
		_1d7d72d77_write(_self_, jule::Str("inline ", 7));
	};
	_1d7d72d77_write(_self_, jule::Str("bool operator!=(", 16));
	_1d7d72d77_write(_self_, _37543_ident);
	_1d7d72d77_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1d7dcdc29_structureOperator(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Str& _38638_ident, jule::Ptr<_204ec7454_FnIns>& _38655_f, jule::Str _38666_op) {
	if ((_38655_f == nullptr)) {
		return;;
	};
	jule::Bool _39113_unary = (_38655_f.get()._field_Params.len() == 1LL);;
	jule::Bool _39213_assignment = _2043a5a53_IsVoid(_38655_f.get()._field_Decl.ptr());;
	_1d7d4374e_indent(_self_);
	if (_202c07c25_Inline) {
		_1d7d72d77_write(_self_, jule::Str("inline ", 7));
	};
	if (_39213_assignment) {
		_1d7d72d77_write(_self_, _38638_ident);
		_1d7d72d77_write(_self_, jule::Str("&", 1));
	} else {
		if ((_2050aca01_Prim(_38655_f.get()._field_Result.ptr()) == nullptr)) {
			_1d7d72d77_write(_self_, _38638_ident);
		} else {
			_1d7d72d77_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1d7d72d77_write(_self_, jule::Str(" operator", 9));
	_1d7d72d77_write(_self_, _38666_op);
	_1d7d72d77_write(_self_, jule::Str("(", 1));
	if ((!(_39113_unary))) {
		jule::Ptr<_204ec7267_ParamIns> _41421_p = _38655_f.get()._field_Params[1LL];;
		_1d7d72d77_write(_self_, static__1d7dd658e_paramIns(_41421_p));
		_1d7d72d77_write(_self_, jule::Str(" _other", 7));
	};
	_1d7d72d77_write(_self_, jule::Str(") { ", 4));
	if ((!(_39213_assignment))) {
		_1d7d72d77_write(_self_, jule::Str("return ", 7));
	};
	_1d7d72d77_write(_self_, static__1d7d3c35d_funcIns(_38655_f));
	if ((!(_39113_unary))) {
		_1d7d72d77_write(_self_, jule::Str("(this, _other); ", 16));
		if (_39213_assignment) {
			_1d7d72d77_write(_self_, jule::Str("return *this; ", 14));
		};
		_1d7d72d77_write(_self_, jule::Str("}", 1));
	} else {
		_1d7d72d77_write(_self_, jule::Str("(this); }", 9));
	};
	_1d7d72d77_write(_self_, jule::Str("\n\n", 2));
}



inline void _1d7dcdd5b_structureOperators(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_20435cc5d_StructIns>& _43543_s) {
	jule::Str _43613_ident = static__1d7d3cddb_structureIns(_43543_s);;
	_1d7d68895_structureOperatorEq(_self_, _43613_ident,_43543_s);
	_1d7dcdae7_structureOperatorNotEq(_self_, _43613_ident,_43543_s);
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_Gt,jule::Str(">", 1));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_GtEq,jule::Str(">=", 2));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_Lt,jule::Str("<", 1));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_LtEq,jule::Str("<=", 2));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_Shl,jule::Str("<<", 2));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_Shr,jule::Str(">>", 2));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_Add,jule::Str("+", 1));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_Sub,jule::Str("-", 1));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_Div,jule::Str("/", 1));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_Mul,jule::Str("*", 1));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_Mod,jule::Str("%", 1));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_BitAnd,jule::Str("&", 1));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_BitOr,jule::Str("|", 1));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_BitXor,jule::Str("^", 1));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_Neg,jule::Str("-", 1));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_Pos,jule::Str("+", 1));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_BitNot,jule::Str("~", 1));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_AddAssign,jule::Str("+=", 2));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_SubAssign,jule::Str("-=", 2));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_DivAssign,jule::Str("/=", 2));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_MulAssign,jule::Str("*=", 2));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_ModAssign,jule::Str("%=", 2));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_ShlAssign,jule::Str("<<=", 3));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_ShrAssign,jule::Str(">>=", 3));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_BitOrAssign,jule::Str("|=", 2));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_BitAndAssign,jule::Str("&=", 2));
	_1d7dcdc29_structureOperator(_self_, _43613_ident,_43543_s.get()._field_Operators._field_BitXorAssign,jule::Str("^=", 2));
}



inline void _1d7dcde8d_structureInsDecl(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_20435cc5d_StructIns>& _47441_s) {
	if ((_47441_s.get()._field_Methods.len() > 0LL)) {
		{
			auto &expr = _47441_s.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1dc40505e:;
			if (it != expr.end()) {
				jule::Ptr<_204ec707a_Fn> _47625_m = *it;
				{
					_1d7dce598_funcDecl(_self_, _47625_m,false);
				}
				_iter_next_1dc40505e:;
				++it;
				goto _iter_begin_1dc40505e;
			}
			_iter_end_1dc40505e:;
		};
	};
	_1d7d72d77_write(_self_, jule::Str("struct ", 7));
	jule::Str _48213_outIdent = static__1d7d3cddb_structureIns(_47441_s);;
	_1d7d72d77_write(_self_, _48213_outIdent);
	_1d7d72d77_write(_self_, jule::Str(" {\n", 3));
	_1d7da5d22_addIndent(_self_);
	{
		auto &expr = _47441_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1dc406b21:;
		if (it != expr.end()) {
			jule::Ptr<_2043393bb_FieldIns> _48821_f = *it;
			{
				_1d7d4374e_indent(_self_);
				_1d7dabba2_fieldDecl(_self_, _48821_f);
				_1d7d72d77_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1dc406b21:;
			++it;
			goto _iter_begin_1dc406b21;
		}
		_iter_end_1dc406b21:;
	};
	_1d7d4374e_indent(_self_);
	_1d7d71caa_structureDestructor(_self_, _47441_s);
	_1d7d72d77_write(_self_, jule::Str("\n\n", 2));
	_1d7d4374e_indent(_self_);
	_1d7d72d77_write(_self_, _48213_outIdent);
	_1d7d72d77_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1d7da587c_structureDeriveDefsDecls(_self_, _47441_s);
	_1d7dcdd5b_structureOperators(_self_, _47441_s);
	_1d7d72d77_write(_self_, jule::Str("\n", 1));
	_1d7da6707_doneIndent(_self_);
	_1d7d4374e_indent(_self_);
	_1d7d72d77_write(_self_, jule::Str("};", 2));
}



inline void _1d7dce0c0_structureDecl(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_20433367e_Struct>& _51338_s) {
	{
		auto &expr = _51338_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1dc40b8e5:;
		if (it != expr.end()) {
			jule::Ptr<_20435cc5d_StructIns> _51421_ins = *it;
			{
				_1d7dcde8d_structureInsDecl(_self_, _51421_ins);
			}
			_iter_next_1dc40b8e5:;
			++it;
			goto _iter_begin_1dc40b8e5;
		}
		_iter_end_1dc40b8e5:;
	};
}



inline void _1d7dce202_structureDecls(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1dc40c110:;
		if (it != expr.end()) {
			jule::Ptr<_20433367e_Struct> _52021_s = *it;
			{
				if ((_52021_s.get()._field_Token != nullptr)) {
					_1d7dce0c0_structureDecl(_self_, _52021_s);
					_1d7d72d77_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1dc40c110:;
			++it;
			goto _iter_begin_1dc40c110;
		}
		_iter_end_1dc40c110:;
	};
}



inline void _1d7dce334_paramsDecls(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Slice<jule::Ptr<_204ec7267_ParamIns>>& _52836_params) {
	if ((_52836_params.len() == 0LL)) {
		_1d7d72d77_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1d7d72d77_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _52836_params;
		auto it = expr.begin();
		_iter_begin_1dc40ec17:;
		if (it != expr.end()) {
			jule::I64 _53514_i = it - expr.begin();
			jule::Ptr<_204ec7267_ParamIns> _53521_p = *it;
			{
				_1d7d72d77_write(_self_, static__1d7dd658e_paramIns(_53521_p));
				if (((_52836_params.len() - _53514_i) > 1LL)) {
					_1d7d72d77_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1dc40ec17:;
			++it;
			_53514_i++;
			goto _iter_begin_1dc40ec17;
		}
		_iter_end_1dc40ec17:;
	};
	_1d7d72d77_write(_self_, jule::Str(")", 1));
}



inline void _1d7dce466_funcHead(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_204ec7454_FnIns>& _54533_f, jule::Bool _54544_ptr) {
	if ((((!(_54544_ptr)) && _202c07c25_Inline) && (!(_2043a6988_IsEntryPoint(_54533_f.get()._field_Decl.ptr()))))) {
		_1d7d72d77_write(_self_, jule::Str("inline ", 7));
	};
	_1d7d72d77_write(_self_, static__1d7dd6acd_funcInsResult(_54533_f));
	if (_54544_ptr) {
		_1d7d72d77_write(_self_, jule::Str("(*", 2));
		_1d7d72d77_write(_self_, static__1d7d3c35d_funcIns(_54533_f));
		_1d7d72d77_write(_self_, jule::Str(")", 1));
	} else {
		_1d7d72d77_write(_self_, jule::Str(" ", 1));
		_1d7d72d77_write(_self_, static__1d7d3c35d_funcIns(_54533_f));
	};
}



inline void _1d7dce598_funcDecl(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_204ec707a_Fn>& _56033_f, jule::Bool _56041_ptr) {
	{
		auto &expr = _56033_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1dc415525:;
		if (it != expr.end()) {
			jule::Ptr<_204ec7454_FnIns> _56121_c = *it;
			{
				_1d7d4374e_indent(_self_);
				_1d7dce466_funcHead(_self_, _56121_c,_56041_ptr);
				_1d7dce334_paramsDecls(_self_, _56121_c.get()._field_Params);
				_1d7d72d77_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1dc415525:;
			++it;
			goto _iter_begin_1dc415525;
		}
		_iter_end_1dc415525:;
	};
}



inline void _1d7dce6ca_funcDecls(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	_1d7d6e318_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20500dd70_Package>&)>([=](jule::Ptr<_20500dd70_Package>& _57035_pkg) mutable -> void {
		_1d7dd149b_iterFiles(_57035_pkg,jule::Fn<void(jule::Ptr<_205074eb3_SymbolTable>&)>([=](jule::Ptr<_205074eb3_SymbolTable>& _57136_file) mutable -> void {
			{
				auto &expr = _57136_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1dc418d31:;
				if (it != expr.end()) {
					jule::Ptr<_204ec707a_Fn> _57229_f = *it;
					{
						if (((!(_57229_f.get()._field_CppLinked)) && (_57229_f.get()._field_Token != nullptr))) {
							_1d7dce598_funcDecl(_self_, _57229_f,false);
						};
					}
					_iter_next_1dc418d31:;
					++it;
					goto _iter_begin_1dc418d31;
				}
				_iter_end_1dc418d31:;
			};
		}));
	}));
}



inline void _1d7dce80c_traitDataTypes(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	_1d7d6e318_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20500dd70_Package>&)>([=](jule::Ptr<_20500dd70_Package>& _58235_pkg) mutable -> void {
		_1d7dd149b_iterFiles(_58235_pkg,jule::Fn<void(jule::Ptr<_205074eb3_SymbolTable>&)>([=](jule::Ptr<_205074eb3_SymbolTable>& _58336_file) mutable -> void {
			{
				auto &expr = _58336_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1dc41bc9b:;
				if (it != expr.end()) {
					jule::Ptr<_204ece8e0_Trait> _58429_t = *it;
					{
						if ((_58429_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1d7d72d77_write(_self_, jule::Str("struct ", 7));
						_1d7d72d77_write(_self_, static__1d7d3c605_traitDecl(_58429_t));
						_1d7d72d77_write(_self_, jule::Str("MptrData", 8));
						_1d7d72d77_write(_self_, jule::Str(" {\n", 3));
						_1d7da5d22_addIndent(_self_);
						{
							auto &expr = _58429_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1dc41dde1:;
							if (it != expr.end()) {
								jule::Ptr<_204ec707a_Fn> _59333_m = *it;
								{
									jule::Ptr<_204ec7454_FnIns> _59433_ins = _59333_m.get()._field_Instances[0LL];;
									jule::Ptr<_204ec7267_ParamIns> _59533_p = _59433_ins.get()._field_Params[0LL];;
									_59533_p.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_58429_t, 2)});
									{
										auto expr = _59433_ins.get()._field_Params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1dc4211e0:;
										if (it != expr.end()) {
											jule::I64 _59930_i = it - expr.begin();
											jule::Ptr<_204ec7267_ParamIns> _59937_ip = *it;
											{
												if (_202b8c1b5_IsAnonIdent(_59937_ip.get()._field_Decl.get()._field_Ident)) {
													_59937_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _204ebc823_Itoa(_59930_i));
												};
											}
											_iter_next_1dc4211e0:;
											++it;
											_59930_i++;
											goto _iter_begin_1dc4211e0;
										}
										_iter_end_1dc4211e0:;
									};
									if ((!(_20089198d_Production))) {
										_59433_ins.get()._field_Params = jule::alloc_for_append(_59433_ins.get()._field_Params,1);_59433_ins.get()._field_Params.__push(jule::new_ptr<_204ec7267_ParamIns>(_204ec7267_ParamIns{._field_Decl=jule::new_ptr<_204ec6d8d_Param>(_204ec6d8d_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(jule::new_ptr<_1d7dd2513_customType>(_1d7dd2513_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1d7dce598_funcDecl(_self_, _59333_m,true);
								}
								_iter_next_1dc41dde1:;
								++it;
								goto _iter_begin_1dc41dde1;
							}
							_iter_end_1dc41dde1:;
						};
						_1d7da6707_doneIndent(_self_);
						_1d7d4374e_indent(_self_);
						_1d7d72d77_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1dc41bc9b:;
					++it;
					goto _iter_begin_1dc41bc9b;
				}
				_iter_end_1dc41bc9b:;
			};
		}));
	}));
}



inline void _1d7dce93e_paramIns(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_204ec7267_ParamIns>& _62633_p) {
	_1d7d72d77_write(_self_, static__1d7dd658e_paramIns(_62633_p));
	_1d7d72d77_write(_self_, jule::Str(" ", 1));
	_1d7d72d77_write(_self_, static__1d7d3c89c_param(_62633_p.get()._field_Decl));
}



inline void _1d7dcea71_paramsIns(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Slice<jule::Ptr<_204ec7267_ParamIns>>& _63234_params) {
	if ((_63234_params.len() == 0LL)) {
		_1d7d72d77_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1d7d72d77_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _63234_params;
		auto it = expr.begin();
		_iter_begin_1dc42624a:;
		if (it != expr.end()) {
			jule::I64 _63814_i = it - expr.begin();
			jule::Ptr<_204ec7267_ParamIns> _63821_p = *it;
			{
				_1d7dce93e_paramIns(_self_, _63821_p);
				if (((_63234_params.len() - _63814_i) > 1LL)) {
					_1d7d72d77_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1dc42624a:;
			++it;
			_63814_i++;
			goto _iter_begin_1dc42624a;
		}
		_iter_end_1dc42624a:;
	};
	_1d7d72d77_write(_self_, jule::Str(")", 1));
}



inline void _1d7dceba3_varInitExpr(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_205031cb6_Var>& _64736_v, jule::Fn<void(void)> _64745_init) {
	if (_64736_v.get()._field_Statically) {
		_1d7d72d77_write(_self_, jule::Str("static ", 7));
	};
	_1d7d72d77_write(_self_, static__1d7dd73b4_kind(_64736_v.get()._field_Kind.get()._field_Kind));
	_1d7d72d77_write(_self_, jule::Str(" ", 1));
	if (_64736_v.get()._field_Reference) {
		_1d7d72d77_write(_self_, jule::Str("&", 1));
	};
	_1d7d72d77_write(_self_, static__1d7d3d42a_var(_64736_v));
	if ((_64745_init != nullptr)) {
		_1d7d72d77_write(_self_, jule::Str(" = ", 3));
		_64745_init();
	};
	_1d7d72d77_write(_self_, jule::Str(";", 1));
}



inline void _1d7dcecd5_var(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_205031cb6_Var> _66527_v) {
	if (_202b8be1d_IsIgnoreIdent(_66527_v.get()._field_Ident)) {
		return;;
	};
	if (((_66527_v.get()._field_Value != nullptr) && (_66527_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_66527_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			_1d7dceba3_varInitExpr(_self_, _66527_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1d7d350c0_val(_self_.get()._field_ec, _66527_v.get()._field_Value);
			}));
			return;;
		};
		_1d7dceba3_varInitExpr(_self_, _66527_v,nullptr);
		return;;
	};
	if (_1d7dda351_shouldInitialized(_66527_v.get()._field_Kind.get()._field_Kind)) {
		_1d7dceba3_varInitExpr(_self_, _66527_v,jule::Fn<void(void)>([=](void) mutable -> void {
			_1d7d35345_initExpr(_self_.get()._field_ec, _66527_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_1d7dceba3_varInitExpr(_self_, _66527_v,nullptr);
}



inline void _1d7dcee17_func(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_204ec707a_Fn>& _68429_f) {
	{
		auto &expr = _68429_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1dc431398:;
		if (it != expr.end()) {
			jule::Ptr<_204ec7454_FnIns> _68521_ins = *it;
			{
				_1d7dce466_funcHead(_self_, _68521_ins,false);
				_1d7dcea71_paramsIns(_self_, _68521_ins.get()._field_Params);
				_1d7d72d77_write(_self_, jule::Str(" ", 1));
				_1d7215b66_funcScope(_self_.get()._field_sc, _68521_ins);
				if ((_68521_ins.get()._field_Scope != nullptr)) {
					_1d7d72d77_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1dc431398:;
			++it;
			goto _iter_begin_1dc431398;
		}
		_iter_end_1dc431398:;
	};
}



inline void _1d7dd0049_traitWrappers(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1dc4319b4:;
		if (it != expr.end()) {
			jule::Ptr<_1d7dcd366_traitHash> _69721_hash = *it;
			{
				{
					auto &expr = _69721_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1dc434159:;
					if (it != expr.end()) {
						jule::Ptr<_204ec707a_Fn> _69825_m = *it;
						{
							jule::Str _69921_ident = _69825_m.get()._field_Ident;;
							_69825_m.get()._field_Instances[0LL].get()._field_Scope=nullptr;
							_69825_m.get()._field_Ident=((_69921_ident + jule::Str("_", 1)) + _204ebc823_Itoa(_69721_hash.get()._field_i));
							_1d7dcee17_func(_self_, _69825_m);
							_69825_m.get()._field_Ident=_69921_ident;
							if ((_69721_hash.get()._field_s == nullptr)) {
								if (_20089198d_Production) {
									_1d7d72d77_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1d7d72d77_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1dc434159;
							};
							jule::Bool _71521_ptr = (!(_204396e2e_IsRef(_69825_m.get()._field_Params[0LL].ptr())));;
							jule::Ptr<_204ec707a_Fn> _71725_sm = _204334a9d_FindMethod(_69721_hash.get()._field_s.ptr(), _69825_m.get()._field_Ident,false);;
							if (((_71725_sm == nullptr) || (_71725_sm.get()._field_Instances.len() == 0LL))) {
								goto _iter_next_1dc434159;
							};
							_1d7da5d22_addIndent(_self_);
							_1d7d72d77_write(_self_, jule::Str("{\n", 2));
							_1d7d4374e_indent(_self_);
							if ((_71725_sm.get()._field_Exceptional || (!(_2043a5a53_IsVoid(_71725_sm.ptr()))))) {
								_1d7d72d77_write(_self_, jule::Str("return ", 7));
							};
							_1d7d72d77_write(_self_, static__1d7d3c0b6_func(_71725_sm));
							_1d7d72d77_write(_self_, jule::Str("(", 1));
							if (_71521_ptr) {
								_1d7d72d77_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1d7d72d77_write(_self_, static__1d7dd5ca8_structureIns(_69721_hash.get()._field_s));
								_1d7d72d77_write(_self_, jule::Str(">(", 2));
								if ((!(_20089198d_Production))) {
									_1d7d72d77_write(_self_, jule::Str("_00___file", 10));
								};
								_1d7d72d77_write(_self_, jule::Str(")", 1));
							} else {
								_1d7d72d77_write(_self_, jule::Str("_self_.data.as<", 15));
								_1d7d72d77_write(_self_, static__1d7dd5a11_structure(_71725_sm.get()._field_Owner));
								_1d7d72d77_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _69825_m.get()._field_Params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1dc438191:;
								if (it != expr.end()) {
									jule::Ptr<_204ec6d8d_Param> _74324_mp = *it;
									{
										_1d7d72d77_write(_self_, jule::Str(", ", 2));
										_1d7d72d77_write(_self_, static__1d7d3c89c_param(_74324_mp));
									}
									_iter_next_1dc438191:;
									++it;
									goto _iter_begin_1dc438191;
								}
								_iter_end_1dc438191:;
							};
							_1d7d72d77_write(_self_, jule::Str(");\n}\n", 5));
							_1d7da6707_doneIndent(_self_);
						}
						_iter_next_1dc434159:;
						++it;
						goto _iter_begin_1dc434159;
					}
					_iter_end_1dc434159:;
				};
			}
			_iter_next_1dc4319b4:;
			++it;
			goto _iter_begin_1dc4319b4;
		}
		_iter_end_1dc4319b4:;
	};
}



inline void _1d7dd017b_traitDatas(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	jule::Ptr<_204ece8e0_Trait> _75417_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1dc440d58:;
		if (it != expr.end()) {
			jule::Ptr<_1d7dcd366_traitHash> _75521_hash = *it;
			{
				jule::Str _75617_ident = static__1d7d3c605_traitDecl(_75521_hash.get()._field_t);;
				if ((_75521_hash.get()._field_t != _75417_old)) {
					if ((_75417_old != nullptr)) {
						_1d7da6707_doneIndent(_self_);
						_1d7d4374e_indent(_self_);
						_1d7d72d77_write(_self_, jule::Str("};\n", 3));
					};
					_1d7d72d77_write(_self_, jule::Str("static ", 7));
					_1d7d72d77_write(_self_, _75617_ident);
					_1d7d72d77_write(_self_, jule::Str("MptrData ", 9));
					_1d7d72d77_write(_self_, _75617_ident);
					_1d7d72d77_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_75417_old=_75521_hash.get()._field_t;
					_1d7da5d22_addIndent(_self_);
				};
				_1d7d4374e_indent(_self_);
				_1d7d72d77_write(_self_, jule::Str("{\n", 2));
				_1d7da5d22_addIndent(_self_);
				{
					auto &expr = _75521_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1dc44509e:;
					if (it != expr.end()) {
						jule::Ptr<_204ec707a_Fn> _77425_m = *it;
						{
							jule::Str _77521_mIdent = static__1d7d3c0b6_func(_77425_m);;
							_1d7d4374e_indent(_self_);
							_1d7d72d77_write(_self_, jule::Str(".", 1));
							_1d7d72d77_write(_self_, _77521_mIdent);
							_1d7d72d77_write(_self_, jule::Str("=", 1));
							_1d7d72d77_write(_self_, _77521_mIdent);
							_1d7d72d77_write(_self_, jule::Str("_", 1));
							_1d7d72d77_write(_self_, _204ebc823_Itoa(_75521_hash.get()._field_i));
							_1d7d72d77_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1dc44509e:;
						++it;
						goto _iter_begin_1dc44509e;
					}
					_iter_end_1dc44509e:;
				};
				_1d7da6707_doneIndent(_self_);
				_1d7d4374e_indent(_self_);
				_1d7d72d77_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1dc440d58:;
			++it;
			goto _iter_begin_1dc440d58;
		}
		_iter_end_1dc440d58:;
	};
	if ((_75417_old != nullptr)) {
		_1d7da6707_doneIndent(_self_);
		_1d7d4374e_indent(_self_);
		_1d7d72d77_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1d7dd02ad_globals(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Globals;
		auto it = expr.begin();
		_iter_begin_1dc449cb8:;
		if (it != expr.end()) {
			jule::Ptr<_205031cb6_Var> _79721_v = *it;
			{
				_1d7d72d77_write(_self_, static__1d7dd73b4_kind(_79721_v.get()._field_Kind.get()._field_Kind));
				_1d7d72d77_write(_self_, jule::Str(" ", 1));
				if (_79721_v.get()._field_Reference) {
					_1d7d72d77_write(_self_, jule::Str("&", 1));
				};
				_1d7d72d77_write(_self_, static__1d7d3d42a_var(_79721_v));
				_1d7d72d77_write(_self_, jule::Str(" = ", 3));
				_1d7d350c0_val(_self_.get()._field_ec, _79721_v.get()._field_Value);
				_1d7d72d77_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1dc449cb8:;
			++it;
			goto _iter_begin_1dc449cb8;
		}
		_iter_end_1dc449cb8:;
	};
}



inline void _1d7dd03e0_decls(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	_1d7d7076a_traitDecls(_self_);
	_1d7d715e5_structurePlainDecls(_self_);
	_1d7dce202_structureDecls(_self_);
	_1d7dce6ca_funcDecls(_self_);
	_1d7d72d77_write(_self_, jule::Str("\n\n", 2));
	_1d7dce80c_traitDataTypes(_self_);
	_1d7d72d77_write(_self_, jule::Str("\n\n", 2));
	_1d7dd0049_traitWrappers(_self_);
	_1d7d72d77_write(_self_, jule::Str("\n\n", 2));
	_1d7dd017b_traitDatas(_self_);
	_1d7d72d77_write(_self_, jule::Str("\n\n", 2));
	_1d7dd02ad_globals(_self_);
}



inline void _1d7dd0522_structureMethods(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_20435cc5d_StructIns>& _82541_s) {
	{
		auto &expr = _82541_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1dc451033:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> _82621_f = *it;
			{
				_1d7dcee17_func(_self_, _82621_f);
				_1d7d72d77_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1dc451033:;
			++it;
			goto _iter_begin_1dc451033;
		}
		_iter_end_1dc451033:;
	};
}



inline void _1d7dd0654_structureDeriveDefs(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_20435cc5d_StructIns>& _83244_s) {
	if (_204321518_IsDerives(_83244_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1d7d72d77_write(_self_, static__1d7d37de7_cloneFuncDef(_83244_s.get()._field_Decl));
		_1d7d72d77_write(_self_, jule::Str("{\n", 2));
		_1d7da5d22_addIndent(_self_);
		_1d7d4374e_indent(_self_);
		_1d7d72d77_write(_self_, static__1d7dd5ca8_structureIns(_83244_s));
		_1d7d72d77_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _83244_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1dc453d9e:;
			if (it != expr.end()) {
				jule::Ptr<_2043393bb_FieldIns> _84020_f = *it;
				{
					jule::Str _84121_ident = static__1d7d3d183_field(_84020_f.get()._field_Decl);;
					_1d7d4374e_indent(_self_);
					_1d7d72d77_write(_self_, jule::Str("clone.", 6));
					_1d7d72d77_write(_self_, _84121_ident);
					_1d7d72d77_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1d7d72d77_write(_self_, _84121_ident);
					_1d7d72d77_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1dc453d9e:;
				++it;
				goto _iter_begin_1dc453d9e;
			}
			_iter_end_1dc453d9e:;
		};
		_1d7d4374e_indent(_self_);
		_1d7d72d77_write(_self_, jule::Str("return clone;\n", 14));
		_1d7da6707_doneIndent(_self_);
		_1d7d72d77_write(_self_, jule::Str("}", 1));
	};
}



inline void _1d7dd0786_structureOstream(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_20435cc5d_StructIns>& _85641_s) {
	_1d7d4374e_indent(_self_);
	_1d7d72d77_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1d7d72d77_write(_self_, static__1d7d3cddb_structureIns(_85641_s));
	_1d7d72d77_write(_self_, jule::Str(" _Src) {\n", 9));
	_1d7da5d22_addIndent(_self_);
	_1d7d4374e_indent(_self_);
	jule::Ptr<_204ec707a_Fn> _86417_fts = _204334a9d_FindMethod(_85641_s.ptr(), jule::Str("Str", 3),false);;
	if (static__20503347c_Str(_86417_fts)) {
		_1d7d72d77_write(_self_, jule::Str("_Stream << ", 11));
		_1d7d72d77_write(_self_, static__1d7d3c0b6_func(_86417_fts));
		_1d7d72d77_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1d7d72d77_write(_self_, jule::Str("_Stream << \"", 12));
		_1d7d72d77_write(_self_, _85641_s.get()._field_Decl.get()._field_Ident);
		_1d7d72d77_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _85641_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1dc45bc86:;
			if (it != expr.end()) {
				jule::I64 _87418_i = it - expr.begin();
				jule::Ptr<_2043393bb_FieldIns> _87425_f = *it;
				{
					_1d7d4374e_indent(_self_);
					_1d7d72d77_write(_self_, jule::Str("_Stream << \"", 12));
					_1d7d72d77_write(_self_, _87425_f.get()._field_Decl.get()._field_Ident);
					_1d7d72d77_write(_self_, jule::Str(":", 1));
					jule::Ptr<_20435cc5d_StructIns> _88121_strct = _2050ade53_Struct(_87425_f.get()._field_Kind.ptr());;
					if ((((_88121_strct != nullptr) && (_88121_strct.get()._field_Decl != nullptr)) && _88121_strct.get()._field_Decl.get()._field_CppLinked)) {
						_1d7d72d77_write(_self_, jule::Str(" cpp.", 5));
						_1d7d72d77_write(_self_, static__1d7d3d183_field(_87425_f.get()._field_Decl));
						_1d7d72d77_write(_self_, jule::Str("\"", 1));
					} else {
						_1d7d72d77_write(_self_, jule::Str("\" << _Src.", 10));
						_1d7d72d77_write(_self_, static__1d7d3d183_field(_87425_f.get()._field_Decl));
					};
					if (((_87418_i + 1LL) < _85641_s.get()._field_Fields.len())) {
						_1d7d72d77_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1d7d72d77_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1dc45bc86:;
				++it;
				_87418_i++;
				goto _iter_begin_1dc45bc86;
			}
			_iter_end_1dc45bc86:;
		};
		_1d7d4374e_indent(_self_);
		_1d7d72d77_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1d7d4374e_indent(_self_);
	_1d7d72d77_write(_self_, jule::Str("return _Stream;\n", 16));
	_1d7da6707_doneIndent(_self_);
	_1d7d72d77_write(_self_, jule::Str("}", 1));
}



inline void _1d7dd08b8_structureIns(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_20435cc5d_StructIns>& _90737_s) {
	_1d7dd0522_structureMethods(_self_, _90737_s);
	_1d7d72d77_write(_self_, jule::Str("\n\n", 2));
	_1d7dd0654_structureDeriveDefs(_self_, _90737_s);
	_1d7d72d77_write(_self_, jule::Str("\n\n", 2));
	_1d7dd0786_structureOstream(_self_, _90737_s);
}



inline void _1d7dd09ea_structure(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_20433367e_Struct>& _91534_s) {
	{
		auto &expr = _91534_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1dc465c90:;
		if (it != expr.end()) {
			jule::Ptr<_20435cc5d_StructIns> _91621_ins = *it;
			{
				_1d7dd08b8_structureIns(_self_, _91621_ins);
				_1d7d72d77_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1dc465c90:;
			++it;
			goto _iter_begin_1dc465c90;
		}
		_iter_end_1dc465c90:;
	};
}



inline void _1d7dd0b2c_structures(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1dc4664aa:;
		if (it != expr.end()) {
			jule::Ptr<_20433367e_Struct> _92321_s = *it;
			{
				if ((_92321_s.get()._field_Token != nullptr)) {
					_1d7dd09ea_structure(_self_, _92321_s);
					_1d7d72d77_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1dc4664aa:;
			++it;
			goto _iter_begin_1dc4664aa;
		}
		_iter_end_1dc4664aa:;
	};
}



inline void _1d7dd0c5e_funcs(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	_1d7d6e318_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20500dd70_Package>&)>([=](jule::Ptr<_20500dd70_Package>& _93235_pkg) mutable -> void {
		_1d7dd149b_iterFiles(_93235_pkg,jule::Fn<void(jule::Ptr<_205074eb3_SymbolTable>&)>([=](jule::Ptr<_205074eb3_SymbolTable>& _93336_file) mutable -> void {
			{
				auto &expr = _93336_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1dc4703c6:;
				if (it != expr.end()) {
					jule::Ptr<_204ec707a_Fn> _93429_f = *it;
					{
						if (((!(_200890e65_Test)) && _1d7dda0a9_hasDirective(_93429_f.get()._field_Directives,jule::Str("test", 4)))) {
							goto _iter_next_1dc4703c6;
						};
						if (((!(_93429_f.get()._field_CppLinked)) && (_93429_f.get()._field_Token != nullptr))) {
							_1d7dcee17_func(_self_, _93429_f);
							_1d7d72d77_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1dc4703c6:;
					++it;
					goto _iter_begin_1dc4703c6;
				}
				_iter_end_1dc4703c6:;
			};
		}));
	}));
}



inline void _1d7dd0d91_pushInit(jule::Ptr<_1d7dcd553_ObjectCoder> _self_, jule::Ptr<_20500dd70_Package>& _94733_pkg) {
	_1d7dd149b_iterFiles(_94733_pkg,jule::Fn<void(jule::Ptr<_205074eb3_SymbolTable>&)>([=](jule::Ptr<_205074eb3_SymbolTable>& _94832_file) mutable -> void {
		{
			auto &expr = _94832_file.get()._field_Funcs;
			auto it = expr.begin();
			_iter_begin_1dc472e67:;
			if (it != expr.end()) {
				jule::Ptr<_204ec707a_Fn> _94920_f = *it;
				{
					if ((_94920_f.get()._field_Ident == jule::Str("init", 4))) {
						_1d7d4374e_indent(_self_);
						_1d7d72d77_write(_self_, static__1d7d3c0b6_func(_94920_f));
						_1d7d72d77_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1dc472e67:;
				++it;
				goto _iter_begin_1dc472e67;
			}
			_iter_end_1dc472e67:;
		};
	}));
}



inline void _1d7dd0ec3_initCaller(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	_1d7d72d77_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1d7da5d22_addIndent(_self_);
	_1d7d6e318_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20500dd70_Package>&)>([=](jule::Ptr<_20500dd70_Package>& _96235_pkg) mutable -> void {
		_1d7dd0d91_pushInit(_self_, _96235_pkg);
	}));
	_1d7da6707_doneIndent(_self_);
	_1d7d72d77_write(_self_, jule::Str("\n}", 2));
}



inline void _1d7dd1105_end(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	_1d7d72d77_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_200890e65_Test) {
		_1d7d72d77_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1d7d72d77_write(_self_, jule::Str("entry_point();", 14));
	};
	_1d7d72d77_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1d7dd1237_serializeHead(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	_1d7d674cb_prepareStructures(_self_);
	_1d7d6e89b_buildTraitMap(_self_);
	_1d7da38d0_head(_self_);
	_1d7d44464_links(_self_);
	_1d7d72d77_write(_self_, jule::Str("\n", 1));
	_1d7dd03e0_decls(_self_);
	_1d7d72d77_write(_self_, jule::Str("\n", 1));
	_1d7dd0b2c_structures(_self_);
	_1d7dd0c5e_funcs(_self_);
	_1d7dd0ec3_initCaller(_self_);
	_1d7d72d77_write(_self_, jule::Str("\n\n", 2));
}



inline void _1d7dd1369_Serialize(jule::Ptr<_1d7dcd553_ObjectCoder> _self_) {
	_1d7dd1237_serializeHead(_self_);
	_1d7dd1105_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1d7dcd553_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1dc4ceb61_parseInteger(_1d7e21233_argParser* _self_, jule::Str& _19031_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19039_parser) {
	jule::I64 _19083_x = jule::I64();
	jule::Bool _19089_ok = jule::Bool();
	{
		
		if (_19031_s.empty()) {
			_case_begin_1dc4d28de:;
			{
				_19083_x = 0LL;
				_19089_ok = false;
				return std::make_tuple(_19083_x,_19089_ok);
			}
		}
		else if (_2027ce8da_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_1dc4d2988:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),16LL);
			}
		}
		else if (_2027ce8da_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_1dc4d279b:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),2LL);
			}
		}
		else if (_2027ce8da_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_1dc4d2d62:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),8LL);
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_1dc4d2e3e:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1dc4d2405:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s,10LL);
			}
		}
		_match_end_1dc4d2328:;
	};
	return std::make_tuple(_19083_x,_19089_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1dc4d8285_parseInteger(_1d7e21233_argParser* _self_, jule::Str& _19031_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19039_parser) {
	jule::U64 _19083_x = jule::U64();
	jule::Bool _19089_ok = jule::Bool();
	{
		
		if (_19031_s.empty()) {
			_case_begin_1dc4daebe:;
			{
				_19083_x = 0LLU;
				_19089_ok = false;
				return std::make_tuple(_19083_x,_19089_ok);
			}
		}
		else if (_2027ce8da_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_1dc4db068:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),16LL);
			}
		}
		else if (_2027ce8da_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_1dc4dad7b:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),2LL);
			}
		}
		else if (_2027ce8da_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_1dc4db442:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),8LL);
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_1dc4db51e:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1dc4da9d5:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s,10LL);
			}
		}
		_match_end_1dc4da908:;
	};
	return std::make_tuple(_19083_x,_19089_ok);
}



inline jule::Str _1d7e21a2a_getData(_1d7e21233_argParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _1d7e21c6c_processFlag(_1d7e21233_argParser* _self_, jule::Trait<_1d7e1c0db_CommonFlag>& _21735_flag) {
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1dc4b65c6_Flag>>()) {
			_case_begin_1dc4cb9c6:;
			{
				jule::Ptr<_1dc4b65c6_Flag> _22021_bf = _21735_flag.operator jule::Ptr<_1dc4b65c6_Flag>();;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1dc4cb94e:;
	};
	jule::Str _22513_data = _1d7e21a2a_getData(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1d7e1c0db_CommonFlag_mptr_data[(_21735_flag).type_offset]._1d7ddbb9e_Name(_21735_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1dc4a9eb0_Flag>>()) {
			_case_begin_1dc4cd247:;
			{
				jule::Ptr<_1dc4a9eb0_Flag> _23221_intf = _21735_flag.operator jule::Ptr<_1dc4a9eb0_Flag>();;
				jule::Bool _23332_ok;;
				std::tie((*(_23221_intf.get()._field_data)),_23332_ok) = _1dc4ceb61_parseInteger(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _204bc6609_ParseInt(_23370_s,_23378_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1d7e1c0db_CommonFlag_mptr_data[(_21735_flag).type_offset]._1d7ddbb9e_Name(_21735_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dc4add0a_Flag>>()) {
			_case_begin_1dc4cdc09:;
			{
				jule::Ptr<_1dc4add0a_Flag> _24021_uintf = _21735_flag.operator jule::Ptr<_1dc4add0a_Flag>();;
				jule::Bool _24133_ok;;
				std::tie((*(_24021_uintf.get()._field_data)),_24133_ok) = _1dc4d8285_parseInteger(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _204b44b1b_ParseUint(_24171_s,_24179_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1d7e1c0db_CommonFlag_mptr_data[(_21735_flag).type_offset]._1d7ddbb9e_Name(_21735_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dc4b2946_Flag>>()) {
			_case_begin_1dc4cdc70:;
			{
				jule::Ptr<_1dc4b2946_Flag> _24821_ff = _21735_flag.operator jule::Ptr<_1dc4b2946_Flag>();;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _204d350b4_ParseFloat(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1d7e1c0db_CommonFlag_mptr_data[(_21735_flag).type_offset]._1d7ddbb9e_Name(_21735_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dc4ba212_Flag>>()) {
			_case_begin_1dc4cdcd6:;
			{
				(*(_21735_flag.operator jule::Ptr<_1dc4ba212_Flag>().get()._field_data))=_22513_data;
			}
		}
		_match_end_1dc4cdad8:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1d7e21ee2_singleDash(_1d7e21233_argParser* _self_, jule::Str& _25730_arg) {
	if ((_25730_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25730_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25730_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1dc4e3b20:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_1d7e1c0db_CommonFlag> _26321_flag = _1d7e1e5d8_FindFlagShort(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25730_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _1d7e21c6c_processFlag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1dc4e3b20:;
			++it;
			goto _iter_begin_1dc4e3b20;
		}
		_iter_end_1dc4e3b20:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1d7e22267_doubleDash(_1d7e21233_argParser* _self_, jule::Str& _27230_arg) {
	if ((_27230_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27230_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_1d7e1c0db_CommonFlag> _27617_flag = _1d7e1e2ca_FindFlag(&(*_self_)._field_set, _27230_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27230_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _1d7e21c6c_processFlag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1d7e22443_tryArg(_1d7e21233_argParser* _self_) {
	jule::Str _28413_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1d7e22267_doubleDash(&(*_self_), _28413_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1d7e21ee2_singleDash(&(*_self_), _28413_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28413_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1d7e2261e_parse(_1d7e21233_argParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1d7e22443_tryArg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1dc4ec299:;
	}
	_iter_end_1dc4ec299:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1d7e21233_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _2016cb91a_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _2017060a4_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();
	};
	{
		return static_cast<jule::Str>(_6924_s);
	};
}



inline jule::I64 _20092511a_GetLastErrno(void) {
	return errno;
}



inline jule::I64 _20170e8d7_Stat(jule::U8* _4816_path, struct stat* _4833_stat) {
	return static_cast<jule::I64>(stat(((char*)(_4816_path)), _4833_stat));
}



inline jule::I64 _20170ecc2_Open(jule::U8* _5316_path, jule::I64 _5329_flag, jule::I64 _5340_mode) {
	return static_cast<jule::I64>(open(((char*)(_5316_path)),_5329_flag,_5340_mode));
}



inline jule::U8* _201710113_Getcwd(jule::U8* _5918_buff, jule::U64 _5931_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5918_buff)),_5931_bufflen)));
}



inline DIR* _2017105db_Opendir(jule::U8* _6419_path) {
	return opendir(((char*)(_6419_path)));
}



inline struct dirent* _201710883_Readdir(DIR* _6723_dir) {
	return readdir(_6723_dir);
}



inline jule::I64 _201710b2a_Closedir(DIR* _7024_dir) {
	return static_cast<jule::I64>(closedir(_7024_dir));
}



inline jule::I64 _2017114aa_Mkdir(jule::U8* _7917_path, jule::I64 _7930_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_7917_path)),_7930_mode));
}



inline jule::I64 _201711752_Rmdir(jule::U8* _8417_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_8417_path))));
}



inline jule::I64 _2017119e9_Unlink(jule::U8* _8718_path) {
	return static_cast<jule::I64>(unlink(((char*)(_8718_path))));
}



inline jule::I64 _20174061b_Seek(jule::I64 _269_handle, jule::I64 _2622_offset, jule::I64 _2635_origin) {
	return static_cast<jule::I64>(lseek(_269_handle,_2622_offset,_2635_origin));
}



inline jule::I64 _201740a06_Read(jule::I64 _3116_handle, void* _3133_buff, jule::U64 _3148_n) {
	return static_cast<jule::I64>(read(_3116_handle,_3133_buff,_3148_n));
}



inline jule::I64 _201740d7a_Close(jule::I64 _3610_handle) {
	return static_cast<jule::I64>(close(_3610_handle));
}



inline jule::I64 _201741265_Write(jule::I64 _3917_handle, void* _3930_buff, jule::U64 _3945_n) {
	return static_cast<jule::I64>(write(_3917_handle,_3930_buff,_3945_n));
}



inline void _201741474_Exit(jule::I64 _449_code) {
	exit(_449_code);
}



inline jule::I64 _2017a387c_getLastOsError(void) {
	jule::I64 _309_err = _20092511a_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1d7eb19ee:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1d7eb134a:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1d7eb13c2:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1d7eb1449:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1d7eb16d0:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1d7eb1746:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1d7eb17ac:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else {
			_case_begin_1d7eb11a2:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1d7eb114c:;
	};
}



inline jule::Slice<jule::Str> _2017c971b_Args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _2017c9b8e_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _2017caad5_getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _2017caad5_getwd(void) {
	jule::U8* _1113_buff = _201710113_Getcwd(nullptr,0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(_2017a387c_getLastOsError());
	};
	jule::Str _159_pwd = _2017060a4_BytePtrToStr(_1113_buff);;
	{
		_2016cb91a_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_159_pwd);
}



inline jule::Bool _202674e78_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_2026e42c2__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);
	};
	return _2026ecc7b_isExcludingLatin(_20267edea_Letter,_7613_r);
}



inline jule::Bool _2026ec198_is16(jule::Slice<_2026ea5d6_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_205b0d562:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_2026ea5d6_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_205b0d562:;
				++it;
				_19313_i++;
				goto _iter_begin_205b0d562;
			}
			_iter_end_205b0d562:;
		};
		return false;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_2026ea5d6_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_205b0cc8c:;
	}
	_iter_end_205b0cc8c:;;
	return false;
}



inline jule::Bool _2026ec4d9_is32(jule::Slice<_2026eaa59_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_205b11b2b:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_2026eaa59_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_205b11b2b:;
				++it;
				_23013_i++;
				goto _iter_begin_205b11b2b;
			}
			_iter_end_205b11b2b:;
		};
		return false;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_2026eaa59_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_205b12dd5:;
	}
	_iter_end_205b12dd5:;;
	return false;
}



inline jule::Bool _2026ecc7b_isExcludingLatin(jule::Ptr<_2026eaecc_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_2026ea5d6_Range16> &_28014_R16 = _27821_rangeTab.get()._field_R16;;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if (((_28014_R16.len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>(_28014_R16[(_28014_R16.len() - 1LL)]._field_Hi)))) {
			return _2026ec198_is16(_28014_R16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));
		};
	};
	jule::Slice<_2026eaa59_Range32> &_28710_R32 = _27821_rangeTab.get()._field_R32;;
	if (((_28710_R32.len() > 0LL) && (_27844_r >= static_cast<jule::I32>(_28710_R32[0LL]._field_Lo)))) {
		return _2026ec4d9_is32(_28710_R32,static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));
	};
	return false;
}



inline jule::Bool _2026ed023_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_2026e42c2__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);
	};
	return _2026ecc7b_isExcludingLatin(_202686e8a_Upper,_29512_r);
}



inline std::tuple<jule::I32,jule::I64> _2027ae28d_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	jule::I32 _18228_r = jule::I32();
	jule::I64 _18237_size = jule::I64();
	if ((_18215_p.len() < 1LL)) {
		_18228_r = 65533LL;
		_18237_size = 0LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _2027ad138_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18228_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_2027ad6aa_acceptRange _1969_accept = _2027ada1d_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18228_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18237_size = 2LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18228_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18237_size = 3LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	_18228_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18237_size = 4LL;
	return std::make_tuple(_18228_r,_18237_size);
}



inline std::tuple<jule::I32,jule::I64> _2027ae5ac_DecodeRuneStr(jule::Str _22918_s) {
	jule::I32 _22928_r = jule::I32();
	jule::I64 _22937_size = jule::I64();
	if ((_22918_s.len() < 1LL)) {
		_22928_r = 65533LL;
		_22937_size = 0LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _2027ad138_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		_22928_r = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_2027ad6aa_acceptRange _2439_accept = _2027ada1d_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	if ((_2429_sz <= 2LL)) {
		_22928_r = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		_22937_size = 2LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	if ((_2429_sz <= 3LL)) {
		_22928_r = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		_22937_size = 3LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	_22928_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	_22937_size = 4LL;
	return std::make_tuple(_22928_r,_22937_size);
}



inline std::tuple<jule::I32,jule::I64> _2027ae854_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	jule::I32 _27632_r = jule::I32();
	jule::I64 _27641_size = jule::I64();
	if ((_27619_p.len() == 0LL)) {
		_27632_r = 65533LL;
		_27641_size = 0LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	_27632_r=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((_27632_r < 128LL)) {
		_27641_size = 1LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_2027b1229_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_205b629a1;
			};
		}
	_iter_next_205b629a1:;
	}
	_iter_end_205b629a1:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27632_r,_27641_size) = _2027ae28d_DecodeRune(_27619_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27641_size) != _2809_end)) {
		_27632_r = 65533LL;
		_27641_size = 1LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	return std::make_tuple(_27632_r,_27641_size);
}



inline jule::Slice<jule::U8> _2027b0602_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));
	};
	return _2027b0943_appendRuneNonASCII(_40519_p,_40530_r);
}



inline jule::Slice<jule::U8> _2027b0943_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_205b79039:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_205b7939c:;
			{
				_41242_r=128LL;
				goto _case_begin_205b77884;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_205b77884:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_205b76da0:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		_match_end_205b76d4a:;
	};
}



inline jule::I64 _2027b0e82_RuneCountStr(jule::Str _47317_s) {
	jule::I64 _47327_n = jule::I64();
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (_47327_n)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1d87c9767;
			};
			jule::U8 _48213_x = _2027ad138_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1d87c9767;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1d87c9767;
			};
			_2027ad6aa_acceptRange _49213_accept = _2027ada1d_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1d87c9767:;
	}
	_iter_end_1d87c9767:;;
	return _47327_n;
}



inline jule::Bool _2027b1229_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);
}



inline jule::Slice<jule::U8> _2027cdc19_Stobs(jule::Str& _911_s) {
	return _911_s.fake_slice();
}



inline void _2027ce368_PushToStrBuffer(jule::Str& _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		(_2825_s).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline jule::I64 _2027cd147_FindLastByte(jule::Slice<jule::U8> _2617_s, jule::U8 _2628_b) {
	jule::U8* _279_first = (&(_2617_s[0LL]));;
	jule::U8* _2813_it = (&(_2617_s[(_2617_s.len() - 1LL)]));;
	for (; (_2813_it >= _279_first); (_2813_it)--) {
		{
			{
				if (((*(_2813_it)) == _2628_b)) {
					return static_cast<jule::I64>(((jule::I64)((_2813_it - _279_first))));
				};
			};
		}
	_iter_next_1d88027c3:;
	}
	_iter_end_1d88027c3:;;
	return -1LL;
}



inline jule::I64 _2027ce775_FindLastByteStr(jule::Str& _4521_s, jule::U8 _4529_b) {
	return static_cast<jule::I64>(_2027cd147_FindLastByte(_2027cdc19_Stobs(_4521_s),_4529_b));
}



inline jule::Str _2027b6509_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_1d881782c:;
	}
	_iter_end_1d881782c:;;
	return _2013_ss;
}



inline jule::Bool _2027b2912_hasPrefix(jule::Str& _2715_s, jule::Str& _2724_sub, jule::I64 _2738_start) {
	if (((_2724_sub.len() == 0LL) || ((_2715_s.len() - _2738_start) < _2724_sub.len()))) {
		return false;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < _2724_sub.len()); std::tie(_3213_i,_2738_start) = std::make_tuple(static_cast<jule::I64>((_3213_i + 1LL)),static_cast<jule::I64>((_2738_start + 1LL)))) {
		{
			if ((_2715_s[_2738_start] != _2724_sub[_3213_i])) {
				return false;
			};
		}
	_iter_next_1d881abb5:;
	}
	_iter_end_1d881abb5:;;
	return true;
}



inline jule::Bool _2027ce8da_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _2027b2912_hasPrefix(_4214_s,_4222_sub,0LL);
}



inline jule::Bool _2027cea94_hasSuffix(jule::Str& _4615_s, jule::Str& _4624_sub, jule::I64 _4638_start) {
	if (((_4624_sub.len() == 0LL) || ((_4615_s.len() - _4638_start) < _4624_sub.len()))) {
		return false;
	};
	_4638_start=static_cast<jule::I64>((_4615_s.len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < _4624_sub.len()); (_5213_i)++) {
		{
			if ((_4615_s[((_4638_start - _5213_i) - 1LL)] != _4624_sub[((_4624_sub.len() - _5213_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_1d881cd71:;
	}
	_iter_end_1d881cd71:;;
	return true;
}



inline jule::Bool _2027ceda2_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _2027cea94_hasSuffix(_6214_s,_6222_sub,0LL);
}



inline jule::I64 _2027d028c_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_2027b2912_hasPrefix(_7011_s,_7019_sub,_7033_i)) {
				return _7033_i;
			};
		}
	_iter_next_1d88223b4:;
	}
	_iter_end_1d88223b4:;;
	return -1LL;
}



inline jule::I64 _2027d0ac8_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); std::tie(_10017_k,_10117_z) = std::make_tuple(static_cast<jule::I64>((_10017_k + 1LL)),static_cast<jule::I64>((_10117_z + 1LL)))) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1d8823edc;
					};
				}
			_iter_next_1d8826583:;
			}
			_iter_end_1d8826583:;;
			return _9413_j;
		}
	_iter_next_1d8823edc:;
	}
	_iter_end_1d8823edc:;;
	return -1LL;
}



inline jule::I64 _2027d0e19_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_2027d0ac8_FindLastAt(_11513_s,_11521_sub,static_cast<jule::I64>((_11513_s.len() - 1LL))));
}



inline jule::I64 _2027d21b2_findRune(jule::Slice<jule::U8>& _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < _17114_s.len())) {
		{
			jule::I32 _17414_br;;
			jule::I64 _17418_n;;
			std::tie(_17414_br,_17418_n) = _2027ae28d_DecodeRune(_17114_s.slice(_17213_i));
			if ((_17125_r == _17414_br)) {
				return _17213_i;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1d882e503:;
	}
	_iter_end_1d882e503:;;
	return -1LL;
}



inline jule::I64 _2027d29ed_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_2027ce775_FindLastByteStr(_19317_s,_19325_b));
}



inline jule::I64 _2027d3812_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _2027cdc19_Stobs(_22812_s);;
	jule::Slice<jule::U8> _23013_rb = _2027cdc19_Stobs(_22820_runes);;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r;;
			jule::I64 _23317_n;;
			std::tie(_23314_r,_23317_n) = _2027ae28d_DecodeRune(_2299_sb.slice(_23113_i));
			if ((_2027d21b2_findRune(_23013_rb,_23314_r) != -1LL)) {
				return _23113_i;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1d8835790:;
	}
	_iter_end_1d8835790:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _2027d403d_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL,_26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _2027d028c_FindAt(_26210_s,_26218_sub,_27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1d883c7a8;
			};
			_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i,_27613_j));;
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1d883c7a8:;
	}
	_iter_end_1d883c7a8:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i));;
	};
	return _26713_parts;
}



inline jule::Bool _2027d437e_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_2027d028c_FindAt(_29013_s,_29021_sub,0LL) != -1LL);
}



inline jule::Bool _2027d4d52_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_2027d3812_FindAny(_30616_s,_30624_runes) != -1LL);
}



inline jule::I64 _2027d5193_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _2027d028c_FindAt(_31210_s,_31218_sub,_31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1d88434e5;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1d88434e5:;
	}
	_iter_end_1d88434e5:;;
	return _31613_n;
}



inline jule::Str _2027d5627_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;
	};
	jule::I64 _3379_m = _2027d5193_Count(_33212_s,_33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _2027d028c_FindAt(_33212_s,_33220_sub,_34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1d8845959;
			};
			_34513_ss+=_33212_s.slice(_34613_i,_34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1d8845959:;
	}
	_iter_end_1d8845959:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;
}



inline void _2027d268a_trimLeft(jule::Slice<jule::U8>& _38818_s, jule::Slice<jule::U8>& _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < _38818_s.len())) {
		{
			jule::I32 _39114_r;;
			jule::I64 _39117_n;;
			std::tie(_39114_r,_39117_n) = _2027ae28d_DecodeRune(_38818_s.slice(_38913_i));
			if ((_2027d21b2_findRune(_38830_cutset,_39114_r) == -1LL)) {
				_38818_s=_38818_s.slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1d884c862:;
	}
	_iter_end_1d884c862:;;
	_38818_s=nullptr;
}



inline jule::Str _2027d66d3_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _2027cdc19_Stobs(_40313_s);;
	jule::Slice<jule::U8> _4059_bcutset = _2027cdc19_Stobs(_40321_cutset);;
	_2027d268a_trimLeft(_40413_bytes,_4059_bcutset);
	return static_cast<jule::Str>(_40413_bytes);
}



inline void _2027d698b_trimRight(jule::Slice<jule::U8>& _41019_s, jule::Slice<jule::U8>& _41031_cutset) {
	jule::I64 _41113_i = _41019_s.len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r;;
			jule::I64 _41317_n;;
			std::tie(_41314_r,_41317_n) = _2027ae854_DecodeLastRune(_41019_s.slice(0LL,_41113_i));
			if ((_2027d21b2_findRune(_41031_cutset,_41314_r) == -1LL)) {
				_41019_s=_41019_s.slice(0LL,_41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1d8850b1d:;
	}
	_iter_end_1d8850b1d:;;
	_41019_s=nullptr;
}



inline jule::Str _2027d711d_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _2027cdc19_Stobs(_4349_s);;
	jule::Slice<jule::U8> _4369_bcutset = _2027cdc19_Stobs(_43417_cutset);;
	_2027d268a_trimLeft(_43513_bytes,_4369_bcutset);
	_2027d698b_trimRight(_43513_bytes,_4369_bcutset);
	return static_cast<jule::Str>(_43513_bytes);
}



inline jule::Str _2027d745e_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1d885555c:;
			{
				return jule::Str();
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1d88555c3:;
			{
				return _4449_parts[0LL];
			}
		}
		_match_end_1d885533c:;
	};
	jule::Str _45113_s = _4449_parts[0LL];;
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1d88544b2:;
		if (it != expr.end()) {
			jule::Str &_45212_part = *it;
			{
				_45113_s+=_44423_sep;
				_45113_s+=_45212_part;
			}
			_iter_next_1d88544b2:;
			++it;
			goto _iter_begin_1d88544b2;
		}
		_iter_end_1d88544b2:;
	};
	return _45113_s;
}



inline jule::Str _201837070_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _20182ee47_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _201859dc8_IsPathSep(_1099_originalPath[0LL])) && _201859dc8_IsPathSep(_1099_originalPath[1LL]))) {
			return _20183a7e3_FromSlash(_1099_originalPath);
		};
		return (_1099_originalPath + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _201859dc8_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_201817e74_lazyBuff _12713_out = _201817e74_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0LL;;
	jule::I64 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_20181ee04_append(&_12713_out, 47LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_201859dc8_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1d886886c:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _201859dc8_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1d88662a4:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _201859dc8_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1d8869351:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1d886c486:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_201859dc8_IsPathSep(static_cast<jule::U8>(_20181e6ea_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1d886d014:;
									}
									_iter_end_1d886d014:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1d886c4ec:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_20181ee04_append(&_12713_out, 47LLU);
									};
									_20181ee04_append(&_12713_out, '.');
									_20181ee04_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1d886c3ba:;
						};
					}
				}
				else {
					_case_begin_1d8863933:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_20181ee04_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_201859dc8_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_20181ee04_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1d8867a7a:;
						}
						_iter_end_1d8867a7a:;;
					}
				}
				_match_end_1d8863856:;
			};
		}
	_iter_next_1d8864291:;
	}
	_iter_end_1d8864291:;;
	if ((_12713_out._field_w == 0LL)) {
		_20181ee04_append(&_12713_out, '.');
	};
	return _20183a7e3_FromSlash(_20182317c_string(&_12713_out));
}



inline jule::Str _20183a7e3_FromSlash(jule::Str _21114_path) {
	{
		return _21114_path;
	};
}



inline jule::Str _201840276_Join(jule::Slice<jule::Str> _2259_elem) {
	return _2018368dd_join(_2259_elem);
}



inline jule::Str _201847c51_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_201859dc8_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);
			};
		}
	_iter_next_1d8872601:;
	}
	_iter_end_1d8872601:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _201849769_Abs(jule::Str _2458_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _201833b3d_abs(_2458_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _20182746c_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25413_path.len() > 0LL) && _201859dc8_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL,(_25413_path.len() - 1LL));;
		}
	_iter_next_1d8874bb9:;
	}
	_iter_end_1d8874bb9:;;
	(_25413_path).mut_slice(_201830de3_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_201859dc8_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1d88764c3:;
	}
	_iter_end_1d88764c3:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return static_cast<jule::Str>(47LL);
	};
	return _25413_path;
}



inline jule::Str _20182c483_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _201830de3_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_201859dc8_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1d8878948:;
	}
	_iter_end_1d8878948:;;
	jule::Str _2919_dir = _201837070_Clean(_2858_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _201830de3_VolumeName(jule::Str _30315_path) {
	return _20183a7e3_FromSlash(_30315_path.slice(0LL,_20182ee47_volumeNameLen(_30315_path)));
}



inline jule::Bool _201859dc8_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);
}



inline jule::Bool _20185d9e2_IsAbs(jule::Str _5310_path) {
	return _2027ce8da_HasPrefix(_5310_path,jule::Str("/", 1));
}



inline jule::I64 _20182ee47_volumeNameLen(jule::Str _5918_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _201833b3d_abs(jule::Str _638_path) {
	jule::Bool _6326_ok = jule::Bool();
	if (_20185d9e2_IsAbs(_638_path)) {
		_6326_ok = true;
		return std::make_tuple(_201837070_Clean(_638_path),_6326_ok);
	};
	jule::Str _679_wd = ({
		auto except = _2017c9b8e_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			_6326_ok = false;
			return std::make_tuple(jule::Str(),_6326_ok);
		} jule::Str();});
	});;
	_6326_ok = true;
	return std::make_tuple(_2018368dd_join(jule::Slice<jule::Str>::make({_679_wd,_638_path})),_6326_ok);
}



inline jule::Str _2018368dd_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto &expr = _739_elem;
		auto it = expr.begin();
		_iter_begin_1d8884459:;
		if (it != expr.end()) {
			jule::I64 _749_i = it - expr.begin();
			jule::Str &_7412_e = *it;
			{
				if ((!(_7412_e.empty()))) {
					return _201837070_Clean(_2027d745e_Join(_739_elem.slice(_749_i),static_cast<jule::Str>(47LL)));
				};
			}
			_iter_next_1d8884459:;
			++it;
			_749_i++;
			goto _iter_begin_1d8884459;
		}
		_iter_end_1d8884459:;
	};
	return jule::Str();
}



inline jule::I64 _20094778b_getLastFsError(void) {
	jule::I64 _729_err = _20092511a_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1d8892eb2:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1d8892368:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1d8892da2:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1d889280d:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1d8892874:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1d88928da:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1d8892951:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1d8893105:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1d889316b:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1d88931e3:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1d889326a:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1d88932e2:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1d8893369:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1d88933e1:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1d8893468:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1d88934e0:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1d8893567:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1d88935de:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1d8893666:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1d88936dd:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1d8893765:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1d88937dc:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1d8893864:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1d88938db:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1d8893963:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1d88939da:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1d8893a62:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1d8893ad9:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_1d8892665:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1d8892610:;
	};
}



inline jule::I64 _2028a67b4_getLastProcessError(void) {
	jule::I64 _429_err = _20092511a_GetLastErrno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1d88bc3e8:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1d88bb79e:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1d88bbc44:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1d88bbcaa:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1d88bbd32:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1d88bbda9:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1d88bc0da:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1d88bc162:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1d88bc1d9:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 67LL) {
			_case_begin_1d88bc261:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1d88bc2d8:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_1d88bba9b:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1d88bba46:;
	};
}



inline jule::Slice<char*> _2028a9a1a_strSliceToCstrSlice(jule::Slice<jule::Str> _2024_s) {
	jule::Slice<char*> _2113_cs = jule::Slice<char*>::alloc(0LL,(_2024_s.len() + 1LL));;
	{
		auto &expr = _2024_s;
		auto it = expr.begin();
		_iter_begin_1d88c9449:;
		if (it != expr.end()) {
			jule::I64 _229_i = it - expr.begin();
			{
				_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(((char*)((&(_2024_s[_229_i][0LL])))));;
			}
			_iter_next_1d88c9449:;
			++it;
			_229_i++;
			goto _iter_begin_1d88c9449;
		}
		_iter_end_1d88c9449:;
	};
	_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(nullptr);;
	return _2113_cs;
}



inline jule::I64 _2028a9e6b_execvp(jule::Str _2911_file, jule::Slice<jule::Str> _2922_argv) {
	jule::Slice<char*> _309_cargv = _2028a9a1a_strSliceToCstrSlice(_2922_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&(_2911_file[0LL])))), (char*const*)(&(_309_cargv[0LL]))));
	};
}



inline jule::I64 _2028aa356_execve(jule::Str _3611_file, jule::Slice<jule::Str> _3622_argv, jule::Slice<jule::Str> _3635_env) {
	jule::Slice<char*> _379_cargv = _2028a9a1a_strSliceToCstrSlice(_3622_argv);;
	jule::Slice<char*> _389_cenv = _2028a9a1a_strSliceToCstrSlice(_3635_env);;
	{
		return static_cast<jule::I64>(execve(((char*)((&(_3611_file[0LL])))), (char*const*)(&(_379_cargv[0LL])), (char*const*)((&(_389_cenv[0LL])))));
	};
}



inline void _2028aae6c_Exit(jule::I64 _129_code) {
	_201741474_Exit(_129_code);
}



inline jule::Str _2028ab16a_Executable(void) {
	return jule::executable();
}



inline jule::Bool _20284e8a0_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));
}



inline jule::Bool _20284e9d2_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto &expr = _20089a414_CppHeaderExts;
		auto it = expr.begin();
		_iter_begin_1d891331d:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3121_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_1d891331d:;
			++it;
			goto _iter_begin_1d891331d;
		}
		_iter_end_1d891331d:;
	};
	return false;
}



inline jule::Bool _20284ec35_IsValidCppExt(jule::Str _4218_ext) {
	if ((_4218_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _20284d283_CppExts;
		auto it = expr.begin();
		_iter_begin_1d89154b8:;
		if (it != expr.end()) {
			jule::Str &_4612_e = *it;
			{
				if ((_4218_ext == _4612_e)) {
					return true;
				};
			}
			_iter_next_1d89154b8:;
			++it;
			goto _iter_begin_1d89154b8;
		}
		_iter_end_1d89154b8:;
	};
	{
		auto &expr = _20284e7b2_ObjectiveCppExts;
		auto it = expr.begin();
		_iter_begin_1d8915683:;
		if (it != expr.end()) {
			jule::Str &_5112_e = *it;
			{
				if ((_4218_ext == _5112_e)) {
					return true;
				};
			}
			_iter_next_1d8915683:;
			++it;
			goto _iter_begin_1d8915683;
		}
		_iter_end_1d8915683:;
	};
	return false;
}



inline jule::Str _20285bbed_Logf(jule::Str _2999_fmt, jule::Slice<jule::Any> _29922_args) {
	return _20285c616_applyFmt(_2999_fmt,jule::Any(_29922_args));
}



inline jule::Str _20285bed9_argToStr(jule::Any _30313_arg) {
	{
		auto &_match_expr{ _30313_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1d8917a1a:;
			{
				return _30313_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1d8917465:;
			{
				return static_cast<jule::Str>(_30313_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1d89174cb:;
			{
				return static_cast<jule::Str>(_30313_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1d89173ee:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1d8917399:;
	};
}



inline jule::I64 _20285c281_findNextFmt(jule::Str _31616_fmt) {
	{
		auto &expr = _31616_fmt;
		auto it = expr.begin();
		_iter_begin_1d891809d:;
		if (it != expr.end()) {
			jule::I64 _3179_i = it - expr.begin();
			jule::U8 &_31712_b = *it;
			{
				if ((_31712_b == '@')) {
					return _3179_i;
				};
			}
			_iter_next_1d891809d:;
			++it;
			_3179_i++;
			goto _iter_begin_1d891809d;
		}
		_iter_end_1d891809d:;
	};
	return -1LL;
}



inline jule::Str _20285c616_applyFmt(jule::Str _32517_fmt, jule::Slice<jule::Any> _32527_args) {
	jule::Str _32613_s = jule::Str();;
	{
		auto &expr = _32527_args;
		auto it = expr.begin();
		_iter_begin_1d891a248:;
		if (it != expr.end()) {
			jule::Any &_32712_arg = *it;
			{
				jule::I64 _32813_i = _20285c281_findNextFmt(_32517_fmt);;
				if ((_32813_i == -1LL)) {
					goto _iter_end_1d891a248;
				};
				_32613_s+=_32517_fmt.slice(0LL,_32813_i);
				_32613_s+=_20285bed9_argToStr(jule::Any(_32712_arg));
				(_32517_fmt).mut_slice((_32813_i + 1LL));;
			}
			_iter_next_1d891a248:;
			++it;
			goto _iter_begin_1d891a248;
		}
		_iter_end_1d891a248:;
	};
	_32613_s+=_32517_fmt;
	return _32613_s;
}



inline jule::Bool _20285d6d3_IsTopDirective(jule::Str _2819_directive) {
	return ((_2819_directive == jule::Str("pass", 4)) || (_2819_directive == jule::Str("build", 5)));
}



inline jule::Bool _20285eb13_IsWindows(jule::Str _3714_os) {
	return (_3714_os == jule::Str("windows", 7));
}



inline jule::Bool _20285edbb_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == jule::Str("darwin", 6));
}



inline jule::Bool _202860163_IsLinux(jule::Str _4312_os) {
	return (_4312_os == jule::Str("linux", 5));
}



inline jule::Bool _202860482_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == jule::Str("i386", 4));
}



inline jule::Bool _202860729_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == jule::Str("amd64", 5));
}



inline jule::Bool _2028609c1_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == jule::Str("arm64", 5));
}



inline jule::Bool _202860c68_IsUnix(jule::Str _5511_os) {
	return (_20285edbb_IsDarwin(_5511_os) || _202860163_IsLinux(_5511_os));
}



inline jule::Bool _2028610dc_Is32Bit(jule::Str _5812_arch) {
	return _202860482_IsI386(_5812_arch);
}



inline jule::Bool _202861384_Is64Bit(jule::Str _6112_arch) {
	return (_202860729_IsAmd64(_6112_arch) || _2028609c1_IsArm64(_6112_arch));
}



inline void _20286d4a1_init(void) {
	jule::Str _2513_path = _2028ab16a_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_202899b1a_PathWd=({
			auto except = _2017c9b8e_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_202897398_PathExec=_20182c483_Dir(_2513_path);
		_2028954d9_PathStdlib=_201840276_Join(jule::Slice<jule::Str>::make({_202897398_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_2028a5395_PathApi=_201840276_Join(jule::Slice<jule::Str>::make({_202897398_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _202b89d83_IsUnaryOp(jule::Str _31214_kind) {
	{
		auto &expr = _202ad7440_UnaryOps;
		auto it = expr.begin();
		_iter_begin_1d9578e1c:;
		if (it != expr.end()) {
			jule::Str &_31312_op = *it;
			{
				if ((_31214_kind == _31312_op)) {
					return true;
				};
			}
			_iter_next_1d9578e1c:;
			++it;
			goto _iter_begin_1d9578e1c;
		}
		_iter_end_1d9578e1c:;
	};
	return false;
}



inline jule::Bool _202b8a16e_IsBinOp(jule::Str _32212_kind) {
	{
		auto &expr = _202ad7781_BinOps;
		auto it = expr.begin();
		_iter_begin_1d9579857:;
		if (it != expr.end()) {
			jule::Str &_32312_op = *it;
			{
				if ((_32212_kind == _32312_op)) {
					return true;
				};
			}
			_iter_next_1d9579857:;
			++it;
			goto _iter_begin_1d9579857;
		}
		_iter_end_1d9579857:;
	};
	return false;
}



inline jule::Bool _202b8a735_IsStr(jule::Str _34210_k) {
	return ((!(_34210_k.empty())) && ((_34210_k[0LL] == '\"') || _202b8a9cc_IsRawStr(_34210_k)));
}



inline jule::Bool _202b8a9cc_IsRawStr(jule::Str _34513_k) {
	return ((!(_34513_k.empty())) && (_34513_k[0LL] == '`'));
}



inline jule::Bool _202b8ac74_IsRune(jule::Str _34911_k) {
	return ((!(_34911_k.empty())) && (_34911_k[0LL] == '\''));
}



inline jule::Bool _202b8b390_IsBool(jule::Str _35511_k) {
	return ((_35511_k == jule::Str("true", 4)) || (_35511_k == jule::Str("false", 5)));
}



inline jule::Bool _202b8b637_IsFloat(jule::Str _35812_k) {
	if (_2027ce8da_HasPrefix(_35812_k,jule::Str("0x", 2))) {
		return _2027d4d52_ContainsAny(_35812_k,jule::Str(".pP", 3));
	};
	return _2027d4d52_ContainsAny(_35812_k,jule::Str(".eE", 3));
}



inline jule::Bool _202b8b8ce_IsNum(jule::Str _36610_k) {
	if (_36610_k.empty()) {
		return false;
	};
	jule::U8 _3719_b = _36610_k[0LL];;
	return ((_3719_b == '.') || (('0' <= _3719_b) && (_3719_b <= '9')));
}



inline jule::Bool _202b8be1d_IsIgnoreIdent(jule::Str _38118_ident) {
	return (_38118_ident == jule::Str("_", 1));
}



inline jule::Bool _202b8c1b5_IsAnonIdent(jule::Str _38416_ident) {
	return (_38416_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _202b8c704_IsSpace(jule::I32 _39712_r) {
	{
		auto &expr = _202ad71cb_Spaces;
		auto it = expr.begin();
		_iter_begin_1d9583c4b:;
		if (it != expr.end()) {
			jule::I32 &_39812_cr = *it;
			{
				if ((_39712_r == _39812_cr)) {
					return true;
				};
			}
			_iter_next_1d9583c4b:;
			++it;
			goto _iter_begin_1d9583c4b;
		}
		_iter_end_1d9583c4b:;
	};
	return false;
}



inline jule::Bool _202b8cb55_IsLetter(jule::I32 _40713_r) {
	return _202674e78_IsLetter(_40713_r);
}



inline jule::Bool _202b8d194_IsDecimal(jule::U8 _42714_b) {
	return (('0' <= _42714_b) && (_42714_b <= '9'));
}



inline jule::Bool _202b8d43b_IsBinary(jule::U8 _43013_b) {
	return ((_43013_b == '0') || (_43013_b == '1'));
}



inline jule::Bool _202b8d6d3_IsOctal(jule::U8 _43312_b) {
	return (('0' <= _43312_b) && (_43312_b <= '7'));
}



inline jule::Bool _202b8d97a_IsHex(jule::U8 _43610_b) {
	{
		
		if ((('0' <= _43610_b) && (_43610_b <= '9'))) {
			_case_begin_1d9588cc8:;
			{
				return true;
			}
		}
		else if ((('a' <= _43610_b) && (_43610_b <= 'f'))) {
			_case_begin_1d95885be:;
			{
				return true;
			}
		}
		else if ((('A' <= _43610_b) && (_43610_b <= 'F'))) {
			_case_begin_1d9588635:;
			{
				return true;
			}
		}
		else {
			_case_begin_1d9588558:;
			{
				return false;
			}
		}
		_match_end_1d958849d:;
	};
}



inline jule::Bool _202b8dc22_IsAssign(jule::U64 _45113_id) {
	return (((((((_45113_id == static_cast<jule::U64>(2LLU)) || (_45113_id == static_cast<jule::U64>(30LLU))) || (_45113_id == static_cast<jule::U64>(33LLU))) || (_45113_id == static_cast<jule::U64>(20LLU))) || (_45113_id == static_cast<jule::U64>(27LLU))) || (_45113_id == static_cast<jule::U64>(3LLU))) || (_45113_id == static_cast<jule::U64>(7LLU)));
}



inline jule::Bool _202b8deb9_IsPostfixOp(jule::Str _46216_kind) {
	{
		auto &expr = _202b83b4b_PostfixOps;
		auto it = expr.begin();
		_iter_begin_1d958a4c2:;
		if (it != expr.end()) {
			jule::Str &_46312_op = *it;
			{
				if ((_46216_kind == _46312_op)) {
					return true;
				};
			}
			_iter_next_1d958a4c2:;
			++it;
			goto _iter_begin_1d958a4c2;
		}
		_iter_end_1d958a4c2:;
	};
	return false;
}



inline jule::Bool _202b8e261_IsAssignOp(jule::Str _47215_kind) {
	if (_202b8deb9_IsPostfixOp(_47215_kind)) {
		return true;
	};
	{
		auto &expr = _202b83e8c_AssignOps;
		auto it = expr.begin();
		_iter_begin_1d958d6b2:;
		if (it != expr.end()) {
			jule::Str &_47612_op = *it;
			{
				if ((_47215_kind == _47612_op)) {
					return true;
				};
			}
			_iter_next_1d958d6b2:;
			++it;
			goto _iter_begin_1d958d6b2;
		}
		_iter_end_1d958d6b2:;
	};
	return false;
}



inline jule::Ptr<_202b8ea14_File> _202b91043_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_202b8ea14_File>(_202b8ea14_File{._field_Path=_6315_path, });
}



inline _20285b7ad_Log _202b9286e_makeErr(jule::I64 _11112_row, jule::I64 _11122_col, jule::Ptr<_202b8ea14_File>& _11133_f, jule::Str _11143_fmt, jule::Slice<jule::Any> _11156_args) {
	return _20285b7ad_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_11112_row, ._field_Column=_11122_col, ._field_Path=_11133_f.get()._field_Path, ._field_Text=_20285bbed_Logf(_11143_fmt,jule::Any(_11156_args)), };
}



inline jule::Bool _202b92c04_bytesHasPrefix(jule::Slice<jule::U8>& _12120_bytes, jule::Str _12135_prefix) {
	if ((_12120_bytes.len() < _12135_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12135_prefix;
		auto it = expr.begin();
		_iter_begin_1d9598e3c:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12120_bytes[_1259_i] != _12135_prefix[_1259_i])) {
					return false;
				};
			}
			_iter_next_1d9598e3c:;
			++it;
			_1259_i++;
			goto _iter_begin_1d9598e3c;
		}
		_iter_end_1d9598e3c:;
	};
	return true;
}



inline jule::Str _202b93045_floatFmtE(jule::Slice<jule::U8>& _13315_txt, jule::I64 _13332_i) {
	jule::Str _13342_lit = jule::Str();
	(_13332_i)++;
	if ((_13332_i >= _13315_txt.len())) {
		return _13342_lit;
	};
	jule::U8 _13913_b = _13315_txt[_13332_i];;
	if ((_13913_b == '_')) {
		return _13342_lit;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13332_i)++;
		if ((_13332_i >= _13315_txt.len())) {
			return _13342_lit;
		};
		if ((_13315_txt[_13332_i] == '_')) {
			return _13342_lit;
		};
	};
	jule::I64 _1539_first = _13332_i;;
	for (; (_13332_i < _13315_txt.len()); (_13332_i)++) {
		{
			_13913_b=_13315_txt[_13332_i];
			if (((_13913_b != '_') && (!(_202b8d194_IsDecimal(_13913_b))))) {
				goto _iter_end_1d959d00c;
			};
		}
	_iter_next_1d959d00c:;
	}
	_iter_end_1d959d00c:;;
	if ((_13332_i == _1539_first)) {
		_13342_lit = jule::Str();
		return _13342_lit;
	};
	_13342_lit = static_cast<jule::Str>(_13315_txt.slice(0LL,_13332_i));
	return _13342_lit;
}



inline jule::Str _202b933ca_floatFmtP(jule::Slice<jule::U8>& _16715_txt, jule::I64 _16728_i) {
	return _202b93045_floatFmtE(_16715_txt,_16728_i);
}



inline jule::Str _202b9371b_floatFmtDotnp(jule::Slice<jule::U8>& _17119_txt, jule::I64 _17136_i) {
	if ((_17119_txt[_17136_i] != '.')) {
		return jule::Str();
	};
	(_17136_i)++;
	_julec_label_loop:;
	for (; (_17136_i < _17119_txt.len()); (_17136_i)++) {
		{
			jule::U8 _17913_b = _17119_txt[_17136_i];;
			{
				
				if ((_17913_b == '_') || _202b8d194_IsDecimal(_17913_b)) {
					_case_begin_1d95a1483:;
					{
						goto _iter_next_1d959eeba;
					}
				}
				else if (_202b94ec0_isFloatFmtP(_17913_b,_17136_i)) {
					_case_begin_1d95a14e9:;
					{
						return _202b933ca_floatFmtP(_17119_txt,_17136_i);
					}
				}
				else {
					_case_begin_1d95a141c:;
					{
						goto _iter_end_1d959eeba;
					}
				}
				_match_end_1d95a13a6:;
			};
		}
	_iter_next_1d959eeba:;
	}
	_iter_end_1d959eeba:;;
	return jule::Str();
}



inline jule::Str _202b93a5c_floatFmtDotfp(jule::Slice<jule::U8>& _19219_txt, jule::I64 _19236_i) {
	_19236_i+=2LL;
	return _202b93045_floatFmtE(_19219_txt,_19236_i);
}



inline jule::Str _202b93d9d_floatFmtDotp(jule::Slice<jule::U8>& _19718_txt, jule::I64 _19735_i) {
	(_19735_i)++;
	return _202b93045_floatFmtE(_19718_txt,_19735_i);
}



inline jule::Str _202b942ee_floatNum(jule::Slice<jule::U8>& _20214_txt, jule::I64 _20231_i) {
	jule::Str _20241_lit = jule::Str();
	(_20231_i)++;
	if ((_20231_i >= _20214_txt.len())) {
		_20241_lit = static_cast<jule::Str>(_20214_txt);
		return _20241_lit;
	};
	if ((_20214_txt[_20231_i] == '_')) {
		(_20231_i)--;
		_20241_lit = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
		return _20241_lit;
	};
	for (; (_20231_i < _20214_txt.len()); (_20231_i)++) {
		{
			jule::U8 _21213_b = _20214_txt[_20231_i];;
			if (((_20231_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				_20241_lit = _202b93045_floatFmtE(_20214_txt,_20231_i);
				return _20241_lit;
			};
			if (((_21213_b != '_') && (!(_202b8d194_IsDecimal(_21213_b))))) {
				goto _iter_end_1d95a4cd3;
			};
		}
	_iter_next_1d95a4cd3:;
	}
	_iter_end_1d95a4cd3:;;
	if ((_20231_i == 1LL)) {
		return _20241_lit;
	};
	_20241_lit = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
	return _20241_lit;
}



inline jule::Str _202b94596_commonNum(jule::Slice<jule::U8>& _22715_txt) {
	jule::Str _22730_lit = jule::Str();
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22715_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22715_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1d95a8820:;
					{
						_22730_lit = _202b942ee_floatNum(_22715_txt,_22813_i);
						return _22730_lit;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1d95a8897:;
					{
						goto _iter_next_1d95a7a3e;
					}
				}
				else if (_202b94b7e_isFloatFmtE(_23113_b,_22813_i)) {
					_case_begin_1d95a891e:;
					{
						_22730_lit = _202b93045_floatFmtE(_22715_txt,_22813_i);
						return _22730_lit;
					}
				}
				else if ((!(_202b8d194_IsDecimal(_23113_b)))) {
					_case_begin_1d95a8996:;
					{
						goto _iter_end_1d95a7a3e;
					}
				}
				_match_end_1d95a8743:;
			};
		}
	_iter_next_1d95a7a3e:;
	}
	_iter_end_1d95a7a3e:;;
	if ((_22813_i == 0LL)) {
		return _22730_lit;
	};
	_22730_lit = static_cast<jule::Str>(_22715_txt.slice(0LL,_22813_i));
	return _22730_lit;
}



inline jule::Str _202b9483d_binaryNum(jule::Slice<jule::U8>& _25015_txt) {
	jule::Str _25030_lit = jule::Str();
	if ((!(_202b92c04_bytesHasPrefix(_25015_txt,jule::Str("0b", 2))))) {
		_25030_lit = jule::Str();
		return _25030_lit;
	};
	if ((_25015_txt.len() < 2LL)) {
		return _25030_lit;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25015_txt.len()); (_25913_i)++) {
		{
			if (((_25015_txt[_25913_i] != '_') && (!(_202b8d43b_IsBinary(_25015_txt[_25913_i]))))) {
				goto _iter_end_1d95ac2d5;
			};
		}
	_iter_next_1d95ac2d5:;
	}
	_iter_end_1d95ac2d5:;;
	if ((_25913_i == 2LL)) {
		return _25030_lit;
	};
	_25030_lit = static_cast<jule::Str>(_25015_txt.slice(0LL,_25913_i));
	return _25030_lit;
}



inline jule::Bool _202b94b7e_isFloatFmtE(jule::U8 _27216_b, jule::I64 _27225_i) {
	return ((_27225_i > 0LL) && ((_27216_b == 'e') || (_27216_b == 'E')));
}



inline jule::Bool _202b94ec0_isFloatFmtP(jule::U8 _27616_b, jule::I64 _27625_i) {
	return ((_27625_i > 0LL) && ((_27616_b == 'p') || (_27616_b == 'P')));
}



inline jule::Bool _202b95311_isFloatFmtDotnp(jule::Slice<jule::U8>& _28021_txt, jule::I64 _28038_i) {
	if ((_28021_txt[_28038_i] != '.')) {
		return false;
	};
	(_28038_i)++;
	_julec_label_loop:;
	for (; (_28038_i < _28021_txt.len()); (_28038_i)++) {
		{
			jule::U8 _28713_b = _28021_txt[_28038_i];;
			{
				
				if ((_28713_b == '_') || _202b8d194_IsDecimal(_28713_b)) {
					_case_begin_1d95b1dab:;
					{
						goto _iter_next_1d95b08c1;
					}
				}
				else if (_202b94ec0_isFloatFmtP(_28713_b,_28038_i)) {
					_case_begin_1d95b1e22:;
					{
						return true;
					}
				}
				else {
					_case_begin_1d95b1d45:;
					{
						goto _iter_end_1d95b08c1;
					}
				}
				_match_end_1d95b1cce:;
			};
		}
	_iter_next_1d95b08c1:;
	}
	_iter_end_1d95b08c1:;;
	return false;
}



inline jule::Bool _202b95652_isFloatFmtDotp(jule::Slice<jule::U8>& _30120_txt, jule::I64 _30133_i) {
	{
		
		if ((_30120_txt.len() < 3LL)) {
			_case_begin_1d95b3cd1:;
			{
				goto _case_begin_1d95b3572;
			}
		}
		else if ((_30120_txt[_30133_i] != '.')) {
			_case_begin_1d95b3572:;
			{
				goto _case_begin_1d95b35d8;
			}
		}
		else if (((_30120_txt[(_30133_i + 1LL)] != 'p') && (_30120_txt[(_30133_i + 1LL)] != 'P'))) {
			_case_begin_1d95b35d8:;
			{
				return false;
			}
		}
		else {
			_case_begin_1d95b350b:;
			{
				return true;
			}
		}
		_match_end_1d95b342e:;
	};
}



inline jule::Bool _202b95993_isFloatFmtDotfp(jule::Slice<jule::U8>& _31421_txt, jule::I64 _31434_i) {
	{
		
		if ((_31421_txt.len() < 4LL)) {
			_case_begin_1d95b62bc:;
			{
				goto _case_begin_1d95b5a91;
			}
		}
		else if ((_31421_txt[_31434_i] != '.')) {
			_case_begin_1d95b5a91:;
			{
				goto _case_begin_1d95b5b07;
			}
		}
		else if (((_31421_txt[(_31434_i + 1LL)] != 'f') && (_31421_txt[(_31434_i + 1LL)] != 'F'))) {
			_case_begin_1d95b5b07:;
			{
				goto _case_begin_1d95b5b6d;
			}
		}
		else if (((_31421_txt[(_31434_i + 2LL)] != 'p') && (_31421_txt[(_31434_i + 1LL)] != 'P'))) {
			_case_begin_1d95b5b6d:;
			{
				return false;
			}
		}
		else {
			_case_begin_1d95b55b8:;
			{
				return true;
			}
		}
		_match_end_1d95b54db:;
	};
}



inline jule::Str _202b95de4_octalNum(jule::Slice<jule::U8>& _32914_txt) {
	jule::Str _32929_lit = jule::Str();
	if ((_32914_txt[0LL] != '0')) {
		_32929_lit = jule::Str();
		return _32929_lit;
	};
	if ((_32914_txt.len() < 2LL)) {
		return _32929_lit;
	};
	jule::I64 _33713_octalStart = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32914_txt[1LL] == 'o')) {
		if ((_32914_txt.len() < 3LL)) {
			return _32929_lit;
		};
		(_33713_octalStart)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octalStart;;
	for (; (_34813_i < _32914_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32914_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					_32929_lit = jule::Str();
					return _32929_lit;
				};
				_32929_lit = _202b942ee_floatNum(_32914_txt,_34813_i);
				return _32929_lit;
			};
			if (_202b94b7e_isFloatFmtE(_35013_b,_34813_i)) {
				_32929_lit = _202b93045_floatFmtE(_32914_txt,_34813_i);
				return _32929_lit;
			};
			if (((_35013_b != '_') && (!(_202b8d6d3_IsOctal(_35013_b))))) {
				goto _iter_end_1d95bb822;
			};
		}
	_iter_next_1d95bb822:;
	}
	_iter_end_1d95bb822:;;
	if ((_34813_i == _33713_octalStart)) {
		return _32929_lit;
	};
	_32929_lit = static_cast<jule::Str>(_32914_txt.slice(0LL,_34813_i));
	return _32929_lit;
}



inline jule::Str _202b9618b_hexNum(jule::Slice<jule::U8>& _37112_txt) {
	jule::Str _37127_lit = jule::Str();
	if ((_37112_txt.len() < 3LL)) {
		return _37127_lit;
	};
	if (((_37112_txt[0LL] != '0') || ((_37112_txt[1LL] != 'x') && (_37112_txt[1LL] != 'X')))) {
		return _37127_lit;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37112_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37112_txt[_38013_i];;
			{
				
				if (_202b95652_isFloatFmtDotp(_37112_txt,_38013_i)) {
					_case_begin_1d95c242c:;
					{
						_37127_lit = _202b93d9d_floatFmtDotp(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (_202b95993_isFloatFmtDotfp(_37112_txt,_38013_i)) {
					_case_begin_1d95c24a4:;
					{
						_37127_lit = _202b93a5c_floatFmtDotfp(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (_202b94ec0_isFloatFmtP(_38313_b,_38013_i)) {
					_case_begin_1d95c252b:;
					{
						_37127_lit = _202b933ca_floatFmtP(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (_202b95311_isFloatFmtDotnp(_37112_txt,_38013_i)) {
					_case_begin_1d95c25a3:;
					{
						_37127_lit = _202b9371b_floatFmtDotnp(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (((_38313_b != '_') && (!(_202b8d97a_IsHex(_38313_b))))) {
					_case_begin_1d95c262a:;
					{
						goto _iter_end_1d95c1591;
					}
				}
				_match_end_1d95c233e:;
			};
		}
	_iter_next_1d95c1591:;
	}
	_iter_end_1d95c1591:;;
	if ((_38013_i == 2LL)) {
		return _37127_lit;
	};
	_37127_lit = static_cast<jule::Str>(_37112_txt.slice(0LL,_38013_i));
	return _37127_lit;
}



inline jule::Str _202b964cc_hexEscape(jule::Slice<jule::U8>& _40415_txt, jule::I64 _40428_n) {
	jule::Str _40438_seq = jule::Str();
	if ((_40415_txt.len() < _40428_n)) {
		return _40438_seq;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40428_n); (_41013_i)++) {
		{
			if ((!(_202b8d97a_IsHex(_40415_txt[_41013_i])))) {
				return _40438_seq;
			};
		}
	_iter_next_1d95c5353:;
	}
	_iter_end_1d95c5353:;;
	_40438_seq=static_cast<jule::Str>(_40415_txt.slice(0LL,_40428_n));
	return _40438_seq;
}



inline jule::Str _202b96774_bigUnicodePointEscape(jule::Slice<jule::U8>& _42227_txt) {
	return _202b964cc_hexEscape(_42227_txt,10LL);
}



inline jule::Str _202b96a3d_littleUnicodePointEscape(jule::Slice<jule::U8>& _42730_txt) {
	return _202b964cc_hexEscape(_42730_txt,6LL);
}



inline jule::Str _202b96be7_hexByteEscape(jule::Slice<jule::U8>& _43219_txt) {
	return _202b964cc_hexEscape(_43219_txt,4LL);
}



inline jule::Str _202b96e7d_byteEscape(jule::Slice<jule::U8>& _43716_txt) {
	jule::Str _43731_seq = jule::Str();
	if ((_43716_txt.len() < 4LL)) {
		return _43731_seq;
	};
	if ((((!(_202b8d6d3_IsOctal(_43716_txt[1LL]))) || (!(_202b8d6d3_IsOctal(_43716_txt[2LL])))) || (!(_202b8d6d3_IsOctal(_43716_txt[3LL]))))) {
		return _43731_seq;
	};
	_43731_seq = static_cast<jule::Str>(_43716_txt.slice(0LL,4LL));
	return _43731_seq;
}



inline jule::Slice<_20285b7ad_Log> _202b9b977_Lex(jule::Ptr<_202b8ea14_File> _82612_f, jule::I64 _82622_mode) {
	if ((_82612_f == nullptr)) {
		return nullptr;
	};
	_202b97665_lex _83113_lex = _202b97665_lex{._field_mode=_82622_mode, ._field_file=_82612_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_202b9a206_newLine(&_83113_lex);
	_202b98204_lex(&_83113_lex);
	if ((_83113_lex._field_errors.len() > 0LL)) {
		return _83113_lex._field_errors;
	};
	_82612_f.get()._field_Tokens=_83113_lex._field_tokens;
	return nullptr;
}



inline jule::I64 _204e79e73_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _204e82684_Len64(_6119_x)));
}



inline jule::I64 _204e7aec9_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_204e7bb67_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));
}



inline jule::I64 _204e7b8c0_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_204e7a627__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _204e7bb67_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_204e7ac76__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _204e823dc_Len32(jule::U32 _35214_x) {
	jule::I64 _35224_n = jule::I64();
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		_35224_n=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		_35224_n+=8LL;
	};
	_35224_n = static_cast<jule::I64>((_35224_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return _35224_n;
}



inline jule::I64 _204e82684_Len64(jule::U64 _36614_x) {
	jule::I64 _36624_n = jule::I64();
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		_36624_n=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		_36624_n+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		_36624_n+=8LL;
	};
	_36624_n = static_cast<jule::I64>((_36624_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return _36624_n;
}



inline std::tuple<jule::U64,jule::U64> _204e83344_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	jule::U64 _41540_sum = jule::U64();
	jule::U64 _41550_carryout = jule::U64();
	_41540_sum=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	_41550_carryout=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(_41540_sum)))) >> 63LLU));
	return std::make_tuple(_41540_sum,_41550_carryout);
}



inline std::tuple<jule::U64,jule::U64> _204e849c7_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	jule::U64 _49928_hi = jule::U64();
	jule::U64 _49937_lo = jule::U64();
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49928_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49937_lo=static_cast<jule::U64>((_49910_x * _49918_y));
	return std::make_tuple(_49928_hi,_49937_lo);
}



inline jule::U32 _204da1350_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));
}



inline jule::F32 _204da163b_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));
}



inline jule::U64 _204da18d3_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));
}



inline jule::F64 _204da1c02_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));
}



inline std::tuple<jule::F64,jule::I64> _204da430e_Frexp(jule::F64 _4714_f) {
	jule::F64 _4724_frac = jule::F64();
	jule::I64 _4735_exp = jule::I64();
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1d976997b:;
			{
				_4724_frac = _4714_f;
				_4735_exp = 0LL;
				return std::make_tuple(_4724_frac,_4735_exp);
			}
		}
		else if (_204e19d7a_IsInf(_4714_f,0LL) || _204e12a76_IsNaN(_4714_f)) {
			_case_begin_1d9769a03:;
			{
				_4724_frac = _4714_f;
				_4735_exp = 0LL;
				return std::make_tuple(_4724_frac,_4735_exp);
			}
		}
		_match_end_1d976988d:;
	};
	std::tie(_4714_f,_4735_exp) = _204e212e3_normalize(_4714_f);
	jule::U64 _5613_x = _204da18d3_F64Bits(_4714_f);;
	_4735_exp+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4724_frac=static_cast<jule::F64>(_204da1c02_F64FromBits(_5613_x));
	return std::make_tuple(_4724_frac,_4735_exp);
}



inline jule::F64 _204e11b41_NaN(void) {
	return static_cast<jule::F64>(_204da1c02_F64FromBits(9221120237041090561LLU));
}



inline jule::Bool _204e12a76_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);
}



inline jule::F64 _204e14517_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_204da1c02_F64FromBits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_204da1c02_F64FromBits(18442240474082181120LLU));
}



inline jule::Bool _204e19d7a_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I64> _204e212e3_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	;
	if ((_204e37e31_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _204e314ac_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_204e12a76_IsNaN(_1118_x) || _204e19d7a_IsInf(_1118_x,1LL)) {
			_case_begin_1d97b0b04:;
			{
				return _1118_x;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1d97b0b7b:;
			{
				return static_cast<jule::F64>(_204e11b41_NaN());
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1d97b0c03:;
			{
				return static_cast<jule::F64>(_204e14517_Inf(-1LL));
			}
		}
		_match_end_1d97b0a38:;
	};
	jule::F64 _13314_f1;;
	jule::I64 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _204da430e_Frexp(_1118_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _204e37e31_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_204da1c02_F64FromBits(static_cast<jule::U64>((_204da18d3_F64Bits(_438_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _204e8d371_Modf(jule::F64 _449_f) {
	jule::F64 _4419_integer = jule::F64();
	jule::F64 _4433_frac = jule::F64();
	;
	jule::F64 _469_absF = _204e37e31_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1d9837cbe:;
		}
		_iter_end_1d9837cbe:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4419_integer = _4713_i;
	_4433_frac = static_cast<jule::F64>((_449_f - _4713_i));
	return std::make_tuple(_4419_integer,_4433_frac);
}



inline jule::F64 _204e8db35_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac;;
	jule::I64 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _204da430e_Frexp(_449_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_204e314ac_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _2048ecc04_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_2049123ab_genericFtoa(jule::Slice<jule::U8>::alloc(0LL,_204a968b4_max(static_cast<jule::I64>((_7832_prec + 4LL)),24LL)),_7813_f,_7821_fmt,_7832_prec,_7843_bit_size));
}



inline jule::Slice<jule::U8> _2049123ab_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_204a9047e_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1d9b25045:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_204da1350_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_204a9047e_floatInfo>)((&(_2048dcb7d_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1d9b247e7:;
			{
				_8313_bits=static_cast<jule::U64>(_204da18d3_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_204a9047e_floatInfo>)((&(_2048e3117_f64info))));
			}
		}
		else {
			_case_begin_1d9b246d7:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1d9b249a1:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1d9b2939b:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1d9b2b1b1:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1d9b2b37b:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1d9b2a15a:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));
						}
					}
					_match_end_1d9b2a07d:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1d9b24bb0:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1d9b251aa:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1d9b28a3d:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _2049a433d_fmtB(_8220_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _204a6cc53_fmtX(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_2017c5b8a_decimalSlice _13213_digs = _2017c5b8a_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_204a411ee_ryuFtoaShortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1d9b306e3:;
				{
					_8258_prec=static_cast<jule::I64>(_204a968b4_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1d9b3079d:;
				{
					_8258_prec=static_cast<jule::I64>(_204a968b4_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1d9b30814:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1d9b2e813:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1d9b33097:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1d9b3252a:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1d9b32a8b:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1d9b32a36:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_204d8b879_ryuFtoaFixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_204d931bb_ryuFtoaFixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _20496a03a_bigFtoa(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _204991935_fmtDigits(_8220_dst,_1359_shortest,_969_neg,_13213_digs,_8258_prec,_8243_fmt);
}



inline jule::Slice<jule::U8> _20496a03a_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _204a9047e_floatInfo& _18327_flt) {
	_204eba9ec_decimal _18413_d = _204eba9ec_decimal{};;
	_204ebabd9_assign(&_18413_d, _1835_mant);
	_204ebad1b_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_2017c5b8a_decimalSlice _18713_digs = _2017c5b8a_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_204993b02_roundShortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_2017c5b8a_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1d9b381ac:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1d9b3ab82:;
				{
					_18233_prec=static_cast<jule::I64>(_204a968b4_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1d9b3abe8:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1d9b3aab6:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1d9b3c5bd:;
				{
					_204ebb1b2_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1d9b3c634:;
				{
					_204ebb1b2_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1d9b3c69a:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_204ebb1b2_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1d9b3c513:;
		};
		_18713_digs=_2017c5b8a_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _204991935_fmtDigits(_18216_dst,_1889_shortest,_18255_neg,_18713_digs,_18233_prec,_18244_fmt);
}



inline jule::Slice<jule::U8> _204991935_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _2017c5b8a_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1d9b41270:;
			{
				return _2049a2bee_fmtE(_21918_dst,_21947_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1d9b412d6:;
			{
				return _2049a33a3_fmtF(_21918_dst,_21947_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1d9b4134c:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _2049a2bee_fmtE(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _2049a33a3_fmtF(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>(_204a968b4_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_1d9b4113d:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));
}



inline void _204993b02_roundShortest(_204eba9ec_decimal& _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _204a9047e_floatInfo& _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		_25723_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25757_flt._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * (_25723_d._field_dp - _25723_d._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)))))) {
		return;;
	};
	_204eba9ec_decimal _28713_upper = _204eba9ec_decimal{};;
	_204ebabd9_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_204ebad1b_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << _25757_flt._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_204eba9ec_decimal _30613_lower = _204eba9ec_decimal{};;
	_204ebabd9_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_204ebad1b_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25723_d._field_dp);;
			if ((_33513_mi >= _25723_d._field_nd)) {
				goto _iter_end_1d9b4eca6;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25723_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1d9b55471:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1d9b554e8:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1d9b55570:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1d9b553a5:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1d9b58919:;
					{
						_204ebb1b2_round(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1d9b58991:;
					{
						_204ebae4d_roundDown(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1d9b58a18:;
					{
						_204ebb080_roundUp(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1d9b58870:;
			};
		}
	_iter_next_1d9b4eca6:;
	}
	_iter_end_1d9b4eca6:;;
}



inline jule::Slice<jule::U8> _2049a2bee_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _2017c5b8a_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _204a914d5_min(_39637_d._field_nd,static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_1d9b5e15b:;
		}
		_iter_end_1d9b5e15b:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1d9b61229:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1d9b62703:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1d9b611b3:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1d9b61009:;
	};
	return _39613_dst;
}



inline jule::Slice<jule::U8> _2049a33a3_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _2017c5b8a_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _204a914d5_min(_45137_d._field_nd,_45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_1d9b6589e:;
		}
		_iter_end_1d9b6589e:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_1d9b66dde:;
		}
		_iter_end_1d9b66dde:;;
	};
	return _45113_dst;
}



inline jule::Slice<jule::U8> _2049a433d_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _204a9047e_floatInfo& _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	std::tie(_48413_dst,std::ignore) = _204ebcbb9_fmtBits(_48413_dst,_48437_mant,10LL,false,true);
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>(_48463_flt._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	std::tie(_48413_dst,std::ignore) = _204ebcbb9_fmtBits(_48413_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)),10LL,(_48452_exp < 0LL),true);
	return _48413_dst;
}



inline jule::Slice<jule::U8> _204a6cc53_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _204a9047e_floatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1d9b6c895:;
	}
	_iter_end_1d9b6c895:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1d9b7367b:;
		}
		_iter_end_1d9b7367b:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1d9b75194:;
		}
		_iter_end_1d9b75194:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _204b02634_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1d9b77ae2:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1d9b779b0:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1d9b77dab:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1d9b76904:;
	};
	return _50613_dst;
}



inline jule::I64 _204a914d5_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I64 _204a968b4_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _204b02634_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));
}



inline std::tuple<jule::U64,jule::I64> _204b22577_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	if (_5118_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_1d9b80303:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_1d9b8019e:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_204b02634_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_1d9b821c3:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_204b02634_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_1d9b81ed6:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_204b02634_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_1d9b8204c:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1d9b81b40:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_1d9b81a63:;
					};
				};
			}
		}
		else {
			_case_begin_1d9b7e38a:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_1d9b7e335:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1d9b8745e:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1d9b87382:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1d9b86c44:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_1d9b86aac:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1d9b86cee:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1d9b885d6:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1d9b88581:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5118_s;
		auto it = expr.begin();
		_iter_begin_1d9b8972a:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1d9b8b155:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _204b02634_lower(_10912_c)) && (_204b02634_lower(_10912_c) <= 'z'))) {
						_case_begin_1d9b8acc0:;
						{
							_11017_d=static_cast<jule::U8>(((_204b02634_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1d9b8ad36:;
						{
							goto _iter_next_1d9b8972a;
						}
					}
					else {
						_case_begin_1d9b8a83b:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_1d9b8a7c5:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1d9b8972a:;
			++it;
			goto _iter_begin_1d9b8972a;
		}
		_iter_end_1d9b8972a:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _204b44b1b_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un;;
	jule::I64 _14714_err;;
	std::tie(_14710_un,_14714_err) = _204b22577_parseUint(_14618_s,_14630_base,_14645_bit_size);
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _204bc6609_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I64 _18718_err;;
	std::tie(_18714_un,_18718_err) = _204b22577_parseUint(_17217_s,_17225_base,_17240_bitSize);
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _204c917b2_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	jule::F64 _4157_f = jule::F64();
	jule::Bool _4165_ok = jule::Bool();
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			_4157_f=static_cast<jule::F64>(_204da1c02_F64FromBits(9223372036854775808LLU));
		};
		_4165_ok = true;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::I64 _579_clz = _204e79e73_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi;;
	jule::U64 _6323_xLo;;
	std::tie(_6314_xHi,_6323_xLo) = _204e849c7_Mul64(_4122_man,_20497d01a_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi;;
		jule::U64 _6719_yLo;;
		std::tie(_6714_yHi,_6719_yLo) = _204e849c7_Mul64(_4122_man,_20497d01a_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
		jule::U64 _6818_mergedHi = _6314_xHi;;
		jule::U64 _6828_mergedLo = (_6323_xLo + _6714_yHi);;
		std::tie(_6818_mergedHi,_6828_mergedLo) = std::make_tuple(_6314_xHi,(_6323_xLo + _6714_yHi));
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			_4157_f = 0LL;
			_4165_ok = false;
			return std::make_tuple(_4157_f,_4165_ok);
		};
		std::tie(_6314_xHi,_6323_xLo) = std::make_tuple(_6818_mergedHi,_6828_mergedLo);
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	_4157_f = static_cast<jule::F64>(_204da1c02_F64FromBits(_10313_retBits));
	_4165_ok = true;
	return std::make_tuple(_4157_f,_4165_ok);
}



inline std::tuple<jule::F32,jule::Bool> _204cd4aad_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	jule::F32 _11057_f = jule::F32();
	jule::Bool _11065_ok = jule::Bool();
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			_11057_f=static_cast<jule::F32>(_204da163b_F32FromBits(2147483648LLU));
		};
		_11065_ok = true;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		_11057_f = 0.0f;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::I64 _1329_clz = _204e79e73_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _204e849c7_Mul64(_11022_man,_20497d01a_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _204e849c7_Mul64(_11022_man,_20497d01a_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			_11057_f = 0.0f;
			_11065_ok = false;
			return std::make_tuple(_11057_f,_11065_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		_11057_f = 0.0f;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		_11057_f = 0.0f;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	_11057_f = static_cast<jule::F32>(_204da163b_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	_11065_ok = true;
	return std::make_tuple(_11057_f,_11065_ok);
}



inline jule::I64 _204aa16e3_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_1d9bb517e:;
	}
	_iter_end_1d9bb517e:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _2048ddc5b_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1d9bb9a46:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1d9bb9abd;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1d9bb9abd:;
			{
				jule::I64 _8317_caseN = _204aa16e3_commonPrefixLenIgnoreCase(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					_6826_f = static_cast<jule::F64>(_204e14517_Inf(_7213_sign));
					_6834_n = static_cast<jule::I64>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1d9bb9b45:;
			{
				if ((_204aa16e3_commonPrefixLenIgnoreCase(_6816_s,jule::Str("NaN", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_204e11b41_NaN());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_1d9bb997a:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _204d33425_readFloat(jule::Str _10314_s) {
	jule::U64 _10324_mantissa = jule::U64();
	jule::I64 _10339_exp = jule::I64();
	jule::Bool _10349_neg = jule::Bool();
	jule::Bool _10360_trunc = jule::Bool();
	jule::Bool _10373_hex = jule::Bool();
	jule::I64 _10384_i = jule::I64();
	jule::Bool _10392_ok = jule::Bool();
	if ((_10384_i >= _10314_s.len())) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	{
		
		if ((_10314_s[_10384_i] == '+')) {
			_case_begin_1d9bc1333:;
			{
				(_10384_i)++;
			}
		}
		else if ((_10314_s[_10384_i] == '-')) {
			_case_begin_1d9bc1399:;
			{
				_10349_neg=true;
				(_10384_i)++;
			}
		}
		_match_end_1d9bc1102:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((_10384_i + 2LL) < _10314_s.len()) && (_10314_s[_10384_i] == '0')) && (_204b02634_lower(_10314_s[(_10384_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		_10384_i+=2LL;
		_11913_expChar='p';
		_10373_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (_10384_i < _10314_s.len()); (_10384_i)++) {
		{
			jule::U8 _13313_c = _10314_s[_10384_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1d9bc7b86:;
					{
						goto _iter_next_1d9bc701a;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1d9bc7c0d:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1d9bc701a;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1d9bc7c85:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1d9bc701a;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=_11713_base;
							_10324_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							_10360_trunc=true;
						};
						goto _iter_next_1d9bc701a;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _204b02634_lower(_13313_c))) && (_204b02634_lower(_13313_c) <= 'f'))) {
					_case_begin_1d9bc7d0c:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=16LLU;
							_10324_mantissa+=static_cast<jule::U64>(((_204b02634_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							_10360_trunc=true;
						};
						goto _iter_next_1d9bc701a;
					}
				}
				_match_end_1d9bc7aa9:;
			};
			goto _iter_end_1d9bc701a;
		}
	_iter_next_1d9bc701a:;
	}
	_iter_end_1d9bc701a:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((_10384_i < _10314_s.len()) && (_204b02634_lower(_10314_s[_10384_i]) == _11913_expChar))) {
		(_10384_i)++;
		if ((_10384_i >= _10314_s.len())) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[_10384_i] == '+')) {
			(_10384_i)++;
		} else if ((_10314_s[_10384_i] == '-')) {
			(_10384_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10384_i >= _10314_s.len()) || (_10314_s[_10384_i] < '0')) || (_10314_s[_10384_i] > '9'))) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((_10384_i < _10314_s.len()) && ((('0' <= _10314_s[_10384_i]) && (_10314_s[_10384_i] <= '9')) || (_10314_s[_10384_i] == '_'))); (_10384_i)++) {
			{
				if ((_10314_s[_10384_i] == '_')) {
					goto _iter_next_1d9bd2b5d;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[_10384_i])) - '0'));
				};
			}
		_iter_next_1d9bd2b5d:;
		}
		_iter_end_1d9bd2b5d:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((_10324_mantissa != 0LLU)) {
		_10339_exp=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	_10392_ok=true;
	return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
}



inline std::tuple<jule::F64,jule::Bool> _2049781e1_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _2048e3117_f64info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1d9bdda04:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1d9bdda7b:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_2049d12c1_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _2049d12c1_f64pow10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1d9bddb03:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_2049d12c1_f64pow10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_1d9bdd949:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _2049c7c35_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _2048dcb7d_f32info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1d9be4015:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1d9be408c:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_2049e8041_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000.0f) || (_51562_f < -10000000.0f))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _2049e8041_f32pow10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1d9be4114:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_2049e8041_f32pow10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_1d9be3e5a:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _204b4b309_atofHex(jule::Str _55112_s, _204a9047e_floatInfo& _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << _55121_flt._field_expbits)) + _55121_flt._field_bias) - 2LL);;
	jule::I64 _5539_minExp = (_55121_flt._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>(_55121_flt._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> (_55121_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_1d9be95e2:;
	}
	_iter_end_1d9be95e2:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + _55121_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1d9beb627:;
	}
	_iter_end_1d9beb627:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1d9beb803:;
	}
	_iter_end_1d9beb803:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + _55121_flt._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> _55121_flt._field_mantbits) == 0LLU)) {
		_55160_exp=_55121_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55121_flt._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << _55121_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - _55121_flt._field_bias) & static_cast<jule::I64>(((1LL << _55121_flt._field_expbits) - 1LL)))) << _55121_flt._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << _55121_flt._field_mantbits) << _55121_flt._field_expbits);
	};
	if ((_55121_flt == _2048dcb7d_f32info)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_204da163b_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_204da1c02_F64FromBits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _204bc6c25_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I64 _61629_n = jule::I64();
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I64 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _2048ddc5b_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I64 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I64 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _204d33425_readFloat(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0.0f;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _204b4b309_atofHex(_61611_s.slice(0LL,_61629_n),_2048dcb7d_f32info,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _2049c7c35_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _204cd4aad_eiselLemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_fUp = 0.0f;;
			std::tie(_65321_fUp,_62450_ok) = _204cd4aad_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_fUp))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_204eba9ec_decimal _66213_d = _204eba9ec_decimal{};;
	if ((!(_2049a24d4_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0.0f;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _204912e4a_floatBits(&_66213_d, _2048dcb7d_f32info);
	_61621_f=static_cast<jule::F32>(_204da163b_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _204c22644_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I64 _67429_n = jule::I64();
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I64 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _2048ddc5b_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I64 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I64 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _204d33425_readFloat(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _204b4b309_atofHex(_67411_s.slice(0LL,_67429_n),_2048e3117_f64info,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _2049781e1_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _204c917b2_eiselLemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_fUp = 0LL;;
			std::tie(_71021_fUp,_68250_ok) = _204c917b2_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_fUp))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_204eba9ec_decimal _71913_d = _204eba9ec_decimal{};;
	if ((!(_2049a24d4_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _204912e4a_floatBits(&_71913_d, _2048e3117_f64info);
	_67421_f=static_cast<jule::F64>(_204da1c02_F64FromBits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _204c603b8_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I64 _73317_n;;
		jule::I64 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _204bc6c25_atof32(_73121_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I64 _73713_n;;
	jule::I64 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _204c22644_atof64(_73121_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _204d350b4_ParseFloat(jule::Str _76515_s, jule::I64 _76523_bit_size) {
	jule::F64 _76610_f;;
	jule::I64 _76613_n;;
	jule::I64 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _204c603b8_parseFloatPrefix(_76515_s,_76523_bit_size);
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _204d8b879_ryuFtoaFixed32(_2017c5b8a_decimalSlice& _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		std::tie(_4924_d._field_nd,_4924_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _204e823dc_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_204abd39c_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I64 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _204eb9bd8_mult64bitPow10(_4945_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _204eb9e4c_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extraMask)));
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_2049580c2_formatDecimal(_4924_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_roundUp,_4966_prec);
	_4924_d._field_dp-=_749_q;
}



inline void _204d931bb_ryuFtoaFixed64(_2017c5b8a_decimalSlice& _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		std::tie(_12124_d._field_nd,_12124_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _204e82684_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_204abd39c_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I64 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _204eb9d1a_mult128bitPow10(_12145_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _204eb9e4c_divisibleByPow5(_12145_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extraMask)));
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_2049580c2_formatDecimal(_12124_d,_15314_di,(!(_15329_d0)),_17113_roundUp,_12166_prec);
	_12124_d._field_dp-=_1469_q;
}



inline void _2049580c2_formatDecimal(_2017c5b8a_decimalSlice& _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _204a90968_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20044_m / 10LLU);;
			jule::U64 _20417_b = (_20044_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20044_m / 10LLU),(_20044_m % 10LL));
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1d9c3c1a1:;
	}
	_iter_end_1d9c3c1a1:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	_20023_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1d9c40e30:;
	}
	_iter_end_1d9c40e30:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20023_d._field_d[(_20023_d._field_nd - 1LL)] == '0')) {
		{
			(_20023_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1d9c46881:;
	}
	_iter_end_1d9c46881:;;
	_20023_d._field_dp=static_cast<jule::I64>((_20023_d._field_nd + _20213_trimmed));
}



inline void _204a411ee_ryuFtoaShortest(_2017c5b8a_decimalSlice& _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _204a9047e_floatInfo& _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		std::tie(_26125_d._field_nd,_26125_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26157_exp <= 0LL) && (_204e7bb67_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_204eb9974_ryuDigits(_26125_d,_26146_mant,_26146_mant,_26146_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I64 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _204eb9732_computeBounds(_26146_mant,_26157_exp,_26168_flt);
	if ((_27326_e2 == 0LL)) {
		_204eb9974_ryuDigits(_26125_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_204abd39c_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26168_flt == _2048dcb7d_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _204eb9bd8_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _204eb9bd8_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _204eb9bd8_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _204eb9d1a_mult128bitPow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _204eb9d1a_mult128bitPow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _204eb9d1a_mult128bitPow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_204eb9e4c_divisibleByPow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_204eb9e4c_divisibleByPow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_204eb9e4c_divisibleByPow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extraMask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extraMask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extraMask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_204eb9974_ryuDigits(_26125_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26125_d._field_dp-=_2799_q;
}



inline jule::I64 _204abd39c_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));
}



inline jule::I64 _204eb9600_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _204eb9732_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _204a9047e_floatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I64 _39662_e2 = jule::I64();
	if (((_39518_mant != (1LLU << _3966_flt._field_mantbits)) || (_39529_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU)),static_cast<jule::U64>((2LL * _39518_mant)),static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU)),static_cast<jule::U64>((4LL * _39518_mant)),static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _204eb9974_ryuDigits(_2017c5b8a_decimalSlice& _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _204eba07e_divmod1e9(_40936_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _204eba07e_divmod1e9(_40948_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _204eba07e_divmod1e9(_40962_upper);
	if ((_41210_uhi == 0LLU)) {
		_204eb9aa6_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_204eb9aa6_ryuDigits32(_40919_d,_41014_lhi,_41110_chi,_41210_uhi,_40978_c0,_40992_cup,8LL);
		_40919_d._field_dp+=9LL;
	} else {
		_40919_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40919_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1d9c6873d:;
		}
		_iter_end_1d9c6873d:;;
		_40919_d._field_d=_40919_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40919_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_204eb9aa6_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,static_cast<jule::I64>((_40919_d._field_nd + 8LL)));
	};
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[(_40919_d._field_nd - 1LL)] == '0'))) {
		{
			(_40919_d._field_nd)--;
		}
	_iter_next_1d9c6b39a:;
	}
	_iter_end_1d9c6b39a:;;
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[0LL] == '0'))) {
		{
			(_40919_d._field_nd)--;
			(_40919_d._field_dp)--;
			_40919_d._field_d=_40919_d._field_d.slice(1LL);
		}
	_iter_next_1d9c68441:;
	}
	_iter_end_1d9c68441:;;
}



inline void _204eb9aa6_ryuDigits32(_2017c5b8a_decimalSlice& _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45421_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45458_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45458_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45458_central / 10LLU),(_45458_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1d9c6e8cb;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45442_lower,_45458_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_1d9c6e8cb:;
	}
	_iter_end_1d9c6e8cb:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45421_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45421_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45421_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1d9c7652b:;
	}
	_iter_end_1d9c7652b:;;
	if ((_51013_n == _45421_d._field_nd)) {
		_45421_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45421_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45421_d._field_dp=static_cast<jule::I64>((_45421_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _204eb9bd8_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	jule::U32 _53450_resM = jule::U32();
	jule::I64 _53461_resE = jule::I64();
	jule::Bool _53472_exact = jule::Bool();
	if ((_53440_q == 0LL)) {
		_53450_resM = static_cast<jule::U32>((_53419_m << 6LLU));
		_53461_resE = static_cast<jule::I64>((_53431_e2 - 6LL));
		_53472_exact = true;
		return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _20497d01a_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _204e849c7_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)),_54313_pow);
	_53431_e2+=((_204eb9600_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	_53450_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53461_resE = _53431_e2;
	_53472_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _204eb9d1a_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	jule::U64 _56251_resM = jule::U64();
	jule::I64 _56262_resE = jule::I64();
	jule::Bool _56273_exact = jule::Bool();
	if ((_56241_q == 0LL)) {
		_56251_resM = static_cast<jule::U64>((_56220_m << 8LLU));
		_56262_resE = static_cast<jule::I64>((_56232_e2 - 8LL));
		_56273_exact = true;
		return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _20497d01a_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_204eb9600_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _204e849c7_Mul64(_56220_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _204e849c7_Mul64(_56220_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _204e83344_Add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56251_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56262_resE = _56232_e2;
	_56273_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
}



inline jule::Bool _204eb9e4c_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1d9c877d4:;
	}
	_iter_end_1d9c877d4:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _204eba07e_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
}



inline void _204ebb558_trim(_204eba9ec_decimal& _45314_a) {
	while (((_45314_a._field_nd > 0LL) && (_45314_a._field_d[(_45314_a._field_nd - 1LL)] == '0'))) {
		{
			(_45314_a._field_nd)--;
		}
	_iter_next_1d84c6640:;
	}
	_iter_end_1d84c6640:;;
	if ((_45314_a._field_nd == 0LL)) {
		_45314_a._field_dp=0LL;
	};
}



inline void _204ebb68a_rightShift(_204eba9ec_decimal& _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= _46320_a._field_nd)) {
				if ((_46813_n == 0LLU)) {
					_46320_a._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_1d84ca039:;
				}
				_iter_end_1d84ca039:;;
				goto _iter_end_1d84c8a3d;
			};
			jule::U64 _48213_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_1d84c8a3d:;
	}
	_iter_end_1d84c8a3d:;;
	_46320_a._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < _46320_a._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_1d84c99a6:;
	}
	_iter_end_1d84c99a6:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				_46320_a._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_1d84cdec7:;
	}
	_iter_end_1d84cdec7:;;
	_46320_a._field_nd=_46513_w;
	_204ebb558_trim(_46320_a);
}



inline jule::Bool _204ebb7bc_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);
			};
		}
	_iter_next_1d84d287c:;
	}
	_iter_end_1d84d287c:;;
	return false;
}



inline void _204ebb8ee_leftShift(_204eba9ec_decimal& _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _204a924a3_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_204ebb7bc_prefixIsLessThan(_53119_a._field_d,_53119_a._field_nd,_204a924a3_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = _53119_a._field_nd;;
	jule::I64 _53813_w = (_53119_a._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>(_53119_a._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_1d84d640d:;
	}
	_iter_end_1d84d640d:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_1d84d8ce5:;
	}
	_iter_end_1d84d8ce5:;;
	_53119_a._field_nd+=_53213_delta;
	if ((_53119_a._field_nd >= 800LL)) {
		_53119_a._field_nd=800LL;
	};
	_53119_a._field_dp+=_53213_delta;
	_204ebb558_trim(_53119_a);
}



inline jule::Bool _204ebba31_shouldRoundUp(_204eba9ec_decimal& _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= _57819_a._field_nd))) {
		return false;
	};
	if (((_57819_a._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == _57819_a._field_nd))) {
		if (_57819_a._field_trunc) {
			return true;
		};
		return ((_57831_nd > 0LL) && (((_57819_a._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_57819_a._field_d[_57831_nd] >= '5');
}



inline jule::Str _204ebc5ae_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _204ebc955_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _204ebcbb9_fmtBits(nullptr,_6012_i,_6020_base,false,false);
	return _6413_s;
}



inline jule::Str _204ebc6e1_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _204ebc955_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _204ebcbb9_fmtBits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)),_7119_base,(_7111_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _204ebc823_Itoa(jule::I64 _809_i) {
	return _204ebc6e1_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)),10LL);
}



inline jule::Str _204ebc955_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _204ebca87_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _204ebcbb9_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	jule::Slice<jule::U8> _10180_d = jule::Slice<jule::U8>();
	jule::Str _10191_s = jule::Str();
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1d9da2a97:;
		}
		_iter_end_1d9da2a97:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_204ebca87_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_204e7aec9_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1d9da2349:;
		}
		_iter_end_1d9da2349:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1d9daebb4:;
		}
		_iter_end_1d9daebb4:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		_10180_d=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10180_d,_10191_s);
	};
	_10191_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10180_d,_10191_s);
}



inline jule::Str _2044eca24_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1d9dc7935:;
			{
				return _2044cb10c_SysInt;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1d9dcb2da:;
			{
				return _2045206d4_SysUint;
			}
		}
		else {
			_case_begin_1d9dc989e:;
			{
				return _4515_kind;
			}
		}
		_match_end_1d9dc81d8:;
	};
}



inline jule::I64 _204504256_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1d9dccc6a:;
			{
				return 8LLU;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1d9dcc4ea:;
			{
				return 16LLU;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1d9dcc561:;
			{
				return 32LLU;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1d9dcc5c7:;
			{
				return 64LLU;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1d9dcc63d:;
			{
				return _2044caace_BitSize;
			}
		}
		else {
			_case_begin_1d9dcc484:;
			{
				return -1LL;
			}
		}
		_match_end_1d9dcc341:;
	};
}



inline jule::Str _2045284de_IntFromBits(jule::I64 _8616_bits) {
	{
		auto &_match_expr{ _8616_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1d9dd00be:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1d9dce453:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1d9dce4b9:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1d9dce530:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1d9dce3dc:;
			{
				return jule::Str();
			}
		}
		_match_end_1d9dce9c5:;
	};
}



inline jule::Str _20453a402_UintFromBits(jule::I64 _10417_bits) {
	{
		auto &_match_expr{ _10417_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1d9dd17b8:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1d9dd109d:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1d9dd1114:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1d9dd117a:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1d9dd0e49:;
			{
				return jule::Str();
			}
		}
		_match_end_1d9dd0ce5:;
	};
}



inline jule::Str _20456488d_FloatFromBits(jule::I64 _12218_bits) {
	{
		auto &_match_expr{ _12218_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1d9dd2e90:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1d9dd2797:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1d9dd2643:;
			{
				return jule::Str();
			}
		}
		_match_end_1d9dd24de:;
	};
}



inline jule::Bool _204701145_CheckBitFloat(jule::Str _15018_val, jule::I64 _15028_bit) {
	({
		auto except = _204d350b4_ParseFloat(_15018_val,_15028_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _204720d35_BitsizeOfFloat(jule::F64 _16019_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16019_x) && (_16019_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1d9dd857d:;
			{
				return 32LLU;
			}
		}
		else {
			_case_begin_1d9dd759e:;
			{
				return 64LLU;
			}
		}
		_match_end_1d9dd74e4:;
	};
}



inline jule::I64 _2047c735e_BitsizeOfInt(jule::I64 _17617_x) {
	{
		
		if (((-128LL <= _17617_x) && (_17617_x <= 127LL))) {
			_case_begin_1d9dd8b22:;
			{
				return 8LLU;
			}
		}
		else if (((-32768LL <= _17617_x) && (_17617_x <= 32767LL))) {
			_case_begin_1d9dd8b88:;
			{
				return 16LLU;
			}
		}
		else if (((-2147483648LL <= _17617_x) && (_17617_x <= 2147483647LL))) {
			_case_begin_1d9dd8bee:;
			{
				return 32LLU;
			}
		}
		else {
			_case_begin_1d9dd8946:;
			{
				return 64LLU;
			}
		}
		_match_end_1d9dd8869:;
	};
}



inline jule::I64 _2047e0102_BitsizeOfUint(jule::U64 _19618_x) {
	{
		
		if ((_19618_x <= 255LLU)) {
			_case_begin_1d9ddb77e:;
			{
				return 8LLU;
			}
		}
		else if ((_19618_x <= 65535LLU)) {
			_case_begin_1d9ddb7e5:;
			{
				return 16LLU;
			}
		}
		else if ((_19618_x <= 4294967295LLU)) {
			_case_begin_1d9ddb85b:;
			{
				return 32LLU;
			}
		}
		else {
			_case_begin_1d9ddab13:;
			{
				return 64LLU;
			}
		}
		_match_end_1d9ddb2c8:;
	};
}



inline void _2047e082d_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _202895154_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1d9ddc7c4:;
				{
					_2044caace_BitSize=64LLU;
					_2044cb10c_SysInt=jule::Str("i64", 3);
					_2045206d4_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1d9ddc83a:;
				{
					_2044caace_BitSize=32LLU;
					_2044cb10c_SysInt=jule::Str("i32", 3);
					_2045206d4_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1d9ddc719:;
		};
	};
}



inline void _2047ecde0_init(void) {
	_2047e082d_UpdateTarget();
}



inline jule::F64 _2048774b9_Min(jule::Str _6112_k) {
	_6112_k=_2044eca24_RealKindOf(_6112_k);
	{
		auto &_match_expr{ _6112_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1d9de019a:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1d9de0211:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1d9de0277:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1d9de02dd:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1d9de0453:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1d9de04b9:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1d9ddcce1:;
			{
				return 0LL;
			}
		}
		_match_end_1d9ddd000:;
	};
}



inline jule::F64 _2048802e6_Max(jule::Str _8312_k) {
	_8312_k=_2044eca24_RealKindOf(_8312_k);
	{
		auto &_match_expr{ _8312_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1d9de2147:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1d9de21ad:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1d9de2224:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1d9de228a:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1d9de2510:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1d9de2576:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1d9de25dc:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1d9de2653:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1d9de26b9:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1d9de2730:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1d9de1ed2:;
			{
				return 0LL;
			}
		}
		_match_end_1d9de1d06:;
	};
}



inline jule::Bool _20488be29_IsI8Compatible(jule::Str _623_k) {
	return (_623_k == jule::Str("i8", 2));
}



inline jule::Bool _20489d4bd_IsI16Compatible(jule::Str _1124_k) {
	return ((_1124_k == jule::Str("i8", 2)) || (_1124_k == jule::Str("i16", 3)));
}



inline jule::Bool _2048bdac6_IsI32Compatible(jule::Str _1724_k) {
	return ((((_1724_k == jule::Str("i8", 2)) || (_1724_k == jule::Str("i16", 3))) || (_1724_k == jule::Str("i32", 3))) || (_1724_k == jule::Str("u8", 2)));
}



inline jule::Bool _2048c5193_IsI64Compatible(jule::Str _2524_k) {
	return ((((_2524_k == jule::Str("i8", 2)) || (_2524_k == jule::Str("i16", 3))) || (_2524_k == jule::Str("i32", 3))) || (_2524_k == jule::Str("i64", 3)));
}



inline jule::Bool _2044c9ca9_IsU8Compatible(jule::Str _3323_k) {
	return (_3323_k == jule::Str("u8", 2));
}



inline jule::Bool _204480db4_IsU16Compatible(jule::Str _3824_k) {
	return ((_3824_k == jule::Str("u8", 2)) || (_3824_k == jule::Str("u16", 3)));
}



inline jule::Bool _20455224e_IsU32Compatible(jule::Str _4324_k) {
	return (((_4324_k == jule::Str("u8", 2)) || (_4324_k == jule::Str("u16", 3))) || (_4324_k == jule::Str("u32", 3)));
}



inline jule::Bool _204552cbb_IsU64Compatible(jule::Str _5024_k) {
	return ((((_5024_k == jule::Str("u8", 2)) || (_5024_k == jule::Str("u16", 3))) || (_5024_k == jule::Str("u32", 3))) || (_5024_k == jule::Str("u64", 3)));
}



inline jule::Bool _204747675_IsF32Compatible(jule::Str _5824_k) {
	return (_5824_k == jule::Str("f32", 3));
}



inline jule::Bool _2047487a8_IsF64Compatible(jule::Str _6324_k) {
	return (_6324_k == jule::Str("f64", 3));
}



inline jule::Bool _20474d912_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1d9deb4b4:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1d9deb97b:;
			{
				return (_7036_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1d9deb9e2:;
			{
				return (_7036_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1d9deb728:;
			{
				return (_7036_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1d9deb78e:;
			{
				return _20488be29_IsI8Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1d9deb805:;
			{
				return _20489d4bd_IsI16Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1d9deb86b:;
			{
				return _2048bdac6_IsI32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1d9deba69:;
			{
				return _2048c5193_IsI64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1d9debad0:;
			{
				return _2044c9ca9_IsU8Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1d9debb46:;
			{
				return _204480db4_IsU16Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1d9debbac:;
			{
				return _20455224e_IsU32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1d9debc23:;
			{
				return _204552cbb_IsU64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1d9debc89:;
			{
				return _204747675_IsF32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1d9debd00:;
			{
				return _2047487a8_IsF64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1d9debd66:;
			{
				return (_7036_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1d9debdcc:;
			{
				return (_7036_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1d9deb2b6:;
			{
				return false;
			}
		}
		_match_end_1d9deaa9b:;
	};
}



inline jule::Bool _204753a6b_IsI16Greater(jule::Str _11021_k) {
	return (_11021_k == jule::Str("i8", 2));
}



inline jule::Bool _2048be038_IsI32Greater(jule::Str _11521_k) {
	return ((_11521_k == jule::Str("i8", 2)) || (_11521_k == jule::Str("i16", 3)));
}



inline jule::Bool _2044cbd55_IsI64Greater(jule::Str _12021_k) {
	return (((_12021_k == jule::Str("i8", 2)) || (_12021_k == jule::Str("i16", 3))) || (_12021_k == jule::Str("i32", 3)));
}



inline jule::Bool _2047009a2_IsU16Greater(jule::Str _12721_k) {
	return (_12721_k == jule::Str("u8", 2));
}



inline jule::Bool _204ebd67b_IsU32Greater(jule::Str _13221_k) {
	return ((_13221_k == jule::Str("u8", 2)) || (_13221_k == jule::Str("u16", 3)));
}



inline jule::Bool _204ebd7ad_IsU64Greater(jule::Str _13821_k) {
	return (((_13821_k == jule::Str("u8", 2)) || (_13821_k == jule::Str("u16", 3))) || (_13821_k == jule::Str("u32", 3)));
}



inline jule::Bool _204ebd8e0_IsF32Greater(jule::Str _14517_k) {
	return (_14517_k != jule::Str("f64", 3));
}



inline jule::Bool _204ebda22_IsF64Greater(jule::Str _15017_k) {
	return true;
}



inline jule::Bool _204ebdb54_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1d9e0538b:;
			{
				return _204ebe094_IsSigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1d9e05402:;
			{
				return _204ebe1c6_IsUnsigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1d9e05468:;
			{
				return _204ebe1c6_IsUnsigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1d9e054ce:;
			{
				return _204753a6b_IsI16Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1d9e05743:;
			{
				return _2048be038_IsI32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1d9e057a9:;
			{
				return _2044cbd55_IsI64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1d9e05820:;
			{
				return _2047009a2_IsU16Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1d9e05886:;
			{
				return _204ebd67b_IsU32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1d9e0590d:;
			{
				return _204ebd7ad_IsU64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1d9e05ab7:;
			{
				return _204ebd8e0_IsF32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1d9e05b3e:;
			{
				return _204ebda22_IsF64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1d9e05bb6:;
			{
				return true;
			}
		}
		else {
			_case_begin_1d9e05325:;
			{
				return false;
			}
		}
		_match_end_1d9e0526a:;
	};
}



inline jule::Bool _204ebe094_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == jule::Str("i8", 2)) || (_2717_k == jule::Str("i16", 3))) || (_2717_k == jule::Str("i32", 3))) || (_2717_k == jule::Str("i64", 3))) || (_2717_k == jule::Str("int", 3)));
}



inline jule::Bool _204ebe1c6_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == jule::Str("u8", 2)) || (_3619_k == jule::Str("u16", 3))) || (_3619_k == jule::Str("u32", 3))) || (_3619_k == jule::Str("u64", 3))) || (_3619_k == jule::Str("uint", 4))) || (_3619_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _204ebe308_IsInt(jule::Str _4610_k) {
	return (_204ebe094_IsSigInt(_4610_k) || _204ebe1c6_IsUnsigInt(_4610_k));
}



inline jule::Bool _204ebe43a_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == jule::Str("f32", 3)) || (_5112_k == jule::Str("f64", 3)));
}



inline jule::Bool _204ebe56c_IsNum(jule::Str _5610_k) {
	return (_204ebe308_IsInt(_5610_k) || _204ebe43a_IsFloat(_5610_k));
}



inline jule::Bool _204ebe69e_IsSigNum(jule::Str _6113_k) {
	return (_204ebe094_IsSigInt(_6113_k) || _204ebe43a_IsFloat(_6113_k));
}



inline void _204ec10c9_lshiftUnsig(_2044102b6_Const& _59021_c, _2044102b6_Const& _59032_x) {
	jule::U64 _5919_l = _2044573b8_AsU64(&_59021_c);;
	jule::U64 _5929_r = _2044573b8_AsU64(&_59032_x);;
	_204477c13_SetU64(&_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _204ec120b_rshiftUnsig(_2044102b6_Const& _59621_c, _2044102b6_Const& _59632_x) {
	jule::U64 _5979_l = _2044573b8_AsU64(&_59621_c);;
	jule::U64 _5989_r = _2044573b8_AsU64(&_59632_x);;
	_204477c13_SetU64(&_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _20504a30c_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);
}



inline jule::I32 _20504a43e_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_20506328c_runeFromEsqSeq(_1811_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _2027ae28d_DecodeRune(_1811_bytes);
	};
	return _2313_r;
}



inline jule::Str _20506292e_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);
}



inline jule::Str _205062bd7_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,_4210_bytes.len());;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_2050635cd_strEsqSeq(_4210_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I64 _5421_size;;
				std::tie(_5418_r,_5421_size) = _2027ae28d_DecodeRune(_4210_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_2027b0602_AppendRune(_4713_s,_5418_r);
			};
		}
	_iter_next_1d9e7a785:;
	}
	_iter_end_1d9e7a785:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _205062e7e_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	jule::U8 _6238_seq = jule::U8();
	jule::Bool _6249_ok = jule::Bool();
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6238_seq,_6249_ok);
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1d9e805e2:;
			{
				_6238_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1d9e80669:;
			{
				_6238_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1d9e806e1:;
			{
				_6238_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1d9e80768:;
			{
				_6238_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1d9e807e0:;
			{
				_6238_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1d9e80867:;
			{
				_6238_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1d9e808de:;
			{
				_6238_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1d9e80966:;
			{
				_6238_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1d9e809dd:;
			{
				_6238_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1d9e80a65:;
			{
				_6238_seq='\v';
			}
		}
		_match_end_1d9e804c1:;
	};
	_6249_ok=(_6238_seq != 0LLU);
	return std::make_tuple(_6238_seq,_6249_ok);
}



inline jule::I32 _20506328c_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64& _9239_i) {
	jule::U8 _9310_b;;
	jule::Bool _9313_ok;;
	std::tie(_9310_b,_9313_ok) = _205062e7e_tryBtoaCommonEsq(_9219_bytes.slice(_9239_i));
	(_9239_i)++;
	if (_9313_ok) {
		(_9239_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));
	};
	{
		auto &_match_expr{ _9219_bytes[_9239_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1d9e866a3:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _204b44b1b_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				_9239_i+=5LL;
				return _10313_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1d9e84edc:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _204b44b1b_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				_9239_i+=9LL;
				return _10813_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1d9e8672a:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice((_9239_i + 1LL),(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _204b44b1b_ParseUint(static_cast<jule::Str>(_11313_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_1d9e8551a:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice(_9239_i,(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _204b44b1b_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));
			}
		}
		_match_end_1d9e8540a:;
	};
}



inline jule::Slice<jule::U8> _2050635cd_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64& _12434_i) {
	jule::I32 _1259_r = _20506328c_runeFromEsqSeq(_12414_bytes,_12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));
}



inline jule::I64 _20515db90_findFormatPrefix(jule::Slice<jule::U8>& _1022_bytes, jule::I64& _1038_start) {
	jule::I64 _1113_i = _1038_start;;
	while ((_1113_i < _1022_bytes.len())) {
		{
			jule::I32 _1314_r;;
			jule::I64 _1317_size;;
			std::tie(_1314_r,_1317_size) = _2027ae28d_DecodeRune(_1022_bytes.slice(_1113_i));
			if ((_1314_r == '{')) {
				return _1113_i;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_1d9ec07b9:;
	}
	_iter_end_1d9ec07b9:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _205164987_getFormatRange(jule::I64& _2724_i, jule::Slice<jule::U8>& _2737_bytes) {
	jule::I64 _289_start = _2724_i;;
	jule::I64 _2913_braces = 0LL;;
	while ((_2724_i < _2737_bytes.len())) {
		{
			jule::I32 _3114_r;;
			jule::I64 _3117_size;;
			std::tie(_3114_r,_3117_size) = _2027ae28d_DecodeRune(_2737_bytes.slice(_2724_i));
			_2724_i+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_1d9ec359c:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1d9ec3613:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return _2737_bytes.slice(_289_start,_2724_i);
						};
					}
				}
				_match_end_1d9ec3206:;
			};
		}
	_iter_next_1d9ec2722:;
	}
	_iter_end_1d9ec2722:;;
	return nullptr;
}



inline void _205164c40_FmtByDefault(jule::Str& _4722_buf, jule::Any& _4733_arg) {
	if ((_4733_arg == nullptr)) {
		_4722_buf+=jule::Str("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ _4733_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1d9ec52c4:;
			{
				_4722_buf+=_2048ecc04_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>(_4733_arg.operator jule::F32())),'g',-1LL,32LL);
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1d9ec5648:;
			{
				_4722_buf+=_2048ecc04_FmtFloat(static_cast<jule::F64>(_4733_arg.operator jule::F64()),'g',-1LL,64LL);
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1d9ec547d:;
			{
				_4722_buf+=_204ebc6e1_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I8()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1d9ec5725:;
			{
				_4722_buf+=_204ebc6e1_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I16()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1d9ec3a20:;
			{
				_4722_buf+=_204ebc6e1_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I32()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1d9ec5192:;
			{
				_4722_buf+=_204ebc6e1_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I64()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1d9ec5208:;
			{
				_4722_buf+=_204ebc5ae_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U8()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1d9ec579c:;
			{
				_4722_buf+=_204ebc5ae_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U16()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1d9ec5813:;
			{
				_4722_buf+=_204ebc5ae_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U32()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1d9ec5879:;
			{
				_4722_buf+=_204ebc5ae_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U64()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1d9ec58e0:;
			{
				_4722_buf+=_4733_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1d9ec5956:;
			{
				if (_4733_arg.operator jule::Bool()) {
					_4722_buf+=jule::Str("true", 4);
				} else {
					_4722_buf+=jule::Str("false", 5);
				};
			}
		}
		else {
			_case_begin_1d9ec4636:;
			{
				_4722_buf+=jule::to_str(_4733_arg);
			}
		}
		_match_end_1d9ec45d1:;
	};
}



inline void _205165119_applyFmtByDefault(jule::Str& _8627_buf, jule::I64& _8642_j, jule::Slice<jule::Any>& _8651_args) {
	jule::Any _879_arg = _8651_args[_8642_j];;
	(_8642_j)++;
	_205164c40_FmtByDefault(_8627_buf,_879_arg);
}



inline void _205165515_applyFmt(jule::Slice<jule::U8>& _9418_fmt, jule::Str& _9436_buf, jule::I64& _9451_j, jule::Slice<jule::Any>& _9460_args) {
	if ((_9418_fmt.len() == 2LL)) {
		_205165119_applyFmtByDefault(_9436_buf,_9451_j,_9460_args);
		return;;
	};
	if (((_9418_fmt.len() == 4LL) && (_9418_fmt == jule::Slice<jule::U8>::make({'{','{','}','}'})))) {
		_9436_buf+=jule::Str("{}", 2);
		return;;
	};
	_2027ce368_PushToStrBuffer(_9436_buf,_9418_fmt);
}



inline jule::Str _205165823_Format(jule::Str& _10912_fmt, jule::Slice<jule::Any> _10922_args) {
	if ((_10922_args.len() == 0LL)) {
		return _10912_fmt;
	};
	jule::Slice<jule::U8> _11313_fmtBytes = _2027cdc19_Stobs(_10912_fmt);;
	jule::Str _11413_buf = jule::Str::alloc(0LL, _10912_fmt.len());;
	jule::I64 _11513_j = 0LL;;
	jule::I64 _11613_last = 0LL;;
	jule::I64 _11713_i = _20515db90_findFormatPrefix(_11313_fmtBytes,_11613_last);;
	for (; (_11713_i != -1LL); _11713_i=static_cast<jule::I64>(_20515db90_findFormatPrefix(_11313_fmtBytes,_11713_i))) {
		{
			_2027ce368_PushToStrBuffer(_11413_buf,_11313_fmtBytes.slice(_11613_last,_11713_i));
			jule::Slice<jule::U8> _12017_format = _205164987_getFormatRange(_11713_i,_11313_fmtBytes);;
			if ((_12017_format == nullptr)) {
				goto _iter_next_1d9ed1676;
			};
			_205165515_applyFmt(_12017_format,_11413_buf,_11513_j,_10922_args);
			if ((_11513_j >= _10922_args.len())) {
				_2027ce368_PushToStrBuffer(_11413_buf,_11313_fmtBytes.slice(_11713_i));
				_11613_last=static_cast<jule::I64>(_11313_fmtBytes.len());
				goto _iter_end_1d9ed1676;
			};
			_11613_last=_11713_i;
		}
	_iter_next_1d9ed1676:;
	}
	_iter_end_1d9ed1676:;;
	if ((_11613_last < _11313_fmtBytes.len())) {
		_2027ce368_PushToStrBuffer(_11413_buf,_11313_fmtBytes.slice(_11613_last));
	};
	return _11413_buf;
}



inline jule::Str _205165e1c_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _205165823_Format(_3011_fmt,jule::Any(_3021_args));
}



inline jule::Bool _204ec7b19_parameterUsesGenerics(jule::Ptr<_204ec6d8d_Param>& _37427_p, jule::Slice<jule::Ptr<_20434d864_GenericDecl>>& _37439_generics) {
	if (_204395b64_IsSelf(_37427_p.ptr())) {
		return false;
	};
	return _2050c22a7_kindUsesGenerics(_37427_p.get()._field_Kind.get()._field_Decl.get()._field_Kind,_37439_generics);
}



inline jule::Ptr<_2050aea47_TypeSymbol> _204ec890b_buildType(jule::Ptr<_20434156b_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_2050aea47_TypeSymbol>(_2050aea47_TypeSymbol{._field_Decl=_9418_t, });
}



inline jule::Ptr<_205080bc2_Value> _204ec8a3d_buildExpr(jule::Ptr<_204345a8c_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_205080bc2_Value>(_205080bc2_Value{._field_Expr=_10318_expr, });
}



inline jule::Ptr<_2050a9beb_TypeAlias> _204ec8b70_buildTypeAlias(jule::Ptr<_20435783a_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_2050a9beb_TypeAlias>(_2050a9beb_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_204ec890b_buildType(_11223_decl.get()._field_Kind), });
}



inline jule::Ptr<_204324285_Field> _204ec8ca2_buildField(jule::Ptr<_20435aed1_FieldDecl> _12319_decl) {
	return jule::new_ptr<_204324285_Field>(_204324285_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_204ec890b_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});
}



inline jule::Slice<jule::Ptr<_204324285_Field>> _204ec8dd4_buildFields(jule::Slice<jule::Ptr<_20435aed1_FieldDecl>>& _13421_decls) {
	jule::Slice<jule::Ptr<_204324285_Field>> _13513_fields = jule::Slice<jule::Ptr<_204324285_Field>>::alloc(0LL,_13421_decls.len());;
	{
		auto &expr = _13421_decls;
		auto it = expr.begin();
		_iter_begin_1dad5d58a:;
		if (it != expr.end()) {
			jule::Ptr<_20435aed1_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_204ec8ca2_buildField(_13617_decl));;
			}
			_iter_next_1dad5d58a:;
			++it;
			goto _iter_begin_1dad5d58a;
		}
		_iter_end_1dad5d58a:;
	};
	return _13513_fields;
}



inline jule::Ptr<_20433367e_Struct> _204ec9016_buildStruct(jule::Ptr<_20435b784_StructDecl> _14220_decl) {
	return jule::new_ptr<_20433367e_Struct>(_20433367e_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_204ec8dd4_buildFields(_14220_decl.get()._field_Fields), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });
}



inline jule::Ptr<_204ec6d8d_Param> _204ec9148_buildParam(jule::Ptr<_204351bca_ParamDecl> _15419_decl) {
	return jule::new_ptr<_204ec6d8d_Param>(_204ec6d8d_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_204ec890b_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});
}



inline jule::Slice<jule::Ptr<_204ec6d8d_Param>> _204ec927a_buildParams(jule::Slice<jule::Ptr<_204351bca_ParamDecl>>& _16521_decls) {
	jule::Slice<jule::Ptr<_204ec6d8d_Param>> _16613_params = jule::Slice<jule::Ptr<_204ec6d8d_Param>>::alloc(0LL,_16521_decls.len());;
	{
		auto &expr = _16521_decls;
		auto it = expr.begin();
		_iter_begin_1dad61604:;
		if (it != expr.end()) {
			jule::Ptr<_204351bca_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_204ec9148_buildParam(_16717_decl));;
			}
			_iter_next_1dad61604:;
			++it;
			goto _iter_begin_1dad61604;
		}
		_iter_end_1dad61604:;
	};
	return _16613_params;
}



inline jule::Ptr<_204ec6ba1_RetType> _204ec93ac_buildRetType(jule::Ptr<_20434467e_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_204ec6ba1_RetType>(_204ec6ba1_RetType{._field_Kind=_204ec890b_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});
}



inline jule::Ptr<_204ec707a_Fn> _204ec94de_buildFn(jule::Ptr<_204352eea_FnDecl> _18316_decl) {
	return jule::new_ptr<_204ec707a_Fn>(_204ec707a_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_204ec93ac_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_204ec927a_buildParams(_18316_decl.get()._field_Params), });
}



inline jule::Slice<jule::Ptr<_204ec707a_Fn>> _204ec9621_buildMethods(jule::Slice<jule::Ptr<_204352eea_FnDecl>>& _20122_decls) {
	jule::Slice<jule::Ptr<_204ec707a_Fn>> _20213_methods = jule::Slice<jule::Ptr<_204ec707a_Fn>>::alloc(0LL,_20122_decls.len());;
	{
		auto &expr = _20122_decls;
		auto it = expr.begin();
		_iter_begin_1dad654b5:;
		if (it != expr.end()) {
			jule::Ptr<_204352eea_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_204ec94de_buildFn(_20317_decl));;
			}
			_iter_next_1dad654b5:;
			++it;
			goto _iter_begin_1dad654b5;
		}
		_iter_end_1dad654b5:;
	};
	return _20213_methods;
}



inline jule::Ptr<_204ece8e0_Trait> _204ec9753_buildTrait(jule::Ptr<_20435bd8e_TraitDecl> _20919_decl) {
	return jule::new_ptr<_204ece8e0_Trait>(_204ece8e0_Trait{._field_Token=_20919_decl.get()._field_Token, ._field_Ident=_20919_decl.get()._field_Ident, ._field_Public=_20919_decl.get()._field_Public, ._field_Methods=_204ec9621_buildMethods(_20919_decl.get()._field_Methods), });
}



inline jule::Ptr<_204ed1040_EnumItem> _204ec9885_buildEnumItem(jule::Ptr<_204359199_EnumItemDecl> _21822_decl) {
	return jule::new_ptr<_204ed1040_EnumItem>(_204ed1040_EnumItem{._field_Token=_21822_decl.get()._field_Token, ._field_Ident=_21822_decl.get()._field_Ident, ._field_Value=_204ec8a3d_buildExpr(_21822_decl.get()._field_Expr)});
}



inline jule::Slice<jule::Ptr<_204ed1040_EnumItem>> _204ec99b7_buildEnumItems(jule::Slice<jule::Ptr<_204359199_EnumItemDecl>>& _22624_decls) {
	jule::Slice<jule::Ptr<_204ed1040_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_204ed1040_EnumItem>>::alloc(0LL,_22624_decls.len());;
	{
		auto &expr = _22624_decls;
		auto it = expr.begin();
		_iter_begin_1dad67be3:;
		if (it != expr.end()) {
			jule::Ptr<_204359199_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_204ec9885_buildEnumItem(_22817_decl));;
			}
			_iter_next_1dad67be3:;
			++it;
			goto _iter_begin_1dad67be3;
		}
		_iter_end_1dad67be3:;
	};
	return _22713_items;
}



inline jule::Ptr<_204ed1a35_Enum> _204ec9ae9_buildEnum(jule::Ptr<_204359bc2_EnumDecl> _23418_decl) {
	return jule::new_ptr<_204ed1a35_Enum>(_204ed1a35_Enum{._field_Token=_23418_decl.get()._field_Token, ._field_Public=_23418_decl.get()._field_Public, ._field_Ident=_23418_decl.get()._field_Ident, ._field_Kind=_204ec890b_buildType(_23418_decl.get()._field_Kind), ._field_Items=_204ec99b7_buildEnumItems(_23418_decl.get()._field_Items)});
}



inline jule::Ptr<_204ed2a69_TypeEnumItem> _204ec9e5c_buildTypeEnumItem(jule::Ptr<_20435a6c8_TypeEnumItemDecl> _24426_decl) {
	return jule::new_ptr<_204ed2a69_TypeEnumItem>(_204ed2a69_TypeEnumItem{._field_Token=_24426_decl.get()._field_Token, ._field_Ident=_24426_decl.get()._field_Ident, ._field_Kind=_204ec890b_buildType(_24426_decl.get()._field_Kind)});
}



inline jule::Slice<jule::Ptr<_204ed2a69_TypeEnumItem>> _204eca08e_buildTypeEnumItems(jule::Slice<jule::Ptr<_20435a6c8_TypeEnumItemDecl>>& _25228_decls) {
	jule::Slice<jule::Ptr<_204ed2a69_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_204ed2a69_TypeEnumItem>>::alloc(0LL,_25228_decls.len());;
	{
		auto &expr = _25228_decls;
		auto it = expr.begin();
		_iter_begin_1dad6a685:;
		if (it != expr.end()) {
			jule::Ptr<_20435a6c8_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_204ec9e5c_buildTypeEnumItem(_25417_decl));;
			}
			_iter_next_1dad6a685:;
			++it;
			goto _iter_begin_1dad6a685;
		}
		_iter_end_1dad6a685:;
	};
	return _25313_items;
}



inline jule::Ptr<_204ed3130_TypeEnum> _204eca1c1_buildTypeEnum(jule::Ptr<_20435acd3_TypeEnumDecl> _26022_decl) {
	return jule::new_ptr<_204ed3130_TypeEnum>(_204ed3130_TypeEnum{._field_Token=_26022_decl.get()._field_Token, ._field_Public=_26022_decl.get()._field_Public, ._field_Ident=_26022_decl.get()._field_Ident, ._field_Items=_204eca08e_buildTypeEnumItems(_26022_decl.get()._field_Items)});
}



inline jule::Ptr<_205031cb6_Var> _204eca303_buildVar(jule::Ptr<_204353ec9_VarDecl> _26917_decl) {
	return jule::new_ptr<_205031cb6_Var>(_205031cb6_Var{._field_Token=_26917_decl.get()._field_Token, ._field_Ident=_26917_decl.get()._field_Ident, ._field_CppLinked=_26917_decl.get()._field_CppLinked, ._field_Constant=_26917_decl.get()._field_Constant, ._field_Mutable=_26917_decl.get()._field_Mutable, ._field_Public=_26917_decl.get()._field_Public, ._field_Statically=_26917_decl.get()._field_Statically, ._field_Reference=_26917_decl.get()._field_Reference, ._field_Kind=_204ec890b_buildType(_26917_decl.get()._field_Kind), ._field_Value=_204ec8a3d_buildExpr(_26917_decl.get()._field_Expr), ._field_Refers=static__204ec8114_new(), ._field_Directives=_26917_decl.get()._field_Directives, });
}



inline jule::Slice<jule::Ptr<_205031cb6_Var>> _204eca435_buildVars(jule::Slice<jule::Ptr<_204353ec9_VarDecl>> _28618_decls) {
	jule::Slice<jule::Ptr<_205031cb6_Var>> _28713_vars = jule::Slice<jule::Ptr<_205031cb6_Var>>::alloc(0LL,_28618_decls.len());;
	{
		auto &expr = _28618_decls;
		auto it = expr.begin();
		_iter_begin_1dad6dc0a:;
		if (it != expr.end()) {
			jule::Ptr<_204353ec9_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_204eca303_buildVar(_28817_decl));;
			}
			_iter_next_1dad6dc0a:;
			++it;
			goto _iter_begin_1dad6dc0a;
		}
		_iter_end_1dad6dc0a:;
	};
	return _28713_vars;
}



inline jule::Ptr<_204ed75da_Impl> _204eca567_buildImpl(jule::Ptr<_20435c499_Impl> _29418_decl) {
	return jule::new_ptr<_204ed75da_Impl>(_204ed75da_Impl{._field_Base=_29418_decl.get()._field_Base, ._field_Dest=_29418_decl.get()._field_Dest, ._field_Methods=_204ec9621_buildMethods(_29418_decl.get()._field_Methods), ._field_Statics=_204eca435_buildVars(_29418_decl.get()._field_Statics)});
}



inline jule::Bool _204ed6980_matchConstraint(jule::Str& _14221_c, jule::Ptr<_2050aa8de_TypeKind>& _14234_g) {
	{
		auto &_match_expr{ _14221_c };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1dadd40c2:;
			{
				jule::Ptr<_2050b03b6_Prim> _14513_prim = _2050aca01_Prim(_14234_g.ptr());;
				if ((_14513_prim == nullptr)) {
					return false;
				};
				return _204ebe69e_IsSigNum(_14513_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1dadd4138:;
			{
				jule::Ptr<_2050b03b6_Prim> _15113_prim = _2050aca01_Prim(_14234_g.ptr());;
				if ((_15113_prim == nullptr)) {
					return false;
				};
				return _204ebe1c6_IsUnsigInt(_15113_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1dadd419e:;
			{
				jule::Ptr<_2050b03b6_Prim> _15713_prim = _2050aca01_Prim(_14234_g.ptr());;
				if ((_15713_prim == nullptr)) {
					return false;
				};
				return _204ebe43a_IsFloat(_15713_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1dadd4215:;
			{
				jule::Ptr<_2050b03b6_Prim> _16313_prim = _2050aca01_Prim(_14234_g.ptr());;
				if ((_16313_prim == nullptr)) {
					return false;
				};
				return _204ebe56c_IsNum(_16313_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1dadd438b:;
			{
				return _2050abcdb_Mutable(_14234_g.ptr());
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1dadd4402:;
			{
				return (!(_2050abcdb_Mutable(_14234_g.ptr())));
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1dadd4468:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1dadd44ce:;
			{
				jule::Ptr<_2050b03b6_Prim> _17513_prim = _2050aca01_Prim(_14234_g.ptr());;
				if ((_17513_prim != nullptr)) {
					return (_204ebe56c_IsNum(_17513_prim.get()._field_Kind) || _2050b35ea_IsStr(_17513_prim.ptr()));
				};
				if ((_2050acec9_Ptr(_14234_g.ptr()) != nullptr)) {
					return true;
				};
				jule::Ptr<_20435cc5d_StructIns> _18213_s = _2050ade53_Struct(_14234_g.ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));
				};
				jule::Ptr<_204ed1a35_Enum> _18913_enm = _2050ad23d_Enum(_14234_g.ptr());;
				if ((_18913_enm != nullptr)) {
					return _204ebe56c_IsNum(_2050aacda_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));
				};
				return false;
			}
		}
		else {
			_case_begin_1dadd3467:;
			{
				return false;
			}
		}
		_match_end_1dadd3313:;
	};
}



inline jule::Bool _204ed6c6b_isBuiltinConstraint(jule::Str& _19925_ident) {
	{
		auto &expr = _204ed4e01_builtinConstraints;
		auto it = expr.begin();
		_iter_begin_1daddde45:;
		if (it != expr.end()) {
			jule::Str &_20012_bc = *it;
			{
				if ((_19925_ident == _20012_bc)) {
					return true;
				};
			}
			_iter_next_1daddde45:;
			++it;
			goto _iter_begin_1daddde45;
		}
		_iter_end_1daddde45:;
	};
	return false;
}



inline jule::Ptr<_204ee42a6_scopeChecker> _204ed9675_newScopeCheckerBase(jule::Ptr<_205014062_Sema>& _5829_s, jule::Ptr<_204ec7454_FnIns> _5843_owner) {
	return jule::new_ptr<_204ee42a6_scopeChecker>(_204ee42a6_scopeChecker{._field_s=_5829_s, ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_205074eb3_SymbolTable>(), });
}



inline jule::Ptr<_204ee42a6_scopeChecker> _204ed9a0a_newScopeChecker(jule::Ptr<_205014062_Sema>& _6625_s, jule::Ptr<_204ec7454_FnIns> _6639_owner) {
	jule::Ptr<_204ee42a6_scopeChecker> _6713_base = _204ed9675_newScopeCheckerBase(_6625_s,_6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_204ee301e_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_204ee3492_scopeGoto>>>(nullptr);
	return _6713_base;
}



inline jule::Ptr<_204ee301e_scopeLabel> _204ed9d4b_findLabelParent(jule::Str _7620_ident, jule::Ptr<_204ee42a6_scopeChecker> _7636_scope) {
	jule::Ptr<_204ee301e_scopeLabel> _7713_label = _204ee7c49_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_204ee7c49_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_1dae059c8:;
	}
	_iter_end_1dae059c8:;;
	return _7713_label;
}



inline jule::Bool _204eda1d1_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_204edc645_Scope>& _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type_is<jule::Ptr<_204ec21a7_FnCallExprModel>>()) {
			_case_begin_1dae07326:;
			{
				jule::Ptr<_204ec21a7_FnCallExprModel> _9313_fcem = _9021_Model.operator jule::Ptr<_204ec21a7_FnCallExprModel>();;
				if ((_9313_fcem.get()._field_Except == _9034_sc)) {
					return true;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20507eb49_Data>>()) {
			_case_begin_1dae0739d:;
			{
				jule::Ptr<_20507eb49_Data> _9813_d = _9021_Model.operator jule::Ptr<_20507eb49_Data>();;
				return _204eda1d1_modelIsGotoScope(jule::Any(_9813_d.get()._field_Model),_9034_sc);
			}
		}
		_match_end_1dae05d08:;
	};
	return false;
}



inline jule::Bool _204eda522_stmtIsGotoScope(jule::Any& _10421_stmt, jule::Ptr<_204edc645_Scope>& _10434_sc) {
	{
		auto &_match_expr{ _10421_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_204edc645_Scope>>()) {
			_case_begin_1dae0956a:;
			{
				return (_10421_stmt.operator jule::Ptr<_204edc645_Scope>() == _10434_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204edd48c_InfIter>>()) {
			_case_begin_1dae095d1:;
			{
				return (_10421_stmt.operator jule::Ptr<_204edd48c_InfIter>().get()._field_Scope == _10434_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ede2e5_RangeIter>>()) {
			_case_begin_1dae09647:;
			{
				jule::Ptr<_204ede2e5_RangeIter> _11113_it = _10421_stmt.operator jule::Ptr<_204ede2e5_RangeIter>();;
				return ((_11113_it.get()._field_Scope == _10434_sc) || _204eda1d1_modelIsGotoScope(jule::Any(_11113_it.get()._field_Expr.get()._field_Model),_10434_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204edd910_WhileIter>>()) {
			_case_begin_1dae096ad:;
			{
				jule::Ptr<_204edd910_WhileIter> _11413_it = _10421_stmt.operator jule::Ptr<_204edd910_WhileIter>();;
				return (((_11413_it.get()._field_Scope == _10434_sc) || _204eda1d1_modelIsGotoScope(jule::Any(_11413_it.get()._field_Expr),_10434_sc)) || _204eda1d1_modelIsGotoScope(jule::Any(_11413_it.get()._field_Next),_10434_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ee1391_Match>>()) {
			_case_begin_1dae09834:;
			{
				jule::Ptr<_204ee1391_Match> _11913_m = _10421_stmt.operator jule::Ptr<_204ee1391_Match>();;
				{
					auto &expr = _11913_m.get()._field_Cases;
					auto it = expr.begin();
					_iter_begin_1dae0d618:;
					if (it != expr.end()) {
						jule::Ptr<_204ee1ddb_Case> &_12016_c = *it;
						{
							if ((_12016_c.get()._field_Scope == _10434_sc)) {
								return true;
							};
							{
								auto &expr = _12016_c.get()._field_Exprs;
								auto it = expr.begin();
								_iter_begin_1dae0e4b5:;
								if (it != expr.end()) {
									jule::Ptr<_20507eb49_Data> &_12420_expr = *it;
									{
										if (_204eda1d1_modelIsGotoScope(jule::Any(_12420_expr.get()._field_Model),_10434_sc)) {
											return true;
										};
									}
									_iter_next_1dae0e4b5:;
									++it;
									goto _iter_begin_1dae0e4b5;
								}
								_iter_end_1dae0e4b5:;
							};
						}
						_iter_next_1dae0d618:;
						++it;
						goto _iter_begin_1dae0d618;
					}
					_iter_end_1dae0d618:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == _10434_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204edd1a1_Conditional>>()) {
			_case_begin_1dae0989a:;
			{
				jule::Ptr<_204edd1a1_Conditional> _13213_c = _10421_stmt.operator jule::Ptr<_204edd1a1_Conditional>();;
				{
					auto &expr = _13213_c.get()._field_Elifs;
					auto it = expr.begin();
					_iter_begin_1dae10d79:;
					if (it != expr.end()) {
						jule::Ptr<_204edca41_If> &_13316_elif = *it;
						{
							if (((_13316_elif.get()._field_Scope == _10434_sc) || _204eda1d1_modelIsGotoScope(jule::Any(_13316_elif.get()._field_Expr),_10434_sc))) {
								return true;
							};
						}
						_iter_next_1dae10d79:;
						++it;
						goto _iter_begin_1dae10d79;
					}
					_iter_end_1dae10d79:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == _10434_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20507eb49_Data>>()) {
			_case_begin_1dae09911:;
			{
				jule::Ptr<_20507eb49_Data> _14013_d = _10421_stmt.operator jule::Ptr<_20507eb49_Data>();;
				return _204eda1d1_modelIsGotoScope(jule::Any(_14013_d.get()._field_Model),_10434_sc);
			}
		}
		else {
			_case_begin_1dae07832:;
			{
				return false;
			}
		}
		_match_end_1dae07733:;
	};
}



inline jule::I64 _204eda863_countMatchType(jule::Ptr<_204ee1391_Match>& _14720_m, jule::Ptr<_2050aa8de_TypeKind>& _14732_t) {
	jule::I64 _14813_n = 0LL;;
	jule::Str _1499_kind = _2050aacda_Str(_14732_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14720_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1dae136d9:;
		if (it != expr.end()) {
			jule::Ptr<_204ee1ddb_Case> &_15112_c = *it;
			{
				if ((_15112_c == nullptr)) {
					goto _iter_next_1dae136d9;
				};
				{
					auto &expr = _15112_c.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1dae14c6d:;
					if (it != expr.end()) {
						jule::Ptr<_20507eb49_Data> &_15616_expr = *it;
						{
							if ((_15616_expr == nullptr)) {
								goto _iter_end_1dae136d9;
							};
							if ((_1499_kind == _2050aacda_Str(_15616_expr.get()._field_Model.operator jule::Ptr<_2050aa8de_TypeKind>().ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_1dae14c6d:;
						++it;
						goto _iter_begin_1dae14c6d;
					}
					_iter_end_1dae14c6d:;
				};
			}
			_iter_next_1dae136d9:;
			++it;
			goto _iter_begin_1dae136d9;
		}
		_iter_end_1dae136d9:;
	};
	return _14813_n;
}



inline jule::Slice<jule::Ptr<_20507eb49_Data>> _204edab0a_getDatasFromTupleData(jule::Ptr<_20507eb49_Data>& _17131_d) {
	if ((_2050ae690_Tup(_17131_d.get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17131_d.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_204ec3dce_TupleExprModel>>()) {
				_case_begin_1dae18c0b:;
				{
					return _17131_d.get()._field_Model.operator jule::Ptr<_204ec3dce_TupleExprModel>().get()._field_Datas;
				}
			}
			else {
				_case_begin_1dae16533:;
				{
					jule::Ptr<_2050b5135_Tuple> _17721_t = _2050ae690_Tup(_17131_d.get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_20507eb49_Data>> _17821_r = jule::Slice<jule::Ptr<_20507eb49_Data>>::alloc(0LL,_17721_t.get()._field_Types.len());;
					{
						auto &expr = _17721_t.get()._field_Types;
						auto it = expr.begin();
						_iter_begin_1dae17666:;
						if (it != expr.end()) {
							jule::Ptr<_2050aa8de_TypeKind> _17925_kind = *it;
							{
								_17821_r = jule::alloc_for_append(_17821_r,1);_17821_r.__push(jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=_17925_kind, ._field_Mutable=true, }));;
							}
							_iter_next_1dae17666:;
							++it;
							goto _iter_begin_1dae17666;
						}
						_iter_end_1dae17666:;
					};
					return _17821_r;
				}
			}
			_match_end_1dae1670e:;
		};
	} else {
		return jule::Slice<jule::Ptr<_20507eb49_Data>>::make({_17131_d});
	};
}



inline jule::Bool _204edb446_checkMut(jule::Ptr<_205014062_Sema>& _20618_s, jule::Ptr<_20507eb49_Data>& _20629_left, jule::Ptr<_20507eb49_Data> _20646_right, jule::Ptr<_202b89679_Token> _20660_op) {
	jule::Bool _20674_ok = jule::Bool();
	{
		
		if ((!(_20629_left.get()._field_Mutable))) {
			_case_begin_1dae1c3d5:;
			{
				_205016c24_pushErr(_20618_s.ptr(), _20660_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_20674_ok = false;
				return _20674_ok;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _2050abcdb_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_1dae1c517:;
			{
				if (((_20660_op.get()._field_Kind != jule::Str("=", 1)) && (_2050ade53_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					_20674_ok = true;
					return _20674_ok;
				};
				_205016c24_pushErr(_20618_s.ptr(), _20660_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_20646_right.get()._field_Kind.ptr()))}));
				_20674_ok = false;
				return _20674_ok;
			}
		}
		else {
			_case_begin_1dae1bca8:;
			{
				_20674_ok = true;
				return _20674_ok;
			}
		}
		_match_end_1dae1bbcb:;
	};
}



inline jule::Bool _204edb8ca_checkAssign(jule::Ptr<_205014062_Sema>& _22521_s, jule::Ptr<_20507eb49_Data>& _22536_left, jule::Ptr<_20507eb49_Data> _22553_right, jule::Ptr<_202b89679_Token> _22567_op) {
	jule::Bool _22581_ok = jule::Bool();
	jule::Ptr<_204ec7454_FnIns> _2269_f = _2050adbde_Fn(_22536_left.get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_205016c24_pushErr(_22521_s.ptr(), _22567_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_22581_ok = false;
		return _22581_ok;
	};
	{
		
		if (_20508050c_IsConst(_22536_left.ptr())) {
			_case_begin_1dae2295c:;
			{
				_205016c24_pushErr(_22521_s.ptr(), _22567_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_205017043_pushSugggestion(_22521_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_22581_ok = false;
				return _22581_ok;
			}
		}
		else if ((!(_22536_left.get()._field_Lvalue))) {
			_case_begin_1dae22a5b:;
			{
				_205016c24_pushErr(_22521_s.ptr(), _22567_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_22581_ok = false;
				return _22581_ok;
			}
		}
		else if ((!(_204edb446_checkMut(_22521_s,_22536_left,_22553_right,_22567_op)))) {
			_case_begin_1dae22ad3:;
			{
				_22581_ok = false;
				return _22581_ok;
			}
		}
		else {
			_case_begin_1dae2230d:;
			{
				_22581_ok = true;
				return _22581_ok;
			}
		}
		_match_end_1dae221a9:;
	};
}



inline jule::Bool _204edbb72_isValidAstStForNextSt(jule::Any& _24731_n) {
	{
		auto &_match_expr{ _24731_n };
		
		if (_match_expr.type_is<jule::Ptr<_204350008_AssignSt>>()) {
			_case_begin_1dae24ec0:;
			{
				return (!(_24731_n.operator jule::Ptr<_204350008_AssignSt>().get()._field_Declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204345a8c_Expr>>()) {
			_case_begin_1dae25036:;
			{
				return true;
			}
		}
		else {
			_case_begin_1dae2460c:;
			{
				return false;
			}
		}
		_match_end_1dae24b18:;
	};
}



inline jule::Bool _204edbe19_isValidStForNextSt(jule::Any& _25824_st) {
	{
		auto &_match_expr{ _25824_st };
		
		if (_match_expr.type_is<jule::Ptr<_204ee0527_Postfix>>() || _match_expr.type_is<jule::Ptr<_204ee099a_Assign>>() || _match_expr.type_is<jule::Ptr<_204ee0d52_MultiAssign>>()) {
			_case_begin_1dae26136:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20507eb49_Data>>()) {
			_case_begin_1dae2619c:;
			{
				{
					auto &_match_expr{ _25824_st.operator jule::Ptr<_20507eb49_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_204ec21a7_FnCallExprModel>>()) {
						_case_begin_1dae27544:;
						{
							return true;
						}
					}
					else {
						_case_begin_1dae26d5c:;
						{
							return false;
						}
					}
					_match_end_1dae26b1a:;
				};
			}
		}
		else {
			_case_begin_1dae25278:;
			{
				return false;
			}
		}
		_match_end_1dae25212:;
	};
}



inline jule::Bool _204edc1b1_stmtIsDef(jule::Any& _27615_st) {
	{
		auto &_match_expr{ _27615_st };
		
		if (_match_expr.type_is<jule::Ptr<_205031cb6_Var>>()) {
			_case_begin_1dae27b0a:;
			{
				return true;
			}
		}
		else {
			_case_begin_1dae264dd:;
			{
				return false;
			}
		}
		_match_end_1dae26488:;
	};
}



inline jule::Ptr<_205031cb6_Var> _20500862d_findVarInPackage(jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>& _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto &expr = _4626_files;
		auto it = expr.begin();
		_iter_begin_1db08d831:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_205031cb6_Var> _4817_v = _205075b95_FindVar(_4717_f.ptr(), _4649_ident,_4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_1db08d831:;
			++it;
			goto _iter_begin_1db08d831;
		}
		_iter_end_1db08d831:;
	};
	return nullptr;
}



inline jule::Ptr<_2050a9beb_TypeAlias> _205008a5c_findTypeAliasInPackage(jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>& _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto &expr = _5832_files;
		auto it = expr.begin();
		_iter_begin_1db08e799:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_2050a9beb_TypeAlias> _6017_ta = _20507604c_FindTypeAlias(_5917_f.ptr(), _5855_ident,_5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_1db08e799:;
			++it;
			goto _iter_begin_1db08e799;
		}
		_iter_end_1db08e799:;
	};
	return nullptr;
}



inline jule::Ptr<_20433367e_Struct> _205008e47_findStructInPackage(jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>& _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto &expr = _7029_files;
		auto it = expr.begin();
		_iter_begin_1db090e0a:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_20433367e_Struct> _7217_s = _205076404_FindStruct(_7117_f.ptr(), _7052_ident,_7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_1db090e0a:;
			++it;
			goto _iter_begin_1db090e0a;
		}
		_iter_end_1db090e0a:;
	};
	return nullptr;
}



inline jule::Ptr<_204ec707a_Fn> _2050093a9_findFnInPackage(jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>& _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto &expr = _8225_files;
		auto it = expr.begin();
		_iter_begin_1db09256b:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_204ec707a_Fn> _8417_f = _2050767ab_FindFn(_8317_file.ptr(), _8248_ident,_8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_1db09256b:;
			++it;
			goto _iter_begin_1db09256b;
		}
		_iter_end_1db09256b:;
	};
	return nullptr;
}



inline jule::Ptr<_204ece8e0_Trait> _2050096b7_findTraitInPackage(jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>& _9428_files, jule::Str _9451_ident) {
	{
		auto &expr = _9428_files;
		auto it = expr.begin();
		_iter_begin_1db0933d5:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_204ece8e0_Trait> _9617_t = _20507b926_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_1db0933d5:;
			++it;
			goto _iter_begin_1db0933d5;
		}
		_iter_end_1db0933d5:;
	};
	return nullptr;
}



inline jule::Ptr<_204ed1a35_Enum> _205009a08_findEnumInPackage(jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>& _10627_files, jule::Str _10650_ident) {
	{
		auto &expr = _10627_files;
		auto it = expr.begin();
		_iter_begin_1db095629:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_204ed1a35_Enum> _10817_e = _20507bc34_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_1db095629:;
			++it;
			goto _iter_begin_1db095629;
		}
		_iter_end_1db095629:;
	};
	return nullptr;
}



inline jule::Ptr<_204ed3130_TypeEnum> _205009d49_findTypeEnumInPackage(jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>& _11831_files, jule::Str _11854_ident) {
	{
		auto &expr = _11831_files;
		auto it = expr.begin();
		_iter_begin_1db096a9d:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_204ed3130_TypeEnum> _12017_e = _20507c042_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;
				};
			}
			_iter_next_1db096a9d:;
			++it;
			goto _iter_begin_1db096a9d;
		}
		_iter_end_1db096a9d:;
	};
	return nullptr;
}



inline jule::Any _20500a344_defByIdentPackage(jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>& _12927_files, jule::Str& _12951_ident, jule::Bool _12963_cppLinked) {
	{
		auto &expr = _12927_files;
		auto it = expr.begin();
		_iter_begin_1db098242:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _20507cdbc_defByIdent(_13017_file.ptr(), _12951_ident,_12963_cppLinked);;
				if ((_13117_def != nullptr)) {
					return jule::Any(_13117_def);
				};
			}
			_iter_next_1db098242:;
			++it;
			goto _iter_begin_1db098242;
		}
		_iter_end_1db098242:;
	};
	return nullptr;
}



inline jule::Bool _205011449_isStdPackage(jule::Str _36117_f, jule::Str _36125_p) {
	return _2027ce8da_HasPrefix(_36117_f,_201840276_Join(jule::Slice<jule::Str>::make({_2028954d9_PathStdlib,_36125_p})));
}



inline jule::Bool _2050121a3_isValidModelForRef(jule::Any& _1228_m) {
	{
		auto &_match_expr{ _1228_m };
		
		if (_match_expr.type_is<jule::Ptr<_205031cb6_Var>>()) {
			_case_begin_1db0aab28:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec343e_StructSubIdentExprModel>>()) {
			_case_begin_1db0aa584:;
			{
				jule::Ptr<_204ec343e_StructSubIdentExprModel> _1717_model = _1228_m.operator jule::Ptr<_204ec343e_StructSubIdentExprModel>();;
				return _2050121a3_isValidModelForRef(_1717_model.get()._field_Expr.get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec3021_TraitSubIdentExprModel>>()) {
			_case_begin_1db0aa5ea:;
			{
				jule::Ptr<_204ec3021_TraitSubIdentExprModel> _2017_model = _1228_m.operator jule::Ptr<_204ec3021_TraitSubIdentExprModel>();;
				return _2050121a3_isValidModelForRef(_2017_model.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec1717_UnaryExprModel>>()) {
			_case_begin_1db0aa661:;
			{
				jule::Ptr<_204ec1717_UnaryExprModel> _2317_unary = _1228_m.operator jule::Ptr<_204ec1717_UnaryExprModel>();;
				if ((_2317_unary.get()._field_Op.get()._field_Kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_2050acec9_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_2050acc65_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;
				};
				return _2050121a3_isValidModelForRef(_2317_unary.get()._field_Expr.get()._field_Model);
			}
		}
		else {
			_case_begin_1db0a9dad:;
			{
				return false;
			}
		}
		_match_end_1db0aa177:;
	};
}



inline _20285b7ad_Log _205012648_compilerErr(jule::Ptr<_202b89679_Token>& _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_20285b7ad_Log _4213_log = _20285b7ad_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_4117_token.get()._field_Row, ._field_Column=_4117_token.get()._field_Column, ._field_Path=_4117_token.get()._field_File.get()._field_Path, ._field_Text=_20285bbed_Logf(_4144_fmt,jule::Any(_4157_args)), };;
	if (_4132_line) {
		_4213_log._field_Line=_202b90be1_GetRow(_4117_token.get()._field_File.ptr(), _4117_token.get()._field_Row);
	};
	return _4213_log;
}



inline jule::Bool _205012989_impIsLookupable(jule::Ptr<_20500ae16_ImportInfo>& _5521_i, jule::Str _5537_ident) {
	if (_5521_i.get()._field_CppLinked) {
		return false;
	};
	if ((!(_5521_i.get()._field_ImportAll))) {
		if ((_5521_i.get()._field_Selected.len() > 0LL)) {
			return _20500d7dc_existIdent(_5521_i.ptr(), _5537_ident);
		};
	};
	return _5521_i.get()._field_ImportAll;
}



inline void _205012c86_appendRetVars(jule::Slice<jule::Ptr<_205031cb6_Var>>& _6723_dest, jule::Ptr<_204ec7454_FnIns>& _6742_f) {
	if ((_2043a5a53_IsVoid(_6742_f.get()._field_Decl.ptr()) || (_6742_f.get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_2050aa8de_TypeKind>> _7213_types = _2043c5237_Types(_6742_f.ptr());;
	{
		auto &expr = _6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1db0b433a:;
		if (it != expr.end()) {
			jule::I64 _7310_i = it - expr.begin();
			jule::Ptr<_202b89679_Token> _7317_ident = *it;
			{
				if ((_202b8be1d_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _202b8c1b5_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1db0b433a;
				};
				_6723_dest = jule::alloc_for_append(_6723_dest,1);_6723_dest.__push(jule::new_ptr<_205031cb6_Var>(_205031cb6_Var{._field_Scope=_6742_f.get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_2050aea47_TypeSymbol>(_2050aea47_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_205080bc2_Value>(_205080bc2_Value{._field_Data=jule::new_ptr<_20507eb49_Data>()}), }));;
			}
			_iter_next_1db0b433a:;
			++it;
			_7310_i++;
			goto _iter_begin_1db0b433a;
		}
		_iter_end_1db0b433a:;
	};
}



inline void _20501303e_appendParamVars(jule::Slice<jule::Ptr<_205031cb6_Var>>& _9325_dest, jule::Ptr<_204ec7454_FnIns>& _9344_f) {
	if ((_9344_f.get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9344_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1db0b5e63:;
		if (it != expr.end()) {
			jule::Ptr<_204ec7267_ParamIns> _9817_p = *it;
			{
				if ((_202b8be1d_IsIgnoreIdent(_9817_p.get()._field_Decl.get()._field_Ident) || _202b8c1b5_IsAnonIdent(_9817_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1db0b5e63;
				};
				jule::Ptr<_205031cb6_Var> _10317_v = jule::new_ptr<_205031cb6_Var>(_205031cb6_Var{._field_Scope=_9344_f.get()._field_Scope, ._field_Token=_9817_p.get()._field_Decl.get()._field_Token, ._field_Ident=_9817_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_9817_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_9817_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_2050aea47_TypeSymbol>(), ._field_Value=jule::new_ptr<_205080bc2_Value>(_205080bc2_Value{._field_Data=jule::new_ptr<_20507eb49_Data>()}), });;
				{
					
					if (_204395b64_IsSelf(_9817_p.get()._field_Decl.ptr())) {
						_case_begin_1db0ba275:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_2050aa4b0_Kind>(_9344_f.get()._field_Owner, 0)});
							_10317_v.get()._field_Reference=(!(_204396e2e_IsRef(_9817_p.get()._field_Decl.ptr())));
							if (_204396e2e_IsRef(_9817_p.get()._field_Decl.ptr())) {
								_10317_v.get()._field_Ident=_10317_v.get()._field_Ident.slice(1LL);
								_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_2050aa4b0_Kind>(jule::new_ptr<_2050b3b4a_Sptr>(_2050b3b4a_Sptr{._field_Elem=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_CppIdent=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_9817_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1db0ba4b7:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_2050aa4b0_Kind>(jule::new_ptr<_2050b45a7_Slc>(_2050b45a7_Slc{._field_Elem=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_CppIdent=_9817_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_9817_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_1db0b7aad:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=_9817_p.get()._field_Kind;
						}
					}
					_match_end_1db0b9bd1:;
				};
				_9325_dest = jule::alloc_for_append(_9325_dest,1);_9325_dest.__push(_10317_v);;
			}
			_iter_next_1db0b5e63:;
			++it;
			goto _iter_begin_1db0b5e63;
		}
		_iter_end_1db0b5e63:;
	};
}



inline void _205013319_appendGenericTypeAliases(jule::Slice<jule::Ptr<_2050a9beb_TypeAlias>>& _15334_dest, jule::Ptr<_204ec7454_FnIns>& _15359_f) {
	jule::I64 _15413_size = _15359_f.get()._field_Generics.len();;
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_15413_size+=_15359_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15413_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15359_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1db0c0742:;
		if (it != expr.end()) {
			jule::I64 _16310_i = it - expr.begin();
			jule::Ptr<_2050a91b2_InsGeneric> _16317_g = *it;
			{
				jule::Ptr<_20434d864_GenericDecl> _16417_decl = _15359_f.get()._field_Decl.get()._field_Generics[_16310_i];;
				_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_2050a9beb_TypeAlias>(_2050a9beb_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16417_decl.get()._field_Token, ._field_Ident=_16417_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_2050aea47_TypeSymbol>(_2050aea47_TypeSymbol{._field_Kind=_16317_g.get()._field_Kind}), }));;
			}
			_iter_next_1db0c0742:;
			++it;
			_16310_i++;
			goto _iter_begin_1db0c0742;
		}
		_iter_end_1db0c0742:;
	};
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_20435cc5d_StructIns> _17617_owner = _15359_f.get()._field_Owner;;
		{
			auto &expr = _17617_owner.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1db0c2326:;
			if (it != expr.end()) {
				jule::I64 _17714_i = it - expr.begin();
				jule::Ptr<_2050a91b2_InsGeneric> _17721_g = *it;
				{
					jule::Ptr<_20434d864_GenericDecl> _17821_decl = _17617_owner.get()._field_Decl.get()._field_Generics[_17714_i];;
					_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_2050a9beb_TypeAlias>(_2050a9beb_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_17821_decl.get()._field_Token, ._field_Ident=_17821_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_2050aea47_TypeSymbol>(_2050aea47_TypeSymbol{._field_Kind=_17721_g.get()._field_Kind}), }));;
				}
				_iter_next_1db0c2326:;
				++it;
				_17714_i++;
				goto _iter_begin_1db0c2326;
			}
			_iter_end_1db0c2326:;
		};
	};
}



inline jule::Ptr<_205074eb3_SymbolTable> _20501366b_findFile(jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>& _19118_files, jule::Ptr<_202b8ea14_File>& _19142_handler) {
	{
		auto &expr = _19118_files;
		auto it = expr.begin();
		_iter_begin_1db0c3b85:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _19217_fl = *it;
			{
				if ((_19217_fl.get()._field_File == _19142_handler)) {
					return _19217_fl;
				};
			}
			_iter_next_1db0c3b85:;
			++it;
			goto _iter_begin_1db0c3b85;
		}
		_iter_end_1db0c3b85:;
	};
	return nullptr;
}



inline void _205013acd_pushSugggestion(_20285b7ad_Log* _20031_log, jule::Str _20042_fmt, jule::Slice<jule::Any> _20055_args) {
	_20031_log->_field_Suggestion=_20285bbed_Logf(_20042_fmt,jule::Any(_20055_args));
}



inline jule::Bool _205053ca5_traitHasReferenceReceiver(jule::Ptr<_204ece8e0_Trait>& _2631_t) {
	{
		auto &expr = _2631_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1db34be0d:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_Statically) {
					goto _iter_next_1db34be0d;
				};
				jule::Ptr<_204ec6d8d_Param> _3313_p = _2712_f.get()._field_Params[0LL];;
				if ((_204396e2e_IsRef(_3313_p.ptr()) && _204395b64_IsSelf(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_1db34be0d:;
			++it;
			goto _iter_begin_1db34be0d;
		}
		_iter_end_1db34be0d:;
	};
	return false;
}



inline jule::Bool _20504a72a_floatAssignable(jule::Str _4120_kind, jule::Ptr<_20507eb49_Data>& _4132_d) {
	jule::Str _429_value = _2048ecc04_FmtFloat(static_cast<jule::F64>(_20446423d_AsF64(_4132_d.get()._field_Constant.ptr())),'g',-1LL,64LL);;
	return _204701145_CheckBitFloat(_429_value,static_cast<jule::I64>(_204504256_BitsizeOf(_4120_kind)));
}



inline jule::Bool _20504a85c_sigAssignable(jule::Str _4618_kind, jule::Ptr<_20507eb49_Data>& _4630_d) {
	jule::F64 _479_min = _2048774b9_Min(_4618_kind);;
	jule::F64 _489_max = _2048802e6_Max(_4618_kind);;
	{
		
		if (_204477240_IsF64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1db351187:;
			{
				jule::F64 _5113_x = _2044623b2_ReadF64(_4630_d.get()._field_Constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _204e8d371_Modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_2044223e9_IsU64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1db3511ed:;
			{
				jule::F64 _5813_x = _20446423d_AsF64(_4630_d.get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_20447788e_IsI64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1db351264:;
			{
				jule::F64 _6313_x = _20446423d_AsF64(_4630_d.get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_1db351044:;
	};
	return false;
}



inline jule::Bool _205062621_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_20507eb49_Data>& _6932_d) {
	jule::F64 _709_max = _2048802e6_Max(_6920_kind);;
	if ((_6932_d.get()._field_IsRune && (_6920_kind == jule::Str("u8", 2)))) {
		return _20504a30c_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_204457561_ReadI64(_6932_d.get()._field_Constant.ptr()))));
	};
	{
		
		if (_204477240_IsF64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1db356742:;
			{
				jule::F64 _7713_x = _2044623b2_ReadF64(_6932_d.get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _204e8d371_Modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_2044223e9_IsU64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1db3567b9:;
			{
				jule::F64 _8713_x = _20446423d_AsF64(_6932_d.get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_20447788e_IsI64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1db356841:;
			{
				jule::F64 _9213_x = _20446423d_AsF64(_6932_d.get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_1db356599:;
	};
	return false;
}



inline jule::Bool _205062753_intAssignable(jule::Str _9818_kind, jule::Ptr<_20507eb49_Data>& _9830_d) {
	{
		
		if (_204ebe094_IsSigInt(_9818_kind)) {
			_case_begin_1db35b6d1:;
			{
				return _20504a85c_sigAssignable(_9818_kind,_9830_d);
			}
		}
		else if (_204ebe1c6_IsUnsigInt(_9818_kind)) {
			_case_begin_1db35ae83:;
			{
				return _205062621_unsigAssignable(_9818_kind,_9830_d);
			}
		}
		else {
			_case_begin_1db35704a:;
			{
				return false;
			}
		}
		_match_end_1db356e6d:;
	};
}



inline jule::Ptr<_2050aa8de_TypeKind> _205074039_lenKind(void) {
	return jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("int", 3)), 6)});
}



inline jule::Ptr<_20430829c_Directive> _2050a508c_findDirective(jule::Slice<jule::Ptr<_20430829c_Directive>>& _408523_directives, jule::Str _408554_d) {
	{
		auto &expr = _408523_directives;
		auto it = expr.begin();
		_iter_begin_1db2353e0:;
		if (it != expr.end()) {
			jule::Ptr<_20430829c_Directive> _408617_dr = *it;
			{
				if ((_408617_dr.get()._field_Tag.get()._field_Kind == _408554_d)) {
					return _408617_dr;
				};
			}
			_iter_next_1db2353e0:;
			++it;
			goto _iter_begin_1db2353e0;
		}
		_iter_end_1db2353e0:;
	};
	return nullptr;
}



inline jule::Any _2050a5422_findBuiltinsImport(jule::Str _409423_ident, jule::Ptr<_20500ae16_ImportInfo> _409435_imp) {
	return jule::Any(_2050d9610_findPackageBuiltinDef(_409435_imp.get()._field_LinkPath,_409423_ident));
}



inline void _2050a5631_fitBitsize(jule::Ptr<_20507eb49_Data>& _410120_d) {
	jule::Ptr<_2050b03b6_Prim> _410213_prim = _2050aca01_Prim(_410120_d.get()._field_Kind.ptr());;
	jule::I64 _41039_z = _204504256_BitsizeOf(_2050b0729_Str(_410213_prim.ptr()));;
	if ((_41039_z == 64LLU)) {
		return;;
	};
	jule::I64 _410813_k = 0LL;;
	{
		
		if (_20447788e_IsI64(_410120_d.get()._field_Constant.ptr())) {
			_case_begin_1db23846a:;
			{
				_410813_k=static_cast<jule::I64>(_2047c735e_BitsizeOfInt(static_cast<jule::I64>(_204457561_ReadI64(_410120_d.get()._field_Constant.ptr()))));
				if ((_410813_k > _41039_z)) {
					_410213_prim.get()._field_Kind=_2045284de_IntFromBits(_410813_k);
				};
			}
		}
		else if (_2044223e9_IsU64(_410120_d.get()._field_Constant.ptr())) {
			_case_begin_1db2384e2:;
			{
				_410813_k=static_cast<jule::I64>(_2047e0102_BitsizeOfUint(static_cast<jule::U64>(_20445874e_ReadU64(_410120_d.get()._field_Constant.ptr()))));
				if ((_410813_k > _41039_z)) {
					_410213_prim.get()._field_Kind=_20453a402_UintFromBits(_410813_k);
				};
			}
		}
		else if (_204477240_IsF64(_410120_d.get()._field_Constant.ptr())) {
			_case_begin_1db238569:;
			{
				_410813_k=static_cast<jule::I64>(_204720d35_BitsizeOfFloat(static_cast<jule::F64>(_2044623b2_ReadF64(_410120_d.get()._field_Constant.ptr()))));
				if ((_410813_k > _41039_z)) {
					_410213_prim.get()._field_Kind=_20456488d_FloatFromBits(_410813_k);
				};
			}
		}
		_match_end_1db23839e:;
	};
}



inline void _2050a592d_makeStructLitAlloc(jule::Ptr<_20507eb49_Data>& _412828_d, jule::Ptr<_204ec1ae1_StructLitExprModel>& _412843_lit) {
	_412828_d.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(jule::new_ptr<_2050b3b4a_Sptr>(_2050b3b4a_Sptr{._field_Elem=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_412843_lit.get()._field_Strct, 0)})}), 7)});
	_412828_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec1ccd_AllocStructLitExprModel>(_204ec1ccd_AllocStructLitExprModel{._field_Lit=_412843_lit}));
}



inline jule::Ptr<_205031cb6_Var> _2050a5c6e_buildErrorVar(jule::Ptr<_204edc645_Scope>& _413923_s, jule::Ptr<_204349a6e_FnCallExpr>& _413939_fc) {
	return jule::new_ptr<_205031cb6_Var>(_205031cb6_Var{._field_Scope=_413923_s, ._field_Token=_413939_fc.get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_2050aea47_TypeSymbol>(_2050aea47_TypeSymbol{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_205080bc2_Value>(_205080bc2_Value{._field_Data=jule::new_ptr<_20507eb49_Data>()}), });
}



inline jule::Any _2050a60b0_findBuiltinsSema(jule::Str _415821_ident, jule::Ptr<_205014062_Sema> _415837_s) {
	{
		auto &expr = _415837_s.get()._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1db23d1d9:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _415917_imp = *it;
			{
				if ((_415917_imp.get()._field_ImportAll || _20500d7dc_existIdent(_415917_imp.ptr(), _415821_ident))) {
					jule::Any _416121_def = _2050a5422_findBuiltinsImport(_415821_ident,_415917_imp);;
					if ((_416121_def != nullptr)) {
						return jule::Any(_416121_def);
					};
				};
			}
			_iter_next_1db23d1d9:;
			++it;
			goto _iter_begin_1db23d1d9;
		}
		_iter_end_1db23d1d9:;
	};
	jule::Str _416913_ppath = _202b9040a_Dir(_415837_s.get()._field_file.get()._field_File.ptr());;
	if (_2027ce8da_HasPrefix(_416913_ppath,_2028954d9_PathStdlib)) {
		(_416913_ppath).mut_slice(_2028954d9_PathStdlib.len());;
		_416913_ppath=(jule::Str("std", 3) + _2027d5627_Replace(_416913_ppath,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
		return jule::Any(_2050d9610_findPackageBuiltinDef(_416913_ppath,_415821_ident));
	};
	return nullptr;
}



inline jule::Bool _2050a6357_isOkForShifting(jule::Ptr<_20507eb49_Data>& _418325_d) {
	if (_20508050c_IsConst(_418325_d.ptr())) {
		{
			
			if (_20447788e_IsI64(_418325_d.get()._field_Constant.ptr())) {
				_case_begin_1db243310:;
				{
					return (_204457561_ReadI64(_418325_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else if (_2044223e9_IsU64(_418325_d.get()._field_Constant.ptr())) {
				_case_begin_1db242aa1:;
				{
					return true;
				}
			}
			else if (_204477240_IsF64(_418325_d.get()._field_Constant.ptr())) {
				_case_begin_1db242b17:;
				{
					return (_2044623b2_ReadF64(_418325_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1db242a3a:;
				{
					return false;
				}
			}
			_match_end_1db24295d:;
		};
	};
	jule::Ptr<_2050b03b6_Prim> _41969_prim = _2050aca01_Prim(_418325_d.get()._field_Kind.ptr());;
	return ((_41969_prim != nullptr) && _204ebe308_IsInt(_2050b0729_Str(_41969_prim.ptr())));
}



inline jule::Bool _2050a670e_isInstancedStruct(jule::Ptr<_20435cc5d_StructIns> _420022_s) {
	return (_420022_s.get()._field_Decl.get()._field_Generics.len() == _420022_s.get()._field_Generics.len());
}



inline jule::Bool _2050a6a72_isPtrArithmeticCompatible(jule::Ptr<_20507eb49_Data>& _420435_l, jule::Ptr<_20507eb49_Data>& _420450_r) {
	jule::Ptr<_2050b71ae_Ptr> _42059_ptr = _2050acec9_Ptr(_420450_r.get()._field_Kind.ptr());;
	if ((_42059_ptr != nullptr)) {
		return _2050ab0e8_Equals(_2050acec9_Ptr(_420435_l.get()._field_Kind.ptr()).get()._field_Elem, _42059_ptr.get()._field_Elem);
	};
	if (_20508050c_IsConst(_420450_r.ptr())) {
		return _205062753_intAssignable(jule::Str("int", 3),_420450_r);
	};
	_205063985_typeCompatibilityChecker _421213_tcc = _205063985_typeCompatibilityChecker{._field_dest=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=_420450_r.get()._field_Kind, };;
	return _20506506e_check(&_421213_tcc);
}



inline void _2050a6cb4_applyCastKindModel(jule::Ptr<_20507eb49_Data>& _422128_d, jule::Ptr<_2050aa8de_TypeKind>& _422143_t) {
	_422128_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec1eba_CastingExprModel>(_204ec1eba_CastingExprModel{._field_Expr=_422128_d.get()._field_Model, ._field_Kind=_422143_t, ._field_ExprKind=_422128_d.get()._field_Kind}));
}



inline void _2050a706c_applyCastKind(jule::Ptr<_20507eb49_Data>& _422923_d, jule::Ptr<_2050aa8de_TypeKind>& _422938_t) {
	_2050a6cb4_applyCastKindModel(_422923_d,_422938_t);
	_422923_d.get()._field_Kind=_422938_t;
}



inline jule::Ptr<_20507eb49_Data> _2050a726a_buildVoidData(void) {
	return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("void", 4)), 6)}), });
}



inline jule::Str _2050a7534_checkDataForIntegerIndexing(jule::Ptr<_20507eb49_Data>& _424237_d) {
	jule::Str _424249_err_fmt = jule::Str();
	if ((_424237_d == nullptr)) {
		_424249_err_fmt = jule::Str();
		return _424249_err_fmt;
	};
	{
		
		if ((_2050aca01_Prim(_424237_d.get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1db24ae72:;
			{
				_424249_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _424249_err_fmt;
			}
		}
		else if ((!(_204ebe308_IsInt(_2050b0729_Str(_2050aca01_Prim(_424237_d.get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1db24aed8:;
			{
				_424249_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _424249_err_fmt;
			}
		}
		else if (_20508050c_IsConst(_424237_d.ptr())) {
			_case_begin_1db24b060:;
			{
				if ((_20446423d_AsF64(_424237_d.get()._field_Constant.ptr()) < 0LL)) {
					_424249_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _424249_err_fmt;
				};
			}
		}
		else if ((_2050aca01_Prim(_424237_d.get()._field_Kind.ptr()) == nullptr) || _20508050c_IsConst(_424237_d.ptr()) || (_2044eca24_RealKindOf(_2050b0729_Str(_2050aca01_Prim(_424237_d.get()._field_Kind.ptr()).ptr())) != _2044eca24_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1db24b0d7:;
			{
				jule::Ptr<_2050aa8de_TypeKind> _425917_t = jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("int", 3)), 6)});;
				_2050a706c_applyCastKind(_424237_d,_425917_t);
			}
		}
		_match_end_1db24a944:;
	};
	_424249_err_fmt = jule::Str();
	return _424249_err_fmt;
}



inline void _2050a77ed_applyCastModelByEnum(jule::Ptr<_20507eb49_Data>& _426830_d, jule::Ptr<_204ed1a35_Enum> _426844_e) {
	if ((_426844_e == nullptr)) {
		return;;
	};
	jule::Ptr<_2050b03b6_Prim> _42729_p = _2050aca01_Prim(_426844_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_2050b35ea_IsStr(_42729_p.ptr())) {
		return;;
	};
	_2050a6cb4_applyCastKindModel(_426830_d,_426844_e.get()._field_Kind.get()._field_Kind);
}



inline void _2050a7aa6_castConstByType(jule::Str& _427921_t, jule::Ptr<_20507eb49_Data>& _427934_d) {
	{
		
		if (_204ebe094_IsSigInt(_427921_t)) {
			_case_begin_1db251dce:;
			{
				{
					auto _match_expr{ _204504256_BitsizeOf(_2044eca24_RealKindOf(_427921_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1db252b05:;
						{
							_2044650eb_SetI64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_204463270_AsI64(_427934_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1db252b6b:;
						{
							_2044650eb_SetI64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_204463270_AsI64(_427934_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1db252bd2:;
						{
							_2044650eb_SetI64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_204463270_AsI64(_427934_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1db252c48:;
						{
							_2044650eb_SetI64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_204463270_AsI64(_427934_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1db252165:;
				};
			}
		}
		else if (_204ebe1c6_IsUnsigInt(_427921_t)) {
			_case_begin_1db251e56:;
			{
				{
					auto _match_expr{ _204504256_BitsizeOf(_2044eca24_RealKindOf(_427921_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1db2565ba:;
						{
							_204477c13_SetU64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_2044573b8_AsU64(_427934_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1db256631:;
						{
							_204477c13_SetU64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_2044573b8_AsU64(_427934_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1db256697:;
						{
							_204477c13_SetU64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_2044573b8_AsU64(_427934_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1db25670d:;
						{
							_204477c13_SetU64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_2044573b8_AsU64(_427934_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1db254981:;
				};
			}
		}
		else if (_204ebe43a_IsFloat(_427921_t)) {
			_case_begin_1db251ecd:;
			{
				{
					auto _match_expr{ _204504256_BitsizeOf(_2044eca24_RealKindOf(_427921_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1db257885:;
						{
							_20447c223_SetF64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_20446423d_AsF64(_427934_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1db25a080:;
						{
							_20447c223_SetF64(_427934_d.get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_20446423d_AsF64(_427934_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1db258446:;
				};
			}
		}
		_match_end_1db251c9c:;
	};
}



inline void _2050a80b2_updateModelToGenericIns(jule::Any& _431333_m, jule::Ptr<_204ec7454_FnIns>& _431352_f) {
	{
		auto &_match_expr{ _431333_m };
		
		if (_match_expr.type_is<jule::Ptr<_204ec7454_FnIns>>()) {
			_case_begin_1db25b1d5:;
			{
				_431333_m=static_cast<jule::Any>(_431352_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec343e_StructSubIdentExprModel>>()) {
			_case_begin_1db25b24b:;
			{
				_431333_m.operator jule::Ptr<_204ec343e_StructSubIdentExprModel>().get()._field_Method=_431352_f;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec362b_StructStaticIdentExprModel>>()) {
			_case_begin_1db25b2b2:;
			{
				_431333_m.operator jule::Ptr<_204ec362b_StructStaticIdentExprModel>().get()._field_Method=_431352_f;
			}
		}
		_match_end_1db253dc0:;
	};
}



inline jule::Bool _2050a8304_pushSubIdentFromExpr(jule::Any _432429_expr, jule::Ptr<_204342281_SubIdentTypeDecl>& _432450_t) {
	{
		auto &_match_expr{ _432429_expr };
		
		if (_match_expr.type_is<jule::Ptr<_20434774d_IdentExpr>>()) {
			_case_begin_1db25da89:;
			{
				jule::Ptr<_20434774d_IdentExpr> _432717_e = _432429_expr.operator jule::Ptr<_20434774d_IdentExpr>();;
				_432450_t.get()._field_Idents = jule::alloc_for_append(_432450_t.get()._field_Idents,1);_432450_t.get()._field_Idents.__push(jule::new_ptr<_204341b32_IdentTypeDecl>(_204341b32_IdentTypeDecl{._field_Token=_432717_e.get()._field_Token, ._field_Ident=_432717_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204348ee1_SubIdentExpr>>()) {
			_case_begin_1db25db00:;
			{
				jule::Ptr<_204348ee1_SubIdentExpr> _433317_e = _432429_expr.operator jule::Ptr<_204348ee1_SubIdentExpr>();;
				if ((!(_2050a8304_pushSubIdentFromExpr(_433317_e.get()._field_Expr.get()._field_Kind,_432450_t)))) {
					return false;
				};
				_432450_t.get()._field_Idents = jule::alloc_for_append(_432450_t.get()._field_Idents,1);_432450_t.get()._field_Idents.__push(jule::new_ptr<_204341b32_IdentTypeDecl>(_204341b32_IdentTypeDecl{._field_Token=_433317_e.get()._field_Ident, ._field_Ident=_433317_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_1db25d3d5:;
			{
				return false;
			}
		}
		_match_end_1db25c68c:;
	};
	return true;
}



inline jule::Bool _2050c22a7_kindUsesGenerics(jule::Any& _157622_k, jule::Slice<jule::Ptr<_20434d864_GenericDecl>>& _157640_generics) {
	{
		auto &expr = _157640_generics;
		auto it = expr.begin();
		_iter_begin_1db71322a:;
		if (it != expr.end()) {
			jule::Ptr<_20434d864_GenericDecl> &_157712_g = *it;
			{
				if (static__2050c1dab_exist(_157712_g.get()._field_Ident,_157622_k)) {
					return true;
				};
			}
			_iter_next_1db71322a:;
			++it;
			goto _iter_begin_1db71322a;
		}
		_iter_end_1db71322a:;
	};
	return false;
}



inline jule::Bool _2050c263c_hasDirective(jule::Slice<jule::Ptr<_20430829c_Directive>>& _158622_directives, jule::Str _158653_tag) {
	{
		auto &expr = _158622_directives;
		auto it = expr.begin();
		_iter_begin_1db7137be:;
		if (it != expr.end()) {
			jule::Ptr<_20430829c_Directive> _158717_dr = *it;
			{
				if ((_158717_dr.get()._field_Tag.get()._field_Kind == _158653_tag)) {
					return true;
				};
			}
			_iter_next_1db7137be:;
			++it;
			goto _iter_begin_1db7137be;
		}
		_iter_end_1db7137be:;
	};
	return false;
}



inline jule::Bool _2050c28d4_canGetPtr(jule::Ptr<_20507eb49_Data>& _159519_d) {
	if (((!(_159519_d.get()._field_Lvalue)) || _20508050c_IsConst(_159519_d.ptr()))) {
		return false;
	};
	{
		
		if (((_2050adbde_Fn(_159519_d.get()._field_Kind.ptr()) != nullptr) || (_2050ad23d_Enum(_159519_d.get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1db7161c8:;
			{
				return false;
			}
		}
		else {
			_case_begin_1db715925:;
			{
				return true;
			}
		}
		_match_end_1db7158c0:;
	};
}



inline jule::Bool _2050c2c03_isValidForSptrType(jule::Ptr<_2050aa8de_TypeKind>& _160828_t) {
	jule::Ptr<_20435cc5d_StructIns> _160913_s = _2050ade53_Struct(_160828_t.ptr());;
	if ((((_160913_s != nullptr) && (_160913_s.get()._field_Decl != nullptr)) && _160913_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;
	};
	return true;
}



inline jule::Bool _2050c2e9a_isValidForRef(jule::Ptr<_2050aa8de_TypeKind>& _161723_t) {
	return (_2050adbde_Fn(_161723_t.ptr()) == nullptr);
}



inline jule::Bool _2050c3264_isBuiltinStrConvertable(jule::Ptr<_2050aa8de_TypeKind>& _162033_t) {
	return (((!(_2050aba77_Void(_162033_t.ptr()))) && (_2050adbde_Fn(_162033_t.ptr()) == nullptr)) && (_2050ae690_Tup(_162033_t.ptr()) == nullptr));
}



inline jule::Str _2050c34d9_buildLinkPathByTokens(jule::Slice<jule::Ptr<_202b89679_Token>>& _162427_tokens) {
	jule::Str _162513_s = _162427_tokens[0LL].get()._field_Kind;;
	{
		auto expr = _162427_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1db71a3db:;
		if (it != expr.end()) {
			jule::Ptr<_202b89679_Token> &_162612_token = *it;
			{
				_162513_s+=jule::Str("::", 2);
				_162513_s+=_162612_token.get()._field_Kind;
			}
			_iter_next_1db71a3db:;
			++it;
			goto _iter_begin_1db71a3db;
		}
		_iter_end_1db71a3db:;
	};
	return _162513_s;
}



inline jule::Ptr<_2050b03b6_Prim> _2050c3891_buildPrimType(jule::Str _163318_kind) {
	return jule::new_ptr<_2050b03b6_Prim>(_2050b03b6_Prim{._field_Kind=_163318_kind});
}



inline jule::Ptr<_20433367e_Struct> _2050c3b38_getStructFromKind(jule::Ptr<_2050aa8de_TypeKind> _163926_k) {
	{
		
		if ((_163926_k == nullptr)) {
			_case_begin_1db71b6c8:;
			{
				return nullptr;
			}
		}
		else if ((_2050ade53_Struct(_163926_k.ptr()) != nullptr)) {
			_case_begin_1db71b73e:;
			{
				return _2050ade53_Struct(_163926_k.ptr()).get()._field_Decl;
			}
		}
		else if ((_2050acc65_Sptr(_163926_k.ptr()) != nullptr)) {
			_case_begin_1db71b7a5:;
			{
				return _2050c3b38_getStructFromKind(_2050acc65_Sptr(_163926_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_2050ad97a_Slc(_163926_k.ptr()) != nullptr)) {
			_case_begin_1db71b81b:;
			{
				return _2050c3b38_getStructFromKind(_2050ad97a_Slc(_163926_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_2050ad716_Arr(_163926_k.ptr()) != nullptr)) {
			_case_begin_1db71bae6:;
			{
				return _2050c3b38_getStructFromKind(_2050ad716_Arr(_163926_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_2050acec9_Ptr(_163926_k.ptr()) != nullptr)) {
			_case_begin_1db71bb5c:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1db71b662:;
			{
				return nullptr;
			}
		}
		_match_end_1db71b3ed:;
	};
}



inline jule::Bool _2050c3dd0_isPrim(jule::Str _166211_kind) {
	return ((((((((((((((((_166211_kind == jule::Str("i8", 2)) || (_166211_kind == jule::Str("i16", 3))) || (_166211_kind == jule::Str("i32", 3))) || (_166211_kind == jule::Str("i64", 3))) || (_166211_kind == jule::Str("u8", 2))) || (_166211_kind == jule::Str("u16", 3))) || (_166211_kind == jule::Str("u32", 3))) || (_166211_kind == jule::Str("u64", 3))) || (_166211_kind == jule::Str("f32", 3))) || (_166211_kind == jule::Str("f64", 3))) || (_166211_kind == jule::Str("int", 3))) || (_166211_kind == jule::Str("uint", 4))) || (_166211_kind == jule::Str("uintptr", 7))) || (_166211_kind == jule::Str("bool", 4))) || (_166211_kind == jule::Str("str", 3))) || (_166211_kind == jule::Str("any", 3)));
}



inline void _2050c4188_applyImplicitCast(jule::Ptr<_2050aa8de_TypeKind>& _168127_dest, jule::Ptr<_20507eb49_Data>& _168149_d) {
	if (_2050ab813_IsNil(_168149_d.get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_2050b03b6_Prim> _16859_destPrim = _2050aca01_Prim(_168127_dest.ptr());;
	jule::Ptr<_2050b03b6_Prim> _16869_prim = _2050aca01_Prim(_168149_d.get()._field_Kind.ptr());;
	if ((_16859_destPrim != nullptr)) {
		if (_2050b385e_IsAny(_16859_destPrim.ptr())) {
			_2050a706c_applyCastKind(_168149_d,_168127_dest);
			return;;
		};
		if (((((((!(_2050ab59e_CppLinked(_168149_d.get()._field_Kind.ptr()))) && (!(_168149_d.get()._field_Kind.get()._field_Variadic))) && (!(_168149_d.get()._field_Lvalue))) && (!(_20508050c_IsConst(_168149_d.ptr())))) && (_16869_prim != nullptr)) && _204ebe56c_IsNum(_16869_prim.get()._field_Kind))) {
			_2050a706c_applyCastKind(_168149_d,_168127_dest);
		};
		return;;
	};
	if (((_2050ae1b7_Trait(_168127_dest.ptr()) != nullptr) && (_2050ae1b7_Trait(_168149_d.get()._field_Kind.ptr()) == nullptr))) {
		_2050a6cb4_applyCastKindModel(_168149_d,_168127_dest);
		return;;
	};
	if (((_2050ad4a2_TypeEnum(_168127_dest.ptr()) != nullptr) && (_2050ad4a2_TypeEnum(_168149_d.get()._field_Kind.ptr()) == nullptr))) {
		_2050a6cb4_applyCastKindModel(_168149_d,_168127_dest);
		return;;
	};
}



inline std::tuple<jule::Ptr<_205074eb3_SymbolTable>,jule::Slice<_20285b7ad_Log>> _2050c7202_buildSymbols(jule::Ptr<_204307202_Ast>& _1622_ast, jule::Trait<_205008298_Importer>& _1638_importer, jule::Ptr<_204eca699_symbolBuilder> _1662_owner) {
	jule::Ptr<_204eca699_symbolBuilder> _1713_sb = jule::new_ptr<_204eca699_symbolBuilder>(_204eca699_symbolBuilder{._field_owner=_1662_owner, ._field_importer=_1638_importer, ._field_ast=_1622_ast, });;
	_204ecddb7_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1713_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1713_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_20500dd70_Package>,jule::Slice<_20285b7ad_Log>> _2050c7631_analyzePackage(jule::Slice<jule::Ptr<_204307202_Ast>>& _3024_files, jule::Trait<_205008298_Importer>& _3044_importer, jule::I64& _3065_flags) {
	jule::Slice<jule::Ptr<_205074eb3_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_205074eb3_SymbolTable>>::alloc(0LL,_3024_files.len());;
	{
		auto &expr = _3024_files;
		auto it = expr.begin();
		_iter_begin_1db82c025:;
		if (it != expr.end()) {
			jule::Ptr<_204307202_Ast> _3317_f = *it;
			{
				jule::Ptr<_205074eb3_SymbolTable> _3418_table;;
				jule::Slice<_20285b7ad_Log> _3429_errors;;
				std::tie(_3418_table,_3429_errors) = _2050c7202_buildSymbols(_3317_f,_3044_importer,nullptr);
				if ((_3429_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3429_errors);
				};
				_3213_tables = jule::alloc_for_append(_3213_tables,1);_3213_tables.__push(_3418_table);;
			}
			_iter_next_1db82c025:;
			++it;
			goto _iter_begin_1db82c025;
		}
		_iter_end_1db82c025:;
	};
	jule::Ptr<_205014062_Sema> _4113_sema = jule::new_ptr<_205014062_Sema>(_205014062_Sema{._field_flags=_3065_flags});;
	_20502dcd5_check(_4113_sema, _3213_tables);
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4113_sema.get()._field_errors);
	};
	jule::Ptr<_20500dd70_Package> _4913_pkg = jule::new_ptr<_20500dd70_Package>(_20500dd70_Package{._field_Files=_4113_sema.get()._field_files});;
	return std::make_tuple(_4913_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_20500dd70_Package>,jule::Slice<_20285b7ad_Log>> _2050c7a1b_AnalyzePackage(jule::Slice<jule::Ptr<_204307202_Ast>> _7323_files, jule::Trait<_205008298_Importer> _7342_importer, jule::I64 _7362_flags) {
	if ((_7323_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_20500dd70_Package> _7714_package;;
	jule::Slice<_20285b7ad_Log> _7727_logs;;
	std::tie(_7714_package,_7727_logs) = _2050c7631_analyzePackage(_7323_files,_7342_importer,_7362_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_204ec7454_FnIns> _2050d3b48_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1db836b78:;
			{
				static jule::Ptr<_204ec7454_FnIns> _2620_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_205167072_builtinCallerOut), });;
				return _2620_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1db836bde:;
			{
				static jule::Ptr<_204ec7454_FnIns> _2920_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_20516745c_builtinCallerOutln), });;
				return _2920_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1db836e31:;
			{
				static jule::Ptr<_204ec7454_FnIns> _3220_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_205167847_builtinCallerNew), });;
				return _3220_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1db836e97:;
			{
				static jule::Ptr<_204ec7454_FnIns> _3520_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_205167c32_builtinCallerPanic), });;
				return _3520_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1db83700d:;
			{
				static jule::Ptr<_204ec7454_FnIns> _3820_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_20516834d_builtinCallerMake), });;
				return _3820_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1db837074:;
			{
				static jule::Ptr<_204ec7454_FnIns> _4120_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_205168738_builtinCallerAppend), });;
				return _4120_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1db8370da:;
			{
				static jule::Ptr<_204ec7454_FnIns> _4420_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_20516953b_builtinCallerCopy), });;
				return _4420_f;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1db837162:;
			{
				static jule::Ptr<_204ec7454_FnIns> _4720_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_20516a73a_builtinCallerLen), });;
				return _4720_f;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1db83721c:;
			{
				static jule::Ptr<_204ec7454_FnIns> _5020_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_20516b2a7_builtinCallerCap), });;
				return _5020_f;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_1db837283:;
			{
				static jule::Ptr<_204ec7454_FnIns> _5320_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_20516bb26_builtinCallerDelete), });;
				return _5320_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1db8372e9:;
			{
				static jule::Ptr<_204ec7454_FnIns> _5620_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_20516c011_builtinCallerClone), });;
				return _5620_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1db837360:;
			{
				static jule::Ptr<_204ec7454_FnIns> _5920_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_20516c5c7_builtinCallerAssert), });;
				return _5920_f;
			}
		}
		else {
			_case_begin_1db83697a:;
			{
				return nullptr;
			}
		}
		_match_end_1db8368ae:;
	};
}



inline jule::Ptr<_2050a9beb_TypeAlias> _2050d5e14_findBuiltinTypeAlias(jule::Str _6625_ident) {
	{
		auto &_match_expr{ _6625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1db83ed07:;
			{
				static jule::Ptr<_2050a9beb_TypeAlias> _6920_t = jule::new_ptr<_2050a9beb_TypeAlias>(_2050a9beb_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_2050aea47_TypeSymbol>(_2050aea47_TypeSymbol{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _6920_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1db83ed6d:;
			{
				static jule::Ptr<_2050a9beb_TypeAlias> _7920_t = jule::new_ptr<_2050a9beb_TypeAlias>(_2050a9beb_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_2050aea47_TypeSymbol>(_2050aea47_TypeSymbol{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _7920_t;
			}
		}
		else {
			_case_begin_1db83ec5d:;
			{
				return nullptr;
			}
		}
		_match_end_1db83e4aa:;
	};
}



inline jule::Any _2050d69c5_findBuiltinDef(jule::Str _9319_ident) {
	jule::Ptr<_204ec7454_FnIns> _9413_f = _2050d3b48_findBuiltinFn(_9319_ident);;
	if ((_9413_f != nullptr)) {
		return jule::Any(_9413_f);
	};
	jule::Ptr<_2050a9beb_TypeAlias> _9813_ta = _2050d5e14_findBuiltinTypeAlias(_9319_ident);;
	if ((_9813_ta != nullptr)) {
		return jule::Any(_9813_ta);
	};
	return nullptr;
}



inline jule::Any _2050d74dc_findBuiltinDefStdDebug(jule::Str _10527_ident) {
	{
		auto &_match_expr{ _10527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1db8439a9:;
			{
				static jule::Ptr<_204ec7454_FnIns> _10820_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_20516e013_builtinCallerStdDebugOut), });;
				return jule::Any(_10820_f);
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1db843a20:;
			{
				static jule::Ptr<_204ec7454_FnIns> _11120_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_20516e3ed_builtinCallerStdDebugOutln), });;
				return jule::Any(_11120_f);
			}
		}
		else {
			_case_begin_1db843943:;
			{
				return nullptr;
			}
		}
		_match_end_1db8434e2:;
	};
}



inline jule::Any _2050da27b_findBuiltinDefStdMem(jule::Str _11825_ident) {
	{
		auto &_match_expr{ _11825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1db8455d2:;
			{
				static jule::Ptr<_204ec7454_FnIns> _12120_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_20516c93a_builtinCallerStdMemSizeOf), });;
				return jule::Any(_12120_f);
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1db845648:;
			{
				static jule::Ptr<_204ec7454_FnIns> _12420_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_20516cd58_builtinCallerStdMemAlignOf), });;
				return jule::Any(_12420_f);
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1db8456ae:;
			{
				static jule::Ptr<_204ec7454_FnIns> _12720_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_20516d276_builtinCallerStdMemFree), });;
				return jule::Any(_12720_f);
			}
		}
		else {
			_case_begin_1db843e1b:;
			{
				return nullptr;
			}
		}
		_match_end_1db844b20:;
	};
}



inline jule::Any _2050d9467_findBuiltinDefStdJuleIntegrated(jule::Str _13436_ident) {
	{
		auto &_match_expr{ _13436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1db847b67:;
			{
				static jule::Ptr<_204ec7454_FnIns> _13720_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_20516d6a5_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_13720_f);
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1db847bcd:;
			{
				static jule::Ptr<_204ec7454_FnIns> _14020_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_Decl=jule::new_ptr<_204ec707a_Fn>(_204ec707a_Fn{._field_Generics=jule::Slice<jule::Ptr<_20434d864_GenericDecl>>::alloc(1LL), }), ._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_20516dac3_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_14020_f);
			}
		}
		else {
			_case_begin_1db845bdc:;
			{
				return nullptr;
			}
		}
		_match_end_1db847a24:;
	};
}



inline jule::Any _2050d9610_findPackageBuiltinDef(jule::Str _15226_link_path, jule::Str _15242_ident) {
	{
		auto &_match_expr{ _15226_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1db849d78:;
			{
				return jule::Any(_2050d74dc_findBuiltinDefStdDebug(_15242_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1db849dde:;
			{
				return jule::Any(_2050da27b_findBuiltinDefStdMem(_15242_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1db849e55:;
			{
				return jule::Any(_2050d9467_findBuiltinDefStdJuleIntegrated(_15242_ident));
			}
		}
		else {
			_case_begin_1db849b03:;
			{
				return nullptr;
			}
		}
		_match_end_1db8480c9:;
	};
}



inline jule::Ptr<_20507eb49_Data> _2051660d7_builtinCallerCommonPlain(jule::Ptr<_2050816b7_Eval>& _16534_e, jule::Ptr<_204349a6e_FnCallExpr>& _16549_fc, jule::Ptr<_20507eb49_Data>& _16571_d) {
	jule::Ptr<_204ec7454_FnIns> _16613_f = _2050adbde_Fn(_16571_d.get()._field_Kind.ptr());;
	_20506b7c3_fnCallArgChecker _16813_fcac = _20506b7c3_fnCallArgChecker{._field_e=_16534_e, ._field_args=_16549_fc.get()._field_Args, ._field_errorToken=_16549_fc.get()._field_Token, ._field_f=_16613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_20506db8d_check(&_16813_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_204ec21a7_FnCallExprModel> _17913_model = jule::new_ptr<_204ec21a7_FnCallExprModel>(_204ec21a7_FnCallExprModel{._field_Token=_16549_fc.get()._field_Token, ._field_Func=_16613_f, ._field_Expr=_16571_d.get()._field_Model, ._field_Args=_16813_fcac._field_argModels, });;
	if ((_16613_f.get()._field_Result == nullptr)) {
		_16571_d=_2050a726a_buildVoidData();
	} else {
		_16571_d=jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=_16613_f.get()._field_Result, });
	};
	_16571_d.get()._field_Model=static_cast<jule::Any>(_17913_model);
	return _16571_d;
}



inline jule::Ptr<_20507eb49_Data> _20516645b_builtinCallerCommon(jule::Ptr<_2050816b7_Eval>& _19829_e, jule::Ptr<_204349a6e_FnCallExpr>& _19844_fc, jule::Ptr<_20507eb49_Data>& _19866_d) {
	return _2051660d7_builtinCallerCommonPlain(_19829_e,_19844_fc,_19866_d);
}



inline jule::Ptr<_20507eb49_Data> _205166846_builtinCallerCommonMut(jule::Ptr<_2050816b7_Eval>& _20232_e, jule::Ptr<_204349a6e_FnCallExpr>& _20247_fc, jule::Ptr<_20507eb49_Data>& _20269_d) {
	if ((!(_20269_d.get()._field_Mutable))) {
		_205081bc3_pushErr(_20232_e.ptr(), _20247_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _20516645b_builtinCallerCommon(_20232_e,_20247_fc,_20269_d);
}



inline jule::Ptr<_20507eb49_Data> _205166b87_builtinCallerError(jule::Ptr<_2050816b7_Eval>& _20928_e, jule::Ptr<_204349a6e_FnCallExpr>& _20943_fc) {
	if ((_20943_fc.get()._field_Args.len() < 1LL)) {
		_205081bc3_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_20943_fc.get()._field_Args.len() > 1LL)) {
		_205081bc3_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20507eb49_Data> _21713_expr = _20509c0d9_evalExpr(_20928_e, _20943_fc.get()._field_Args[0LL]);;
	if ((_21713_expr == nullptr)) {
		return nullptr;
	};
	if (_205080034_IsNil(_21713_expr.ptr())) {
		_205081bc3_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20507eb49_Data> _22613_d = _2050a726a_buildVoidData();;
	_22613_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec5b5b_BuiltinErrorCallExprModel>(_204ec5b5b_BuiltinErrorCallExprModel{._field_Err=_21713_expr.get()._field_Model}));
	return _22613_d;
}



inline jule::Ptr<_20507eb49_Data> _205167072_builtinCallerOut(jule::Ptr<_2050816b7_Eval>& _23426_e, jule::Ptr<_204349a6e_FnCallExpr>& _23441_fc, jule::Ptr<_20507eb49_Data>& ) {
	if ((_23441_fc.get()._field_Args.len() < 1LL)) {
		_205081bc3_pushErr(_23426_e.ptr(), _23441_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_23441_fc.get()._field_Args.len() > 1LL)) {
		_205081bc3_pushErr(_23426_e.ptr(), _23441_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20507eb49_Data> _24313_expr = _20509c0d9_evalExpr(_23426_e, _23441_fc.get()._field_Args[0LL]);;
	if ((_24313_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_2050c3264_isBuiltinStrConvertable(_24313_expr.get()._field_Kind)))) {
		_205081bc3_pushErr(_23426_e.ptr(), _23441_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20507eb49_Data> _25313_d = _2050a726a_buildVoidData();;
	_25313_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec40bb_BuiltinOutCallExprModel>(_204ec40bb_BuiltinOutCallExprModel{._field_Expr=_24313_expr.get()._field_Model, }));
	return _25313_d;
}



inline jule::Ptr<_20507eb49_Data> _20516745c_builtinCallerOutln(jule::Ptr<_2050816b7_Eval>& _25828_e, jule::Ptr<_204349a6e_FnCallExpr>& _25843_fc, jule::Ptr<_20507eb49_Data>& _25865_d) {
	_25865_d=_205167072_builtinCallerOut(_25828_e,_25843_fc,_25865_d);
	if ((_25865_d == nullptr)) {
		return nullptr;
	};
	_25865_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec42a8_BuiltinOutlnCallExprModel>(_204ec42a8_BuiltinOutlnCallExprModel{._field_Expr=_25865_d.get()._field_Model.operator jule::Ptr<_204ec40bb_BuiltinOutCallExprModel>().get()._field_Expr, }));
	return _25865_d;
}



inline jule::Ptr<_20507eb49_Data> _205167847_builtinCallerNew(jule::Ptr<_2050816b7_Eval>& _27026_e, jule::Ptr<_204349a6e_FnCallExpr>& _27041_fc, jule::Ptr<_20507eb49_Data>& _27063_d) {
	if ((_27041_fc.get()._field_Args.len() < 1LL)) {
		_205081bc3_pushErr(_27026_e.ptr(), _27041_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_27041_fc.get()._field_Args.len() > 2LL)) {
		_205081bc3_pushErr(_27026_e.ptr(), _27041_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20507eb49_Data> _27913_t = _20509b9bd_evalExprKind(_27026_e, _27041_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_27913_t == nullptr)) {
		return nullptr;
	};
	if ((!(_27913_t.get()._field_Decl))) {
		_205081bc3_pushErr(_27026_e.ptr(), _27041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_2050c2c03_isValidForSptrType(_27913_t.get()._field_Kind)))) {
		jule::Ptr<_20435cc5d_StructIns> _29017_s = _2050ade53_Struct(_27913_t.get()._field_Kind.ptr());;
		if ((((_29017_s != nullptr) && (_29017_s.get()._field_Decl != nullptr)) && _29017_s.get()._field_Decl.get()._field_CppLinked)) {
			_205081bc3_pushErr(_27026_e.ptr(), _27041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_27063_d.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(jule::new_ptr<_2050b3b4a_Sptr>(_2050b3b4a_Sptr{._field_Elem=_27913_t.get()._field_Kind}), 7)});
	if ((_27041_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_2050aa8de_TypeKind> _30417_old = _27026_e.get()._field_prefix;;
		_27026_e.get()._field_prefix=_27913_t.get()._field_Kind;
		jule::Ptr<_20507eb49_Data> _30717_init = _20509c0d9_evalExpr(_27026_e, _27041_fc.get()._field_Args[1LL]);;
		_27026_e.get()._field_prefix=_30417_old;
		if ((_30717_init != nullptr)) {
			jule::Ptr<_202b89679_Token> _31221_token = _27041_fc.get()._field_Args[1LL].get()._field_Token;;
			;
			_205021844_checkValidityForInitExpr(_27026_e.get()._field_s, (!(_27026_e.get()._field_immutable)),false,_27913_t.get()._field_Kind,_30717_init,_31221_token);
			_20501db0a_checkAssignType(_27026_e.get()._field_s, false,_27913_t.get()._field_Kind,_30717_init,_31221_token);
			_27063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec4682_BuiltinNewCallExprModel>(_204ec4682_BuiltinNewCallExprModel{._field_Kind=_27913_t.get()._field_Kind, ._field_Init=_30717_init.get()._field_Model}));
		};
	} else {
		_27063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec4682_BuiltinNewCallExprModel>(_204ec4682_BuiltinNewCallExprModel{._field_Kind=_27913_t.get()._field_Kind, }));
	};
	return _27063_d;
}



inline jule::Ptr<_20507eb49_Data> _205167c32_builtinCallerPanic(jule::Ptr<_2050816b7_Eval>& _33228_e, jule::Ptr<_204349a6e_FnCallExpr>& _33243_fc, jule::Ptr<_20507eb49_Data>& ) {
	if ((_33243_fc.get()._field_Args.len() < 1LL)) {
		_205081bc3_pushErr(_33228_e.ptr(), _33243_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_33243_fc.get()._field_Args.len() > 1LL)) {
		_205081bc3_pushErr(_33228_e.ptr(), _33243_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20507eb49_Data> _34113_expr = _20509c0d9_evalExpr(_33228_e, _33243_fc.get()._field_Args[0LL]);;
	if ((_34113_expr == nullptr)) {
		return nullptr;
	};
	if (((_2050aca01_Prim(_34113_expr.get()._field_Kind.ptr()) == nullptr) || (!(_2050b35ea_IsStr(_2050aca01_Prim(_34113_expr.get()._field_Kind.ptr()).ptr()))))) {
		_205081bc3_pushErr(_33228_e.ptr(), _33243_fc.get()._field_Token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20507eb49_Data> _35013_d = _2050a726a_buildVoidData();;
	_35013_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec486e_BuiltinPanicCallExprModel>(_204ec486e_BuiltinPanicCallExprModel{._field_Token=_33243_fc.get()._field_Token, ._field_Expr=_34113_expr.get()._field_Model}));
	return _35013_d;
}



inline jule::Ptr<_20507eb49_Data> _20516834d_builtinCallerMake(jule::Ptr<_2050816b7_Eval>& _35827_e, jule::Ptr<_204349a6e_FnCallExpr>& _35842_fc, jule::Ptr<_20507eb49_Data>& _35864_d) {
	if ((_35842_fc.get()._field_Args.len() < 2LL)) {
		if ((_35842_fc.get()._field_Args.len() == 1LL)) {
			_205081bc3_pushErr(_35827_e.ptr(), _35842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_205081bc3_pushErr(_35827_e.ptr(), _35842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	jule::Ptr<_20507eb49_Data> _36813_t = _20509b9bd_evalExprKind(_35827_e, _35842_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_36813_t == nullptr)) {
		return nullptr;
	};
	if ((!(_36813_t.get()._field_Decl))) {
		_205081bc3_pushErr(_35827_e.ptr(), _35842_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_35842_fc.get()._field_Args.len() > 3LL)) {
		_205081bc3_pushErr(_35827_e.ptr(), _35842_fc.get()._field_Args[3LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
		return nullptr;
	};
	_35864_d.get()._field_Kind=_36813_t.get()._field_Kind;
	jule::Ptr<_20507eb49_Data> _38413_lenExpr = _20509c0d9_evalExpr(_20501d302_evalp(_35827_e.get()._field_s, _35827_e.get()._field_lookup,_36813_t.get()._field_Kind), _35842_fc.get()._field_Args[1LL]);;
	if ((_38413_lenExpr == nullptr)) {
		return nullptr;
	};
	_20508a2b4_checkIntegerIndexingByData(_35827_e.ptr(), _38413_lenExpr,_35842_fc.get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_204ec4c48_BuiltinMakeCallExprModel> _39113_model = jule::new_ptr<_204ec4c48_BuiltinMakeCallExprModel>(_204ec4c48_BuiltinMakeCallExprModel{._field_Kind=_36813_t.get()._field_Kind, ._field_Len=_38413_lenExpr.get()._field_Model, });;
	_35864_d.get()._field_Model=static_cast<jule::Any>(_39113_model);
	if ((_35842_fc.get()._field_Args.len() == 3LL)) {
		jule::Ptr<_20507eb49_Data> _39717_capExpr = _20509c0d9_evalExpr(_20501d302_evalp(_35827_e.get()._field_s, _35827_e.get()._field_lookup,_36813_t.get()._field_Kind), _35842_fc.get()._field_Args[2LL]);;
		if ((_39717_capExpr == nullptr)) {
			return _35864_d;
		};
		_20508a2b4_checkIntegerIndexingByData(_35827_e.ptr(), _39717_capExpr,_35842_fc.get()._field_Args[2LL].get()._field_Token);
		_39113_model.get()._field_Cap=_39717_capExpr.get()._field_Model;
	};
	return _35864_d;
}



inline jule::Ptr<_20507eb49_Data> _205168738_builtinCallerAppend(jule::Ptr<_2050816b7_Eval>& _40729_e, jule::Ptr<_204349a6e_FnCallExpr>& _40744_fc, jule::Ptr<_20507eb49_Data>& _40766_d) {
	if ((_40744_fc.get()._field_Args.len() < 2LL)) {
		if ((_40744_fc.get()._field_Args.len() == 1LL)) {
			_205081bc3_pushErr(_40729_e.ptr(), _40744_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_205081bc3_pushErr(_40729_e.ptr(), _40744_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_20507eb49_Data> _41713_t = _20509c0d9_evalExpr(_40729_e, _40744_fc.get()._field_Args[0LL]);;
	if ((_41713_t == nullptr)) {
		return nullptr;
	};
	if ((_2050ad97a_Slc(_41713_t.get()._field_Kind.ptr()) == nullptr)) {
		_205081bc3_pushErr(_40729_e.ptr(), _40744_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_204ec7454_FnIns> _42713_f = jule::new_ptr<_204ec7454_FnIns>(_204ec7454_FnIns{._field_Params=jule::Slice<jule::Ptr<_204ec7267_ParamIns>>::make({jule::new_ptr<_204ec7267_ParamIns>(_204ec7267_ParamIns{._field_Decl=jule::new_ptr<_204ec6d8d_Param>(_204ec6d8d_Param{._field_Mutable=true, }), ._field_Kind=_41713_t.get()._field_Kind}),jule::new_ptr<_204ec7267_ParamIns>(_204ec7267_ParamIns{._field_Decl=jule::new_ptr<_204ec6d8d_Param>(_204ec6d8d_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_2050ad97a_Slc(_41713_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41713_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_20507eb49_Data>(jule::Ptr<_2050816b7_Eval>&,jule::Ptr<_204349a6e_FnCallExpr>&,jule::Ptr<_20507eb49_Data>&)>(_2051660d7_builtinCallerCommonPlain), });;
	_40766_d.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_42713_f, 1)});
	_40766_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec3a05_CommonIdentExprModel>(_204ec3a05_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}));
	_40766_d=_2051660d7_builtinCallerCommonPlain(_40729_e,_40744_fc,_40766_d);
	if ((_40766_d != nullptr)) {
		jule::Ptr<_204ec21a7_FnCallExprModel> _45517_model = _40766_d.get()._field_Model.operator jule::Ptr<_204ec21a7_FnCallExprModel>();;
		_40766_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec4e35_BuiltinAppendCallExprModel>(_204ec4e35_BuiltinAppendCallExprModel{._field_Dest=_45517_model.get()._field_Args[0LL], ._field_Elements=_45517_model.get()._field_Args[1LL]}));
	};
	return _40766_d;
}



inline jule::Ptr<_20507eb49_Data> _205168bbc_callerCopySlice(jule::Ptr<_20507eb49_Data>& _46425_dest, jule::Ptr<_2050816b7_Eval>& _46443_e, jule::Ptr<_204349a6e_FnCallExpr>& _46458_fc, jule::Ptr<_20507eb49_Data>& _46480_d) {
	if ((!(_46425_dest.get()._field_Mutable))) {
		_205081bc3_pushErr(_46443_e.ptr(), _46458_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20507eb49_Data> _46913_src = _20509c0d9_evalExpr(_46443_e, _46458_fc.get()._field_Args[1LL]);;
	if ((_46913_src == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_2050b45a7_Slc> _47313_slc = _2050ad97a_Slc(_46913_src.get()._field_Kind.ptr());;
	if ((_47313_slc != nullptr)) {
		if (((!(_46913_src.get()._field_Mutable)) && _2050abcdb_Mutable(_47313_slc.get()._field_Elem.ptr()))) {
			_205081bc3_pushErr(_46443_e.ptr(), _46458_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_2050ab0e8_Equals(_46425_dest.get()._field_Kind, _46913_src.get()._field_Kind)))) {
			_205081bc3_pushErr(_46443_e.ptr(), _46458_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_46425_dest.get()._field_Kind.ptr())),jule::Any(_2050aacda_Str(_46913_src.get()._field_Kind.ptr()))}));
		};
	} else {
		jule::Ptr<_2050b03b6_Prim> _48313_destPrim = _2050aca01_Prim(_2050ad97a_Slc(_46425_dest.get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_2050b03b6_Prim> _48413_prim = _2050aca01_Prim(_46913_src.get()._field_Kind.ptr());;
		if (((((_48313_destPrim == nullptr) || (_48413_prim == nullptr)) || (!(_2050b35ea_IsStr(_48413_prim.ptr())))) || (!(_2050b1bc0_IsU8(_48313_destPrim.ptr()))))) {
			_205081bc3_pushErr(_46443_e.ptr(), _46458_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_46425_dest.get()._field_Kind.ptr())),jule::Any(_2050aacda_Str(_46913_src.get()._field_Kind.ptr()))}));
		};
	};
	_46480_d.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("int", 3)), 6)});
	_46480_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec596e_BuiltinCopyCallExprModel>(_204ec596e_BuiltinCopyCallExprModel{._field_Dest=_46425_dest, ._field_Src=_46913_src}));
	return _46480_d;
}



inline jule::Ptr<_20507eb49_Data> _205169151_callerCopyStr(jule::Ptr<_20507eb49_Data>& _49823_dest, jule::Ptr<_2050816b7_Eval>& _49841_e, jule::Ptr<_204349a6e_FnCallExpr>& _49856_fc, jule::Ptr<_20507eb49_Data>& _49878_d) {
	if ((!(_49823_dest.get()._field_Mutable))) {
		_205081bc3_pushErr(_49841_e.ptr(), _49856_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20507eb49_Data> _50313_src = _20509c0d9_evalExpr(_49841_e, _49856_fc.get()._field_Args[1LL]);;
	if ((_50313_src == nullptr)) {
		return nullptr;
	};
	{
		
		if ((_2050aca01_Prim(_50313_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db893d06:;
			{
				if (_2050b35ea_IsStr(_2050aca01_Prim(_50313_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_2050ad97a_Slc(_50313_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db893d6c:;
			{
				jule::Ptr<_2050b45a7_Slc> _51317_slc = _2050ad97a_Slc(_50313_src.get()._field_Kind.ptr());;
				if (((_2050aca01_Prim(_51317_slc.get()._field_Elem.ptr()) != nullptr) && _2050b1bc0_IsU8(_2050aca01_Prim(_51317_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1db894114:;
	};
	_205081bc3_pushErr(_49841_e.ptr(), _49856_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_49823_dest.get()._field_Kind.ptr())),jule::Any(_2050aacda_Str(_50313_src.get()._field_Kind.ptr()))}));
	_julec_label_end:;
	_49878_d.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("int", 3)), 6)});
	_49878_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec596e_BuiltinCopyCallExprModel>(_204ec596e_BuiltinCopyCallExprModel{._field_Dest=_49823_dest, ._field_Src=_50313_src}));
	return _49878_d;
}



inline jule::Ptr<_20507eb49_Data> _20516953b_builtinCallerCopy(jule::Ptr<_2050816b7_Eval>& _52827_e, jule::Ptr<_204349a6e_FnCallExpr>& _52842_fc, jule::Ptr<_20507eb49_Data>& _52864_d) {
	if ((_52842_fc.get()._field_Args.len() < 2LL)) {
		if ((_52842_fc.get()._field_Args.len() == 1LL)) {
			_205081bc3_pushErr(_52827_e.ptr(), _52842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_205081bc3_pushErr(_52827_e.ptr(), _52842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_52842_fc.get()._field_Args.len() > 2LL)) {
		_205081bc3_pushErr(_52827_e.ptr(), _52842_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20507eb49_Data> _54113_dest = _20509c0d9_evalExpr(_52827_e, _52842_fc.get()._field_Args[0LL]);;
	{
		
		if ((_54113_dest == nullptr)) {
			_case_begin_1db89dea9:;
			{
				return nullptr;
			}
		}
		else if ((_2050ad97a_Slc(_54113_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db89e020:;
			{
				return _205168bbc_callerCopySlice(_54113_dest,_52827_e,_52842_fc,_52864_d);
			}
		}
		else if (((_2050aca01_Prim(_54113_dest.get()._field_Kind.ptr()) != nullptr) && _2050b35ea_IsStr(_2050aca01_Prim(_54113_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1db89e086:;
			{
				return _205169151_callerCopyStr(_54113_dest,_52827_e,_52842_fc,_52864_d);
			}
		}
		else {
			_case_begin_1db89ddee:;
			{
				_205081bc3_pushErr(_52827_e.ptr(), _52842_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1db89dd99:;
	};
}



inline jule::Ptr<_20507eb49_Data> _20516987c_callerLenSlice(jule::Ptr<_20507eb49_Data>& _55524_expr, jule::Ptr<_20507eb49_Data>& _55542_d) {
	_55542_d.get()._field_Kind=_205074039_lenKind();
	_55542_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec5122_BuiltinLenCallExprModel>(_204ec5122_BuiltinLenCallExprModel{._field_Expr=_55524_expr}));
	return _55542_d;
}



inline jule::Ptr<_20507eb49_Data> _205169bbd_callerLenMap(jule::Ptr<_20507eb49_Data>& _56322_expr, jule::Ptr<_20507eb49_Data>& _56340_d) {
	_56340_d.get()._field_Kind=_205074039_lenKind();
	_56340_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec5122_BuiltinLenCallExprModel>(_204ec5122_BuiltinLenCallExprModel{._field_Expr=_56322_expr}));
	return _56340_d;
}



inline jule::Ptr<_20507eb49_Data> _20516a00e_callerLenArr(jule::Ptr<_20507eb49_Data>& _57122_expr, jule::Ptr<_20507eb49_Data>& _57140_d) {
	_57140_d.get()._field_Kind=_205074039_lenKind();
	_57140_d.get()._field_Constant=static__204420804_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2050ad716_Arr(_57122_expr.get()._field_Kind.ptr()).get()._field_N)));
	_57140_d.get()._field_Model=static_cast<jule::Any>(_57140_d.get()._field_Constant);
	return _57140_d;
}



inline jule::Ptr<_20507eb49_Data> _20516a350_callerLenStr(jule::Ptr<_20507eb49_Data>& _57822_expr, jule::Ptr<_20507eb49_Data>& _57840_d) {
	_57840_d.get()._field_Kind=_205074039_lenKind();
	if (_20508050c_IsConst(_57822_expr.ptr())) {
		_57840_d.get()._field_Constant=static__204420804_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_204461834_ReadStr(_57822_expr.get()._field_Constant.ptr()).len())));
		_57840_d.get()._field_Model=static_cast<jule::Any>(_57840_d.get()._field_Constant);
	} else {
		_57840_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec5122_BuiltinLenCallExprModel>(_204ec5122_BuiltinLenCallExprModel{._field_Expr=_57822_expr}));
	};
	return _57840_d;
}



inline jule::Ptr<_20507eb49_Data> _20516a73a_builtinCallerLen(jule::Ptr<_2050816b7_Eval>& _59126_e, jule::Ptr<_204349a6e_FnCallExpr>& _59141_fc, jule::Ptr<_20507eb49_Data>& _59163_d) {
	if ((_59141_fc.get()._field_Args.len() < 1LL)) {
		_205081bc3_pushErr(_59126_e.ptr(), _59141_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3))}));
		return nullptr;
	};
	if ((_59141_fc.get()._field_Args.len() > 1LL)) {
		_205081bc3_pushErr(_59126_e.ptr(), _59141_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20507eb49_Data> _59913_dest = _20509c0d9_evalExpr(_59126_e, _59141_fc.get()._field_Args[0LL]);;
	{
		
		if ((_59913_dest == nullptr)) {
			_case_begin_1db8a99ba:;
			{
				return nullptr;
			}
		}
		else if (_59913_dest.get()._field_Decl) {
			_case_begin_1db8a9a31:;
			{
				_205081bc3_pushErr(_59126_e.ptr(), _59141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_2050ad97a_Slc(_59913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db8a9a97:;
			{
				return _20516987c_callerLenSlice(_59913_dest,_59163_d);
			}
		}
		else if ((_2050ad716_Arr(_59913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db8aa7ce:;
			{
				return _20516a00e_callerLenArr(_59913_dest,_59163_d);
			}
		}
		else if ((_2050ae42b_Map(_59913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db8aa845:;
			{
				return _205169bbd_callerLenMap(_59913_dest,_59163_d);
			}
		}
		else if (((_2050aca01_Prim(_59913_dest.get()._field_Kind.ptr()) != nullptr) && _2050b35ea_IsStr(_2050aca01_Prim(_59913_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1db8aa8ab:;
			{
				return _20516a350_callerLenStr(_59913_dest,_59163_d);
			}
		}
		else {
			_case_begin_1db8a98cc:;
			{
				_205081bc3_pushErr(_59126_e.ptr(), _59141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1db8a9877:;
	};
}



inline jule::Ptr<_20507eb49_Data> _20516aa7b_callerCapSlice(jule::Ptr<_20507eb49_Data>& _62024_expr, jule::Ptr<_20507eb49_Data>& _62042_d) {
	_62042_d.get()._field_Kind=_205074039_lenKind();
	_62042_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec530e_BuiltinCapCallExprModel>(_204ec530e_BuiltinCapCallExprModel{._field_Expr=_62024_expr}));
	return _62042_d;
}



inline jule::Ptr<_20507eb49_Data> _20516adbc_callerCapStr(jule::Ptr<_20507eb49_Data>& _62822_expr, jule::Ptr<_20507eb49_Data>& _62840_d) {
	_62840_d.get()._field_Kind=_205074039_lenKind();
	if (_20508050c_IsConst(_62822_expr.ptr())) {
		_62840_d.get()._field_Constant=static__204420804_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_204461834_ReadStr(_62822_expr.get()._field_Constant.ptr()).cap())));
		_62840_d.get()._field_Model=static_cast<jule::Any>(_62840_d.get()._field_Constant);
	} else {
		_62840_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec530e_BuiltinCapCallExprModel>(_204ec530e_BuiltinCapCallExprModel{._field_Expr=_62822_expr}));
	};
	return _62840_d;
}



inline jule::Ptr<_20507eb49_Data> _20516b2a7_builtinCallerCap(jule::Ptr<_2050816b7_Eval>& _64126_e, jule::Ptr<_204349a6e_FnCallExpr>& _64141_fc, jule::Ptr<_20507eb49_Data>& _64163_d) {
	if ((_64141_fc.get()._field_Args.len() < 1LL)) {
		_205081bc3_pushErr(_64126_e.ptr(), _64141_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3))}));
		return nullptr;
	};
	if ((_64141_fc.get()._field_Args.len() > 1LL)) {
		_205081bc3_pushErr(_64126_e.ptr(), _64141_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20507eb49_Data> _64913_dest = _20509c0d9_evalExpr(_64126_e, _64141_fc.get()._field_Args[0LL]);;
	{
		
		if ((_64913_dest == nullptr)) {
			_case_begin_1db8b5465:;
			{
				return nullptr;
			}
		}
		else if (_64913_dest.get()._field_Decl) {
			_case_begin_1db8b54cb:;
			{
				_205081bc3_pushErr(_64126_e.ptr(), _64141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_2050ad97a_Slc(_64913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db8b5542:;
			{
				return _20516aa7b_callerCapSlice(_64913_dest,_64163_d);
			}
		}
		else if (((_2050aca01_Prim(_64913_dest.get()._field_Kind.ptr()) != nullptr) && _2050b35ea_IsStr(_2050aca01_Prim(_64913_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1db8b629b:;
			{
				return _20516adbc_callerCapStr(_64913_dest,_64163_d);
			}
		}
		else {
			_case_begin_1db8b5399:;
			{
				_205081bc3_pushErr(_64126_e.ptr(), _64141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1db8b5344:;
	};
}



inline jule::Ptr<_20507eb49_Data> _20516b73b_callerDeleteMap(jule::Ptr<_2050816b7_Eval>& _66625_e, jule::Ptr<_204349a6e_FnCallExpr>& _66640_fc, jule::Ptr<_20507eb49_Data>& _66662_expr, jule::Ptr<_20507eb49_Data>& _66680_d) {
	if ((!(_66662_expr.get()._field_Mutable))) {
		_205081bc3_pushErr(_66625_e.ptr(), _66640_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	_66680_d=_2050a726a_buildVoidData();
	jule::Ptr<_204ec320d_BuiltinDeleteCallExprModel> _67113_model = jule::new_ptr<_204ec320d_BuiltinDeleteCallExprModel>(_204ec320d_BuiltinDeleteCallExprModel{._field_Dest=_66662_expr, });;
	if ((_66640_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_20507eb49_Data> _67517_key = _20509c0d9_evalExpr(_66625_e, _66640_fc.get()._field_Args[1LL]);;
		{
			
			if ((_67517_key == nullptr)) {
				_case_begin_1db8bd24d:;
				{
					return nullptr;
				}
			}
			else if (_67517_key.get()._field_Decl) {
				_case_begin_1db8bd44b:;
				{
					_205081bc3_pushErr(_66625_e.ptr(), _66640_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			else {
				_case_begin_1db8bba32:;
				{
					;
					jule::Ptr<_2050aa8de_TypeKind> _68421_keyType = _2050ae42b_Map(_66662_expr.get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_20501db0a_checkAssignType(_66625_e.get()._field_s, false,_68421_keyType,_67517_key,_66640_fc.get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;
					};
				}
			}
			_match_end_1db8bb9bb:;
		};
		_67113_model.get()._field_Key=_67517_key;
	};
	_66680_d.get()._field_Model=static_cast<jule::Any>(_67113_model);
	return _66680_d;
}



inline jule::Ptr<_20507eb49_Data> _20516bb26_builtinCallerDelete(jule::Ptr<_2050816b7_Eval>& _69529_e, jule::Ptr<_204349a6e_FnCallExpr>& _69544_fc, jule::Ptr<_20507eb49_Data>& _69566_d) {
	if ((_69544_fc.get()._field_Args.len() < 1LL)) {
		_205081bc3_pushErr(_69529_e.ptr(), _69544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3))}));
		return nullptr;
	};
	if ((_69544_fc.get()._field_Args.len() > 2LL)) {
		_205081bc3_pushErr(_69529_e.ptr(), _69544_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20507eb49_Data> _70313_dest = _20509c0d9_evalExpr(_69529_e, _69544_fc.get()._field_Args[0LL]);;
	{
		
		if ((_70313_dest == nullptr)) {
			_case_begin_1db8c32db:;
			{
				return nullptr;
			}
		}
		else if (_70313_dest.get()._field_Decl) {
			_case_begin_1db8c3352:;
			{
				_205081bc3_pushErr(_69529_e.ptr(), _69544_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_2050ae42b_Map(_70313_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db8c33b8:;
			{
				return _20516b73b_callerDeleteMap(_69529_e,_69544_fc,_70313_dest,_69566_d);
			}
		}
		else {
			_case_begin_1db8c3231:;
			{
				_205081bc3_pushErr(_69529_e.ptr(), _69544_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1db8c31cb:;
	};
}



inline jule::Ptr<_20507eb49_Data> _20516c011_builtinCallerClone(jule::Ptr<_2050816b7_Eval>& _71828_e, jule::Ptr<_204349a6e_FnCallExpr>& _71843_fc, jule::Ptr<_20507eb49_Data>& ) {
	if ((_71843_fc.get()._field_Args.len() < 1LL)) {
		_205081bc3_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_71843_fc.get()._field_Args.len() > 1LL)) {
		_205081bc3_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20507eb49_Data> _72713_d = _20509b9bd_evalExprKind(_71828_e, _71843_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_72713_d == nullptr)) {
		return nullptr;
	};
	if ((!(_2050ac528_SupportsCloning(_72713_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_2050ad97a_Slc(_72713_d.get()._field_Kind.ptr()) != nullptr) || (_2050ae42b_Map(_72713_d.get()._field_Kind.ptr()) != nullptr) || (_2050ad716_Arr(_72713_d.get()._field_Kind.ptr()) != nullptr) || (_2050acc65_Sptr(_72713_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1db8c9bb6:;
				{
					{
						_205081bc3_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_72713_d.get()._field_Kind.ptr()))}));
					};
				}
			}
			else if ((_2050ade53_Struct(_72713_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1db8c9567:;
				{
					{
						_205081bc3_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_72713_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_1db8c9501:;
				{
					{
						_205081bc3_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_2050aacda_Str(_72713_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_1db8c8d3b:;
		};
	};
	_72713_d.get()._field_Mutable=true;
	_72713_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec4495_BuiltinCloneCallExprModel>(_204ec4495_BuiltinCloneCallExprModel{._field_Expr=_72713_d.get()._field_Model}));
	return _72713_d;
}



inline jule::Ptr<_20507eb49_Data> _20516c5c7_builtinCallerAssert(jule::Ptr<_2050816b7_Eval>& _76029_e, jule::Ptr<_204349a6e_FnCallExpr>& _76044_fc, jule::Ptr<_20507eb49_Data>& ) {
	if ((_76044_fc.get()._field_Args.len() < 1LL)) {
		_205081bc3_pushErr(_76029_e.ptr(), _76044_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_76044_fc.get()._field_Args.len() > 2LL)) {
		_205081bc3_pushErr(_76029_e.ptr(), _76044_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20507eb49_Data> _76913_expr = _20509c0d9_evalExpr(_76029_e, _76044_fc.get()._field_Args[0LL]);;
	if ((_76913_expr == nullptr)) {
		return nullptr;
	};
	if (((_2050aca01_Prim(_76913_expr.get()._field_Kind.ptr()) == nullptr) || (!(_2050b3386_IsBool(_2050aca01_Prim(_76913_expr.get()._field_Kind.ptr()).ptr()))))) {
		_205081bc3_pushErr(_76029_e.ptr(), _76044_fc.get()._field_Token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_204ec4a5b_BuiltinAssertCallExprModel> _77813_model = jule::new_ptr<_204ec4a5b_BuiltinAssertCallExprModel>(_204ec4a5b_BuiltinAssertCallExprModel{._field_Token=_76044_fc.get()._field_Token, ._field_Expr=_76913_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if ((_76044_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_20507eb49_Data> _78617_log = _20509c0d9_evalExpr(_76029_e, _76044_fc.get()._field_Args[1LL]);;
		if ((_78617_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_20508050c_IsConst(_78617_log.ptr()))) || (_2050aca01_Prim(_78617_log.get()._field_Kind.ptr()) == nullptr)) || (!(_2050b35ea_IsStr(_2050aca01_Prim(_78617_log.get()._field_Kind.ptr()).ptr()))))) {
			_205081bc3_pushErr(_76029_e.ptr(), _76044_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_2050aacda_Str(_78617_log.get()._field_Kind.ptr()))}));
			return nullptr;
		};
		_77813_model.get()._field_Log=_204461834_ReadStr(_78617_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_20507eb49_Data> _79913_d = _2050a726a_buildVoidData();;
	_79913_d.get()._field_Model=static_cast<jule::Any>(_77813_model);
	return _79913_d;
}



inline jule::Ptr<_20507eb49_Data> _20516c93a_builtinCallerStdMemSizeOf(jule::Ptr<_2050816b7_Eval>& _80435_e, jule::Ptr<_204349a6e_FnCallExpr>& _80450_fc, jule::Ptr<_20507eb49_Data>& ) {
	jule::Ptr<_20507eb49_Data> _80513_result = jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_80450_fc.get()._field_Args.len() < 1LL)) {
		_205081bc3_pushErr(_80435_e.ptr(), _80450_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _80513_result;
	};
	if ((_80450_fc.get()._field_Args.len() > 1LL)) {
		_205081bc3_pushErr(_80435_e.ptr(), _80450_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20507eb49_Data> _81713_d = _20509b9bd_evalExprKind(_80435_e, _80450_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_81713_d == nullptr)) {
		return _80513_result;
	};
	_80513_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec5d48_SizeofExprModel>(_204ec5d48_SizeofExprModel{._field_Expr=_81713_d.get()._field_Model}));
	return _80513_result;
}



inline jule::Ptr<_20507eb49_Data> _20516cd58_builtinCallerStdMemAlignOf(jule::Ptr<_2050816b7_Eval>& _82636_e, jule::Ptr<_204349a6e_FnCallExpr>& _82651_fc, jule::Ptr<_20507eb49_Data>& ) {
	jule::Ptr<_20507eb49_Data> _82713_result = jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_82651_fc.get()._field_Args.len() < 1LL)) {
		_205081bc3_pushErr(_82636_e.ptr(), _82651_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _82713_result;
	};
	if ((_82651_fc.get()._field_Args.len() > 1LL)) {
		_205081bc3_pushErr(_82636_e.ptr(), _82651_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20507eb49_Data> _83913_d = _20509b9bd_evalExprKind(_82636_e, _82651_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_83913_d == nullptr)) {
		return _82713_result;
	};
	_82713_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec6035_AlignofExprModel>(_204ec6035_AlignofExprModel{._field_Expr=_83913_d.get()._field_Model}));
	return _82713_result;
}



inline jule::Ptr<_20507eb49_Data> _20516d276_builtinCallerStdMemFree(jule::Ptr<_2050816b7_Eval>& _84833_e, jule::Ptr<_204349a6e_FnCallExpr>& _84848_fc, jule::Ptr<_20507eb49_Data>& ) {
	if ((_84848_fc.get()._field_Args.len() < 1LL)) {
		_205081bc3_pushErr(_84833_e.ptr(), _84848_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_84848_fc.get()._field_Args.len() > 1LL)) {
		_205081bc3_pushErr(_84833_e.ptr(), _84848_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20507eb49_Data> _85713_d = _20509b9bd_evalExprKind(_84833_e, _84848_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_85713_d == nullptr)) {
		return nullptr;
	};
	if ((!(_2050ac2b4_PerformsRC(_85713_d.get()._field_Kind.ptr())))) {
		_205081bc3_pushErr(_84833_e.ptr(), _84848_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20507eb49_Data> _86613_result = _2050a726a_buildVoidData();;
	_86613_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec67d8_FreeExprModel>(_204ec67d8_FreeExprModel{._field_Expr=_85713_d.get()._field_Model}));
	return _86613_result;
}



inline jule::Ptr<_20507eb49_Data> _20516d6a5_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_2050816b7_Eval>& _87145_e, jule::Ptr<_204349a6e_FnCallExpr>& _87160_fc, jule::Ptr<_20507eb49_Data>& ) {
	if ((_87160_fc.get()._field_Args.len() < 1LL)) {
		_205081bc3_pushErr(_87145_e.ptr(), _87160_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_87160_fc.get()._field_Args.len() > 1LL)) {
		_205081bc3_pushErr(_87145_e.ptr(), _87160_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20507eb49_Data> _88013_d = _20509b9bd_evalExprKind(_87145_e, _87160_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_88013_d == nullptr)) {
		return nullptr;
	};
	if ((!(_2050c3264_isBuiltinStrConvertable(_88013_d.get()._field_Kind)))) {
		_205081bc3_pushErr(_87145_e.ptr(), _87160_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_20507eb49_Data>(_20507eb49_Data{._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(_2050c3891_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_204ec640e_IntegratedToStrExprModel>(_204ec640e_IntegratedToStrExprModel{._field_Expr=_88013_d.get()._field_Model})), });
}



inline jule::Ptr<_20507eb49_Data> _20516dac3_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_2050816b7_Eval>& _89844_e, jule::Ptr<_204349a6e_FnCallExpr>& _89859_fc, jule::Ptr<_20507eb49_Data>& _89881_d) {
	if ((!(_20508260d_isUnsafe(_89844_e.ptr())))) {
		_205081bc3_pushErr(_89844_e.ptr(), _89859_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_89859_fc.get()._field_Args.len() < 1LL)) {
		_205081bc3_pushErr(_89844_e.ptr(), _89859_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_20507eb49_Data> _90813_argd = _20509c0d9_evalExpr(_89844_e, _89859_fc.get()._field_Args[0LL]);;
	if ((_90813_argd == nullptr)) {
		return nullptr;
	};
	if (((_2050aca01_Prim(_90813_argd.get()._field_Kind.ptr()) == nullptr) || (!(_2050b35ea_IsStr(_2050aca01_Prim(_90813_argd.get()._field_Kind.ptr()).ptr()))))) {
		_205081bc3_pushErr(_89844_e.ptr(), _89859_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_2050aacda_Str(_90813_argd.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	if (((!(_20508050c_IsConst(_90813_argd.ptr()))) || (!(_2044610e7_IsStr(_90813_argd.get()._field_Constant.ptr()))))) {
		_205081bc3_pushErr(_89844_e.ptr(), _89859_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20507eb49_Data> _92313_r = _2050a726a_buildVoidData();;
	jule::Ptr<_204ec7454_FnIns> _92513_f = _2050adbde_Fn(_89881_d.get()._field_Kind.ptr());;
	if ((_92513_f.get()._field_Generics.len() > 0LL)) {
		_92313_r.get()._field_Kind=_92513_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_204ec65eb_BackendEmitExprModel> _93013_model = jule::new_ptr<_204ec65eb_BackendEmitExprModel>(_204ec65eb_BackendEmitExprModel{._field_Code=_204461834_ReadStr(_90813_argd.get()._field_Constant.ptr()), });;
	if ((_89859_fc.get()._field_Args.len() > 1LL)) {
		_93013_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL,(_89859_fc.get()._field_Args.len() - 1LL));
		{
			auto expr = _89859_fc.get()._field_Args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1db906176:;
			if (it != expr.end()) {
				jule::Ptr<_204345a8c_Expr> _93621_arg = *it;
				{
					_90813_argd=_20509b9bd_evalExprKind(_89844_e, _93621_arg.get()._field_Kind);
					if ((_90813_argd == nullptr)) {
						return nullptr;
					};
					_93013_model.get()._field_Exprs = jule::alloc_for_append(_93013_model.get()._field_Exprs,1);_93013_model.get()._field_Exprs.__push(_90813_argd.get()._field_Model);;
				}
				_iter_next_1db906176:;
				++it;
				goto _iter_begin_1db906176;
			}
			_iter_end_1db906176:;
		};
	};
	_92313_r.get()._field_Model=static_cast<jule::Any>(_93013_model);
	return _92313_r;
}



inline jule::Ptr<_20507eb49_Data> _20516e013_builtinCallerStdDebugOut(jule::Ptr<_2050816b7_Eval>& _94934_e, jule::Ptr<_204349a6e_FnCallExpr>& _94949_fc, jule::Ptr<_20507eb49_Data>& _94971_d) {
	_94971_d=_205167072_builtinCallerOut(_94934_e,_94949_fc,_94971_d);
	if ((_94971_d == nullptr)) {
		return nullptr;
	};
	_94971_d.get()._field_Model.operator jule::Ptr<_204ec40bb_BuiltinOutCallExprModel>().get()._field_Debug=true;
	return _94971_d;
}



inline jule::Ptr<_20507eb49_Data> _20516e3ed_builtinCallerStdDebugOutln(jule::Ptr<_2050816b7_Eval>& _95836_e, jule::Ptr<_204349a6e_FnCallExpr>& _95851_fc, jule::Ptr<_20507eb49_Data>& _95873_d) {
	_95873_d=_20516745c_builtinCallerOutln(_95836_e,_95851_fc,_95873_d);
	if ((_95873_d == nullptr)) {
		return nullptr;
	};
	_95873_d.get()._field_Model.operator jule::Ptr<_204ec42a8_BuiltinOutlnCallExprModel>().get()._field_Debug=true;
	return _95873_d;
}



inline jule::Bool _20519ce76_FindModuleFile(jule::Slice<jule::Ptr<_2009634dd_DirEntry>>& _1220_dirents) {
	{
		auto &expr = _1220_dirents;
		auto it = expr.begin();
		_iter_begin_1db90c435:;
		if (it != expr.end()) {
			jule::Ptr<_2009634dd_DirEntry> &_1312_d = *it;
			{
				if (((!(_200970792_IsDir(_1312_d.get()._field_Stat.ptr()))) && (_1312_d.get()._field_Name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_1db90c435:;
			++it;
			goto _iter_begin_1db90c435;
		}
		_iter_end_1db90c435:;
	};
	return false;
}



inline jule::Str _20519d0a8_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_2009634dd_DirEntry>> _2617_dirents = ({
				auto except = static__2017969e6_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1db90d348;
				} jule::Slice<jule::Ptr<_2009634dd_DirEntry>>();});
			});;
			jule::Bool _3013_exist = _20519ce76_FindModuleFile(_2617_dirents);;
			if (_3013_exist) {
				return _2427_path;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_20182c483_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1db90d348;
			};
		}
	_iter_next_1db90d348:;
	}
	_iter_end_1db90d348:;;
	return jule::Str();
}



inline jule::Slice<_20285b7ad_Log> _20519d33e_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__20096ac65_Read(_201840276_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_20285b7ad_Log>::make({_20285b7ad_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});
		} jule::Slice<jule::U8>();});
	});;
	jule::Str _539_s = _2027d711d_Trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_20285b7ad_Log>::make({_20285b7ad_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});
	};
	return nullptr;
}



inline jule::Ptr<_2057e150e_FileInfo> _2057e41d2_ParseFile(jule::Ptr<_202b8ea14_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_2057e150e_FileInfo> _2713_finf = jule::new_ptr<_2057e150e_FileInfo>();;
	std::tie(_2713_finf.get()._field_Ast,_2713_finf.get()._field_Errors) = _20583b559_parseFileset(_2318_f);
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;
}



inline std::tuple<jule::Ptr<_204307202_Ast>,jule::Slice<_20285b7ad_Log>> _20583b559_parseFileset(jule::Ptr<_202b8ea14_File> _5521_f) {
	jule::Ptr<_20585a006_parser> _5613_p = jule::new_ptr<_20585a006_parser>();;
	_2058698c8_parse(_5613_p, _5521_f);
	return std::make_tuple(_5613_p.get()._field_ast,_5613_p.get()._field_errors);
}



inline jule::Ptr<_204351504_ScopeTree> _20583be61_newScope(void) {
	return jule::new_ptr<_204351504_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _20583c26e_isSt(jule::Ptr<_202b89679_Token> _499_current, jule::Ptr<_202b89679_Token> _4926_prev) {
	jule::Bool _4942_ok = jule::Bool();
	jule::Bool _4952_terminated = jule::Bool();
	_4942_ok=((_499_current.get()._field_Id == static_cast<jule::U64>(5LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	_4952_terminated=(_499_current.get()._field_Id == static_cast<jule::U64>(5LLU));
	return std::make_tuple(_4942_ok,_4952_terminated);
}



inline jule::Bool _20583c5b0_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_202b89679_Token>>& _5526_tokens, jule::I64& _5545_i) {
	if (((_5545_i > 1LL) && (_5526_tokens[(_5545_i - 2LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return false;
	};
	{
		jule::Ptr<_202b89679_Token> _6113_prev = _5526_tokens[(_5545_i - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U64>(20LLU)) || (((_6113_prev.get()._field_Id == static_cast<jule::U64>(7LLU)) && _202b8a16e_IsBinOp(_6113_prev.get()._field_Kind)) && (_6113_prev.get()._field_Row < _5526_tokens[_5545_i].get()._field_Row)));
	};
}



inline std::tuple<jule::I64,jule::Bool> _20583c945_nextStPos(jule::Slice<jule::Ptr<_202b89679_Token>>& _7015_tokens, jule::I64 _7033_start) {
	jule::I64 _7113_braceN = 0LL;;
	jule::I64 _7213_i = _7033_start;;
	for (; (_7213_i < _7015_tokens.len()); (_7213_i)++) {
		{
			jule::Bool _7417_ok = false;;
			jule::Bool _7517_terminated = false;;
			jule::Ptr<_202b89679_Token> _7613_tok = _7015_tokens[_7213_i];;
			{
				auto &_match_expr{ _7613_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1db993972:;
					{
						{
							auto &_match_expr{ _7613_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1db995aea:;
								{
									if (((_7113_braceN == 0LL) && (_7213_i > _7033_start))) {
										if ((!(_20583c5b0_prevIsIncompleteExpr(_7015_tokens,_7213_i)))) {
											std::tie(_7417_ok,_7517_terminated) = _20583c26e_isSt(_7613_tok,_7015_tokens[(_7213_i - 1LL)]);
											if (_7417_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7113_braceN)++;
								}
							}
							else {
								_case_begin_1db994412:;
								{
									(_7113_braceN)--;
									if (((_7113_braceN == 0LL) && ((_7213_i + 1LL) < _7015_tokens.len()))) {
										std::tie(_7417_ok,_7517_terminated) = _20583c26e_isSt(_7015_tokens[(_7213_i + 1LL)],_7613_tok);
										if (_7417_ok) {
											(_7213_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1db994247:;
						};
						goto _iter_next_1db9920e1;
					}
				}
				_match_end_1db99382e:;
			};
			if ((_7113_braceN != 0LL)) {
				goto _iter_next_1db9920e1;
			};
			if ((_7213_i > _7033_start)) {
				if (_20583c5b0_prevIsIncompleteExpr(_7015_tokens,_7213_i)) {
					goto _iter_next_1db9920e1;
				};
				std::tie(_7417_ok,_7517_terminated) = _20583c26e_isSt(_7613_tok,_7015_tokens[(_7213_i - 1LL)]);
			} else {
				std::tie(_7417_ok,_7517_terminated) = _20583c26e_isSt(_7613_tok,_7613_tok);
			};
			if ((!(_7417_ok))) {
				goto _iter_next_1db9920e1;
			};
			_julec_label_return:;
			if (_7517_terminated) {
				(_7213_i)++;
			};
			return std::make_tuple(_7213_i,_7517_terminated);
		}
	_iter_next_1db9920e1:;
	}
	_iter_end_1db9920e1:;;
	return std::make_tuple(_7213_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_202b89679_Token>>,jule::Bool> _20583cc86_skipSt(jule::I64& _13216_i, jule::Slice<jule::Ptr<_202b89679_Token>> _13228_tokens) {
	jule::I64 _1339_start = _13216_i;;
	jule::Bool _13413_terminated = false;;
	std::tie(_13216_i,_13413_terminated) = _20583c945_nextStPos(_13228_tokens,_1339_start);
	jule::Slice<jule::Ptr<_202b89679_Token>> _13613_stTokens = _13228_tokens.slice(_1339_start,_13216_i);;
	if (_13413_terminated) {
		if ((_13613_stTokens.len() == 1LL)) {
			std::tie(_13613_stTokens,_13413_terminated) = _20583cc86_skipSt(_13216_i,_13228_tokens);
			return std::make_tuple(_13613_stTokens,_13413_terminated);
		};
		_13613_stTokens=_13613_stTokens.slice(0LL,(_13613_stTokens.len() - 1LL));
	};
	return std::make_tuple(_13613_stTokens,_13413_terminated);
}



inline jule::Slice<jule::Ptr<_20583d083_stmt>> _20583d429_splitStmts(jule::Slice<jule::Ptr<_202b89679_Token>>& _15420_tokens) {
	jule::Slice<jule::Ptr<_20583d083_stmt>> _15513_stmts = jule::Slice<jule::Ptr<_20583d083_stmt>>::alloc(0LL,20LL);;
	jule::I64 _15613_pos = 0LL;;
	while ((_15613_pos < _15420_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_202b89679_Token>> _15818_stmt;;
			jule::Bool _15824_terminated;;
			std::tie(_15818_stmt,_15824_terminated) = _20583cc86_skipSt(_15613_pos,_15420_tokens);
			_15513_stmts = jule::alloc_for_append(_15513_stmts,1);_15513_stmts.__push(jule::new_ptr<_20583d083_stmt>(_20583d083_stmt{._field_tokens=_15818_stmt, ._field_terminated=_15824_terminated}));;
		}
	_iter_next_1db99e186:;
	}
	_iter_end_1db99e186:;;
	return _15513_stmts;
}



inline jule::Bool _205854b16_isTypeOp(jule::Str& _88814_kind) {
	return (((_88814_kind == jule::Str("&", 1)) || (_88814_kind == jule::Str("&&", 2))) || (_88814_kind == jule::Str("*", 1)));
}



inline jule::Bool _205854e02_isTypeRange(jule::Slice<jule::Ptr<_202b89679_Token>>& _89521_tokens) {
	jule::Bool _89613_op = false;;
	{
		auto &expr = _89521_tokens;
		auto it = expr.begin();
		_iter_begin_1dba6d80a:;
		if (it != expr.end()) {
			jule::I64 _8979_i = it - expr.begin();
			jule::Ptr<_202b89679_Token> _89712_token = *it;
			{
				if ((_89712_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					if ((_89712_token.get()._field_Kind == jule::Str("[", 1))) {
						if (_89613_op) {
							return true;
						};
						jule::I64 _90325_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_202b89679_Token>> _90425_lTokens = _89521_tokens.slice(_8979_i);;
						{
							auto &expr = _90425_lTokens;
							auto it = expr.begin();
							_iter_begin_1dba6ec4b:;
							if (it != expr.end()) {
								jule::Ptr<_202b89679_Token> _90524_lToken = *it;
								{
									{
										auto &_match_expr{ _90524_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U64>(3LLU)) {
											_case_begin_1dba715aa:;
											{
												{
													auto &_match_expr{ _90524_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_1dba71e90:;
														{
															(_90325_rangeN)++;
															goto _iter_next_1dba6ec4b;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_1dba72017:;
														{
															(_90325_rangeN)--;
															goto _iter_next_1dba6ec4b;
														}
													}
													_match_end_1dba71c92:;
												};
											}
										}
										_match_end_1dba71357:;
									};
									if ((_90325_rangeN == 0LL)) {
										return _205854b16_isTypeOp(_90524_lToken.get()._field_Kind);
									};
								}
								_iter_next_1dba6ec4b:;
								++it;
								goto _iter_begin_1dba6ec4b;
							}
							_iter_end_1dba6ec4b:;
						};
						return true;
					};
				};
				if ((!(_205854b16_isTypeOp(_89712_token.get()._field_Kind)))) {
					return false;
				};
				_89613_op=true;
			}
			_iter_next_1dba6d80a:;
			++it;
			_8979_i++;
			goto _iter_begin_1dba6d80a;
		}
		_iter_end_1dba6d80a:;
	};
	return true;
}



inline jule::Slice<jule::Ptr<_202b89679_Token>> _205855199_getBlockExpr(jule::Slice<jule::Ptr<_202b89679_Token>>& _93322_tokens) {
	jule::I64 _93413_braceN = 0LL;;
	jule::I64 _93513_skipToNextBraceClose = 0LL;;
	{
		auto &expr = _93322_tokens;
		auto it = expr.begin();
		_iter_begin_1dba73b51:;
		if (it != expr.end()) {
			jule::I64 _9369_i = it - expr.begin();
			jule::Ptr<_202b89679_Token> _93612_tok = *it;
			{
				{
					auto &_match_expr{ _93612_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1dba74a31:;
						{
							(_93513_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1dba74aa8:;
						{
							{
								auto &_match_expr{ _93612_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1dba758bc:;
									{
										if (((_93413_braceN > 0LL) || (_93513_skipToNextBraceClose > 0LL))) {
											if ((_93513_skipToNextBraceClose > 0LL)) {
												(_93513_skipToNextBraceClose)--;
											};
											(_93413_braceN)++;
											goto _match_end_1dba75a76;
										};
										return _93322_tokens.slice(0LL,_9369_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1dba760d7:;
									{
										(_93413_braceN)++;
									}
								}
								else {
									_case_begin_1dba75b64:;
									{
										(_93413_braceN)--;
									}
								}
								_match_end_1dba75a76:;
							};
						}
					}
					_match_end_1dba73524:;
				};
			}
			_iter_next_1dba73b51:;
			++it;
			_9369_i++;
			goto _iter_begin_1dba73b51;
		}
		_iter_end_1dba73b51:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_202b89679_Token>>,jule::Slice<jule::Ptr<_202b89679_Token>>> _20585552e_splitDelim(jule::Slice<jule::Ptr<_202b89679_Token>>& _96420_tokens, jule::U64 _96438_delim) {
	jule::I64 _96513_rangeN = 0LL;;
	{
		auto &expr = _96420_tokens;
		auto it = expr.begin();
		_iter_begin_1dba7799b:;
		if (it != expr.end()) {
			jule::I64 _9669_i = it - expr.begin();
			jule::Ptr<_202b89679_Token> _96612_token = *it;
			{
				{
					auto &_match_expr{ _96612_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1dba78617:;
						{
							{
								auto &_match_expr{ _96612_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1dba78caa:;
									{
										(_96513_rangeN)++;
										goto _iter_next_1dba7799b;
									}
								}
								else {
									_case_begin_1dba79041:;
									{
										(_96513_rangeN)--;
									}
								}
								_match_end_1dba78d76:;
							};
						}
					}
					else if (_match_expr == _96438_delim) {
						_case_begin_1dba7868e:;
						{
							if ((_96513_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_202b89679_Token>> _98025_l = _96420_tokens.slice(0LL,_9669_i);;
								jule::Slice<jule::Ptr<_202b89679_Token>> _98125_r = _96420_tokens.slice((_9669_i + 1LL));;
								return std::make_tuple(_98025_l,_98125_r);
							};
						}
					}
					_match_end_1dba783a3:;
				};
			}
			_iter_next_1dba7799b:;
			++it;
			_9669_i++;
			goto _iter_begin_1dba7799b;
		}
		_iter_end_1dba7799b:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _2058557c6_findLowestPrecOp(jule::Slice<jule::Ptr<_202b89679_Token>>& _99122_tokens) {
	jule::U8 _99613_prec = 255LLU;;
	jule::I64 _99713_precPos = -1LL;;
	jule::I64 _99913_braceN = 0LL;;
	jule::Bool _100013_skipToNextBraceOpen = false;;
	{
		auto &expr = _99122_tokens;
		auto it = expr.begin();
		_iter_begin_1dba7c242:;
		if (it != expr.end()) {
			jule::I64 _10019_i = it - expr.begin();
			jule::Ptr<_202b89679_Token> &_100112_token = *it;
			{
				{
					
					if ((_100112_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1dba7d089:;
						{
							{
								auto &_match_expr{ _100112_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1dba7dc38:;
									{
										_100013_skipToNextBraceOpen=false;
										goto _case_begin_1dba7e4a8;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1dba7e4a8:;
									{
										(_99913_braceN)++;
									}
								}
								else {
									_case_begin_1dba7debe:;
									{
										(_99913_braceN)--;
									}
								}
								_match_end_1dba7dd04:;
							};
							goto _iter_next_1dba7c242;
						}
					}
					else if (_100013_skipToNextBraceOpen) {
						_case_begin_1dba7d111:;
						{
							goto _iter_next_1dba7c242;
						}
					}
					else if ((_100112_token.get()._field_Id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1dba7d188:;
						{
							_100013_skipToNextBraceOpen=true;
							goto _iter_next_1dba7c242;
						}
					}
					else if ((_10019_i == 0LL)) {
						_case_begin_1dba7d210:;
						{
							goto _iter_next_1dba7c242;
						}
					}
					else if ((_100112_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1dba7d287:;
						{
							goto _iter_next_1dba7c242;
						}
					}
					else if ((_99913_braceN > 0LL)) {
						_case_begin_1dba7d30e:;
						{
							goto _iter_next_1dba7c242;
						}
					}
					_match_end_1dba7ce24:;
				};
				jule::Ptr<_202b89679_Token> _102813_left = _99122_tokens[(_10019_i - 1LL)];;
				if (((_102813_left.get()._field_Id == static_cast<jule::U64>(7LLU)) || (_102813_left.get()._field_Id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1dba7c242;
				};
				if ((((_10019_i > 1LL) && (_102813_left.get()._field_Id == static_cast<jule::U64>(3LLU))) && (_102813_left.get()._field_Kind == jule::Str("]", 1)))) {
					jule::Ptr<_202b89679_Token> _103617_lleft = _99122_tokens[(_10019_i - 2LL)];;
					if (((_103617_lleft.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_103617_lleft.get()._field_Kind == jule::Str("[", 1)))) {
						if (((_100112_token.get()._field_Kind == jule::Str("&", 1)) || (_100112_token.get()._field_Kind == jule::Str("*", 1)))) {
							goto _iter_next_1dba7c242;
						};
					};
				};
				jule::U8 _104513_p = _202b89a31_Prec(_100112_token.ptr());;
				if (((_104513_p != 0LLU) && (_104513_p <= _99613_prec))) {
					_99613_prec=_104513_p;
					_99713_precPos=_10019_i;
				};
			}
			_iter_next_1dba7c242:;
			++it;
			_10019_i++;
			goto _iter_begin_1dba7c242;
		}
		_iter_end_1dba7c242:;
	};
	return _99713_precPos;
}



inline jule::Ptr<_20434774d_IdentExpr> _205855a6d_buildIdentExpr(jule::Ptr<_202b89679_Token>& _105424_token) {
	return jule::new_ptr<_20434774d_IdentExpr>(_20434774d_IdentExpr{._field_Token=_105424_token, ._field_Ident=_105424_token.get()._field_Kind, ._field_CppLinked=false});
}



inline std::tuple<jule::Slice<jule::Ptr<_202b89679_Token>>,jule::I64> _205855d15_getRangeExprTokens(jule::Slice<jule::Ptr<_202b89679_Token>>& _106228_tokens) {
	jule::I64 _106313_rangeN = 0LL;;
	jule::I64 _106413_i = (_106228_tokens.len() - 1LL);;
	for (; (_106413_i >= 0LL); (_106413_i)--) {
		{
			jule::Ptr<_202b89679_Token> _106613_tok = _106228_tokens[_106413_i];;
			if ((_106613_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _106613_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1dba87406:;
						{
							(_106313_rangeN)++;
						}
					}
					else {
						_case_begin_1dba87d0d:;
						{
							(_106313_rangeN)--;
						}
					}
					_match_end_1dba87add:;
				};
			};
			if ((_106313_rangeN == 0LL)) {
				return std::make_tuple(_106228_tokens.slice(0LL,_106413_i),_106313_rangeN);
			};
		}
	_iter_next_1dba86a54:;
	}
	_iter_end_1dba86a54:;;
	return std::make_tuple(nullptr,_106313_rangeN);
}



inline jule::Bool _205856a6e_checkAssignTokens(jule::Slice<jule::Ptr<_202b89679_Token>>& _1623_tokens) {
	if (((_1623_tokens.len() == 0LL) || (!(_202b8dc22_IsAssign(_1623_tokens[0LL].get()._field_Id))))) {
		return false;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto &expr = _1623_tokens;
		auto it = expr.begin();
		_iter_begin_1dbb51855:;
		if (it != expr.end()) {
			jule::Ptr<_202b89679_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1dbb5247c:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_1dbb52768:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_1dbb52548:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_1dbb51855;
				} else if (((_2112_t.get()._field_Id == static_cast<jule::U64>(7LLU)) && _202b8e261_IsAssignOp(_2112_t.get()._field_Kind))) {
					return true;
				};
			}
			_iter_next_1dbb51855:;
			++it;
			goto _iter_begin_1dbb51855;
		}
		_iter_end_1dbb51855:;
	};
	return false;
}



inline _20285b7ad_Log _205857c90_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_202b8ea14_File>& _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _20285b7ad_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=_5233_f.get()._field_Path, ._field_Text=_20285bbed_Logf(_5243_fmt,jule::Any(_5256_args)), };
}



inline jule::Slice<jule::Ptr<_202b89679_Token>> _205858268_range(jule::I64& _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_202b89679_Token>>& _7163_tokens) {
	if ((_7115_i >= _7163_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_202b89679_Token> _759_tok = _7163_tokens[_7115_i];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;
	};
	(_7115_i)++;
	jule::I64 _8013_rangeN = 1LL;;
	jule::I64 _819_start = _7115_i;;
	for (; ((_8013_rangeN != 0LL) && (_7115_i < _7163_tokens.len())); (_7115_i)++) {
		{
			jule::Ptr<_202b89679_Token> _8313_token = _7163_tokens[_7115_i];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_1dbb58c9c:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_1dbb58d24:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_1dbb58a38:;
				};
			};
		}
	_iter_next_1dbb56d55:;
	}
	_iter_end_1dbb56d55:;;
	return _7163_tokens.slice(_819_start,(_7115_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_202b89679_Token>>,jule::Slice<jule::Ptr<_202b89679_Token>>> _205858510_rangeLast(jule::Slice<jule::Ptr<_202b89679_Token>>& _10319_tokens) {
	jule::Slice<jule::Ptr<_202b89679_Token>> _10339_cutted = jule::Slice<jule::Ptr<_202b89679_Token>>();
	jule::Slice<jule::Ptr<_202b89679_Token>> _10357_cut = jule::Slice<jule::Ptr<_202b89679_Token>>();
	if ((_10319_tokens.len() == 0LL)) {
		_10339_cutted = _10319_tokens;
		_10357_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10357_cut);
	} else if ((_10319_tokens[(_10319_tokens.len() - 1LL)].get()._field_Id != static_cast<jule::U64>(3LLU))) {
		_10339_cutted = _10319_tokens;
		_10357_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10357_cut);
	};
	jule::I64 _10913_braceN = 0LL;;
	jule::I64 _11013_i = (_10319_tokens.len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_202b89679_Token> _11213_token = _10319_tokens[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1dbb5c795:;
						{
							(_10913_braceN)++;
							goto _iter_next_1dbb59e46;
						}
					}
					else {
						_case_begin_1dbb5d1d0:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_1dbb5ceb0:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				_10339_cutted = _10319_tokens.slice(0LL,_11013_i);
				_10357_cut = _10319_tokens.slice(_11013_i);
				return std::make_tuple(_10339_cutted,_10357_cut);
			};
		}
	_iter_next_1dbb59e46:;
	}
	_iter_end_1dbb59e46:;;
	_10339_cutted = _10319_tokens;
	_10357_cut = nullptr;
	return std::make_tuple(_10339_cutted,_10357_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>>,jule::Slice<_20285b7ad_Log>> _2058588ea_partsKind(jule::Slice<jule::Ptr<_202b89679_Token>>& _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	if ((_13219_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _13713_parts = nullptr;;
	jule::Slice<_20285b7ad_Log> _13813_errors = nullptr;;
	jule::I64 _14013_rangeN = 0LL;;
	jule::I64 _14113_last = 0LL;;
	{
		auto &expr = _13219_tokens;
		auto it = expr.begin();
		_iter_begin_1dbb61c72:;
		if (it != expr.end()) {
			jule::I64 _1429_i = it - expr.begin();
			jule::Ptr<_202b89679_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1dbb62cc8:;
							{
								(_14013_rangeN)++;
								goto _iter_next_1dbb61c72;
							}
						}
						else {
							_case_begin_1dbb630b4:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_1dbb62d94:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_1dbb61c72;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_20285b7ad_Log _16121_err = _205857c90_makeErr(_14212_token.get()._field_Row,_14212_token.get()._field_Column,_14212_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_13813_errors = jule::alloc_for_append(_13813_errors,1);_13813_errors.__push(_16121_err);;
					};
					_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(_13219_tokens.slice(_14113_last,_1429_i));;
					_14113_last=static_cast<jule::I64>((_1429_i + 1LL));
				};
			}
			_iter_next_1dbb61c72:;
			++it;
			_1429_i++;
			goto _iter_begin_1dbb61c72;
		}
		_iter_end_1dbb61c72:;
	};
	if ((_14113_last < _13219_tokens.len())) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(_13219_tokens.slice(_14113_last));;
	} else if ((!(_13254_expr_must))) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(jule::Slice<jule::Ptr<_202b89679_Token>>());;
	};
	return std::make_tuple(_13713_parts,_13813_errors);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>>,jule::Slice<_20285b7ad_Log>> _205858cd5_parts(jule::Slice<jule::Ptr<_202b89679_Token>>& _18415_tokens, jule::U64 _18433_id, jule::Bool _18446_expr_must) {
	if ((_18415_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_202b89679_Token>>> _18913_parts = nullptr;;
	jule::Slice<_20285b7ad_Log> _19013_errors = nullptr;;
	jule::I64 _19213_rangeN = 0LL;;
	jule::I64 _19313_last = 0LL;;
	{
		auto &expr = _18415_tokens;
		auto it = expr.begin();
		_iter_begin_1dbb68c24:;
		if (it != expr.end()) {
			jule::I64 _1949_i = it - expr.begin();
			jule::Ptr<_202b89679_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1dbb69c7a:;
							{
								(_19213_rangeN)++;
								goto _iter_next_1dbb68c24;
							}
						}
						else {
							_case_begin_1dbb6a066:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_1dbb69d46:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_1dbb68c24;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_20285b7ad_Log _21321_err = _205857c90_makeErr(_19412_token.get()._field_Row,_19412_token.get()._field_Column,_19412_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_19013_errors = jule::alloc_for_append(_19013_errors,1);_19013_errors.__push(_21321_err);;
					};
					_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(_18415_tokens.slice(_19313_last,_1949_i));;
					_19313_last=static_cast<jule::I64>((_1949_i + 1LL));
				};
			}
			_iter_next_1dbb68c24:;
			++it;
			_1949_i++;
			goto _iter_begin_1dbb68c24;
		}
		_iter_end_1dbb68c24:;
	};
	if ((_19313_last < _18415_tokens.len())) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(_18415_tokens.slice(_19313_last));;
	} else if ((!(_18446_expr_must))) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(jule::Slice<jule::Ptr<_202b89679_Token>>());;
	};
	return std::make_tuple(_18913_parts,_19013_errors);
}



inline jule::Str _20585907c_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1dbb6dee3:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1dbb6961a:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1dbb69681:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1dbb695a4:;
			{
				return jule::Str();
			}
		}
		_match_end_1dbb6d6c9:;
	};
}



inline _20285b7ad_Log _205859467_compilerErr(jule::Ptr<_202b89679_Token>& _24317_token, jule::Str& _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _20285b7ad_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_24317_token.get()._field_Row, ._field_Column=_24317_token.get()._field_Column, ._field_Path=_24317_token.get()._field_File.get()._field_Path, ._field_Text=_20285bbed_Logf(_24333_fmt,jule::Any(_24346_args)), ._field_Line=_202b90be1_GetRow(_24317_token.get()._field_File.ptr(), _24317_token.get()._field_Row), };
}



inline void _205859896_pushSuggestion(_20285b7ad_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_20285bbed_Logf(_25441_fmt,jule::Any(_25454_args));
}



inline jule::Str _205859b3d_tokstoa(jule::Slice<jule::Ptr<_202b89679_Token>>& _25813_tokens) {
	jule::I64 _25913_n = 0LL;;
	{
		auto &expr = _25813_tokens;
		auto it = expr.begin();
		_iter_begin_1dbb72128:;
		if (it != expr.end()) {
			jule::Ptr<_202b89679_Token> &_26012_token = *it;
			{
				_25913_n+=_26012_token.get()._field_Kind.len();
			}
			_iter_next_1dbb72128:;
			++it;
			goto _iter_begin_1dbb72128;
		}
		_iter_end_1dbb72128:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto &expr = _25813_tokens;
		auto it = expr.begin();
		_iter_begin_1dbb729db:;
		if (it != expr.end()) {
			jule::Ptr<_202b89679_Token> &_26412_token = *it;
			{
				_26313_s+=_26412_token.get()._field_Kind;
			}
			_iter_next_1dbb729db:;
			++it;
			goto _iter_begin_1dbb729db;
		}
		_iter_end_1dbb729db:;
	};
	return _26313_s;
}



inline jule::Bool _205869ba3_isPub(jule::Str& _203511_ident) {
	jule::I32 _203610_r;;
	std::tie(_203610_r,std::ignore) = _2027ae5ac_DecodeRuneStr(_203511_ident);
	return _2026ed023_IsUpper(_203610_r);
}



inline jule::Ptr<_20434156b_TypeDecl> _20586a522_buildVoidType(void) {
	return jule::new_ptr<_20434156b_TypeDecl>();
}



inline jule::Ptr<_20434156b_TypeDecl> _20586a786_buildPrimType(jule::Ptr<_202b89679_Token> _2322_t) {
	return jule::new_ptr<_20434156b_TypeDecl>(_20434156b_TypeDecl{._field_Token=_2322_t, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_204341b32_IdentTypeDecl>(_204341b32_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }))});
}



inline std::tuple<jule::Bool,jule::Bool> _205171b4d_checkOs(jule::Str _912_arg) {
	jule::Bool _924_ok = jule::Bool();
	jule::Bool _934_exist = jule::Bool();
	_924_ok=false;
	_934_exist=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1dbe19799:;
			{
				_924_ok=_20285eb13_IsWindows(_2028a5b7b_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1dbe1936a:;
			{
				_924_ok=_20285edbb_IsDarwin(_2028a5b7b_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1dbe1914a:;
			{
				_924_ok=_202860163_IsLinux(_2028a5b7b_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1dbe191b1:;
			{
				_924_ok=_202860c68_IsUnix(_2028a5b7b_Os);
			}
		}
		else {
			_case_begin_1dbe18897:;
			{
				_924_ok=true;
				_934_exist=false;
			}
		}
		_match_end_1dbe18d09:;
	};
	return std::make_tuple(_924_ok,_934_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _205171c80_checkArch(jule::Str _2814_arg) {
	jule::Bool _2826_ok = jule::Bool();
	jule::Bool _2836_exist = jule::Bool();
	_2826_ok=false;
	_2836_exist=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1dbe1bec7:;
			{
				_2826_ok=_202860482_IsI386(_202895154_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1dbe1ba98:;
			{
				_2826_ok=_202860729_IsAmd64(_202895154_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1dbe1b878:;
			{
				_2826_ok=_2028609c1_IsArm64(_202895154_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1dbe1b8de:;
			{
				_2826_ok=_202861384_Is64Bit(_202895154_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1dbe1b955:;
			{
				_2826_ok=_2028610dc_Is32Bit(_202895154_Arch);
			}
		}
		else {
			_case_begin_1dbe1b0d6:;
			{
				_2826_ok=true;
				_2836_exist=false;
			}
		}
		_match_end_1dbe1b537:;
	};
	return std::make_tuple(_2826_ok,_2836_exist);
}



inline jule::Bool _205171db2_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_20182746c_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL,(_529_n - _201847c51_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _2027d29ed_FindLastByte(_5029_p,'_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok;;
		jule::Bool _6726_exist;;
		std::tie(_6718_ok,_6726_exist) = _205171b4d_checkOs(_5029_p);
		if (_6726_exist) {
			return _6718_ok;
		};
		std::tie(_6718_ok,_6726_exist) = _205171c80_checkArch(_5029_p);
		return ((!(_6726_exist)) || _6718_ok);
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL,_6413_i);;
	_6413_i=static_cast<jule::I64>(_2027d29ed_FindLastByte(_5029_p,'_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok;;
		jule::Bool _8826_exist;;
		std::tie(_8818_ok,_8826_exist) = _205171b4d_checkOs(_5813_a1);
		if (_8826_exist) {
			return _8818_ok;
		};
		std::tie(_8818_ok,_8826_exist) = _205171c80_checkArch(_5813_a1);
		return ((!(_8826_exist)) || _8818_ok);
	};
	jule::Bool _9614_ok;;
	jule::Bool _9622_exist;;
	std::tie(_9614_ok,_9622_exist) = _205171c80_checkArch(_5813_a1);
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;
		};
		std::tie(_9614_ok,_9622_exist) = _205171b4d_checkOs(_6113_a2);
		return ((!(_9622_exist)) || _9614_ok);
	};
	std::tie(_9614_ok,_9622_exist) = _205171b4d_checkOs(_5813_a1);
	return ((!(_9622_exist)) || _9614_ok);
}



inline void _20518bccd_setOsVars(jule::Slice<jule::Str>& _3619_vars) {
	_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(_2028a5b7b_Os);;
	if (_202860c68_IsUnix(_2028a5b7b_Os)) {
		_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _20518c031_setArchVars(jule::Slice<jule::Str>& _4421_vars) {
	_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(_202895154_Arch);;
	if (_202861384_Is64Bit(_202895154_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x64", 3));;
	};
	if (_2028610dc_Is32Bit(_202895154_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _20518c2d9_initVars(jule::Slice<jule::Str>& _5518_vars, _20518b9c0_CompileInfo& _5532_info) {
	_20518bccd_setOsVars(_5518_vars);
	_20518c031_setArchVars(_5518_vars);
	if (_5532_info._field_Prod) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("production", 10));;
	};
	if (_5532_info._field_Test) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5532_info._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1dbe2828b:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1dbe28302:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1dbe27ed3:;
	};
	{
		auto &_match_expr{ _5532_info._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1dbe2990d:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1dbe29974:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1dbe299da:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1dbe298a8:;
	};
}



inline jule::Slice<jule::U8> _205283c4e_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__20096ac65_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_2028aae6c_Exit(1LL);
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _20285b7ad_Log _2052e7444_flatCompilerErr(jule::Str _4120_text) {
	return _20285b7ad_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };
}



inline void _20561b856_pushPasses(jule::Ptr<_20500dd70_Package>& _11120_p, jule::Slice<jule::Str>& _11144_passes) {
	{
		auto &expr = _11120_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1dbe5e602:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11217_f.get()._field_Passes;
					auto it = expr.begin();
					_iter_begin_1dbe602d4:;
					if (it != expr.end()) {
						_204ec871e_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1dbe602d4;
							};
							{
								auto &expr = _11144_passes;
								auto it = expr.begin();
								_iter_begin_1dbe611c5:;
								if (it != expr.end()) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1dbe602d4;
										};
									}
									_iter_next_1dbe611c5:;
									++it;
									goto _iter_begin_1dbe611c5;
								}
								_iter_end_1dbe611c5:;
							};
							_11144_passes = jule::alloc_for_append(_11144_passes,1);_11144_passes.__push(_11416_pass._field_Text);;
						}
						_iter_next_1dbe602d4:;
						++it;
						goto _iter_begin_1dbe602d4;
					}
					_iter_end_1dbe602d4:;
				};
			}
			_iter_next_1dbe5e602:;
			++it;
			goto _iter_begin_1dbe5e602;
		}
		_iter_end_1dbe5e602:;
	};
}



inline jule::Slice<jule::Str> _20563474d_getAllUniquePasses(jule::Ptr<_20500dd70_Package>& _12828_pkg, jule::Slice<jule::Ptr<_20500ae16_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_20561b856_pushPasses(_12828_pkg,_12913_passes);
	{
		auto &expr = _12853_uses;
		auto it = expr.begin();
		_iter_begin_1dbe62836:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_20561b856_pushPasses(_13217_u.get()._field_Package,_12913_passes);
				};
			}
			_iter_next_1dbe62836:;
			++it;
			goto _iter_begin_1dbe62836;
		}
		_iter_end_1dbe62836:;
	};
	return _12913_passes;
}



inline _20518b9c0_CompileInfo _20563ee2e_buildCompileInfo(void) {
	_20518b9c0_CompileInfo _14213_info = _20518b9c0_CompileInfo{._field_Prod=_20089198d_Production, ._field_Test=_200890e65_Test, };;
	{
		auto &_match_expr{ _20089021c_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1dbe63dba:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1dbe63e31:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1dbe63d54:;
	};
	{
		auto &_match_expr{ _2008906e5_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1dbe64a69:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1dbe63617:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1dbe6432c:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1dbe6475b:;
	};
	return _14213_info;
}



inline void _20596eb10_EliminateDefines(jule::Ptr<_2054b956c_IR>& _28526_ir) {
	jule::Ptr<_20593a0e7_ObjectDeadCode> _28613_ocd = static__20593a548_new(_28526_ir);;
	_20596e846_elimanate(_28613_ocd);
}



inline jule::Ptr<_20430829c_Directive> _20596ee95_findDirective(jule::Slice<jule::Ptr<_20430829c_Directive>>& _29123_directives, jule::Str _29154_tag) {
	{
		auto &expr = _29123_directives;
		auto it = expr.begin();
		_iter_begin_1dbea8edc:;
		if (it != expr.end()) {
			jule::Ptr<_20430829c_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;
				};
			}
			_iter_next_1dbea8edc:;
			++it;
			goto _iter_begin_1dbea8edc;
		}
		_iter_end_1dbea8edc:;
	};
	return nullptr;
}



inline jule::Bool _2059702d6_hasDirective(jule::Slice<jule::Ptr<_20430829c_Directive>>& _30118_directives, jule::Str _30149_tag) {
	return (_20596ee95_findDirective(_30118_directives,_30149_tag) != nullptr);
}



inline void _205973e33_eliminateDeadCodeOfScope(jule::Ptr<_204edc645_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_204eded84_Label>> _2429_labels = jule::Slice<jule::Ptr<_204eded84_Label>>::alloc(0LL,16LLU);;
	jule::Slice<jule::Ptr<_204ee0170_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_204ee0170_GotoSt>>::alloc(0LL,16LLU);;
	jule::Ptr<_20597102e_scopeDeadCode> _24413_sdc = jule::new_ptr<_20597102e_scopeDeadCode>(_20597102e_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_204eded84_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_204ee0170_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_205973b47_optimizeStmts(_24413_sdc);
	};
}



inline void _2059741b9_eliminateScopeFunctions(jule::Slice<jule::Ptr<_204ec707a_Fn>>& _25433_funcs) {
	{
		auto &expr = _25433_funcs;
		auto it = expr.begin();
		_iter_begin_1dc000198:;
		if (it != expr.end()) {
			jule::Ptr<_204ec707a_Fn> _25517_func = *it;
			{
				{
					auto &expr = _25517_func.get()._field_Instances;
					auto it = expr.begin();
					_iter_begin_1dc000808:;
					if (it != expr.end()) {
						jule::Ptr<_204ec7454_FnIns> _25621_ins = *it;
						{
							_205973e33_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1dc000808:;
						++it;
						goto _iter_begin_1dc000808;
					}
					_iter_end_1dc000808:;
				};
			}
			_iter_next_1dc000198:;
			++it;
			goto _iter_begin_1dc000198;
		}
		_iter_end_1dc000198:;
	};
}



inline void _20597440b_eliminateFunctionsScopePackage(jule::Ptr<_20500dd70_Package>& _26240_pkg) {
	{
		auto &expr = _26240_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1dc000c59:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _26317_f = *it;
			{
				_2059741b9_eliminateScopeFunctions(_26317_f.get()._field_Funcs);
			}
			_iter_next_1dc000c59:;
			++it;
			goto _iter_begin_1dc000c59;
		}
		_iter_end_1dc000c59:;
	};
}



inline void _2059746a3_eliminateScopePackage(jule::Ptr<_20500dd70_Package>& _26831_pkg) {
	_20597440b_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _2059748b2_EliminateScopes(jule::Ptr<_2054b956c_IR>& _27325_ir) {
	jule::I64 _27413_i = (_27325_ir.get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_20500ae16_ImportInfo> _27617_u = _27325_ir.get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_2059746a3_eliminateScopePackage(_27617_u.get()._field_Package);
			};
		}
	_iter_next_1dc0029d6:;
	}
	_iter_end_1dc0029d6:;;
	_2059746a3_eliminateScopePackage(_27325_ir.get()._field_Main);
}



inline jule::Bool _202d01417_isStdPackage(jule::Str _39917_f, jule::Str _39925_p) {
	return _2027ce8da_HasPrefix(_39917_f,_201840276_Join(jule::Slice<jule::Str>::make({_2028954d9_PathStdlib,_39925_p})));
}



inline jule::Bool _202d04096_isConstantValidConditionalCase(jule::Ptr<_204edca41_If>& _40336_i) {
	{
		auto &_match_expr{ _40336_i.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_2044102b6_Const>>()) {
			_case_begin_1dc0836e3:;
			{
				jule::Ptr<_2044102b6_Const> _40613_c = _40336_i.get()._field_Expr.operator jule::Ptr<_2044102b6_Const>();;
				return (_20442483b_IsBool(_40613_c.ptr()) && _204458e9c_ReadBool(_40613_c.ptr()));
			}
		}
		_match_end_1dc083d42:;
	};
	return false;
}



inline jule::Bool _202d056a2_isUnreachableExpr(jule::Any& _41223_expr) {
	{
		auto &_match_expr{ _41223_expr };
		
		if (_match_expr.type_is<jule::Ptr<_2044102b6_Const>>()) {
			_case_begin_1dc0841a5:;
			{
				jule::Ptr<_2044102b6_Const> _41513_c = _41223_expr.operator jule::Ptr<_2044102b6_Const>();;
				return (_20442483b_IsBool(_41513_c.ptr()) && (!(_204458e9c_ReadBool(_41513_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec152a_BinopExprModel>>()) {
			_case_begin_1dc08422c:;
			{
				jule::Ptr<_204ec152a_BinopExprModel> _41813_m = _41223_expr.operator jule::Ptr<_204ec152a_BinopExprModel>();;
				if ((_41813_m.get()._field_Op.get()._field_Kind == jule::Str("&&", 2))) {
					return (_202d056a2_isUnreachableExpr(_41813_m.get()._field_Left.get()._field_Model) || _202d056a2_isUnreachableExpr(_41813_m.get()._field_Right.get()._field_Model));
				};
			}
		}
		_match_end_1dc084d21:;
	};
	return false;
}



inline jule::Bool _202d08331_isConstantValidMatchCase(jule::Ptr<_204ee1ddb_Case>& _42730_case) {
	{
		auto &expr = _42730_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1dc0853b5:;
		if (it != expr.end()) {
			jule::Ptr<_20507eb49_Data> &_42812_expr = *it;
			{
				if (((_20508050c_IsConst(_42812_expr.ptr()) && _20442483b_IsBool(_42812_expr.get()._field_Constant.ptr())) && _204458e9c_ReadBool(_42812_expr.get()._field_Constant.ptr()))) {
					return true;
				};
			}
			_iter_next_1dc0853b5:;
			++it;
			goto _iter_begin_1dc0853b5;
		}
		_iter_end_1dc0853b5:;
	};
	return false;
}



inline jule::Bool _202d09585_isUnreachableConditionalCase(jule::Ptr<_204edca41_If>& _43634_i) {
	return _202d056a2_isUnreachableExpr(_43634_i.get()._field_Expr);
}



inline jule::Bool _202d1248e_isUnreachableMatchCase(jule::Ptr<_204ee1ddb_Case>& _44028_case) {
	{
		auto &expr = _44028_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1dc0891cc:;
		if (it != expr.end()) {
			jule::Ptr<_20507eb49_Data> &_44112_expr = *it;
			{
				if ((!(_202d056a2_isUnreachableExpr(_44112_expr.get()._field_Model)))) {
					return false;
				};
			}
			_iter_next_1dc0891cc:;
			++it;
			goto _iter_begin_1dc0891cc;
		}
		_iter_end_1dc0891cc:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _2033ad045_checkForBitShiftOpt(jule::Ptr<_204ec133d_OperandExprModel>& _45125_l, jule::Ptr<_204ec133d_OperandExprModel>& _45148_r) {
	jule::Bool _45172_ok = jule::Bool();
	jule::U64 _45182_x = jule::U64();
	if (((!(_204ebe308_IsInt(_2050aacda_Str(_45125_l.get()._field_Kind.ptr())))) || (!(_204ebe308_IsInt(_2050aacda_Str(_45148_r.get()._field_Kind.ptr())))))) {
		_45172_ok = false;
		_45182_x = 0LLU;
		return std::make_tuple(_45172_ok,_45182_x);
	};
	{
		auto &_match_expr{ _45148_r.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_2044102b6_Const>>()) {
			_case_begin_1dc0c60e8:;
			{
				goto _match_end_1dc0c6d0d;
			}
		}
		else {
			_case_begin_1dc0c6d63:;
			{
				_45172_ok = false;
				_45182_x = 0LLU;
				return std::make_tuple(_45172_ok,_45182_x);
			}
		}
		_match_end_1dc0c6d0d:;
	};
	_45182_x=static_cast<jule::U64>(_2044573b8_AsU64(_45148_r.get()._field_Model.operator jule::Ptr<_2044102b6_Const>().ptr()));
	if (((_45182_x == 0LLU) || ((_45182_x & 1LL) != 0LLU))) {
		_45172_ok = false;
		_45182_x = 0LLU;
		return std::make_tuple(_45172_ok,_45182_x);
	};
	jule::F64 _4659_j = _204e8db35_Log2(static_cast<jule::F64>(static_cast<jule::F64>(_45182_x)));;
	jule::U64 _4669_z = static_cast<jule::U64>(_4659_j);;
	if ((static_cast<jule::F64>(_4669_z) != _4659_j)) {
		_45172_ok = false;
		_45182_x = 0LLU;
		return std::make_tuple(_45172_ok,_45182_x);
	};
	_45172_ok = true;
	_45182_x = _4669_z;
	return std::make_tuple(_45172_ok,_45182_x);
}



inline void _2033b218c_PushOptLevel(jule::I64 _3217_level) {
	_202bc2e43_Copy=(_3217_level >= static_cast<jule::I64>(1LL));
	_202bc7475_Deadcode=(_3217_level >= static_cast<jule::I64>(1LL));
	_202bb120b_Append=(_3217_level >= static_cast<jule::I64>(1LL));
	_202beba2c_Math=(_3217_level >= static_cast<jule::I64>(1LL));
	_202c04c55_Access=(_3217_level >= static_cast<jule::I64>(1LL));
	_202c07c25_Inline=(_3217_level >= static_cast<jule::I64>(1LL));
	_202c08143_Ptr=(_3217_level >= static_cast<jule::I64>(1LL));
	_202c08a39_Cond=(_3217_level >= static_cast<jule::I64>(1LL));
}



inline void _2058ead77_detectEnabled(void) {
	_205871935_exprEnabled=(((_202c08143_Ptr || _202beba2c_Math) || _202c04c55_Access) || _202c08a39_Cond);
	_205872a8a_scopeEnabled=((_202c08a39_Cond || _202bb120b_Append) || _202bc2e43_Copy);
}



inline void _205982381_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_2028aae6c_Exit(1LL);
}



inline jule::U64 _1d7dc8295_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1d7dc85a3_unixYearToSeconds(jule::U64 _20122_y, jule::Bool& _20140_leap) {
	if (((_20122_y - 2LLU) <= 136LLU)) {
		jule::U64 _20317_leaps = ((_20122_y - 68LLU) >> 2LLU);;
		_20140_leap=(((_20122_y - 68LLU) & 3LLU) == 0LLU);
		if (_20140_leap) {
			(_20317_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_20122_y - 70LLU)) + (86400LLU * _20317_leaps)));
	};
	jule::U64 _21113_leaps = 0LLU;;
	jule::U64 _21213_centuries = 0LLU;;
	jule::U64 _21313_cycles = ((_20122_y - 100LLU) / 400LLU);;
	jule::U64 _21413_rem = ((_20122_y - 100LLU) % 400LL);;
	if ((_21413_rem < 0LLU)) {
		(_21313_cycles)--;
		_21413_rem+=400LLU;
	};
	if ((_21413_rem == 0LLU)) {
		_20140_leap=true;
		_21213_centuries=0LLU;
		_21113_leaps=0LLU;
	} else {
		if ((_21413_rem >= 200LLU)) {
			if ((_21413_rem >= 300LLU)) {
				_21213_centuries=3LLU;
				_21413_rem-=300LLU;
			} else {
				_21213_centuries=2LLU;
				_21413_rem-=200LLU;
			};
		} else {
			if ((_21413_rem >= 100LLU)) {
				_21213_centuries=1LLU;
				_21413_rem-=100LLU;
			} else {
				_21213_centuries=0LLU;
			};
		};
		if ((_21413_rem == 0LLU)) {
			_20140_leap=false;
			_21113_leaps=0LLU;
		} else {
			_21113_leaps=static_cast<jule::U64>((_21413_rem >> 2LLU));
			_21413_rem%=4LL;
			_20140_leap=(_21413_rem == 0LLU);
		};
	};
	_21113_leaps+=((97LLU * _21313_cycles) + (24LLU * _21213_centuries));
	if (_20140_leap) {
		(_21113_leaps)++;
	};
	return static_cast<jule::U64>((((((_20122_y - 100LLU) * 31536000LLU) + (_21113_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _1d7dc8938_unixMonthToSeconds(jule::U64 _25823_m, jule::Bool _25836_leap) {
	jule::U64 _26013_t = 0LLU;;
	{
		auto &_match_expr{ _25823_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1dc164054:;
			{
				_26013_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1dc1641db:;
			{
				_26013_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1dc164252:;
			{
				_26013_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1dc1642b8:;
			{
				_26013_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1dc16432e:;
			{
				_26013_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1dc164395:;
			{
				_26013_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1dc16440b:;
			{
				_26013_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1dc164472:;
			{
				_26013_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1dc1644d8:;
			{
				_26013_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1dc164560:;
			{
				_26013_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1dc1645d7:;
			{
				_26013_t=28857600LLU;
			}
		}
		_match_end_1dc163eee:;
	};
	if ((_25836_leap && (_25823_m >= 2LLU))) {
		_26013_t+=86400LLU;
	};
	return _26013_t;
}



inline jule::Bool _1d7215eb8_isCopyOptimizable(jule::Ptr<_20507eb49_Data>& _77123_expr) {
	if ((!(_77123_expr.get()._field_Lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _77123_expr.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_204ec2d34_SlicingExprModel>>()) {
			_case_begin_1dbd6c224:;
			{
				return false;
			}
		}
		_match_end_1dbd6c1be:;
	};
	return true;
}



inline jule::Bool _1d721634d_isIterCopyOptimizable(jule::Ptr<_20507eb49_Data>& _78227_expr, jule::Ptr<_205031cb6_Var>& _78241_v) {
	if (((!(_78227_expr.get()._field_Lvalue)) && (!(_2050abcdb_Mutable(_78227_expr.get()._field_Kind.ptr()))))) {
		return true;
	};
	return ((!(_78241_v.get()._field_Mutable)) && (!(_78227_expr.get()._field_Mutable)));
}



inline jule::Str _1d7d35697_decomposeCommonEsq(jule::U8 _125023_b) {
	{
		auto &_match_expr{ _125023_b };
		
		if (_match_expr == '\\') {
			_case_begin_1dc1edd47:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1dc1eddad:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1dc1ede24:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1dc1ede8a:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1dc1ee1dd:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1dc1ee254:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1dc1ee2ba:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1dc1ee331:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1dc1ee397:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1dc1ee562:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1dc1edcae:;
			{
				return jule::Str();
			}
		}
		_match_end_1dc1edc04:;
	};
}



inline jule::Str _1d7d35983_sbtoa(jule::U8 _127710_b) {
	if ((_127710_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_127710_b < 128LLU)) {
		jule::Str _128213_seq = _1d7d35697_decomposeCommonEsq(_127710_b);;
		if ((!(_128213_seq.empty()))) {
			return _128213_seq;
		};
		if (((32LL <= _127710_b) && (_127710_b <= 126LLU))) {
			return static_cast<jule::Str>(_127710_b);
		};
	};
	jule::Str _12909_seq = _204ebc5ae_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_127710_b)),8LL);;
	if ((_12909_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _12909_seq);
	};
	return (jule::Str("\\", 1) + _12909_seq);
}



inline jule::Str _1d7d35c2a_cstrBytes(jule::Slice<jule::U8> _129714_bytes) {
	jule::Str _129813_lit = jule::Str::alloc(0LL, _129714_bytes.len());;
	{
		auto &expr = _129714_bytes;
		auto it = expr.begin();
		_iter_begin_1dc205a1e:;
		if (it != expr.end()) {
			jule::U8 &_129912_b = *it;
			{
				_129813_lit+=_1d7d35983_sbtoa(_129912_b);
			}
			_iter_next_1dc205a1e:;
			++it;
			goto _iter_begin_1dc205a1e;
		}
		_iter_end_1dc205a1e:;
	};
	return _129813_lit;
}



inline jule::Str _1d7d36049_cstrLit(jule::Slice<jule::U8> _130512_bytes) {
	return ((jule::Str("\"", 1) + _1d7d35c2a_cstrBytes(_130512_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1d7d36357_ftoa(jule::F64 _13099_f, jule::I64 _130917_bitsize) {
	if ((_130917_bitsize != 32LL)) {
		if ((_13099_f == static_cast<jule::F64>(static_cast<jule::I64>(_13099_f)))) {
			return _1d7d365ee_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_13099_f)));
		};
		if ((_13099_f == static_cast<jule::F64>(static_cast<jule::U64>(_13099_f)))) {
			return _1d7d36896_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_13099_f)));
		};
	};
	jule::Str _131813_m = _2048ecc04_FmtFloat(_13099_f,'f',-1LL,_130917_bitsize);;
	if ((!(_2027d437e_Contains(_131813_m,jule::Str(".", 1))))) {
		_131813_m+=jule::Str(".0", 2);
	};
	return _131813_m;
}



inline jule::Str _1d7d365ee_itoa(jule::I64 _13259_x) {
	{
		
		if ((_13259_x == jule::MAX_I64)) {
			_case_begin_1dc209539:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_13259_x == jule::MIN_I64)) {
			_case_begin_1dc2095a0:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1dc2093d5:;
	};
	jule::Str _13339_fmt = _204ebc6e1_FmtInt(_13259_x,10LL);;
	if (_202861384_Is64Bit(jule::Str("amd64", 5))) {
		return (_13339_fmt + jule::Str("LL", 2));
	};
	return (_13339_fmt + jule::Str("L", 1));
}



inline jule::Str _1d7d36896_utoa(jule::U64 _13409_x) {
	{
		
		if ((_13409_x == jule::MAX_U64)) {
			_case_begin_1dc20b4c5:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1dc20b3d7:;
	};
	jule::Str _13469_fmt = _204ebc5ae_FmtUint(_13409_x,10LL);;
	if (_202861384_Is64Bit(jule::Str("amd64", 5))) {
		return (_13469_fmt + jule::Str("LLU", 3));
	};
	return (_13469_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1d7d36c4d_isForwarded(jule::Ptr<_204edc645_Scope>& _135317_s) {
	jule::Any _13549_last = _135317_s.get()._field_Stmts[(_135317_s.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _13549_last };
		
		if (_match_expr.type_is<jule::Ptr<_20507eb49_Data>>()) {
			_case_begin_1dc20e077:;
			{
				{
					auto &_match_expr{ _13549_last.operator jule::Ptr<_20507eb49_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_204ec5b5b_BuiltinErrorCallExprModel>>()) {
						_case_begin_1dc20ec59:;
						{
							return true;
						}
					}
					else {
						_case_begin_1dc20e572:;
						{
							return false;
						}
					}
					_match_end_1dc20dc03:;
				};
			}
		}
		else {
			_case_begin_1dc20d8d4:;
			{
				return true;
			}
		}
		_match_end_1dc20d87e:;
	};
}



inline jule::Bool _1d7d37017_isBuiltinCallHasDebuginf(jule::Ptr<_204ec21a7_FnCallExprModel>& _136830_m) {
	if ((!(_204ec7641_IsBuiltin(_136830_m.get()._field_Func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _136830_m.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_204ec3be2_CommonSubIdentExprModel>>()) {
			_case_begin_1dc210b17:;
			{
				jule::Ptr<_204ec3be2_CommonSubIdentExprModel> _137413_csie = _136830_m.get()._field_Expr.operator jule::Ptr<_204ec3be2_CommonSubIdentExprModel>();;
				return (_137413_csie.get()._field_Ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1dc21041e:;
			{
				return false;
			}
		}
		_match_end_1dc20eb5a:;
	};
}



inline jule::Bool _1d7d37248_isExprComesFromBind(jule::Ptr<_20507eb49_Data>& _138125_d) {
	{
		auto &_match_expr{ _138125_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_205031cb6_Var>>()) {
			_case_begin_1dc212025:;
			{
				return _138125_d.get()._field_Model.operator jule::Ptr<_205031cb6_Var>().get()._field_CppLinked;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec343e_StructSubIdentExprModel>>()) {
			_case_begin_1dc21208b:;
			{
				return _138125_d.get()._field_Model.operator jule::Ptr<_204ec343e_StructSubIdentExprModel>().get()._field_Owner.get()._field_Decl.get()._field_CppLinked;
			}
		}
		else {
			_case_begin_1dc210908:;
			{
				return false;
			}
		}
		_match_end_1dc211a5d:;
	};
}



inline void _1d7dd149b_iterFiles(jule::Ptr<_20500dd70_Package>& _100919_pkg, jule::Fn<void(jule::Ptr<_205074eb3_SymbolTable>&)> _100934_f) {
	{
		auto &expr = _100919_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1dc3985eb:;
		if (it != expr.end()) {
			jule::Ptr<_205074eb3_SymbolTable> _101017_file = *it;
			{
				_100934_f(_101017_file);
			}
			_iter_next_1dc3985eb:;
			++it;
			goto _iter_begin_1dc3985eb;
		}
		_iter_end_1dc3985eb:;
	};
}



inline void _1d7dd15cd_prepareStructure(jule::Ptr<_20433367e_Struct>& _101526_s) {
	{
		auto &expr = _101526_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1dc398d8d:;
		if (it != expr.end()) {
			jule::Ptr<_20435cc5d_StructIns> _101617_ins = *it;
			{
				{
					auto &expr = _101617_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1dc399a4d:;
					if (it != expr.end()) {
						jule::Ptr<_204ec707a_Fn> _101721_m = *it;
						{
							if (_101721_m.get()._field_Statically) {
								goto _iter_next_1dc399a4d;
							};
							{
								auto &expr = _101721_m.get()._field_Instances;
								auto it = expr.begin();
								_iter_begin_1dc39a895:;
								if (it != expr.end()) {
									jule::Ptr<_204ec7454_FnIns> _102125_mins = *it;
									{
										jule::Ptr<_204ec7267_ParamIns> _102225_p = _102125_mins.get()._field_Params[0LL];;
										if ((!(_204396e2e_IsRef(_102225_p.get()._field_Decl.ptr())))) {
											_102225_p.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(jule::new_ptr<_1d7dd2513_customType>(_1d7dd2513_customType{._field_kind=static__1d7dd3db6_asPtr(static__1d7dd73b4_kind(_102225_p.get()._field_Kind))}), 13)});
										} else {
											_102225_p.get()._field_Kind=jule::new_ptr<_2050aa8de_TypeKind>(_2050aa8de_TypeKind{._field_Kind=jule::Trait<_2050aa4b0_Kind>(jule::new_ptr<_1d7dd2513_customType>(_1d7dd2513_customType{._field_kind=static__1d7dd73b4_kind(_102225_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_1dc39a895:;
									++it;
									goto _iter_begin_1dc39a895;
								}
								_iter_end_1dc39a895:;
							};
						}
						_iter_next_1dc399a4d:;
						++it;
						goto _iter_begin_1dc399a4d;
					}
					_iter_end_1dc399a4d:;
				};
			}
			_iter_next_1dc398d8d:;
			++it;
			goto _iter_begin_1dc398d8d;
		}
		_iter_end_1dc398d8d:;
	};
}



inline jule::Str _1d7dd17ed_concatAllParts(jule::Slice<jule::Ptr<_202b89679_Token>> _104219_parts) {
	jule::I64 _104313_n = 0LL;;
	{
		auto &expr = _104219_parts;
		auto it = expr.begin();
		_iter_begin_1dc39a18b:;
		if (it != expr.end()) {
			jule::Ptr<_202b89679_Token> &_104412_part = *it;
			{
				_104313_n+=_104412_part.get()._field_Kind.len();
			}
			_iter_next_1dc39a18b:;
			++it;
			goto _iter_begin_1dc39a18b;
		}
		_iter_end_1dc39a18b:;
	};
	if ((_104313_n == 0LL)) {
		return jule::Str();
	};
	jule::Str _105013_s = jule::Str::alloc(0LL, _104313_n);;
	{
		auto &expr = _104219_parts;
		auto it = expr.begin();
		_iter_begin_1dc39d7bb:;
		if (it != expr.end()) {
			jule::Ptr<_202b89679_Token> &_105112_p = *it;
			{
				_105013_s+=_105112_p.get()._field_Kind;
			}
			_iter_next_1dc39d7bb:;
			++it;
			goto _iter_begin_1dc39d7bb;
		}
		_iter_end_1dc39d7bb:;
	};
	return _105013_s;
}



inline jule::Ptr<_20430829c_Directive> _1d7dd9c24_findDirective(jule::Slice<jule::Ptr<_20430829c_Directive>>& _32923_directives, jule::Str _32954_tag) {
	{
		auto &expr = _32923_directives;
		auto it = expr.begin();
		_iter_begin_1dc47b624:;
		if (it != expr.end()) {
			jule::Ptr<_20430829c_Directive> _33017_dr = *it;
			{
				if ((_33017_dr.get()._field_Tag.get()._field_Kind == _32954_tag)) {
					return _33017_dr;
				};
			}
			_iter_next_1dc47b624:;
			++it;
			goto _iter_begin_1dc47b624;
		}
		_iter_end_1dc47b624:;
	};
	return nullptr;
}



inline jule::Bool _1d7dda0a9_hasDirective(jule::Slice<jule::Ptr<_20430829c_Directive>>& _33918_directives, jule::Str _33949_tag) {
	return (_1d7dd9c24_findDirective(_33918_directives,_33949_tag) != nullptr);
}



inline jule::Bool _1d7dda351_shouldInitialized(jule::Ptr<_2050aa8de_TypeKind>& _34627_t) {
	jule::Ptr<_2050b03b6_Prim> _3479_prim = _2050aca01_Prim(_34627_t.ptr());;
	if ((_3479_prim != nullptr)) {
		return ((!(_2050b385e_IsAny(_3479_prim.ptr()))) && (!(_2050b35ea_IsStr(_3479_prim.ptr()))));
	};
	{
		
		if ((_2050acc65_Sptr(_34627_t.ptr()) != nullptr)) {
			_case_begin_1dc47e8ad:;
			{
				return false;
			}
		}
		else if ((_2050ae42b_Map(_34627_t.ptr()) != nullptr)) {
			_case_begin_1dc47e2c5:;
			{
				return false;
			}
		}
		else if ((_2050ad97a_Slc(_34627_t.ptr()) != nullptr)) {
			_case_begin_1dc47e33b:;
			{
				return false;
			}
		}
		else if ((_2050ae1b7_Trait(_34627_t.ptr()) != nullptr)) {
			_case_begin_1dc47e3a2:;
			{
				return false;
			}
		}
		else if ((_2050adbde_Fn(_34627_t.ptr()) != nullptr)) {
			_case_begin_1dc47e418:;
			{
				return false;
			}
		}
		else {
			_case_begin_1dc47d604:;
			{
				return true;
			}
		}
		_match_end_1dc47d58d:;
	};
}



inline void _20091da92_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _202825832_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_20091da92_printErrorMessage((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _20282e7d6_HelpMap[0LL][0LL].len();;
	{
		auto &expr = _20282e7d6_HelpMap;
		auto it = expr.begin();
		_iter_begin_1dc50bc59:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1dc50bc59:;
			++it;
			goto _iter_begin_1dc50bc59;
		}
		_iter_end_1dc50bc59:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _20282e7d6_HelpMap;
		auto it = expr.begin();
		_iter_begin_1dc50d83d:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_2027b6509_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1dc50d83d:;
			++it;
			_519_i++;
			goto _iter_begin_1dc50d83d;
		}
		_iter_end_1dc50d83d:;
	};
	jule::outln(_4913_s);
}



inline void _20283dd12_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_20091da92_printErrorMessage((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.12 @master", 18));
}



inline void _20283e560_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _202840e13_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _202841661_tool(jule::Slice<jule::Str>& _9410_args) {
	if ((_9410_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9410_args.len() > 3LL)) {
		_20091da92_printErrorMessage((jule::Str("invalid command: ", 17) + _9410_args[3LL]));
		return;;
	};
	jule::Str _1059_cmd = _9410_args[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1dc516307:;
			{
				_20283e560_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1dc515eb6:;
			{
				_202840e13_toolDistarch();
			}
		}
		else {
			_case_begin_1dc5145e1:;
			{
				_20091da92_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1dc515e50:;
	};
}



inline void _202841dae_julenv(jule::Slice<jule::Str>& _11712_args) {
	if ((_11712_args.len() > 2LL)) {
		_20091da92_printErrorMessage((jule::Str("invalid command: ", 17) + _11712_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.12 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: linux", 23));
	jule::outln((jule::Str("default compiler: ", 18) + _20089021c_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _2008906e5_CppStd));
}



inline void _202826734_mod(jule::Slice<jule::Str>& _1309_args) {
	if ((_1309_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1309_args.len() > 3LL)) {
		_20091da92_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1309_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1dc51acac:;
			{
				({
					auto except = static__20096ba9b_Write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_20091da92_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1dc51942b:;
			{
				_20091da92_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[2LL]));
			}
		}
		_match_end_1dc51a86c:;
	};
}



inline jule::Bool _20284d76c_processCommand(jule::Slice<jule::Str>& _15320_args) {
	{
		auto &_match_expr{ _15320_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1dc51cc37:;
			{
				_202825832_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1dc51c187:;
			{
				_20283dd12_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1dc51c1ed:;
			{
				_202841661_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1dc51c264:;
			{
				_202841dae_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1dc51c2ca:;
			{
				_202826734_mod(_15320_args);
			}
		}
		else {
			_case_begin_1dc51c121:;
			{
				return false;
			}
		}
		_match_end_1dc51c066:;
	};
	return true;
}



inline void _2017a4d67_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _2017c971b_Args();;
	if ((_18913_args.len() < 2LL)) {
		_2017a4d67_showInfo();
		return;;
	};
	if (_20284d76c_processCommand(_18913_args)) {
		return;;
	};
	_1d7e2317a_compileCommand(_18913_args);
}



inline void _1d7de3975_init(void) {
	_20089021c_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_200a47a01_File> _1d7de5526_openOutput(jule::Str& _4316_path) {
	jule::Str _449_dir = _20182c483_Dir(_4316_path);;
	({
		auto except = static__2009653e1_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__2017a4295_Create(_449_dir);
				if (!except.ok()) {
					_205982381_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__200969ea6_Create(_4316_path);
		(except.ok()) ? (except.result) : ({
			_205982381_Throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _1d7e0170d_clearObjects(void) {
	({
		auto except = static__200949a35_Remove(_1d7dde443_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__20178043b_Remove(_1d7de5bdb_OutDir);
}



inline void _1d7ddcb5b_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_2028a7045_Cmd> _7313_cmd = static__2028a7474_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=jule::Slice<jule::Str>::make({_7214_compiler});
	_7313_cmd.get()._field_Args=jule::append(_7313_cmd.get()._field_Args,_2027d403d_Split(_7229_compilerCmd,jule::Str(" ", 1),-1LL));
	jule::I64 _769_status = ({
		auto except = _2028a76d8_Spawn(_7313_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_1dc52513a:;
					{
						static__20597eb31_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_1dc525a75:;
					{
						static__20597eb31_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_1dc5253b0:;
					{
						static__20597eb31_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_1dc525426:;
					{
						static__20597eb31_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1dc52527d:;
					{
						static__20597eb31_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1dc5251c3:;
			};
			_205982381_Throw(jule::Str());
			0LL;
		});
	});;
	if ((_769_status != 0LL)) {
		jule::Str _9313_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _20089021c_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__20597eb31_Print(jule::Str("\033[31m", 5),_9313_errorMessage);
		_205982381_Throw(jule::Str());
	};
	_1d7e0170d_clearObjects();
}



inline jule::Bool _1d7ddc5c8_isCppSourceFile(jule::Str _10420_path) {
	jule::I64 _1059_offset = _2027d29ed_FindLastByte(_10420_path,'.');;
	if ((_1059_offset == -1LL)) {
		return false;
	};
	return _20284ec35_IsValidCppExt(_10420_path.slice(_1059_offset));
}



inline void _1d7de1cd6_pushCompCmdClang(jule::Str& _11226_cmd) {
	_11226_cmd+=jule::Str("-Wno-everything ", 16);
	_11226_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _2008906e5_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1dc52a77d:;
			{
				_11226_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1dc52a7e4:;
			{
				_11226_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1dc52a948:;
			{
				_11226_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1dc52a629:;
	};
	_11226_cmd+=jule::Str(" ", 1);
	if (_20089198d_Production) {
		_11226_cmd+=jule::Str("-O3 ", 4);
		_11226_cmd+=jule::Str("-flto ", 6);
		_11226_cmd+=jule::Str("-DNDEBUG ", 9);
		_11226_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11226_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _1d7ddeeb0_pushCompCmdGcc(jule::Str& _13824_cmd) {
	_13824_cmd+=jule::Str("-w ", 3);
	_13824_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _2008906e5_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1dc52d220:;
			{
				_13824_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1dc52d286:;
			{
				_13824_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1dc52d3da:;
			{
				_13824_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1dc52d0dd:;
	};
	_13824_cmd+=jule::Str(" ", 1);
	if (_20089198d_Production) {
		_13824_cmd+=jule::Str("-O3 ", 4);
		_13824_cmd+=jule::Str("-DNDEBUG ", 9);
		_13824_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_13824_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _1d7e15634_genCompileCmd(jule::Str _16418_sourcePath, jule::Ptr<_2054b956c_IR>& _16436_ir) {
	jule::Str &_16510_compiler = _200890481_CompilerPath;;
	jule::Str _16613_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _20089021c_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1dc530d05:;
			{
				_1d7ddeeb0_pushCompCmdGcc(_16613_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1dc53109c:;
			{
				_1d7de1cd6_pushCompCmdClang(_16613_cmd);
			}
		}
		_match_end_1dc530ec0:;
	};
	{
		auto &expr = _16436_ir.get()._field_Passes;
		auto it = expr.begin();
		_iter_begin_1dc531e38:;
		if (it != expr.end()) {
			jule::Str &_17612_pass = *it;
			{
				_16613_cmd+=_17612_pass;
				_16613_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1dc531e38:;
			++it;
			goto _iter_begin_1dc531e38;
		}
		_iter_end_1dc531e38:;
	};
	{
		auto &expr = _16436_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1dc531135:;
		if (it != expr.end()) {
			jule::Ptr<_20500ae16_ImportInfo> &_18212_u = *it;
			{
				if ((_18212_u.get()._field_CppLinked && _1d7ddc5c8_isCppSourceFile(_18212_u.get()._field_Path))) {
					_16613_cmd+=_18212_u.get()._field_Path;
					_16613_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1dc531135:;
			++it;
			goto _iter_begin_1dc531135;
		}
		_iter_end_1dc531135:;
	};
	if ((!(_1d7de833c_Out.empty()))) {
		_16613_cmd+=jule::Str("-o ", 3);
		_16613_cmd+=_1d7de833c_Out;
		_16613_cmd+=jule::Str(" ", 1);
	};
	_16613_cmd+=_16418_sourcePath;
	return std::make_tuple(_16510_compiler,_16613_cmd);
}



inline jule::Str _1d7dde443_getCompilePath(void) {
	return _201840276_Join(jule::Slice<jule::Str>::make({_1d7de5bdb_OutDir,_1d7de76d2_OutName}));
}



inline void _1d7dde9c6_applyTargetIndependentOptimizations(jule::Ptr<_2054b956c_IR>& _20545_ir) {
	jule::Ptr<_2059453aa_Optimizer> _20713_opt = static__20588eec5_New(_20545_ir);;
	_2058e29c8_Optimize(_20713_opt.ptr());
}



inline void _1d7dec4b7_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _20089021c_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1dc534d70:;
			{
				_205982381_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1dc535612:;
			{
				if (_200890481_CompilerPath.empty()) {
					_200890481_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1dc535678:;
			{
				if (_200890481_CompilerPath.empty()) {
					_200890481_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1dc53559b:;
			{
				_205982381_Throw((jule::Str("invalid option value for --compiler: ", 37) + _20089021c_Compiler));
			}
		}
		_match_end_1dc534e6e:;
	};
}



inline void _1d7ddc1cc_checkTargetArch(jule::Str _22820_arch) {
	if ((((_22820_arch != jule::Str("amd64", 5)) && (_22820_arch != jule::Str("arm64", 5))) && (_22820_arch != jule::Str("i386", 4)))) {
		_205982381_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22820_arch));
	};
}



inline void _1d7de1038_checkTargetOs(jule::Str _23618_os) {
	if ((((_23618_os != jule::Str("windows", 7)) && (_23618_os != jule::Str("linux", 5))) && (_23618_os != jule::Str("darwin", 6)))) {
		_205982381_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23618_os));
	};
}



inline void _1d7de116a_checkTargetFlag(jule::Str& _24421_target) {
	if (_24421_target.empty()) {
		_205982381_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2499_parts = _2027d403d_Split(_24421_target,jule::Str("-", 1),-1LL);;
	if ((_2499_parts.len() != 2LL)) {
		_205982381_Throw((jule::Str("--target: undefined platform target format: ", 44) + _24421_target));
	};
	jule::Str _25410_os = _2499_parts[0LL];;
	jule::Str _25414_arch = _2499_parts[1LL];;
	std::tie(_25410_os,_25414_arch) = std::make_tuple(_2499_parts[0LL],_2499_parts[1LL]);
	if ((_25410_os != jule::Str("native", 6))) {
		_1d7de1038_checkTargetOs(_25410_os);
		_2028a5b7b_Os=_25410_os;
	};
	if ((_25414_arch != jule::Str("native", 6))) {
		_1d7ddc1cc_checkTargetArch(_25414_arch);
		_202895154_Arch=_25414_arch;
	};
	_2047e082d_UpdateTarget();
}



inline void _1d7e2283e_checkOptFlag(jule::Str& _26718_opt) {
	if (_26718_opt.empty()) {
		_205982381_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _26718_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1dc53d7e6:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1dc53dd46:;
			{
				_2033b218c_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1dc53d681:;
			{
				_205982381_Throw((jule::Str("--opt: invalid optimization level: ", 35) + _26718_opt));
			}
		}
		_match_end_1dc53d62b:;
	};
}



inline void _1d7e22ba2_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _2008906e5_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1dc53ddac:;
			{
				goto _match_end_1dc53e990;
			}
		}
		else {
			_case_begin_1dc53ea4a:;
			{
				_205982381_Throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _2008906e5_CppStd));
			}
		}
		_match_end_1dc53e990:;
	};
}



inline jule::Slice<jule::Str> _1d7e22cd4_checkFlags(jule::Slice<jule::Str>& _29216_args) {
	jule::Str _29313_opt = jule::Str("L0", 2);;
	jule::Str _29413_target = jule::Str("native-native", 13);;
	jule::Ptr<_1d7e1da5a_FlagSet> _29613_fs = static__1d7e1dd46_New();;
	_1dc542542_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1dc542542_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1dc542542_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1d7de833c_Out)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1dc54b68e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_200890959_Shadowing)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1dc54b68e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_200890bbd_Transpilation)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1dc542542_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_20089021c_Compiler)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1dc542542_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_200890481_CompilerPath)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1dc54b68e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20089198d_Production)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1dc54b68e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_200891262_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1dc54b68e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_200891680_Safety)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1dc542542_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2008906e5_CppStd)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1dc54b68e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_202bc2e43_Copy)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1dc54b68e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_202bc7475_Deadcode)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1dc54b68e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_202bb120b_Append)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1dc54b68e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_202beba2c_Math)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1dc54b68e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_202c04c55_Access)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1dc54b68e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_202c07c25_Inline)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1dc54b68e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_202c08143_Ptr)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1dc54b68e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_202c08a39_Cond)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _1d7e1eb5a_Parse(_29613_fs.ptr(), _29216_args);
		(except.ok()) ? (except.result) : ({
			_205982381_Throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_1d7dec4b7_checkCompilerFlag();
	_1d7e22ba2_checkCppStdFlag();
	_1d7de116a_checkTargetFlag(_29413_target);
	_1d7e2283e_checkOptFlag(_29313_opt);
	return _31813_content;
}



inline void _1d7e22e16_setupSemaFlags(jule::I64& _33124_flags) {
	if (_200890959_Shadowing) {
		_33124_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_2054b956c_IR> _1d7e23048_buildIr(jule::Slice<jule::Str>& _33713_args) {
	jule::Slice<jule::Str> _3389_content = _1d7e22cd4_checkFlags(_33713_args);;
	jule::I64 _34013_semaFlags = static_cast<jule::I64>(0LL);;
	_1d7e22e16_setupSemaFlags(_34013_semaFlags);
	if ((_3389_content.len() == 0LL)) {
		_205982381_Throw(_20285bbed_Logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_205982381_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok;;
	std::tie(_34814_path,_34820_ok) = _201849769_Abs(_3389_content[0LL]);
	if ((!(_34820_ok))) {
		_205982381_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_20174529c_Status> _3549_inf = ({
		auto except = static__2009653e1_Of(_2028954d9_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_205982381_Throw(_20285bbed_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
		} jule::Ptr<_20174529c_Status>();});
	});;
	if ((!(_200970792_IsDir(_3549_inf.ptr())))) {
		_205982381_Throw(_20285bbed_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_2054b956c_IR> _36214_ir;;
	jule::Slice<_20285b7ad_Log> _36218_logs;;
	std::tie(_36214_ir,_36218_logs) = static__20429e96e_Build(_34814_path,_34013_semaFlags);
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_205982381_Throw(_20285bbed_Logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_34814_path)})));
	};
	if ((_36218_logs != nullptr)) {
		static__205981913_PrintLogs(_36218_logs);
		_205982381_Throw(jule::Str());
	};
	return _36214_ir;
}



inline void _1d7e2317a_compileCommand(jule::Slice<jule::Str>& _37724_args) {
	_37724_args=_37724_args.slice(1LL);
	if ((_37724_args[0LL] == jule::Str("test", 4))) {
		_200890e65_Test=true;
		_37724_args=_37724_args.slice(1LL);
	};
	jule::Ptr<_2054b956c_IR> _38313_ir = _1d7e23048_buildIr(_37724_args);;
	;
	if ((!(_200890e65_Test))) {
		jule::Ptr<_204ec707a_Fn> _38817_main = _205010624_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
		if ((_38817_main == nullptr)) {
			_205982381_Throw(_20285bbed_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_1d7dde9c6_applyTargetIndependentOptimizations(_38313_ir);
	_205612077_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	std::tie(_39910_compiler,_39920_compilerCmd) = _1d7e15634_genCompileCmd(_1d7dde443_getCompilePath(),_38313_ir);
	jule::Ptr<_1d7dcd553_ObjectCoder> _40113_oc = static__1d7d6d724_New(_38313_ir,_1d7d44277_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_200890e65_Test) {
		jule::Ptr<_1d7d38cc7_TestCoder> _40617_tc = static__1d7d3924a_New(_40113_oc);;
		_1d7d3a47c_Serialize(_40617_tc);
	} else {
		_1d7dd1369_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _1d7dde443_getCompilePath();;
	jule::Ptr<_200a47a01_File> _41313_file = _1d7de5526_openOutput(_4129_path);;
	({
		auto except = _20094a6e5_Write(_41313_file.ptr(), static_cast<jule::Slice<jule::U8>>(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_205982381_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _20096e10e_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_200890bbd_Transpilation))) {
		_1d7ddcb5b_compileIr(_39910_compiler,_39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_20286d4a1_init();
	_2047ecde0_init();
	_1d7de3975_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}