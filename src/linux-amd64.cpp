// Auto generated by JuleC.
// JuleC version: jule0.0.12 @master
// Date: 4/5/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <time.h>

struct _211b1970a_Importer{};
struct _211bb6026_Kind{};
struct _211bd2086_Lookup{};
struct _2129e44e6_CommonFlag{};
struct _20e369c0a_Range16;
struct _20e36a17d_Range32;
struct _20e36a601_RangeTable;
struct _20e430386_acceptRange;
struct _20d48bc95_lazyBuff;
struct _20c697db4_DirEntry;
struct _20c6ce978_Directory;
struct _20d3beed6_File;
struct _20d3c039e_Status;
struct _20e51a4e8_Cmd;
struct _20e4ba377_Log;
struct _20e7ddc0b_Token;
struct _20e7e4096_File;
struct _20e7e60ed_kindPair;
struct _20e7ebbe7_lex;
struct _210e1c811_Ast;
struct _210e1d4b0_Node;
struct _210e1d8ab_Directive;
struct _210e520a4_TypeDecl;
struct _210e5266a_IdentTypeDecl;
struct _210e52cb9_SubIdentTypeDecl;
struct _210e53171_NamespaceTypeDecl;
struct _210e5345c_SptrTypeDecl;
struct _210e53858_SlcTypeDecl;
struct _210e53b44_TupleTypeDecl;
struct _210e53e30_PtrTypeDecl;
struct _210e545b2_ArrTypeDecl;
struct _210e54d10_MapTypeDecl;
struct _210e551b7_RetTypeDecl;
struct _210e565c5_Expr;
struct _210e568b1_RangeExpr;
struct _210e56e66_UseExpr;
struct _210e57252_TupleExpr;
struct _210e57609_LitExpr;
struct _210e57d13_UnsafeExpr;
struct _210e581ba_CoExpr;
struct _210e5863d_IdentExpr;
struct _210e58d47_UnaryExpr;
struct _210e591ee_VariadicExpr;
struct _210e595a6_CastExpr;
struct _210e5995d_NsSelectionExpr;
struct _210e59dd1_SubIdentExpr;
struct _210e5a354_BinopExpr;
struct _210e5a893_FnCallExpr;
struct _210e5b322_FieldExprPair;
struct _210e5ba70_StructLit;
struct _210e5bee3_BraceLit;
struct _210e5ca0a_KeyValPair;
struct _210e5ce7d_SliceExpr;
struct _210e5d81e_IndexingExpr;
struct _210e5de29_SlicingExpr;
struct _210e5e215_Constraint;
struct _210e5e688_GenericDecl;
struct _210e5ea40_LabelSt;
struct _210e5ede7_GotoSt;
struct _210e601d3_FallSt;
struct _210e607dd_AssignLeft;
struct _210e60d2c_AssignSt;
struct _210e61cb7_Stmt;
struct _210e623c2_ScopeTree;
struct _210e62a98_ParamDecl;
struct _210e63db8_FnDecl;
struct _210e64d97_VarDecl;
struct _210e6524e_RetSt;
struct _210e658ae_Iter;
struct _210e66184_WhileKind;
struct _210e66a25_RangeKind;
struct _210e66dcc_BreakSt;
struct _210e67284_ContSt;
struct _210e67707_If;
struct _210e67aae_Else;
struct _210e68032_Conditional;
struct _210e68708_TypeAliasDecl;
struct _210e68b7b_Case;
struct _210e69352_MatchCase;
struct _210e69ae4_UseDecl;
struct _210e6a067_EnumItemDecl;
struct _210e6aa90_EnumDecl;
struct _210e6b596_TypeEnumItemDecl;
struct _210e6b794_TypeEnumDecl;
struct _210e6bce4_FieldDecl;
struct _210e6c652_StructDecl;
struct _210e6cc5c_TraitDecl;
struct _210e6d367_Impl;
struct _210ea46cd_Const;
struct _2116c9dd1_floatInfo;
struct _20e36ca21_decimalSlice;
struct _211b050db_leftCheat;
struct _211b0544e_decimal;
struct _210e34c9b_Field;
struct _210e4420b_Operators;
struct _210e427d1_Struct;
struct _210e49e48_FieldIns;
struct _211017a4e_OperandExprModel;
struct _211017c3b_BinopExprModel;
struct _211017e28_UnaryExprModel;
struct _211018115_StructArgExprModel;
struct _211018302_StructLitExprModel;
struct _2110184de_AllocStructLitExprModel;
struct _2110186cb_CastingExprModel;
struct _2110188b8_FnCallExprModel;
struct _211018aa5_SliceExprModel;
struct _211018c92_IndexingExprModel;
struct _211018e7e_AnonFnExprModel;
struct _21101916b_KeyValPairExprModel;
struct _211019358_MapExprModel;
struct _211019545_SlicingExprModel;
struct _211019732_TraitSubIdentExprModel;
struct _211019b50_StructSubIdentExprModel;
struct _211019d3c_StructStaticIdentExprModel;
struct _21101a029_ArrayExprModel;
struct _21101a216_CommonIdentExprModel;
struct _21101a403_CommonSubIdentExprModel;
struct _21101a5e0_TupleExprModel;
struct _21101a7cc_BuiltinOutCallExprModel;
struct _21101a9b9_BuiltinOutlnCallExprModel;
struct _21101aba6_BuiltinCloneCallExprModel;
struct _21101ad93_BuiltinNewCallExprModel;
struct _21101b080_BuiltinPanicCallExprModel;
struct _21101b26c_BuiltinAssertCallExprModel;
struct _21101b459_BuiltinMakeCallExprModel;
struct _21101b646_BuiltinAppendCallExprModel;
struct _21101b833_BuiltinCopyCallExprModel;
struct _21101ba20_BuiltinErrorCallExprModel;
struct _21101991e_SizeofExprModel;
struct _21101c180_AlignofExprModel;
struct _21101c36c_RuneExprModel;
struct _21101c559_IntegratedToStrExprModel;
struct _21101c746_BackendEmitExprModel;
struct _21101c933_FreeExprModel;
struct _21101d082_RetType;
struct _21101d747_Param;
struct _211020084_Fn;
struct _211021d66_ParamIns;
struct _211022c35_FnIns;
struct _211025b06_ReferenceStack;
struct _211026ec0_Pass;
struct _21102b469_symbolBuilder;
struct _211031e42_Trait;
struct _211033592_EnumItem;
struct _211034087_Enum;
struct _2110350bb_TypeEnumItem;
struct _211035682_TypeEnum;
struct _21104d27c_constraintChecker;
struct _2110b6658_Impl;
struct _211b0940e_Scope;
struct _211b095eb_If;
struct _211b097d8_Else;
struct _211b099c5_Conditional;
struct _211b09bb2_InfIter;
struct _211b09d9e_WhileIter;
struct _211b0a08b_RangeIter;
struct _211b0a278_ContSt;
struct _211b0a465_BreakSt;
struct _211b0a652_Label;
struct _211b0a83e_GotoSt;
struct _211b0aa2b_Postfix;
struct _211b0ac18_Assign;
struct _211b0ae05_MultiAssign;
struct _211b0b0e2_Match;
struct _211b0b642_Case;
struct _211b0b961_FallSt;
struct _211b0bb4d_RetSt;
struct _211b0bd3a_scopeLabel;
struct _211b0c027_scopeGoto;
struct _211b0c214_scopeChecker;
struct _211b162ea_directiveChecker;
struct _211b1c378_ImportInfo;
struct _211b202d2_Package;
struct _211b254c4_Sema;
struct _211b405ee_missingRetChecker;
struct _211b422b0_IterRelation;
struct _211b43228_Var;
struct _211b43c51_FuncPattern;
struct _211b7427b_typeCompatibilityChecker;
struct _211b75da4_assignTypeChecker;
struct _211b777bd_dynamicTypeAnnotation;
struct _211b7c0b9_fnCallArgChecker;
struct _211b7e9c3_structLitChecker;
struct _211b815a7_rangeChecker;
struct _211b8370d_retTypeChecker;
struct _211b855ab_SymbolTable;
struct _211b8a319_Data;
struct _211b8b392_Value;
struct _211b8bd87_Eval;
struct _211ba80c3_unaryEval;
struct _211ba9d61_binaryEval;
struct _211bb4c28_InsGeneric;
struct _211bb5762_TypeAlias;
struct _211bb6455_TypeKind;
struct _211bba5ad_TypeSymbol;
struct _211bbae2c_Prim;
struct _211bbe6b1_Sptr;
struct _211bc011d_Slc;
struct _211bc0b9b_Tuple;
struct _211bc16c4_Map;
struct _211bc22b8_Arr;
struct _211bc2c25_Ptr;
struct _211bc3b6b_referencer;
struct _211bc4980_typeChecker;
struct _211bcc191_identTypeLookup;
struct _2123c73a2_FileInfo;
struct _21242be0c_stmt;
struct _21242c737_scopeParser;
struct _212438be9_exprBuilder;
struct _212445552_assignInfo;
struct _212448d80_parser;
struct _212459e5c_typeBuilder;
struct _211c955ab_CompileInfo;
struct _211c9690e_directiveEval;
struct _211d89b78_JuleImporter;
struct _2123c9959_OrderedDefines;
struct _211d7c495_defineOrderer;
struct _21251d383_liveTable;
struct _21254ee53_scopeDeadCode;
struct _212553dad_exprDeadCode;
struct _20e81ad04_UnsafeBinopExprModel;
struct _210340e22_UnsafeIndexingExprModel;
struct _21073810a_PushToSliceExprModel;
struct _210bd39e5_MutSlicingExprModel;
struct _20e858e96_StrInsertBeginExprModel;
struct _20ea01baa_scopeOptimizer;
struct _20eb71225_exprOptimizer;
struct _212528712_Optimizer;
struct _21255cd62_AnsiEscape;
struct _21255e44b_Logger;
struct _212b3985b_AbsTime;
struct _212b39eee_Time;
struct _212aae7e2_scopeCoder;
struct _212ab7333_exprCoder;
struct _212ac5484_deriveCoder;
struct _212ac6908_TestCoder;
struct _212ac9059_identCoder;
struct _212b40323_SerializationInfo;
struct _212b40510_traitHash;
struct _212b4623b_customType;
struct _212b46a33_typeCoder;
struct _225450e0c_Flag;
struct _225454aae_Flag;
struct _225458640_Flag;
struct _22545c215_Flag;
struct _225460c96_Flag;
struct _212b7bcdd_FlagSet;
struct _2120ac0a9_IR;
struct _210e6db2b_StructIns;
struct _21251d64c_ObjectDeadCode;
struct _212b406ec_ObjectCoder;
struct _212b7e4b6_argParser;
struct _20e369c0a_Range16 {
	jule::U16 _field_Lo = jule::U16();
	jule::U16 _field_Hi = jule::U16();
	jule::U16 _field_Stride = jule::U16();
	

	_20e369c0a_Range16(void) = default;

	inline bool operator==(_20e369c0a_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_20e369c0a_Range16 _other) { return !this->operator==(_other); }


};
struct _20e36a17d_Range32 {
	jule::U32 _field_Lo = jule::U32();
	jule::U32 _field_Hi = jule::U32();
	jule::U32 _field_Stride = jule::U32();
	

	_20e36a17d_Range32(void) = default;

	inline bool operator==(_20e36a17d_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_20e36a17d_Range32 _other) { return !this->operator==(_other); }


};
struct _20e36a601_RangeTable {
	jule::Slice<_20e369c0a_Range16> _field_R16 = jule::Slice<_20e369c0a_Range16>();
	jule::Slice<_20e36a17d_Range32> _field_R32 = jule::Slice<_20e36a17d_Range32>();
	jule::I64 _field_LatinOffset = jule::I64();
	

	_20e36a601_RangeTable(void) = default;

	inline bool operator==(_20e36a601_RangeTable _other) {
		return 
			this->_field_R16 == _other._field_R16 &&
			this->_field_R32 == _other._field_R32 &&
			this->_field_LatinOffset == _other._field_LatinOffset;
	}

	inline bool operator!=(_20e36a601_RangeTable _other) { return !this->operator==(_other); }


};
struct _20e430386_acceptRange {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();
	

	_20e430386_acceptRange(void) = default;

	inline bool operator==(_20e430386_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_20e430386_acceptRange _other) { return !this->operator==(_other); }


};
inline jule::U8 _20d492c57_index(_20d48bc95_lazyBuff*, jule::I64);
inline void _20d493461_append(_20d48bc95_lazyBuff*, jule::U8);
inline jule::Str _20d496013_string(_20d48bc95_lazyBuff*);
struct _20d48bc95_lazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_volAndPath = jule::Str();
	jule::I64 _field_volLen = jule::I64();
	

	_20d48bc95_lazyBuff(void) = default;

	inline bool operator==(_20d48bc95_lazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_volAndPath == _other._field_volAndPath &&
			this->_field_volLen == _other._field_volLen;
	}

	inline bool operator!=(_20d48bc95_lazyBuff _other) { return !this->operator==(_other); }


};
struct _20c697db4_DirEntry {
	jule::Str _field_Name = jule::Str();
	jule::Ptr<_20d3c039e_Status> _field_Stat = jule::Ptr<_20d3c039e_Status>();
	

	_20c697db4_DirEntry(void) = default;

	inline bool operator==(_20c697db4_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_20c697db4_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_20c697db4_DirEntry>>> static__20d422665_Read(jule::Str);
inline jule::VoidExceptional static__20d42e3ca_Create(jule::Str);
inline jule::VoidExceptional static__20d40b2ec_Remove(jule::Str);
struct _20c6ce978_Directory {
	

	_20c6ce978_Directory(void) = default;

	inline bool operator==(_20c6ce978_Directory _other) { return true; }

	inline bool operator!=(_20c6ce978_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_20d3beed6_File>> static__20c60233a_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__20c603171_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _20c604c00_Write(_20d3beed6_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _20c6056d4_Read(_20d3beed6_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_20d3beed6_File> static__20c6a3919_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_20d3beed6_File>> static__20c6a45c9_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__20c6a5be6_Read(jule::Str);
inline jule::VoidExceptional static__20c6cd78a_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _20c6cd966_Seek(_20d3beed6_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _20c6d0a01_Close(_20d3beed6_File*);
struct _20d3beed6_File {
	jule::Uintptr _field_handle = jule::Uintptr();
	

	_20d3beed6_File(void) = default;

	inline bool operator==(_20d3beed6_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_20d3beed6_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_20d3c039e_Status>> static__20c606d67_Of(jule::Str);
inline jule::Bool _20c6d15e5_IsDir(_20d3c039e_Status*);
inline jule::Bool _20c6d2915_IsReg(_20d3c039e_Status*);
struct _20d3c039e_Status {
	jule::U64 _field_Mode = jule::U64();
	jule::U64 _field_Size = jule::U64();
	

	_20d3c039e_Status(void) = default;

	inline bool operator==(_20d3c039e_Status _other) {
		return 
			this->_field_Mode == _other._field_Mode &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_20d3c039e_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20e51a4e8_Cmd> static__20e51a927_New(jule::Str);
inline jule::Exceptional<jule::I64> _20e51ab8b_Spawn(_20e51a4e8_Cmd*);
inline jule::Exceptional<jule::I64> _20e51dae5_spawn(_20e51a4e8_Cmd*);
struct _20e51a4e8_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_Args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_Env = jule::Slice<jule::Str>();
	

	_20e51a4e8_Cmd(void) = default;

	inline bool operator==(_20e51a4e8_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_Args == _other._field_Args &&
			this->_field_Env == _other._field_Env;
	}

	inline bool operator!=(_20e51a4e8_Cmd _other) { return !this->operator==(_other); }


};
struct _20e4ba377_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = jule::I64();
	jule::I64 _field_Column = jule::I64();
	jule::Str _field_Path = jule::Str();
	jule::Str _field_Text = jule::Str();
	jule::Str _field_Line = jule::Str();
	jule::Str _field_Suggestion = jule::Str();
	

	_20e4ba377_Log(void) = default;

	inline bool operator==(_20e4ba377_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_20e4ba377_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _20e7de0b3_Prec(_20e7ddc0b_Token*);
struct _20e7ddc0b_Token {
	jule::Ptr<_20e7e4096_File> _field_File = jule::Ptr<_20e7e4096_File>();
	jule::I64 _field_Row = jule::I64();
	jule::I64 _field_Column = jule::I64();
	jule::Str _field_Kind = jule::Str();
	jule::U64 _field_Id = 0LLU;
	

	_20e7ddc0b_Token(void) = default;

	inline bool operator==(_20e7ddc0b_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_20e7ddc0b_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _20e7e44a3_IsOk(_20e7e4096_File*);
inline void _20e7e4728_Fill(_20e7e4096_File*, jule::Slice<jule::U8>);
inline jule::Str _20e7e498c_Dir(_20e7e4096_File*);
inline jule::Str _20e7e4c01_Name(_20e7e4096_File*);
inline jule::Uintptr _20e7e4e65_Addr(_20e7e4096_File*);
inline jule::Str _20e7e5273_GetRow(_20e7e4096_File*, jule::I64);
struct _20e7e4096_File {
	jule::Str _field_Path = jule::Str();
	jule::Slice<jule::U8> _field_Data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _field_Tokens = jule::Slice<jule::Ptr<_20e7ddc0b_Token>>();
	

	_20e7e4096_File(void) = default;

	inline bool operator==(_20e7e4096_File _other) {
		return 
			this->_field_Path == _other._field_Path &&
			this->_field_Data == _other._field_Data &&
			this->_field_Tokens == _other._field_Tokens;
	}

	inline bool operator!=(_20e7e4096_File _other) { return !this->operator==(_other); }


};
struct _20e7e60ed_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_20e7e60ed_kindPair(void) = default;

	inline bool operator==(_20e7e60ed_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_20e7e60ed_kindPair _other) { return !this->operator==(_other); }


};
inline void _20e7ec28b_pushErr(_20e7ebbe7_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _20e7ec5aa_pushErrTok(_20e7ebbe7_lex*, jule::Ptr<_20e7ddc0b_Token>&, jule::Str);
inline void _20e7ec786_lex(_20e7ebbe7_lex*);
inline jule::Str _20e7eca94_id(_20e7ebbe7_lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _20e7ecd08_resume(_20e7ebbe7_lex*);
inline void _20e7ed07d_lexLineComment(_20e7ebbe7_lex*, jule::Ptr<_20e7ddc0b_Token>&);
inline void _20e7ed303_lexRangeComment(_20e7ebbe7_lex*, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Str _20e7ed611_num(_20e7ebbe7_lex*, jule::Slice<jule::U8>&);
inline jule::Str _20e7ed91e_escapeSeq(_20e7ebbe7_lex*, jule::Slice<jule::U8>&);
inline jule::Str _20e7edcc6_getRune(_20e7ebbe7_lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _20e7ee0d4_lexRune(_20e7ebbe7_lex*, jule::Slice<jule::U8>&);
inline jule::Str _20e7ee348_lexStr(_20e7ebbe7_lex*);
inline jule::Bool _20e7ee5ac_isFirstTokenOfLine(_20e7ebbe7_lex*);
inline void _20e7ee788_newLine(_20e7ebbe7_lex*);
inline jule::Bool _20e7eec83_isOp(_20e7ebbe7_lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Bool _20e80013a_lexBasicOps(_20e7ebbe7_lex*, jule::Slice<jule::U8>, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Bool _20e8004e2_lexId(_20e7ebbe7_lex*, jule::Slice<jule::U8>&, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Bool _20e800899_lexNum(_20e7ebbe7_lex*, jule::Slice<jule::U8>&, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Ptr<_20e7ddc0b_Token> _20e800b0d_token(_20e7ebbe7_lex*);
struct _20e7ebbe7_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _field_tokens = jule::Slice<jule::Ptr<_20e7ddc0b_Token>>();
	jule::Ptr<_20e7e4096_File> _field_file = jule::Ptr<_20e7e4096_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_20e4ba377_Log> _field_errors = jule::Slice<_20e4ba377_Log>();
	

	_20e7ebbe7_lex(void) = default;

	inline bool operator==(_20e7ebbe7_lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_20e7ebbe7_lex _other) { return !this->operator==(_other); }


};
struct _210e1c811_Ast {
	jule::Ptr<_20e7e4096_File> _field_File = jule::Ptr<_20e7e4096_File>();
	jule::Slice<jule::Ptr<_210e1d8ab_Directive>> _field_TopDirectives = jule::Slice<jule::Ptr<_210e1d8ab_Directive>>();
	jule::Slice<jule::Ptr<_210e69ae4_UseDecl>> _field_UseDecls = jule::Slice<jule::Ptr<_210e69ae4_UseDecl>>();
	jule::Slice<_210e1d4b0_Node> _field_Nodes = jule::Slice<_210e1d4b0_Node>();
	

	_210e1c811_Ast(void) = default;

	inline bool operator==(_210e1c811_Ast _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_TopDirectives == _other._field_TopDirectives &&
			this->_field_UseDecls == _other._field_UseDecls &&
			this->_field_Nodes == _other._field_Nodes;
	}

	inline bool operator!=(_210e1c811_Ast _other) { return !this->operator==(_other); }


};
struct _210e1d4b0_Node {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Any _field_Data = jule::Any();
	

	_210e1d4b0_Node(void) = default;

	inline bool operator==(_210e1d4b0_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_210e1d4b0_Node _other) { return !this->operator==(_other); }


};
struct _210e1d8ab_Directive {
	jule::Ptr<_20e7ddc0b_Token> _field_Tag = jule::Ptr<_20e7ddc0b_Token>();
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _field_Args = jule::Slice<jule::Ptr<_20e7ddc0b_Token>>();
	

	_210e1d8ab_Directive(void) = default;

	inline bool operator==(_210e1d8ab_Directive _other) {
		return 
			this->_field_Tag == _other._field_Tag &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_210e1d8ab_Directive _other) { return !this->operator==(_other); }


};
struct _210e520a4_TypeDecl {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Any _field_Kind = jule::Any();
	

	_210e520a4_TypeDecl(void) = default;

	inline bool operator==(_210e520a4_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_210e520a4_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e529cd_IsPrim(_210e5266a_IdentTypeDecl*);
struct _210e5266a_IdentTypeDecl {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_210e520a4_TypeDecl>> _field_Generics = jule::Slice<jule::Ptr<_210e520a4_TypeDecl>>();
	

	_210e5266a_IdentTypeDecl(void) = default;

	inline bool operator==(_210e5266a_IdentTypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_210e5266a_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _210e52cb9_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_210e5266a_IdentTypeDecl>> _field_Idents = jule::Slice<jule::Ptr<_210e5266a_IdentTypeDecl>>();
	

	_210e52cb9_SubIdentTypeDecl(void) = default;

	inline bool operator==(_210e52cb9_SubIdentTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_210e52cb9_SubIdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _210e53171_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _field_Idents = jule::Slice<jule::Ptr<_20e7ddc0b_Token>>();
	jule::Ptr<_210e520a4_TypeDecl> _field_Kind = jule::Ptr<_210e520a4_TypeDecl>();
	

	_210e53171_NamespaceTypeDecl(void) = default;

	inline bool operator==(_210e53171_NamespaceTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_210e53171_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _210e5345c_SptrTypeDecl {
	jule::Ptr<_210e520a4_TypeDecl> _field_Elem = jule::Ptr<_210e520a4_TypeDecl>();
	

	_210e5345c_SptrTypeDecl(void) = default;

	inline bool operator==(_210e5345c_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_210e5345c_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _210e53858_SlcTypeDecl {
	jule::Ptr<_210e520a4_TypeDecl> _field_Elem = jule::Ptr<_210e520a4_TypeDecl>();
	

	_210e53858_SlcTypeDecl(void) = default;

	inline bool operator==(_210e53858_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_210e53858_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _210e53b44_TupleTypeDecl {
	jule::Slice<jule::Ptr<_210e520a4_TypeDecl>> _field_Types = jule::Slice<jule::Ptr<_210e520a4_TypeDecl>>();
	

	_210e53b44_TupleTypeDecl(void) = default;

	inline bool operator==(_210e53b44_TupleTypeDecl _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_210e53b44_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e54282_IsUnsafe(_210e53e30_PtrTypeDecl*);
struct _210e53e30_PtrTypeDecl {
	jule::Ptr<_210e520a4_TypeDecl> _field_Elem = jule::Ptr<_210e520a4_TypeDecl>();
	

	_210e53e30_PtrTypeDecl(void) = default;

	inline bool operator==(_210e53e30_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_210e53e30_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e5498b_AutoSized(_210e545b2_ArrTypeDecl*);
struct _210e545b2_ArrTypeDecl {
	jule::Ptr<_210e520a4_TypeDecl> _field_Elem = jule::Ptr<_210e520a4_TypeDecl>();
	jule::Ptr<_210e565c5_Expr> _field_Size = jule::Ptr<_210e565c5_Expr>();
	

	_210e545b2_ArrTypeDecl(void) = default;

	inline bool operator==(_210e545b2_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_210e545b2_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _210e54d10_MapTypeDecl {
	jule::Ptr<_210e520a4_TypeDecl> _field_Key = jule::Ptr<_210e520a4_TypeDecl>();
	jule::Ptr<_210e520a4_TypeDecl> _field_Val = jule::Ptr<_210e520a4_TypeDecl>();
	

	_210e54d10_MapTypeDecl(void) = default;

	inline bool operator==(_210e54d10_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_210e54d10_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _210e551b7_RetTypeDecl {
	jule::Ptr<_210e520a4_TypeDecl> _field_Kind = jule::Ptr<_210e520a4_TypeDecl>();
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _field_Idents = jule::Slice<jule::Ptr<_20e7ddc0b_Token>>();
	

	_210e551b7_RetTypeDecl(void) = default;

	inline bool operator==(_210e551b7_RetTypeDecl _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_210e551b7_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _210e565c5_Expr {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_20e7ddc0b_Token> _field_End = jule::Ptr<_20e7ddc0b_Token>();
	jule::Any _field_Kind = jule::Any();
	

	_210e565c5_Expr(void) = default;

	inline bool operator==(_210e565c5_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_210e565c5_Expr _other) { return !this->operator==(_other); }


};
struct _210e568b1_RangeExpr {
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	

	_210e568b1_RangeExpr(void) = default;

	inline bool operator==(_210e568b1_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_210e568b1_RangeExpr _other) { return !this->operator==(_other); }


};
struct _210e56e66_UseExpr {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	

	_210e56e66_UseExpr(void) = default;

	inline bool operator==(_210e56e66_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_210e56e66_UseExpr _other) { return !this->operator==(_other); }


};
struct _210e57252_TupleExpr {
	jule::Slice<jule::Ptr<_210e565c5_Expr>> _field_Expr = jule::Slice<jule::Ptr<_210e565c5_Expr>>();
	

	_210e57252_TupleExpr(void) = default;

	inline bool operator==(_210e57252_TupleExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_210e57252_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e5795b_IsNil(_210e57609_LitExpr*);
struct _210e57609_LitExpr {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Value = jule::Str();
	

	_210e57609_LitExpr(void) = default;

	inline bool operator==(_210e57609_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_210e57609_LitExpr _other) { return !this->operator==(_other); }


};
struct _210e57d13_UnsafeExpr {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	

	_210e57d13_UnsafeExpr(void) = default;

	inline bool operator==(_210e57d13_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_210e57d13_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _210e581ba_CoExpr {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	

	_210e581ba_CoExpr(void) = default;

	inline bool operator==(_210e581ba_CoExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_210e581ba_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e58990_IsSelf(_210e5863d_IdentExpr*);
struct _210e5863d_IdentExpr {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	

	_210e5863d_IdentExpr(void) = default;

	inline bool operator==(_210e5863d_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_210e5863d_IdentExpr _other) { return !this->operator==(_other); }


};
struct _210e58d47_UnaryExpr {
	jule::Ptr<_20e7ddc0b_Token> _field_Op = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	

	_210e58d47_UnaryExpr(void) = default;

	inline bool operator==(_210e58d47_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_210e58d47_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _210e591ee_VariadicExpr {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	

	_210e591ee_VariadicExpr(void) = default;

	inline bool operator==(_210e591ee_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_210e591ee_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _210e595a6_CastExpr {
	jule::Ptr<_210e520a4_TypeDecl> _field_Kind = jule::Ptr<_210e520a4_TypeDecl>();
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	

	_210e595a6_CastExpr(void) = default;

	inline bool operator==(_210e595a6_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_210e595a6_CastExpr _other) { return !this->operator==(_other); }


};
struct _210e5995d_NsSelectionExpr {
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _field_Ns = jule::Slice<jule::Ptr<_20e7ddc0b_Token>>();
	jule::Ptr<_20e7ddc0b_Token> _field_Ident = jule::Ptr<_20e7ddc0b_Token>();
	

	_210e5995d_NsSelectionExpr(void) = default;

	inline bool operator==(_210e5995d_NsSelectionExpr _other) {
		return 
			this->_field_Ns == _other._field_Ns &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_210e5995d_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _210e59dd1_SubIdentExpr {
	jule::Bool _field_IsSelf = jule::Bool();
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	jule::Ptr<_20e7ddc0b_Token> _field_Ident = jule::Ptr<_20e7ddc0b_Token>();
	

	_210e59dd1_SubIdentExpr(void) = default;

	inline bool operator==(_210e59dd1_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_210e59dd1_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _210e5a354_BinopExpr {
	jule::Ptr<_210e565c5_Expr> _field_Left = jule::Ptr<_210e565c5_Expr>();
	jule::Ptr<_210e565c5_Expr> _field_Right = jule::Ptr<_210e565c5_Expr>();
	jule::Ptr<_20e7ddc0b_Token> _field_Op = jule::Ptr<_20e7ddc0b_Token>();
	

	_210e5a354_BinopExpr(void) = default;

	inline bool operator==(_210e5a354_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_210e5a354_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e5ac06_Unhandled(_210e5a893_FnCallExpr*);
inline jule::Bool _210e5ae6a_Ignored(_210e5a893_FnCallExpr*);
struct _210e5a893_FnCallExpr {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	jule::Slice<jule::Ptr<_210e565c5_Expr>> _field_Args = jule::Slice<jule::Ptr<_210e565c5_Expr>>();
	jule::Ptr<_210e623c2_ScopeTree> _field_Exception = jule::Ptr<_210e623c2_ScopeTree>();
	

	_210e5a893_FnCallExpr(void) = default;

	inline bool operator==(_210e5a893_FnCallExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Exception == _other._field_Exception;
	}

	inline bool operator!=(_210e5a893_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e5b674_IsTargeted(_210e5b322_FieldExprPair*);
struct _210e5b322_FieldExprPair {
	jule::Ptr<_20e7ddc0b_Token> _field_Field = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	

	_210e5b322_FieldExprPair(void) = default;

	inline bool operator==(_210e5b322_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_210e5b322_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _210e5ba70_StructLit {
	jule::Ptr<_20e7ddc0b_Token> _field_End = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_210e520a4_TypeDecl> _field_Kind = jule::Ptr<_210e520a4_TypeDecl>();
	jule::Slice<jule::Ptr<_210e565c5_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_210e565c5_Expr>>();
	

	_210e5ba70_StructLit(void) = default;

	inline bool operator==(_210e5ba70_StructLit _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_210e5ba70_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e5c664_IsEmpty(_210e5bee3_BraceLit*);
struct _210e5bee3_BraceLit {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_20e7ddc0b_Token> _field_End = jule::Ptr<_20e7ddc0b_Token>();
	jule::Slice<jule::Ptr<_210e565c5_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_210e565c5_Expr>>();
	

	_210e5bee3_BraceLit(void) = default;

	inline bool operator==(_210e5bee3_BraceLit _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_210e5bee3_BraceLit _other) { return !this->operator==(_other); }


};
struct _210e5ca0a_KeyValPair {
	jule::Ptr<_210e565c5_Expr> _field_Key = jule::Ptr<_210e565c5_Expr>();
	jule::Ptr<_210e565c5_Expr> _field_Val = jule::Ptr<_210e565c5_Expr>();
	jule::Ptr<_20e7ddc0b_Token> _field_Colon = jule::Ptr<_20e7ddc0b_Token>();
	

	_210e5ca0a_KeyValPair(void) = default;

	inline bool operator==(_210e5ca0a_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_210e5ca0a_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e5d2d0_IsEmpty(_210e5ce7d_SliceExpr*);
struct _210e5ce7d_SliceExpr {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_20e7ddc0b_Token> _field_End = jule::Ptr<_20e7ddc0b_Token>();
	jule::Slice<jule::Ptr<_210e565c5_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_210e565c5_Expr>>();
	

	_210e5ce7d_SliceExpr(void) = default;

	inline bool operator==(_210e5ce7d_SliceExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_210e5ce7d_SliceExpr _other) { return !this->operator==(_other); }


};
struct _210e5d81e_IndexingExpr {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_20e7ddc0b_Token> _field_End = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	jule::Ptr<_210e565c5_Expr> _field_Index = jule::Ptr<_210e565c5_Expr>();
	

	_210e5d81e_IndexingExpr(void) = default;

	inline bool operator==(_210e5d81e_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_210e5d81e_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _210e5de29_SlicingExpr {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_20e7ddc0b_Token> _field_End = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	jule::Ptr<_210e565c5_Expr> _field_Start = jule::Ptr<_210e565c5_Expr>();
	jule::Ptr<_210e565c5_Expr> _field_To = jule::Ptr<_210e565c5_Expr>();
	

	_210e5de29_SlicingExpr(void) = default;

	inline bool operator==(_210e5de29_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_210e5de29_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _210e5e215_Constraint {
	jule::Slice<jule::Ptr<_210e520a4_TypeDecl>> _field_Mask = jule::Slice<jule::Ptr<_210e520a4_TypeDecl>>();
	

	_210e5e215_Constraint(void) = default;

	inline bool operator==(_210e5e215_Constraint _other) {
		return 
			this->_field_Mask == _other._field_Mask;
	}

	inline bool operator!=(_210e5e215_Constraint _other) { return !this->operator==(_other); }


};
struct _210e5e688_GenericDecl {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_210e5e215_Constraint> _field_Constraint = jule::Ptr<_210e5e215_Constraint>();
	

	_210e5e688_GenericDecl(void) = default;

	inline bool operator==(_210e5e688_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_210e5e688_GenericDecl _other) { return !this->operator==(_other); }


};
struct _210e5ea40_LabelSt {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Ident = jule::Str();
	

	_210e5ea40_LabelSt(void) = default;

	inline bool operator==(_210e5ea40_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_210e5ea40_LabelSt _other) { return !this->operator==(_other); }


};
struct _210e5ede7_GotoSt {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_20e7ddc0b_Token> _field_Label = jule::Ptr<_20e7ddc0b_Token>();
	

	_210e5ede7_GotoSt(void) = default;

	inline bool operator==(_210e5ede7_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_210e5ede7_GotoSt _other) { return !this->operator==(_other); }


};
struct _210e601d3_FallSt {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	

	_210e601d3_FallSt(void) = default;

	inline bool operator==(_210e601d3_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_210e601d3_FallSt _other) { return !this->operator==(_other); }


};
struct _210e607dd_AssignLeft {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	

	_210e607dd_AssignLeft(void) = default;

	inline bool operator==(_210e607dd_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_210e607dd_AssignLeft _other) { return !this->operator==(_other); }


};
struct _210e60d2c_AssignSt {
	jule::Bool _field_Declarative = jule::Bool();
	jule::Ptr<_20e7ddc0b_Token> _field_Setter = jule::Ptr<_20e7ddc0b_Token>();
	jule::Slice<jule::Ptr<_210e607dd_AssignLeft>> _field_Left = jule::Slice<jule::Ptr<_210e607dd_AssignLeft>>();
	jule::Ptr<_210e565c5_Expr> _field_Right = jule::Ptr<_210e565c5_Expr>();
	

	_210e60d2c_AssignSt(void) = default;

	inline bool operator==(_210e60d2c_AssignSt _other) {
		return 
			this->_field_Declarative == _other._field_Declarative &&
			this->_field_Setter == _other._field_Setter &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_210e60d2c_AssignSt _other) { return !this->operator==(_other); }


};
struct _210e61cb7_Stmt {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Any _field_Data = jule::Any();
	

	_210e61cb7_Stmt(void) = default;

	inline bool operator==(_210e61cb7_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_210e61cb7_Stmt _other) { return !this->operator==(_other); }


};
struct _210e623c2_ScopeTree {
	jule::Ptr<_210e623c2_ScopeTree> _field_Parent = jule::Ptr<_210e623c2_ScopeTree>();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Deferred = jule::Bool();
	jule::Slice<_210e61cb7_Stmt> _field_Stmts = jule::Slice<_210e61cb7_Stmt>();
	jule::Ptr<_20e7ddc0b_Token> _field_End = jule::Ptr<_20e7ddc0b_Token>();
	

	_210e623c2_ScopeTree(void) = default;

	inline bool operator==(_210e623c2_ScopeTree _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_210e623c2_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e62e0b_IsSelf(_210e62a98_ParamDecl*);
inline jule::Bool _210e63170_IsRef(_210e62a98_ParamDecl*);
struct _210e62a98_ParamDecl {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_210e520a4_TypeDecl> _field_Kind = jule::Ptr<_210e520a4_TypeDecl>();
	jule::Str _field_Ident = jule::Str();
	

	_210e62a98_ParamDecl(void) = default;

	inline bool operator==(_210e62a98_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_210e62a98_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e6421a_IsAnon(_210e63db8_FnDecl*);
struct _210e63db8_FnDecl {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Bool _field_Global = jule::Bool();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Exceptional = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_210e1d8ab_Directive>> _field_Directives = jule::Slice<jule::Ptr<_210e1d8ab_Directive>>();
	jule::Ptr<_210e623c2_ScopeTree> _field_Scope = jule::Ptr<_210e623c2_ScopeTree>();
	jule::Slice<jule::Ptr<_210e5e688_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_210e5e688_GenericDecl>>();
	jule::Ptr<_210e551b7_RetTypeDecl> _field_Result = jule::Ptr<_210e551b7_RetTypeDecl>();
	jule::Slice<jule::Ptr<_210e62a98_ParamDecl>> _field_Params = jule::Slice<jule::Ptr<_210e62a98_ParamDecl>>();
	

	_210e63db8_FnDecl(void) = default;

	inline bool operator==(_210e63db8_FnDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params;
	}

	inline bool operator!=(_210e63db8_FnDecl _other) { return !this->operator==(_other); }


};
struct _210e64d97_VarDecl {
	jule::Ptr<_210e623c2_ScopeTree> _field_Scope = jule::Ptr<_210e623c2_ScopeTree>();
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Constant = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Slice<jule::Ptr<_210e1d8ab_Directive>> _field_Directives = jule::Slice<jule::Ptr<_210e1d8ab_Directive>>();
	jule::Ptr<_210e520a4_TypeDecl> _field_Kind = jule::Ptr<_210e520a4_TypeDecl>();
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	

	_210e64d97_VarDecl(void) = default;

	inline bool operator==(_210e64d97_VarDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_210e64d97_VarDecl _other) { return !this->operator==(_other); }


};
struct _210e6524e_RetSt {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	

	_210e6524e_RetSt(void) = default;

	inline bool operator==(_210e6524e_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_210e6524e_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e65c11_IsInf(_210e658ae_Iter*);
struct _210e658ae_Iter {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Any _field_Kind = jule::Any();
	jule::Ptr<_210e623c2_ScopeTree> _field_Scope = jule::Ptr<_210e623c2_ScopeTree>();
	

	_210e658ae_Iter(void) = default;

	inline bool operator==(_210e658ae_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_210e658ae_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e664d6_IsWhileNext(_210e66184_WhileKind*);
struct _210e66184_WhileKind {
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	jule::Any _field_Next = jule::Any();
	jule::Ptr<_20e7ddc0b_Token> _field_NextToken = jule::Ptr<_20e7ddc0b_Token>();
	

	_210e66184_WhileKind(void) = default;

	inline bool operator==(_210e66184_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_210e66184_WhileKind _other) { return !this->operator==(_other); }


};
struct _210e66a25_RangeKind {
	jule::Ptr<_20e7ddc0b_Token> _field_InToken = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	jule::Ptr<_210e64d97_VarDecl> _field_KeyA = jule::Ptr<_210e64d97_VarDecl>();
	jule::Ptr<_210e64d97_VarDecl> _field_KeyB = jule::Ptr<_210e64d97_VarDecl>();
	

	_210e66a25_RangeKind(void) = default;

	inline bool operator==(_210e66a25_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_210e66a25_RangeKind _other) { return !this->operator==(_other); }


};
struct _210e66dcc_BreakSt {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_20e7ddc0b_Token> _field_Label = jule::Ptr<_20e7ddc0b_Token>();
	

	_210e66dcc_BreakSt(void) = default;

	inline bool operator==(_210e66dcc_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_210e66dcc_BreakSt _other) { return !this->operator==(_other); }


};
struct _210e67284_ContSt {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_20e7ddc0b_Token> _field_Label = jule::Ptr<_20e7ddc0b_Token>();
	

	_210e67284_ContSt(void) = default;

	inline bool operator==(_210e67284_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_210e67284_ContSt _other) { return !this->operator==(_other); }


};
struct _210e67707_If {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	jule::Ptr<_210e623c2_ScopeTree> _field_Scope = jule::Ptr<_210e623c2_ScopeTree>();
	

	_210e67707_If(void) = default;

	inline bool operator==(_210e67707_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_210e67707_If _other) { return !this->operator==(_other); }


};
struct _210e67aae_Else {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_210e623c2_ScopeTree> _field_Scope = jule::Ptr<_210e623c2_ScopeTree>();
	

	_210e67aae_Else(void) = default;

	inline bool operator==(_210e67aae_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_210e67aae_Else _other) { return !this->operator==(_other); }


};
struct _210e68032_Conditional {
	jule::Ptr<_210e67707_If> _field_Head = jule::Ptr<_210e67707_If>();
	jule::Slice<jule::Ptr<_210e67707_If>> _field_Tail = jule::Slice<jule::Ptr<_210e67707_If>>();
	jule::Ptr<_210e67aae_Else> _field_Default = jule::Ptr<_210e67aae_Else>();
	

	_210e68032_Conditional(void) = default;

	inline bool operator==(_210e68032_Conditional _other) {
		return 
			this->_field_Head == _other._field_Head &&
			this->_field_Tail == _other._field_Tail &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_210e68032_Conditional _other) { return !this->operator==(_other); }


};
struct _210e68708_TypeAliasDecl {
	jule::Ptr<_210e623c2_ScopeTree> _field_Scope = jule::Ptr<_210e623c2_ScopeTree>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_210e520a4_TypeDecl> _field_Kind = jule::Ptr<_210e520a4_TypeDecl>();
	

	_210e68708_TypeAliasDecl(void) = default;

	inline bool operator==(_210e68708_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_210e68708_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _210e68b7b_Case {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_210e623c2_ScopeTree> _field_Scope = jule::Ptr<_210e623c2_ScopeTree>();
	jule::Slice<jule::Ptr<_210e565c5_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_210e565c5_Expr>>();
	

	_210e68b7b_Case(void) = default;

	inline bool operator==(_210e68b7b_Case _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_210e68b7b_Case _other) { return !this->operator==(_other); }


};
struct _210e69352_MatchCase {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_20e7ddc0b_Token> _field_End = jule::Ptr<_20e7ddc0b_Token>();
	jule::Bool _field_TypeMatch = jule::Bool();
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	jule::Slice<jule::Ptr<_210e68b7b_Case>> _field_Cases = jule::Slice<jule::Ptr<_210e68b7b_Case>>();
	jule::Ptr<_210e67aae_Else> _field_Default = jule::Ptr<_210e67aae_Else>();
	

	_210e69352_MatchCase(void) = default;

	inline bool operator==(_210e69352_MatchCase _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_210e69352_MatchCase _other) { return !this->operator==(_other); }


};
struct _210e69ae4_UseDecl {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_LinkPath = jule::Str();
	jule::Str _field_Alias = jule::Str();
	jule::Bool _field_Full = jule::Bool();
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _field_Selected = jule::Slice<jule::Ptr<_20e7ddc0b_Token>>();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Std = jule::Bool();
	

	_210e69ae4_UseDecl(void) = default;

	inline bool operator==(_210e69ae4_UseDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Full == _other._field_Full &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std;
	}

	inline bool operator!=(_210e69ae4_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e6a3b9_AutoExpr(_210e6a067_EnumItemDecl*);
struct _210e6a067_EnumItemDecl {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	

	_210e6a067_EnumItemDecl(void) = default;

	inline bool operator==(_210e6a067_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_210e6a067_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e6b123_DefaultTyped(_210e6aa90_EnumDecl*);
struct _210e6aa90_EnumDecl {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_210e520a4_TypeDecl> _field_Kind = jule::Ptr<_210e520a4_TypeDecl>();
	jule::Slice<jule::Ptr<_210e6a067_EnumItemDecl>> _field_Items = jule::Slice<jule::Ptr<_210e6a067_EnumItemDecl>>();
	jule::Ptr<_20e7ddc0b_Token> _field_End = jule::Ptr<_20e7ddc0b_Token>();
	

	_210e6aa90_EnumDecl(void) = default;

	inline bool operator==(_210e6aa90_EnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_210e6aa90_EnumDecl _other) { return !this->operator==(_other); }


};
struct _210e6b596_TypeEnumItemDecl {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_210e520a4_TypeDecl> _field_Kind = jule::Ptr<_210e520a4_TypeDecl>();
	

	_210e6b596_TypeEnumItemDecl(void) = default;

	inline bool operator==(_210e6b596_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_210e6b596_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _210e6b794_TypeEnumDecl {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_210e6b596_TypeEnumItemDecl>> _field_Items = jule::Slice<jule::Ptr<_210e6b596_TypeEnumItemDecl>>();
	jule::Ptr<_20e7ddc0b_Token> _field_End = jule::Ptr<_20e7ddc0b_Token>();
	

	_210e6b794_TypeEnumDecl(void) = default;

	inline bool operator==(_210e6b794_TypeEnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_210e6b794_TypeEnumDecl _other) { return !this->operator==(_other); }


};
struct _210e6bce4_FieldDecl {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_210e520a4_TypeDecl> _field_Kind = jule::Ptr<_210e520a4_TypeDecl>();
	jule::Ptr<_210e565c5_Expr> _field_Default = jule::Ptr<_210e565c5_Expr>();
	

	_210e6bce4_FieldDecl(void) = default;

	inline bool operator==(_210e6bce4_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_210e6bce4_FieldDecl _other) { return !this->operator==(_other); }


};
struct _210e6c652_StructDecl {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_20e7ddc0b_Token> _field_End = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_210e6bce4_FieldDecl>> _field_Fields = jule::Slice<jule::Ptr<_210e6bce4_FieldDecl>>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_210e1d8ab_Directive>> _field_Directives = jule::Slice<jule::Ptr<_210e1d8ab_Directive>>();
	jule::Slice<jule::Ptr<_210e5e688_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_210e5e688_GenericDecl>>();
	

	_210e6c652_StructDecl(void) = default;

	inline bool operator==(_210e6c652_StructDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_210e6c652_StructDecl _other) { return !this->operator==(_other); }


};
struct _210e6cc5c_TraitDecl {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_20e7ddc0b_Token> _field_End = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_Public = jule::Bool();
	jule::Slice<jule::Ptr<_210e63db8_FnDecl>> _field_Methods = jule::Slice<jule::Ptr<_210e63db8_FnDecl>>();
	

	_210e6cc5c_TraitDecl(void) = default;

	inline bool operator==(_210e6cc5c_TraitDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Methods == _other._field_Methods;
	}

	inline bool operator!=(_210e6cc5c_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e6d6ca_IsTraitImpl(_210e6d367_Impl*);
inline jule::Bool _210e6d93e_IsStructImpl(_210e6d367_Impl*);
struct _210e6d367_Impl {
	jule::Ptr<_20e7ddc0b_Token> _field_End = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_210e520a4_TypeDecl> _field_Base = jule::Ptr<_210e520a4_TypeDecl>();
	jule::Ptr<_210e520a4_TypeDecl> _field_Dest = jule::Ptr<_210e520a4_TypeDecl>();
	jule::Slice<jule::Ptr<_210e63db8_FnDecl>> _field_Methods = jule::Slice<jule::Ptr<_210e63db8_FnDecl>>();
	jule::Slice<jule::Ptr<_210e64d97_VarDecl>> _field_Statics = jule::Slice<jule::Ptr<_210e64d97_VarDecl>>();
	

	_210e6d367_Impl(void) = default;

	inline bool operator==(_210e6d367_Impl _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_210e6d367_Impl _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_210ea46cd_Const> static__21100e5b2_NewI64(jule::I64);
inline jule::Ptr<_210ea46cd_Const> static__21100e6e4_NewU64(jule::U64);
inline jule::Ptr<_210ea46cd_Const> static__21100e87b_NewBool(jule::Bool);
inline jule::Ptr<_210ea46cd_Const> static__21100eb23_NewStr(jule::Str);
inline jule::Ptr<_210ea46cd_Const> static__21100edba_NewF64(jule::F64);
inline jule::Ptr<_210ea46cd_Const> static__2110100b8_NewNil(void);
inline jule::I64 _2110106b2_ReadI64(_210ea46cd_Const*);
inline jule::U64 _211010926_ReadU64(_210ea46cd_Const*);
inline jule::Bool _211010b8a_ReadBool(_210ea46cd_Const*);
inline jule::Str _211010dee_ReadStr(_210ea46cd_Const*);
inline jule::F64 _211011163_ReadF64(_210ea46cd_Const*);
inline jule::I64 _2110113c7_AsI64(_210ea46cd_Const*);
inline jule::U64 _21101163b_AsU64(_210ea46cd_Const*);
inline jule::F64 _2110118a0_AsF64(_210ea46cd_Const*);
inline void _211011b25_SetI64(_210ea46cd_Const*, jule::I64);
inline void _211011d9a_SetU64(_210ea46cd_Const*, jule::U64);
inline void _211012120_SetBool(_210ea46cd_Const*, jule::Bool);
inline void _211012395_SetStr(_210ea46cd_Const*, jule::Str);
inline void _21101261a_SetF64(_210ea46cd_Const*, jule::F64);
inline void _2110127e6_SetNil(_210ea46cd_Const*);
inline jule::Bool _211012a5a_IsI64(_210ea46cd_Const*);
inline jule::Bool _211012cbe_IsU64(_210ea46cd_Const*);
inline jule::Bool _211013033_IsBool(_210ea46cd_Const*);
inline jule::Bool _211013297_IsStr(_210ea46cd_Const*);
inline jule::Bool _21101350b_IsF64(_210ea46cd_Const*);
inline jule::Bool _211013770_IsNil(_210ea46cd_Const*);
inline jule::Bool _211013a7d_AreSameTypes(_210ea46cd_Const*, _210ea46cd_Const);
inline jule::Bool _211013d8b_And(_210ea46cd_Const*, _210ea46cd_Const);
inline jule::Bool _211014199_Or(_210ea46cd_Const*, _210ea46cd_Const);
inline jule::Bool _2110144a7_Eq(_210ea46cd_Const*, _210ea46cd_Const);
inline jule::Bool _2110147b5_Lt(_210ea46cd_Const*, _210ea46cd_Const);
inline jule::Bool _211014ac3_LtEq(_210ea46cd_Const*, _210ea46cd_Const);
inline jule::Bool _211014dd1_Gt(_210ea46cd_Const*, _210ea46cd_Const);
inline jule::Bool _2110151de_GtEq(_210ea46cd_Const*, _210ea46cd_Const);
inline jule::Bool _2110154ec_Add(_210ea46cd_Const*, _210ea46cd_Const);
inline jule::Bool _21101580a_Sub(_210ea46cd_Const*, _210ea46cd_Const);
inline jule::Bool _211015b18_Mul(_210ea46cd_Const*, _210ea46cd_Const);
inline jule::Bool _211015e26_Div(_210ea46cd_Const*, _210ea46cd_Const);
inline jule::Bool _211016234_Mod(_210ea46cd_Const*, _210ea46cd_Const);
inline jule::Bool _211016542_BitwiseAnd(_210ea46cd_Const*, _210ea46cd_Const);
inline jule::Bool _211016850_BitwiseOr(_210ea46cd_Const*, _210ea46cd_Const);
inline jule::Bool _211016b5d_Xor(_210ea46cd_Const*, _210ea46cd_Const);
inline jule::Bool _211016e6b_Lshift(_210ea46cd_Const*, _210ea46cd_Const);
inline jule::Bool _211017279_Rshift(_210ea46cd_Const*, _210ea46cd_Const);
struct _210ea46cd_Const {
	jule::Any _field_data = jule::Any();
	

	_210ea46cd_Const(void) = default;

	inline jule::Bool operator==(_210ea46cd_Const _other) { return _2110144a7_Eq(this, _other); }

	inline bool operator!=(_210ea46cd_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_210ea46cd_Const _other) { return _211014dd1_Gt(this, _other); }

	inline jule::Bool operator>=(_210ea46cd_Const _other) { return _2110151de_GtEq(this, _other); }

	inline jule::Bool operator<(_210ea46cd_Const _other) { return _2110147b5_Lt(this, _other); }

	inline jule::Bool operator<=(_210ea46cd_Const _other) { return _211014ac3_LtEq(this, _other); }


};
struct _2116c9dd1_floatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();
	

	_2116c9dd1_floatInfo(void) = default;

	inline bool operator==(_2116c9dd1_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_2116c9dd1_floatInfo _other) { return !this->operator==(_other); }


};
struct _20e36ca21_decimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	

	_20e36ca21_decimalSlice(void) = default;

	inline bool operator==(_20e36ca21_decimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_20e36ca21_decimalSlice _other) { return !this->operator==(_other); }


};
struct _211b050db_leftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();
	

	_211b050db_leftCheat(void) = default;

	inline bool operator==(_211b050db_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_211b050db_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _2115dbe36_set(_211b0544e_decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _211547a40_floatBits(_211b0544e_decimal*, _2116c9dd1_floatInfo&);
inline void _211b0563b_assign(_211b0544e_decimal*, jule::U64);
inline void _211b0576d_shift(_211b0544e_decimal*, jule::I64);
inline void _211b058a0_roundDown(_211b0544e_decimal*, jule::I64);
inline void _211b059d2_roundUp(_211b0544e_decimal*, jule::I64);
inline void _211b05b14_round(_211b0544e_decimal*, jule::I64);
inline jule::U64 _211b05c46_roundedInteger(_211b0544e_decimal*);
struct _211b0544e_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();
	

	_211b0544e_decimal(void) = default;

	inline bool operator==(_211b0544e_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_211b0544e_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_210e49e48_FieldIns> _210d465d6_instance(jule::Ptr<_210e34c9b_Field>);
struct _210e34c9b_Field {
	jule::Ptr<_210e427d1_Struct> _field_Owner = jule::Ptr<_210e427d1_Struct>();
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_211bba5ad_TypeSymbol> _field_Kind = jule::Ptr<_211bba5ad_TypeSymbol>();
	jule::Ptr<_210e565c5_Expr> _field_Default = jule::Ptr<_210e565c5_Expr>();
	

	_210e34c9b_Field(void) = default;

	inline bool operator==(_210e34c9b_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_210e34c9b_Field _other) { return !this->operator==(_other); }


};
struct _210e4420b_Operators {
	jule::Ptr<_211022c35_FnIns> _field_Eq = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_Gt = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_GtEq = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_Lt = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_LtEq = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_Shl = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_Shr = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_Add = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_Sub = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_Div = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_Mul = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_Mod = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_BitAnd = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_BitOr = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_BitXor = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_Neg = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_Pos = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_BitNot = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_AddAssign = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_SubAssign = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_DivAssign = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_MulAssign = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_ModAssign = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_ShlAssign = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_ShrAssign = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_BitOrAssign = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_BitAndAssign = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211022c35_FnIns> _field_BitXorAssign = jule::Ptr<_211022c35_FnIns>();
	

	_210e4420b_Operators(void) = default;

	inline bool operator==(_210e4420b_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_210e4420b_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_210e6db2b_StructIns> _210e23ae2_instance(jule::Ptr<_210e427d1_Struct>);
inline jule::Ptr<_210e6db2b_StructIns> _210e29bd6_appendInstance(_210e427d1_Struct*, jule::Ptr<_210e6db2b_StructIns>&);
inline jule::Ptr<_211020084_Fn> _210e2de4e_FindMethod(_210e427d1_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_211b43228_Var> _210e31bee_FindStatic(_210e427d1_Struct*, jule::Str);
inline jule::Ptr<_210e34c9b_Field> _210e32c11_FindField(_210e427d1_Struct*, jule::Str);
inline jule::Bool _210e32150_IsImplements(_210e427d1_Struct*, jule::Ptr<_211031e42_Trait>);
inline jule::Bool _210e3442c_IsDerives(_210e427d1_Struct*, jule::Str);
inline jule::Bool _210e33838_IsUses(_210e427d1_Struct*, jule::Ptr<_210e427d1_Struct>);
inline jule::Bool _210e375d9_HasRefAccessible(_210e427d1_Struct*);
struct _210e427d1_Struct {
	jule::Ptr<_211b254c4_Sema> _field_sema = jule::Ptr<_211b254c4_Sema>();
	jule::Slice<jule::Ptr<_210e427d1_Struct>> _field_Depends = jule::Slice<jule::Ptr<_210e427d1_Struct>>();
	jule::Slice<jule::Ptr<_210e427d1_Struct>> _field_Uses = jule::Slice<jule::Ptr<_210e427d1_Struct>>();
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_210e34c9b_Field>> _field_Fields = jule::Slice<jule::Ptr<_210e34c9b_Field>>();
	jule::Slice<jule::Ptr<_211020084_Fn>> _field_Methods = jule::Slice<jule::Ptr<_211020084_Fn>>();
	jule::Slice<jule::Ptr<_211b43228_Var>> _field_Statics = jule::Slice<jule::Ptr<_211b43228_Var>>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_210e1d8ab_Directive>> _field_Directives = jule::Slice<jule::Ptr<_210e1d8ab_Directive>>();
	jule::Slice<jule::Ptr<_210e5e688_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_210e5e688_GenericDecl>>();
	jule::Slice<jule::Ptr<_211031e42_Trait>> _field_Implements = jule::Slice<jule::Ptr<_211031e42_Trait>>();
	jule::Slice<jule::Ptr<_210e6db2b_StructIns>> _field_Instances = jule::Slice<jule::Ptr<_210e6db2b_StructIns>>();
	

	_210e427d1_Struct(void) = default;

	inline bool operator==(_210e427d1_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Depends == _other._field_Depends &&
			this->_field_Uses == _other._field_Uses &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Implements == _other._field_Implements &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_210e427d1_Struct _other) { return !this->operator==(_other); }


};
struct _210e49e48_FieldIns {
	jule::Ptr<_210e34c9b_Field> _field_Decl = jule::Ptr<_210e34c9b_Field>();
	jule::Ptr<_211bb6455_TypeKind> _field_Kind = jule::Ptr<_211bb6455_TypeKind>();
	jule::Ptr<_211b8a319_Data> _field_Default = jule::Ptr<_211b8a319_Data>();
	

	_210e49e48_FieldIns(void) = default;

	inline bool operator==(_210e49e48_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_210e49e48_FieldIns _other) { return !this->operator==(_other); }


};
struct _211017a4e_OperandExprModel {
	jule::Ptr<_211bb6455_TypeKind> _field_Kind = jule::Ptr<_211bb6455_TypeKind>();
	jule::Any _field_Model = jule::Any();
	

	_211017a4e_OperandExprModel(void) = default;

	inline bool operator==(_211017a4e_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_211017a4e_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _211017c3b_BinopExprModel {
	jule::Ptr<_211017a4e_OperandExprModel> _field_Left = jule::Ptr<_211017a4e_OperandExprModel>();
	jule::Ptr<_211017a4e_OperandExprModel> _field_Right = jule::Ptr<_211017a4e_OperandExprModel>();
	jule::Ptr<_20e7ddc0b_Token> _field_Op = jule::Ptr<_20e7ddc0b_Token>();
	

	_211017c3b_BinopExprModel(void) = default;

	inline bool operator==(_211017c3b_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_211017c3b_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _211017e28_UnaryExprModel {
	jule::Ptr<_211b8a319_Data> _field_Expr = jule::Ptr<_211b8a319_Data>();
	jule::Ptr<_20e7ddc0b_Token> _field_Op = jule::Ptr<_20e7ddc0b_Token>();
	

	_211017e28_UnaryExprModel(void) = default;

	inline bool operator==(_211017e28_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_211017e28_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _211018115_StructArgExprModel {
	jule::Ptr<_210e49e48_FieldIns> _field_Field = jule::Ptr<_210e49e48_FieldIns>();
	jule::Any _field_Expr = jule::Any();
	

	_211018115_StructArgExprModel(void) = default;

	inline bool operator==(_211018115_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_211018115_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _211018302_StructLitExprModel {
	jule::Ptr<_210e6db2b_StructIns> _field_Strct = jule::Ptr<_210e6db2b_StructIns>();
	jule::Slice<jule::Ptr<_211018115_StructArgExprModel>> _field_Args = jule::Slice<jule::Ptr<_211018115_StructArgExprModel>>();
	

	_211018302_StructLitExprModel(void) = default;

	inline bool operator==(_211018302_StructLitExprModel _other) {
		return 
			this->_field_Strct == _other._field_Strct &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_211018302_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _2110184de_AllocStructLitExprModel {
	jule::Ptr<_211018302_StructLitExprModel> _field_Lit = jule::Ptr<_211018302_StructLitExprModel>();
	

	_2110184de_AllocStructLitExprModel(void) = default;

	inline bool operator==(_2110184de_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_2110184de_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _2110186cb_CastingExprModel {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_211bb6455_TypeKind> _field_Kind = jule::Ptr<_211bb6455_TypeKind>();
	jule::Ptr<_211bb6455_TypeKind> _field_ExprKind = jule::Ptr<_211bb6455_TypeKind>();
	

	_2110186cb_CastingExprModel(void) = default;

	inline bool operator==(_2110186cb_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_2110186cb_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _2110188b8_FnCallExprModel {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_211022c35_FnIns> _field_Func = jule::Ptr<_211022c35_FnIns>();
	jule::Bool _field_IsCo = jule::Bool();
	jule::Any _field_Expr = jule::Any();
	jule::Slice<jule::Any> _field_Args = jule::Slice<jule::Any>();
	jule::Ptr<_211b0940e_Scope> _field_Except = jule::Ptr<_211b0940e_Scope>();
	jule::Bool _field_Assigned = jule::Bool();
	

	_2110188b8_FnCallExprModel(void) = default;

	inline bool operator==(_2110188b8_FnCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Func == _other._field_Func &&
			this->_field_IsCo == _other._field_IsCo &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Except == _other._field_Except &&
			this->_field_Assigned == _other._field_Assigned;
	}

	inline bool operator!=(_2110188b8_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _211018aa5_SliceExprModel {
	jule::Ptr<_211bb6455_TypeKind> _field_ElemKind = jule::Ptr<_211bb6455_TypeKind>();
	jule::Slice<jule::Any> _field_Elems = jule::Slice<jule::Any>();
	

	_211018aa5_SliceExprModel(void) = default;

	inline bool operator==(_211018aa5_SliceExprModel _other) {
		return 
			this->_field_ElemKind == _other._field_ElemKind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_211018aa5_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _211018c92_IndexingExprModel {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_211b8a319_Data> _field_Expr = jule::Ptr<_211b8a319_Data>();
	jule::Ptr<_211b8a319_Data> _field_Index = jule::Ptr<_211b8a319_Data>();
	

	_211018c92_IndexingExprModel(void) = default;

	inline bool operator==(_211018c92_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_211018c92_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _211018e7e_AnonFnExprModel {
	jule::Ptr<_211022c35_FnIns> _field_Func = jule::Ptr<_211022c35_FnIns>();
	jule::Bool _field_Global = jule::Bool();
	

	_211018e7e_AnonFnExprModel(void) = default;

	inline bool operator==(_211018e7e_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_211018e7e_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _21101916b_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any();
	jule::Any _field_Val = jule::Any();
	

	_21101916b_KeyValPairExprModel(void) = default;

	inline bool operator==(_21101916b_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_21101916b_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _211019358_MapExprModel {
	jule::Ptr<_211bb6455_TypeKind> _field_KeyKind = jule::Ptr<_211bb6455_TypeKind>();
	jule::Ptr<_211bb6455_TypeKind> _field_ValKind = jule::Ptr<_211bb6455_TypeKind>();
	jule::Slice<jule::Ptr<_21101916b_KeyValPairExprModel>> _field_Entries = jule::Slice<jule::Ptr<_21101916b_KeyValPairExprModel>>();
	

	_211019358_MapExprModel(void) = default;

	inline bool operator==(_211019358_MapExprModel _other) {
		return 
			this->_field_KeyKind == _other._field_KeyKind &&
			this->_field_ValKind == _other._field_ValKind &&
			this->_field_Entries == _other._field_Entries;
	}

	inline bool operator!=(_211019358_MapExprModel _other) { return !this->operator==(_other); }


};
struct _211019545_SlicingExprModel {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Left = jule::Any();
	jule::Any _field_Right = jule::Any();
	

	_211019545_SlicingExprModel(void) = default;

	inline bool operator==(_211019545_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_211019545_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _211019732_TraitSubIdentExprModel {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_211020084_Fn> _field_Method = jule::Ptr<_211020084_Fn>();
	jule::Ptr<_211031e42_Trait> _field_Trt = jule::Ptr<_211031e42_Trait>();
	

	_211019732_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_211019732_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_211019732_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _211019b50_StructSubIdentExprModel {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_211b8a319_Data> _field_Expr = jule::Ptr<_211b8a319_Data>();
	jule::Ptr<_211bb6455_TypeKind> _field_ExprKind = jule::Ptr<_211bb6455_TypeKind>();
	jule::Ptr<_211022c35_FnIns> _field_Method = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_210e49e48_FieldIns> _field_Field = jule::Ptr<_210e49e48_FieldIns>();
	jule::Ptr<_210e6db2b_StructIns> _field_Owner = jule::Ptr<_210e6db2b_StructIns>();
	

	_211019b50_StructSubIdentExprModel(void) = default;

	inline bool operator==(_211019b50_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_211019b50_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _211019d3c_StructStaticIdentExprModel {
	jule::Ptr<_210e6db2b_StructIns> _field_Structure = jule::Ptr<_210e6db2b_StructIns>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_211022c35_FnIns> _field_Method = jule::Ptr<_211022c35_FnIns>();
	

	_211019d3c_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_211019d3c_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_211019d3c_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _21101a029_ArrayExprModel {
	jule::Ptr<_211bc22b8_Arr> _field_Kind = jule::Ptr<_211bc22b8_Arr>();
	jule::Slice<jule::Any> _field_Elems = jule::Slice<jule::Any>();
	

	_21101a029_ArrayExprModel(void) = default;

	inline bool operator==(_21101a029_ArrayExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_21101a029_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _21101a216_CommonIdentExprModel {
	jule::Str _field_Ident = jule::Str();
	

	_21101a216_CommonIdentExprModel(void) = default;

	inline bool operator==(_21101a216_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_21101a216_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _21101a403_CommonSubIdentExprModel {
	jule::Ptr<_211bb6455_TypeKind> _field_ExprKind = jule::Ptr<_211bb6455_TypeKind>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Ident = jule::Str();
	

	_21101a403_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_21101a403_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_21101a403_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _21101a5e0_TupleExprModel {
	jule::Slice<jule::Ptr<_211b8a319_Data>> _field_Datas = jule::Slice<jule::Ptr<_211b8a319_Data>>();
	

	_21101a5e0_TupleExprModel(void) = default;

	inline bool operator==(_21101a5e0_TupleExprModel _other) {
		return 
			this->_field_Datas == _other._field_Datas;
	}

	inline bool operator!=(_21101a5e0_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _21101a7cc_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any();
	jule::Bool _field_Debug = jule::Bool();
	

	_21101a7cc_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_21101a7cc_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_21101a7cc_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _21101a9b9_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any();
	jule::Bool _field_Debug = jule::Bool();
	

	_21101a9b9_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_21101a9b9_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_21101a9b9_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _21101aba6_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_21101aba6_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_21101aba6_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_21101aba6_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _21101ad93_BuiltinNewCallExprModel {
	jule::Ptr<_211bb6455_TypeKind> _field_Kind = jule::Ptr<_211bb6455_TypeKind>();
	jule::Any _field_Init = jule::Any();
	

	_21101ad93_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_21101ad93_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_21101ad93_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _21101b080_BuiltinPanicCallExprModel {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Any _field_Expr = jule::Any();
	

	_21101b080_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_21101b080_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_21101b080_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _21101b26c_BuiltinAssertCallExprModel {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Str _field_Log = jule::Str();
	

	_21101b26c_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_21101b26c_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_21101b26c_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _21101b459_BuiltinMakeCallExprModel {
	jule::Ptr<_211bb6455_TypeKind> _field_Kind = jule::Ptr<_211bb6455_TypeKind>();
	jule::Any _field_Len = jule::Any();
	jule::Any _field_Cap = jule::Any();
	

	_21101b459_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_21101b459_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_21101b459_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _21101b646_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Any _field_Elements = jule::Any();
	

	_21101b646_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_21101b646_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_21101b646_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _21101b833_BuiltinCopyCallExprModel {
	jule::Ptr<_211b8a319_Data> _field_Dest = jule::Ptr<_211b8a319_Data>();
	jule::Ptr<_211b8a319_Data> _field_Src = jule::Ptr<_211b8a319_Data>();
	

	_21101b833_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_21101b833_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_21101b833_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _21101ba20_BuiltinErrorCallExprModel {
	jule::Ptr<_211022c35_FnIns> _field_Func = jule::Ptr<_211022c35_FnIns>();
	jule::Any _field_Err = jule::Any();
	

	_21101ba20_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_21101ba20_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_21101ba20_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _21101991e_SizeofExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_21101991e_SizeofExprModel(void) = default;

	inline bool operator==(_21101991e_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_21101991e_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _21101c180_AlignofExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_21101c180_AlignofExprModel(void) = default;

	inline bool operator==(_21101c180_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_21101c180_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _21101c36c_RuneExprModel {
	jule::I32 _field_Code = jule::I32();
	

	_21101c36c_RuneExprModel(void) = default;

	inline bool operator==(_21101c36c_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_21101c36c_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _21101c559_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_21101c559_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_21101c559_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_21101c559_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _21101c746_BackendEmitExprModel {
	jule::Str _field_Code = jule::Str();
	jule::Slice<jule::Any> _field_Exprs = jule::Slice<jule::Any>();
	

	_21101c746_BackendEmitExprModel(void) = default;

	inline bool operator==(_21101c746_BackendEmitExprModel _other) {
		return 
			this->_field_Code == _other._field_Code &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_21101c746_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _21101c933_FreeExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_21101c933_FreeExprModel(void) = default;

	inline bool operator==(_21101c933_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_21101c933_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _21101d082_RetType {
	jule::Ptr<_211bba5ad_TypeSymbol> _field_Kind = jule::Ptr<_211bba5ad_TypeSymbol>();
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _field_Idents = jule::Slice<jule::Ptr<_20e7ddc0b_Token>>();
	

	_21101d082_RetType(void) = default;

	inline bool operator==(_21101d082_RetType _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_21101d082_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_211021d66_ParamIns> _21101db10_instance(jule::Ptr<_21101d747_Param>);
inline jule::Bool _21101dd74_IsSelf(_21101d747_Param*);
inline jule::Bool _21101e0d8_IsRef(_21101d747_Param*);
struct _21101d747_Param {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_211bba5ad_TypeSymbol> _field_Kind = jule::Ptr<_211bba5ad_TypeSymbol>();
	jule::Str _field_Ident = jule::Str();
	

	_21101d747_Param(void) = default;

	inline bool operator==(_21101d747_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_21101d747_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _2110204e6_IsVoid(_211020084_Fn*);
inline jule::Bool _21102075a_IsMethod(_211020084_Fn*);
inline jule::Bool _2110209be_IsEntryPoint(_211020084_Fn*);
inline jule::Bool _211020c33_IsInit(_211020084_Fn*);
inline jule::Bool _211020e97_IsAnon(_211020084_Fn*);
inline jule::Bool _21102120b_AnyVar(_211020084_Fn*);
inline jule::Ptr<_211022c35_FnIns> _211021470_instanceForce(jule::Ptr<_211020084_Fn>);
inline jule::Ptr<_211022c35_FnIns> _2110216d4_instance(jule::Ptr<_211020084_Fn>);
inline jule::Ptr<_211022c35_FnIns> _2110219ae_appendInstance(_211020084_Fn*, jule::Ptr<_211022c35_FnIns>&);
struct _211020084_Fn {
	jule::Ptr<_211b254c4_Sema> _field_sema = jule::Ptr<_211b254c4_Sema>();
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Bool _field_Global = jule::Bool();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Exceptional = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_210e1d8ab_Directive>> _field_Directives = jule::Slice<jule::Ptr<_210e1d8ab_Directive>>();
	jule::Ptr<_210e623c2_ScopeTree> _field_Scope = jule::Ptr<_210e623c2_ScopeTree>();
	jule::Slice<jule::Ptr<_210e5e688_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_210e5e688_GenericDecl>>();
	jule::Ptr<_21101d082_RetType> _field_Result = jule::Ptr<_21101d082_RetType>();
	jule::Slice<jule::Ptr<_21101d747_Param>> _field_Params = jule::Slice<jule::Ptr<_21101d747_Param>>();
	jule::Ptr<_210e427d1_Struct> _field_Owner = jule::Ptr<_210e427d1_Struct>();
	jule::Slice<jule::Ptr<_211022c35_FnIns>> _field_Instances = jule::Slice<jule::Ptr<_211022c35_FnIns>>();
	

	_211020084_Fn(void) = default;

	inline bool operator==(_211020084_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params &&
			this->_field_Owner == _other._field_Owner &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_211020084_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _211022240_Str(_211021d66_ParamIns*);
struct _211021d66_ParamIns {
	jule::Ptr<_21101d747_Param> _field_Decl = jule::Ptr<_21101d747_Param>();
	jule::Ptr<_211bb6455_TypeKind> _field_Kind = jule::Ptr<_211bb6455_TypeKind>();
	

	_211021d66_ParamIns(void) = default;

	inline bool operator==(_211021d66_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_211021d66_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _211023065_Str(_211022c35_FnIns*);
inline jule::Bool _211023373_Equals(jule::Ptr<_211022c35_FnIns>, jule::Ptr<_211bb6455_TypeKind>);
inline jule::Bool _2110237d5_EqualsFn(jule::Ptr<_211022c35_FnIns>, jule::Ptr<_211022c35_FnIns>&);
inline jule::Bool _211023ae3_equalsTrait(jule::Ptr<_211022c35_FnIns>, jule::Ptr<_211022c35_FnIns>&);
inline jule::Slice<jule::Ptr<_211bb6455_TypeKind>> _211023d57_Types(_211022c35_FnIns*);
inline jule::Bool _2110240bb_IsBuiltin(_211022c35_FnIns*);
inline jule::Bool _211024330_IsAnon(_211022c35_FnIns*);
inline jule::Bool _21102463d_Same(_211022c35_FnIns*, jule::Ptr<_211022c35_FnIns>);
inline jule::Str _21102494b_GetKindStr(_211022c35_FnIns*, jule::Bool);
struct _211022c35_FnIns {
	jule::Ptr<_210e6db2b_StructIns> _field_Owner = jule::Ptr<_210e6db2b_StructIns>();
	jule::Ptr<_211020084_Fn> _field_Decl = jule::Ptr<_211020084_Fn>();
	jule::Slice<jule::Ptr<_211bb4c28_InsGeneric>> _field_Generics = jule::Slice<jule::Ptr<_211bb4c28_InsGeneric>>();
	jule::Slice<jule::Ptr<_211021d66_ParamIns>> _field_Params = jule::Slice<jule::Ptr<_211021d66_ParamIns>>();
	jule::Ptr<_211bb6455_TypeKind> _field_Result = jule::Ptr<_211bb6455_TypeKind>();
	jule::Ptr<_211b0940e_Scope> _field_Scope = jule::Ptr<_211b0940e_Scope>();
	jule::Ptr<_211025b06_ReferenceStack> _field_Refers = jule::Ptr<_211025b06_ReferenceStack>();
	jule::Bool _field_Anon = jule::Bool();
	jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)> _field_caller = jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	

	_211022c35_FnIns(void) = default;

	inline bool operator==(_211022c35_FnIns _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Params == _other._field_Params &&
			this->_field_Result == _other._field_Result &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Anon == _other._field_Anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_211022c35_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_211025b06_ReferenceStack> static__211025de2_new(void);
inline jule::I64 _211026277_Len(_211025b06_ReferenceStack*);
inline jule::Any _211026585_At(_211025b06_ReferenceStack*, jule::I64);
inline void _21102680a_Push(_211025b06_ReferenceStack*, jule::Any);
inline jule::Bool _2244e4e19_Exist(_211025b06_ReferenceStack*, jule::Ptr<_211022c35_FnIns>);
inline jule::Bool _224509c86_Exist(_211025b06_ReferenceStack*, jule::Ptr<_211b43228_Var>);
inline jule::Bool _22459ea51_Exist(_211025b06_ReferenceStack*, jule::Ptr<_210e6db2b_StructIns>);
inline jule::Bool _212d01506_Exist(_211025b06_ReferenceStack*, jule::Ptr<_211031e42_Trait>);
struct _211025b06_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();
	

	_211025b06_ReferenceStack(void) = default;

	inline bool operator==(_211025b06_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_211025b06_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _211026ec0_Pass {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Text = jule::Str();
	

	_211026ec0_Pass(void) = default;

	inline bool operator==(_211026ec0_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_211026ec0_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21102b469_symbolBuilder> _21102b920_getRoot(jule::Ptr<_21102b469_symbolBuilder>);
inline void _21102bcd8_pushErr(_21102b469_symbolBuilder*, jule::Ptr<_20e7ddc0b_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _21102c1a1_pushErrText(_21102b469_symbolBuilder*, jule::Ptr<_20e7ddc0b_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _21102c4c0_pushSuggestion(_21102b469_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _21102c877_checkCppUseDeclPath(_21102b469_symbolBuilder*, jule::Ptr<_210e69ae4_UseDecl>&, jule::Str);
inline jule::Ptr<_211b1c378_ImportInfo> _21102cb52_buildCppHeaderImport(_21102b469_symbolBuilder*, jule::Ptr<_210e69ae4_UseDecl>&);
inline jule::Ptr<_211b1c378_ImportInfo> _21102ce60_buildStdImport(_21102b469_symbolBuilder*, jule::Ptr<_210e69ae4_UseDecl>&);
inline jule::Ptr<_211b1c378_ImportInfo> _21102d26d_buildIdentImport(jule::Ptr<_21102b469_symbolBuilder>, jule::Ptr<_210e69ae4_UseDecl>&);
inline jule::Ptr<_211b1c378_ImportInfo> _21102d57b_buildImport(jule::Ptr<_21102b469_symbolBuilder>, jule::Ptr<_210e69ae4_UseDecl>&);
inline jule::Bool _21102d889_checkDuplicateUseDecl(_21102b469_symbolBuilder*, jule::Ptr<_211b1c378_ImportInfo>&);
inline void _21102dba8_implImportSelections(_21102b469_symbolBuilder*, jule::Ptr<_211b1c378_ImportInfo>&, jule::Ptr<_210e69ae4_UseDecl>&);
inline jule::Str _21102deb6_getAsLinkPath(jule::Ptr<_21102b469_symbolBuilder>, jule::Str);
inline void _21102e37e_pushCycleError(jule::Ptr<_21102b469_symbolBuilder>, jule::Ptr<_21102b469_symbolBuilder>&, jule::Str, jule::Str&);
inline void _21102e747_pushCrossCycleError(jule::Ptr<_21102b469_symbolBuilder>, jule::Ptr<_21102b469_symbolBuilder>&, jule::Ptr<_211b1c378_ImportInfo>&, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Bool _21102eaee_checkImportCycles(jule::Ptr<_21102b469_symbolBuilder>, jule::Ptr<_211b1c378_ImportInfo>, jule::Ptr<_210e69ae4_UseDecl>&);
inline void _21102eed9_checkPackageAccessibility(_21102b469_symbolBuilder*, jule::Ptr<_210e69ae4_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _2110303a2_importPackage(jule::Ptr<_21102b469_symbolBuilder>, jule::Ptr<_211b1c378_ImportInfo>&, jule::Ptr<_210e69ae4_UseDecl>&);
inline jule::Ptr<_211b1c378_ImportInfo> _2110306b0_importUseDecl(jule::Ptr<_21102b469_symbolBuilder>, jule::Ptr<_210e69ae4_UseDecl>&);
inline void _21103088b_importUseDecls(jule::Ptr<_21102b469_symbolBuilder>);
inline void _211030b11_appendNode(_21102b469_symbolBuilder*, _210e1d4b0_Node&);
inline void _211030cdc_appendNodes(_21102b469_symbolBuilder*);
inline void _211031062_pushDirectivePass(_21102b469_symbolBuilder*, jule::Ptr<_210e1d8ab_Directive>&);
inline void _21103123d_appendTopDirectives(_21102b469_symbolBuilder*);
inline void _211031419_build(jule::Ptr<_21102b469_symbolBuilder>);
struct _21102b469_symbolBuilder {
	jule::Ptr<_21102b469_symbolBuilder> _field_owner = jule::Ptr<_21102b469_symbolBuilder>();
	jule::Trait<_211b1970a_Importer> _field_importer = jule::Trait<_211b1970a_Importer>();
	jule::Slice<_20e4ba377_Log> _field_errors = jule::Slice<_20e4ba377_Log>();
	jule::Ptr<_210e1c811_Ast> _field_ast = jule::Ptr<_210e1c811_Ast>();
	jule::Ptr<_211b855ab_SymbolTable> _field_table = jule::Ptr<_211b855ab_SymbolTable>();
	

	_21102b469_symbolBuilder(void) = default;

	inline bool operator==(_21102b469_symbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_21102b469_symbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _21103233d_Str(_211031e42_Trait*);
inline jule::Bool _21103264b_Equals(jule::Ptr<_211031e42_Trait>, jule::Ptr<_211bb6455_TypeKind>);
inline jule::Bool _2110329ae_IsBuiltin(_211031e42_Trait*);
inline jule::Ptr<_211020084_Fn> _211032cbc_FindMethod(_211031e42_Trait*, jule::Str);
struct _211031e42_Trait {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Slice<jule::Ptr<_211020084_Fn>> _field_Methods = jule::Slice<jule::Ptr<_211020084_Fn>>();
	jule::Slice<jule::Ptr<_210e427d1_Struct>> _field_Implemented = jule::Slice<jule::Ptr<_210e427d1_Struct>>();
	

	_211031e42_Trait(void) = default;

	inline bool operator==(_211031e42_Trait _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Implemented == _other._field_Implemented;
	}

	inline bool operator!=(_211031e42_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _21103397c_AutoExpr(_211033592_EnumItem*);
struct _211033592_EnumItem {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_211b8b392_Value> _field_Value = jule::Ptr<_211b8b392_Value>();
	

	_211033592_EnumItem(void) = default;

	inline bool operator==(_211033592_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_211033592_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _2110343ea_Str(_211034087_Enum*);
inline jule::Bool _211034708_Equals(jule::Ptr<_211034087_Enum>, jule::Ptr<_211bb6455_TypeKind>);
inline jule::Ptr<_211033592_EnumItem> _211034b48_FindItem(_211034087_Enum*, jule::Str);
struct _211034087_Enum {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_211bba5ad_TypeSymbol> _field_Kind = jule::Ptr<_211bba5ad_TypeSymbol>();
	jule::Slice<jule::Ptr<_211033592_EnumItem>> _field_Items = jule::Slice<jule::Ptr<_211033592_EnumItem>>();
	

	_211034087_Enum(void) = default;

	inline bool operator==(_211034087_Enum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_211034087_Enum _other) { return !this->operator==(_other); }


};
struct _2110350bb_TypeEnumItem {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_211bba5ad_TypeSymbol> _field_Kind = jule::Ptr<_211bba5ad_TypeSymbol>();
	

	_2110350bb_TypeEnumItem(void) = default;

	inline bool operator==(_2110350bb_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2110350bb_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _2110359b2_Str(_211035682_TypeEnum*);
inline jule::Bool _211035cc0_Equals(jule::Ptr<_211035682_TypeEnum>, jule::Ptr<_211bb6455_TypeKind>);
inline jule::Ptr<_2110350bb_TypeEnumItem> _2110361bb_FindItem(_211035682_TypeEnum*, jule::Str);
struct _211035682_TypeEnum {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_2110350bb_TypeEnumItem>> _field_Items = jule::Slice<jule::Ptr<_2110350bb_TypeEnumItem>>();
	

	_211035682_TypeEnum(void) = default;

	inline bool operator==(_211035682_TypeEnum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_211035682_TypeEnum _other) { return !this->operator==(_other); }


};
inline jule::Fn<jule::Bool(jule::Ptr<_211b254c4_Sema>&,jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>&)> _21105d699_readyFn(jule::Ptr<_21104d27c_constraintChecker>);
inline jule::Bool _2110756d3_readyFi(jule::Ptr<_21104d27c_constraintChecker>);
inline jule::Bool _21109007c_readySi(jule::Ptr<_21104d27c_constraintChecker>);
inline jule::Bool _211091dc5_ready(jule::Ptr<_21104d27c_constraintChecker>);
inline jule::Bool _2110930b3_check(jule::Ptr<_21104d27c_constraintChecker>);
struct _21104d27c_constraintChecker {
	jule::Ptr<_211b254c4_Sema> _field_s = jule::Ptr<_211b254c4_Sema>();
	jule::Slice<jule::Ptr<_210e5e688_GenericDecl>> _field_genericsD = jule::Slice<jule::Ptr<_210e5e688_GenericDecl>>();
	jule::Slice<jule::Ptr<_211bb4c28_InsGeneric>> _field_generics = jule::Slice<jule::Ptr<_211bb4c28_InsGeneric>>();
	jule::Slice<jule::Ptr<_211bb5762_TypeAlias>> _field_genericsA = jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>();
	jule::Ptr<_211022c35_FnIns> _field_fi = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_210e6db2b_StructIns> _field_si = jule::Ptr<_210e6db2b_StructIns>();
	jule::Ptr<_20e7ddc0b_Token> _field_et = jule::Ptr<_20e7ddc0b_Token>();
	jule::Bool _field_uniq = jule::Bool();
	

	_21104d27c_constraintChecker(void) = default;

	inline bool operator==(_21104d27c_constraintChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_genericsD == _other._field_genericsD &&
			this->_field_generics == _other._field_generics &&
			this->_field_genericsA == _other._field_genericsA &&
			this->_field_fi == _other._field_fi &&
			this->_field_si == _other._field_si &&
			this->_field_et == _other._field_et &&
			this->_field_uniq == _other._field_uniq;
	}

	inline bool operator!=(_21104d27c_constraintChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _2110965e4_IsTraitImpl(_2110b6658_Impl*);
inline jule::Bool _211096d42_IsStructImpl(_2110b6658_Impl*);
struct _2110b6658_Impl {
	jule::Ptr<_210e520a4_TypeDecl> _field_Base = jule::Ptr<_210e520a4_TypeDecl>();
	jule::Ptr<_210e520a4_TypeDecl> _field_Dest = jule::Ptr<_210e520a4_TypeDecl>();
	jule::Slice<jule::Ptr<_211020084_Fn>> _field_Methods = jule::Slice<jule::Ptr<_211020084_Fn>>();
	jule::Slice<jule::Ptr<_211b43228_Var>> _field_Statics = jule::Slice<jule::Ptr<_211b43228_Var>>();
	

	_2110b6658_Impl(void) = default;

	inline bool operator==(_2110b6658_Impl _other) {
		return 
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_2110b6658_Impl _other) { return !this->operator==(_other); }


};
struct _211b0940e_Scope {
	jule::Ptr<_211b0940e_Scope> _field_Parent = jule::Ptr<_211b0940e_Scope>();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Deferred = jule::Bool();
	jule::Slice<jule::Any> _field_Stmts = jule::Slice<jule::Any>();
	

	_211b0940e_Scope(void) = default;

	inline bool operator==(_211b0940e_Scope _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts;
	}

	inline bool operator!=(_211b0940e_Scope _other) { return !this->operator==(_other); }


};
struct _211b095eb_If {
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_211b0940e_Scope> _field_Scope = jule::Ptr<_211b0940e_Scope>();
	

	_211b095eb_If(void) = default;

	inline bool operator==(_211b095eb_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_211b095eb_If _other) { return !this->operator==(_other); }


};
struct _211b097d8_Else {
	jule::Ptr<_211b0940e_Scope> _field_Scope = jule::Ptr<_211b0940e_Scope>();
	

	_211b097d8_Else(void) = default;

	inline bool operator==(_211b097d8_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_211b097d8_Else _other) { return !this->operator==(_other); }


};
struct _211b099c5_Conditional {
	jule::Slice<jule::Ptr<_211b095eb_If>> _field_Elifs = jule::Slice<jule::Ptr<_211b095eb_If>>();
	jule::Ptr<_211b097d8_Else> _field_Default = jule::Ptr<_211b097d8_Else>();
	

	_211b099c5_Conditional(void) = default;

	inline bool operator==(_211b099c5_Conditional _other) {
		return 
			this->_field_Elifs == _other._field_Elifs &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_211b099c5_Conditional _other) { return !this->operator==(_other); }


};
struct _211b09bb2_InfIter {
	jule::Ptr<_211b0940e_Scope> _field_Scope = jule::Ptr<_211b0940e_Scope>();
	

	_211b09bb2_InfIter(void) = default;

	inline bool operator==(_211b09bb2_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_211b09bb2_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _2110b6845_IsWhileNext(_211b09d9e_WhileIter*);
struct _211b09d9e_WhileIter {
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Next = jule::Any();
	jule::Ptr<_211b0940e_Scope> _field_Scope = jule::Ptr<_211b0940e_Scope>();
	

	_211b09d9e_WhileIter(void) = default;

	inline bool operator==(_211b09d9e_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_211b09d9e_WhileIter _other) { return !this->operator==(_other); }


};
struct _211b0a08b_RangeIter {
	jule::Ptr<_211b8a319_Data> _field_Expr = jule::Ptr<_211b8a319_Data>();
	jule::Ptr<_211b0940e_Scope> _field_Scope = jule::Ptr<_211b0940e_Scope>();
	jule::Ptr<_211b43228_Var> _field_KeyA = jule::Ptr<_211b43228_Var>();
	jule::Ptr<_211b43228_Var> _field_KeyB = jule::Ptr<_211b43228_Var>();
	

	_211b0a08b_RangeIter(void) = default;

	inline bool operator==(_211b0a08b_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_211b0a08b_RangeIter _other) { return !this->operator==(_other); }


};
struct _211b0a278_ContSt {
	jule::Uintptr _field_It = jule::Uintptr();
	

	_211b0a278_ContSt(void) = default;

	inline bool operator==(_211b0a278_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_211b0a278_ContSt _other) { return !this->operator==(_other); }


};
struct _211b0a465_BreakSt {
	jule::Uintptr _field_It = jule::Uintptr();
	jule::Uintptr _field_Mtch = jule::Uintptr();
	

	_211b0a465_BreakSt(void) = default;

	inline bool operator==(_211b0a465_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_211b0a465_BreakSt _other) { return !this->operator==(_other); }


};
struct _211b0a652_Label {
	jule::Str _field_Ident = jule::Str();
	

	_211b0a652_Label(void) = default;

	inline bool operator==(_211b0a652_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_211b0a652_Label _other) { return !this->operator==(_other); }


};
struct _211b0a83e_GotoSt {
	jule::Str _field_Ident = jule::Str();
	

	_211b0a83e_GotoSt(void) = default;

	inline bool operator==(_211b0a83e_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_211b0a83e_GotoSt _other) { return !this->operator==(_other); }


};
struct _211b0aa2b_Postfix {
	jule::Any _field_Expr = jule::Any();
	jule::Str _field_Op = jule::Str();
	

	_211b0aa2b_Postfix(void) = default;

	inline bool operator==(_211b0aa2b_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_211b0aa2b_Postfix _other) { return !this->operator==(_other); }


};
struct _211b0ac18_Assign {
	jule::Ptr<_211017a4e_OperandExprModel> _field_L = jule::Ptr<_211017a4e_OperandExprModel>();
	jule::Ptr<_211017a4e_OperandExprModel> _field_R = jule::Ptr<_211017a4e_OperandExprModel>();
	jule::Ptr<_20e7ddc0b_Token> _field_Op = jule::Ptr<_20e7ddc0b_Token>();
	

	_211b0ac18_Assign(void) = default;

	inline bool operator==(_211b0ac18_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_211b0ac18_Assign _other) { return !this->operator==(_other); }


};
struct _211b0ae05_MultiAssign {
	jule::Slice<jule::Any> _field_L = jule::Slice<jule::Any>();
	jule::Any _field_R = jule::Any();
	

	_211b0ae05_MultiAssign(void) = default;

	inline bool operator==(_211b0ae05_MultiAssign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R;
	}

	inline bool operator!=(_211b0ae05_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _211b0b510_IsGenericTypeMatch(_211b0b0e2_Match*);
struct _211b0b0e2_Match {
	jule::Ptr<_211b8a319_Data> _field_Expr = jule::Ptr<_211b8a319_Data>();
	jule::Bool _field_TypeMatch = jule::Bool();
	jule::Slice<jule::Ptr<_211b0b642_Case>> _field_Cases = jule::Slice<jule::Ptr<_211b0b642_Case>>();
	jule::Ptr<_211b0b642_Case> _field_Default = jule::Ptr<_211b0b642_Case>();
	

	_211b0b0e2_Match(void) = default;

	inline bool operator==(_211b0b0e2_Match _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_211b0b0e2_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _211b0b82e_isDefault(_211b0b642_Case*);
struct _211b0b642_Case {
	jule::Ptr<_211b0b0e2_Match> _field_Owner = jule::Ptr<_211b0b0e2_Match>();
	jule::Ptr<_211b0940e_Scope> _field_Scope = jule::Ptr<_211b0940e_Scope>();
	jule::Slice<jule::Ptr<_211b8a319_Data>> _field_Exprs = jule::Slice<jule::Ptr<_211b8a319_Data>>();
	jule::Ptr<_211b0b642_Case> _field_Next = jule::Ptr<_211b0b642_Case>();
	

	_211b0b642_Case(void) = default;

	inline bool operator==(_211b0b642_Case _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs &&
			this->_field_Next == _other._field_Next;
	}

	inline bool operator!=(_211b0b642_Case _other) { return !this->operator==(_other); }


};
struct _211b0b961_FallSt {
	jule::Uintptr _field_DestCase = jule::Uintptr();
	

	_211b0b961_FallSt(void) = default;

	inline bool operator==(_211b0b961_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_211b0b961_FallSt _other) { return !this->operator==(_other); }


};
struct _211b0bb4d_RetSt {
	jule::Ptr<_211022c35_FnIns> _field_Func = jule::Ptr<_211022c35_FnIns>();
	jule::Slice<jule::Ptr<_211b43228_Var>> _field_Vars = jule::Slice<jule::Ptr<_211b43228_Var>>();
	jule::Any _field_Expr = jule::Any();
	

	_211b0bb4d_RetSt(void) = default;

	inline bool operator==(_211b0bb4d_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_211b0bb4d_RetSt _other) { return !this->operator==(_other); }


};
struct _211b0bd3a_scopeLabel {
	jule::Ptr<_20e7ddc0b_Token> _field_token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_211b0a652_Label> _field_label = jule::Ptr<_211b0a652_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_211b0c214_scopeChecker> _field_scope = jule::Ptr<_211b0c214_scopeChecker>();
	jule::Bool _field_used = jule::Bool();
	

	_211b0bd3a_scopeLabel(void) = default;

	inline bool operator==(_211b0bd3a_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_211b0bd3a_scopeLabel _other) { return !this->operator==(_other); }


};
struct _211b0c027_scopeGoto {
	jule::Ptr<_210e5ede7_GotoSt> _field_gt = jule::Ptr<_210e5ede7_GotoSt>();
	jule::Ptr<_211b0c214_scopeChecker> _field_scope = jule::Ptr<_211b0c214_scopeChecker>();
	jule::I64 _field_pos = jule::I64();
	

	_211b0c027_scopeGoto(void) = default;

	inline bool operator==(_211b0c027_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_211b0c027_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_211b1c378_ImportInfo> _211b0c401_FindPackage(_211b0c214_scopeChecker*, jule::Str);
inline jule::Ptr<_211b1c378_ImportInfo> _211b0c533_SelectPackage(_211b0c214_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_211b1c378_ImportInfo>)>);
inline jule::Ptr<_211b43228_Var> _211b0c665_FindVar(_211b0c214_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_211bb5762_TypeAlias> _211b0c797_FindTypeAlias(_211b0c214_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_210e427d1_Struct> _211b0c8c9_FindStruct(_211b0c214_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_211020084_Fn> _211b0ca0b_FindFn(_211b0c214_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_211031e42_Trait> _211b0cb3d_FindTrait(_211b0c214_scopeChecker*, jule::Str);
inline jule::Ptr<_211034087_Enum> _211b0cc70_FindEnum(_211b0c214_scopeChecker*, jule::Str);
inline jule::Ptr<_211035682_TypeEnum> _211b0cda2_FindTypeEnum(_211b0c214_scopeChecker*, jule::Str);
inline jule::Bool _211b0ced4_isUnsafe(jule::Ptr<_211b0c214_scopeChecker>);
inline jule::Bool _211b0d116_isRoot(_211b0c214_scopeChecker*);
inline void _211b0d248_stop(_211b0c214_scopeChecker*);
inline jule::Bool _211b0d37a_stopped(_211b0c214_scopeChecker*);
inline jule::Bool _211b0d4ac_isDeferred(jule::Ptr<_211b0c214_scopeChecker>);
inline jule::Ptr<_211b0c214_scopeChecker> _211b0d5de_getRoot(jule::Ptr<_211b0c214_scopeChecker>);
inline jule::Ptr<_211b0c214_scopeChecker> _211b0d721_getHardRoot(jule::Ptr<_211b0c214_scopeChecker>);
inline jule::Ptr<_211b0a652_Label> _211b0d853_findLabel(_211b0c214_scopeChecker*, jule::Str);
inline jule::Ptr<_211b0bd3a_scopeLabel> _211b0d985_findLabelScope(jule::Ptr<_211b0c214_scopeChecker>, jule::Str);
inline jule::Ptr<_211b0bd3a_scopeLabel> _211b0dab7_findLabelAll(_211b0c214_scopeChecker*, jule::Str);
inline jule::Bool _211b0dbe9_isDuplicatedIdent(_211b0c214_scopeChecker*, jule::Uintptr, jule::Str);
inline void _211b0dd2b_checkVarDecl(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e64d97_VarDecl>);
inline void _211b0de5d_checkTypeAliasDecl(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e68708_TypeAliasDecl>);
inline jule::Ptr<_211b0940e_Scope> _211b0e090_getChild(_211b0c214_scopeChecker*);
inline void _211b0e1c2_checkChildSsc(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e623c2_ScopeTree>&, jule::Ptr<_211b0940e_Scope>&, jule::Ptr<_211b0c214_scopeChecker>&);
inline jule::Ptr<_211b0940e_Scope> _211b0e304_checkChildSc(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e623c2_ScopeTree>&, jule::Ptr<_211b0c214_scopeChecker>&);
inline jule::Ptr<_211b0940e_Scope> _211b0e436_checkChild(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e623c2_ScopeTree>&);
inline void _211b0e568_checkAnonScope(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e623c2_ScopeTree>);
inline void _211b0e69a_processErrorCall(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_21101ba20_BuiltinErrorCallExprModel>&, jule::Ptr<_20e7ddc0b_Token>);
inline void _211b0e7cc_checkExpr(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e565c5_Expr>);
inline void _211b0e90e_checkCoExpr(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e581ba_CoExpr>);
inline jule::Ptr<_211b095eb_If> _211b0ea41_checkIf(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e67707_If>);
inline jule::Ptr<_211b097d8_Else> _211b0eb73_checkElse(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e67aae_Else>);
inline void _211b0eca5_checkConditional(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e68032_Conditional>);
inline void _211b0edd7_checkIterScopeSsc(jule::Ptr<_211b0c214_scopeChecker>, jule::Uintptr, jule::Ptr<_210e623c2_ScopeTree>, jule::Ptr<_211b0940e_Scope>&, jule::Ptr<_211b0c214_scopeChecker>);
inline jule::Ptr<_211b0940e_Scope> _211b10019_checkIterScopeSc(jule::Ptr<_211b0c214_scopeChecker>, jule::Uintptr, jule::Ptr<_210e623c2_ScopeTree>, jule::Ptr<_211b0c214_scopeChecker>);
inline jule::Ptr<_211b0940e_Scope> _211b1014b_checkIterScope(jule::Ptr<_211b0c214_scopeChecker>, jule::Uintptr, jule::Ptr<_210e623c2_ScopeTree>&);
inline void _211b1027d_checkInfIter(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e658ae_Iter>&);
inline void _211b103b0_checkWhileIter(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e658ae_Iter>&);
inline void _211b104e2_checkRangeIter(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e658ae_Iter>&);
inline void _211b10624_checkIter(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e658ae_Iter>);
inline jule::Bool _211b10756_checkValidContLabel(jule::Ptr<_211b0c214_scopeChecker>, jule::Uintptr);
inline jule::Bool _211b10888_checkValidBreakLabel(jule::Ptr<_211b0c214_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_211b0a278_ContSt> _211b109ba_checkContValidScope(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e67284_ContSt>);
inline void _211b10aec_checkCont(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e67284_ContSt>);
inline void _211b10c2e_checkLabel(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e5ea40_LabelSt>);
inline void _211b10d61_pushGoto(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e5ede7_GotoSt>);
inline void _211b10e93_checkPostfix(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e60d2c_AssignSt>);
inline jule::Bool _211b110c5_isNewAssignIdent(_211b0c214_scopeChecker*, jule::Str);
inline jule::Bool _211b11207_checkStructureAssignOp(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e6db2b_StructIns>&, jule::Ptr<_210e60d2c_AssignSt>&, jule::Ptr<_211b8a319_Data>&);
inline void _211b11339_checkSingleAssign(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e60d2c_AssignSt>&);
inline void _211b1146b_processEndPartOfMultiAssign(_211b0c214_scopeChecker*, jule::Ptr<_211b0ae05_MultiAssign>, jule::Ptr<_210e60d2c_AssignSt>, jule::Ptr<_210e607dd_AssignLeft>, jule::Ptr<_211b8a319_Data>, jule::Ptr<_211b8a319_Data>);
inline void _211b1159d_checkRetMultiAssign(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e60d2c_AssignSt>&);
inline void _211b116d0_checkMultiAssign(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e60d2c_AssignSt>&);
inline void _211b11812_checkAssignSt(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e60d2c_AssignSt>);
inline jule::Ptr<_211b0940e_Scope> _211b11944_checkCaseScope(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_211b0b642_Case>&, jule::Ptr<_210e623c2_ScopeTree>&);
inline jule::Ptr<_211b0b642_Case> _211b11a76_checkCase(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_211b0b0e2_Match>, jule::I64, jule::Ptr<_210e68b7b_Case>, jule::Ptr<_211b8a319_Data>);
inline void _211b11c30_checkCases(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e69352_MatchCase>&, jule::Ptr<_211b0b0e2_Match>, jule::Ptr<_211b8a319_Data>);
inline jule::Ptr<_211b0b642_Case> _211b120d7_checkDefault(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_211b0b0e2_Match>, jule::Ptr<_210e67aae_Else>);
inline void _211b1235c_checkComptimePanic(_211b0c214_scopeChecker*, jule::Ptr<_211b0940e_Scope>&);
inline void _211b1267b_pushTypeMatch(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_211b0b0e2_Match>, jule::Ptr<_210e69352_MatchCase>&);
inline void _211b12901_checkTypeMatch(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e69352_MatchCase>&);
inline void _211b12b76_checkCommonMatch(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e69352_MatchCase>&);
inline void _211b12deb_checkMatch(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e69352_MatchCase>);
inline void _211b13171_checkFall(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e601d3_FallSt>);
inline jule::Ptr<_211b0a465_BreakSt> _211b1347e_checkBreakWithLabel(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e66dcc_BreakSt>);
inline jule::Ptr<_211b0a465_BreakSt> _211b1378c_checkPlainBreak(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e66dcc_BreakSt>);
inline void _211b13a12_checkBreak(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e66dcc_BreakSt>);
inline void _211b13c87_checkRet(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e6524e_RetSt>);
inline void _211b1400c_checkUseExpr(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e56e66_UseExpr>);
inline void _211b14282_checkNode(jule::Ptr<_211b0c214_scopeChecker>, jule::Any&);
inline void _211b1445d_checkResult(jule::Ptr<_211b0c214_scopeChecker>);
inline void _211b14639_checkTree(jule::Ptr<_211b0c214_scopeChecker>);
inline void _211b14958_checkGoto(_211b0c214_scopeChecker*, jule::Ptr<_211b0c027_scopeGoto>&, jule::Ptr<_211b0bd3a_scopeLabel>&);
inline void _211b14b34_checkGotos(_211b0c214_scopeChecker*);
inline void _211b14d10_checkLabels(_211b0c214_scopeChecker*);
inline void _211b14edb_checkVars(_211b0c214_scopeChecker*);
inline void _211b151b7_checkAliases(_211b0c214_scopeChecker*);
inline void _211b154d6_check(jule::Ptr<_211b0c214_scopeChecker>, jule::Ptr<_210e623c2_ScopeTree>&, jule::Ptr<_211b0940e_Scope>&);
inline jule::Ptr<_211b0c214_scopeChecker> _211b1574a_newChildChecker(jule::Ptr<_211b0c214_scopeChecker>);
struct _211b0c214_scopeChecker {
	jule::Ptr<_20e7ddc0b_Token> _field_calledFrom = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_211b254c4_Sema> _field_s = jule::Ptr<_211b254c4_Sema>();
	jule::Ptr<_211022c35_FnIns> _field_owner = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211b0c214_scopeChecker> _field_parent = jule::Ptr<_211b0c214_scopeChecker>();
	jule::I64 _field_childIndex = jule::I64();
	jule::Ptr<_211b855ab_SymbolTable> _field_table = jule::Ptr<_211b855ab_SymbolTable>();
	jule::Ptr<_211b0940e_Scope> _field_scope = jule::Ptr<_211b0940e_Scope>();
	jule::Ptr<_210e623c2_ScopeTree> _field_tree = jule::Ptr<_210e623c2_ScopeTree>();
	jule::Ptr<_211022c35_FnIns> _field_result = jule::Ptr<_211022c35_FnIns>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_211b0bd3a_scopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_211b0bd3a_scopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_211b0c027_scopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_211b0c027_scopeGoto>>>();
	jule::I64 _field_i = jule::I64();
	

	_211b0c214_scopeChecker(void) = default;

	inline bool operator==(_211b0c214_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_211b0c214_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _211b1673a_checkCdef(_211b162ea_directiveChecker*, jule::Ptr<_210e1d8ab_Directive>&);
inline void _211b169b0_checkTypedef(_211b162ea_directiveChecker*, jule::Ptr<_210e1d8ab_Directive>&);
inline void _211b16c35_checkDerive(_211b162ea_directiveChecker*, jule::Ptr<_210e1d8ab_Directive>&);
inline void _211b16eaa_checkNamespace(_211b162ea_directiveChecker*, jule::Ptr<_210e1d8ab_Directive>&);
inline void _211b17230_checkDeprecated(_211b162ea_directiveChecker*, jule::Ptr<_210e1d8ab_Directive>&);
inline void _211b174a5_checkTest(_211b162ea_directiveChecker*, jule::Ptr<_210e1d8ab_Directive>&);
inline void _211b1772a_checkDirective(_211b162ea_directiveChecker*, jule::Ptr<_210e1d8ab_Directive>&);
inline void _211b17906_check(_211b162ea_directiveChecker*);
struct _211b162ea_directiveChecker {
	jule::Ptr<_211b254c4_Sema> _field_s = jule::Ptr<_211b254c4_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_210e1d8ab_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_210e1d8ab_Directive>>>();
	jule::Any _field_o = jule::Any();
	

	_211b162ea_directiveChecker(void) = default;

	inline bool operator==(_211b162ea_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_211b162ea_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_211b1c378_ImportInfo> _211b1c895_FindPackage(_211b1c378_ImportInfo*, jule::Str);
inline jule::Ptr<_211b1c378_ImportInfo> _211b1cba3_SelectPackage(_211b1c378_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_211b1c378_ImportInfo>)>);
inline jule::Ptr<_211b43228_Var> _211b1d05a_FindVar(_211b1c378_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_211bb5762_TypeAlias> _211b1d412_FindTypeAlias(_211b1c378_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_210e427d1_Struct> _211b1d7b9_FindStruct(_211b1c378_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_211020084_Fn> _211b1db71_FindFn(_211b1c378_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_211031e42_Trait> _211b1de7e_FindTrait(_211b1c378_ImportInfo*, jule::Str);
inline jule::Ptr<_211034087_Enum> _211b1e28c_FindEnum(_211b1c378_ImportInfo*, jule::Str);
inline jule::Ptr<_211035682_TypeEnum> _211b1e59a_FindTypeEnum(_211b1c378_ImportInfo*, jule::Str);
inline jule::Bool _211b1e941_isLookupable(_211b1c378_ImportInfo*, jule::Str);
inline jule::Bool _211b1ec4e_existIdent(_211b1c378_ImportInfo*, jule::Str);
inline jule::Bool _211b1eed5_isAccessibleViaSelection(_211b1c378_ImportInfo*);
struct _211b1c378_ImportInfo {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Path = jule::Str();
	jule::Str _field_LinkPath = jule::Str();
	jule::Str _field_Ident = jule::Str();
	jule::Str _field_Alias = jule::Str();
	jule::Bool _field_Duplicate = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Std = jule::Bool();
	jule::Bool _field_ImportAll = jule::Bool();
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _field_Selected = jule::Slice<jule::Ptr<_20e7ddc0b_Token>>();
	jule::Ptr<_211b202d2_Package> _field_Package = jule::Ptr<_211b202d2_Package>();
	jule::I64 _field_ModId = jule::I64();
	

	_211b1c378_ImportInfo(void) = default;

	inline bool operator==(_211b1c378_ImportInfo _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Path == _other._field_Path &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Duplicate == _other._field_Duplicate &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std &&
			this->_field_ImportAll == _other._field_ImportAll &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_Package == _other._field_Package &&
			this->_field_ModId == _other._field_ModId;
	}

	inline bool operator!=(_211b1c378_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_211b1c378_ImportInfo> _211b207aa_FindPackage(_211b202d2_Package*, jule::Str);
inline jule::Ptr<_211b1c378_ImportInfo> _211b20ab8_SelectPackage(_211b202d2_Package*, jule::Fn<jule::Bool(jule::Ptr<_211b1c378_ImportInfo>)>);
inline jule::Ptr<_211b43228_Var> _211b20e70_FindVar(_211b202d2_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_211bb5762_TypeAlias> _211b21327_FindTypeAlias(_211b202d2_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_210e427d1_Struct> _211b216ce_FindStruct(_211b202d2_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_211020084_Fn> _211b21a86_FindFn(_211b202d2_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_211031e42_Trait> _211b21d94_FindTrait(_211b202d2_Package*, jule::Str);
inline jule::Ptr<_211034087_Enum> _211b221a2_FindEnum(_211b202d2_Package*, jule::Str);
inline jule::Ptr<_211035682_TypeEnum> _211b224b0_FindTypeEnum(_211b202d2_Package*, jule::Str);
struct _211b202d2_Package {
	jule::Slice<jule::Ptr<_211b855ab_SymbolTable>> _field_Files = jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>();
	

	_211b202d2_Package(void) = default;

	inline bool operator==(_211b202d2_Package _other) {
		return 
			this->_field_Files == _other._field_Files;
	}

	inline bool operator!=(_211b202d2_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_211b1c378_ImportInfo> _211b259e1_FindPackage(_211b254c4_Sema*, jule::Str);
inline jule::Ptr<_211b1c378_ImportInfo> _211b25cee_SelectPackage(_211b254c4_Sema*, jule::Fn<jule::Bool(jule::Ptr<_211b1c378_ImportInfo>)>);
inline jule::Ptr<_211b43228_Var> _211b261a6_FindVar(_211b254c4_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_211bb5762_TypeAlias> _211b2655d_FindTypeAlias(_211b254c4_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_210e427d1_Struct> _211b26915_FindStruct(_211b254c4_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_211020084_Fn> _211b26cbc_FindFn(_211b254c4_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_211031e42_Trait> _211b270ca_FindTrait(_211b254c4_Sema*, jule::Str);
inline jule::Ptr<_211034087_Enum> _211b273d8_FindEnum(_211b254c4_Sema*, jule::Str);
inline jule::Ptr<_211035682_TypeEnum> _211b276e6_FindTypeEnum(_211b254c4_Sema*, jule::Str);
inline jule::Bool _211b27a48_isFlag(_211b254c4_Sema*, jule::I64);
inline void _211b27cbd_setCurrentFile(_211b254c4_Sema*, jule::Ptr<_211b855ab_SymbolTable>);
inline void _211b28186_pushErr(_211b254c4_Sema*, jule::Ptr<_20e7ddc0b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _211b284a5_pushSugggestion(_211b254c4_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _211b2885c_isAccessibleDefine(_211b254c4_Sema*, jule::Bool, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Bool _211b28cad_isDuplicatedIdent(_211b254c4_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _211b290cc_checkDirectives(jule::Ptr<_211b254c4_Sema>, jule::Slice<jule::Ptr<_210e1d8ab_Directive>>&, jule::Any);
inline jule::Bool _211b2952d_checkGenericQuantity(_211b254c4_Sema*, jule::I64, jule::I64, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Bool _211b29907_isDuplicatedImportSelection(_211b254c4_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _211b29cc0_getImportDef(_211b254c4_Sema*, jule::Str, jule::Ptr<_211b1c378_ImportInfo>&);
inline jule::Bool _22414e9b9_checkImportSelection(_211b254c4_Sema*, jule::Ptr<_20e7ddc0b_Token>&, jule::Ptr<_211b43228_Var>&);
inline jule::Bool _224153c76_checkImportSelection(_211b254c4_Sema*, jule::Ptr<_20e7ddc0b_Token>&, jule::Ptr<_211bb5762_TypeAlias>&);
inline jule::Bool _224157ebc_checkImportSelection(_211b254c4_Sema*, jule::Ptr<_20e7ddc0b_Token>&, jule::Ptr<_210e427d1_Struct>&);
inline jule::Bool _22415c598_checkImportSelection(_211b254c4_Sema*, jule::Ptr<_20e7ddc0b_Token>&, jule::Ptr<_211031e42_Trait>&);
inline jule::Bool _2241617de_checkImportSelection(_211b254c4_Sema*, jule::Ptr<_20e7ddc0b_Token>&, jule::Ptr<_211034087_Enum>&);
inline jule::Bool _224165a35_checkImportSelection(_211b254c4_Sema*, jule::Ptr<_20e7ddc0b_Token>&, jule::Ptr<_211035682_TypeEnum>&);
inline jule::Bool _224169c7b_checkImportSelection(_211b254c4_Sema*, jule::Ptr<_20e7ddc0b_Token>&, jule::Ptr<_211020084_Fn>&);
inline jule::Bool _211b2a4a7_checkImportSelectedSelections(_211b254c4_Sema*, jule::Ptr<_211b1c378_ImportInfo>&);
inline jule::Bool _22416e4cd_checkImportsAllSelectionsFromCollection(_211b254c4_Sema*, jule::Slice<jule::Ptr<_211b43228_Var>>&, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Bool _22417037a_checkImportsAllSelectionsFromCollection(_211b254c4_Sema*, jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>&, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Bool _224173834_checkImportsAllSelectionsFromCollection(_211b254c4_Sema*, jule::Slice<jule::Ptr<_210e427d1_Struct>>&, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Bool _224177393_checkImportsAllSelectionsFromCollection(_211b254c4_Sema*, jule::Slice<jule::Ptr<_211020084_Fn>>&, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Bool _2241796e7_checkImportsAllSelectionsFromCollection(_211b254c4_Sema*, jule::Slice<jule::Ptr<_211031e42_Trait>>&, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Bool _22417c5da_checkImportsAllSelectionsFromCollection(_211b254c4_Sema*, jule::Slice<jule::Ptr<_211034087_Enum>>&, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Bool _2241804cd_checkImportsAllSelectionsFromCollection(_211b254c4_Sema*, jule::Slice<jule::Ptr<_211035682_TypeEnum>>&, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Bool _211b2abd3_checkImportAllSelections(_211b254c4_Sema*, jule::Ptr<_211b1c378_ImportInfo>&);
inline jule::Bool _211b2b002_checkImportSelections(_211b254c4_Sema*, jule::Ptr<_211b1c378_ImportInfo>&);
inline jule::Bool _211b2b310_isUseAliasDuplication(_211b254c4_Sema*, jule::Ptr<_211b1c378_ImportInfo>&);
inline jule::Bool _211b2b61d_checkImport(_211b254c4_Sema*, jule::Ptr<_211b1c378_ImportInfo>&);
inline void _211b2b7e9_checkImports(_211b254c4_Sema*);
inline void _211b2b9c5_implFileImpls(jule::Ptr<_211b254c4_Sema>);
inline void _211b2bba1_implImpls(jule::Ptr<_211b254c4_Sema>);
inline void _211b2bd7c_checkEnums(jule::Ptr<_211b254c4_Sema>);
inline _211bc4980_typeChecker _211b2c2cd_typeChecker(jule::Ptr<_211b254c4_Sema>, jule::Trait<_211bd2086_Lookup>, jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>, jule::Ptr<_211bc3b6b_referencer>);
inline jule::Ptr<_211bb6455_TypeKind> _211b2c7c8_buildTypeWithRefers(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e520a4_TypeDecl>&, jule::Trait<_211bd2086_Lookup>, jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>, jule::Ptr<_211bc3b6b_referencer>);
inline jule::Bool _211b2ccc3_checkTypeWithRefers(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211bba5ad_TypeSymbol>&, jule::Trait<_211bd2086_Lookup>, jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>, jule::Ptr<_211bc3b6b_referencer>);
inline jule::Ptr<_21104d27c_constraintChecker> _211b2d037_constraintChecker(jule::Ptr<_211b254c4_Sema>);
inline jule::Bool _211b2d3de_checkType(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211bba5ad_TypeSymbol>&, jule::Trait<_211bd2086_Lookup>);
inline jule::Ptr<_211bb6455_TypeKind> _211b2d840_buildTypeWithGenerics(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e520a4_TypeDecl>&, jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>, jule::Ptr<_211025b06_ReferenceStack>);
inline jule::Ptr<_211bb6455_TypeKind> _211b2db4d_buildType(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e520a4_TypeDecl>&);
inline jule::Ptr<_211bb6455_TypeKind> _211b2de5b_selectType(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e520a4_TypeDecl>&);
inline jule::Ptr<_211b8bd87_Eval> _211b2e3ac_evalpd(jule::Ptr<_211b254c4_Sema>, jule::Trait<_211bd2086_Lookup>, jule::Ptr<_211bb6455_TypeKind>, jule::Ptr<_211b43228_Var>);
inline jule::Ptr<_211b8bd87_Eval> _211b2e764_evalp(jule::Ptr<_211b254c4_Sema>, jule::Trait<_211bd2086_Lookup>, jule::Ptr<_211bb6455_TypeKind>);
inline jule::Ptr<_211b8bd87_Eval> _211b2ea72_eval(jule::Ptr<_211b254c4_Sema>, jule::Trait<_211bd2086_Lookup>);
inline jule::Bool _211b3006c_checkAssignType(jule::Ptr<_211b254c4_Sema>, jule::Bool, jule::Ptr<_211bb6455_TypeKind>&, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Bool _211b304bd_checkTypeCompatibility(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211bb6455_TypeKind>&, jule::Ptr<_211bb6455_TypeKind>&, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Ptr<_211bb6455_TypeKind> _211b30897_buildNonGenericTypeKind(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e520a4_TypeDecl>&, jule::Slice<jule::Ptr<_210e5e688_GenericDecl>>&);
inline void _211b30b50_buildFnNonGenericTypeKinds(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211022c35_FnIns>&);
inline jule::Ptr<_211022c35_FnIns> _211b30e6e_getTraitCheckFnKind(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211020084_Fn>&);
inline jule::Bool _211b313c0_checkConstraintsFn(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211022c35_FnIns>&, jule::Ptr<_20e7ddc0b_Token>&, jule::Ptr<_211022c35_FnIns>);
inline jule::Bool _211b31821_checkConstraintsStruct(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e6db2b_StructIns>&, jule::Ptr<_20e7ddc0b_Token>&, jule::Ptr<_210e6db2b_StructIns>);
inline jule::Bool _211b31bc8_fnEnvironment(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211022c35_FnIns>&, jule::Fn<jule::Bool(jule::Ptr<_211b254c4_Sema>&,jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>&)>);
inline void _211b31e4d_checkFnParamKind(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211021d66_ParamIns>&);
inline jule::Bool _211b3225b_reloadFnInsTypes(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211022c35_FnIns>);
inline jule::Bool _211b326ce_checkRefValidityForInitExpr(jule::Ptr<_211b254c4_Sema>, jule::Bool, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Bool _211b32ca6_checkValidityForInitExpr(jule::Ptr<_211b254c4_Sema>, jule::Bool, jule::Bool, jule::Ptr<_211bb6455_TypeKind>&, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Bool _211b3316e_checkTypeAliasDeclKind(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211bb5762_TypeAlias>&, jule::Trait<_211bd2086_Lookup>);
inline void _211b3348d_checkTypeAliasDecl(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211bb5762_TypeAlias>&, jule::Trait<_211bd2086_Lookup>);
inline void _211b33713_checkTypeAliasDeclDup(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211bb5762_TypeAlias>&);
inline jule::Bool _211b33977_checkTypeAliasDecls(jule::Ptr<_211b254c4_Sema>);
inline void _224224b7c_checkEnumItemsDup(_211b254c4_Sema*, jule::Slice<jule::Ptr<_211033592_EnumItem>>);
inline void _224230935_checkEnumItemsDup(_211b254c4_Sema*, jule::Slice<jule::Ptr<_2110350bb_TypeEnumItem>>);
inline void _211b33e72_checkEnumItemsStr(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211034087_Enum>&);
inline void _211b341e7_checkEnumItemsInt(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211034087_Enum>&);
inline void _211b3446c_checkEnumDecl(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211034087_Enum>&);
inline void _211b346e2_checkTypeEnumDecl(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211035682_TypeEnum>&);
inline jule::Bool _211b34956_checkEnumDecls(jule::Ptr<_211b254c4_Sema>);
inline jule::Bool _211b34bba_checkTypeEnumDecls(jule::Ptr<_211b254c4_Sema>);
inline jule::Bool _211b34ec8_checkDeclGenerics(_211b254c4_Sema*, jule::Slice<jule::Ptr<_210e5e688_GenericDecl>>&);
inline jule::Bool _211b352d6_checkFnDeclParamsDup(_211b254c4_Sema*, jule::Ptr<_211020084_Fn>&);
inline jule::Bool _211b355e4_checkFnDeclResultDup(_211b254c4_Sema*, jule::Ptr<_211020084_Fn>&);
inline void _211b35869_checkFnDeclPrototype(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211020084_Fn>&);
inline void _211b35ade_checkTraitDeclMethod(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211020084_Fn>&);
inline void _211b35d64_checkTraitDeclMethods(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211031e42_Trait>&);
inline void _211b360d9_checkTraitDecl(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211031e42_Trait>&);
inline jule::Bool _211b3634d_checkTraitDecls(jule::Ptr<_211b254c4_Sema>);
inline jule::Bool _211b36705_checkTraitImplMethods(_211b254c4_Sema*, jule::Ptr<_211031e42_Trait>&, jule::Ptr<_2110b6658_Impl>&);
inline jule::Bool _211b36aac_implToStruct(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e427d1_Struct>&, jule::Ptr<_2110b6658_Impl>&);
inline void _211b36d32_implTrait(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_2110b6658_Impl>&);
inline void _211b370a7_implStruct(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_2110b6658_Impl>&);
inline void _211b3732c_implImpl(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_2110b6658_Impl>&);
inline void _211b3764b_checkVarDecl(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211b43228_Var>&, jule::Trait<_211bd2086_Lookup>);
inline void _211b378c1_checkGlobalVarDecl(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211b43228_Var>&);
inline jule::Bool _211b37b35_checkGlobalDecls(jule::Ptr<_211b254c4_Sema>);
inline jule::Bool _211b37edc_checkStructTraitImpl(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e427d1_Struct>&, jule::Ptr<_211031e42_Trait>&);
inline jule::Bool _211b382ea_checkStructImpls(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e427d1_Struct>&);
inline jule::Bool _211b38608_checkStructFields(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e427d1_Struct>&);
inline void _211b3887d_checkStructDecl(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e427d1_Struct>&);
inline jule::Bool _211b38ae2_checkStructDecls(jule::Ptr<_211b254c4_Sema>);
inline void _211b38d67_checkFnDecl(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211020084_Fn>&);
inline jule::Bool _211b390cb_checkFnDecls(jule::Ptr<_211b254c4_Sema>);
inline void _211b39494_pushCycleError(_211b254c4_Sema*, jule::Ptr<_210e427d1_Struct>&, jule::Ptr<_210e427d1_Struct>&, jule::Str&);
inline jule::Bool _211b398e5_checkCrossCycle(_211b254c4_Sema*, jule::Ptr<_210e427d1_Struct>&, jule::Ptr<_210e427d1_Struct>&, jule::Str&);
inline jule::Bool _211b39d68_checkStructDeriveIllegalCycles(_211b254c4_Sema*, jule::Str, jule::Ptr<_210e427d1_Struct>&, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211b3a1a9_checkStructInsDeriveClone(_211b254c4_Sema*, jule::Ptr<_210e6db2b_StructIns>);
inline void _211b3a396_checkPackageDecls(jule::Ptr<_211b254c4_Sema>);
inline void _211b3a6d7_checkDataForTypeInference(_211b254c4_Sema*, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_20e7ddc0b_Token>&);
inline void _211b3a96d_checkVar(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211b43228_Var>&);
inline void _211b3ac8c_checkTypeVar(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211b43228_Var>&, jule::Trait<_211bd2086_Lookup>);
inline void _211b3ae68_checkGlobalTypes(jule::Ptr<_211b254c4_Sema>);
inline jule::Ptr<_211022c35_FnIns> _211b3b320_readyToCheckFn(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e6db2b_StructIns>&, jule::Ptr<_211020084_Fn>&);
inline void _211b3b63e_checkTypeMethod(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e6db2b_StructIns>&, jule::Ptr<_211020084_Fn>&);
inline jule::Ptr<_211022c35_FnIns> _211b3ba90_checkStructInsOp(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e6db2b_StructIns>&, jule::Ptr<_211020084_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>);
inline jule::Bool _211b3be47_checkStructEnv(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e6db2b_StructIns>&, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Bool _211b3c2ee_precheckStructIns(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e6db2b_StructIns>&, jule::Ptr<_20e7ddc0b_Token>);
inline void _211b3c574_checkStructIns(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e6db2b_StructIns>&);
inline void _211b3c7e9_checkTypeStruct(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e427d1_Struct>&);
inline void _211b3c9c5_checkStructTypes(jule::Ptr<_211b254c4_Sema>);
inline void _211b3cc6c_checkStructInsOperators(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e6db2b_StructIns>);
inline void _211b3d003_precheckStructType(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_210e427d1_Struct>&);
inline void _211b3d1ce_precheckStructTypes(jule::Ptr<_211b254c4_Sema>);
inline void _211b3d454_checkRets(_211b254c4_Sema*, jule::Ptr<_211022c35_FnIns>&);
inline void _211b3d773_checkFnInsSc(_211b254c4_Sema*, jule::Ptr<_211022c35_FnIns>&, jule::Ptr<_211b0c214_scopeChecker>&);
inline void _211b3da92_checkFnInsCaller(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211022c35_FnIns>&, jule::Ptr<_20e7ddc0b_Token>);
inline void _211b3dd17_checkFnIns(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211022c35_FnIns>&);
inline void _211b3e08c_checkTypeFn(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211020084_Fn>&);
inline void _211b3e312_checkTestFn(_211b254c4_Sema*, jule::Ptr<_211022c35_FnIns>&);
inline void _211b3e587_precheckTypeFn(jule::Ptr<_211b254c4_Sema>, jule::Ptr<_211020084_Fn>&);
inline void _211b3e763_precheckFnTypes(jule::Ptr<_211b254c4_Sema>);
inline void _211b3e93e_checkFnTypes(jule::Ptr<_211b254c4_Sema>);
inline void _211b3eb1a_checkPackageTypes(jule::Ptr<_211b254c4_Sema>);
inline void _211b3ece6_setFileSemaFields(jule::Ptr<_211b254c4_Sema>);
inline void _211b3eec2_setSemaFields(jule::Ptr<_211b254c4_Sema>);
inline void _211b40247_check(jule::Ptr<_211b254c4_Sema>, jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>&);
struct _211b254c4_Sema {
	jule::Slice<_20e4ba377_Log> _field_errors = jule::Slice<_20e4ba377_Log>();
	jule::Slice<jule::Ptr<_211b855ab_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>();
	jule::Ptr<_211b855ab_SymbolTable> _field_file = jule::Ptr<_211b855ab_SymbolTable>();
	jule::I64 _field_flags = 0LL;
	

	_211b254c4_Sema(void) = default;

	inline bool operator==(_211b254c4_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_211b254c4_Sema _other) { return !this->operator==(_other); }


};
inline _211b405ee_missingRetChecker static__211b409b7_new(void);
inline jule::Bool _211b40c92_checkConditional(_211b405ee_missingRetChecker*, jule::Ptr<_211b099c5_Conditional>);
inline jule::Bool _211b410a0_checkMatch(_211b405ee_missingRetChecker*, jule::Ptr<_211b0b0e2_Match>);
inline jule::Bool _211b413ad_checkInfIter(_211b405ee_missingRetChecker*, jule::Ptr<_211b09bb2_InfIter>);
inline jule::Bool _211b416bb_checkScope(_211b405ee_missingRetChecker*, jule::Ptr<_211b0940e_Scope>);
inline jule::Bool _211b419c9_check(_211b405ee_missingRetChecker*, jule::Ptr<_211b0940e_Scope>);
struct _211b405ee_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked = jule::Slice<jule::Uintptr>();
	jule::Bool _field_falled = jule::Bool();
	

	_211b405ee_missingRetChecker(void) = default;

	inline bool operator==(_211b405ee_missingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_211b405ee_missingRetChecker _other) { return !this->operator==(_other); }


};
struct _211b422b0_IterRelation {
	jule::Ptr<_211b43228_Var> _field_Range = jule::Ptr<_211b43228_Var>();
	

	_211b422b0_IterRelation(void) = default;

	inline bool operator==(_211b422b0_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_211b422b0_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _211b435d0_IsInitialized(_211b43228_Var*);
inline jule::Bool _211b43844_IsTypeInferred(_211b43228_Var*);
struct _211b43228_Var {
	jule::Ptr<_211b0940e_Scope> _field_Scope = jule::Ptr<_211b0940e_Scope>();
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Constant = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Used = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_211bba5ad_TypeSymbol> _field_Kind = jule::Ptr<_211bba5ad_TypeSymbol>();
	jule::Ptr<_211b8b392_Value> _field_Value = jule::Ptr<_211b8b392_Value>();
	jule::Ptr<_211025b06_ReferenceStack> _field_Refers = jule::Ptr<_211025b06_ReferenceStack>();
	jule::Slice<jule::Ptr<_210e1d8ab_Directive>> _field_Directives = jule::Slice<jule::Ptr<_210e1d8ab_Directive>>();
	jule::Ptr<_211b422b0_IterRelation> _field_IterRelation = jule::Ptr<_211b422b0_IterRelation>();
	jule::Slice<jule::Ptr<_211b43228_Var>> _field_Depends = jule::Slice<jule::Ptr<_211b43228_Var>>();
	

	_211b43228_Var(void) = default;

	inline bool operator==(_211b43228_Var _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Public == _other._field_Public &&
			this->_field_Used == _other._field_Used &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Value == _other._field_Value &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_IterRelation == _other._field_IterRelation &&
			this->_field_Depends == _other._field_Depends;
	}

	inline bool operator!=(_211b43228_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__211b443c2_Dispose(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b44669_Str(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b449aa_logical(jule::Ptr<_211020084_Fn>&, jule::Str);
inline jule::Bool static__211b44c52_Eq(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b44ee9_Gt(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b45291_GtEq(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b45538_Lt(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b457d0_LtEq(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b45b21_result(jule::Ptr<_211020084_Fn>&, jule::Str);
inline jule::Bool static__211b45db8_Shl(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b46160_Shr(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b46407_Add(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b4669e_Sub(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b46946_Div(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b46bdd_Mul(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b46e85_Mod(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b4722c_BitAnd(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b474c4_BitOr(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b4776b_BitXor(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b47aac_unary(jule::Ptr<_211020084_Fn>&, jule::Str);
inline jule::Bool static__211b47d54_Neg(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b480eb_Pos(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b48393_BitNot(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b486d4_assign(jule::Ptr<_211020084_Fn>&, jule::Str);
inline jule::Bool static__211b4897b_AddAssign(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b48c23_SubAssign(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b48eba_DivAssign(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b49262_MulAssign(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b49509_ModAssign(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b497a1_ShlAssign(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b49a48_ShrAssign(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b49ce0_BitOrAssign(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b4a087_BitAndAssign(jule::Ptr<_211020084_Fn>);
inline jule::Bool static__211b4a32e_BitXorAssign(jule::Ptr<_211020084_Fn>);
struct _211b43c51_FuncPattern {
	

	_211b43c51_FuncPattern(void) = default;

	inline bool operator==(_211b43c51_FuncPattern _other) { return true; }

	inline bool operator!=(_211b43c51_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _211b74798_pushErr(_211b7427b_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _211b74a0c_checkTrait(_211b7427b_typeCompatibilityChecker*);
inline jule::Bool _211b74c71_checkPtr(_211b7427b_typeCompatibilityChecker*);
inline jule::Bool _211b74ed5_checkPrim(_211b7427b_typeCompatibilityChecker*);
inline jule::Bool _211b7538c_typeEnum(_211b7427b_typeCompatibilityChecker*, jule::Ptr<_211035682_TypeEnum>&, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211b75601_checkTypeEnum(_211b7427b_typeCompatibilityChecker*);
inline jule::Bool _211b75865_check(_211b7427b_typeCompatibilityChecker*);
struct _211b7427b_typeCompatibilityChecker {
	jule::Ptr<_211b254c4_Sema> _field_s = jule::Ptr<_211b254c4_Sema>();
	jule::Ptr<_211bb6455_TypeKind> _field_dest = jule::Ptr<_211bb6455_TypeKind>();
	jule::Ptr<_211bb6455_TypeKind> _field_src = jule::Ptr<_211bb6455_TypeKind>();
	jule::Ptr<_20e7ddc0b_Token> _field_errorToken = jule::Ptr<_20e7ddc0b_Token>();
	

	_211b7427b_typeCompatibilityChecker(void) = default;

	inline bool operator==(_211b7427b_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_211b7427b_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _211b76316_pushErr(_211b75da4_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _211b7657a_checkValidity(_211b75da4_assignTypeChecker*);
inline jule::Bool _211b767de_checkConst(_211b75da4_assignTypeChecker*);
inline jule::Bool _211b76a53_isPrim(_211b75da4_assignTypeChecker*);
inline jule::Bool _211b76cb7_checkCompatibility(_211b75da4_assignTypeChecker*);
inline jule::Bool _211b7702b_check(_211b75da4_assignTypeChecker*);
struct _211b75da4_assignTypeChecker {
	jule::Ptr<_211b254c4_Sema> _field_s = jule::Ptr<_211b254c4_Sema>();
	jule::Ptr<_211bb6455_TypeKind> _field_dest = jule::Ptr<_211bb6455_TypeKind>();
	jule::Ptr<_211b8a319_Data> _field_d = jule::Ptr<_211b8a319_Data>();
	jule::Ptr<_20e7ddc0b_Token> _field_errorToken = jule::Ptr<_20e7ddc0b_Token>();
	

	_211b75da4_assignTypeChecker(void) = default;

	inline bool operator==(_211b75da4_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_211b75da4_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _2243c636c_annotateConstraintElem(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _215523110_annotateConstraintElem(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _2155233b8_annotateConstraintElem(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _215528115_annotateConstraintElem(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211b781a3_annotateConstraintMap(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211b784b1_annotateConstraintTup(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211b787be_annotateConstraintFn(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211b78aee_annotateConstraintIdent(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211b78e1d_annotateConstraint(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&);
inline void _211b7923c_pushGeneric(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&, jule::I64);
inline jule::Bool _211b7954a_annotatePrim(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211b79858_annotateArr(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211b79b66_annotateSlc(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211b7a01d_checkMapKey(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211b7a32b_annotateMap(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211b7a639_annotateFn(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211b7a947_annotatePtr(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211b7ac55_annotateSptr(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211b7b063_annotateStruct(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211b7b371_annotateAny(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211b7b67e_annotateKind(_211b777bd_dynamicTypeAnnotation*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211b7b8e3_annotate(_211b777bd_dynamicTypeAnnotation*);
struct _211b777bd_dynamicTypeAnnotation {
	jule::Ptr<_211b8bd87_Eval> _field_e = jule::Ptr<_211b8bd87_Eval>();
	jule::Ptr<_211022c35_FnIns> _field_f = jule::Ptr<_211022c35_FnIns>();
	jule::Ptr<_211021d66_ParamIns> _field_p = jule::Ptr<_211021d66_ParamIns>();
	jule::Ptr<_211b8a319_Data> _field_a = jule::Ptr<_211b8a319_Data>();
	jule::Ptr<_20e7ddc0b_Token> _field_errorToken = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_211bb6455_TypeKind>* _field_k = nullptr;
	jule::Ptr<_210e520a4_TypeDecl> _field_c = jule::Ptr<_210e520a4_TypeDecl>();
	

	_211b777bd_dynamicTypeAnnotation(void) = default;

	inline bool operator==(_211b777bd_dynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_k == _other._field_k &&
			this->_field_c == _other._field_c;
	}

	inline bool operator!=(_211b777bd_dynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _211b7c619_pushErrToken(_211b7c0b9_fnCallArgChecker*, jule::Ptr<_20e7ddc0b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _211b7c938_pushErr(_211b7c0b9_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_211021d66_ParamIns>> _211b7cb9c_getParams(_211b7c0b9_fnCallArgChecker*);
inline jule::Bool _211b7ceaa_checkCounts(_211b7c0b9_fnCallArgChecker*, jule::Slice<jule::Ptr<_211021d66_ParamIns>>&);
inline jule::Bool _211b7d40b_checkArg(_211b7c0b9_fnCallArgChecker*, jule::Ptr<_211021d66_ParamIns>&, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Bool _211b7d7b3_push(_211b7c0b9_fnCallArgChecker*, jule::Ptr<_211021d66_ParamIns>&, jule::Ptr<_210e565c5_Expr>);
inline jule::Bool _211b7db6a_pushVariadic(_211b7c0b9_fnCallArgChecker*, jule::Ptr<_211021d66_ParamIns>&, jule::I64);
inline jule::Bool _211b7de78_checkArgs(_211b7c0b9_fnCallArgChecker*, jule::Slice<jule::Ptr<_211021d66_ParamIns>>&);
inline jule::Bool _211b7e20e_checkDynamicTypeAnnotation(_211b7c0b9_fnCallArgChecker*);
inline jule::Bool _211b7e484_check(_211b7c0b9_fnCallArgChecker*);
struct _211b7c0b9_fnCallArgChecker {
	jule::Ptr<_211b8bd87_Eval> _field_e = jule::Ptr<_211b8bd87_Eval>();
	jule::Slice<jule::Ptr<_210e565c5_Expr>> _field_args = jule::Slice<jule::Ptr<_210e565c5_Expr>>();
	jule::Ptr<_20e7ddc0b_Token> _field_errorToken = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_211022c35_FnIns> _field_f = jule::Ptr<_211022c35_FnIns>();
	jule::Bool _field_dynamicAnnotation = jule::Bool();
	jule::Slice<jule::Any> _field_argModels = jule::Slice<jule::Any>();
	

	_211b7c0b9_fnCallArgChecker(void) = default;

	inline bool operator==(_211b7c0b9_fnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_f == _other._field_f &&
			this->_field_dynamicAnnotation == _other._field_dynamicAnnotation &&
			this->_field_argModels == _other._field_argModels;
	}

	inline bool operator!=(_211b7c0b9_fnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _211b7eece_pushErr(_211b7e9c3_structLitChecker*, jule::Ptr<_20e7ddc0b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _211b802ed_pushSugggestion(_211b7e9c3_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _211b806b6_pushMatch(_211b7e9c3_structLitChecker*, jule::Ptr<_210e49e48_FieldIns>&, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_20e7ddc0b_Token>&);
inline void _211b809d5_checkPair(_211b7e9c3_structLitChecker*, jule::Ptr<_210e5b322_FieldExprPair>&, jule::Slice<jule::Ptr<_210e565c5_Expr>>&);
inline jule::Bool _211b80ce3_readyExprs(_211b7e9c3_structLitChecker*, jule::Slice<jule::Ptr<_210e565c5_Expr>>&);
inline void _211b81068_check(_211b7e9c3_structLitChecker*, jule::Slice<jule::Ptr<_210e565c5_Expr>>&);
struct _211b7e9c3_structLitChecker {
	jule::Ptr<_211b8bd87_Eval> _field_e = jule::Ptr<_211b8bd87_Eval>();
	jule::Ptr<_20e7ddc0b_Token> _field_errorToken = jule::Ptr<_20e7ddc0b_Token>();
	jule::Ptr<_210e6db2b_StructIns> _field_s = jule::Ptr<_210e6db2b_StructIns>();
	jule::Slice<jule::Ptr<_211018115_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_211018115_StructArgExprModel>>();
	

	_211b7e9c3_structLitChecker(void) = default;

	inline bool operator==(_211b7e9c3_structLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_211b7e9c3_structLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_211b43228_Var> _211b81a4c_buildVar(_211b815a7_rangeChecker*, jule::Ptr<_210e64d97_VarDecl>&);
inline void _211b81c28_setSizeKey(_211b815a7_rangeChecker*);
inline void _211b820e1_checkRangeExprValidity(_211b815a7_rangeChecker*, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211b43228_Var>&, jule::Ptr<_211bb6455_TypeKind>&);
inline void _211b822bc_checkSlice(_211b815a7_rangeChecker*);
inline void _211b82498_checkArray(_211b815a7_rangeChecker*);
inline void _211b82674_checkMapKeyA(_211b815a7_rangeChecker*);
inline void _211b82850_checkMapKeyB(_211b815a7_rangeChecker*);
inline void _211b82a2b_checkMap(_211b815a7_rangeChecker*);
inline void _211b82c07_checkStr(_211b815a7_rangeChecker*);
inline jule::Bool _211b82e6b_check(_211b815a7_rangeChecker*);
struct _211b815a7_rangeChecker {
	jule::Ptr<_211b0c214_scopeChecker> _field_sc = jule::Ptr<_211b0c214_scopeChecker>();
	jule::Ptr<_210e66a25_RangeKind> _field_rang = jule::Ptr<_210e66a25_RangeKind>();
	jule::Ptr<_211b0a08b_RangeIter> _field_Kind = jule::Ptr<_211b0a08b_RangeIter>();
	jule::Ptr<_211b8a319_Data> _field_d = jule::Ptr<_211b8a319_Data>();
	

	_211b815a7_rangeChecker(void) = default;

	inline bool operator==(_211b815a7_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_211b815a7_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _211b83bb4_prepareTypes(_211b8370d_retTypeChecker*);
inline void _211b83e39_prepareExprs(_211b8370d_retTypeChecker*, jule::Ptr<_210e565c5_Expr>&);
inline void _211b84115_retVars(_211b8370d_retTypeChecker*);
inline void _211b842e1_checkExprs(_211b8370d_retTypeChecker*);
inline jule::Bool _211b845ee_check(_211b8370d_retTypeChecker*, jule::Ptr<_210e565c5_Expr>&);
struct _211b8370d_retTypeChecker {
	jule::Ptr<_211b0c214_scopeChecker> _field_sc = jule::Ptr<_211b0c214_scopeChecker>();
	jule::Ptr<_211022c35_FnIns> _field_f = jule::Ptr<_211022c35_FnIns>();
	jule::Slice<jule::Ptr<_211bb6455_TypeKind>> _field_types = jule::Slice<jule::Ptr<_211bb6455_TypeKind>>();
	jule::Slice<jule::Ptr<_210e565c5_Expr>> _field_exprs = jule::Slice<jule::Ptr<_210e565c5_Expr>>();
	jule::Slice<jule::Ptr<_211b43228_Var>> _field_vars = jule::Slice<jule::Ptr<_211b43228_Var>>();
	jule::Ptr<_20e7ddc0b_Token> _field_errorToken = jule::Ptr<_20e7ddc0b_Token>();
	jule::Any _field_model = jule::Any();
	

	_211b8370d_retTypeChecker(void) = default;

	inline bool operator==(_211b8370d_retTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_211b8370d_retTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_211b1c378_ImportInfo> _211b85ac8_FindPackage(_211b855ab_SymbolTable*, jule::Str);
inline jule::Ptr<_211b1c378_ImportInfo> _211b85dd6_SelectPackage(_211b855ab_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_211b1c378_ImportInfo>)>);
inline jule::Ptr<_211b43228_Var> _211b8628d_FindVar(_211b855ab_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_211bb5762_TypeAlias> _211b86645_FindTypeAlias(_211b855ab_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_210e427d1_Struct> _211b869ec_FindStruct(_211b855ab_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_211020084_Fn> _211b86da4_FindFn(_211b855ab_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_211031e42_Trait> _211b871b2_FindTrait(_211b855ab_SymbolTable*, jule::Str);
inline jule::Ptr<_211034087_Enum> _211b874c0_FindEnum(_211b855ab_SymbolTable*, jule::Str);
inline jule::Ptr<_211035682_TypeEnum> _211b877cd_FindTypeEnum(_211b855ab_SymbolTable*, jule::Str);
inline jule::Ptr<_211b43228_Var> _211b87d50_findVar(_211b855ab_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_211bb5762_TypeAlias> _211b882a1_findTypeAlias(_211b855ab_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _211b88658_defByIdent(_211b855ab_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _211b88aa9_isDuplicatedIdent(_211b855ab_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _211b855ab_SymbolTable {
	jule::Ptr<_20e7e4096_File> _field_File = jule::Ptr<_20e7e4096_File>();
	jule::Slice<_211026ec0_Pass> _field_Passes = jule::Slice<_211026ec0_Pass>();
	jule::Slice<jule::Ptr<_211b1c378_ImportInfo>> _field_Imports = jule::Slice<jule::Ptr<_211b1c378_ImportInfo>>();
	jule::Slice<jule::Ptr<_211b43228_Var>> _field_Vars = jule::Slice<jule::Ptr<_211b43228_Var>>();
	jule::Slice<jule::Ptr<_211bb5762_TypeAlias>> _field_TypeAliases = jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>();
	jule::Slice<jule::Ptr<_210e427d1_Struct>> _field_Structs = jule::Slice<jule::Ptr<_210e427d1_Struct>>();
	jule::Slice<jule::Ptr<_211020084_Fn>> _field_Funcs = jule::Slice<jule::Ptr<_211020084_Fn>>();
	jule::Slice<jule::Ptr<_211031e42_Trait>> _field_Traits = jule::Slice<jule::Ptr<_211031e42_Trait>>();
	jule::Slice<jule::Ptr<_211034087_Enum>> _field_Enums = jule::Slice<jule::Ptr<_211034087_Enum>>();
	jule::Slice<jule::Ptr<_211035682_TypeEnum>> _field_TypeEnums = jule::Slice<jule::Ptr<_211035682_TypeEnum>>();
	jule::Slice<jule::Ptr<_2110b6658_Impl>> _field_Impls = jule::Slice<jule::Ptr<_2110b6658_Impl>>();
	

	_211b855ab_SymbolTable(void) = default;

	inline bool operator==(_211b855ab_SymbolTable _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Imports == _other._field_Imports &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_TypeAliases == _other._field_TypeAliases &&
			this->_field_Structs == _other._field_Structs &&
			this->_field_Funcs == _other._field_Funcs &&
			this->_field_Traits == _other._field_Traits &&
			this->_field_Enums == _other._field_Enums &&
			this->_field_TypeEnums == _other._field_TypeEnums &&
			this->_field_Impls == _other._field_Impls;
	}

	inline bool operator!=(_211b855ab_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _211b8a704_IsNil(_211b8a319_Data*);
inline jule::Bool _211b8a968_IsVoid(_211b8a319_Data*);
inline jule::Bool _211b8abcc_IsConst(_211b8a319_Data*);
inline jule::Bool _211b8aeda_GoodOperand(_211b8a319_Data*, jule::Ptr<_211b8a319_Data>&);
struct _211b8a319_Data {
	jule::Ptr<_211bb6455_TypeKind> _field_Kind = jule::Ptr<_211bb6455_TypeKind>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Bool _field_Lvalue = jule::Bool();
	jule::Bool _field_IsRune = jule::Bool();
	jule::Any _field_Model = jule::Any();
	jule::Bool _field_Decl = jule::Bool();
	jule::Ptr<_210ea46cd_Const> _field_Constant = jule::Ptr<_210ea46cd_Const>();
	

	_211b8a319_Data(void) = default;

	inline bool operator==(_211b8a319_Data _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_211b8a319_Data _other) { return !this->operator==(_other); }


};
struct _211b8b392_Value {
	jule::Ptr<_210e565c5_Expr> _field_Expr = jule::Ptr<_210e565c5_Expr>();
	jule::Ptr<_211b8a319_Data> _field_Data = jule::Ptr<_211b8a319_Data>();
	

	_211b8b392_Value(void) = default;

	inline bool operator==(_211b8b392_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_211b8b392_Value _other) { return !this->operator==(_other); }


};
inline void _211b8c393_pushErr(_211b8bd87_Eval*, jule::Ptr<_20e7ddc0b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _211b8c6b2_pushSugggestion(_211b8bd87_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _211b8c88d_allowBuiltin(_211b8bd87_Eval*);
inline void _211b8ca69_disallowBuiltin(_211b8bd87_Eval*);
inline jule::Bool _211b8cccd_isUnsafe(_211b8bd87_Eval*);
inline jule::Bool _211b8d042_isGlobal(_211b8bd87_Eval*);
inline jule::Bool _211b8d31c_applyNumericPrefix(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211b8d581_litNil(_211b8bd87_Eval*);
inline jule::Ptr<_211b8a319_Data> _211b8d88e_litStr(_211b8bd87_Eval*, jule::Ptr<_210e57609_LitExpr>&);
inline jule::Ptr<_211b8a319_Data> _211b8db9c_litBool(_211b8bd87_Eval*, jule::Ptr<_210e57609_LitExpr>&);
inline jule::Ptr<_211b8a319_Data> _211b8deaa_litRune(_211b8bd87_Eval*, jule::Ptr<_210e57609_LitExpr>&);
inline jule::Ptr<_211b8a319_Data> _211b8e2b8_litFloat(_211b8bd87_Eval*, jule::Ptr<_210e57609_LitExpr>&);
inline jule::Ptr<_211b8a319_Data> _211b8e5c6_litInt(_211b8bd87_Eval*, jule::Ptr<_210e57609_LitExpr>&);
inline jule::Ptr<_211b8a319_Data> _211b8e8d4_litNum(_211b8bd87_Eval*, jule::Ptr<_210e57609_LitExpr>&);
inline jule::Ptr<_211b8a319_Data> _211b8ebe2_evalLit(_211b8bd87_Eval*, jule::Ptr<_210e57609_LitExpr>);
inline jule::Any _211b90000_findBuiltins(_211b8bd87_Eval*, jule::Str);
inline jule::Any _211b903a7_getDef(_211b8bd87_Eval*, jule::Str, jule::Bool);
inline void _2244e2587_pushReference(_211b8bd87_Eval*, jule::Ptr<_211022c35_FnIns>&);
inline void _224507646_pushReference(_211b8bd87_Eval*, jule::Ptr<_211b43228_Var>&);
inline void _22459c323_pushReference(_211b8bd87_Eval*, jule::Ptr<_210e6db2b_StructIns>&);
inline jule::Ptr<_211b8a319_Data> _211b9093a__evalEnum(_211b8bd87_Eval*, jule::Ptr<_211034087_Enum>);
inline jule::Ptr<_211b8a319_Data> _211b90ce2_evalEnum(_211b8bd87_Eval*, jule::Ptr<_211034087_Enum>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211b91100__evalTypeEnum(_211b8bd87_Eval*, jule::Ptr<_211035682_TypeEnum>);
inline jule::Ptr<_211b8a319_Data> _211b914a7_evalTypeEnum(_211b8bd87_Eval*, jule::Ptr<_211035682_TypeEnum>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211b917b5__evalStruct(_211b8bd87_Eval*, jule::Ptr<_210e6db2b_StructIns>);
inline jule::Ptr<_211b8a319_Data> _211b91b6c_evalStruct(_211b8bd87_Eval*, jule::Ptr<_210e6db2b_StructIns>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211b91e7a_evalFnIns(_211b8bd87_Eval*, jule::Ptr<_211022c35_FnIns>);
inline void _211b92299_checkDeprecated(_211b8bd87_Eval*, jule::Slice<jule::Ptr<_210e1d8ab_Directive>>&, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211b92651_evalFn(_211b8bd87_Eval*, jule::Ptr<_211020084_Fn>, jule::Ptr<_20e7ddc0b_Token>);
inline void _211b92a19_pushIllegalCycleError(_211b8bd87_Eval*, jule::Ptr<_211b43228_Var>&, jule::Ptr<_211b43228_Var>&, jule::Str&);
inline jule::Bool _211b92dc1_checkCrossCycle(_211b8bd87_Eval*, jule::Ptr<_211b43228_Var>&, jule::Str&);
inline jule::Bool _211b93278_checkIllegalCycles(_211b8bd87_Eval*, jule::Ptr<_211b43228_Var>&, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211b93630_evalVar(_211b8bd87_Eval*, jule::Ptr<_211b43228_Var>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211b939d7_evalTypeAlias(_211b8bd87_Eval*, jule::Ptr<_211bb5762_TypeAlias>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211b93d8e_evalDef(_211b8bd87_Eval*, jule::Any, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211b9419c_evalIdent(_211b8bd87_Eval*, jule::Ptr<_210e5863d_IdentExpr>);
inline jule::Ptr<_211b8a319_Data> _211b944aa_evalUnary(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e58d47_UnaryExpr>);
inline jule::Ptr<_211b8a319_Data> _211b947b8_evalVariadic(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e591ee_VariadicExpr>);
inline jule::Ptr<_211b8a319_Data> _211b94ac6_evalUnsafe(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e57d13_UnsafeExpr>);
inline jule::Ptr<_211b8a319_Data> _211b94dd4_evalArr(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e5ce7d_SliceExpr>);
inline jule::Ptr<_211b8a319_Data> _211b95335_evalExpSlc(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e5ce7d_SliceExpr>, jule::Ptr<_211bb6455_TypeKind>, jule::Any);
inline jule::Ptr<_211b8a319_Data> _211b95643_evalSliceExpr(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e5ce7d_SliceExpr>);
inline void _211b95984_checkIntegerIndexingByData(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_20e7ddc0b_Token>);
inline void _211b95d5d_indexingPtr(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_210e5d81e_IndexingExpr>&);
inline void _211b96226_indexingArr(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_210e5d81e_IndexingExpr>&);
inline void _211b965de_indexingSlc(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_210e5d81e_IndexingExpr>&);
inline void _211b969a7_indexingMap(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_210e5d81e_IndexingExpr>&);
inline void _211b96d70_indexingStr(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_210e5d81e_IndexingExpr>&);
inline void _211b97238_toIndexing(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_210e5d81e_IndexingExpr>&);
inline jule::Bool _211b976ab_pushGenericsFromExprSubIdent(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e59dd1_SubIdentExpr>&, jule::Slice<jule::Ptr<_210e520a4_TypeDecl>>&, jule::Ptr<_210e565c5_Expr>&);
inline jule::Bool _211b97a74_pushGenericsFromData(jule::Ptr<_211b8bd87_Eval>, jule::Slice<jule::Ptr<_210e520a4_TypeDecl>>&, jule::Ptr<_210e565c5_Expr>&);
inline void _211b97db5_evalIdentDeclFromIndexing(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_210e5d81e_IndexingExpr>&);
inline jule::Bool _211b98327_checkGenericFn(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_211022c35_FnIns>&, jule::Ptr<_20e7ddc0b_Token>&, jule::Any&);
inline void _211b98668_evalFnGenericFromIndexing(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_210e5d81e_IndexingExpr>&);
inline jule::Ptr<_211b8a319_Data> _211b98987_evalIndexing(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e5d81e_IndexingExpr>);
inline std::tuple<jule::Ptr<_211b8a319_Data>,jule::Ptr<_211b8a319_Data>> _211b98c95_evalSlicingExprs(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e5de29_SlicingExpr>&);
inline void _211b9901a_slicingArr(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>&);
inline void _211b993d3_slicingStr(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211b8a319_Data>&);
inline void _211b99845_checkSlicing(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_210e5de29_SlicingExpr>&);
inline jule::Ptr<_211b8a319_Data> _211b99b53_evalSlicing(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e5de29_SlicingExpr>);
inline void _211b9a01b_castPtr(_211b8bd87_Eval*, jule::Ptr<_211bb6455_TypeKind>, jule::Ptr<_211b8a319_Data>, jule::Ptr<_20e7ddc0b_Token>);
inline void _211b9a3d4_castStruct(_211b8bd87_Eval*, jule::Ptr<_211bb6455_TypeKind>, jule::Ptr<_211b8a319_Data>, jule::Ptr<_20e7ddc0b_Token>);
inline void _211b9a79c_castRef(_211b8bd87_Eval*, jule::Ptr<_211bb6455_TypeKind>, jule::Ptr<_211b8a319_Data>, jule::Ptr<_20e7ddc0b_Token>);
inline void _211b9ab65_castSlc(_211b8bd87_Eval*, jule::Ptr<_211bb6455_TypeKind>, jule::Ptr<_211b8a319_Data>, jule::Ptr<_20e7ddc0b_Token>);
inline void _211b9ae84_castStr(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>, jule::Ptr<_20e7ddc0b_Token>);
inline void _211b9b34c_castInt(_211b8bd87_Eval*, jule::Ptr<_211bb6455_TypeKind>, jule::Ptr<_211b8a319_Data>, jule::Ptr<_20e7ddc0b_Token>);
inline void _211b9b715_castNum(_211b8bd87_Eval*, jule::Ptr<_211bb6455_TypeKind>, jule::Ptr<_211b8a319_Data>, jule::Ptr<_20e7ddc0b_Token>);
inline void _211b9bacd_castPrim(_211b8bd87_Eval*, jule::Ptr<_211bb6455_TypeKind>, jule::Ptr<_211b8a319_Data>, jule::Ptr<_20e7ddc0b_Token>);
inline void _211b9bdec_castConstant(_211b8bd87_Eval*, jule::Ptr<_211bb6455_TypeKind>&, jule::Ptr<_211b8a319_Data>&);
inline void _211b9c2b5_castTypeEnum(_211b8bd87_Eval*, jule::Ptr<_211bb6455_TypeKind>&, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Ptr<_211b8a319_Data> _211b9c716_evalCastByTypeNData(_211b8bd87_Eval*, jule::Ptr<_211bb6455_TypeKind>, jule::Ptr<_211b8a319_Data>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211b9cb67_evalCastT(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_211bb6455_TypeKind>&, jule::Ptr<_210e565c5_Expr>&, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Ptr<_211b8a319_Data> _211b9ce75_evalCast(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e595a6_CastExpr>);
inline jule::Ptr<_211b8a319_Data> _211b9d283_evalNsSelection(_211b8bd87_Eval*, jule::Ptr<_210e5995d_NsSelectionExpr>);
inline jule::Ptr<_211b8a319_Data> _211b9d6d4_evalStructLitExplicit(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e6db2b_StructIns>, jule::Slice<jule::Ptr<_210e565c5_Expr>>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211b9d9e2_evalStructLit(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e5ba70_StructLit>);
inline _211bc4980_typeChecker _211b9dc56_typeChecker(_211b8bd87_Eval*);
inline jule::Ptr<_211b8a319_Data> _211b9e064_evalType(_211b8bd87_Eval*, jule::Ptr<_210e520a4_TypeDecl>);
inline void _211b9e383_callTypeFn(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline void _211b9e6a2_callBuiltinFn(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline void _211b9e9e3_checkFnOfConcurrentCall(_211b8bd87_Eval*, jule::Ptr<_211022c35_FnIns>&, jule::Ptr<_20e7ddc0b_Token>);
inline void _211b9edde_processExceptionalHandler(_211b8bd87_Eval*, jule::Ptr<_211022c35_FnIns>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline void _211ba021e_callFn(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211ba052c_evalFnCall(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e5a893_FnCallExpr>);
inline jule::Ptr<_211b8a319_Data> _211ba08d4_evalEnumStatic(_211b8bd87_Eval*, jule::Ptr<_211034087_Enum>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba0c8b_evalTypeEnumStatic(_211b8bd87_Eval*, jule::Ptr<_211035682_TypeEnum>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba1143_evalStructStatic(_211b8bd87_Eval*, jule::Ptr<_210e6db2b_StructIns>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba1594_evalTraitSubIdent(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>, jule::Ptr<_211031e42_Trait>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba1a8e_evalStructSubIdent(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>, jule::Ptr<_210e6db2b_StructIns>, jule::Ptr<_210e59dd1_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_211b8a319_Data> _211ba1e46_evalSliceSubIdent(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba22ed_evalArraySubIdent(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba26a5_evalMapSubIdent(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba2a5c_evalStrSubIdent(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba2d6a_evalIntTypeStatic(_211b8bd87_Eval*, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba3178_evalUintTypeStatic(_211b8bd87_Eval*, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba3486_evalI8TypeStatic(_211b8bd87_Eval*, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba3794_evalI16TypeStatic(_211b8bd87_Eval*, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba3aa2_evalI32TypeStatic(_211b8bd87_Eval*, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba3db0_evalI64TypeStatic(_211b8bd87_Eval*, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba41bd_evalU8TypeStatic(_211b8bd87_Eval*, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba44cb_evalU16TypeStatic(_211b8bd87_Eval*, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba47d9_evalU32TypeStatic(_211b8bd87_Eval*, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba4ae7_evalU64TypeStatic(_211b8bd87_Eval*, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba4e05_evalF32TypeStatic(_211b8bd87_Eval*, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba5213_evalF64TypeStatic(_211b8bd87_Eval*, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba55ba_evalPrimStatic(_211b8bd87_Eval*, jule::Str, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_211b8a319_Data> _211ba5972_evalTypeStatic(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>, jule::Ptr<_210e59dd1_SubIdentExpr>);
inline jule::Ptr<_211b8a319_Data> _211ba5d29_evalObjSubIdent(_211b8bd87_Eval*, jule::Ptr<_211b8a319_Data>, jule::Ptr<_210e59dd1_SubIdentExpr>);
inline jule::Ptr<_211b8a319_Data> _211ba6137_evalSubIdent(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e59dd1_SubIdentExpr>);
inline jule::Ptr<_211b8a319_Data> _211ba6445_evalTuple(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e57252_TupleExpr>);
inline jule::Ptr<_211b8a319_Data> _211ba67ec_evalMap(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_211bc16c4_Map>, jule::Ptr<_210e5bee3_BraceLit>);
inline jule::Ptr<_211b8a319_Data> _211ba6b0a_evalBraceLit(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e5bee3_BraceLit>);
inline jule::Ptr<_211b8a319_Data> _211ba6e18_evalAnonFn(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e63db8_FnDecl>);
inline jule::Ptr<_211b8a319_Data> _211ba7226_evalBinop(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e5a354_BinopExpr>);
inline jule::Ptr<_211b8a319_Data> _211ba7534_evalExprKind(jule::Ptr<_211b8bd87_Eval>, jule::Any);
inline jule::Ptr<_211b8a319_Data> _211ba7842_eval(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e565c5_Expr>);
inline jule::Ptr<_211b8a319_Data> _211ba7b50_evalExpr(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_210e565c5_Expr>);
struct _211b8bd87_Eval {
	jule::Ptr<_211b254c4_Sema> _field_s = jule::Ptr<_211b254c4_Sema>();
	jule::Trait<_211bd2086_Lookup> _field_lookup = jule::Trait<_211bd2086_Lookup>();
	jule::Ptr<_211bb6455_TypeKind> _field_prefix = jule::Ptr<_211bb6455_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_disBuiltin = jule::Bool();
	jule::Ptr<_211b43228_Var> _field_owner = jule::Ptr<_211b43228_Var>();
	jule::Ptr<_210e49e48_FieldIns> _field_field = jule::Ptr<_210e49e48_FieldIns>();
	jule::Bool _field_arg = jule::Bool();
	

	_211b8bd87_Eval(void) = default;

	inline bool operator==(_211b8bd87_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_211b8bd87_Eval _other) { return !this->operator==(_other); }


};
inline _211ba80c3_unaryEval static__211ba8579_new(jule::Ptr<_211b8bd87_Eval>);
inline void _211ba8755_minus(_211ba80c3_unaryEval*);
inline void _211ba8931_plus(_211ba80c3_unaryEval*);
inline void _211ba8b0c_caret(_211ba80c3_unaryEval*);
inline void _211ba8cd8_excl(_211ba80c3_unaryEval*);
inline void _211ba8eb4_star(_211ba80c3_unaryEval*);
inline void _211ba9190_amper(_211ba80c3_unaryEval*);
inline void _211ba936b_typeDecl(_211ba80c3_unaryEval*);
inline void _211ba9547_evalData(_211ba80c3_unaryEval*);
inline jule::Ptr<_211b8a319_Data> _211ba9822_eval(_211ba80c3_unaryEval*, jule::Ptr<_210e58d47_UnaryExpr>);
struct _211ba80c3_unaryEval {
	jule::Ptr<_211b8bd87_Eval> _field_e = jule::Ptr<_211b8bd87_Eval>();
	jule::Ptr<_211b8a319_Data> _field_d = jule::Ptr<_211b8a319_Data>();
	jule::Ptr<_210e58d47_UnaryExpr> _field_u = jule::Ptr<_210e58d47_UnaryExpr>();
	

	_211ba80c3_unaryEval(void) = default;

	inline bool operator==(_211ba80c3_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_211ba80c3_unaryEval _other) { return !this->operator==(_other); }


};
inline _211ba9d61_binaryEval static__211baa427_newPlain(jule::Ptr<_211b8bd87_Eval>);
inline _211ba9d61_binaryEval static__211baa768_new(jule::Ptr<_211b8bd87_Eval>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Bool _211baa9cc_checkTypeCompatibility(_211ba9d61_binaryEval*);
inline jule::Bool _211baac74_checkStructCommonOperatorCompatibility(_211ba9d61_binaryEval*);
inline jule::Ptr<_211b8a319_Data> _211bab01b_evalNil(_211ba9d61_binaryEval*);
inline jule::Ptr<_211b8a319_Data> _211bab280_evalEnum(_211ba9d61_binaryEval*);
inline jule::Ptr<_211b8a319_Data> _211bab4e4_evalTypeEnum(_211ba9d61_binaryEval*);
inline jule::Ptr<_211b8a319_Data> _211bab758_evalSptr(_211ba9d61_binaryEval*);
inline jule::Ptr<_211b8a319_Data> _211bab9bc_evalPtr(_211ba9d61_binaryEval*);
inline jule::Ptr<_211b8a319_Data> _211babc31_evalArr(_211ba9d61_binaryEval*);
inline jule::Ptr<_211b8a319_Data> _211babe95_evalSlc(_211ba9d61_binaryEval*);
inline jule::Ptr<_211b8a319_Data> _211bac209_evalFn(_211ba9d61_binaryEval*);
inline jule::Ptr<_211b8a319_Data> _211bac46d_evalStruct(_211ba9d61_binaryEval*);
inline jule::Ptr<_211b8a319_Data> _211bac6d2_evalTrait(_211ba9d61_binaryEval*);
inline jule::Ptr<_211b8a319_Data> _211bac946_evalAny(_211ba9d61_binaryEval*);
inline jule::Ptr<_211b8a319_Data> _211bacbaa_evalBool(_211ba9d61_binaryEval*);
inline jule::Ptr<_211b8a319_Data> _211bace1e_evalStr(_211ba9d61_binaryEval*);
inline void _211bad0ea_setTypeToGreater(_211ba9d61_binaryEval*);
inline void _211bad33c_checkModData(_211ba9d61_binaryEval*, jule::Ptr<_211b8a319_Data>&);
inline void _211bad518_mod(_211ba9d61_binaryEval*);
inline jule::Bool _211bad8c0_numbersAreCompatibile(_211ba9d61_binaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_211b8a319_Data> _211badb34_evalFloat(_211ba9d61_binaryEval*);
inline jule::Ptr<_211b8a319_Data> _211badd98_evalInt(_211ba9d61_binaryEval*);
inline jule::Ptr<_211b8a319_Data> _211bae10c_evalPrim(_211ba9d61_binaryEval*);
inline jule::Ptr<_211b8a319_Data> _211bae371_evalOp(_211ba9d61_binaryEval*);
inline void _211bae5e6_evalConst(_211ba9d61_binaryEval*, jule::Ptr<_211b8a319_Data>&);
inline void _211bae86b_checkData(_211ba9d61_binaryEval*, jule::Ptr<_211b8a319_Data>&);
inline void _211baea47_checkDatas(_211ba9d61_binaryEval*);
inline void _211baecbc_setModel(_211ba9d61_binaryEval*, jule::Ptr<_211b8a319_Data>&);
inline void _211bb0042_postEval(_211ba9d61_binaryEval*, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211bb03e9_solveExplicit(_211ba9d61_binaryEval*, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211bb0707_eval(_211ba9d61_binaryEval*, jule::Ptr<_210e5a354_BinopExpr>&);
struct _211ba9d61_binaryEval {
	jule::Ptr<_211b8bd87_Eval> _field_e = jule::Ptr<_211b8bd87_Eval>();
	jule::Ptr<_211b8a319_Data> _field_l = jule::Ptr<_211b8a319_Data>();
	jule::Ptr<_211b8a319_Data> _field_r = jule::Ptr<_211b8a319_Data>();
	jule::Ptr<_20e7ddc0b_Token> _field_op = jule::Ptr<_20e7ddc0b_Token>();
	

	_211ba9d61_binaryEval(void) = default;

	inline bool operator==(_211ba9d61_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_211ba9d61_binaryEval _other) { return !this->operator==(_other); }


};
struct _211bb4c28_InsGeneric {
	jule::Ptr<_211bb6455_TypeKind> _field_Kind = jule::Ptr<_211bb6455_TypeKind>();
	jule::Slice<jule::Ptr<_211bb6455_TypeKind>> _field_Constraint = jule::Slice<jule::Ptr<_211bb6455_TypeKind>>();
	

	_211bb4c28_InsGeneric(void) = default;

	inline bool operator==(_211bb4c28_InsGeneric _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_211bb4c28_InsGeneric _other) { return !this->operator==(_other); }


};
struct _211bb5762_TypeAlias {
	jule::Ptr<_210e623c2_ScopeTree> _field_Scope = jule::Ptr<_210e623c2_ScopeTree>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Used = jule::Bool();
	jule::Bool _field_Generic = jule::Bool();
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_211bba5ad_TypeSymbol> _field_Kind = jule::Ptr<_211bba5ad_TypeSymbol>();
	jule::Slice<jule::Any> _field_Refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_211bb5762_TypeAlias>> _field_Generics = jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>();
	

	_211bb5762_TypeAlias(void) = default;

	inline bool operator==(_211bb5762_TypeAlias _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Used == _other._field_Used &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_211bb5762_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _211bb6851_Str(_211bb6455_TypeKind*);
inline jule::Bool _211bb6b5e_Equals(jule::Ptr<_211bb6455_TypeKind>, jule::Ptr<_211bb6455_TypeKind>);
inline jule::Bool _211bb7115_CppLinked(_211bb6455_TypeKind*);
inline jule::Bool _211bb7379_IsNil(_211bb6455_TypeKind*);
inline jule::Bool _211bb75dd_Void(_211bb6455_TypeKind*);
inline jule::Bool _211bb7852_Mutable(_211bb6455_TypeKind*);
inline jule::Bool _211bb7ab6_NilCompatible(_211bb6455_TypeKind*);
inline jule::Bool _211bb7d2a_PerformsRC(_211bb6455_TypeKind*);
inline jule::Bool _211bb808e_SupportsCloning(_211bb6455_TypeKind*);
inline jule::Bool _211bb8303_Variadicable(_211bb6455_TypeKind*);
inline jule::Ptr<_211bbae2c_Prim> _211bb8567_Prim(_211bb6455_TypeKind*);
inline jule::Ptr<_211bbe6b1_Sptr> _211bb87cb_Sptr(_211bb6455_TypeKind*);
inline jule::Ptr<_211bc2c25_Ptr> _211bb8a40_Ptr(_211bb6455_TypeKind*);
inline jule::Ptr<_211034087_Enum> _211bb8ca4_Enum(_211bb6455_TypeKind*);
inline jule::Ptr<_211035682_TypeEnum> _211bb9018_TypeEnum(_211bb6455_TypeKind*);
inline jule::Ptr<_211bc22b8_Arr> _211bb927c_Arr(_211bb6455_TypeKind*);
inline jule::Ptr<_211bc011d_Slc> _211bb94e1_Slc(_211bb6455_TypeKind*);
inline jule::Ptr<_211022c35_FnIns> _211bb9755_Fn(_211bb6455_TypeKind*);
inline jule::Ptr<_210e6db2b_StructIns> _211bb99b9_Struct(_211bb6455_TypeKind*);
inline jule::Ptr<_211031e42_Trait> _211bb9c2d_Trait(_211bb6455_TypeKind*);
inline jule::Ptr<_211bc16c4_Map> _211bb9e92_Map(_211bb6455_TypeKind*);
inline jule::Ptr<_211bc0b9b_Tuple> _211bba206_Tup(_211bb6455_TypeKind*);
struct _211bb6455_TypeKind {
	jule::Str _field_CppIdent = jule::Str();
	jule::Bool _field_Generic = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Trait<_211bb6026_Kind> _field_Kind = jule::Trait<_211bb6026_Kind>();
	

	_211bb6455_TypeKind(void) = default;

	inline bool operator==(_211bb6455_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_211bb6455_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _211bba965_checked(_211bba5ad_TypeSymbol*);
inline void _211bbab41_removeKind(_211bba5ad_TypeSymbol*);
struct _211bba5ad_TypeSymbol {
	jule::Ptr<_210e520a4_TypeDecl> _field_Decl = jule::Ptr<_210e520a4_TypeDecl>();
	jule::Ptr<_211bb6455_TypeKind> _field_Kind = jule::Ptr<_211bb6455_TypeKind>();
	

	_211bba5ad_TypeSymbol(void) = default;

	inline bool operator==(_211bba5ad_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_211bba5ad_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _211bbb290_Str(_211bbae2c_Prim*);
inline jule::Bool _211bbb59d_Equals(jule::Ptr<_211bbae2c_Prim>, jule::Ptr<_211bb6455_TypeKind>);
inline jule::Bool _211bbba21_IsConstraint(_211bbae2c_Prim*);
inline jule::Bool _211bbbc85_IsI8(_211bbae2c_Prim*);
inline jule::Bool _211bbbee9_IsI16(_211bbae2c_Prim*);
inline jule::Bool _211bbc25d_IsI32(_211bbae2c_Prim*);
inline jule::Bool _211bbc4c2_IsI64(_211bbae2c_Prim*);
inline jule::Bool _211bbc736_IsU8(_211bbae2c_Prim*);
inline jule::Bool _211bbc99a_IsU16(_211bbae2c_Prim*);
inline jule::Bool _211bbcc0e_IsU32(_211bbae2c_Prim*);
inline jule::Bool _211bbce73_IsU64(_211bbae2c_Prim*);
inline jule::Bool _211bbd1d7_IsF32(_211bbae2c_Prim*);
inline jule::Bool _211bbd44b_IsF64(_211bbae2c_Prim*);
inline jule::Bool _211bbd6b0_IsInt(_211bbae2c_Prim*);
inline jule::Bool _211bbd924_IsUint(_211bbae2c_Prim*);
inline jule::Bool _211bbdb88_IsUintptr(_211bbae2c_Prim*);
inline jule::Bool _211bbddec_IsBool(_211bbae2c_Prim*);
inline jule::Bool _211bbe161_IsStr(_211bbae2c_Prim*);
inline jule::Bool _211bbe3c5_IsAny(_211bbae2c_Prim*);
struct _211bbae2c_Prim {
	jule::Str _field_Kind = jule::Str();
	

	_211bbae2c_Prim(void) = default;

	inline bool operator==(_211bbae2c_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_211bbae2c_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _211bbea24_Str(_211bbe6b1_Sptr*);
inline jule::Bool _211bbed32_Equals(jule::Ptr<_211bbe6b1_Sptr>, jule::Ptr<_211bb6455_TypeKind>);
struct _211bbe6b1_Sptr {
	jule::Ptr<_211bb6455_TypeKind> _field_Elem = jule::Ptr<_211bb6455_TypeKind>();
	

	_211bbe6b1_Sptr(void) = default;

	inline bool operator==(_211bbe6b1_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_211bbe6b1_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _211bc0629_Str(_211bc011d_Slc*);
inline jule::Bool _211bc0937_Equals(jule::Ptr<_211bc011d_Slc>, jule::Ptr<_211bb6455_TypeKind>);
struct _211bc011d_Slc {
	jule::Ptr<_211bb6455_TypeKind> _field_Elem = jule::Ptr<_211bb6455_TypeKind>();
	

	_211bc011d_Slc(void) = default;

	inline bool operator==(_211bc011d_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_211bc011d_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _211bc100e_Str(_211bc0b9b_Tuple*);
inline jule::Bool _211bc131c_Equals(jule::Ptr<_211bc0b9b_Tuple>, jule::Ptr<_211bb6455_TypeKind>);
struct _211bc0b9b_Tuple {
	jule::Slice<jule::Ptr<_211bb6455_TypeKind>> _field_Types = jule::Slice<jule::Ptr<_211bb6455_TypeKind>>();
	

	_211bc0b9b_Tuple(void) = default;

	inline bool operator==(_211bc0b9b_Tuple _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_211bc0b9b_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _211bc1a37_Str(_211bc16c4_Map*);
inline jule::Bool _211bc1d45_Equals(jule::Ptr<_211bc16c4_Map>, jule::Ptr<_211bb6455_TypeKind>);
struct _211bc16c4_Map {
	jule::Ptr<_211bb6455_TypeKind> _field_Key = jule::Ptr<_211bb6455_TypeKind>();
	jule::Ptr<_211bb6455_TypeKind> _field_Val = jule::Ptr<_211bb6455_TypeKind>();
	

	_211bc16c4_Map(void) = default;

	inline bool operator==(_211bc16c4_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_211bc16c4_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _211bc262b_Str(_211bc22b8_Arr*);
inline jule::Bool _211bc2939_Equals(jule::Ptr<_211bc22b8_Arr>, jule::Ptr<_211bb6455_TypeKind>);
struct _211bc22b8_Arr {
	jule::Bool _field_Auto = jule::Bool();
	jule::I64 _field_N = jule::I64();
	jule::Ptr<_211bb6455_TypeKind> _field_Elem = jule::Ptr<_211bb6455_TypeKind>();
	

	_211bc22b8_Arr(void) = default;

	inline bool operator==(_211bc22b8_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_211bc22b8_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _211bc3088_Str(_211bc2c25_Ptr*);
inline jule::Bool _211bc3396_Equals(jule::Ptr<_211bc2c25_Ptr>, jule::Ptr<_211bb6455_TypeKind>);
inline jule::Bool _211bc36e8_IsUnsafe(_211bc2c25_Ptr*);
struct _211bc2c25_Ptr {
	jule::Ptr<_211bb6455_TypeKind> _field_Elem = jule::Ptr<_211bb6455_TypeKind>();
	

	_211bc2c25_Ptr(void) = default;

	inline bool operator==(_211bc2c25_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_211bc2c25_Ptr _other) { return !this->operator==(_other); }


};
struct _211bc3b6b_referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_211bc3b6b_referencer(void) = default;

	inline bool operator==(_211bc3b6b_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_211bc3b6b_referencer _other) { return !this->operator==(_other); }


};
inline void _211bc5189_pushErr(_211bc4980_typeChecker*, jule::Ptr<_20e7ddc0b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _211bc5365_allowBuiltin(_211bc4980_typeChecker*);
inline void _211bc5541_disallowBuiltin(_211bc4980_typeChecker*);
inline jule::Ptr<_211bbae2c_Prim> _211bc584e_buildPrim(_211bc4980_typeChecker*, jule::Ptr<_210e5266a_IdentTypeDecl>&);
inline void _212ceba84_pushReference(_211bc4980_typeChecker*, jule::Ptr<_210e6db2b_StructIns>&);
inline void _212ceeb75_pushReference(_211bc4980_typeChecker*, jule::Ptr<_211031e42_Trait>&);
inline void _211bc5d49_pushReferenceByKind(_211bc4980_typeChecker*, jule::Ptr<_211bb6455_TypeKind>&);
inline void _211bc6212_pushCycleError(_211bc4980_typeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _211bc65b9_checkCrossCycle(_211bc4980_typeChecker*, jule::Any, jule::Str&);
inline jule::Bool _211bc6971_checkIllegalCycles(_211bc4980_typeChecker*, jule::Ptr<_210e5266a_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_211bb6026_Kind> _211bc6d28_fromTypeAlias(_211bc4980_typeChecker*, jule::Ptr<_210e5266a_IdentTypeDecl>&, jule::Ptr<_211bb5762_TypeAlias>&);
inline jule::Ptr<_211034087_Enum> _211bc71d0_fromEnum(_211bc4980_typeChecker*, jule::Ptr<_210e5266a_IdentTypeDecl>&, jule::Ptr<_211034087_Enum>&);
inline jule::Ptr<_211035682_TypeEnum> _211bc7587_fromTypeEnum(_211bc4980_typeChecker*, jule::Ptr<_210e5266a_IdentTypeDecl>&, jule::Ptr<_211035682_TypeEnum>&);
inline jule::Ptr<_211031e42_Trait> _211bc793e_fromTrait(_211bc4980_typeChecker*, jule::Ptr<_210e5266a_IdentTypeDecl>&, jule::Ptr<_211031e42_Trait>&);
inline jule::Bool _211bc7ce6_checkStructIns(_211bc4980_typeChecker*, jule::Ptr<_210e6db2b_StructIns>&, jule::Ptr<_20e7ddc0b_Token>&);
inline void _211bc808d_appendUsedStructReference(_211bc4980_typeChecker*, jule::Ptr<_210e427d1_Struct>&);
inline jule::Ptr<_210e6db2b_StructIns> _211bc8456_buildStructInstance(_211bc4980_typeChecker*, jule::Ptr<_210e5266a_IdentTypeDecl>&, jule::Ptr<_210e427d1_Struct>&);
inline jule::Ptr<_210e6db2b_StructIns> _211bc880d_fromStruct(_211bc4980_typeChecker*, jule::Ptr<_210e5266a_IdentTypeDecl>&, jule::Ptr<_210e427d1_Struct>&);
inline jule::Trait<_211bb6026_Kind> _211bc8b1b_getDef(_211bc4980_typeChecker*, jule::Ptr<_210e5266a_IdentTypeDecl>&);
inline jule::Trait<_211bb6026_Kind> _211bc8e29_buildIdent(_211bc4980_typeChecker*, jule::Ptr<_210e5266a_IdentTypeDecl>);
inline jule::Trait<_211bb6026_Kind> _211bc9237_buildSubIdent(_211bc4980_typeChecker*, jule::Ptr<_210e52cb9_SubIdentTypeDecl>);
inline jule::Ptr<_211bbe6b1_Sptr> _211bc9545_buildSptrFromType(_211bc4980_typeChecker*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Ptr<_211bbe6b1_Sptr> _211bc9853_buildSptr(_211bc4980_typeChecker*, jule::Ptr<_210e5345c_SptrTypeDecl>);
inline jule::Ptr<_211bc2c25_Ptr> _211bc9b61_buildPtrFromType(_211bc4980_typeChecker*, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Ptr<_211bc2c25_Ptr> _211bc9e6e_buildPtr(_211bc4980_typeChecker*, jule::Ptr<_210e53e30_PtrTypeDecl>);
inline jule::Ptr<_211bc011d_Slc> _211bca27c_buildSlc(_211bc4980_typeChecker*, jule::Ptr<_210e53858_SlcTypeDecl>);
inline jule::Ptr<_211bc22b8_Arr> _211bca58a_buildArr(_211bc4980_typeChecker*, jule::Ptr<_210e545b2_ArrTypeDecl>);
inline jule::Ptr<_211bc16c4_Map> _211bca898_buildMap(_211bc4980_typeChecker*, jule::Ptr<_210e54d10_MapTypeDecl>);
inline jule::Ptr<_211bc0b9b_Tuple> _211bcaba6_buildTuple(_211bc4980_typeChecker*, jule::Ptr<_210e53b44_TupleTypeDecl>);
inline jule::Bool _211bcaeb4_checkFnTypes(_211bc4980_typeChecker*, jule::Ptr<_211022c35_FnIns>&);
inline jule::Ptr<_211022c35_FnIns> _211bcb2c2_buildFn(_211bc4980_typeChecker*, jule::Ptr<_210e63db8_FnDecl>);
inline jule::Trait<_211bb6026_Kind> _211bcb5d0_buildByNamespace(_211bc4980_typeChecker*, jule::Ptr<_210e53171_NamespaceTypeDecl>);
inline jule::Ptr<_211bb6455_TypeKind> _211bcb8dd_build(_211bc4980_typeChecker*, jule::Any&);
inline jule::Ptr<_211bb6455_TypeKind> _211bcbbeb_checkDecl(_211bc4980_typeChecker*, jule::Ptr<_210e520a4_TypeDecl>&);
inline void _211bcbe71_check(_211bc4980_typeChecker*, jule::Ptr<_211bba5ad_TypeSymbol>&);
struct _211bc4980_typeChecker {
	jule::Ptr<_211b254c4_Sema> _field_s = jule::Ptr<_211b254c4_Sema>();
	jule::Trait<_211bd2086_Lookup> _field_rootLookup = jule::Trait<_211bd2086_Lookup>();
	jule::Trait<_211bd2086_Lookup> _field_lookup = jule::Trait<_211bd2086_Lookup>();
	jule::Ptr<_211bc3b6b_referencer> _field_referencer = jule::Ptr<_211bc3b6b_referencer>();
	jule::Ptr<_211025b06_ReferenceStack> _field_refers = jule::Ptr<_211025b06_ReferenceStack>();
	jule::Ptr<_20e7ddc0b_Token> _field_errorToken = jule::Ptr<_20e7ddc0b_Token>();
	jule::Slice<jule::Ptr<_210e5e688_GenericDecl>> _field_ignoreGenerics = jule::Slice<jule::Ptr<_210e5e688_GenericDecl>>();
	jule::Slice<jule::Ptr<_211bb5762_TypeAlias>> _field_useGenerics = jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>();
	jule::Bool _field_notPlain = jule::Bool();
	jule::Bool _field_disBuiltin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_211bb5762_TypeAlias> _field_ownerAlias = jule::Ptr<_211bb5762_TypeAlias>();
	jule::Slice<jule::Ptr<_211bb5762_TypeAlias>> _field_bannedGenerics = jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();
	

	_211bc4980_typeChecker(void) = default;

	inline bool operator==(_211bc4980_typeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_rootLookup == _other._field_rootLookup &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_refers == _other._field_refers &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_ignoreGenerics == _other._field_ignoreGenerics &&
			this->_field_useGenerics == _other._field_useGenerics &&
			this->_field_notPlain == _other._field_notPlain &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_selection == _other._field_selection &&
			this->_field_ownerAlias == _other._field_ownerAlias &&
			this->_field_bannedGenerics == _other._field_bannedGenerics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_211bc4980_typeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool static__211bcc5d1_identTypeDecl(jule::Str&, jule::Ptr<_210e5266a_IdentTypeDecl>);
inline jule::Bool static__211bcc922_exist(jule::Str&, jule::Any&);
struct _211bcc191_identTypeLookup {
	

	_211bcc191_identTypeLookup(void) = default;

	inline bool operator==(_211bcc191_identTypeLookup _other) { return true; }

	inline bool operator!=(_211bcc191_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _2123c73a2_FileInfo {
	jule::Ptr<_210e1c811_Ast> _field_Ast = jule::Ptr<_210e1c811_Ast>();
	jule::Slice<_20e4ba377_Log> _field_Errors = jule::Slice<_20e4ba377_Log>();
	

	_2123c73a2_FileInfo(void) = default;

	inline bool operator==(_2123c73a2_FileInfo _other) {
		return 
			this->_field_Ast == _other._field_Ast &&
			this->_field_Errors == _other._field_Errors;
	}

	inline bool operator!=(_2123c73a2_FileInfo _other) { return !this->operator==(_other); }


};
struct _21242be0c_stmt {
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _field_tokens = jule::Slice<jule::Ptr<_20e7ddc0b_Token>>();
	jule::Bool _field_terminated = jule::Bool();
	

	_21242be0c_stmt(void) = default;

	inline bool operator==(_21242be0c_stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_21242be0c_stmt _other) { return !this->operator==(_other); }


};
inline void _21242cdb9_stop(_21242c737_scopeParser*);
inline jule::Bool _21242d12d_stopped(_21242c737_scopeParser*);
inline jule::Bool _21242d392_finished(_21242c737_scopeParser*);
inline jule::Bool _21242d606_isLastSt(_21242c737_scopeParser*);
inline void _21242d925_pushErr(_21242c737_scopeParser*, jule::Ptr<_20e7ddc0b_Token>, jule::Str);
inline void _21242dc44_pushSuggestion(_21242c737_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _21242deb9_insertAsNext(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_21242be0c_stmt> _21242e22d_next(_21242c737_scopeParser*);
inline jule::Ptr<_210e623c2_ScopeTree> _21242e5d5_buildScope(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_210e64d97_VarDecl> _21242e8e3_buildVarSt(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e6524e_RetSt> _21242ec01_buildRetSt(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e658ae_Iter> _21243000e_buildWhileNextIter(_21242c737_scopeParser*, jule::Ptr<_21242be0c_stmt>&);
inline jule::Ptr<_210e66184_WhileKind> _21243031c_buildWhileIterKind(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _21243062a_getRangeKindKeysTokens(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e64d97_VarDecl> _212430938_buildRangeKindKey(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Slice<jule::Ptr<_210e64d97_VarDecl>> _212430c46_buildRangeKindKeys(_21242c737_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>>&);
inline void _212431087_setupRangeKindKeysPlain(_21242c737_scopeParser*, jule::Ptr<_210e66a25_RangeKind>&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline void _2124313d9_setupRangeKindKeysExplicit(_21242c737_scopeParser*, jule::Ptr<_210e66a25_RangeKind>&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline void _212431719_setupRangeKindKeys(_21242c737_scopeParser*, jule::Ptr<_210e66a25_RangeKind>&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e66a25_RangeKind> _212431b6a_buildRangeIterKind(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Any _212432022_buildCommonIterKind(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Ptr<_210e658ae_Iter> _212432330_buildCommonIter(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e658ae_Iter> _21243263d_buildIterSt(_21242c737_scopeParser*, jule::Ptr<_21242be0c_stmt>&);
inline jule::Ptr<_210e66dcc_BreakSt> _21243294b_buildBreakSt(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e67284_ContSt> _212432c59_buildContSt(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e67707_If> _212433067_buildIf(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e67aae_Else> _212433375_buildElse(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e68032_Conditional> _212433683_buildIfElseChain(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e581ba_CoExpr> _212433991_buildCoCallSt(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e5ede7_GotoSt> _212433c9e_buildGotoSt(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e601d3_FallSt> _2124340ac_buildFallSt(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e68708_TypeAliasDecl> _2124343ba_buildTypeAliasSt(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline void _21243482c_pushCaseExpr(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>, jule::Ptr<_20e7ddc0b_Token>, jule::Bool, jule::Slice<jule::Ptr<_210e565c5_Expr>>&);
inline jule::Slice<jule::Ptr<_210e565c5_Expr>> _212434c7d_buildCaseExprs(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::Ptr<_20e7ddc0b_Token>&, jule::Bool);
inline jule::Ptr<_210e623c2_ScopeTree> _21243508b_buildCaseScope(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline std::tuple<jule::Ptr<_210e68b7b_Case>,jule::Bool> _212435443_buildCase(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_210e68b7b_Case>>,jule::Ptr<_210e67aae_Else>> _2124357ea_buildCases(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>, jule::Bool);
inline jule::Ptr<_210e69352_MatchCase> _212435b08_buildMatchCase(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e623c2_ScopeTree> _212435e16_buildScopeSt(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e5ea40_LabelSt> _212436224_buildLabelSt(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _212436532_buildIdSt(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_212445552_assignInfo> _212436840_buildAssignInfo(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e607dd_AssignLeft> _212436b4d_buildAssignL(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Slice<jule::Ptr<_210e607dd_AssignLeft>> _212436e5b_buildAssignLs(_21242c737_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>>&);
inline std::tuple<jule::Ptr<_210e60d2c_AssignSt>,jule::Bool> _212437269_buildPlainAssign(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline std::tuple<jule::Ptr<_210e60d2c_AssignSt>,jule::Bool> _212437577_buildDeclAssign(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline std::tuple<jule::Ptr<_210e60d2c_AssignSt>,jule::Bool> _212437885_buildAssignSt(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e56e66_UseExpr> _212437b93_buildUseExpr(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Any _212437ea1_buildSt(_21242c737_scopeParser*, jule::Ptr<_21242be0c_stmt>&);
inline void _2124382c0_build(_21242c737_scopeParser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::Ptr<_210e623c2_ScopeTree>&);
struct _21242c737_scopeParser {
	jule::Ptr<_212448d80_parser> _field_p = jule::Ptr<_212448d80_parser>();
	jule::Ptr<_210e623c2_ScopeTree> _field_s = jule::Ptr<_210e623c2_ScopeTree>();
	jule::Slice<jule::Ptr<_21242be0c_stmt>> _field_stmts = jule::Slice<jule::Ptr<_21242be0c_stmt>>();
	jule::I64 _field_pos = jule::I64();
	

	_21242c737_scopeParser(void) = default;

	inline bool operator==(_21242c737_scopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_21242c737_scopeParser _other) { return !this->operator==(_other); }


};
inline void _2124394e1_pushErr(_212438be9_exprBuilder*, jule::Ptr<_20e7ddc0b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _212439810_pushSuggestion(_212438be9_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_210e57252_TupleExpr> _212439b1d_buildTuple(_212438be9_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>>&);
inline jule::Ptr<_210e57609_LitExpr> _212439e2b_buildLit(_212438be9_exprBuilder*, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_210e520a4_TypeDecl> _21243a239_buildPrimitiveType(_212438be9_exprBuilder*, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Any _21243a547_buildSingle(_212438be9_exprBuilder*, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_210e5863d_IdentExpr> _21243a855_buildCppLinkedIdent(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e58d47_UnaryExpr> _21243ab63_buildUnary(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e59dd1_SubIdentExpr> _21243ae71_buildObjSubIdent(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e5995d_NsSelectionExpr> _21243b27e_buildNsSubIdent(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e520a4_TypeDecl> _21243b58c_buildType(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Any _21243b89a_buildSubIdent(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e591ee_VariadicExpr> _21243bba8_buildVariadic(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Any _21243beb6_buildOpRight(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e568b1_RangeExpr> _21243c2e6_buildBetweenParentheses(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e595a6_CastExpr> _21243c615_tryBuildCast(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline void _21243c9cd_pushArg(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_210e565c5_Expr>>&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Slice<jule::Ptr<_210e565c5_Expr>> _21243ccdb_buildArgs(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Slice<jule::Ptr<_210e520a4_TypeDecl>> _21243d0e9_buildCallGenerics(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e5a893_FnCallExpr> _21243d54a_buildFnCall(_212438be9_exprBuilder*, jule::Ptr<_20e7ddc0b_Token>&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Any _21243d858_buildParenthesesRange(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e57d13_UnsafeExpr> _21243db66_buildUnsafeExpr(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e63db8_FnDecl> _21243de74_buildAnonFn(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Any _21243e282_buildUnsafe(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline void _21243e64a_pushRangeLitPart(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>, jule::Ptr<_20e7ddc0b_Token>, jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _21243e97a_getBraceRangeLitExprParts(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e5b322_FieldExprPair> _21243ec99_buildFieldExprPair(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e565c5_Expr> _2124400a7_buildStructLitExpr(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Slice<jule::Ptr<_210e565c5_Expr>> _2124403b5_buildStructLitExprs(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e5ba70_StructLit> _2124406e5_buildTypedStructLiteral(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e565c5_Expr> _212440a14_buildBraceLitPart(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e5bee3_BraceLit> _212440d22_buildBraceLit(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Any _212441130_buildBraceRange(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _21244143d_getEnumerableParts(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e5ce7d_SliceExpr> _21244174b_buildSlice(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e5d81e_IndexingExpr> _212441b9c_buildIndexing(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Ptr<_210e5de29_SlicingExpr> _212442241_buildSlicing(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::Ptr<_20e7ddc0b_Token>&, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Any _21244254e_buildBracketRange(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Any _21244285c_buildData(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Any _212442c14_buildBinop(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::I64);
inline jule::Any _212443022_build(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Any _212443330_buildKind(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e565c5_Expr> _21244363d_buildFromTokens(_212438be9_exprBuilder*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
struct _212438be9_exprBuilder {
	jule::Ptr<_212448d80_parser> _field_p = jule::Ptr<_212448d80_parser>();
	

	_212438be9_exprBuilder(void) = default;

	inline bool operator==(_212438be9_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_212438be9_exprBuilder _other) { return !this->operator==(_other); }


};
struct _212445552_assignInfo {
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _field_l = jule::Slice<jule::Ptr<_20e7ddc0b_Token>>();
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _field_r = jule::Slice<jule::Ptr<_20e7ddc0b_Token>>();
	jule::Ptr<_20e7ddc0b_Token> _field_setter = jule::Ptr<_20e7ddc0b_Token>();
	jule::Bool _field_ok = jule::Bool();
	

	_212445552_assignInfo(void) = default;

	inline bool operator==(_212445552_assignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_212445552_assignInfo _other) { return !this->operator==(_other); }


};
inline void _2124491b0_stop(_212448d80_parser*);
inline jule::Bool _212449424_stopped(_212448d80_parser*);
inline void _2124497dc_pushErr(_212448d80_parser*, jule::Ptr<_20e7ddc0b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _212449b0b_pushSuggestion(_212448d80_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_210e565c5_Expr> _212449e19_buildExpr(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e1d8ab_Directive> _21244a227_buildDirective(_212448d80_parser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline void _21244a49c_pushDirective(_212448d80_parser*, jule::Ptr<_210e1d8ab_Directive>);
inline jule::Ptr<_210e623c2_ScopeTree> _21244a854_buildScope(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::Ptr<_20e7ddc0b_Token>);
inline std::tuple<jule::Ptr<_210e520a4_TypeDecl>,jule::Bool> _21244aca5__buildType(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::I64*, jule::Bool);
inline std::tuple<jule::Ptr<_210e520a4_TypeDecl>,jule::Bool> _21244b206_buildType(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_210e68708_TypeAliasDecl> _21244b514_buildTypeAliasDecl(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline void _21244b833_buildVarTypeAndExpr(jule::Ptr<_212448d80_parser>, jule::Ptr<_210e64d97_VarDecl>&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline void _21244bb52_buildVarCommon(jule::Ptr<_212448d80_parser>, jule::Ptr<_210e64d97_VarDecl>&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline void _21244c01a_buildVarBegin(_212448d80_parser*, jule::Ptr<_210e64d97_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e64d97_VarDecl> _21244c328_buildVar(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e5e688_GenericDecl> _21244c636_buildGeneric(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Slice<jule::Ptr<_210e5e688_GenericDecl>> _21244c9dd_buildGenerics(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::Ptr<_20e7ddc0b_Token>&);
inline jule::Ptr<_210e62a98_ParamDecl> _21244cceb_buildSelfParam(_212448d80_parser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline void _21244d1b4_paramTypeBegin(_212448d80_parser*, jule::Ptr<_210e62a98_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline void _21244d4d3_buildParamType(jule::Ptr<_212448d80_parser>, jule::Ptr<_210e62a98_ParamDecl>&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline void _21244d802_buildParamBody(jule::Ptr<_212448d80_parser>, jule::Ptr<_210e62a98_ParamDecl>&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e62a98_ParamDecl> _21244db10_buildParam(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline void _21244dd85_checkParams(_212448d80_parser*, jule::Slice<jule::Ptr<_210e62a98_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_210e62a98_ParamDecl>> _21244e23c_buildParams(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_210e551b7_RetTypeDecl>,jule::Bool> _21244e5e4_buildMultiRetType(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::I64&);
inline std::tuple<jule::Ptr<_210e551b7_RetTypeDecl>,jule::Bool> _21244e99b_buildRetType(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::I64&);
inline jule::Ptr<_210e63db8_FnDecl> _21244edec_buildFnPrototype(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_210e63db8_FnDecl> _21245034d_buildFn(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _21245065b_getUseDeclSelectors(_212448d80_parser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline void _21245097a_buildCppUseDecl(_212448d80_parser*, jule::Ptr<_210e69ae4_UseDecl>&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline void _212450c99_buildStdUseDecl(_212448d80_parser*, jule::Ptr<_210e69ae4_UseDecl>&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline void _2124510b8_buildIdentUseDecl(_212448d80_parser*, jule::Ptr<_210e69ae4_UseDecl>&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline void _2124513d7_parseUseDecl(_212448d80_parser*, jule::Ptr<_210e69ae4_UseDecl>&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e69ae4_UseDecl> _21245178e_buildUseDecl(_212448d80_parser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>, jule::Bool);
inline jule::Ptr<_210e520a4_TypeDecl> _212451b46_buildTypeEnumItemKind(jule::Ptr<_212448d80_parser>, jule::I64&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Slice<jule::Ptr<_210e6b596_TypeEnumItemDecl>> _212451e54_buildTypeEnumItems(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e6b794_TypeEnumDecl> _212452262_buildTypeEnumDecl(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e565c5_Expr> _212452619_buildEnumItemExpr(jule::Ptr<_212448d80_parser>, jule::I64&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Slice<jule::Ptr<_210e6a067_EnumItemDecl>> _212452927_buildEnumItems(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e6aa90_EnumDecl> _212452c35_buildEnumDecl(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Any _212453043_buildNodeEnumDecl(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e6bce4_FieldDecl> _212453351_buildField(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Slice<jule::Ptr<_210e6bce4_FieldDecl>> _21245365e_buildStructDeclFields(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e6c652_StructDecl> _21245396c_buildStructDecl(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline void _212453be2_checkMethodReceiver(_212448d80_parser*, jule::Ptr<_210e63db8_FnDecl>&);
inline jule::Slice<jule::Ptr<_210e63db8_FnDecl>> _212454000_buildTraitMethods(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e6cc5c_TraitDecl> _21245430d_buildTraitDecl(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e63db8_FnDecl> _21245461b_buildCppLinkFn(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e64d97_VarDecl> _212454929_buildCppLinkVar(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e6c652_StructDecl> _212454c37_buildCppLinkStruct(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e68708_TypeAliasDecl> _212455045_buildCppLinkTypeAlias(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e69ae4_UseDecl> _212455353_buildCppLinkUse(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Any _212455661_buildCppLink(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e63db8_FnDecl> _21245596e_getMethod(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline void _212455c8d_parseImplBody(jule::Ptr<_212448d80_parser>, jule::Ptr<_210e6d367_Impl>&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e6d367_Impl> _21245609b_buildImpl(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Any _2124563a9_buildNodeData(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline void _21245662e_applyFnMeta(_212448d80_parser*, jule::Ptr<_210e63db8_FnDecl>&);
inline void _2124568a4_applyMeta(_212448d80_parser*, _210e1d4b0_Node&);
inline void _212456b29_pushUseDecl(jule::Ptr<_212448d80_parser>, jule::Ptr<_210e69ae4_UseDecl>&);
inline jule::Bool _212456e37_pushMetaNodes(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline _210e1d4b0_Node _212457245_parseNode(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline void _2124574ba_appendNode(jule::Ptr<_212448d80_parser>, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline void _21245792c_removeRange(_212448d80_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::Slice<jule::I64>&);
inline void _212457ce5_pushWrongOrderCloseErr(_212448d80_parser*, jule::Ptr<_20e7ddc0b_Token>&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::Slice<jule::I64>&);
inline void _212458257_pushRangeClose(_212448d80_parser*, jule::Ptr<_20e7ddc0b_Token>, jule::Str, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::Slice<jule::I64>&);
inline void _2124584cc_checkRanges(_212448d80_parser*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline void _212458752_parse(jule::Ptr<_212448d80_parser>, jule::Ptr<_20e7e4096_File>&);
struct _212448d80_parser {
	jule::Ptr<_210e1c811_Ast> _field_ast = jule::Ptr<_210e1c811_Ast>();
	jule::Slice<jule::Ptr<_210e1d8ab_Directive>> _field_directives = jule::Slice<jule::Ptr<_210e1d8ab_Directive>>();
	jule::Slice<_20e4ba377_Log> _field_errors = jule::Slice<_20e4ba377_Log>();
	

	_212448d80_parser(void) = default;

	inline bool operator==(_212448d80_parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_212448d80_parser _other) { return !this->operator==(_other); }


};
inline void _21245a501_pushErr(_212459e5c_typeBuilder*, jule::Ptr<_20e7ddc0b_Token>, jule::Str);
inline void _21245a820_pushSuggestion(_212459e5c_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_210e520a4_TypeDecl> _21245aa84_buildPrim(_212459e5c_typeBuilder*);
inline jule::Ptr<_210e520a4_TypeDecl> _21245ace8_buildNamespace(_212459e5c_typeBuilder*);
inline jule::Slice<jule::Ptr<_210e520a4_TypeDecl>> _21245b05c_buildGenerics(_212459e5c_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _21245b2c1_identGenerics(_212459e5c_typeBuilder*);
inline jule::Ptr<_210e520a4_TypeDecl> _21245b535_buildIdent(_212459e5c_typeBuilder*);
inline jule::Ptr<_210e520a4_TypeDecl> _21245b799_buildCppLink(_212459e5c_typeBuilder*);
inline jule::Ptr<_210e520a4_TypeDecl> _21245ba0d_buildFn(_212459e5c_typeBuilder*);
inline jule::Ptr<_210e520a4_TypeDecl> _21245bc72_buildPtr(_212459e5c_typeBuilder*);
inline jule::Ptr<_210e520a4_TypeDecl> _21245bed6_buildSptr(_212459e5c_typeBuilder*);
inline jule::Ptr<_210e520a4_TypeDecl> _21245c24a_buildOp(_212459e5c_typeBuilder*);
inline jule::Ptr<_210e520a4_TypeDecl> _21245c4ae_buildSlc(_212459e5c_typeBuilder*);
inline jule::Ptr<_210e520a4_TypeDecl> _21245c723_buildArr(_212459e5c_typeBuilder*);
inline jule::Ptr<_210e520a4_TypeDecl> _21245caca_buildMap(_212459e5c_typeBuilder*, jule::I64, jule::I64);
inline jule::Ptr<_210e520a4_TypeDecl> _21245cd3e_buildEnumerable(_212459e5c_typeBuilder*);
inline jule::Ptr<_210e520a4_TypeDecl> _21245d0a3_step(_212459e5c_typeBuilder*);
inline std::tuple<jule::Ptr<_210e520a4_TypeDecl>,jule::Bool> _21245d317_build(_212459e5c_typeBuilder*);
struct _212459e5c_typeBuilder {
	jule::Ptr<_212448d80_parser> _field_p = jule::Ptr<_212448d80_parser>();
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _field_tokens = jule::Slice<jule::Ptr<_20e7ddc0b_Token>>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();
	

	_212459e5c_typeBuilder(void) = default;

	inline bool operator==(_212459e5c_typeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_212459e5c_typeBuilder _other) { return !this->operator==(_other); }


};
struct _211c955ab_CompileInfo {
	jule::Bool _field_Prod = jule::Bool();
	jule::Bool _field_Test = jule::Bool();
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_211c955ab_CompileInfo(void) = default;

	inline bool operator==(_211c955ab_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_211c955ab_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _211c96e5e_pushErr(_211c9690e_directiveEval*, jule::Ptr<_20e7ddc0b_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _211c97316_splitOperans(_211c9690e_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Bool _211c97624_evalDirectiveIdent(_211c9690e_directiveEval*, jule::Str);
inline jule::Bool _211c97932_evalDirectivePart(_211c9690e_directiveEval*, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Bool _211c97b96_eval(_211c9690e_directiveEval*);
struct _211c9690e_directiveEval {
	jule::Slice<_20e4ba377_Log> _field_logs = jule::Slice<_20e4ba377_Log>();
	jule::Ptr<_210e1d8ab_Directive> _field_d = jule::Ptr<_210e1d8ab_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_211c9690e_directiveEval(void) = default;

	inline bool operator==(_211c9690e_directiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_211c9690e_directiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_211d89b78_JuleImporter> static__211de8775_New(_211c955ab_CompileInfo);
inline jule::Slice<jule::Ptr<_211b1c378_ImportInfo>> _211e09984_AllPackages(_211d89b78_JuleImporter*);
inline void _211e14b8c_SetModPath(_211d89b78_JuleImporter*, jule::Str);
inline jule::Str _211e39b90_GetModPath(_211d89b78_JuleImporter*);
inline jule::Str _211ee67b8_ModById(_211d89b78_JuleImporter*, jule::I64);
inline jule::Ptr<_211b1c378_ImportInfo> _21200c724_GetImport(_211d89b78_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_210e1c811_Ast>>,jule::Slice<_20e4ba377_Log>> _212017aa3_ImportPackage(_211d89b78_JuleImporter*, jule::Str, jule::Bool);
inline void _212063703_Imported(_211d89b78_JuleImporter*, jule::Ptr<_211b1c378_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_20e4ba377_Log>> _212065837_isPassBuildDirectives(_211d89b78_JuleImporter*, jule::Ptr<_210e1c811_Ast>&);
struct _211d89b78_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_211b1c378_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_211b1c378_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_211d89b78_JuleImporter(void) = default;

	inline bool operator==(_211d89b78_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_211d89b78_JuleImporter _other) { return !this->operator==(_other); }


};
struct _2123c9959_OrderedDefines {
	jule::Slice<jule::Ptr<_210e427d1_Struct>> _field_Structs = jule::Slice<jule::Ptr<_210e427d1_Struct>>();
	jule::Slice<jule::Ptr<_211b43228_Var>> _field_Globals = jule::Slice<jule::Ptr<_211b43228_Var>>();
	

	_2123c9959_OrderedDefines(void) = default;

	inline bool operator==(_2123c9959_OrderedDefines _other) {
		return 
			this->_field_Structs == _other._field_Structs &&
			this->_field_Globals == _other._field_Globals;
	}

	inline bool operator!=(_2123c9959_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool _224de223e_isCommonOrdered(jule::Slice<jule::Ptr<_210e427d1_Struct>>&, jule::Ptr<_210e427d1_Struct>);
inline jule::Bool _224dea665_isCommonOrdered(jule::Slice<jule::Ptr<_211b43228_Var>>&, jule::Ptr<_211b43228_Var>);
inline void _224ddd290_orderCommon(jule::Slice<jule::Ptr<_210e427d1_Struct>>&);
inline void _224dddacb_orderCommon(jule::Slice<jule::Ptr<_211b43228_Var>>&);
inline void static__212245363_orderStructures(jule::Slice<jule::Ptr<_210e427d1_Struct>>&);
inline void static__21225a0c0_orderVars(jule::Slice<jule::Ptr<_211b43228_Var>>&);
struct _211d7c495_defineOrderer {
	

	_211d7c495_defineOrderer(void) = default;

	inline bool operator==(_211d7c495_defineOrderer _other) { return true; }

	inline bool operator!=(_211d7c495_defineOrderer _other) { return !this->operator==(_other); }


};
struct _21251d383_liveTable {
	jule::Slice<jule::Ptr<_211b43228_Var>> _field_vars = jule::Slice<jule::Ptr<_211b43228_Var>>();
	jule::Slice<jule::Ptr<_211022c35_FnIns>> _field_fns = jule::Slice<jule::Ptr<_211022c35_FnIns>>();
	jule::Slice<jule::Ptr<_210e6db2b_StructIns>> _field_structs = jule::Slice<jule::Ptr<_210e6db2b_StructIns>>();
	jule::Slice<jule::Ptr<_211031e42_Trait>> _field_traits = jule::Slice<jule::Ptr<_211031e42_Trait>>();
	

	_21251d383_liveTable(void) = default;

	inline bool operator==(_21251d383_liveTable _other) {
		return 
			this->_field_vars == _other._field_vars &&
			this->_field_fns == _other._field_fns &&
			this->_field_structs == _other._field_structs &&
			this->_field_traits == _other._field_traits;
	}

	inline bool operator!=(_21251d383_liveTable _other) { return !this->operator==(_other); }


};
inline void _21255042b_optimizeChild(jule::Ptr<_21254ee53_scopeDeadCode>, jule::Ptr<_211b0940e_Scope>&);
inline void _2125506c3_optimizeBodyChildExceptional(jule::Ptr<_21254ee53_scopeDeadCode>, jule::Ptr<_211b0940e_Scope>&);
inline void _212550959_optimizeBodyChild(jule::Ptr<_21254ee53_scopeDeadCode>, jule::Ptr<_211b0940e_Scope>&);
inline void _212550bce_optimizeExprModel(jule::Ptr<_21254ee53_scopeDeadCode>, jule::Any&);
inline void _212550daa_eliminateFollowed(_21254ee53_scopeDeadCode*);
inline void _212551130_pushGoto(jule::Ptr<_21254ee53_scopeDeadCode>, jule::Ptr<_211b0a83e_GotoSt>);
inline void _2125513a5_pushLabel(jule::Ptr<_21254ee53_scopeDeadCode>, jule::Ptr<_211b0a652_Label>);
inline void _21255162a_optimizeRangeIter(jule::Ptr<_21254ee53_scopeDeadCode>, jule::Ptr<_211b0a08b_RangeIter>);
inline void _2125518a0_optimizeWhileIter(jule::Ptr<_21254ee53_scopeDeadCode>, jule::Ptr<_211b09d9e_WhileIter>);
inline void _212551b25_optimizeInfIter(jule::Ptr<_21254ee53_scopeDeadCode>, jule::Ptr<_211b09bb2_InfIter>);
inline void _212551d9a_optimizeConditional(jule::Ptr<_21254ee53_scopeDeadCode>, jule::Ptr<_211b099c5_Conditional>);
inline void _212552120_optimizeMatch(jule::Ptr<_21254ee53_scopeDeadCode>, jule::Ptr<_211b0b0e2_Match>);
inline void _212552395_optimizeAssign(jule::Ptr<_21254ee53_scopeDeadCode>, jule::Ptr<_211b0ac18_Assign>);
inline void _21255261a_optimizeMultiAssign(jule::Ptr<_21254ee53_scopeDeadCode>, jule::Ptr<_211b0ae05_MultiAssign>);
inline void _212552890_optimizeStmt(jule::Ptr<_21254ee53_scopeDeadCode>, jule::Any);
inline void _212552a6b_optimizeStmts(jule::Ptr<_21254ee53_scopeDeadCode>);
struct _21254ee53_scopeDeadCode {
	jule::Ptr<_21254ee53_scopeDeadCode> _field_parent = jule::Ptr<_21254ee53_scopeDeadCode>();
	jule::Ptr<_211b0940e_Scope> _field_s = jule::Ptr<_211b0940e_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();
	jule::Ptr<jule::Slice<jule::Ptr<_211b0a652_Label>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_211b0a652_Label>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_211b0a83e_GotoSt>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_211b0a83e_GotoSt>>>();
	jule::Bool _field_except = jule::Bool();
	

	_21254ee53_scopeDeadCode(void) = default;

	inline bool operator==(_21254ee53_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_21254ee53_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _212553dad_exprDeadCode static__2125544a7_new(jule::Ptr<_21254ee53_scopeDeadCode>&);
inline void _21255472c_binary(_212553dad_exprDeadCode*, jule::Ptr<_211017c3b_BinopExprModel>);
inline void _2125549a2_unary(_212553dad_exprDeadCode*, jule::Ptr<_211017e28_UnaryExprModel>);
inline void _212554c27_structureLit(_212553dad_exprDeadCode*, jule::Ptr<_211018302_StructLitExprModel>);
inline void _212554e9c_allocStructure(_212553dad_exprDeadCode*, jule::Ptr<_2110184de_AllocStructLitExprModel>);
inline void _212555222_casting(_212553dad_exprDeadCode*, jule::Ptr<_2110186cb_CastingExprModel>);
inline void _212555497_args(_212553dad_exprDeadCode*, jule::Slice<jule::Any>&);
inline void _21255571c_funcCall(_212553dad_exprDeadCode*, jule::Ptr<_2110188b8_FnCallExprModel>);
inline void _212555992_slice(_212553dad_exprDeadCode*, jule::Ptr<_211018aa5_SliceExprModel>);
inline void _212555c17_array(_212553dad_exprDeadCode*, jule::Ptr<_21101a029_ArrayExprModel>);
inline void _212555e8c_indexing(_212553dad_exprDeadCode*, jule::Ptr<_211018c92_IndexingExprModel>);
inline void _212556212_anonFunc(_212553dad_exprDeadCode*, jule::Ptr<_211018e7e_AnonFnExprModel>);
inline void _212556487_map(_212553dad_exprDeadCode*, jule::Ptr<_211019358_MapExprModel>);
inline void _21255670c_slicing(_212553dad_exprDeadCode*, jule::Ptr<_211019545_SlicingExprModel>);
inline void _212556982_traitSub(_212553dad_exprDeadCode*, jule::Ptr<_211019732_TraitSubIdentExprModel>);
inline void _212556c07_structureSub(_212553dad_exprDeadCode*, jule::Ptr<_211019b50_StructSubIdentExprModel>);
inline void _212556e7c_commonSub(_212553dad_exprDeadCode*, jule::Ptr<_21101a403_CommonSubIdentExprModel>);
inline void _212557202_tuple(_212553dad_exprDeadCode*, jule::Ptr<_21101a5e0_TupleExprModel>);
inline void _212557477_newCall(_212553dad_exprDeadCode*, jule::Ptr<_21101ad93_BuiltinNewCallExprModel>);
inline void _2125576ec_outCall(_212553dad_exprDeadCode*, jule::Ptr<_21101a7cc_BuiltinOutCallExprModel>);
inline void _212557972_outlnCall(_212553dad_exprDeadCode*, jule::Ptr<_21101a9b9_BuiltinOutlnCallExprModel>);
inline void _212557be7_panicCall(_212553dad_exprDeadCode*, jule::Ptr<_21101b080_BuiltinPanicCallExprModel>);
inline void _212557e6c_assertCall(_212553dad_exprDeadCode*, jule::Ptr<_21101b26c_BuiltinAssertCallExprModel>);
inline void _2125581e2_errorCall(_212553dad_exprDeadCode*, jule::Ptr<_21101ba20_BuiltinErrorCallExprModel>);
inline void _212558467_makeCall(_212553dad_exprDeadCode*, jule::Ptr<_21101b459_BuiltinMakeCallExprModel>);
inline void _2125586dc_appendCall(_212553dad_exprDeadCode*, jule::Ptr<_21101b646_BuiltinAppendCallExprModel>);
inline void _212558962_cloneCall(_212553dad_exprDeadCode*, jule::Ptr<_21101aba6_BuiltinCloneCallExprModel>);
inline void _212558bd7_sizeof(_212553dad_exprDeadCode*, jule::Ptr<_21101991e_SizeofExprModel>);
inline void _212558e5c_alignof(_212553dad_exprDeadCode*, jule::Ptr<_21101c180_AlignofExprModel>);
inline void _2125591d2_integratedToStr(_212553dad_exprDeadCode*, jule::Ptr<_21101c559_IntegratedToStrExprModel>);
inline void _212559457_free(_212553dad_exprDeadCode*, jule::Ptr<_21101c933_FreeExprModel>);
inline void _2125596cc_backendEmit(_212553dad_exprDeadCode*, jule::Ptr<_21101c746_BackendEmitExprModel>);
inline void _212559952_optimize(_212553dad_exprDeadCode*, jule::Any&);
struct _212553dad_exprDeadCode {
	jule::Ptr<_21254ee53_scopeDeadCode> _field_s = jule::Ptr<_21254ee53_scopeDeadCode>();
	

	_212553dad_exprDeadCode(void) = default;

	inline bool operator==(_212553dad_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_212553dad_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _20e81ad04_UnsafeBinopExprModel {
	jule::Ptr<_211017c3b_BinopExprModel> _field_Node = jule::Ptr<_211017c3b_BinopExprModel>();
	

	_20e81ad04_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_20e81ad04_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_20e81ad04_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _210340e22_UnsafeIndexingExprModel {
	jule::Ptr<_211018c92_IndexingExprModel> _field_Node = jule::Ptr<_211018c92_IndexingExprModel>();
	

	_210340e22_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_210340e22_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_210340e22_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _21073810a_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Ptr<_211018aa5_SliceExprModel> _field_Elems = jule::Ptr<_211018aa5_SliceExprModel>();
	

	_21073810a_PushToSliceExprModel(void) = default;

	inline bool operator==(_21073810a_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_21073810a_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _210bd39e5_MutSlicingExprModel {
	jule::Ptr<_20e7ddc0b_Token> _field_Token = jule::Ptr<_20e7ddc0b_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Left = jule::Any();
	jule::Any _field_Right = jule::Any();
	

	_210bd39e5_MutSlicingExprModel(void) = default;

	inline bool operator==(_210bd39e5_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_210bd39e5_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _20e858e96_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Any _field_Expr = jule::Any();
	

	_20e858e96_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_20e858e96_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20e858e96_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20ea01baa_scopeOptimizer> static__20e813a33_new(jule::Ptr<_211b0940e_Scope>);
inline void _20e822e3d_setCurrentStmt(_20ea01baa_scopeOptimizer*, jule::Any);
inline void _20e82d08b_optimizeData(_20ea01baa_scopeOptimizer*, jule::Ptr<_211b8a319_Data>);
inline void _20e83a593_optimizeVar(_20ea01baa_scopeOptimizer*, jule::Ptr<_211b43228_Var>);
inline void _20e83b286_optimizeConditional(_20ea01baa_scopeOptimizer*, jule::Ptr<_211b099c5_Conditional>);
inline void _20e858429_buildDefaultConstatTrueCase(_20ea01baa_scopeOptimizer*, jule::Ptr<_211b0b642_Case>, jule::I64&, jule::Ptr<_211b0b0e2_Match>&);
inline void _20e85d0dd_optimizeMatch(_20ea01baa_scopeOptimizer*, jule::Ptr<_211b0b0e2_Match>);
inline void _20e85ea3a_optimizeRangeIter(_20ea01baa_scopeOptimizer*, jule::Ptr<_211b0a08b_RangeIter>);
inline void _20e85ee7a_optimizeWhileIter(_20ea01baa_scopeOptimizer*, jule::Ptr<_211b09d9e_WhileIter>);
inline jule::Bool _20e8927e8_substr(_20ea01baa_scopeOptimizer*, jule::Ptr<_211b0ac18_Assign>);
inline jule::Bool _20e89319a_strInsert(_20ea01baa_scopeOptimizer*, jule::Ptr<_211b0ac18_Assign>);
inline jule::Bool _20e8a7dd5_strAssign(_20ea01baa_scopeOptimizer*, jule::Ptr<_211b0ac18_Assign>);
inline void _20e9379ae_optimizeAssign(_20ea01baa_scopeOptimizer*, jule::Ptr<_211b0ac18_Assign>);
inline void _20e940b93_optimizeMultiAssign(_20ea01baa_scopeOptimizer*, jule::Ptr<_211b0ae05_MultiAssign>);
inline void _20e943cb7_optimizeRet(_20ea01baa_scopeOptimizer*, jule::Ptr<_211b0bb4d_RetSt>);
inline void _20e9455d2_optimizeStmt(_20ea01baa_scopeOptimizer*, jule::Any);
inline void _20e949dcd_optimizeChild(_20ea01baa_scopeOptimizer*, jule::Ptr<_211b0940e_Scope>);
inline void _20e9408eb_optimize(_20ea01baa_scopeOptimizer*);
struct _20ea01baa_scopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_211b0940e_Scope> _field_scope = jule::Ptr<_211b0940e_Scope>();
	

	_20ea01baa_scopeOptimizer(void) = default;

	inline bool operator==(_20ea01baa_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_20ea01baa_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__20e97c1b8_optimize(jule::Any&);
inline jule::Bool _20e980919_strCond(_20eb71225_exprOptimizer*, jule::Ptr<_211017c3b_BinopExprModel>);
inline void _20e9812cc_binary(_20eb71225_exprOptimizer*, jule::Ptr<_211017c3b_BinopExprModel>);
inline void _20e987e1b_unary(_20eb71225_exprOptimizer*, jule::Ptr<_211017e28_UnaryExprModel>);
inline void _20e9907e7_structureLit(_20eb71225_exprOptimizer*, jule::Ptr<_211018302_StructLitExprModel>);
inline void _20e991ee1_allocStructure(_20eb71225_exprOptimizer*, jule::Ptr<_2110184de_AllocStructLitExprModel>);
inline void _20e99e98d_casting(_20eb71225_exprOptimizer*, jule::Ptr<_2110186cb_CastingExprModel>);
inline void _20e9b15a4_args(_20eb71225_exprOptimizer*, jule::Slice<jule::Any>&);
inline void _20e9e5a8e_scope(_20eb71225_exprOptimizer*, jule::Ptr<_211b0940e_Scope>&);
inline void _20e9e9576_funcCall(_20eb71225_exprOptimizer*, jule::Ptr<_2110188b8_FnCallExprModel>);
inline void _20ea03409_slice(_20eb71225_exprOptimizer*, jule::Ptr<_211018aa5_SliceExprModel>);
inline void _20eb48b59_array(_20eb71225_exprOptimizer*, jule::Ptr<_21101a029_ArrayExprModel>);
inline void _20eb5cb7e_indexing(_20eb71225_exprOptimizer*, jule::Ptr<_211018c92_IndexingExprModel>);
inline void _20eb66b22_anonFunc(_20eb71225_exprOptimizer*, jule::Ptr<_211018e7e_AnonFnExprModel>);
inline void _20eb6caa1_map(_20eb71225_exprOptimizer*, jule::Ptr<_211019358_MapExprModel>);
inline void _20eb6db29_slicing(_20eb71225_exprOptimizer*, jule::Ptr<_211019545_SlicingExprModel>);
inline void _20eb5c5b8_traitSub(_20eb71225_exprOptimizer*, jule::Ptr<_211019732_TraitSubIdentExprModel>);
inline void _20eb729c9_structureSub(_20eb71225_exprOptimizer*, jule::Ptr<_211019b50_StructSubIdentExprModel>);
inline void _20eb7ee15_commonSub(_20eb71225_exprOptimizer*, jule::Ptr<_21101a403_CommonSubIdentExprModel>);
inline void _20eb84a1e_tuple(_20eb71225_exprOptimizer*, jule::Ptr<_21101a5e0_TupleExprModel>);
inline void _20eb8a1ea_newCall(_20eb71225_exprOptimizer*, jule::Ptr<_21101ad93_BuiltinNewCallExprModel>);
inline void _20eb8b608_outCall(_20eb71225_exprOptimizer*, jule::Ptr<_21101a7cc_BuiltinOutCallExprModel>);
inline void _20eb8c8b2_outlnCall(_20eb71225_exprOptimizer*, jule::Ptr<_21101a9b9_BuiltinOutlnCallExprModel>);
inline void _20eb8e155_panicCall(_20eb71225_exprOptimizer*, jule::Ptr<_21101b080_BuiltinPanicCallExprModel>);
inline void _20eb92b92_assertCall(_20eb71225_exprOptimizer*, jule::Ptr<_21101b26c_BuiltinAssertCallExprModel>);
inline void _20eb9e9e5_errorCall(_20eb71225_exprOptimizer*, jule::Ptr<_21101ba20_BuiltinErrorCallExprModel>);
inline void _20ebab0c8_makeCall(_20eb71225_exprOptimizer*, jule::Ptr<_21101b459_BuiltinMakeCallExprModel>);
inline void _20ebb5de6_appendCall(_20eb71225_exprOptimizer*, jule::Ptr<_21101b646_BuiltinAppendCallExprModel>);
inline void _20ebdbbec_cloneCall(_20eb71225_exprOptimizer*, jule::Ptr<_21101aba6_BuiltinCloneCallExprModel>);
inline void _20ebde491_sizeof(_20eb71225_exprOptimizer*, jule::Ptr<_21101991e_SizeofExprModel>);
inline void _20ebe3aa0_alignof(_20eb71225_exprOptimizer*, jule::Ptr<_21101c180_AlignofExprModel>);
inline void _20ec0185a_integratedToStr(_20eb71225_exprOptimizer*, jule::Ptr<_21101c559_IntegratedToStrExprModel>);
inline void _20ec14a27_free(_20eb71225_exprOptimizer*, jule::Ptr<_21101c933_FreeExprModel>);
inline void _20ec5587b_backendEmit(_20eb71225_exprOptimizer*, jule::Ptr<_21101c746_BackendEmitExprModel>);
inline void _20ec9e3db_do(_20eb71225_exprOptimizer*);
struct _20eb71225_exprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();
	

	_20eb71225_exprOptimizer(void) = default;

	inline bool operator==(_20eb71225_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_20eb71225_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_212528712_Optimizer> static__21248c005_New(jule::Ptr<_2120ac0a9_IR>&);
inline void _212460c43_optimizeGlobal(_212528712_Optimizer*, jule::Ptr<_211b43228_Var>&);
inline void _2124baa8e_optimizeFunction(_212528712_Optimizer*, jule::Ptr<_211020084_Fn>&);
inline void _2124bae46_optimizeStruct(_212528712_Optimizer*, jule::Ptr<_210e427d1_Struct>&);
inline void _2124bc8c6_optimizeGlobals(_212528712_Optimizer*, jule::Ptr<_211b202d2_Package>&);
inline void _2124c3a31_optimizeFunctions(_212528712_Optimizer*, jule::Ptr<_211b202d2_Package>&);
inline void _2124c9d89_optimizeStructs(_212528712_Optimizer*, jule::Ptr<_211b202d2_Package>&);
inline void _2124d2ee6_optimizePackage(_212528712_Optimizer*, jule::Ptr<_211b202d2_Package>&);
inline void _2124dd5ea_Optimize(_212528712_Optimizer*);
struct _212528712_Optimizer {
	jule::Ptr<_2120ac0a9_IR> _field_ir = jule::Ptr<_2120ac0a9_IR>();
	

	_212528712_Optimizer(void) = default;

	inline bool operator==(_212528712_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_212528712_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__21255bc84_Reset(void);
inline void static__21255d04e_Print(jule::Str, jule::Str);
struct _21255cd62_AnsiEscape {
	

	_21255cd62_AnsiEscape(void) = default;

	inline bool operator==(_21255cd62_AnsiEscape _other) { return true; }

	inline bool operator!=(_21255cd62_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__21255e704_LogFlat(_20e4ba377_Log&);
inline void static__21255e913_LogError(_20e4ba377_Log&);
inline void static__21255eb22_Log(_20e4ba377_Log&);
inline void static__21255ed31_PrintLogs(jule::Slice<_20e4ba377_Log>&);
struct _21255e44b_Logger {
	

	_21255e44b_Logger(void) = default;

	inline bool operator==(_21255e44b_Logger _other) { return true; }

	inline bool operator!=(_21255e44b_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _212b39c13_Unix(_212b3985b_AbsTime*);
struct _212b3985b_AbsTime {
	jule::U64 _field_Day = jule::U64();
	jule::U64 _field_WeekDay = jule::U64();
	jule::U64 _field_YearDay = jule::U64();
	jule::U64 _field_Month = jule::U64();
	jule::U64 _field_Year = jule::U64();
	jule::U64 _field_Second = jule::U64();
	jule::U64 _field_Minute = jule::U64();
	jule::U64 _field_Hour = jule::U64();
	

	_212b3985b_AbsTime(void) = default;

	inline bool operator==(_212b3985b_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_212b3985b_AbsTime _other) { return !this->operator==(_other); }


};
inline _212b39eee_Time static__212b3a395_Unix(jule::U64);
inline _212b39eee_Time static__212b3a593_Now(void);
inline jule::U64 _212b3a9e4_Unix(_212b39eee_Time*);
inline jule::U64 _212b3ac58_Day(_212b39eee_Time*);
inline jule::U64 _212b3aebc_Month(_212b39eee_Time*);
inline jule::U64 _212b3b231_Year(_212b39eee_Time*);
inline jule::U64 _212b3b495_Second(_212b39eee_Time*);
inline jule::U64 _212b3b709_Minute(_212b39eee_Time*);
inline jule::U64 _212b3b96d_Hour(_212b39eee_Time*);
inline _212b3985b_AbsTime _212b3bbd2_Abs(_212b39eee_Time*);
struct _212b39eee_Time {
	jule::U64 _field_sec = jule::U64();
	

	_212b39eee_Time(void) = default;

	inline bool operator==(_212b39eee_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_212b39eee_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_212aae7e2_scopeCoder> static__212aaee0d_new(jule::Ptr<_212b406ec_ObjectCoder>&);
inline void _212ab0183_rangeIndexIter(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0a08b_RangeIter>&);
inline void _212ab0408_rangeHashmapIter(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0a08b_RangeIter>&);
inline void _212ab067d_ifCase(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b095eb_If>);
inline void _212ab0903_conditional(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b099c5_Conditional>);
inline void _212ab0b78_infIter(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b09bb2_InfIter>);
inline void _212ab0ded_whileIter(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b09d9e_WhileIter>);
inline void _212ab1173_rangeIter(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0a08b_RangeIter>);
inline void _212ab13e8_cont(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0a278_ContSt>);
inline void _212ab166d_label(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0a652_Label>);
inline void _212ab18e3_gotoSt(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0a83e_GotoSt>);
inline void _212ab1b68_postfix(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0aa2b_Postfix>);
inline void _212ab1ddd_assign(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0ac18_Assign>);
inline void _212ab2163_multiAssign(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0ae05_MultiAssign>);
inline jule::Fn<void(void)> _212ab2471_matchExpr(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0b0e2_Match>);
inline void _212ab2790_case(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0b0e2_Match>, jule::Ptr<_211b0b642_Case>);
inline void _212ab2a15_matchSt(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0b0e2_Match>);
inline void _212ab2c8a_fallSt(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0b961_FallSt>);
inline void _212ab3010_breakSt(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0a465_BreakSt>);
inline void _212ab3285_retWithVars(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0bb4d_RetSt>);
inline void _212ab350a_retTuple(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0bb4d_RetSt>);
inline void _212ab3780_retWithExprs(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0bb4d_RetSt>);
inline void _212ab3a05_retSt(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0bb4d_RetSt>);
inline void _212ab4000_var(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b43228_Var>);
inline void _212ab4275_st(jule::Ptr<_212aae7e2_scopeCoder>, jule::Any);
inline void _212ab44ea_scopeStmts(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0940e_Scope>&);
inline void _212ab4770_scope(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211b0940e_Scope>);
inline void _212ab49e5_funcScope(jule::Ptr<_212aae7e2_scopeCoder>, jule::Ptr<_211022c35_FnIns>);
struct _212aae7e2_scopeCoder {
	jule::Ptr<_212b406ec_ObjectCoder> _field_oc = jule::Ptr<_212b406ec_ObjectCoder>();
	

	_212aae7e2_scopeCoder(void) = default;

	inline bool operator==(_212aae7e2_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_212aae7e2_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_212ab7333_exprCoder> static__212ab772e_new(jule::Ptr<_212b406ec_ObjectCoder>&);
inline void _212ab79a4_string(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_210ea46cd_Const>&);
inline void _212ab7c29_boolean(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_210ea46cd_Const>&);
inline void _212ab7e05_nilLit(jule::Ptr<_212ab7333_exprCoder>);
inline jule::Bool _212ab8213_ftoaSpecialCases(jule::Ptr<_212ab7333_exprCoder>, jule::F64&);
inline void _212ab8488_float32(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_210ea46cd_Const>&);
inline void _212ab870d_float64(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_210ea46cd_Const>&);
inline void _212ab8a2c_constant(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_210ea46cd_Const>, jule::Bool);
inline void _212ab8de5_divByZeroBinary(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_20e7ddc0b_Token>&, jule::Ptr<_211017a4e_OperandExprModel>&, jule::Ptr<_211017a4e_OperandExprModel>&);
inline void _212ab916a_unsafeBinary(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_211017c3b_BinopExprModel>);
inline void _212ab93e0_binary(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_211017c3b_BinopExprModel>);
inline void _212ab9665_var(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_211b43228_Var>);
inline void _212ab98da_structureIns(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_210e6db2b_StructIns>);
inline void _212ab9b60_unary(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_211017e28_UnaryExprModel>);
inline void _212ab9dd5_structureLit(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_211018302_StructLitExprModel>);
inline void _212aba15a_allocStructure(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_2110184de_AllocStructLitExprModel>);
inline void _212aba3d0_casting(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_2110186cb_CastingExprModel>);
inline void _212aba655_args(jule::Ptr<_212ab7333_exprCoder>, jule::Slice<jule::Any>);
inline void _212aba8ca_modelForCall(jule::Ptr<_212ab7333_exprCoder>, jule::Any);
inline void _212abab50_pushCallInf(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_2110188b8_FnCallExprModel>&);
inline jule::Bool _212abae5d_isWrapped(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_2110188b8_FnCallExprModel>&);
inline void _212abb1d3_pureFuncCall(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_2110188b8_FnCallExprModel>&);
inline void _212abb458_funcCall(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_2110188b8_FnCallExprModel>);
inline void _212abb6cd_slice(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_211018aa5_SliceExprModel>);
inline void _212abb953_indexing(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_211018c92_IndexingExprModel>);
inline void _212abbbc8_unsafeIndexing(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_210340e22_UnsafeIndexingExprModel>);
inline void _212abbe4d_anonFunc(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_211018e7e_AnonFnExprModel>);
inline void _212abc1c3_map(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_211019358_MapExprModel>);
inline void _212abc448_slicing(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_211019545_SlicingExprModel>);
inline void _212abc6bd_traitSub(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_211019732_TraitSubIdentExprModel>);
inline void _212abc943_structureSub(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_211019b50_StructSubIdentExprModel>);
inline void _212abcbb8_commonIdent(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101a216_CommonIdentExprModel>);
inline void _212abce3d_commonSub(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101a403_CommonSubIdentExprModel>);
inline void _212abd1b3_array(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101a029_ArrayExprModel>);
inline void _212abd438_funcInsCommon(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_211022c35_FnIns>);
inline void _212abd6ad_funcIns(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_211022c35_FnIns>);
inline void _212abd933_tuple(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101a5e0_TupleExprModel>);
inline void _212abdba8_newCall(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101ad93_BuiltinNewCallExprModel>);
inline void _212abde2d_outCall(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101a7cc_BuiltinOutCallExprModel>);
inline void _212abe1a3_outlnCall(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101a9b9_BuiltinOutlnCallExprModel>);
inline void _212abe428_panicCall(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101b080_BuiltinPanicCallExprModel>);
inline void _212abe69d_assertCall(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101b26c_BuiltinAssertCallExprModel>);
inline void _212abe923_errorCall(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101ba20_BuiltinErrorCallExprModel>);
inline void _212abeb98_copyCall(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101b833_BuiltinCopyCallExprModel>);
inline void _212abee1d_makeCallSlice(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101b459_BuiltinMakeCallExprModel>&);
inline void _212ac0193_makeCallStr(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101b459_BuiltinMakeCallExprModel>&);
inline void _212ac0418_makeCall(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101b459_BuiltinMakeCallExprModel>);
inline void _212ac068d_pushToSlice(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21073810a_PushToSliceExprModel>);
inline void _212ac0913_appendCall(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101b646_BuiltinAppendCallExprModel>);
inline void _212ac0b88_cloneCall(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101aba6_BuiltinCloneCallExprModel>);
inline void _212ac0e0d_sizeof(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101991e_SizeofExprModel>);
inline void _212ac1183_alignof(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101c180_AlignofExprModel>);
inline jule::Str _212ac1491_runeLit(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101c36c_RuneExprModel>);
inline void _212ac1716_structureStatic(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_211019d3c_StructStaticIdentExprModel>);
inline void _212ac198b_integratedToStr(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101c559_IntegratedToStrExprModel>);
inline void _212ac1c11_backendEmit(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101c746_BackendEmitExprModel>);
inline void _212ac1e86_free(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_21101c933_FreeExprModel>);
inline void _212ac220b_mutSlicing(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_210bd39e5_MutSlicingExprModel>);
inline void _212ac2481_strInsertBegin(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_20e858e96_StrInsertBeginExprModel>);
inline void _212ac2706_model(jule::Ptr<_212ab7333_exprCoder>, jule::Any);
inline void _212ac297b_expr(jule::Ptr<_212ab7333_exprCoder>, jule::Any);
inline void _212ac2c01_val(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_211b8b392_Value>);
inline void _212ac2e76_initExpr(jule::Ptr<_212ab7333_exprCoder>, jule::Ptr<_211bb6455_TypeKind>);
struct _212ab7333_exprCoder {
	jule::Ptr<_212b406ec_ObjectCoder> _field_oc = jule::Ptr<_212b406ec_ObjectCoder>();
	

	_212ab7333_exprCoder(void) = default;

	inline bool operator==(_212ab7333_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_212ab7333_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__212ac5781_cloneFuncDecl(jule::Ptr<_210e427d1_Struct>&);
inline jule::Str static__212ac5a28_cloneFuncDef(jule::Ptr<_210e427d1_Struct>&);
struct _212ac5484_deriveCoder {
	

	_212ac5484_deriveCoder(void) = default;

	inline bool operator==(_212ac5484_deriveCoder _other) { return true; }

	inline bool operator!=(_212ac5484_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_212ac6908_TestCoder> static__212ac6d7b_New(jule::Ptr<_212b406ec_ObjectCoder>&);
inline jule::Ptr<_211b1c378_ImportInfo> _212ac70e0_findTestingPackage(jule::Ptr<_212ac6908_TestCoder>);
inline void _212ac7365_appendTest(jule::Ptr<_212ac6908_TestCoder>, jule::Ptr<_211022c35_FnIns>);
inline void _212ac75da_appendPackageTests(jule::Ptr<_212ac6908_TestCoder>, jule::Ptr<_211b202d2_Package>&);
inline jule::Bool _212ac784e_readyTestingPackage(jule::Ptr<_212ac6908_TestCoder>);
inline void _212ac7a2a_callTmReset(jule::Ptr<_212ac6908_TestCoder>);
inline void _212ac7c06_callTmFailed(jule::Ptr<_212ac6908_TestCoder>);
inline void _212ac7dd2_callTmSkipped(jule::Ptr<_212ac6908_TestCoder>);
inline void _212ac80ad_Serialize(jule::Ptr<_212ac6908_TestCoder>);
struct _212ac6908_TestCoder {
	jule::Ptr<_210e6db2b_StructIns> _field_t = jule::Ptr<_210e6db2b_StructIns>();
	jule::Ptr<_211020084_Fn> _field_tmReset = jule::Ptr<_211020084_Fn>();
	jule::Ptr<_211020084_Fn> _field_tmFailed = jule::Ptr<_211020084_Fn>();
	jule::Ptr<_211020084_Fn> _field_tmSkipped = jule::Ptr<_211020084_Fn>();
	jule::Ptr<_212b406ec_ObjectCoder> _field_oc = jule::Ptr<_212b406ec_ObjectCoder>();
	

	_212ac6908_TestCoder(void) = default;

	inline bool operator==(_212ac6908_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_212ac6908_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__212ac9565_toOut(jule::Str&, jule::Uintptr);
inline jule::Str static__212ac9950_toLocal(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__212ac9be7_func(jule::Ptr<_211020084_Fn>&);
inline jule::Str static__212ac9e8e_funcIns(jule::Ptr<_211022c35_FnIns>&);
inline jule::Str static__212aca236_traitDecl(jule::Ptr<_211031e42_Trait>);
inline jule::Str static__212aca4cd_param(jule::Ptr<_21101d747_Param>&);
inline jule::Str static__212aca775_structure(jule::Ptr<_210e427d1_Struct>&);
inline jule::Str static__212acaa1c_structureIns(jule::Ptr<_210e6db2b_StructIns>&);
inline jule::Str static__212acacb4_field(jule::Ptr<_210e34c9b_Field>&);
inline jule::Str static__212acb05b_var(jule::Ptr<_211b43228_Var>);
inline jule::Str static__212acb303_iterBegin(jule::Uintptr);
inline jule::Str static__212acb59a_iterEnd(jule::Uintptr);
inline jule::Str static__212acb842_iterNext(jule::Uintptr);
inline jule::Str static__212acbad9_label(jule::Str&);
inline jule::Str static__212acbd81_matchEnd(jule::Uintptr);
inline jule::Str static__212acc128_caseBegin(jule::Uintptr);
struct _212ac9059_identCoder {
	

	_212ac9059_identCoder(void) = default;

	inline bool operator==(_212ac9059_identCoder _other) { return true; }

	inline bool operator!=(_212ac9059_identCoder _other) { return !this->operator==(_other); }


};
struct _212b40323_SerializationInfo {
	jule::Str _field_Compiler = jule::Str();
	jule::Str _field_CompilerCommand = jule::Str();
	

	_212b40323_SerializationInfo(void) = default;

	inline bool operator==(_212b40323_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_212b40323_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _212b40510_traitHash {
	jule::Ptr<_211031e42_Trait> _field_t = jule::Ptr<_211031e42_Trait>();
	jule::Ptr<_210e6db2b_StructIns> _field_s = jule::Ptr<_210e6db2b_StructIns>();
	jule::I64 _field_i = jule::I64();
	

	_212b40510_traitHash(void) = default;

	inline bool operator==(_212b40510_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_212b40510_traitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _212b46505_Str(_212b4623b_customType*);
inline jule::Bool _212b46813_Equals(jule::Ptr<_212b4623b_customType>, jule::Ptr<_211bb6455_TypeKind>);
struct _212b4623b_customType {
	jule::Str _field_kind = jule::Str();
	

	_212b4623b_customType(void) = default;

	inline bool operator==(_212b4623b_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_212b4623b_customType _other) { return !this->operator==(_other); }


};
inline jule::Str static__212b47061_toType(jule::Str);
inline jule::Str static__212b47308_prim(jule::Ptr<_211bbae2c_Prim>);
inline jule::Str static__212b475a0_tuple(jule::Ptr<_211bc0b9b_Tuple>);
inline jule::Str static__212b47847_asSptr(jule::Str);
inline jule::Str static__212b47ade_asPtr(jule::Str);
inline jule::Str static__212b47d86_sptr(jule::Ptr<_211bbe6b1_Sptr>);
inline jule::Str static__212b4812d_ptr(jule::Ptr<_211bc2c25_Ptr>);
inline jule::Str static__212b483c5_enumDecl(jule::Ptr<_211034087_Enum>);
inline jule::Str static__212b4866c_typeEnumDecl(jule::Ptr<_211035682_TypeEnum>);
inline jule::Str static__212b48914_asSlice(jule::Ptr<_211bb6455_TypeKind>);
inline jule::Str static__212b48bab_slice(jule::Ptr<_211bc011d_Slc>);
inline jule::Str static__212b48e53_map(jule::Ptr<_211bc16c4_Map>);
inline jule::Str static__212b491ea_traitIdent(jule::Str);
inline jule::Str static__212b49492_traitDecl(jule::Ptr<_211031e42_Trait>);
inline jule::Str static__212b49739_structure(jule::Ptr<_210e427d1_Struct>);
inline jule::Str static__212b499d1_structureIns(jule::Ptr<_210e6db2b_StructIns>);
inline jule::Str static__212b49c78_array(jule::Ptr<_211bc22b8_Arr>);
inline jule::Str static__212b4a2b7_paramIns(jule::Ptr<_211021d66_ParamIns>&);
inline jule::Str static__212b4a806_funcInsResult(jule::Ptr<_211022c35_FnIns>&);
inline jule::Str static__212b4aa9d_anonFunc(jule::Ptr<_211022c35_FnIns>);
inline jule::Str static__212b4ad45_func(jule::Ptr<_211022c35_FnIns>);
inline jule::Str static__212b4b0dc_kind(jule::Ptr<_211bb6455_TypeKind>);
struct _212b46a33_typeCoder {
	

	_212b46a33_typeCoder(void) = default;

	inline bool operator==(_212b46a33_typeCoder _other) { return true; }

	inline bool operator!=(_212b46a33_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _22524257d_Name(_225450e0c_Flag*);
inline jule::Str _2252426b0_What(_225450e0c_Flag*);
inline void _225451292_Reset(_225450e0c_Flag*);
inline jule::I32 _2254513c4_Short(_225450e0c_Flag*);
struct _225450e0c_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::I64 _field_default = jule::I64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::I64> _field_data = jule::Ptr<jule::I64>();
	

	_225450e0c_Flag(void) = default;

	inline bool operator==(_225450e0c_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_225450e0c_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _225454608_Name(_225454aae_Flag*);
inline jule::Str _225454d9a_What(_225454aae_Flag*);
inline void _225454ecc_Reset(_225454aae_Flag*);
inline jule::I32 _22545510e_Short(_225454aae_Flag*);
struct _225454aae_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::U64 _field_default = jule::U64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::U64> _field_data = jule::Ptr<jule::U64>();
	

	_225454aae_Flag(void) = default;

	inline bool operator==(_225454aae_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_225454aae_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _225458189_Name(_225458640_Flag*);
inline jule::Str _22545892b_What(_225458640_Flag*);
inline void _225458a5d_Reset(_225458640_Flag*);
inline jule::I32 _225458b90_Short(_225458640_Flag*);
struct _225458640_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::F64 _field_default = jule::F64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::F64> _field_data = jule::Ptr<jule::F64>();
	

	_225458640_Flag(void) = default;

	inline bool operator==(_225458640_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_225458640_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _22545bc5e_Name(_22545c215_Flag*);
inline jule::Str _22545c501_What(_22545c215_Flag*);
inline void _22545c633_Reset(_22545c215_Flag*);
inline jule::I32 _22545c765_Short(_22545c215_Flag*);
struct _22545c215_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::Bool _field_default = jule::Bool();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::Bool> _field_data = jule::Ptr<jule::Bool>();
	

	_22545c215_Flag(void) = default;

	inline bool operator==(_22545c215_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_22545c215_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _2254607e0_Name(_225460c96_Flag*);
inline jule::Str _225461082_What(_225460c96_Flag*);
inline void _2254611b4_Reset(_225460c96_Flag*);
inline jule::I32 _2254612e6_Short(_225460c96_Flag*);
struct _225460c96_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::Str _field_default = jule::Str();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::Str> _field_data = jule::Ptr<jule::Str>();
	

	_225460c96_Flag(void) = default;

	inline bool operator==(_225460c96_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_225460c96_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_212b7bcdd_FlagSet> static__212b7c0c9_New(void);
inline jule::Trait<_2129e44e6_CommonFlag> _212b7c55d_FindFlag(_212b7bcdd_FlagSet*, jule::Str);
inline jule::Trait<_2129e44e6_CommonFlag> _212b7c86b_FindFlagShort(_212b7bcdd_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_2129e44e6_CommonFlag>> _212b7cad0_Flags(_212b7bcdd_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _212b7cddd_Parse(_212b7bcdd_FlagSet*, jule::Slice<jule::Str>);
inline void _212b7d0b9_Reset(_212b7bcdd_FlagSet*);
inline jule::Ptr<_225460c96_Flag> _2254da628_addFlagCommon(_212b7bcdd_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_22545c215_Flag> _2254e4302_addFlagCommon(_212b7bcdd_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _2254d856b_AddVar(_212b7bcdd_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _2254e2256_AddVar(_212b7bcdd_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _212b7bcdd_FlagSet {
	jule::Slice<jule::Trait<_2129e44e6_CommonFlag>> _field_flags = jule::Slice<jule::Trait<_2129e44e6_CommonFlag>>();
	

	_212b7bcdd_FlagSet(void) = default;

	inline bool operator==(_212b7bcdd_FlagSet _other) {
		return 
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_212b7bcdd_FlagSet _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_2120ac0a9_IR>,jule::Slice<_20e4ba377_Log>> static__2107519c5_Build(jule::Str, jule::I64);
inline void _211c7ba59_appendStructs(_2120ac0a9_IR*, jule::Ptr<_211b202d2_Package>&, jule::Slice<jule::Ptr<_210e427d1_Struct>>&);
inline jule::Slice<jule::Ptr<_210e427d1_Struct>> _2120752c5_GetAllStructures(_2120ac0a9_IR*);
inline void _21208874a_appendGlobals(_2120ac0a9_IR*, jule::Ptr<_211b202d2_Package>&, jule::Slice<jule::Ptr<_211b43228_Var>>&);
inline jule::Slice<jule::Ptr<_211b43228_Var>> _21209c165_GetAllGlobals(_2120ac0a9_IR*);
inline void _2120a3d3c_Order(_2120ac0a9_IR*);
struct _2120ac0a9_IR {
	jule::Str _field_Root = jule::Str();
	jule::Slice<jule::Str> _field_Passes = jule::Slice<jule::Str>();
	jule::Ptr<_211b202d2_Package> _field_Main = jule::Ptr<_211b202d2_Package>();
	jule::Slice<jule::Ptr<_211b1c378_ImportInfo>> _field_Used = jule::Slice<jule::Ptr<_211b1c378_ImportInfo>>();
	_2123c9959_OrderedDefines _field_Ordered = _2123c9959_OrderedDefines();
	

	_2120ac0a9_IR(void) = default;

	inline bool operator==(_2120ac0a9_IR _other) {
		return 
			this->_field_Root == _other._field_Root &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Main == _other._field_Main &&
			this->_field_Used == _other._field_Used &&
			this->_field_Ordered == _other._field_Ordered;
	}

	inline bool operator!=(_2120ac0a9_IR _other) { return !this->operator==(_other); }


};
inline jule::Str _210e37c9e_Str(_210e6db2b_StructIns*);
inline jule::Bool _210e444b4_Equals(jule::Ptr<_210e6db2b_StructIns>, jule::Ptr<_211bb6455_TypeKind>);
inline jule::Bool _210e4562a_Same(_210e6db2b_StructIns*, jule::Ptr<_210e6db2b_StructIns>);
inline jule::Ptr<_211020084_Fn> _210e4797e_FindMethod(_210e6db2b_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_210e49e48_FieldIns> _210e48c9e_FindField(_210e6db2b_StructIns*, jule::Str);
inline jule::Ptr<_211b43228_Var> _210e4b7b8_FindStatic(_210e6db2b_StructIns*, jule::Str);
struct _210e6db2b_StructIns {
	jule::Bool _field_Checked = jule::Bool();
	jule::Ptr<_210e427d1_Struct> _field_Decl = jule::Ptr<_210e427d1_Struct>();
	jule::Slice<jule::Ptr<_211bb4c28_InsGeneric>> _field_Generics = jule::Slice<jule::Ptr<_211bb4c28_InsGeneric>>();
	jule::Slice<jule::Ptr<_210e49e48_FieldIns>> _field_Fields = jule::Slice<jule::Ptr<_210e49e48_FieldIns>>();
	jule::Slice<jule::Ptr<_211b43228_Var>> _field_Statics = jule::Slice<jule::Ptr<_211b43228_Var>>();
	jule::Slice<jule::Ptr<_211020084_Fn>> _field_Methods = jule::Slice<jule::Ptr<_211020084_Fn>>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Ptr<_211025b06_ReferenceStack> _field_Refers = jule::Ptr<_211025b06_ReferenceStack>();
	_210e4420b_Operators _field_Operators = _210e4420b_Operators();
	

	_210e6db2b_StructIns(void) = default;

	inline bool operator==(_210e6db2b_StructIns _other) {
		return 
			this->_field_Checked == _other._field_Checked &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Statics == _other._field_Statics &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Operators == _other._field_Operators;
	}

	inline bool operator!=(_210e6db2b_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21251d64c_ObjectDeadCode> static__21251da9d_new(jule::Ptr<_2120ac0a9_IR>&);
inline jule::Bool _224e25c45_isLive(jule::Ptr<_21251d64c_ObjectDeadCode>, jule::Ptr<_211031e42_Trait>&);
inline jule::Bool _224e2b19b_isLive(jule::Ptr<_21251d64c_ObjectDeadCode>, jule::Ptr<_211022c35_FnIns>&);
inline jule::Bool _224e35480_isLive(jule::Ptr<_21251d64c_ObjectDeadCode>, jule::Ptr<_210e6db2b_StructIns>&);
inline jule::Bool _224e39d8b_isLive(jule::Ptr<_21251d64c_ObjectDeadCode>, jule::Ptr<_211b43228_Var>&);
inline void _224e262ea_pushLive(jule::Ptr<_21251d64c_ObjectDeadCode>, jule::Ptr<_211031e42_Trait>);
inline void _224e30238_pushLive(jule::Ptr<_21251d64c_ObjectDeadCode>, jule::Ptr<_211022c35_FnIns>);
inline void _224e33390_pushLive(jule::Ptr<_21251d64c_ObjectDeadCode>, jule::Ptr<_210e6db2b_StructIns>);
inline void _224e3d7a7_pushLive(jule::Ptr<_21251d64c_ObjectDeadCode>, jule::Ptr<_211b43228_Var>);
inline void _21254bbec_setReferencesAsLive(jule::Ptr<_21251d64c_ObjectDeadCode>, jule::Ptr<_211025b06_ReferenceStack>&);
inline void _21254be72_inits(jule::Ptr<_21251d64c_ObjectDeadCode>, jule::Ptr<_211b202d2_Package>&);
inline void _21254c1e7_collectLivePackage(jule::Ptr<_21251d64c_ObjectDeadCode>, jule::Ptr<_211b202d2_Package>&);
inline void _21254c3c3_collectLive(jule::Ptr<_21251d64c_ObjectDeadCode>);
inline void _21254c648_removeDeadGlobals(jule::Ptr<_21251d64c_ObjectDeadCode>, jule::Slice<jule::Ptr<_211b43228_Var>>&);
inline void _21254c8bd_removeDeadFns(jule::Ptr<_21251d64c_ObjectDeadCode>, jule::Slice<jule::Ptr<_211020084_Fn>>&);
inline void _21254cb43_removeDeadStructs(jule::Ptr<_21251d64c_ObjectDeadCode>, jule::Slice<jule::Ptr<_210e427d1_Struct>>&);
inline void _21254cdb8_removeDeadTraits(jule::Ptr<_21251d64c_ObjectDeadCode>, jule::Slice<jule::Ptr<_211031e42_Trait>>&);
inline void _21254d13d_removeDeadsFile(jule::Ptr<_21251d64c_ObjectDeadCode>, jule::Ptr<_211b855ab_SymbolTable>&);
inline void _21254d3b3_removeDeadsPackage(jule::Ptr<_21251d64c_ObjectDeadCode>, jule::Ptr<_211b202d2_Package>&);
inline void _21254d58e_removeDeads(jule::Ptr<_21251d64c_ObjectDeadCode>);
inline void _21254d76a_elimanate(jule::Ptr<_21251d64c_ObjectDeadCode>);
struct _21251d64c_ObjectDeadCode {
	_21251d383_liveTable _field_live = _21251d383_liveTable();
	jule::Ptr<_2120ac0a9_IR> _field_ir = jule::Ptr<_2120ac0a9_IR>();
	

	_21251d64c_ObjectDeadCode(void) = default;

	inline bool operator==(_21251d64c_ObjectDeadCode _other) {
		return 
			this->_field_live == _other._field_live &&
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_21251d64c_ObjectDeadCode _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_212b406ec_ObjectCoder> static__212b23724_New(jule::Ptr<_2120ac0a9_IR>&, _212b40323_SerializationInfo);
inline void _212b23a54_write(jule::Ptr<_212b406ec_ObjectCoder>, jule::Str);
inline void _212b242e6_addIndent(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b252d6_doneIndent(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b25a34_indent(jule::Ptr<_212b406ec_ObjectCoder>);
inline jule::I64 _212b14da8_findTypeOffset(_212b406ec_ObjectCoder*, jule::Ptr<_211031e42_Trait>, jule::Ptr<_211bb6455_TypeKind>);
inline void _212b26e20_locInfo(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_20e7ddc0b_Token>&);
inline void _212b016e1_head(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b24a44_links(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b0501e_prepareStructures(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b11bb8_iterPackages(jule::Ptr<_212b406ec_ObjectCoder>, jule::Fn<void(jule::Ptr<_211b202d2_Package>&)>);
inline void _212b1224b_buildTraitMap(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b1311a_traitDecls(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b137d0_structurePlainDecl(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_210e427d1_Struct>&);
inline void _212b13e95_structurePlainDecls(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b1465a_fieldDecl(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_210e49e48_FieldIns>&);
inline void _212b063d8_structureDestructor(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_210e6db2b_StructIns>&);
inline void _212b40c91_structureDeriveDefsDecls(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_210e6db2b_StructIns>&);
inline void _212b40dc3_structureOperatorEq(jule::Ptr<_212b406ec_ObjectCoder>, jule::Str&, jule::Ptr<_210e6db2b_StructIns>&);
inline void _212b41005_structureOperatorNotEq(jule::Ptr<_212b406ec_ObjectCoder>, jule::Str&, jule::Ptr<_210e6db2b_StructIns>&);
inline void _212b41137_structureOperator(jule::Ptr<_212b406ec_ObjectCoder>, jule::Str&, jule::Ptr<_211022c35_FnIns>&, jule::Str);
inline void _212b41269_structureOperators(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_210e6db2b_StructIns>&);
inline void _212b4139b_structureInsDecl(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_210e6db2b_StructIns>&);
inline void _212b414cd_structureDecl(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_210e427d1_Struct>&);
inline void _212b41610_structureDecls(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b41742_paramsDecls(jule::Ptr<_212b406ec_ObjectCoder>, jule::Slice<jule::Ptr<_211021d66_ParamIns>>&);
inline void _212b41874_funcHead(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_211022c35_FnIns>&, jule::Bool);
inline void _212b419a6_funcDecl(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_211020084_Fn>&, jule::Bool);
inline void _212b41ad8_funcDecls(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b41c1a_traitDataTypes(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b41d4c_paramIns(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_211021d66_ParamIns>&);
inline void _212b42039_paramsIns(jule::Ptr<_212b406ec_ObjectCoder>, jule::Slice<jule::Ptr<_211021d66_ParamIns>>&);
inline void _212b42358_varInitExpr(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_211b43228_Var>&, jule::Fn<void(void)>);
inline void _212b425cd_var(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_211b43228_Var>);
inline void _212b42853_func(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_211020084_Fn>&);
inline void _212b42a2e_traitWrappers(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b42c0a_traitDatas(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b42dd6_globals(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b430b2_decls(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b43337_structureMethods(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_210e6db2b_StructIns>&);
inline void _212b435ac_structureDeriveDefs(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_210e6db2b_StructIns>&);
inline void _212b43832_structureOstream(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_210e6db2b_StructIns>&);
inline void _212b43aa7_structureIns(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_210e6db2b_StructIns>&);
inline void _212b43d2c_structure(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_210e427d1_Struct>&);
inline void _212b44008_structures(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b441d4_funcs(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b44459_pushInit(jule::Ptr<_212b406ec_ObjectCoder>, jule::Ptr<_211b202d2_Package>&);
inline void _212b44635_initCaller(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b44811_end(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b449dc_serializeHead(jule::Ptr<_212b406ec_ObjectCoder>);
inline void _212b44bb8_Serialize(jule::Ptr<_212b406ec_ObjectCoder>);
struct _212b406ec_ObjectCoder {
	jule::Str _field_Obj = jule::Str();
	jule::Ptr<_2120ac0a9_IR> _field_ir = jule::Ptr<_2120ac0a9_IR>();
	_212b40323_SerializationInfo _field_info = _212b40323_SerializationInfo();
	jule::Slice<jule::Ptr<_212b40510_traitHash>> _field_tmap = jule::Slice<jule::Ptr<_212b40510_traitHash>>();
	jule::Str _field_indentBuffer = jule::Str();
	jule::Ptr<_212ab7333_exprCoder> _field_ec = jule::Ptr<_212ab7333_exprCoder>();
	jule::Ptr<_212aae7e2_scopeCoder> _field_sc = jule::Ptr<_212aae7e2_scopeCoder>();
	

	_212b406ec_ObjectCoder(void) = default;

	inline bool operator==(_212b406ec_ObjectCoder _other) {
		return 
			this->_field_Obj == _other._field_Obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indentBuffer == _other._field_indentBuffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_212b406ec_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _225474eca_parseInteger(_212b7e4b6_argParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _22547d0b0_parseInteger(_212b7e4b6_argParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _212b7ecad_getData(_212b7e4b6_argParser*);
inline jule::VoidExceptional _212b80000_processFlag(_212b7e4b6_argParser*, jule::Trait<_2129e44e6_CommonFlag>&);
inline jule::VoidExceptional _212b80275_singleDash(_212b7e4b6_argParser*, jule::Str&);
inline jule::VoidExceptional _212b804ea_doubleDash(_212b7e4b6_argParser*, jule::Str&);
inline jule::VoidExceptional _212b806c6_tryArg(_212b7e4b6_argParser*);
inline jule::VoidExceptional _212b808a2_parse(_212b7e4b6_argParser*);
struct _212b7e4b6_argParser {
	_212b7bcdd_FlagSet _field_set = _212b7bcdd_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();
	

	_212b7e4b6_argParser(void) = default;

	inline bool operator==(_212b7e4b6_argParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_212b7e4b6_argParser _other) { return !this->operator==(_other); }


};
inline void _20c746094_Free(void*);
inline jule::Str _20d380749_BytePtrToStr(jule::U8*);
inline jule::I64 _20c5516da_GetLastErrno(void);
inline jule::I64 _20d380eca_Stat(jule::U8*, struct stat*);
inline jule::I64 _20d38110c_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _20d38123e_Getcwd(jule::U8*, jule::U64);
inline DIR* _20d381371_Opendir(jule::U8*);
inline struct dirent* _20d3814a3_Readdir(DIR*);
inline jule::I64 _20d381816_Closedir(DIR*);
inline jule::I64 _20d381bac_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _20d381cde_Rmdir(jule::U8*);
inline jule::I64 _20d381e21_Unlink(jule::U8*);
inline jule::I64 _20d3be04b_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _20d3be436_Read(jule::I64, void*, jule::U64);
inline jule::I64 _20d3be7aa_Close(jule::I64);
inline jule::I64 _20d3beb95_Write(jule::I64, void*, jule::U64);
inline void _20d3beda4_Exit(jule::I64);
inline jule::I64 _20d42d9b2_getLastOsError(void);
inline jule::Slice<jule::Str> _20d4546ca_Args(void);
inline jule::Exceptional<jule::Str> _20d454b4d_WorkingDir(void);
inline jule::Exceptional<jule::Str> _20d455a94_getwd(void);
inline jule::Bool _20e2e9409_IsLetter(jule::I32);
inline jule::Bool _20e36b7bc_is16(jule::Slice<_20e369c0a_Range16>, jule::U16);
inline jule::Bool _20e36bb0d_is32(jule::Slice<_20e36a17d_Range32>, jule::U32);
inline jule::Bool _20e36c3a0_isExcludingLatin(jule::Ptr<_20e36a601_RangeTable>, jule::I32);
inline jule::Bool _20e36c647_IsUpper(jule::I32);
inline std::tuple<jule::I32,jule::I64> _20e430e69_DecodeRune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _20e431288_DecodeRuneStr(jule::Str);
inline std::tuple<jule::I32,jule::I64> _20e431530_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _20e4322cd_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _20e43261e_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _20e432b5d_RuneCountStr(jule::Str);
inline jule::Bool _20e432e05_RuneStart(jule::U8);
inline jule::Slice<jule::U8> _20e4439e8_Stobs(jule::Str&);
inline void _20e444147_PushToStrBuffer(jule::Str&, jule::Slice<jule::U8>);
inline jule::I64 _20e442e26_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _20e444554_FindLastByteStr(jule::Str&, jule::U8);
inline jule::Str _20e437ed7_Repeat(jule::Str, jule::I64);
inline jule::Bool _20e434511_hasPrefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _20e4446b9_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _20e444884_hasSuffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _20e444b92_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _20e44507c_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _20e4458b8_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _20e445c09_FindLast(jule::Str, jule::Str);
inline jule::I64 _20e446ea2_findRune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _20e4477dd_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _20e448602_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _20e448d2d_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _20e44916e_Contains(jule::Str, jule::Str);
inline jule::Bool _20e449b42_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _20e449e83_Count(jule::Str, jule::Str);
inline jule::Str _20e44a417_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _20e44747a_trimLeft(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _20e44b4c3_TrimLeft(jule::Str, jule::Str);
inline void _20e44b77b_trimRight(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _20e44be0d_Trim(jule::Str, jule::Str);
inline jule::Str _20e44c24e_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _20d4a8e38_Clean(jule::Str);
inline jule::Str _20d4ac58a_FromSlash(jule::Str);
inline jule::Str _20d4b1cdc_Join(jule::Slice<jule::Str>);
inline jule::Str _20d4be2a0_Ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _20d4c0cb8_Abs(jule::Str);
inline jule::Str _20d499d6e_Base(jule::Str);
inline jule::Str _20d49e7d0_Dir(jule::Str);
inline jule::Str _20d4a311e_VolumeName(jule::Str);
inline jule::Bool _20d4d0712_IsPathSep(jule::U8);
inline jule::Bool _20d4d420a_IsAbs(jule::Str);
inline jule::I64 _20d4a2173_volumeNameLen(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _20d4a5c48_abs(jule::Str);
inline jule::Str _20d4a87a6_join(jule::Slice<jule::Str>);
inline jule::I64 _20c60157b_getLastFsError(void);
inline jule::I64 _20e519c67_getLastProcessError(void);
inline jule::Slice<char*> _20e51cebd_strSliceToCstrSlice(jule::Slice<jule::Str>);
inline jule::I64 _20e51d41e_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _20e51d809_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _20e51e420_Exit(jule::I64);
inline jule::Str _20e51e61d_Executable(void);
inline jule::Bool _20e4ad755_IsStdHeaderPath(jule::Str);
inline jule::Bool _20e4ad887_IsValidHeaderExt(jule::Str);
inline jule::Bool _20e4adada_IsValidCppExt(jule::Str);
inline jule::Str _20e4ba7b7_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _20e4baaa3_argToStr(jule::Any);
inline jule::I64 _20e4bad4a_findNextFmt(jule::Str);
inline jule::Str _20e4bb1d0_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20e4bc29c_IsTopDirective(jule::Str);
inline jule::Bool _20e4bd6cc_IsWindows(jule::Str);
inline jule::Bool _20e4bd985_IsDarwin(jule::Str);
inline jule::Bool _20e4bdc2c_IsLinux(jule::Str);
inline jule::Bool _20e4be04b_IsI386(jule::Str);
inline jule::Bool _20e4be2e3_IsAmd64(jule::Str);
inline jule::Bool _20e4be58a_IsArm64(jule::Str);
inline jule::Bool _20e4be832_IsUnix(jule::Str);
inline jule::Bool _20e4beba6_Is32Bit(jule::Str);
inline jule::Bool _20e4bee4d_Is64Bit(jule::Str);
inline void _20e4cc06a_init(void);
inline jule::Bool _20e7de415_IsUnaryOp(jule::Str);
inline jule::Bool _20e7de701_IsBinOp(jule::Str);
inline jule::Bool _20e7decb7_IsStr(jule::Str);
inline jule::Bool _20e7e005e_IsRawStr(jule::Str);
inline jule::Bool _20e7e0306_IsRune(jule::Str);
inline jule::Bool _20e7e0922_IsBool(jule::Str);
inline jule::Bool _20e7e0bb9_IsFloat(jule::Str);
inline jule::Bool _20e7e0e61_IsNum(jule::Str);
inline jule::Bool _20e7e14a0_IsIgnoreIdent(jule::Str);
inline jule::Bool _20e7e1747_IsAnonIdent(jule::Str);
inline jule::Bool _20e7e1c86_IsSpace(jule::I32);
inline jule::Bool _20e7e21d7_IsLetter(jule::I32);
inline jule::Bool _20e7e2726_IsDecimal(jule::U8);
inline jule::Bool _20e7e29bd_IsBinary(jule::U8);
inline jule::Bool _20e7e2c65_IsOctal(jule::U8);
inline jule::Bool _20e7e300c_IsHex(jule::U8);
inline jule::Bool _20e7e32a4_IsAssign(jule::U64);
inline jule::Bool _20e7e354b_IsPostfixOp(jule::Str);
inline jule::Bool _20e7e37e3_IsAssignOp(jule::Str);
inline jule::Ptr<_20e7e4096_File> _20e7e55c5_NewFileSet(jule::Str);
inline _20e4ba377_Log _20e7e6e01_makeErr(jule::I64, jule::I64, jule::Ptr<_20e7e4096_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20e7e7286_bytesHasPrefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _20e7e75c7_floatFmtE(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20e7e795c_floatFmtP(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20e7e7c9d_floatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20e7e80de_floatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20e7e8430_floatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20e7e8881_floatNum(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20e7e8b28_commonNum(jule::Slice<jule::U8>&);
inline jule::Str _20e7e8dc0_binaryNum(jule::Slice<jule::U8>&);
inline jule::Bool _20e7e9211_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _20e7e9552_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _20e7e9893_isFloatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _20e7e9bd4_isFloatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _20e7ea025_isFloatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20e7ea476_octalNum(jule::Slice<jule::U8>&);
inline jule::Str _20e7ea71d_hexNum(jule::Slice<jule::U8>&);
inline jule::Str _20e7eaa5e_hexEscape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20e7ead06_bigUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _20e7eb0c0_littleUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _20e7eb279_hexByteEscape(jule::Slice<jule::U8>&);
inline jule::Str _20e7eb510_byteEscape(jule::Slice<jule::U8>&);
inline jule::Slice<_20e4ba377_Log> _20e801009_Lex(jule::Ptr<_20e7e4096_File>, jule::I64);
inline void _2110175dc_lshiftUnsig(_210ea46cd_Const&, _210ea46cd_Const&);
inline void _2110178d9_rshiftUnsig(_210ea46cd_Const&, _210ea46cd_Const&);
inline jule::I64 _211aaea68_LeadingZeros64(jule::U64);
inline jule::I64 _211ab0abe_TrailingZeros(jule::U64);
inline jule::I64 _211ab14b5_TrailingZeros32(jule::U32);
inline jule::I64 _211ab175c_TrailingZeros64(jule::U64);
inline jule::I64 _211ab6ed2_Len32(jule::U32);
inline jule::I64 _211ab7279_Len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _211ab7e39_Add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _211ab95bc_Mul64(jule::U64, jule::U64);
inline jule::U32 _2119daca2_F32Bits(jule::F32);
inline jule::F32 _2119db08d_F32FromBits(jule::U32);
inline jule::U64 _2119db335_F64Bits(jule::F64);
inline jule::F64 _2119db654_F64FromBits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _2119ddc61_Frexp(jule::F64);
inline jule::F64 _211a4b593_NaN(void);
inline jule::Bool _211a4c4c8_IsNaN(jule::F64);
inline jule::F64 _211a4de69_Inf(jule::I64);
inline jule::Bool _211a547cc_IsInf(jule::F64, jule::I64);
inline std::tuple<jule::F64,jule::I64> _211a55dd8_normalize(jule::F64);
inline jule::F64 _211a660a2_Log(jule::F64);
inline jule::F64 _211a6ca26_Abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _211ac2e66_Modf(jule::F64);
inline jule::F64 _211ac372a_Log2(jule::F64);
inline jule::Str _2115327e9_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _211546ea1_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _2115a498c_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _2116c9dd1_floatInfo&);
inline jule::Slice<jule::U8> _2115cb387_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _20e36ca21_decimalSlice, jule::I64, jule::U8);
inline void _2115cd554_roundShortest(_211b0544e_decimal&, jule::U64, jule::I64, _2116c9dd1_floatInfo&);
inline jule::Slice<jule::U8> _2115dc651_fmtE(jule::Slice<jule::U8>, jule::Bool, _20e36ca21_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _2115dcd05_fmtF(jule::Slice<jule::U8>, jule::Bool, _20e36ca21_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _2115ddc90_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _2116c9dd1_floatInfo&);
inline jule::Slice<jule::U8> _2116a2848_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _2116c9dd1_floatInfo&);
inline jule::I64 _2116cae37_min(jule::I64, jule::I64);
inline jule::I64 _2116d1316_max(jule::I64, jule::I64);
inline jule::U8 _21173c086_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _21175bec9_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _21177e56d_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _21180b1ee_ParseInt(jule::Str, jule::I64, jule::I64);
inline std::tuple<jule::F64,jule::Bool> _2118cb214_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _2119196a3_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _2116db145_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _211523851_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _21196801a_readFloat(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _2115b2b43_atof64exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _211612687_atof32exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F64,jule::I64> _211785c5b_atofHex(jule::Str, _2116c9dd1_floatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _21180b81a_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _21185c096_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _211899d1a_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _211969ba9_ParseFloat(jule::Str, jule::I64);
inline void _2119c62cb_ryuFtoaFixed32(_20e36ca21_decimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _2119ccb1d_ryuFtoaFixed64(_20e36ca21_decimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _211592a24_formatDecimal(_20e36ca21_decimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _211675ce4_ryuFtoaShortest(_20e36ca21_decimalSlice&, jule::U64, jule::I64, _2116c9dd1_floatInfo&);
inline jule::I64 _211707cee_mulByLog2Log10(jule::I64);
inline jule::I64 _211b04052_mulByLog10Log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _211b04184_computeBounds(jule::U64, jule::I64, _2116c9dd1_floatInfo&);
inline void _211b043c6_ryuDigits(_20e36ca21_decimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _211b04508_ryuDigits32(_20e36ca21_decimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _211b0463a_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _211b0476c_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _211b0489e_divisibleByPow5(jule::U64, jule::I64);
inline std::tuple<jule::U32,jule::U32> _211b049d1_divmod1e9(jule::U64);
inline void _211b05eaa_trim(_211b0544e_decimal&);
inline void _211b060dc_rightShift(_211b0544e_decimal&, jule::U64);
inline jule::Bool _211b0621e_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _211b06351_leftShift(_211b0544e_decimal&, jule::U64);
inline jule::Bool _211b06483_shouldRoundUp(_211b0544e_decimal&, jule::I64);
inline jule::Str _211b07011_FmtUint(jule::U64, jule::I64);
inline jule::Str _211b07143_FmtInt(jule::I64, jule::I64);
inline jule::Str _211b07275_Itoa(jule::I64);
inline jule::Str _211b073a7_small(jule::I64);
inline jule::Bool _211b074d9_isPowerOfTwo(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _211b0761b_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _21113a8b9_RealKindOf(jule::Str);
inline jule::I64 _2111420eb_BitsizeOf(jule::Str);
inline jule::Str _211166384_IntFromBits(jule::I64);
inline jule::Str _211178297_UintFromBits(jule::I64);
inline jule::Str _2111a22b0_FloatFromBits(jule::I64);
inline jule::Bool _21133d2e7_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _21135c37c_BitsizeOfFloat(jule::F64);
inline jule::I64 _211412b2a_BitsizeOfInt(jule::I64);
inline jule::I64 _21142a8bd_BitsizeOfUint(jule::U64);
inline void _21142b0e9_UpdateTarget(void);
inline void _2114386ab_init(void);
inline jule::F64 _2114b2a10_Min(jule::Str);
inline jule::F64 _2114ba83c_Max(jule::Str);
inline jule::Bool _2114c734e_IsI8Compatible(jule::Str);
inline jule::Bool _2114d3844_IsI16Compatible(jule::Str);
inline jule::Bool _21150390d_IsI32Compatible(jule::Str);
inline jule::Bool _211509eca_IsI64Compatible(jule::Str);
inline jule::Bool _211112ce2_IsU8Compatible(jule::Str);
inline jule::Bool _2110b8dec_IsU16Compatible(jule::Str);
inline jule::Bool _21118eed4_IsU32Compatible(jule::Str);
inline jule::Bool _211190a51_IsU64Compatible(jule::Str);
inline jule::Bool _21137d205_IsF32Compatible(jule::Str);
inline jule::Bool _21137e338_IsF64Compatible(jule::Str);
inline jule::Bool _211384492_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _2113895eb_IsI16Greater(jule::Str);
inline jule::Bool _211503d70_IsI32Greater(jule::Str);
inline jule::Bool _211114d8d_IsI64Greater(jule::Str);
inline jule::Bool _21133cb54_IsU16Greater(jule::Str);
inline jule::Bool _211b080cd_IsU32Greater(jule::Str);
inline jule::Bool _211b08210_IsU64Greater(jule::Str);
inline jule::Bool _211b08342_IsF32Greater(jule::Str);
inline jule::Bool _211b08474_IsF64Greater(jule::Str);
inline jule::Bool _211b085a6_IsGreater(jule::Str, jule::Str);
inline jule::Bool _211b089e6_IsSigInt(jule::Str);
inline jule::Bool _211b08b28_IsUnsigInt(jule::Str);
inline jule::Bool _211b08c5a_IsInt(jule::Str);
inline jule::Bool _211b08d8c_IsFloat(jule::Str);
inline jule::Bool _211b08ebe_IsNum(jule::Str);
inline jule::Bool _211b09101_IsSigNum(jule::Str);
inline jule::Bool _211b5b2c9_IsAscii(jule::I32);
inline jule::I32 _211b5b40b_ToRune(jule::Slice<jule::U8>);
inline jule::Str _211b73225_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _211b734cd_ToStr(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _211b73775_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _211b73a83_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _211b73dc4_strEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _211c4b6d8_findFormatPrefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _211c4be9c_getFormatRange(jule::I64&, jule::Slice<jule::U8>&);
inline void _211c2d2d0_fmtByDefault(jule::Str&, jule::Any&);
inline void _211c2cab5_applyFmtByDefault(jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline void _211c3138d_applyFmt(jule::Slice<jule::U8>&, jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Str _211c43889_format(jule::Str&, jule::Slice<jule::Any>);
inline jule::Str _211c6a32d_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _211024d47_parameterUsesGenerics(jule::Ptr<_21101d747_Param>&, jule::Slice<jule::Ptr<_210e5e688_GenericDecl>>&);
inline jule::Ptr<_211bba5ad_TypeSymbol> _211027322_buildType(jule::Ptr<_210e520a4_TypeDecl>);
inline jule::Ptr<_211b8b392_Value> _21102760d_buildExpr(jule::Ptr<_210e565c5_Expr>);
inline jule::Ptr<_211bb5762_TypeAlias> _2110278a5_buildTypeAlias(jule::Ptr<_210e68708_TypeAliasDecl>);
inline jule::Ptr<_210e34c9b_Field> _211027bc4_buildField(jule::Ptr<_210e6bce4_FieldDecl>);
inline jule::Slice<jule::Ptr<_210e34c9b_Field>> _211027e6b_buildFields(jule::Slice<jule::Ptr<_210e6bce4_FieldDecl>>&);
inline jule::Ptr<_210e427d1_Struct> _211028213_buildStruct(jule::Ptr<_210e6c652_StructDecl>);
inline jule::Ptr<_21101d747_Param> _2110284aa_buildParam(jule::Ptr<_210e62a98_ParamDecl>);
inline jule::Slice<jule::Ptr<_21101d747_Param>> _21102882e_buildParams(jule::Slice<jule::Ptr<_210e62a98_ParamDecl>>&);
inline jule::Ptr<_21101d082_RetType> _211028ac6_buildRetType(jule::Ptr<_210e551b7_RetTypeDecl>);
inline jule::Ptr<_211020084_Fn> _211028d6d_buildFn(jule::Ptr<_210e63db8_FnDecl>);
inline jule::Slice<jule::Ptr<_211020084_Fn>> _211029115_buildMethods(jule::Slice<jule::Ptr<_210e63db8_FnDecl>>&);
inline jule::Ptr<_211031e42_Trait> _2110293ac_buildTrait(jule::Ptr<_210e6cc5c_TraitDecl>);
inline jule::Ptr<_211033592_EnumItem> _211029654_buildEnumItem(jule::Ptr<_210e6a067_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_211033592_EnumItem>> _2110298eb_buildEnumItems(jule::Slice<jule::Ptr<_210e6a067_EnumItemDecl>>&);
inline jule::Ptr<_211034087_Enum> _211029b93_buildEnum(jule::Ptr<_210e6aa90_EnumDecl>);
inline jule::Ptr<_2110350bb_TypeEnumItem> _21102a0e4_buildTypeEnumItem(jule::Ptr<_210e6b596_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_2110350bb_TypeEnumItem>> _21102a38b_buildTypeEnumItems(jule::Slice<jule::Ptr<_210e6b596_TypeEnumItemDecl>>&);
inline jule::Ptr<_211035682_TypeEnum> _21102a633_buildTypeEnum(jule::Ptr<_210e6b794_TypeEnumDecl>);
inline jule::Ptr<_211b43228_Var> _21102a8ca_buildVar(jule::Ptr<_210e64d97_VarDecl>);
inline jule::Slice<jule::Ptr<_211b43228_Var>> _21102ab72_buildVars(jule::Slice<jule::Ptr<_210e64d97_VarDecl>>);
inline jule::Ptr<_2110b6658_Impl> _21102ae19_buildImpl(jule::Ptr<_210e6d367_Impl>);
inline jule::Bool _211093811_matchConstraint(jule::Str&, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211095406_isBuiltinConstraint(jule::Str&);
inline jule::Ptr<_211b0c214_scopeChecker> _21109e6c9_newScopeCheckerBase(jule::Ptr<_211b254c4_Sema>&, jule::Ptr<_211022c35_FnIns>);
inline jule::Ptr<_211b0c214_scopeChecker> _2110a0257_newScopeChecker(jule::Ptr<_211b254c4_Sema>&, jule::Ptr<_211022c35_FnIns>);
inline jule::Ptr<_211b0bd3a_scopeLabel> _2110a1115_findLabelParent(jule::Str, jule::Ptr<_211b0c214_scopeChecker>);
inline jule::Bool _21109525d_modelIsGotoScope(jule::Any, jule::Ptr<_211b0940e_Scope>&);
inline jule::Bool _2110a20d3_stmtIsGotoScope(jule::Any&, jule::Ptr<_211b0940e_Scope>&);
inline jule::I64 _2110a2e91_countMatchType(jule::Ptr<_211b0b0e2_Match>&, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Slice<jule::Ptr<_211b8a319_Data>> _2110b0c4b_getDatasFromTupleData(jule::Ptr<_211b8a319_Data>&);
inline jule::Slice<jule::Any> _2110b3b94_getExprModels(jule::Any&);
inline jule::Bool _2110b46cd_checkMut(jule::Ptr<_211b254c4_Sema>&, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211b8a319_Data>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Bool _2110b525b_checkAssign(jule::Ptr<_211b254c4_Sema>&, jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211b8a319_Data>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Bool _2110b08c7_isValidAstStForNextSt(jule::Any&);
inline jule::Bool _2110626d1_isValidStForNextSt(jule::Any&);
inline jule::Bool _21109de8c_stmtIsDef(jule::Any&);
inline jule::Ptr<_211b43228_Var> _211b19a90_findVarInPackage(jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_211bb5762_TypeAlias> _211b19ebe_findTypeAliasInPackage(jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_210e427d1_Struct> _211b1a3a9_findStructInPackage(jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_211020084_Fn> _211b1a81b_findFnInPackage(jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_211031e42_Trait> _211b1ab29_findTraitInPackage(jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>&, jule::Str);
inline jule::Ptr<_211034087_Enum> _211b1ae6a_findEnumInPackage(jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>&, jule::Str);
inline jule::Ptr<_211035682_TypeEnum> _211b1b2ab_findTypeEnumInPackage(jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>&, jule::Str);
inline jule::Any _211b1b7a6_defByIdentPackage(jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>&, jule::Str&, jule::Bool);
inline jule::Bool _211b228ab_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _211b23615_isValidModelForRef(jule::Any&);
inline _20e4ba377_Log _211b23aaa_compilerErr(jule::Ptr<_20e7ddc0b_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _211b23deb_impIsLookupable(jule::Ptr<_211b1c378_ImportInfo>&, jule::Str);
inline void _211b241e8_appendRetVars(jule::Slice<jule::Ptr<_211b43228_Var>>&, jule::Ptr<_211022c35_FnIns>&);
inline void _211b244a1_appendParamVars(jule::Slice<jule::Ptr<_211b43228_Var>>&, jule::Ptr<_211022c35_FnIns>&);
inline void _211b2477b_appendGenericTypeAliases(jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>&, jule::Ptr<_211022c35_FnIns>&);
inline jule::Ptr<_211b855ab_SymbolTable> _211b24acd_findFile(jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>&, jule::Ptr<_20e7e4096_File>&);
inline void _211b25040_pushSugggestion(_20e4ba377_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _211b646bc_traitHasReferenceReceiver(jule::Ptr<_211031e42_Trait>&);
inline jule::Bool _211b5b6e7_floatAssignable(jule::Str, jule::Ptr<_211b8a319_Data>&);
inline jule::Bool _211b5b829_sigAssignable(jule::Str, jule::Ptr<_211b8a319_Data>&);
inline jule::Bool _211b72e17_unsigAssignable(jule::Str, jule::Ptr<_211b8a319_Data>&);
inline jule::Bool _211b73049_intAssignable(jule::Str, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_210e1d8ab_Directive> _211bb0b03_findDirective(jule::Slice<jule::Ptr<_210e1d8ab_Directive>>&, jule::Str);
inline jule::Any _211bb0e88_findBuiltinsImport(jule::Str, jule::Ptr<_211b1c378_ImportInfo>);
inline void _211bb1197_fitBitsize(jule::Ptr<_211b8a319_Data>&);
inline void _211bb1494_makeStructLitAlloc(jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211018302_StructLitExprModel>&);
inline jule::Ptr<_211b43228_Var> _211bb17d5_buildErrorVar(jule::Ptr<_211b0940e_Scope>&, jule::Ptr<_210e5a893_FnCallExpr>&);
inline jule::Any _211bb1b26_findBuiltinsSema(jule::Str, jule::Ptr<_211b254c4_Sema>);
inline jule::Bool _211bb1dbd_isOkForShifting(jule::Ptr<_211b8a319_Data>&);
inline jule::Bool _211bb2275_isInstancedStruct(jule::Ptr<_210e6db2b_StructIns>);
inline jule::Bool _211bb25d8_isPtrArithmeticCompatible(jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211b8a319_Data>&);
inline void _211bb282a_applyCastKindModel(jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211bb6455_TypeKind>&);
inline void _211bb2ad3_applyCastKind(jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Ptr<_211b8a319_Data> _211bb2cd1_buildVoidData(void);
inline jule::Str _211bb309a_checkDataForIntegerIndexing(jule::Ptr<_211b8a319_Data>&);
inline void _211bb3364_applyCastModelByEnum(jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211034087_Enum>);
inline void _211bb361c_castConstByType(jule::Str&, jule::Ptr<_211b8a319_Data>&);
inline void _211bb3b28_updateModelToGenericIns(jule::Any&, jule::Ptr<_211022c35_FnIns>&);
inline jule::Bool _211bb3d6a_pushSubIdentFromExpr(jule::Any, jule::Ptr<_210e52cb9_SubIdentTypeDecl>&);
inline jule::Bool _211bccd1d_kindUsesGenerics(jule::Any&, jule::Slice<jule::Ptr<_210e5e688_GenericDecl>>&);
inline jule::Bool _211bcd1a3_hasDirective(jule::Slice<jule::Ptr<_210e1d8ab_Directive>>&, jule::Str);
inline jule::Bool _211bcd44a_canGetPtr(jule::Ptr<_211b8a319_Data>&);
inline jule::Bool _211bcd769_isValidForSptrType(jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211bcda11_isValidForRef(jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Bool _211bcdcca_isBuiltinStrConvertable(jule::Ptr<_211bb6455_TypeKind>&);
inline jule::Str _211bce050_buildLinkPathByTokens(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_211bbae2c_Prim> _211bce407_buildPrimType(jule::Str);
inline jule::Ptr<_210e427d1_Struct> _211bce69e_getStructFromKind(jule::Ptr<_211bb6455_TypeKind>);
inline jule::Bool _211bce946_isPrim(jule::Str);
inline void _211bcebee_applyImplicitCast(jule::Ptr<_211bb6455_TypeKind>&, jule::Ptr<_211b8a319_Data>&);
inline std::tuple<jule::Ptr<_211b855ab_SymbolTable>,jule::Slice<_20e4ba377_Log>> _211bd2c68_buildSymbols(jule::Ptr<_210e1c811_Ast>&, jule::Trait<_211b1970a_Importer>&, jule::Ptr<_21102b469_symbolBuilder>);
inline std::tuple<jule::Ptr<_211b202d2_Package>,jule::Slice<_20e4ba377_Log>> _211bd3197_analyzePackage(jule::Slice<jule::Ptr<_210e1c811_Ast>>&, jule::Trait<_211b1970a_Importer>&, jule::I64&);
inline std::tuple<jule::Ptr<_211b202d2_Package>,jule::Slice<_20e4ba377_Log>> _211bd3582_AnalyzePackage(jule::Slice<jule::Ptr<_210e1c811_Ast>>, jule::Trait<_211b1970a_Importer>, jule::I64);
inline jule::Ptr<_211022c35_FnIns> _211bddd1d_findBuiltinFn(jule::Str);
inline jule::Ptr<_211bb5762_TypeAlias> _211be1084_findBuiltinTypeAlias(jule::Str);
inline jule::Any _211c0bd19_findBuiltinDef(jule::Str);
inline jule::Any _211be1b45_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _211be265c_findBuiltinDefStdMem(jule::Str);
inline jule::Any _211c171dc_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _211c69140_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_211b8a319_Data> _211c0771b_builtinCallerCommonPlain(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211c43290_builtinCallerCommon(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211c4c94d_builtinCallerCommonMut(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211c68b01_builtinCallerError(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&);
inline jule::Ptr<_211b8a319_Data> _211c43e3e_builtinCallerOut(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211c655d1_builtinCallerOutln(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211c67ec9_builtinCallerNew(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211c2c5dc_builtinCallerPanic(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211c4ad25_builtinCallerMake(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211c4425d_builtinCallerAppend(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211c64c84_callerCopySlice(jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211c57e0e_callerCopyStr(jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211c42beb_builtinCallerCopy(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211be45c6_builtinCallerClone(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211bdb722_builtinCallerAssert(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211c06e46_builtinCallerStdMemSizeOf(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211c7778b_builtinCallerStdMemAlignOf(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211c77b21_builtinCallerStdMemFree(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211c78050_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211c7846d_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211c788ad_builtinCallerStdDebugOut(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Ptr<_211b8a319_Data> _211c78c98_builtinCallerStdDebugOutln(jule::Ptr<_211b8bd87_Eval>&, jule::Ptr<_210e5a893_FnCallExpr>&, jule::Ptr<_211b8a319_Data>&);
inline jule::Bool _211ca65de_FindModuleFile(jule::Slice<jule::Ptr<_20c697db4_DirEntry>>&);
inline jule::Str _211ca6721_FindModuleFileDeep(jule::Str);
inline jule::Slice<_20e4ba377_Log> _211ca69a7_CheckModuleFile(jule::Str);
inline jule::Ptr<_2123c73a2_FileInfo> _2123ce057_ParseFile(jule::Ptr<_20e7e4096_File>);
inline std::tuple<jule::Ptr<_210e1c811_Ast>,jule::Slice<_20e4ba377_Log>> _21242a3d3_parseFileset(jule::Ptr<_20e7e4096_File>);
inline jule::Ptr<_210e623c2_ScopeTree> _21242acda_newScope(void);
inline std::tuple<jule::Bool,jule::Bool> _21242b0e8_isSt(jule::Ptr<_20e7ddc0b_Token>, jule::Ptr<_20e7ddc0b_Token>);
inline jule::Bool _21242b439_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _21242b7be_nextStPos(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>,jule::Bool> _21242bb10_skipSt(jule::I64&, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Slice<jule::Ptr<_21242be0c_stmt>> _21242c2a3_splitStmts(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Bool _212443990_isTypeOp(jule::Str&);
inline jule::Bool _212443c7b_isTypeRange(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _212444023_getBlockExpr(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>,jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _2124443a8_splitDelim(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::U64);
inline jule::I64 _212444650_findLowestPrecOp(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Ptr<_210e5863d_IdentExpr> _2124448e7_buildIdentExpr(jule::Ptr<_20e7ddc0b_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>,jule::I64> _212444b8e_getRangeExprTokens(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Bool _2124458e8_checkAssignTokens(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline _20e4ba377_Log _212446b19_makeErr(jule::I64, jule::I64, jule::Ptr<_20e7e4096_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _2124470e2_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>,jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _212447389_rangeLast(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>>,jule::Slice<_20e4ba377_Log>> _212447774_partsKind(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::Str, jule::Bool);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>>,jule::Slice<_20e4ba377_Log>> _212447b5e_parts(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::U64, jule::Bool);
inline jule::Str _212447e06_getCloseKindOfBrace(jule::Str);
inline _20e4ba377_Log _2124482e1_compilerErr(jule::Ptr<_20e7ddc0b_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _212448720_pushSuggestion(_20e4ba377_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _2124489b7_tokstoa(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&);
inline jule::Bool _212458a2c_isPub(jule::Str&);
inline jule::Ptr<_210e520a4_TypeDecl> _21245939b_buildVoidType(void);
inline jule::Ptr<_210e520a4_TypeDecl> _212459610_buildPrimType(jule::Ptr<_20e7ddc0b_Token>);
inline jule::I64 _212459951_mapColon(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>&, jule::I64&);
inline std::tuple<jule::Bool,jule::Bool> _211c7b152_checkOs(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _211c7b284_checkArch(jule::Str);
inline jule::Bool _211c7b3b6_isPassFileAnnotation(jule::Str);
inline void _211c958b9_setOsVars(jule::Slice<jule::Str>&);
inline void _211c95b1c_setArchVars(jule::Slice<jule::Str>&);
inline void _211c95dc5_initVars(jule::Slice<jule::Str>&, _211c955ab_CompileInfo&);
inline jule::Slice<jule::U8> _211d67c55_readBuff(jule::Str);
inline _20e4ba377_Log _211d84337_flatCompilerErr(jule::Str);
inline void _212201253_pushPasses(jule::Ptr<_211b202d2_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _21220a47c_getAllUniquePasses(jule::Ptr<_211b202d2_Package>&, jule::Slice<jule::Ptr<_211b1c378_ImportInfo>>);
inline _211c955ab_CompileInfo _212222bd1_buildCompileInfo(void);
inline void _21254da34_EliminateDefines(jule::Ptr<_2120ac0a9_IR>&);
inline jule::Ptr<_210e1d8ab_Directive> _21254ddb9_findDirective(jule::Slice<jule::Ptr<_210e1d8ab_Directive>>&, jule::Str);
inline jule::Bool _21254e20a_hasDirective(jule::Slice<jule::Ptr<_210e1d8ab_Directive>>&, jule::Str);
inline void _212552d57_eliminateDeadCodeOfScope(jule::Ptr<_211b0940e_Scope>);
inline void _2125530dd_eliminateScopeFunctions(jule::Slice<jule::Ptr<_211020084_Fn>>&);
inline void _212553330_eliminateFunctionsScopePackage(jule::Ptr<_211b202d2_Package>&);
inline void _2125535c7_eliminateScopePackage(jule::Ptr<_211b202d2_Package>&);
inline void _2125537d6_EliminateScopes(jule::Ptr<_2120ac0a9_IR>&);
inline jule::Bool _20e94ee7c_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _20e9529da_isConstantValidConditionalCase(jule::Ptr<_211b095eb_If>&);
inline jule::Bool _20e9540e6_isUnreachableExpr(jule::Any&);
inline jule::Bool _20e956b54_isConstantValidMatchCase(jule::Ptr<_211b0b642_Case>&);
inline jule::Bool _20e957da8_isUnreachableConditionalCase(jule::Ptr<_211b095eb_If>&);
inline jule::Bool _20e960b91_isUnreachableMatchCase(jule::Ptr<_211b0b642_Case>&);
inline std::tuple<jule::Bool,jule::U64> _20ed506bd_checkForBitShiftOpt(jule::Ptr<_211017a4e_OperandExprModel>&, jule::Ptr<_211017a4e_OperandExprModel>&);
inline void _20ed5343a_PushOptLevel(jule::I64);
inline void _2124e3886_detectEnabled(void);
inline void _21256079e_Throw(jule::Str);
inline jule::U64 _212b3e9d7_unix(void);
inline jule::U64 _212b3ed28_unixYearToSeconds(jule::U64, jule::Bool&);
inline jule::U64 _212b401ad_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _212ab4d47_isCopyOptimizable(jule::Ptr<_211b8a319_Data>&);
inline jule::Bool _212ab51cc_isIterCopyOptimizable(jule::Ptr<_211b8a319_Data>&, jule::Ptr<_211b43228_Var>&);
inline jule::Str _212ac32c8_decomposeCommonEsq(jule::U8);
inline jule::Str _212ac35b4_sbtoa(jule::U8);
inline jule::Str _212ac385b_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _212ac3b7a_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _212ac3e88_ftoa(jule::F64, jule::I64);
inline jule::Str _212ac4230_itoa(jule::I64);
inline jule::Str _212ac44c7_utoa(jule::U64);
inline jule::Bool _212ac487e_isForwarded(jule::Ptr<_211b0940e_Scope>&);
inline jule::Bool _212ac4b48_isBuiltinCallHasDebuginf(jule::Ptr<_2110188b8_FnCallExprModel>&);
inline jule::Bool _212ac4d79_isExprComesFromBind(jule::Ptr<_211b8a319_Data>&);
inline void _212b4502b_iterFiles(jule::Ptr<_211b202d2_Package>&, jule::Fn<void(jule::Ptr<_211b855ab_SymbolTable>&)>);
inline void _212b4527e_prepareStructure(jule::Ptr<_210e427d1_Struct>&);
inline jule::Str _212b45526_concatAllParts(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>);
inline jule::Ptr<_210e1d8ab_Directive> _212b4d94c_findDirective(jule::Slice<jule::Ptr<_210e1d8ab_Directive>>&, jule::Str);
inline jule::Bool _212b4dcd2_hasDirective(jule::Slice<jule::Ptr<_210e1d8ab_Directive>>&, jule::Str);
inline void _20e489544_printErrorMessage(jule::Str);
inline void _20e49cbb7_help(jule::Slice<jule::Str>&);
inline void _20e49d415_version(jule::Slice<jule::Str>&);
inline void _20e49ecb8_toolDistos(void);
inline void _20e4a0516_toolDistarch(void);
inline void _20e4a0c64_tool(jule::Slice<jule::Str>&);
inline void _20e48a446_julenv(jule::Slice<jule::Str>&);
inline void _20e4ac622_mod(jule::Slice<jule::Str>&);
inline jule::Bool _20d42ee9c_processCommand(jule::Slice<jule::Str>&);
inline void _20e4a179d_showInfo(void);
void entry_point(void);
inline void _212b523ce_init(void);
inline jule::Ptr<_20d3beed6_File> _212b53e80_openOutput(jule::Str&);
inline void _212b60167_clearObjects(void);
inline void _212b50740_compileIr(jule::Str, jule::Str);
inline jule::Bool _212b70c5a_isCppSourceFile(jule::Str);
inline void _212b73d4b_pushCompCmdClang(jule::Str&);
inline void _212986653_pushCompCmdGcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _2129b594b_genCompileCmd(jule::Str, jule::Ptr<_2120ac0a9_IR>&);
inline jule::Str _212a8eae1_getCompilePath(void);
inline void _212a7d371_applyTargetIndependentOptimizations(jule::Ptr<_2120ac0a9_IR>&);
inline void _212b5ae21_checkCompilerFlag(void);
inline void _212b4e992_checkTargetArch(jule::Str);
inline void _212b4eac4_checkTargetOs(jule::Str);
inline void _212b80ac2_checkTargetFlag(jule::Str&);
inline void _212b80c04_checkOptFlag(jule::Str&);
inline void _212b81067_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _212b81199_checkFlags(jule::Slice<jule::Str>&);
inline void _212b812cb_setupSemaFlags(jule::I64&);
inline jule::Ptr<_2120ac0a9_IR> _212b8140d_buildIr(jule::Slice<jule::Str>&);
inline void _212b81540_compileCommand(jule::Slice<jule::Str>&);


struct _211b1970a_ImporterMptrData {
	void(*_211b1862c_SetModPath)(jule::Trait<_211b1970a_Importer>, jule::Str);
	jule::Str(*_211b1886e_GetModPath)(jule::Trait<_211b1970a_Importer>);
	jule::Str(*_211b18b7c_ModById)(jule::Trait<_211b1970a_Importer>, jule::I64);
	jule::Ptr<_211b1c378_ImportInfo>(*_211b18e8a_GetImport)(jule::Trait<_211b1970a_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_210e1c811_Ast>>,jule::Slice<_20e4ba377_Log>>(*_211b19342_ImportPackage)(jule::Trait<_211b1970a_Importer>, jule::Str, jule::Bool);
	void(*_211b195b7_Imported)(jule::Trait<_211b1970a_Importer>, jule::Ptr<_211b1c378_ImportInfo>);
};

struct _211bb6026_KindMptrData {
	jule::Str(*_211bb5ac5_Str)(jule::Trait<_211bb6026_Kind>);
	jule::Bool(*_211bb5dd3_Equals)(jule::Trait<_211bb6026_Kind>, jule::Ptr<_211bb6455_TypeKind>);
};

struct _211bd2086_LookupMptrData {
	jule::Ptr<_211b1c378_ImportInfo>(*_211bd023d_FindPackage)(jule::Trait<_211bd2086_Lookup>, jule::Str);
	jule::Ptr<_211b1c378_ImportInfo>(*_211bd054b_SelectPackage)(jule::Trait<_211bd2086_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_211b1c378_ImportInfo>)>);
	jule::Ptr<_211b43228_Var>(*_211bd0903_FindVar)(jule::Trait<_211bd2086_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_211bb5762_TypeAlias>(*_211bd0caa_FindTypeAlias)(jule::Trait<_211bd2086_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_210e427d1_Struct>(*_211bd1162_FindStruct)(jule::Trait<_211bd2086_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_211020084_Fn>(*_211bd1519_FindFn)(jule::Trait<_211bd2086_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_211031e42_Trait>(*_211bd1827_FindTrait)(jule::Trait<_211bd2086_Lookup>, jule::Str);
	jule::Ptr<_211034087_Enum>(*_211bd1b35_FindEnum)(jule::Trait<_211bd2086_Lookup>, jule::Str);
	jule::Ptr<_211035682_TypeEnum>(*_211bd1e43_FindTypeEnum)(jule::Trait<_211bd2086_Lookup>, jule::Str);
};

struct _2129e44e6_CommonFlagMptrData {
	jule::Str(*_2129e773b_Name)(jule::Trait<_2129e44e6_CommonFlag>);
	jule::I32(*_2129c3b9b_Short)(jule::Trait<_2129e44e6_CommonFlag>);
	jule::Str(*_2129e43b4_What)(jule::Trait<_2129e44e6_CommonFlag>);
	void(*_212b7a35d_Reset)(jule::Trait<_2129e44e6_CommonFlag>);
};



inline void _211b1862c_SetModPath_0(jule::Trait<_211b1970a_Importer> _self_, jule::Str _1729_path) {
	_211e14b8c_SetModPath(_self_.safe_ptr<_211d89b78_JuleImporter>(), _1729_path);
}
inline jule::Str _211b1886e_GetModPath_0(jule::Trait<_211b1970a_Importer> _self_) {
	return _211e39b90_GetModPath(_self_.safe_ptr<_211d89b78_JuleImporter>());
}
inline jule::Str _211b18b7c_ModById_0(jule::Trait<_211b1970a_Importer> _self_, jule::I64 _2522_id) {
	return _211ee67b8_ModById(_self_.safe_ptr<_211d89b78_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_211b1c378_ImportInfo> _211b18e8a_GetImport_0(jule::Trait<_211b1970a_Importer> _self_, jule::Str _3128_path) {
	return _21200c724_GetImport(_self_.safe_ptr<_211d89b78_JuleImporter>(), _3128_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_210e1c811_Ast>>,jule::Slice<_20e4ba377_Log>> _211b19342_ImportPackage_0(jule::Trait<_211b1970a_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _212017aa3_ImportPackage(_self_.safe_ptr<_211d89b78_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _211b195b7_Imported_0(jule::Trait<_211b1970a_Importer> _self_, jule::Ptr<_211b1c378_ImportInfo> _4131__0) {
	_212063703_Imported(_self_.safe_ptr<_211d89b78_JuleImporter>(), _4131__0);
}
inline jule::Str _211bb5ac5_Str_0(jule::Trait<_211bb6026_Kind> _self_) {
	return _210e37c9e_Str(_self_.safe_ptr<_210e6db2b_StructIns>());
}
inline jule::Bool _211bb5dd3_Equals_0(jule::Trait<_211bb6026_Kind> _self_, jule::Ptr<_211bb6455_TypeKind> _5622_other) {
	return _210e444b4_Equals(_self_.data.as<_210e6db2b_StructIns>(), _5622_other);
}
inline jule::Str _211bb5ac5_Str_1(jule::Trait<_211bb6026_Kind> _self_) {
	return _211023065_Str(_self_.safe_ptr<_211022c35_FnIns>());
}
inline jule::Bool _211bb5dd3_Equals_1(jule::Trait<_211bb6026_Kind> _self_, jule::Ptr<_211bb6455_TypeKind> _5622_other) {
	return _211023373_Equals(_self_.data.as<_211022c35_FnIns>(), _5622_other);
}
inline jule::Str _211bb5ac5_Str_2(jule::Trait<_211bb6026_Kind> _self_) {
	return _21103233d_Str(_self_.safe_ptr<_211031e42_Trait>());
}
inline jule::Bool _211bb5dd3_Equals_2(jule::Trait<_211bb6026_Kind> _self_, jule::Ptr<_211bb6455_TypeKind> _5622_other) {
	return _21103264b_Equals(_self_.data.as<_211031e42_Trait>(), _5622_other);
}
inline jule::Str _211bb5ac5_Str_3(jule::Trait<_211bb6026_Kind> _self_) {
	return _2110343ea_Str(_self_.safe_ptr<_211034087_Enum>());
}
inline jule::Bool _211bb5dd3_Equals_3(jule::Trait<_211bb6026_Kind> _self_, jule::Ptr<_211bb6455_TypeKind> _5622_other) {
	return _211034708_Equals(_self_.data.as<_211034087_Enum>(), _5622_other);
}
inline jule::Str _211bb5ac5_Str_4(jule::Trait<_211bb6026_Kind> _self_) {
	return _2110359b2_Str(_self_.safe_ptr<_211035682_TypeEnum>());
}
inline jule::Bool _211bb5dd3_Equals_4(jule::Trait<_211bb6026_Kind> _self_, jule::Ptr<_211bb6455_TypeKind> _5622_other) {
	return _211035cc0_Equals(_self_.data.as<_211035682_TypeEnum>(), _5622_other);
}
inline jule::Str _211bb5ac5_Str_5(jule::Trait<_211bb6026_Kind> _self_) {
	return _211bb6851_Str(_self_.safe_ptr<_211bb6455_TypeKind>());
}
inline jule::Bool _211bb5dd3_Equals_5(jule::Trait<_211bb6026_Kind> _self_, jule::Ptr<_211bb6455_TypeKind> _5622_other) {
	return _211bb6b5e_Equals(_self_.data.as<_211bb6455_TypeKind>(), _5622_other);
}
inline jule::Str _211bb5ac5_Str_6(jule::Trait<_211bb6026_Kind> _self_) {
	return _211bbb290_Str(_self_.safe_ptr<_211bbae2c_Prim>());
}
inline jule::Bool _211bb5dd3_Equals_6(jule::Trait<_211bb6026_Kind> _self_, jule::Ptr<_211bb6455_TypeKind> _5622_other) {
	return _211bbb59d_Equals(_self_.data.as<_211bbae2c_Prim>(), _5622_other);
}
inline jule::Str _211bb5ac5_Str_7(jule::Trait<_211bb6026_Kind> _self_) {
	return _211bbea24_Str(_self_.safe_ptr<_211bbe6b1_Sptr>());
}
inline jule::Bool _211bb5dd3_Equals_7(jule::Trait<_211bb6026_Kind> _self_, jule::Ptr<_211bb6455_TypeKind> _5622_other) {
	return _211bbed32_Equals(_self_.data.as<_211bbe6b1_Sptr>(), _5622_other);
}
inline jule::Str _211bb5ac5_Str_8(jule::Trait<_211bb6026_Kind> _self_) {
	return _211bc0629_Str(_self_.safe_ptr<_211bc011d_Slc>());
}
inline jule::Bool _211bb5dd3_Equals_8(jule::Trait<_211bb6026_Kind> _self_, jule::Ptr<_211bb6455_TypeKind> _5622_other) {
	return _211bc0937_Equals(_self_.data.as<_211bc011d_Slc>(), _5622_other);
}
inline jule::Str _211bb5ac5_Str_9(jule::Trait<_211bb6026_Kind> _self_) {
	return _211bc100e_Str(_self_.safe_ptr<_211bc0b9b_Tuple>());
}
inline jule::Bool _211bb5dd3_Equals_9(jule::Trait<_211bb6026_Kind> _self_, jule::Ptr<_211bb6455_TypeKind> _5622_other) {
	return _211bc131c_Equals(_self_.data.as<_211bc0b9b_Tuple>(), _5622_other);
}
inline jule::Str _211bb5ac5_Str_10(jule::Trait<_211bb6026_Kind> _self_) {
	return _211bc1a37_Str(_self_.safe_ptr<_211bc16c4_Map>());
}
inline jule::Bool _211bb5dd3_Equals_10(jule::Trait<_211bb6026_Kind> _self_, jule::Ptr<_211bb6455_TypeKind> _5622_other) {
	return _211bc1d45_Equals(_self_.data.as<_211bc16c4_Map>(), _5622_other);
}
inline jule::Str _211bb5ac5_Str_11(jule::Trait<_211bb6026_Kind> _self_) {
	return _211bc262b_Str(_self_.safe_ptr<_211bc22b8_Arr>());
}
inline jule::Bool _211bb5dd3_Equals_11(jule::Trait<_211bb6026_Kind> _self_, jule::Ptr<_211bb6455_TypeKind> _5622_other) {
	return _211bc2939_Equals(_self_.data.as<_211bc22b8_Arr>(), _5622_other);
}
inline jule::Str _211bb5ac5_Str_12(jule::Trait<_211bb6026_Kind> _self_) {
	return _211bc3088_Str(_self_.safe_ptr<_211bc2c25_Ptr>());
}
inline jule::Bool _211bb5dd3_Equals_12(jule::Trait<_211bb6026_Kind> _self_, jule::Ptr<_211bb6455_TypeKind> _5622_other) {
	return _211bc3396_Equals(_self_.data.as<_211bc2c25_Ptr>(), _5622_other);
}
inline jule::Str _211bb5ac5_Str_13(jule::Trait<_211bb6026_Kind> _self_) {
	return _212b46505_Str(_self_.safe_ptr<_212b4623b_customType>());
}
inline jule::Bool _211bb5dd3_Equals_13(jule::Trait<_211bb6026_Kind> _self_, jule::Ptr<_211bb6455_TypeKind> _5622_other) {
	return _212b46813_Equals(_self_.data.as<_212b4623b_customType>(), _5622_other);
}
inline jule::Ptr<_211b1c378_ImportInfo> _211bd023d_FindPackage_0(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _930_ident) {
	return _211b0c401_FindPackage(_self_.safe_ptr<_211b0c214_scopeChecker>(), _930_ident);
}
inline jule::Ptr<_211b1c378_ImportInfo> _211bd054b_SelectPackage_0(jule::Trait<_211bd2086_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_211b1c378_ImportInfo>)> _1332_selector) {
	return _211b0c533_SelectPackage(_self_.safe_ptr<_211b0c214_scopeChecker>(), _1332_selector);
}
inline jule::Ptr<_211b43228_Var> _211bd0903_FindVar_0(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _211b0c665_FindVar(_self_.safe_ptr<_211b0c214_scopeChecker>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_211bb5762_TypeAlias> _211bd0caa_FindTypeAlias_0(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _211b0c797_FindTypeAlias(_self_.safe_ptr<_211b0c214_scopeChecker>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_210e427d1_Struct> _211bd1162_FindStruct_0(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _211b0c8c9_FindStruct(_self_.safe_ptr<_211b0c214_scopeChecker>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_211020084_Fn> _211bd1519_FindFn_0(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _211b0ca0b_FindFn(_self_.safe_ptr<_211b0c214_scopeChecker>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_211031e42_Trait> _211bd1827_FindTrait_0(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _3328_ident) {
	return _211b0cb3d_FindTrait(_self_.safe_ptr<_211b0c214_scopeChecker>(), _3328_ident);
}
inline jule::Ptr<_211034087_Enum> _211bd1b35_FindEnum_0(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _3727_ident) {
	return _211b0cc70_FindEnum(_self_.safe_ptr<_211b0c214_scopeChecker>(), _3727_ident);
}
inline jule::Ptr<_211035682_TypeEnum> _211bd1e43_FindTypeEnum_0(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _4131_ident) {
	return _211b0cda2_FindTypeEnum(_self_.safe_ptr<_211b0c214_scopeChecker>(), _4131_ident);
}
inline jule::Ptr<_211b1c378_ImportInfo> _211bd023d_FindPackage_1(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _930_ident) {
	return _211b1c895_FindPackage(_self_.safe_ptr<_211b1c378_ImportInfo>(), _930_ident);
}
inline jule::Ptr<_211b1c378_ImportInfo> _211bd054b_SelectPackage_1(jule::Trait<_211bd2086_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_211b1c378_ImportInfo>)> _1332_selector) {
	return _211b1cba3_SelectPackage(_self_.safe_ptr<_211b1c378_ImportInfo>(), _1332_selector);
}
inline jule::Ptr<_211b43228_Var> _211bd0903_FindVar_1(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _211b1d05a_FindVar(_self_.safe_ptr<_211b1c378_ImportInfo>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_211bb5762_TypeAlias> _211bd0caa_FindTypeAlias_1(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _211b1d412_FindTypeAlias(_self_.safe_ptr<_211b1c378_ImportInfo>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_210e427d1_Struct> _211bd1162_FindStruct_1(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _211b1d7b9_FindStruct(_self_.safe_ptr<_211b1c378_ImportInfo>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_211020084_Fn> _211bd1519_FindFn_1(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _211b1db71_FindFn(_self_.safe_ptr<_211b1c378_ImportInfo>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_211031e42_Trait> _211bd1827_FindTrait_1(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _3328_ident) {
	return _211b1de7e_FindTrait(_self_.safe_ptr<_211b1c378_ImportInfo>(), _3328_ident);
}
inline jule::Ptr<_211034087_Enum> _211bd1b35_FindEnum_1(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _3727_ident) {
	return _211b1e28c_FindEnum(_self_.safe_ptr<_211b1c378_ImportInfo>(), _3727_ident);
}
inline jule::Ptr<_211035682_TypeEnum> _211bd1e43_FindTypeEnum_1(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _4131_ident) {
	return _211b1e59a_FindTypeEnum(_self_.safe_ptr<_211b1c378_ImportInfo>(), _4131_ident);
}
inline jule::Ptr<_211b1c378_ImportInfo> _211bd023d_FindPackage_2(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _930_ident) {
	return _211b207aa_FindPackage(_self_.safe_ptr<_211b202d2_Package>(), _930_ident);
}
inline jule::Ptr<_211b1c378_ImportInfo> _211bd054b_SelectPackage_2(jule::Trait<_211bd2086_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_211b1c378_ImportInfo>)> _1332_selector) {
	return _211b20ab8_SelectPackage(_self_.safe_ptr<_211b202d2_Package>(), _1332_selector);
}
inline jule::Ptr<_211b43228_Var> _211bd0903_FindVar_2(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _211b20e70_FindVar(_self_.safe_ptr<_211b202d2_Package>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_211bb5762_TypeAlias> _211bd0caa_FindTypeAlias_2(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _211b21327_FindTypeAlias(_self_.safe_ptr<_211b202d2_Package>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_210e427d1_Struct> _211bd1162_FindStruct_2(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _211b216ce_FindStruct(_self_.safe_ptr<_211b202d2_Package>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_211020084_Fn> _211bd1519_FindFn_2(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _211b21a86_FindFn(_self_.safe_ptr<_211b202d2_Package>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_211031e42_Trait> _211bd1827_FindTrait_2(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _3328_ident) {
	return _211b21d94_FindTrait(_self_.safe_ptr<_211b202d2_Package>(), _3328_ident);
}
inline jule::Ptr<_211034087_Enum> _211bd1b35_FindEnum_2(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _3727_ident) {
	return _211b221a2_FindEnum(_self_.safe_ptr<_211b202d2_Package>(), _3727_ident);
}
inline jule::Ptr<_211035682_TypeEnum> _211bd1e43_FindTypeEnum_2(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _4131_ident) {
	return _211b224b0_FindTypeEnum(_self_.safe_ptr<_211b202d2_Package>(), _4131_ident);
}
inline jule::Ptr<_211b1c378_ImportInfo> _211bd023d_FindPackage_3(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _930_ident) {
	return _211b259e1_FindPackage(_self_.safe_ptr<_211b254c4_Sema>(), _930_ident);
}
inline jule::Ptr<_211b1c378_ImportInfo> _211bd054b_SelectPackage_3(jule::Trait<_211bd2086_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_211b1c378_ImportInfo>)> _1332_selector) {
	return _211b25cee_SelectPackage(_self_.safe_ptr<_211b254c4_Sema>(), _1332_selector);
}
inline jule::Ptr<_211b43228_Var> _211bd0903_FindVar_3(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _211b261a6_FindVar(_self_.safe_ptr<_211b254c4_Sema>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_211bb5762_TypeAlias> _211bd0caa_FindTypeAlias_3(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _211b2655d_FindTypeAlias(_self_.safe_ptr<_211b254c4_Sema>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_210e427d1_Struct> _211bd1162_FindStruct_3(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _211b26915_FindStruct(_self_.safe_ptr<_211b254c4_Sema>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_211020084_Fn> _211bd1519_FindFn_3(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _211b26cbc_FindFn(_self_.safe_ptr<_211b254c4_Sema>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_211031e42_Trait> _211bd1827_FindTrait_3(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _3328_ident) {
	return _211b270ca_FindTrait(_self_.safe_ptr<_211b254c4_Sema>(), _3328_ident);
}
inline jule::Ptr<_211034087_Enum> _211bd1b35_FindEnum_3(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _3727_ident) {
	return _211b273d8_FindEnum(_self_.safe_ptr<_211b254c4_Sema>(), _3727_ident);
}
inline jule::Ptr<_211035682_TypeEnum> _211bd1e43_FindTypeEnum_3(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _4131_ident) {
	return _211b276e6_FindTypeEnum(_self_.safe_ptr<_211b254c4_Sema>(), _4131_ident);
}
inline jule::Ptr<_211b1c378_ImportInfo> _211bd023d_FindPackage_4(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _930_ident) {
	return _211b85ac8_FindPackage(_self_.safe_ptr<_211b855ab_SymbolTable>(), _930_ident);
}
inline jule::Ptr<_211b1c378_ImportInfo> _211bd054b_SelectPackage_4(jule::Trait<_211bd2086_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_211b1c378_ImportInfo>)> _1332_selector) {
	return _211b85dd6_SelectPackage(_self_.safe_ptr<_211b855ab_SymbolTable>(), _1332_selector);
}
inline jule::Ptr<_211b43228_Var> _211bd0903_FindVar_4(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _211b8628d_FindVar(_self_.safe_ptr<_211b855ab_SymbolTable>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_211bb5762_TypeAlias> _211bd0caa_FindTypeAlias_4(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _211b86645_FindTypeAlias(_self_.safe_ptr<_211b855ab_SymbolTable>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_210e427d1_Struct> _211bd1162_FindStruct_4(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _211b869ec_FindStruct(_self_.safe_ptr<_211b855ab_SymbolTable>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_211020084_Fn> _211bd1519_FindFn_4(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _211b86da4_FindFn(_self_.safe_ptr<_211b855ab_SymbolTable>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_211031e42_Trait> _211bd1827_FindTrait_4(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _3328_ident) {
	return _211b871b2_FindTrait(_self_.safe_ptr<_211b855ab_SymbolTable>(), _3328_ident);
}
inline jule::Ptr<_211034087_Enum> _211bd1b35_FindEnum_4(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _3727_ident) {
	return _211b874c0_FindEnum(_self_.safe_ptr<_211b855ab_SymbolTable>(), _3727_ident);
}
inline jule::Ptr<_211035682_TypeEnum> _211bd1e43_FindTypeEnum_4(jule::Trait<_211bd2086_Lookup> _self_, jule::Str _4131_ident) {
	return _211b877cd_FindTypeEnum(_self_.safe_ptr<_211b855ab_SymbolTable>(), _4131_ident);
}
inline jule::Str _2129e773b_Name_0(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	return _22524257d_Name(_self_.safe_ptr<_225450e0c_Flag>());
}
inline jule::I32 _2129c3b9b_Short_0(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	return _2254513c4_Short(_self_.safe_ptr<_225450e0c_Flag>());
}
inline jule::Str _2129e43b4_What_0(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	return _2252426b0_What(_self_.safe_ptr<_225450e0c_Flag>());
}
inline void _212b7a35d_Reset_0(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	_225451292_Reset(_self_.safe_ptr<_225450e0c_Flag>());
}
inline jule::Str _2129e773b_Name_1(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	return _225454608_Name(_self_.safe_ptr<_225454aae_Flag>());
}
inline jule::I32 _2129c3b9b_Short_1(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	return _22545510e_Short(_self_.safe_ptr<_225454aae_Flag>());
}
inline jule::Str _2129e43b4_What_1(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	return _225454d9a_What(_self_.safe_ptr<_225454aae_Flag>());
}
inline void _212b7a35d_Reset_1(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	_225454ecc_Reset(_self_.safe_ptr<_225454aae_Flag>());
}
inline jule::Str _2129e773b_Name_2(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	return _225458189_Name(_self_.safe_ptr<_225458640_Flag>());
}
inline jule::I32 _2129c3b9b_Short_2(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	return _225458b90_Short(_self_.safe_ptr<_225458640_Flag>());
}
inline jule::Str _2129e43b4_What_2(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	return _22545892b_What(_self_.safe_ptr<_225458640_Flag>());
}
inline void _212b7a35d_Reset_2(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	_225458a5d_Reset(_self_.safe_ptr<_225458640_Flag>());
}
inline jule::Str _2129e773b_Name_3(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	return _22545bc5e_Name(_self_.safe_ptr<_22545c215_Flag>());
}
inline jule::I32 _2129c3b9b_Short_3(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	return _22545c765_Short(_self_.safe_ptr<_22545c215_Flag>());
}
inline jule::Str _2129e43b4_What_3(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	return _22545c501_What(_self_.safe_ptr<_22545c215_Flag>());
}
inline void _212b7a35d_Reset_3(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	_22545c633_Reset(_self_.safe_ptr<_22545c215_Flag>());
}
inline jule::Str _2129e773b_Name_4(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	return _2254607e0_Name(_self_.safe_ptr<_225460c96_Flag>());
}
inline jule::I32 _2129c3b9b_Short_4(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	return _2254612e6_Short(_self_.safe_ptr<_225460c96_Flag>());
}
inline jule::Str _2129e43b4_What_4(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	return _225461082_What(_self_.safe_ptr<_225460c96_Flag>());
}
inline void _212b7a35d_Reset_4(jule::Trait<_2129e44e6_CommonFlag> _self_) {
	_2254611b4_Reset(_self_.safe_ptr<_225460c96_Flag>());
}


static _211b1970a_ImporterMptrData _211b1970a_Importer_mptr_data[] = {
	{
		._211b1862c_SetModPath=_211b1862c_SetModPath_0,
		._211b1886e_GetModPath=_211b1886e_GetModPath_0,
		._211b18b7c_ModById=_211b18b7c_ModById_0,
		._211b18e8a_GetImport=_211b18e8a_GetImport_0,
		._211b19342_ImportPackage=_211b19342_ImportPackage_0,
		._211b195b7_Imported=_211b195b7_Imported_0,
	},
};
static _211bb6026_KindMptrData _211bb6026_Kind_mptr_data[] = {
	{
		._211bb5ac5_Str=_211bb5ac5_Str_0,
		._211bb5dd3_Equals=_211bb5dd3_Equals_0,
	},
	{
		._211bb5ac5_Str=_211bb5ac5_Str_1,
		._211bb5dd3_Equals=_211bb5dd3_Equals_1,
	},
	{
		._211bb5ac5_Str=_211bb5ac5_Str_2,
		._211bb5dd3_Equals=_211bb5dd3_Equals_2,
	},
	{
		._211bb5ac5_Str=_211bb5ac5_Str_3,
		._211bb5dd3_Equals=_211bb5dd3_Equals_3,
	},
	{
		._211bb5ac5_Str=_211bb5ac5_Str_4,
		._211bb5dd3_Equals=_211bb5dd3_Equals_4,
	},
	{
		._211bb5ac5_Str=_211bb5ac5_Str_5,
		._211bb5dd3_Equals=_211bb5dd3_Equals_5,
	},
	{
		._211bb5ac5_Str=_211bb5ac5_Str_6,
		._211bb5dd3_Equals=_211bb5dd3_Equals_6,
	},
	{
		._211bb5ac5_Str=_211bb5ac5_Str_7,
		._211bb5dd3_Equals=_211bb5dd3_Equals_7,
	},
	{
		._211bb5ac5_Str=_211bb5ac5_Str_8,
		._211bb5dd3_Equals=_211bb5dd3_Equals_8,
	},
	{
		._211bb5ac5_Str=_211bb5ac5_Str_9,
		._211bb5dd3_Equals=_211bb5dd3_Equals_9,
	},
	{
		._211bb5ac5_Str=_211bb5ac5_Str_10,
		._211bb5dd3_Equals=_211bb5dd3_Equals_10,
	},
	{
		._211bb5ac5_Str=_211bb5ac5_Str_11,
		._211bb5dd3_Equals=_211bb5dd3_Equals_11,
	},
	{
		._211bb5ac5_Str=_211bb5ac5_Str_12,
		._211bb5dd3_Equals=_211bb5dd3_Equals_12,
	},
	{
		._211bb5ac5_Str=_211bb5ac5_Str_13,
		._211bb5dd3_Equals=_211bb5dd3_Equals_13,
	},
};
static _211bd2086_LookupMptrData _211bd2086_Lookup_mptr_data[] = {
	{
		._211bd023d_FindPackage=_211bd023d_FindPackage_0,
		._211bd054b_SelectPackage=_211bd054b_SelectPackage_0,
		._211bd0903_FindVar=_211bd0903_FindVar_0,
		._211bd0caa_FindTypeAlias=_211bd0caa_FindTypeAlias_0,
		._211bd1162_FindStruct=_211bd1162_FindStruct_0,
		._211bd1519_FindFn=_211bd1519_FindFn_0,
		._211bd1827_FindTrait=_211bd1827_FindTrait_0,
		._211bd1b35_FindEnum=_211bd1b35_FindEnum_0,
		._211bd1e43_FindTypeEnum=_211bd1e43_FindTypeEnum_0,
	},
	{
		._211bd023d_FindPackage=_211bd023d_FindPackage_1,
		._211bd054b_SelectPackage=_211bd054b_SelectPackage_1,
		._211bd0903_FindVar=_211bd0903_FindVar_1,
		._211bd0caa_FindTypeAlias=_211bd0caa_FindTypeAlias_1,
		._211bd1162_FindStruct=_211bd1162_FindStruct_1,
		._211bd1519_FindFn=_211bd1519_FindFn_1,
		._211bd1827_FindTrait=_211bd1827_FindTrait_1,
		._211bd1b35_FindEnum=_211bd1b35_FindEnum_1,
		._211bd1e43_FindTypeEnum=_211bd1e43_FindTypeEnum_1,
	},
	{
		._211bd023d_FindPackage=_211bd023d_FindPackage_2,
		._211bd054b_SelectPackage=_211bd054b_SelectPackage_2,
		._211bd0903_FindVar=_211bd0903_FindVar_2,
		._211bd0caa_FindTypeAlias=_211bd0caa_FindTypeAlias_2,
		._211bd1162_FindStruct=_211bd1162_FindStruct_2,
		._211bd1519_FindFn=_211bd1519_FindFn_2,
		._211bd1827_FindTrait=_211bd1827_FindTrait_2,
		._211bd1b35_FindEnum=_211bd1b35_FindEnum_2,
		._211bd1e43_FindTypeEnum=_211bd1e43_FindTypeEnum_2,
	},
	{
		._211bd023d_FindPackage=_211bd023d_FindPackage_3,
		._211bd054b_SelectPackage=_211bd054b_SelectPackage_3,
		._211bd0903_FindVar=_211bd0903_FindVar_3,
		._211bd0caa_FindTypeAlias=_211bd0caa_FindTypeAlias_3,
		._211bd1162_FindStruct=_211bd1162_FindStruct_3,
		._211bd1519_FindFn=_211bd1519_FindFn_3,
		._211bd1827_FindTrait=_211bd1827_FindTrait_3,
		._211bd1b35_FindEnum=_211bd1b35_FindEnum_3,
		._211bd1e43_FindTypeEnum=_211bd1e43_FindTypeEnum_3,
	},
	{
		._211bd023d_FindPackage=_211bd023d_FindPackage_4,
		._211bd054b_SelectPackage=_211bd054b_SelectPackage_4,
		._211bd0903_FindVar=_211bd0903_FindVar_4,
		._211bd0caa_FindTypeAlias=_211bd0caa_FindTypeAlias_4,
		._211bd1162_FindStruct=_211bd1162_FindStruct_4,
		._211bd1519_FindFn=_211bd1519_FindFn_4,
		._211bd1827_FindTrait=_211bd1827_FindTrait_4,
		._211bd1b35_FindEnum=_211bd1b35_FindEnum_4,
		._211bd1e43_FindTypeEnum=_211bd1e43_FindTypeEnum_4,
	},
};
static _2129e44e6_CommonFlagMptrData _2129e44e6_CommonFlag_mptr_data[] = {
	{
		._2129e773b_Name=_2129e773b_Name_0,
		._2129c3b9b_Short=_2129c3b9b_Short_0,
		._2129e43b4_What=_2129e43b4_What_0,
		._212b7a35d_Reset=_212b7a35d_Reset_0,
	},
	{
		._2129e773b_Name=_2129e773b_Name_1,
		._2129c3b9b_Short=_2129c3b9b_Short_1,
		._2129e43b4_What=_2129e43b4_What_1,
		._212b7a35d_Reset=_212b7a35d_Reset_1,
	},
	{
		._2129e773b_Name=_2129e773b_Name_2,
		._2129c3b9b_Short=_2129c3b9b_Short_2,
		._2129e43b4_What=_2129e43b4_What_2,
		._212b7a35d_Reset=_212b7a35d_Reset_2,
	},
	{
		._2129e773b_Name=_2129e773b_Name_3,
		._2129c3b9b_Short=_2129c3b9b_Short_3,
		._2129e43b4_What=_2129e43b4_What_3,
		._212b7a35d_Reset=_212b7a35d_Reset_3,
	},
	{
		._2129e773b_Name=_2129e773b_Name_4,
		._2129c3b9b_Short=_2129c3b9b_Short_4,
		._2129e43b4_What=_2129e43b4_What_4,
		._212b7a35d_Reset=_212b7a35d_Reset_4,
	},
};


jule::Str _212b5018a_OutDir = jule::Str("dist", 4);
jule::Str _212b54645_OutName = jule::Str("ir.cpp", 6);
jule::Str _212b5613b_Out = jule::Str();
jule::Str _20c50ba3b_Compiler = jule::Str();
jule::Str _20c55094d_CompilerPath = jule::Str();
jule::Str _20c5520d1_CppStd = jule::Str("cpp17", 5);
jule::Bool _20c552345_Shadowing = false;
jule::Bool _20c5525a9_Transpilation = false;
jule::Bool _20c552895_Test = false;
jule::Bool _20c552ba3_RC = true;
jule::Bool _20c5530c1_Safety = true;
jule::Bool _20c5533ce_Production = false;
jule::Ptr<_20e36a601_RangeTable> _20e2eb65e__L = jule::new_ptr<_20e36a601_RangeTable>(_20e36a601_RangeTable{._field_R16=jule::Slice<_20e369c0a_Range16>::make({_20e369c0a_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_20e369c0a_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_20e369c0a_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_20e369c0a_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_20e369c0a_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_20e369c0a_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_20e369c0a_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_20e369c0a_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_20e369c0a_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_20e369c0a_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_20e369c0a_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_20e369c0a_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_20e369c0a_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_20e369c0a_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_20e369c0a_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_20e369c0a_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_20e369c0a_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_20e369c0a_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_20e369c0a_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_20e369c0a_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_20e369c0a_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_20e369c0a_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_20e369c0a_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_20e369c0a_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_20e369c0a_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_20e369c0a_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_20e369c0a_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_20e369c0a_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_20e369c0a_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_20e369c0a_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_20e369c0a_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_20e369c0a_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_20e369c0a_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_20e369c0a_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_20e369c0a_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_20e369c0a_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_20e369c0a_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_20e369c0a_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_20e369c0a_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_20e369c0a_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_20e369c0a_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_20e369c0a_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_20e369c0a_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_20e369c0a_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_20e369c0a_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_20e369c0a_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_20e369c0a_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_20e369c0a_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_20e369c0a_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_20e369c0a_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_20e369c0a_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_20e369c0a_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_20e369c0a_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_20e369c0a_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_20e369c0a_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_20e369c0a_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_20e369c0a_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_20e369c0a_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_20e369c0a_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_20e369c0a_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_20e36a17d_Range32>::make({_20e36a17d_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_20e36a17d_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_20e36a17d_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_20e36a17d_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_20e36a17d_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_20e36a17d_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_20e36a17d_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_20e36a17d_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_20e36a17d_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_20e36a17d_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_20e36a17d_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_20e36a17d_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_20e36a17d_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_20e36a17d_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_20e36a17d_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_20e36a17d_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_20e36a17d_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_20e36a17d_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_20e36a17d_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_20e36a17d_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_20e36a17d_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_20e36a17d_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_20e36a17d_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_20e36a17d_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_20e36a17d_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_20e36a17d_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_20e36a17d_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_20e36a17d_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_20e36a17d_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_20e36a17d_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_20e36a17d_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_20e36a17d_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_20e36a17d_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_20e36a17d_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_20e36a17d_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_20e36a17d_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_20e36a17d_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_20e36a17d_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_20e36a17d_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_20e36a17d_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_20e36a17d_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_20e36a17d_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_20e36a17d_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_20e36a601_RangeTable> _20e2ec7b4__LU = jule::new_ptr<_20e36a601_RangeTable>(_20e36a601_RangeTable{._field_R16=jule::Slice<_20e369c0a_Range16>::make({_20e369c0a_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_20e369c0a_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_20e369c0a_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_20e369c0a_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_20e369c0a_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_20e369c0a_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_20e369c0a_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_20e369c0a_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_20e369c0a_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_20e369c0a_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_20e369c0a_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_20e369c0a_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_20e369c0a_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_20e369c0a_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_20e369c0a_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_20e369c0a_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_20e369c0a_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_20e36a17d_Range32>::make({_20e36a17d_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_20e36a17d_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_20e36a17d_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_20e36a17d_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_20e36a17d_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_20e36a17d_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_20e36a17d_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::Str,4> _20c55bd55_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _20e4ac138_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _20e4ad667_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _20e508aad_PathStdlib = jule::Str();
jule::Str _20e50a96c_PathExec = jule::Str();
jule::Str _20e50d0bd_PathWd = jule::Str();
jule::Str _20e518848_PathApi = jule::Str();
jule::Array<jule::I32,5> _20e73eb6d_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _20e73edd2_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _20e740223_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _20e7d82cc_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _20e7d861d_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_20e7e60ed_kindPair,46> _20e7e6582_keywords = jule::Array<_20e7e60ed_kindPair,46>({_20e7e60ed_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(21LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(23LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(24LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(25LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(26LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(27LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(28LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(29LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(30LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(31LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(32LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(33LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(34LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(35LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(36LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(37LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(39LLU)}});
jule::Array<_20e7e60ed_kindPair,39> _20e7e6917_basicOps = jule::Array<_20e7e60ed_kindPair,39>({_20e7e60ed_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(22LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20e7e60ed_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(38LLU)}});
jule::Array<jule::U8,32> _211ab021c__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _211ab086b__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_2116c9dd1_floatInfo _211522773_f32info = _2116c9dd1_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_2116c9dd1_floatInfo _211527c0c_f64info = _2116c9dd1_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _2115b796c_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _21160e794_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _21161ac23_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _211632993_f32pow10 = jule::Slice<jule::F32>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
jule::Array<jule::U64,20> _2116ca3ba_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_211b050db_leftCheat> _2116cbe05_leftCheats = jule::Slice<_211b050db_leftCheat>::make({_211b050db_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_211b050db_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_211b050db_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_211b050db_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_211b050db_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_211b050db_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_211b050db_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_211b050db_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_211b050db_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_211b050db_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_211b050db_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_211b050db_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_211b050db_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_211b050db_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_211b050db_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_211b050db_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_211b050db_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_211b050db_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_211b050db_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_211b050db_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_211b050db_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_211b050db_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_211b050db_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_211b050db_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_211b050db_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_211b050db_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_211b050db_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_211b050db_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_211b050db_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_211b050db_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_211b050db_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_211b050db_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_211b050db_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_211b050db_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_211b050db_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_211b050db_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_211b050db_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_211b050db_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_211b050db_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_211b050db_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_211b050db_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_211b050db_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_211b050db_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_211b050db_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_211b050db_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_211b050db_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_211b050db_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_211b050db_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_211b050db_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_211b050db_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_211b050db_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_211b050db_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_211b050db_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_211b050db_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_211b050db_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_211b050db_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_211b050db_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_211b050db_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_211b050db_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_211b050db_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_211b050db_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _211113b17_BitSize = 0LL;
jule::Str _211114145_SysInt = jule::Str();
jule::Str _21115d579_SysUint = jule::Str();
jule::Slice<jule::Str> _21104db1d_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _20e82655c_Copy = false;
jule::Bool _20e82aa8e_Deadcode = false;
jule::Bool _20e81523d_Append = false;
jule::Bool _20e832689_Math = false;
jule::Bool _20e84dd9d_Access = false;
jule::Bool _20e85659d_Inline = false;
jule::Bool _20e85956d_Ptr = false;
jule::Bool _20e85998b_Cond = false;
jule::Bool _21246054a_exprEnabled = false;
jule::Bool _2124616a0_scopeEnabled = false;
jule::Array<jule::U64,12> _212b38dee_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Ptr<_20e36a601_RangeTable> _20e30437b_Letter = _20e2eb65e__L;
jule::Ptr<_20e36a601_RangeTable> _20e30b41b_Upper = _20e2ec7b4__LU;
jule::Array<_20e430386_acceptRange,16> _20e4306e9_acceptRanges = jule::Array<_20e430386_acceptRange,16>({_20e430386_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_20e430386_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_20e430386_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_20e430386_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_20e430386_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _20e48cc84_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _20e51912e_Os = jule::Str("linux", 5);
jule::Str _20e508728_Arch = jule::Str("amd64", 5);
jule::Array<jule::U8,256> _20e3638e6__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _20e42ed14_first = jule::Array<jule::U8,256>({});





std::ostream &operator<<(std::ostream &_Stream, _20e369c0a_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20e36a17d_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20e36a601_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20e430386_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _20d492c57_index(_20d48bc95_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _20d493461_append(_20d48bc95_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len());
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _20d496013_string(_20d48bc95_lazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_volAndPath.slice(0LL,((*_self_)._field_volLen + (*_self_)._field_w));
	};
	return ((*_self_)._field_volAndPath.slice(0LL,(*_self_)._field_volLen) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _20d48bc95_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20c697db4_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_20c697db4_DirEntry>>> static__20d422665_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_20c697db4_DirEntry>> _1534_dirents = jule::Slice<jule::Ptr<_20c697db4_DirEntry>>();
	DIR* _1617_dir = _20d381371_Opendir((&(_1520_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_20c697db4_DirEntry>>>(_20c60157b_getLastFsError());
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _20d3814a3_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_214d48e20;
			};
			jule::Str _2517_name = _20d380749_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_20d3c039e_Status> _2621_stat = ({
				auto except = static__20c606d67_Of(_20d4b1cdc_Join(jule::Slice<jule::Str>::make({_1520_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_20c697db4_DirEntry>>>(except.error);
				} jule::Ptr<_20d3c039e_Status>();});
			});;
			_1534_dirents = jule::alloc_for_append(_1534_dirents,1);_1534_dirents.__push(jule::new_ptr<_20c697db4_DirEntry>(_20c697db4_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat}));;
		}
	_iter_next_214d48e20:;
	}
	_iter_end_214d48e20:;;
	_20d381816_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_20c697db4_DirEntry>>>(jule::Any(), _1534_dirents);
}



inline jule::VoidExceptional static__20d42e3ca_Create(jule::Str _3922_path) {
	if ((_20d381bac_Mkdir((&(_3922_path[0LL])),448LL) != 0LL)) {
		return jule::VoidExceptional(_20c60157b_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__20d40b2ec_Remove(jule::Str _5122_path) {
	if ((_20d381cde_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_20c60157b_getLastFsError());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _20c6ce978_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_20d3beed6_File>> static__20c60233a_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _1913_handle = _20d38110c_Open((&(_1820_path[0LL])),static_cast<jule::I64>(_1831_flag),_1844_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_20d3beed6_File>>(_20c60157b_getLastFsError());
	};
	return jule::Exceptional<jule::Ptr<_20d3beed6_File>>(jule::Any(),static__20c6a3919_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));
}



inline jule::VoidExceptional static__20c603171_Remove(jule::Str _3022_path) {
	if ((_20d381e21_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_20c60157b_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _20c604c00_Write(_20d3beed6_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 _4441_n = jule::I64();
	if ((_4424_buff.len() == 0LL)) {
		_4441_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4441_n);
	};
	_4441_n=static_cast<jule::I64>(_20d3beb95_Write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4424_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((_4441_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_20c60157b_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_4441_n);
}



inline jule::Exceptional<jule::I64> _20c6056d4_Read(_20d3beed6_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 _6444_n = jule::I64();
	if ((_6427_buff.len() == 0LL)) {
		_6444_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_6444_n);
	};
	_6444_n=static_cast<jule::I64>(_20d3be436_Read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_6427_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((_6444_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_20c60157b_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_6444_n);
}



inline jule::Ptr<_20d3beed6_File> static__20c6a3919_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_20d3beed6_File>(_20d3beed6_File{._field_handle=_4519_handle});
}



inline jule::Exceptional<jule::Ptr<_20d3beed6_File>> static__20c6a45c9_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_20d3beed6_File>>(jule::Any(),({
		auto except = static__20c60233a_Open(_5522_path,static_cast<jule::I64>(578LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_20d3beed6_File>>(except.error);
		} jule::Ptr<_20d3beed6_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__20c6a5be6_Read(jule::Str _6720_path) {
	jule::Ptr<_20d3c039e_Status> _6813_s = ({
		auto except = static__20c606d67_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_20d3c039e_Status>();});
	});;
	if ((!(_20c6d2915_IsReg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_Size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	};
	jule::Ptr<_20d3beed6_File> _7817_f = ({
		auto except = static__20c60233a_Open(_6720_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_20d3beed6_File>();});
	});;
	__JULE_DEFER({
		({
			auto except = _20c6d0a01_Close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_Size));;
	jule::I64 _8213_n = ({
		auto except = _20c6056d4_Read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__20c6cd78a_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_20d3beed6_File> _9217_f = ({
		auto except = static__20c60233a_Open(_9121_path,static_cast<jule::I64>(577LL),_9146_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_20d3beed6_File>();});
	});;
	({
		auto except = _20c604c00_Write(_9217_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _20c6d0a01_Close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _20c6cd966_Seek(_20d3beed6_File* _self_, jule::I64 _10523_offset, jule::I64 _10536_origin) {
	jule::I64 _10613_pos = _20d3be04b_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10523_offset,static_cast<jule::I64>(_10536_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_20c60157b_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _20c6d0a01_Close(_20d3beed6_File* _self_) {
	if ((_20d3be7aa_Close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_20c60157b_getLastFsError());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _20d3beed6_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_20d3c039e_Status>> static__20c606d67_Of(jule::Str _1118_path) {
	if (_1118_path.empty()) {
		return jule::Exceptional<jule::Ptr<_20d3c039e_Status>>(static_cast<jule::I64>(4LL));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _20d380eca_Stat((&(_1118_path[0LL])),(&(_1517_handle)));;
	if ((_1613_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_20d3c039e_Status>>(jule::Any(),jule::new_ptr<_20d3c039e_Status>(_20d3c039e_Status{._field_Mode=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_mode)), ._field_Size=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_size))}));
	};
	return jule::Exceptional<jule::Ptr<_20d3c039e_Status>>(_20c60157b_getLastFsError());
}



inline jule::Bool _20c6d15e5_IsDir(_20d3c039e_Status* _self_) {
	return (((*_self_)._field_Mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _20c6d2915_IsReg(_20d3c039e_Status* _self_) {
	return (((*_self_)._field_Mode & 32768LLU) == 32768LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _20d3c039e_Status _Src) {
	_Stream << "Status{";
	_Stream << "Mode:" << _Src._field_Mode << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20e51a4e8_Cmd> static__20e51a927_New(jule::Str _2019_path) {
	return jule::new_ptr<_20e51a4e8_Cmd>(_20e51a4e8_Cmd{._field_path=_2019_path, });
}



inline jule::Exceptional<jule::I64> _20e51ab8b_Spawn(_20e51a4e8_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _20e51dae5_spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _20e51dae5_spawn(_20e51a4e8_Cmd* _self_) {
	if ((*_self_)._field_path.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(3LL));
	};
	jule::I64 _4913_pid = fork();;
	{
		auto &_match_expr{ _4913_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_214d6d7d5:;
			{
				return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_214d6ca59:;
			{
				jule::I64 _5421_status = 0LL;;
				if (((*_self_)._field_Env == nullptr)) {
					_5421_status=static_cast<jule::I64>(_20e51d41e_execvp((*_self_)._field_path,(*_self_)._field_Args));
				} else {
					_5421_status=static_cast<jule::I64>(_20e51d809_execve((*_self_)._field_path,(*_self_)._field_Args,(*_self_)._field_Env));
				};
				if ((_5421_status == -1LL)) {
					kill(static_cast<jule::I64>(getpid()),SIGTERM);
				};
				_20e51e420_Exit(255LL);
			}
		}
		_match_end_214d6d780:;
	};
	jule::I64 _6513_status = 0LL;;
	if ((waitpid(_4913_pid,((signed*)((&(_6513_status)))),WUNTRACED) == -1LL)) {
		return jule::Exceptional<jule::I64>(_20e519c67_getLastProcessError());
	};
	if (WIFSIGNALED(_6513_status)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(WEXITSTATUS(_6513_status)));
}







std::ostream &operator<<(std::ostream &_Stream, _20e51a4e8_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20e4ba377_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _20e7de0b3_Prec(_20e7ddc0b_Token* _self_) {
	if (((*_self_)._field_Id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_214e1ec4e:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_214e1ecb5:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_214e1e633:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_214e1e699:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_214e1e710:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_214e1e446:;
			{
				return 0LLU;
			}
		}
		_match_end_214e1da1c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20e7ddc0b_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20e7e44a3_IsOk(_20e7e4096_File* _self_) {
	({
		auto except = static__20c606d67_Of((*_self_)._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::Ptr<_20d3c039e_Status>();});
	});
	return true;
}



inline void _20e7e4728_Fill(_20e7e4096_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*_self_)._field_Data=_2327_data;
}



inline jule::Str _20e7e498c_Dir(_20e7e4096_File* _self_) {
	return _20d49e7d0_Dir((*_self_)._field_Path);
}



inline jule::Str _20e7e4c01_Name(_20e7e4096_File* _self_) {
	return _20d499d6e_Base((*_self_)._field_Path);
}



inline jule::Uintptr _20e7e4e65_Addr(_20e7e4096_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));
}



inline jule::Str _20e7e5273_GetRow(_20e7e4096_File* _self_, jule::I64 _4421_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_lineStart = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_Data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_Data[_4717_i] != '\n')) {
				goto _iter_next_214e24924;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*_self_)._field_Data.slice(_4617_lineStart,_4717_i));
			};
			_4617_lineStart=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_214e24924:;
	}
	_iter_end_214e24924:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _20e7e4096_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20e7e60ed_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _20e7ec28b_pushErr(_20e7ebbe7_lex* _self_, jule::Str _45726_fmt, jule::Slice<jule::Any> _45739_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_20e7e6e01_makeErr((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45726_fmt,jule::Any(_45739_args)));;
}



inline void _20e7ec5aa_pushErrTok(_20e7ebbe7_lex* _self_, jule::Ptr<_20e7ddc0b_Token>& _46230_token, jule::Str _46245_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_20e7e6e01_makeErr(_46230_token.get()._field_Row,_46230_token.get()._field_Column,(*_self_)._field_file,_46245_fmt,jule::Slice<jule::Any>()));;
}



inline void _20e7ec786_lex(_20e7ebbe7_lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_20e7ee788_newLine(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_20e7ddc0b_Token> _47221_token = _20e800b0d_token(&(*_self_));;
			if ((_47221_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47221_token);;
			};
		}
	_iter_next_214e62005:;
	}
	_iter_end_214e62005:;;
}



inline jule::Str _20e7eca94_id(_20e7ebbe7_lex* _self_, jule::Slice<jule::U8>& _48122_ln) {
	if ((_48122_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48514_r;;
	jule::I64 _48521_i;;
	std::tie(_48514_r,_48521_i) = _20e430e69_DecodeRune(_48122_ln);
	if (((_48514_r != '_') && (!(_20e7e21d7_IsLetter(_48514_r))))) {
		return jule::Str();
	};
	while ((_48521_i < _48122_ln.len())) {
		{
			jule::I32 _49118_pr;;
			jule::I64 _49122_n;;
			std::tie(_49118_pr,_49122_n) = _20e430e69_DecodeRune(_48122_ln.slice(_48521_i));
			if ((((_49118_pr != '_') && (!(_20e7e2726_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49118_pr)))))) && (!(_20e7e21d7_IsLetter(_49118_pr))))) {
				(*_self_)._field_pos+=_48521_i;
				return static_cast<jule::Str>(_48122_ln.slice(0LL,_48521_i));
			};
			_48521_i+=_49122_n;
		}
	_iter_next_214e6490e:;
	}
	_iter_end_214e6490e:;;
	(*_self_)._field_pos+=_48122_ln.len();
	return static_cast<jule::Str>(_48122_ln);
}



inline jule::Slice<jule::U8> _20e7ecd08_resume(_20e7ebbe7_lex* _self_) {
	jule::I64 _50617_i = (*_self_)._field_pos;;
	for (; (_50617_i < (*_self_)._field_file.get()._field_Data.len()); (_50617_i)++) {
		{
			jule::I32 _50817_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_Data[_50617_i]);;
			if (_20e7e1c86_IsSpace(_50817_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50817_r };
					
					if (_match_expr == '\n') {
						_case_begin_214e69628:;
						{
							_20e7ee788_newLine(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_214e6975a:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_214e67516:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_214e69194:;
				};
				goto _iter_next_214e677d0;
			};
			jule::I64 _52321_j = _50617_i;;
			for (; (_52321_j < (*_self_)._field_file.get()._field_Data.len()); (_52321_j)++) {
				{
					if (((*_self_)._field_file.get()._field_Data[_52321_j] == '\n')) {
						goto _iter_end_214e6854a;
					};
				}
			_iter_next_214e6854a:;
			}
			_iter_end_214e6854a:;;
			return (*_self_)._field_file.get()._field_Data.slice(_50617_i,_52321_j);
		}
	_iter_next_214e677d0:;
	}
	_iter_end_214e677d0:;;
	return nullptr;
}



inline void _20e7ed07d_lexLineComment(_20e7ebbe7_lex* _self_, jule::Ptr<_20e7ddc0b_Token>& _53438_token) {
	jule::I64 _53513_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _53817_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if (((_53817_r == '\n') || (_53817_r == '\r'))) {
				goto _iter_end_214e6c1db;
			};
		}
	_iter_next_214e6c1db:;
	}
	_iter_end_214e6c1db:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53438_token.get()._field_Id=static_cast<jule::U64>(18LLU);
		_53438_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_53513_start,(*_self_)._field_pos));
	};
}



inline void _20e7ed303_lexRangeComment(_20e7ebbe7_lex* _self_, jule::Ptr<_20e7ddc0b_Token>& _54939_token) {
	jule::I64 _55013_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55317_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_55317_r == '\r')) {
				goto _iter_next_214e706a6;
			};
			if ((_55317_r == '\n')) {
				_20e7ee788_newLine(&(*_self_));
				goto _iter_next_214e706a6;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_Data.len()) && (_55317_r == '*')) && ((*_self_)._field_file.get()._field_Data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_54939_token.get()._field_Id=static_cast<jule::U64>(18LLU);
					_54939_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_55013_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_214e706a6:;
	}
	_iter_end_214e706a6:;;
	_20e7ec28b_pushErr(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _20e7ed611_num(_20e7ebbe7_lex* _self_, jule::Slice<jule::U8>& _57723_txt) {
	jule::Str _57738_lit = jule::Str();
	if ((_57723_txt[0LL] == '_')) {
		_57738_lit = jule::Str();
		return _57738_lit;
	};
	_57738_lit=_20e7ea71d_hexNum(_57723_txt);
	if ((!(_57738_lit.empty()))) {
		goto _julec_label_end;
	};
	_57738_lit=_20e7ea476_octalNum(_57723_txt);
	if ((!(_57738_lit.empty()))) {
		goto _julec_label_end;
	};
	_57738_lit=_20e7e8dc0_binaryNum(_57723_txt);
	if ((!(_57738_lit.empty()))) {
		goto _julec_label_end;
	};
	_57738_lit=_20e7e8b28_commonNum(_57723_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57738_lit.len();
	return _57738_lit;
}



inline jule::Str _20e7ed91e_escapeSeq(_20e7ebbe7_lex* _self_, jule::Slice<jule::U8>& _59929_txt) {
	jule::Str _60017_seq = jule::Str();;
	if ((_59929_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _59929_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_214e7a8d1:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_59929_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_214e7a5d4:;
			{
				_60017_seq=_20e7ead06_bigUnicodePointEscape(_59929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_214e7a64a:;
			{
				_60017_seq=_20e7eb0c0_littleUnicodePointEscape(_59929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_214e7a6b1:;
			{
				_60017_seq=_20e7eb279_hexByteEscape(_59929_txt);
			}
		}
		else {
			_case_begin_214e79d64:;
			{
				_60017_seq=_20e7eb510_byteEscape(_59929_txt);
			}
		}
		_match_end_214e7a491:;
	};
	_julec_label_end:;
	if (_60017_seq.empty()) {
		((*_self_)._field_pos)++;
		_20e7ec28b_pushErr(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60017_seq.len();
	return _60017_seq;
}



inline jule::Str _20e7edcc6_getRune(_20e7ebbe7_lex* _self_, jule::Slice<jule::U8>& _62927_txt, jule::Bool _62940_raw) {
	if (((!(_62940_raw)) && (_62927_txt[0LL] == '\\'))) {
		return _20e7ed91e_escapeSeq(&(*_self_), _62927_txt);
	};
	jule::I32 _63314_r;;
	jule::I64 _63317_n;;
	std::tie(_63314_r,_63317_n) = _20e430e69_DecodeRune(_62927_txt);
	(*_self_)._field_pos+=_63317_n;
	return static_cast<jule::Str>(_63314_r);
}



inline jule::Str _20e7ee0d4_lexRune(_20e7ebbe7_lex* _self_, jule::Slice<jule::U8>& _63827_txt) {
	jule::Str _63917_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64117_n = 0LL;;
	jule::I64 _64217_i = 1LL;;
	for (; (_64217_i < _63827_txt.len()); (_64217_i)++) {
		{
			if ((_63827_txt[_64217_i] == '\r')) {
				goto _iter_next_214e82883;
			};
			if ((_63827_txt[_64217_i] == '\n')) {
				_20e7ec28b_pushErr(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_20e7ee788_newLine(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65417_part = _63827_txt.slice(_64217_i);;
			jule::Str _65517_r = _20e7edcc6_getRune(&(*_self_), _65417_part,false);;
			_63917_run+=_65517_r;
			(*_self_)._field_column+=_20e432b5d_RuneCountStr(_65517_r);
			if ((_65517_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_214e82883;
			};
			if ((_65517_r.len() > 1LL)) {
				_64217_i+=(_65517_r.len() - 1LL);
			};
			(_64117_n)++;
		}
	_iter_next_214e82883:;
	}
	_iter_end_214e82883:;;
	if ((_64117_n == 0LL)) {
		_20e7ec28b_pushErr(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64117_n > 1LL)) {
		_20e7ec28b_pushErr(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _63917_run;
}



inline jule::Str _20e7ee348_lexStr(_20e7ebbe7_lex* _self_) {
	jule::Str _67817_s = jule::Str();;
	jule::U8 _67913_mark = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68113_raw = (_67913_mark == '`');;
	_67817_s+=static_cast<jule::Str>(_67913_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68617_ch = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_68617_ch == '\r')) {
				goto _iter_next_214e88999;
			};
			if ((_68617_ch == '\n')) {
				_20e7ee788_newLine(&(*_self_));
				if ((!(_68113_raw))) {
					_20e7ec28b_pushErr(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _69821_part = (*_self_)._field_file.get()._field_Data.slice((*_self_)._field_pos);;
			jule::Str _69917_r = _20e7edcc6_getRune(&(*_self_), _69821_part,_68113_raw);;
			_67817_s+=_69917_r;
			(*_self_)._field_column+=_20e432b5d_RuneCountStr(_69917_r);
			if ((_68617_ch == _67913_mark)) {
				goto _iter_end_214e88999;
			};
		}
	_iter_next_214e88999:;
	}
	_iter_end_214e88999:;;
	return _67817_s;
}



inline jule::Bool _20e7ee5ac_isFirstTokenOfLine(_20e7ebbe7_lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _20e7ee788_newLine(_20e7ebbe7_lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _20e7eec83_isOp(_20e7ebbe7_lex* _self_, jule::Slice<jule::U8>& _71924_txt, jule::Str _71937_kind, jule::U64 _71948_id, jule::Ptr<_20e7ddc0b_Token>& _71966_t) {
	if ((!(_20e7e7286_bytesHasPrefix(_71924_txt,_71937_kind)))) {
		return false;
	};
	_71966_t.get()._field_Kind=_71937_kind;
	_71966_t.get()._field_Id=_71948_id;
	(*_self_)._field_pos+=_71937_kind.len();
	return true;
}



inline jule::Bool _20e80013a_lexBasicOps(_20e7ebbe7_lex* _self_, jule::Slice<jule::U8> _72930_txt, jule::Ptr<_20e7ddc0b_Token>& _72948_tok) {
	{
		auto &expr = _20e7e6917_basicOps;
		auto it = expr.begin();
		_iter_begin_214e9020e:;
		if (it != expr.end()) {
			_20e7e60ed_kindPair &_73016_pair = *it;
			{
				if (_20e7eec83_isOp(&(*_self_), _72930_txt,_73016_pair._field_kind,_73016_pair._field_id,_72948_tok)) {
					return true;
				};
			}
			_iter_next_214e9020e:;
			++it;
			goto _iter_begin_214e9020e;
		}
		_iter_end_214e9020e:;
	};
	return false;
}



inline jule::Bool _20e8004e2_lexId(_20e7ebbe7_lex* _self_, jule::Slice<jule::U8>& _73925_txt, jule::Ptr<_20e7ddc0b_Token>& _73943_t) {
	jule::Str _74013_lex = _20e7eca94_id(&(*_self_), _73925_txt);;
	if (_74013_lex.empty()) {
		return false;
	};
	_73943_t.get()._field_Kind=_74013_lex;
	_73943_t.get()._field_Id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _20e800899_lexNum(_20e7ebbe7_lex* _self_, jule::Slice<jule::U8>& _74926_txt, jule::Ptr<_20e7ddc0b_Token>& _74944_t) {
	jule::Str _75013_lex = _20e7ed611_num(&(*_self_), _74926_txt);;
	if (_75013_lex.empty()) {
		return false;
	};
	_74944_t.get()._field_Kind=_75013_lex;
	_74944_t.get()._field_Id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_20e7ddc0b_Token> _20e800b0d_token(_20e7ebbe7_lex* _self_) {
	jule::Ptr<_20e7ddc0b_Token> _76117_t = jule::new_ptr<_20e7ddc0b_Token>(_20e7ddc0b_Token{._field_File=(*_self_)._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _76613_txt = _20e7ecd08_resume(&(*_self_));;
	if ((_76613_txt == nullptr)) {
		return _76117_t;
	};
	_76117_t.get()._field_Column=(*_self_)._field_column;
	_76117_t.get()._field_Row=(*_self_)._field_row;
	{
		
		if (_20e800899_lexNum(&(*_self_), _76613_txt,_76117_t)) {
			_case_begin_214e96677:;
			{
				goto _match_end_214e95148;
			}
		}
		else if ((_76613_txt[0LL] == '\'')) {
			_case_begin_214e966dd:;
			{
				_76117_t.get()._field_Kind=_20e7ee0d4_lexRune(&(*_self_), _76613_txt);
				_76117_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76117_t;
			}
		}
		else if (((_76613_txt[0LL] == '\"') || (_76613_txt[0LL] == '`'))) {
			_case_begin_214e97337:;
			{
				_76117_t.get()._field_Kind=_20e7ee348_lexStr(&(*_self_));
				_76117_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76117_t;
			}
		}
		else if (_20e7e7286_bytesHasPrefix(_76613_txt,jule::Str("//", 2))) {
			_case_begin_214e9739d:;
			{
				_20e7ed07d_lexLineComment(&(*_self_), _76117_t);
				return _76117_t;
			}
		}
		else if (_20e7e7286_bytesHasPrefix(_76613_txt,jule::Str("/*", 2))) {
			_case_begin_214e97414:;
			{
				_20e7ed303_lexRangeComment(&(*_self_), _76117_t);
				return _76117_t;
			}
		}
		else if (_20e7eec83_isOp(&(*_self_), _76613_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76117_t) || _20e7eec83_isOp(&(*_self_), _76613_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76117_t) || _20e7eec83_isOp(&(*_self_), _76613_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76117_t) || _20e7eec83_isOp(&(*_self_), _76613_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76117_t) || _20e7eec83_isOp(&(*_self_), _76613_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76117_t) || _20e7eec83_isOp(&(*_self_), _76613_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76117_t) || _20e80013a_lexBasicOps(&(*_self_), _76613_txt,_76117_t)) {
			_case_begin_214e95b0a:;
			{
				goto _match_end_214e95148;
			}
		}
		else if (_20e8004e2_lexId(&(*_self_), _76613_txt,_76117_t)) {
			_case_begin_214e95b71:;
			{
				{
					auto &expr = _20e7e6582_keywords;
					auto it = expr.begin();
					_iter_begin_214e9ce97:;
					if (it != expr.end()) {
						_20e7e60ed_kindPair &_80420_pair = *it;
						{
							if ((_80420_pair._field_kind == _76117_t.get()._field_Kind)) {
								_76117_t.get()._field_Id=_80420_pair._field_id;
								goto _iter_end_214e9ce97;
							};
						}
						_iter_next_214e9ce97:;
						++it;
						goto _iter_begin_214e9ce97;
					}
					_iter_end_214e9ce97:;
				};
			}
		}
		else {
			_case_begin_214e95a94:;
			{
				jule::I32 _81118_r;;
				jule::I64 _81121_sz;;
				std::tie(_81118_r,_81121_sz) = _20e430e69_DecodeRune(_76613_txt);
				_20e7ec28b_pushErr(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81118_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81121_sz;
				return _76117_t;
			}
		}
		_match_end_214e95148:;
	};
	(*_self_)._field_column+=_20e432b5d_RuneCountStr(_76117_t.get()._field_Kind);
	return _76117_t;
}







std::ostream &operator<<(std::ostream &_Stream, _20e7ebbe7_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e1c811_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e1d4b0_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e1d8ab_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e520a4_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e529cd_IsPrim(_210e5266a_IdentTypeDecl* _self_) {
	return ((*_self_)._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _210e5266a_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e52cb9_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e53171_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e5345c_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e53858_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e53b44_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e54282_IsUnsafe(_210e53e30_PtrTypeDecl* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _210e53e30_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e5498b_AutoSized(_210e545b2_ArrTypeDecl* _self_) {
	return ((*_self_)._field_Size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _210e545b2_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e54d10_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e551b7_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e565c5_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e568b1_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e56e66_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e57252_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e5795b_IsNil(_210e57609_LitExpr* _self_) {
	return ((*_self_)._field_Value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _210e57609_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e57d13_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e581ba_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e58990_IsSelf(_210e5863d_IdentExpr* _self_) {
	return ((*_self_)._field_Ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _210e5863d_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e58d47_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e591ee_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e595a6_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e5995d_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e59dd1_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e5a354_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e5ac06_Unhandled(_210e5a893_FnCallExpr* _self_) {
	return ((*_self_)._field_Exception == nullptr);
}



inline jule::Bool _210e5ae6a_Ignored(_210e5a893_FnCallExpr* _self_) {
	return (((*_self_)._field_Exception != nullptr) && (*_self_)._field_Exception.get()._field_Deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _210e5a893_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e5b674_IsTargeted(_210e5b322_FieldExprPair* _self_) {
	return ((*_self_)._field_Field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _210e5b322_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e5ba70_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e5c664_IsEmpty(_210e5bee3_BraceLit* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _210e5bee3_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e5ca0a_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e5d2d0_IsEmpty(_210e5ce7d_SliceExpr* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _210e5ce7d_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e5d81e_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e5de29_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e5e215_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e5e688_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e5ea40_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e5ede7_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e601d3_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e607dd_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e60d2c_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e61cb7_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e623c2_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e62e0b_IsSelf(_210e62a98_ParamDecl* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _210e63170_IsRef(_210e62a98_ParamDecl* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _210e62a98_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e6421a_IsAnon(_210e63db8_FnDecl* _self_) {
	return ((*_self_)._field_Ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _210e63db8_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e64d97_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e6524e_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e65c11_IsInf(_210e658ae_Iter* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _210e658ae_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e664d6_IsWhileNext(_210e66184_WhileKind* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _210e66184_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e66a25_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e66dcc_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e67284_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e67707_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e67aae_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e68032_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e68708_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e68b7b_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e69352_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e69ae4_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e6a3b9_AutoExpr(_210e6a067_EnumItemDecl* _self_) {
	return ((*_self_)._field_Expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _210e6a067_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e6b123_DefaultTyped(_210e6aa90_EnumDecl* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _210e6aa90_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e6b596_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e6b794_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e6bce4_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e6c652_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e6cc5c_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e6d6ca_IsTraitImpl(_210e6d367_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _210e6d93e_IsStructImpl(_210e6d367_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _210e6d367_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_210ea46cd_Const> static__21100e5b2_NewI64(jule::I64 _1322_x) {
	return jule::new_ptr<_210ea46cd_Const>(_210ea46cd_Const{._field_data=jule::Any(_1322_x)});
}



inline jule::Ptr<_210ea46cd_Const> static__21100e6e4_NewU64(jule::U64 _1622_x) {
	return jule::new_ptr<_210ea46cd_Const>(_210ea46cd_Const{._field_data=jule::Any(_1622_x)});
}



inline jule::Ptr<_210ea46cd_Const> static__21100e87b_NewBool(jule::Bool _1923_x) {
	return jule::new_ptr<_210ea46cd_Const>(_210ea46cd_Const{._field_data=jule::Any(_1923_x)});
}



inline jule::Ptr<_210ea46cd_Const> static__21100eb23_NewStr(jule::Str _2222_x) {
	return jule::new_ptr<_210ea46cd_Const>(_210ea46cd_Const{._field_data=jule::Any(_2222_x)});
}



inline jule::Ptr<_210ea46cd_Const> static__21100edba_NewF64(jule::F64 _2522_x) {
	return jule::new_ptr<_210ea46cd_Const>(_210ea46cd_Const{._field_data=jule::Any(_2522_x)});
}



inline jule::Ptr<_210ea46cd_Const> static__2110100b8_NewNil(void) {
	return jule::new_ptr<_210ea46cd_Const>(_210ea46cd_Const{._field_data=nullptr});
}



inline jule::I64 _2110106b2_ReadI64(_210ea46cd_Const* _self_) {
	if ((!(_211012a5a_IsI64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _211010926_ReadU64(_210ea46cd_Const* _self_) {
	if ((!(_211012cbe_IsU64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _211010b8a_ReadBool(_210ea46cd_Const* _self_) {
	if ((!(_211013033_IsBool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _211010dee_ReadStr(_210ea46cd_Const* _self_) {
	if ((!(_211013297_IsStr(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _211011163_ReadF64(_210ea46cd_Const* _self_) {
	if ((!(_21101350b_IsF64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _2110113c7_AsI64(_210ea46cd_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_215010c96:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_215010d0c:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_2150106ad:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_21501059d:;
			{
				return 0LL;
			}
		}
		_match_end_2150103e4:;
	};
}



inline jule::U64 _21101163b_AsU64(_210ea46cd_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_215011c64:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_215012825:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_21501288b:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_215010ea5:;
			{
				return 0LLU;
			}
		}
		_match_end_215010e50:;
	};
}



inline jule::F64 _2110118a0_AsF64(_210ea46cd_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_2150137e3:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_2150143a4:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_21501441a:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_215012649:;
			{
				return 0LL;
			}
		}
		_match_end_2150125e4:;
	};
}



inline void _211011b25_SetI64(_210ea46cd_Const* _self_, jule::I64 _13525_x) {
	(*_self_)._field_data=jule::Any(_13525_x);
}



inline void _211011d9a_SetU64(_210ea46cd_Const* _self_, jule::U64 _13825_x) {
	(*_self_)._field_data=jule::Any(_13825_x);
}



inline void _211012120_SetBool(_210ea46cd_Const* _self_, jule::Bool _14126_x) {
	(*_self_)._field_data=jule::Any(_14126_x);
}



inline void _211012395_SetStr(_210ea46cd_Const* _self_, jule::Str _14425_x) {
	(*_self_)._field_data=jule::Any(_14425_x);
}



inline void _21101261a_SetF64(_210ea46cd_Const* _self_, jule::F64 _14725_x) {
	(*_self_)._field_data=jule::Any(_14725_x);
}



inline void _2110127e6_SetNil(_210ea46cd_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _211012a5a_IsI64(_210ea46cd_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_2150181ee:;
			{
				return true;
			}
		}
		else {
			_case_begin_215018133:;
			{
				return false;
			}
		}
		_match_end_2150180cd:;
	};
}



inline jule::Bool _211012cbe_IsU64(_210ea46cd_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_215018cd2:;
			{
				return true;
			}
		}
		else {
			_case_begin_2150189c4:;
			{
				return false;
			}
		}
		_match_end_2150186b6:;
	};
}



inline jule::Bool _211013033_IsBool(_210ea46cd_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_21501981b:;
			{
				return true;
			}
		}
		else {
			_case_begin_21501950d:;
			{
				return false;
			}
		}
		_match_end_2150191de:;
	};
}



inline jule::Bool _211013297_IsStr(_210ea46cd_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_21501a355:;
			{
				return true;
			}
		}
		else {
			_case_begin_21501a047:;
			{
				return false;
			}
		}
		_match_end_215019c28:;
	};
}



inline jule::Bool _21101350b_IsF64(_210ea46cd_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_21501ad8e:;
			{
				return true;
			}
		}
		else {
			_case_begin_21501aa81:;
			{
				return false;
			}
		}
		_match_end_21501a762:;
	};
}



inline jule::Bool _211013770_IsNil(_210ea46cd_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _211013a7d_AreSameTypes(_210ea46cd_Const* _self_, _210ea46cd_Const _21027_x) {
	{
		
		if ((_211012a5a_IsI64(&(*_self_)) == _211012a5a_IsI64(&_21027_x))) {
			_case_begin_21501c753:;
			{
				return true;
			}
		}
		else if ((_211012cbe_IsU64(&(*_self_)) == _211012cbe_IsU64(&_21027_x))) {
			_case_begin_21501bee4:;
			{
				return true;
			}
		}
		else if ((_21101350b_IsF64(&(*_self_)) == _21101350b_IsF64(&_21027_x))) {
			_case_begin_21501c06b:;
			{
				return true;
			}
		}
		else if ((_211013033_IsBool(&(*_self_)) == _211013033_IsBool(&_21027_x))) {
			_case_begin_21501c0e3:;
			{
				return true;
			}
		}
		else if ((_211013297_IsStr(&(*_self_)) == _211013297_IsStr(&_21027_x))) {
			_case_begin_21501c16a:;
			{
				return true;
			}
		}
		else if ((_211013770_IsNil(&(*_self_)) == _211013770_IsNil(&_21027_x))) {
			_case_begin_21501c412:;
			{
				return true;
			}
		}
		else {
			_case_begin_21501be6c:;
			{
				return false;
			}
		}
		_match_end_21501bd90:;
	};
}



inline jule::Bool _211013d8b_And(_210ea46cd_Const* _self_, _210ea46cd_Const _23518_x) {
	{
		
		if ((_211013033_IsBool(&(*_self_)) && _211013033_IsBool(&_23518_x))) {
			_case_begin_215020c73:;
			{
				return (_211010b8a_ReadBool(&(*_self_)) && _211010b8a_ReadBool(&_23518_x));
			}
		}
		else {
			_case_begin_21502037c:;
			{
				return false;
			}
		}
		_match_end_2150202a0:;
	};
}



inline jule::Bool _211014199_Or(_210ea46cd_Const* _self_, _210ea46cd_Const _24617_x) {
	{
		
		if ((_211013033_IsBool(&(*_self_)) && _211013033_IsBool(&_24617_x))) {
			_case_begin_2150221b4:;
			{
				return (_211010b8a_ReadBool(&(*_self_)) || _211010b8a_ReadBool(&_24617_x));
			}
		}
		else {
			_case_begin_2150210d6:;
			{
				return false;
			}
		}
		_match_end_215021009:;
	};
}



inline jule::Bool _2110144a7_Eq(_210ea46cd_Const* _self_, _210ea46cd_Const _25717_x) {
	{
		
		if (_211013770_IsNil(&(*_self_))) {
			_case_begin_21502367c:;
			{
				return _211013770_IsNil(&_25717_x);
			}
		}
		else if (_211013033_IsBool(&(*_self_))) {
			_case_begin_215022e73:;
			{
				return (_211013033_IsBool(&_25717_x) && (_211010b8a_ReadBool(&(*_self_)) == _211010b8a_ReadBool(&_25717_x)));
			}
		}
		else if (_211013297_IsStr(&(*_self_))) {
			_case_begin_215022ed9:;
			{
				return (_211013297_IsStr(&_25717_x) && (_211010dee_ReadStr(&(*_self_)) == _211010dee_ReadStr(&_25717_x)));
			}
		}
		else if (_211012a5a_IsI64(&(*_self_))) {
			_case_begin_215023061:;
			{
				return (_2110106b2_ReadI64(&(*_self_)) == _2110113c7_AsI64(&_25717_x));
			}
		}
		else if (_211012cbe_IsU64(&(*_self_))) {
			_case_begin_2150230d8:;
			{
				return (_211010926_ReadU64(&(*_self_)) == _21101163b_AsU64(&_25717_x));
			}
		}
		else if (_21101350b_IsF64(&(*_self_))) {
			_case_begin_21502335d:;
			{
				return (_211011163_ReadF64(&(*_self_)) == _2110118a0_AsF64(&_25717_x));
			}
		}
		else {
			_case_begin_215022549:;
			{
				return false;
			}
		}
		_match_end_21502246c:;
	};
}



inline jule::Bool _2110147b5_Lt(_210ea46cd_Const* _self_, _210ea46cd_Const _28417_x) {
	{
		
		if (_211013297_IsStr(&(*_self_))) {
			_case_begin_21502795b:;
			{
				return (_211013297_IsStr(&_28417_x) && (_211010dee_ReadStr(&(*_self_)) < _211010dee_ReadStr(&_28417_x)));
			}
		}
		else if (_211012a5a_IsI64(&(*_self_))) {
			_case_begin_21502730c:;
			{
				return (_2110106b2_ReadI64(&(*_self_)) < _2110113c7_AsI64(&_28417_x));
			}
		}
		else if (_211012cbe_IsU64(&(*_self_))) {
			_case_begin_215027373:;
			{
				return (_211010926_ReadU64(&(*_self_)) < _21101163b_AsU64(&_28417_x));
			}
		}
		else if (_21101350b_IsF64(&(*_self_))) {
			_case_begin_2150273d9:;
			{
				return (_211011163_ReadF64(&(*_self_)) < _2110118a0_AsF64(&_28417_x));
			}
		}
		else {
			_case_begin_2150239ac:;
			{
				return false;
			}
		}
		_match_end_215027131:;
	};
}



inline jule::Bool _211014ac3_LtEq(_210ea46cd_Const* _self_, _210ea46cd_Const _30719_x) {
	{
		
		if (_211013297_IsStr(&(*_self_))) {
			_case_begin_21502aad5:;
			{
				return (_211013297_IsStr(&_30719_x) && (_211010dee_ReadStr(&(*_self_)) <= _211010dee_ReadStr(&_30719_x)));
			}
		}
		else if (_211012a5a_IsI64(&(*_self_))) {
			_case_begin_21502a486:;
			{
				return (_2110106b2_ReadI64(&(*_self_)) <= _2110113c7_AsI64(&_30719_x));
			}
		}
		else if (_211012cbe_IsU64(&(*_self_))) {
			_case_begin_21502a4ec:;
			{
				return (_211010926_ReadU64(&(*_self_)) <= _21101163b_AsU64(&_30719_x));
			}
		}
		else if (_21101350b_IsF64(&(*_self_))) {
			_case_begin_21502a563:;
			{
				return (_211011163_ReadF64(&(*_self_)) <= _2110118a0_AsF64(&_30719_x));
			}
		}
		else {
			_case_begin_215027b6a:;
			{
				return false;
			}
		}
		_match_end_215029b7d:;
	};
}



inline jule::Bool _211014dd1_Gt(_210ea46cd_Const* _self_, _210ea46cd_Const _33017_x) {
	{
		
		if (_211013297_IsStr(&(*_self_))) {
			_case_begin_21502dc5e:;
			{
				return (_211013297_IsStr(&_33017_x) && (_211010dee_ReadStr(&(*_self_)) > _211010dee_ReadStr(&_33017_x)));
			}
		}
		else if (_211012a5a_IsI64(&(*_self_))) {
			_case_begin_21502d610:;
			{
				return (_2110106b2_ReadI64(&(*_self_)) > _2110113c7_AsI64(&_33017_x));
			}
		}
		else if (_211012cbe_IsU64(&(*_self_))) {
			_case_begin_21502d676:;
			{
				return (_211010926_ReadU64(&(*_self_)) > _21101163b_AsU64(&_33017_x));
			}
		}
		else if (_21101350b_IsF64(&(*_self_))) {
			_case_begin_21502d6dc:;
			{
				return (_211011163_ReadF64(&(*_self_)) > _2110118a0_AsF64(&_33017_x));
			}
		}
		else {
			_case_begin_21502ace4:;
			{
				return false;
			}
		}
		_match_end_21502cd07:;
	};
}



inline jule::Bool _2110151de_GtEq(_210ea46cd_Const* _self_, _210ea46cd_Const _35319_x) {
	{
		
		if (_211013297_IsStr(&(*_self_))) {
			_case_begin_215031dd8:;
			{
				return (_211013297_IsStr(&_35319_x) && (_211010dee_ReadStr(&(*_self_)) >= _211010dee_ReadStr(&_35319_x)));
			}
		}
		else if (_211012a5a_IsI64(&(*_self_))) {
			_case_begin_215031789:;
			{
				return (_2110106b2_ReadI64(&(*_self_)) >= _2110113c7_AsI64(&_35319_x));
			}
		}
		else if (_211012cbe_IsU64(&(*_self_))) {
			_case_begin_215031800:;
			{
				return (_211010926_ReadU64(&(*_self_)) >= _21101163b_AsU64(&_35319_x));
			}
		}
		else if (_21101350b_IsF64(&(*_self_))) {
			_case_begin_215031866:;
			{
				return (_211011163_ReadF64(&(*_self_)) >= _2110118a0_AsF64(&_35319_x));
			}
		}
		else {
			_case_begin_21502de6d:;
			{
				return false;
			}
		}
		_match_end_215030e81:;
	};
}



inline jule::Bool _2110154ec_Add(_210ea46cd_Const* _self_, _210ea46cd_Const _37422_x) {
	{
		
		if (_211013297_IsStr(&(*_self_))) {
			_case_begin_215035062:;
			{
				if ((!(_211013297_IsStr(&_37422_x)))) {
					return false;
				};
				_211012395_SetStr(&(*_self_), (_211010dee_ReadStr(&(*_self_)) + _211010dee_ReadStr(&_37422_x)));
			}
		}
		else if (_21101350b_IsF64(&(*_self_))) {
			_case_begin_215034913:;
			{
				_21101261a_SetF64(&(*_self_), static_cast<jule::F64>((_211011163_ReadF64(&(*_self_)) + _2110118a0_AsF64(&_37422_x))));
			}
		}
		else if (_211012a5a_IsI64(&(*_self_))) {
			_case_begin_215034979:;
			{
				if (_21101350b_IsF64(&_37422_x)) {
					_21101261a_SetF64(&(*_self_), static_cast<jule::F64>((_2110118a0_AsF64(&(*_self_)) + _211011163_ReadF64(&_37422_x))));
				} else {
					_211011b25_SetI64(&(*_self_), static_cast<jule::I64>((_2110106b2_ReadI64(&(*_self_)) + _2110113c7_AsI64(&_37422_x))));
				};
			}
		}
		else if (_211012cbe_IsU64(&(*_self_))) {
			_case_begin_2150349e0:;
			{
				if (_21101350b_IsF64(&_37422_x)) {
					_21101261a_SetF64(&(*_self_), static_cast<jule::F64>((_2110118a0_AsF64(&(*_self_)) + _211011163_ReadF64(&_37422_x))));
				} else {
					_211011d9a_SetU64(&(*_self_), static_cast<jule::U64>((_211010926_ReadU64(&(*_self_)) + _21101163b_AsU64(&_37422_x))));
				};
			}
		}
		else {
			_case_begin_2150320e7:;
			{
				return false;
			}
		}
		_match_end_21503410a:;
	};
	return true;
}



inline jule::Bool _21101580a_Sub(_210ea46cd_Const* _self_, _210ea46cd_Const _40322_x) {
	{
		
		if (_21101350b_IsF64(&(*_self_))) {
			_case_begin_21503aa07:;
			{
				_21101261a_SetF64(&(*_self_), static_cast<jule::F64>((_211011163_ReadF64(&(*_self_)) - _2110118a0_AsF64(&_40322_x))));
			}
		}
		else if (_211012a5a_IsI64(&(*_self_))) {
			_case_begin_21503a2ba:;
			{
				if (_21101350b_IsF64(&_40322_x)) {
					_21101261a_SetF64(&(*_self_), static_cast<jule::F64>((_2110118a0_AsF64(&(*_self_)) - _211011163_ReadF64(&_40322_x))));
				} else {
					_211011b25_SetI64(&(*_self_), static_cast<jule::I64>((_2110106b2_ReadI64(&(*_self_)) - _2110113c7_AsI64(&_40322_x))));
				};
			}
		}
		else if (_211012cbe_IsU64(&(*_self_))) {
			_case_begin_21503a331:;
			{
				if (_21101350b_IsF64(&_40322_x)) {
					_21101261a_SetF64(&(*_self_), static_cast<jule::F64>((_2110118a0_AsF64(&(*_self_)) - _211011163_ReadF64(&_40322_x))));
				} else {
					_211011d9a_SetU64(&(*_self_), static_cast<jule::U64>((_211010926_ReadU64(&(*_self_)) - _21101163b_AsU64(&_40322_x))));
				};
			}
		}
		else {
			_case_begin_21503a254:;
			{
				return false;
			}
		}
		_match_end_2150398c4:;
	};
	return true;
}



inline jule::Bool _211015b18_Mul(_210ea46cd_Const* _self_, _210ea46cd_Const _42722_x) {
	{
		
		if (_21101350b_IsF64(&(*_self_))) {
			_case_begin_2150403e1:;
			{
				_21101261a_SetF64(&(*_self_), static_cast<jule::F64>((_211011163_ReadF64(&(*_self_)) * _2110118a0_AsF64(&_42722_x))));
			}
		}
		else if (_211012a5a_IsI64(&(*_self_))) {
			_case_begin_21503eba4:;
			{
				if (_21101350b_IsF64(&_42722_x)) {
					_21101261a_SetF64(&(*_self_), static_cast<jule::F64>((_2110118a0_AsF64(&(*_self_)) * _211011163_ReadF64(&_42722_x))));
				} else {
					_211011b25_SetI64(&(*_self_), static_cast<jule::I64>((_2110106b2_ReadI64(&(*_self_)) * _2110113c7_AsI64(&_42722_x))));
				};
			}
		}
		else if (_211012cbe_IsU64(&(*_self_))) {
			_case_begin_21503ec1a:;
			{
				if (_21101350b_IsF64(&_42722_x)) {
					_21101261a_SetF64(&(*_self_), static_cast<jule::F64>((_2110118a0_AsF64(&(*_self_)) * _211011163_ReadF64(&_42722_x))));
				} else {
					_211011d9a_SetU64(&(*_self_), static_cast<jule::U64>((_211010926_ReadU64(&(*_self_)) * _21101163b_AsU64(&_42722_x))));
				};
			}
		}
		else {
			_case_begin_21503eb3d:;
			{
				return false;
			}
		}
		_match_end_21503e0e3:;
	};
	return true;
}



inline jule::Bool _211015e26_Div(_210ea46cd_Const* _self_, _210ea46cd_Const _45522_x) {
	{
		
		if (_21101350b_IsF64(&(*_self_))) {
			_case_begin_215044cca:;
			{
				jule::F64 _45817_l = _2110118a0_AsF64(&_45522_x);;
				if ((_45817_l == 0LL)) {
					return false;
				};
				_21101261a_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_211011163_ReadF64(&(*_self_)),_45817_l)));
			}
		}
		else if (_211012a5a_IsI64(&(*_self_))) {
			_case_begin_21504458d:;
			{
				jule::F64 _46417_l = _2110118a0_AsF64(&_45522_x);;
				if ((_46417_l == 0LL)) {
					return false;
				};
				_21101261a_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_2110118a0_AsF64(&(*_self_)),_46417_l)));
			}
		}
		else if (_211012cbe_IsU64(&(*_self_))) {
			_case_begin_215044604:;
			{
				jule::F64 _47017_l = _2110118a0_AsF64(&_45522_x);;
				if ((_47017_l == 0LL)) {
					return false;
				};
				_21101261a_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_2110118a0_AsF64(&(*_self_)),_47017_l)));
			}
		}
		else {
			_case_begin_215044527:;
			{
				return false;
			}
		}
		_match_end_2150439cc:;
	};
	return true;
}



inline jule::Bool _211016234_Mod(_210ea46cd_Const* _self_, _210ea46cd_Const _48422_x) {
	{
		
		if (_211012a5a_IsI64(&(*_self_))) {
			_case_begin_21504965e:;
			{
				jule::I64 _48717_l = _2110113c7_AsI64(&_48422_x);;
				if ((_48717_l == 0LL)) {
					return false;
				};
				_211011b25_SetI64(&(*_self_), static_cast<jule::I64>(jule::mod(_2110106b2_ReadI64(&(*_self_)),_48717_l)));
			}
		}
		else if (_211012cbe_IsU64(&(*_self_))) {
			_case_begin_215048e33:;
			{
				jule::U64 _49317_l = _21101163b_AsU64(&_48422_x);;
				if ((_49317_l == 0LLU)) {
					return false;
				};
				_211011d9a_SetU64(&(*_self_), static_cast<jule::U64>(jule::mod(_211010926_ReadU64(&(*_self_)),_49317_l)));
			}
		}
		else {
			_case_begin_215048dbc:;
			{
				return false;
			}
		}
		_match_end_215048ce0:;
	};
	return true;
}



inline jule::Bool _211016542_BitwiseAnd(_210ea46cd_Const* _self_, _210ea46cd_Const _50629_x) {
	{
		
		if (_211012a5a_IsI64(&(*_self_))) {
			_case_begin_21504ca4c:;
			{
				_211011b25_SetI64(&(*_self_), static_cast<jule::I64>((_2110106b2_ReadI64(&(*_self_)) & _2110113c7_AsI64(&_50629_x))));
			}
		}
		else if (_211012cbe_IsU64(&(*_self_))) {
			_case_begin_21504c321:;
			{
				_211011d9a_SetU64(&(*_self_), static_cast<jule::U64>((_211010926_ReadU64(&(*_self_)) & _21101163b_AsU64(&_50629_x))));
			}
		}
		else {
			_case_begin_21504c2aa:;
			{
				return false;
			}
		}
		_match_end_21504c1cd:;
	};
	return true;
}



inline jule::Bool _211016850_BitwiseOr(_210ea46cd_Const* _self_, _210ea46cd_Const _52028_x) {
	{
		
		if (_211012a5a_IsI64(&(*_self_))) {
			_case_begin_21504ec6e:;
			{
				_211011b25_SetI64(&(*_self_), static_cast<jule::I64>((_2110106b2_ReadI64(&(*_self_)) | _2110113c7_AsI64(&_52028_x))));
			}
		}
		else if (_211012cbe_IsU64(&(*_self_))) {
			_case_begin_21504e543:;
			{
				_211011d9a_SetU64(&(*_self_), static_cast<jule::U64>((_211010926_ReadU64(&(*_self_)) | _21101163b_AsU64(&_52028_x))));
			}
		}
		else {
			_case_begin_21504e4cc:;
			{
				return false;
			}
		}
		_match_end_21504e400:;
	};
	return true;
}



inline jule::Bool _211016b5d_Xor(_210ea46cd_Const* _self_, _210ea46cd_Const _53422_x) {
	{
		
		if (_211012a5a_IsI64(&(*_self_))) {
			_case_begin_215051e91:;
			{
				_211011b25_SetI64(&(*_self_), static_cast<jule::I64>((_2110106b2_ReadI64(&(*_self_)) ^ _2110113c7_AsI64(&_53422_x))));
			}
		}
		else if (_211012cbe_IsU64(&(*_self_))) {
			_case_begin_215051765:;
			{
				_211011d9a_SetU64(&(*_self_), static_cast<jule::U64>((_211010926_ReadU64(&(*_self_)) ^ _21101163b_AsU64(&_53422_x))));
			}
		}
		else {
			_case_begin_2150516ee:;
			{
				return false;
			}
		}
		_match_end_215051622:;
	};
	return true;
}



inline jule::Bool _211016e6b_Lshift(_210ea46cd_Const* _self_, _210ea46cd_Const _54825_x) {
	{
		
		if (_211012a5a_IsI64(&(*_self_))) {
			_case_begin_2150541b3:;
			{
				jule::I64 _55117_l = _2110113c7_AsI64(&(*_self_));;
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _21101163b_AsU64(&_54825_x);;
					_211011b25_SetI64(&(*_self_), static_cast<jule::I64>((_55117_l << _55321_r)));
				} else {
					_2110175dc_lshiftUnsig((*_self_),_54825_x);
				};
			}
		}
		else if (_211012cbe_IsU64(&(*_self_))) {
			_case_begin_215053987:;
			{
				_2110175dc_lshiftUnsig((*_self_),_54825_x);
			}
		}
		else {
			_case_begin_215053921:;
			{
				return false;
			}
		}
		_match_end_215053844:;
	};
	return true;
}



inline jule::Bool _211017279_Rshift(_210ea46cd_Const* _self_, _210ea46cd_Const _56825_x) {
	{
		
		if (_211012a5a_IsI64(&(*_self_))) {
			_case_begin_215056c32:;
			{
				jule::I64 _57117_l = _2110113c7_AsI64(&(*_self_));;
				if ((_57117_l < 0LL)) {
					jule::U64 _57321_r = _21101163b_AsU64(&_56825_x);;
					_211011b25_SetI64(&(*_self_), static_cast<jule::I64>((_57117_l >> _57321_r)));
				} else {
					_2110178d9_rshiftUnsig((*_self_),_56825_x);
				};
			}
		}
		else if (_211012cbe_IsU64(&(*_self_))) {
			_case_begin_215056506:;
			{
				_2110178d9_rshiftUnsig((*_self_),_56825_x);
			}
		}
		else {
			_case_begin_215056490:;
			{
				return false;
			}
		}
		_match_end_2150563b3:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _210ea46cd_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2116c9dd1_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20e36ca21_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b050db_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2115dbe36_set(_211b0544e_decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_2156988e5:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_21569895b:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_21569874c:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_21569ac05:;
					{
						goto _iter_next_21569a441;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_21569ac7c:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_21569a441;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_21569ad04:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_21569a441;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_21569a441;
					}
				}
				_match_end_21569aac3:;
			};
			goto _iter_end_21569a441;
		}
	_iter_next_21569a441:;
	}
	_iter_end_21569a441:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_21173c086_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_2156a3812;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_2156a3812:;
		}
		_iter_end_2156a3812:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _211547a40_floatBits(_211b0544e_decimal* _self_, _2116c9dd1_floatInfo& _32729_flt) {
	jule::U64 _32747_b = jule::U64();
	jule::Bool _32755_overflow = jule::Bool();
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _21160e794_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_21160e794_powtab[(*_self_)._field_dp];
			};
			_211b0576d_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_2156aa3a7:;
	}
	_iter_end_2156aa3a7:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _21160e794_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_21160e794_powtab[(-((*_self_)._field_dp))];
			};
			_211b0576d_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_2156aaab1:;
	}
	_iter_end_2156aaab1:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32729_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32729_flt._field_bias + 1LL) - _32817_exp);;
		_211b0576d_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_211b0576d_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32729_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_211b05c46_roundedInteger(&(*_self_)));
	if ((_32917_mant == (2LLU << _32729_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32729_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32729_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32729_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32729_flt._field_bias))));
	_32755_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32729_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32729_flt._field_bias) & static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) << _32729_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32729_flt._field_mantbits) << _32729_flt._field_expbits);
	};
	_32747_b = _41717_bits;
	return std::make_tuple(_32747_b,_32755_overflow);
}



inline void _211b0563b_assign(_211b0544e_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_2156b8e21:;
	}
	_iter_end_2156b8e21:;;
	(*_self_)._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_33117_buf[_33417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_2156b9ebb:;
	}
	_iter_end_2156b9ebb:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_211b05eaa_trim((*_self_));
}



inline void _211b0576d_shift(_211b0544e_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_2156bbae4:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_2156bbb6b:;
			{
				while ((_35528_k > 60LL)) {
					{
						_211b06351_leftShift((*_self_),60LLU);
						_35528_k-=60LL;
					}
				_iter_next_2156bc2a9:;
				}
				_iter_end_2156bc2a9:;;
				_211b06351_leftShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_2156bbbe3:;
			{
				while ((_35528_k < -60LL)) {
					{
						_211b060dc_rightShift((*_self_),60LLU);
						_35528_k+=60LL;
					}
				_iter_next_2156bd387:;
				}
				_iter_end_2156bd387:;;
				_211b060dc_rightShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_2156bb9b2:;
	};
}



inline void _211b058a0_roundDown(_211b0544e_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_37528_nd;
	_211b05eaa_trim((*_self_));
}



inline void _211b059d2_roundUp(_211b0544e_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*_self_)._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*_self_)._field_d[_39017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_2156c1665:;
	}
	_iter_end_2156c1665:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _211b05b14_round(_211b0544e_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_211b06483_shouldRoundUp((*_self_),_41124_nd)) {
		_211b059d2_roundUp(&(*_self_), _41124_nd);
	} else {
		_211b058a0_roundDown(&(*_self_), _41124_nd);
	};
}



inline jule::U64 _211b05c46_roundedInteger(_211b0544e_decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*_self_)._field_dp) && (_42817_i < (*_self_)._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_42817_i] - '0'))));
		}
	_iter_next_2156c448c:;
	}
	_iter_end_2156c448c:;;
	for (; (_42817_i < (*_self_)._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_2156c710a:;
	}
	_iter_end_2156c710a:;;
	if (_211b06483_shouldRoundUp((*_self_),(*_self_)._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _211b0544e_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_210e49e48_FieldIns> _210d465d6_instance(jule::Ptr<_210e34c9b_Field> _self_) {
	return jule::new_ptr<_210e49e48_FieldIns>(_210e49e48_FieldIns{._field_Decl=_self_, });
}







std::ostream &operator<<(std::ostream &_Stream, _210e34c9b_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e4420b_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_210e6db2b_StructIns> _210e23ae2_instance(jule::Ptr<_210e427d1_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	jule::Ptr<_210e6db2b_StructIns> _9917_ins = jule::new_ptr<_210e6db2b_StructIns>(_210e6db2b_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_210e49e48_FieldIns>>::alloc(0LL,_self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_211b43228_Var>>::alloc(0LL,_self_.get()._field_Statics.len()), ._field_Refers=static__211025de2_new(), });;
	{
		auto &expr = _self_.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_223d69690:;
		if (it != expr.end()) {
			jule::Ptr<_211b43228_Var> _10621_s = *it;
			{
				_9917_ins.get()._field_Statics = jule::alloc_for_append(_9917_ins.get()._field_Statics,1);_9917_ins.get()._field_Statics.__push(jule::new_ptr<_211b43228_Var>((*(_10621_s))));;
			}
			_iter_next_223d69690:;
			++it;
			goto _iter_begin_223d69690;
		}
		_iter_end_223d69690:;
	};
	{
		auto &expr = _self_.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_223d6b296:;
		if (it != expr.end()) {
			jule::Ptr<_210e34c9b_Field> _11021_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_210d465d6_instance(_11021_f));;
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _211bb7852_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_223d6b296:;
			++it;
			goto _iter_begin_223d6b296;
		}
		_iter_end_223d6b296:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_211020084_Fn>>::alloc(0LL,_self_.get()._field_Methods.len());
		{
			auto &expr = _self_.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_223d6d96e:;
			if (it != expr.end()) {
				jule::Ptr<_211020084_Fn> _12125_f = *it;
				{
					jule::Ptr<_211020084_Fn> _12225_fins = jule::new_ptr<_211020084_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_12225_fins);;
				}
				_iter_next_223d6d96e:;
				++it;
				goto _iter_begin_223d6d96e;
			}
			_iter_end_223d6d96e:;
		};
	};
	return _9917_ins;
}



inline jule::Ptr<_210e6db2b_StructIns> _210e29bd6_appendInstance(_210e427d1_Struct* _self_, jule::Ptr<_210e6db2b_StructIns>& _13338_ins) {
	if ((((*_self_)._field_Generics.len() == 0LL) && ((*_self_)._field_Instances.len() == 1LL))) {
		return (*_self_)._field_Instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_223d70e8d:;
		if (it != expr.end()) {
			jule::Ptr<_210e6db2b_StructIns> _13921_ains = *it;
			{
				if (_210e4562a_Same(_13921_ains.ptr(), _13338_ins)) {
					return _13921_ains;
				};
			}
			_iter_next_223d70e8d:;
			++it;
			goto _iter_begin_223d70e8d;
		}
		_iter_end_223d70e8d:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_13338_ins);;
	return nullptr;
}



inline jule::Ptr<_211020084_Fn> _210e2de4e_FindMethod(_210e427d1_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_223d724de:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;
				};
			}
			_iter_next_223d724de:;
			++it;
			goto _iter_begin_223d724de;
		}
		_iter_end_223d724de:;
	};
	return nullptr;
}



inline jule::Ptr<_211b43228_Var> _210e31bee_FindStatic(_210e427d1_Struct* _self_, jule::Str _16229_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_223d73798:;
		if (it != expr.end()) {
			jule::Ptr<_211b43228_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;
				};
			}
			_iter_next_223d73798:;
			++it;
			goto _iter_begin_223d73798;
		}
		_iter_end_223d73798:;
	};
	return nullptr;
}



inline jule::Ptr<_210e34c9b_Field> _210e32c11_FindField(_210e427d1_Struct* _self_, jule::Str _17328_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_223d74755:;
		if (it != expr.end()) {
			jule::Ptr<_210e34c9b_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;
				};
			}
			_iter_next_223d74755:;
			++it;
			goto _iter_begin_223d74755;
		}
		_iter_end_223d74755:;
	};
	return nullptr;
}



inline jule::Bool _210e32150_IsImplements(_210e427d1_Struct* _self_, jule::Ptr<_211031e42_Trait> _18327_t) {
	{
		auto &expr = (*_self_)._field_Implements;
		auto it = expr.begin();
		_iter_begin_223d75712:;
		if (it != expr.end()) {
			jule::Ptr<_211031e42_Trait> &_18416_it = *it;
			{
				if ((_18327_t == _18416_it)) {
					return true;
				};
			}
			_iter_next_223d75712:;
			++it;
			goto _iter_begin_223d75712;
		}
		_iter_end_223d75712:;
	};
	return false;
}



inline jule::Bool _210e3442c_IsDerives(_210e427d1_Struct* _self_, jule::Str _19324_ident) {
	{
		auto &expr = (*_self_)._field_Directives;
		auto it = expr.begin();
		_iter_begin_223d75c73:;
		if (it != expr.end()) {
			jule::Ptr<_210e1d8ab_Directive> &_19416_d = *it;
			{
				if ((_19416_d.get()._field_Tag.get()._field_Kind == jule::Str("derive", 6))) {
					if (((_19416_d.get()._field_Args.len() == 1LL) && (_19416_d.get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;
					};
				};
			}
			_iter_next_223d75c73:;
			++it;
			goto _iter_begin_223d75c73;
		}
		_iter_end_223d75c73:;
	};
	return false;
}



inline jule::Bool _210e33838_IsUses(_210e427d1_Struct* _self_, jule::Ptr<_210e427d1_Struct> _20521_s) {
	{
		auto &expr = (*_self_)._field_Uses;
		auto it = expr.begin();
		_iter_begin_223d7858e:;
		if (it != expr.end()) {
			jule::Ptr<_210e427d1_Struct> &_20616_u = *it;
			{
				while ((_20521_s == _20616_u)) {
					{
						return true;
					}
				_iter_next_223d78d53:;
				}
				_iter_end_223d78d53:;;
			}
			_iter_next_223d7858e:;
			++it;
			goto _iter_begin_223d7858e;
		}
		_iter_end_223d7858e:;
	};
	return false;
}



inline jule::Bool _210e375d9_HasRefAccessible(_210e427d1_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_223d79062:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> &_21616_m = *it;
			{
				if (((_21616_m.get()._field_Params.len() > 0LL) && _21101e0d8_IsRef(_21616_m.get()._field_Params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_223d79062:;
			++it;
			goto _iter_begin_223d79062;
		}
		_iter_end_223d79062:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _210e427d1_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e49e48_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211017a4e_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211017c3b_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211017e28_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211018115_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211018302_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2110184de_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2110186cb_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2110188b8_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211018aa5_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211018c92_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211018e7e_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101916b_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211019358_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211019545_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211019732_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211019b50_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211019d3c_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101a029_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101a216_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101a403_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101a5e0_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101a7cc_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101a9b9_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101aba6_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101ad93_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101b080_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101b26c_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101b459_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101b646_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101b833_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101ba20_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101991e_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101c180_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101c36c_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101c559_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101c746_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101c933_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21101d082_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_211021d66_ParamIns> _21101db10_instance(jule::Ptr<_21101d747_Param> _self_) {
	return jule::new_ptr<_211021d66_ParamIns>(_211021d66_ParamIns{._field_Decl=_self_, });
}



inline jule::Bool _21101dd74_IsSelf(_21101d747_Param* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _21101e0d8_IsRef(_21101d747_Param* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _21101d747_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2110204e6_IsVoid(_211020084_Fn* _self_) {
	return ((*_self_)._field_Result == nullptr);
}



inline jule::Bool _21102075a_IsMethod(_211020084_Fn* _self_) {
	return ((*_self_)._field_Owner != nullptr);
}



inline jule::Bool _2110209be_IsEntryPoint(_211020084_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("main", 4));
}



inline jule::Bool _211020c33_IsInit(_211020084_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("init", 4));
}



inline jule::Bool _211020e97_IsAnon(_211020084_Fn* _self_) {
	return _20e7e1747_IsAnonIdent((*_self_)._field_Ident);
}



inline jule::Bool _21102120b_AnyVar(_211020084_Fn* _self_) {
	return (((*_self_)._field_Result != nullptr) && ((*_self_)._field_Result.get()._field_Idents.len() > 0LL));
}



inline jule::Ptr<_211022c35_FnIns> _211021470_instanceForce(jule::Ptr<_211020084_Fn> _self_) {
	jule::Ptr<_211022c35_FnIns> _10017_ins = jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_211b0940e_Scope>(), ._field_Refers=static__211025de2_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_211021d66_ParamIns>>::alloc(0LL,_self_.get()._field_Params.len());
	{
		auto &expr = _self_.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_223d8dc69:;
		if (it != expr.end()) {
			jule::Ptr<_21101d747_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_21101db10_instance(_10721_p));;
			}
			_iter_next_223d8dc69:;
			++it;
			goto _iter_begin_223d8dc69;
		}
		_iter_end_223d8dc69:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;
}



inline jule::Ptr<_211022c35_FnIns> _2110216d4_instance(jule::Ptr<_211020084_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	return _211021470_instanceForce(_self_);
}



inline jule::Ptr<_211022c35_FnIns> _2110219ae_appendInstance(_211020084_Fn* _self_, jule::Ptr<_211022c35_FnIns>& _12838_ins) {
	if (((*_self_)._field_Generics.len() == 0LL)) {
		if (((*_self_)._field_Instances.len() == 1LL)) {
			return (*_self_)._field_Instances[0LL];
		};
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	if (((*_self_)._field_Instances.len() == 0LL)) {
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_223d93741:;
		if (it != expr.end()) {
			jule::Ptr<_211022c35_FnIns> _14421_ains = *it;
			{
				if (_21102463d_Same(_14421_ains.ptr(), _12838_ins)) {
					return _14421_ains;
				};
			}
			_iter_next_223d93741:;
			++it;
			goto _iter_begin_223d93741;
		}
		_iter_end_223d93741:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _211020084_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _211022240_Str(_211021d66_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_Decl.get()._field_Reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_21101dd74_IsSelf((*_self_)._field_Decl.ptr())) {
		if (_21101e0d8_IsRef((*_self_)._field_Decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;
	};
	if ((*_self_)._field_Decl.get()._field_Variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_Kind != nullptr)) {
		_16617_s+=_211bb6851_Str((*_self_)._field_Kind.ptr());
	};
	return _16617_s;
}







std::ostream &operator<<(std::ostream &_Stream, _211021d66_ParamIns _Src) {
	_Stream << _211022240_Str(&_Src);
	return _Stream;
}



inline jule::Str _211023065_Str(_211022c35_FnIns* _self_) {
	;
	return _21102494b_GetKindStr(&(*_self_), false);
}



inline jule::Bool _211023373_Equals(jule::Ptr<_211022c35_FnIns> _self_, jule::Ptr<_211bb6455_TypeKind> _21722_other) {
	jule::Ptr<_211022c35_FnIns> _21813_f = _211bb9755_Fn(_21722_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;
	};
	return _2110237d5_EqualsFn(_self_, _21813_f);
}



inline jule::Bool _2110237d5_EqualsFn(jule::Ptr<_211022c35_FnIns> _self_, jule::Ptr<_211022c35_FnIns>& _22825_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != _22825_f.get()._field_Decl.get()._field_Exceptional)) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != _22825_f.get()._field_Decl.get()._field_Unsafety)) {
		return false;
	};
	if ((_2110204e6_IsVoid(_self_.get()._field_Decl.ptr()) != _2110204e6_IsVoid(_22825_f.get()._field_Decl.ptr()))) {
		return false;
	};
	jule::Fn<jule::Bool(jule::Ptr<_211021d66_ParamIns>,jule::Ptr<_211021d66_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_211021d66_ParamIns>,jule::Ptr<_211021d66_ParamIns>)>([=](jule::Ptr<_211021d66_ParamIns> _23830_p1, jule::Ptr<_211021d66_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;
		};
		if (_21101dd74_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_21101dd74_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;
			};
			if ((_21101e0d8_IsRef(_23830_p1.get()._field_Decl.ptr()) != _21101e0d8_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;
		};
		return _211bb6b5e_Equals(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);
	});;
	if ((_22825_f.get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i],_22825_f.get()._field_Params[_27017_i])))) {
				return false;
			};
		}
	_iter_next_223da1c6b:;
	}
	_iter_end_223da1c6b:;;
	if ((!(_2110204e6_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_211bb6b5e_Equals(_self_.get()._field_Result, _22825_f.get()._field_Result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Bool _211023ae3_equalsTrait(jule::Ptr<_211022c35_FnIns> _self_, jule::Ptr<_211022c35_FnIns>& _28728_other) {
	if ((!(_2110237d5_EqualsFn(_self_, _28728_other)))) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != _28728_other.get()._field_Decl.get()._field_Generics.len())) {
		return false;
	};
	return true;
}



inline jule::Slice<jule::Ptr<_211bb6455_TypeKind>> _211023d57_Types(_211022c35_FnIns* _self_) {
	{
		
		if (((*_self_)._field_Result == nullptr)) {
			_case_begin_223da549a:;
			{
				return nullptr;
			}
		}
		else if ((_211bba206_Tup((*_self_)._field_Result.ptr()) == nullptr)) {
			_case_begin_223da5511:;
			{
				return jule::Slice<jule::Ptr<_211bb6455_TypeKind>>::make({(*_self_)._field_Result});
			}
		}
		else {
			_case_begin_223da5434:;
			{
				return _211bba206_Tup((*_self_)._field_Result.ptr()).get()._field_Types;
			}
		}
		_match_end_223da5357:;
	};
}



inline jule::Bool _2110240bb_IsBuiltin(_211022c35_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _211024330_IsAnon(_211022c35_FnIns* _self_) {
	return ((*_self_)._field_Anon || (((*_self_)._field_Decl != nullptr) && _211020e97_IsAnon((*_self_)._field_Decl.ptr())));
}



inline jule::Bool _21102463d_Same(_211022c35_FnIns* _self_, jule::Ptr<_211022c35_FnIns> _32419_f) {
	if ((((*_self_)._field_Decl != _32419_f.get()._field_Decl) || (_32419_f.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_223da8e93:;
		if (it != expr.end()) {
			jule::I64 _32913_i = it - expr.begin();
			jule::Ptr<_211bb4c28_InsGeneric> &_32916_g = *it;
			{
				if ((!(_211bb6b5e_Equals(_32916_g.get()._field_Kind, _32419_f.get()._field_Generics[_32913_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_223da8e93:;
			++it;
			_32913_i++;
			goto _iter_begin_223da8e93;
		}
		_iter_end_223da8e93:;
	};
	return true;
}



inline jule::Str _21102494b_GetKindStr(_211022c35_FnIns* _self_, jule::Bool _34025_ident) {
	jule::Str _34117_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Unsafety) {
		_34117_s+=jule::Str("unsafe ", 7);
	};
	_34117_s+=jule::Str("fn", 2);
	if ((_34025_ident && ((*_self_)._field_Decl != nullptr))) {
		_34117_s+=(jule::Str(" ", 1) + (*_self_)._field_Decl.get()._field_Ident);
	};
	_34117_s+=jule::Str("(", 1);
	jule::I64 _35413_n = (*_self_)._field_Params.len();;
	if ((_35413_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_Params;
			auto it = expr.begin();
			_iter_begin_223dacedb:;
			if (it != expr.end()) {
				jule::Ptr<_211021d66_ParamIns> &_35620_p = *it;
				{
					_34117_s+=_211022240_Str(_35620_p.ptr());
					_34117_s+=jule::Str(",", 1);
				}
				_iter_next_223dacedb:;
				++it;
				goto _iter_begin_223dacedb;
			}
			_iter_end_223dacedb:;
		};
		(_34117_s).mut_slice(0LL,(_34117_s.len() - 1LL));;
	};
	_34117_s+=jule::Str(")", 1);
	if ((*_self_)._field_Decl.get()._field_Exceptional) {
		_34117_s+=jule::Str("!", 1);
	};
	if ((!(_2110204e6_IsVoid((*_self_)._field_Decl.ptr())))) {
		_34117_s+=jule::Str(":", 1);
		_34117_s+=_211bb6851_Str((*_self_)._field_Result.ptr());
	};
	return _34117_s;
}







std::ostream &operator<<(std::ostream &_Stream, _211022c35_FnIns _Src) {
	_Stream << _211023065_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_211025b06_ReferenceStack> static__211025de2_new(void) {
	return jule::new_ptr<_211025b06_ReferenceStack>(_211025b06_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL,10LL)});
}



inline jule::I64 _211026277_Len(_211025b06_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _211026585_At(_211025b06_ReferenceStack* _self_, jule::I64 _6821_i) {
	return jule::Any((*_self_)._field_buffer[_6821_i]);
}



inline void _21102680a_Push(_211025b06_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_7327_ref));;
}



inline jule::Bool _2244e4e19_Exist(_211025b06_ReferenceStack* _self_, jule::Ptr<_211022c35_FnIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_2244e6217:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_2244e6217:;
			++it;
			goto _iter_begin_2244e6217;
		}
		_iter_end_2244e6217:;
	};
	return false;
}

inline jule::Bool _224509c86_Exist(_211025b06_ReferenceStack* _self_, jule::Ptr<_211b43228_Var> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_22450b040:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_22450b040:;
			++it;
			goto _iter_begin_22450b040;
		}
		_iter_end_22450b040:;
	};
	return false;
}

inline jule::Bool _22459ea51_Exist(_211025b06_ReferenceStack* _self_, jule::Ptr<_210e6db2b_StructIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_2245a0d4e:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_2245a0d4e:;
			++it;
			goto _iter_begin_2245a0d4e;
		}
		_iter_end_2245a0d4e:;
	};
	return false;
}

inline jule::Bool _212d01506_Exist(_211025b06_ReferenceStack* _self_, jule::Ptr<_211031e42_Trait> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_212d02a8a:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_212d02a8a:;
			++it;
			goto _iter_begin_212d02a8a;
		}
		_iter_end_212d02a8a:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _211025b06_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211026ec0_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21102b469_symbolBuilder> _21102b920_getRoot(jule::Ptr<_21102b469_symbolBuilder> _self_) {
	jule::Ptr<_21102b469_symbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_223dc6ad7:;
	}
	_iter_end_223dc6ad7:;;
	return _31617_root;
}



inline void _21102bcd8_pushErr(_21102b469_symbolBuilder* _self_, jule::Ptr<_20e7ddc0b_Token>& _32327_token, jule::Str _32342_fmt, jule::Slice<jule::Any> _32355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_211b23aaa_compilerErr(_32327_token,true,_32342_fmt,jule::Any(_32355_args)));;
}



inline void _21102c1a1_pushErrText(_21102b469_symbolBuilder* _self_, jule::Ptr<_20e7ddc0b_Token>& _32731_token, jule::Str _32746_fmt, jule::Slice<jule::Any> _32759_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_211b23aaa_compilerErr(_32731_token,false,_32746_fmt,jule::Any(_32759_args)));;
}



inline void _21102c4c0_pushSuggestion(_21102b469_symbolBuilder* _self_, jule::Str _33233_fmt, jule::Slice<jule::Any> _33246_args) {
	{
		_211b25040_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33233_fmt,jule::Any(_33246_args));
	};
}



inline jule::Bool _21102c877_checkCppUseDeclPath(_21102b469_symbolBuilder* _self_, jule::Ptr<_210e69ae4_UseDecl>& _33639_decl, jule::Str _33655_path) {
	jule::Bool _33668_ok = jule::Bool();
	jule::Str _33713_ext = _20d4be2a0_Ext(_33655_path);;
	if (((!(_20e4ad887_IsValidHeaderExt(_33713_ext))) && (!(_20e4adada_IsValidCppExt(_33713_ext))))) {
		_21102bcd8_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext)}));
		_33668_ok = false;
		return _33668_ok;
	};
	jule::Ptr<_20d3c039e_Status> _34413_info = ({
		auto except = static__20c606d67_Of(_33655_path);
		(except.ok()) ? (except.result) : ({{
			_21102bcd8_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
			_33668_ok = false;
			return _33668_ok;
		} jule::Ptr<_20d3c039e_Status>();});
	});;
	if (_20c6d15e5_IsDir(_34413_info.ptr())) {
		_21102bcd8_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
		_33668_ok = false;
		return _33668_ok;
	};
	_33668_ok = true;
	return _33668_ok;
}



inline jule::Ptr<_211b1c378_ImportInfo> _21102cb52_buildCppHeaderImport(_21102b469_symbolBuilder* _self_, jule::Ptr<_210e69ae4_UseDecl>& _35644_decl) {
	jule::Str _35717_path = _35644_decl.get()._field_LinkPath;;
	if ((!(_20e4ad755_IsStdHeaderPath(_35644_decl.get()._field_LinkPath)))) {
		_35717_path=_20d4b1cdc_Join(jule::Slice<jule::Str>::make({_20e7e498c_Dir(_35644_decl.get()._field_Token.get()._field_File.ptr()),_35644_decl.get()._field_LinkPath}));
		jule::Bool _36121_ok = _21102c877_checkCppUseDeclPath(&(*_self_), _35644_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;
		};
		std::tie(_35717_path,_36121_ok) = _20d4c0cb8_Abs(_35717_path);
		if ((!(_36121_ok))) {
			_21102bcd8_pushErr(&(*_self_), _35644_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35644_decl.get()._field_LinkPath)}));
		};
	};
	return jule::new_ptr<_211b1c378_ImportInfo>(_211b1c378_ImportInfo{._field_Token=_35644_decl.get()._field_Token, ._field_Path=_35717_path, ._field_LinkPath=_35644_decl.get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });
}



inline jule::Ptr<_211b1c378_ImportInfo> _21102ce60_buildStdImport(_21102b469_symbolBuilder* _self_, jule::Ptr<_210e69ae4_UseDecl>& _38438_decl) {
	jule::Str _38517_path = _38438_decl.get()._field_LinkPath.slice(5LL);;
	_38517_path=_20e44a417_Replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38517_path=_20d4b1cdc_Join(jule::Slice<jule::Str>::make({_20e508aad_PathStdlib,_38517_path}));
	jule::Bool _38820_ok;;
	std::tie(_38517_path,_38820_ok) = _20d4c0cb8_Abs(_38517_path);
	if ((!(_38820_ok))) {
		_21102bcd8_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_20d3c039e_Status> _39513_info = ({
		auto except = static__20c606d67_Of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_21102bcd8_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_20d3c039e_Status>();});
	});;
	if ((!(_20c6d15e5_IsDir(_39513_info.ptr())))) {
		_21102bcd8_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _40513_i = (_20e445c09_FindLast(_38438_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38438_decl.get()._field_LinkPath.slice(_40513_i);;
	return jule::new_ptr<_211b1c378_ImportInfo>(_211b1c378_ImportInfo{._field_Token=_38438_decl.get()._field_Token, ._field_Path=_38517_path, ._field_LinkPath=_38438_decl.get()._field_LinkPath, ._field_Ident=_40613_ident, ._field_Alias=_38438_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=_38438_decl.get()._field_Full, ._field_Package=jule::new_ptr<_211b202d2_Package>(_211b202d2_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_211b1c378_ImportInfo> _21102d26d_buildIdentImport(jule::Ptr<_21102b469_symbolBuilder> _self_, jule::Ptr<_210e69ae4_UseDecl>& _42341_decl) {
	jule::Str _42413_modPath = _211b1970a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._211b1886e_GetModPath(_self_.get()._field_importer);;
	if ((_42413_modPath.len() == 0LL)) {
		_21102bcd8_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_21102c4c0_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _43117_path = _42341_decl.get()._field_LinkPath;;
	_43117_path=_20e44a417_Replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_43117_path=_20d4b1cdc_Join(jule::Slice<jule::Str>::make({_42413_modPath,_43117_path}));
	jule::Bool _43520_ok;;
	std::tie(_43117_path,_43520_ok) = _20d4c0cb8_Abs(_43117_path);
	if ((!(_43520_ok))) {
		_21102bcd8_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_20d3c039e_Status> _44213_info = ({
		auto except = static__20c606d67_Of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_21102bcd8_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_20d3c039e_Status>();});
	});;
	if ((!(_20c6d15e5_IsDir(_44213_info.ptr())))) {
		_21102bcd8_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _45213_i = (_20e445c09_FindLast(_42341_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42341_decl.get()._field_LinkPath.slice(_45213_i);;
	return jule::new_ptr<_211b1c378_ImportInfo>(_211b1c378_ImportInfo{._field_Token=_42341_decl.get()._field_Token, ._field_Path=_43117_path, ._field_LinkPath=_42341_decl.get()._field_LinkPath, ._field_Ident=_45313_ident, ._field_Alias=_42341_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=_42341_decl.get()._field_Full, ._field_Package=jule::new_ptr<_211b202d2_Package>(_211b202d2_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_211b1c378_ImportInfo> _21102d57b_buildImport(jule::Ptr<_21102b469_symbolBuilder> _self_, jule::Ptr<_210e69ae4_UseDecl>& _47036_decl) {
	{
		
		if (_47036_decl.get()._field_CppLinked) {
			_case_begin_223de09e1:;
			{
				return _21102cb52_buildCppHeaderImport(_self_.ptr(), _47036_decl);
			}
		}
		else if (_47036_decl.get()._field_Std) {
			_case_begin_223de0c66:;
			{
				return _21102ce60_buildStdImport(_self_.ptr(), _47036_decl);
			}
		}
		else {
			_case_begin_223de0271:;
			{
				return _21102d26d_buildIdentImport(_self_, _47036_decl);
			}
		}
		_match_end_223de0194:;
	};
}



inline jule::Bool _21102d889_checkDuplicateUseDecl(_21102b469_symbolBuilder* _self_, jule::Ptr<_211b1c378_ImportInfo>& _48141_pkg) {
	jule::Bool _48161_ok = jule::Bool();
	jule::Ptr<_211b1c378_ImportInfo> _48313_lpkg = _211b85dd6_SelectPackage((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_211b1c378_ImportInfo>)>([=](jule::Ptr<_211b1c378_ImportInfo> _48348_spkg) mutable -> jule::Bool {
		return (_48141_pkg.get()._field_Path == _48348_spkg.get()._field_Path);
	}));;
	if ((_48313_lpkg == nullptr)) {
		_48161_ok = true;
		return _48161_ok;
	};
	_21102bcd8_pushErr(&(*_self_), _48141_pkg.get()._field_Token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48141_pkg.get()._field_LinkPath)}));
	_21102c4c0_pushSuggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_48161_ok = false;
	return _48161_ok;
}



inline void _21102dba8_implImportSelections(_21102b469_symbolBuilder* _self_, jule::Ptr<_211b1c378_ImportInfo>& _49544_imp, jule::Ptr<_210e69ae4_UseDecl>& _49567_decl) {
	_49544_imp.get()._field_Selected=_49567_decl.get()._field_Selected;
	{
		auto &expr = _49544_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_223de4cae:;
		if (it != expr.end()) {
			jule::Ptr<_20e7ddc0b_Token> _49716_item = *it;
			{
				{
					auto &expr = _49544_imp.get()._field_Selected;
					auto it = expr.begin();
					_iter_begin_223de541e:;
					if (it != expr.end()) {
						jule::Ptr<_20e7ddc0b_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_223de541e;
							} else if ((_49716_item.get()._field_Kind == _49820_citem.get()._field_Kind)) {
								_21102bcd8_pushErr(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_Kind)}));
								_21102c4c0_pushSuggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_223de541e;
							};
						}
						_iter_next_223de541e:;
						++it;
						goto _iter_begin_223de541e;
					}
					_iter_end_223de541e:;
				};
			}
			_iter_next_223de4cae:;
			++it;
			goto _iter_begin_223de4cae;
		}
		_iter_end_223de4cae:;
	};
}



inline jule::Str _21102deb6_getAsLinkPath(jule::Ptr<_21102b469_symbolBuilder> _self_, jule::Str _51037_path) {
	if (_20e4446b9_HasPrefix(_51037_path,_20e508aad_PathStdlib)) {
		(_51037_path).mut_slice(_20e508aad_PathStdlib.len());;
		return (jule::Str("std", 3) + _20e44a417_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _51614_root;;
	std::tie(_51614_root,std::ignore) = _20d4c0cb8_Abs(_211b1970a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._211b1886e_GetModPath(_self_.get()._field_importer));
	(_51037_path).mut_slice(_51614_root.len());;
	if ((_51037_path[0LL] == 47LLU)) {
		(_51037_path).mut_slice(1LL);;
	};
	return _20e44a417_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _21102e37e_pushCycleError(jule::Ptr<_21102b469_symbolBuilder> _self_, jule::Ptr<_21102b469_symbolBuilder>& _52435_sb, jule::Str _52455_path, jule::Str& _52471_message) {
	;
	jule::Str _52613_refersTo = _20e4ba7b7_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_21102deb6_getAsLinkPath(_self_, _20e7e498c_Dir(_52435_sb.get()._field_table.get()._field_File.ptr()))),jule::Any(_21102deb6_getAsLinkPath(_self_, _52455_path))}));;
	(_52471_message).buffer.insert(0, (((_20e437ed7_Repeat(jule::Str(" ", 1),4LL) + _52613_refersTo) + jule::Str("\n", 1))));;
}



inline void _21102e747_pushCrossCycleError(jule::Ptr<_21102b469_symbolBuilder> _self_, jule::Ptr<_21102b469_symbolBuilder>& _53340_target, jule::Ptr<_211b1c378_ImportInfo>& _53365_imp, jule::Ptr<_20e7ddc0b_Token>& _53384_errorToken) {
	jule::Str _53417_message = jule::Str();;
	_21102e37e_pushCycleError(_self_, _self_,_53365_imp.get()._field_Path,_53417_message);
	jule::Ptr<_21102b469_symbolBuilder> _53817_owner = _self_.get()._field_owner;;
	jule::Ptr<_21102b469_symbolBuilder> _53917_old = _self_;;
	while ((_53817_owner.get()._field_owner != nullptr)) {
		{
			_21102e37e_pushCycleError(_self_, _53917_old.get()._field_owner,_20e7e498c_Dir(_53917_old.get()._field_table.get()._field_File.ptr()),_53417_message);
			if ((_53817_owner.get()._field_owner == _53340_target)) {
				_21102e37e_pushCycleError(_self_, _53340_target,_20e7e498c_Dir(_53817_owner.get()._field_table.get()._field_File.ptr()),_53417_message);
				goto _iter_end_223decc95;
			};
			_53917_old=_53817_owner;
			_53817_owner=_53817_owner.get()._field_owner;
		}
	_iter_next_223decc95:;
	}
	_iter_end_223decc95:;;
	_21102bcd8_pushErr(_self_.ptr(), _53384_errorToken,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53417_message)}));
}



inline jule::Bool _21102eaee_checkImportCycles(jule::Ptr<_21102b469_symbolBuilder> _self_, jule::Ptr<_211b1c378_ImportInfo> _55637_imp, jule::Ptr<_210e69ae4_UseDecl>& _55656_decl) {
	if ((_55637_imp.get()._field_Path == _20e7e498c_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_21102bcd8_pushErr(_self_.ptr(), _55656_decl.get()._field_Token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_21102deb6_getAsLinkPath(_self_, _55637_imp.get()._field_Path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_20e7e498c_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_21102e747_pushCrossCycleError(_self_, _self_.get()._field_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	jule::Ptr<_21102b469_symbolBuilder> _57117_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_20e7e498c_Dir(_57117_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_21102e747_pushCrossCycleError(_self_, _57117_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	if ((_57117_owner.get()._field_owner != nullptr)) {
		_57117_owner=_57117_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _21102eed9_checkPackageAccessibility(_21102b469_symbolBuilder* _self_, jule::Ptr<_210e69ae4_UseDecl>& _59245_decl, jule::Str& _59262_mod, jule::Str& _59273_path) {
	if (((_211b1970a_Importer_mptr_data[((*_self_)._field_importer).type_offset]._211b1886e_GetModPath((*_self_)._field_importer) != _59262_mod) && _20e44916e_Contains(_59273_path,jule::Str("internal", 8)))) {
		_21102bcd8_pushErr(&(*_self_), _59245_decl.get()._field_Token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _2110303a2_importPackage(jule::Ptr<_21102b469_symbolBuilder> _self_, jule::Ptr<_211b1c378_ImportInfo>& _59838_imp, jule::Ptr<_210e69ae4_UseDecl>& _59861_decl) {
	jule::Bool _59879_ok = jule::Bool();
	if (_59838_imp.get()._field_CppLinked) {
		_59879_ok = true;
		return _59879_ok;
	};
	jule::Ptr<_211b1c378_ImportInfo> _60317_port = _211b1970a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._211b18e8a_GetImport(_self_.get()._field_importer, _59838_imp.get()._field_Path);;
	if ((_60317_port != nullptr)) {
		_59838_imp.get()._field_Package=_60317_port.get()._field_Package;
		_59838_imp.get()._field_Duplicate=true;
		jule::Str _60817_oldMod = _211b1970a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._211b1886e_GetModPath(_self_.get()._field_importer);;
		_211b1970a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._211b1862c_SetModPath(_self_.get()._field_importer, _211b1970a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._211b18b7c_ModById(_self_.get()._field_importer, _59838_imp.get()._field_ModId));
		_21102eed9_checkPackageAccessibility(_self_.ptr(), _59861_decl,_60817_oldMod,_60317_port.get()._field_Path);
		_211b1970a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._211b1862c_SetModPath(_self_.get()._field_importer, _60817_oldMod);
	} else {
		if ((!(_21102eaee_checkImportCycles(_self_, _59838_imp,_59861_decl)))) {
			_59879_ok = false;
			return _59879_ok;
		};
		jule::Str _61717_oldMod = _211b1970a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._211b1886e_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_211b1970a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._211b1862c_SetModPath(_self_.get()._field_importer, _61717_oldMod);
		});;
		if (_59838_imp.get()._field_Std) {
			_211b1970a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._211b1862c_SetModPath(_self_.get()._field_importer, _20e508aad_PathStdlib);
		};
		jule::Slice<jule::Ptr<_210e1c811_Ast>> _62222_asts;;
		jule::Slice<_20e4ba377_Log> _62232_errors;;
		std::tie(_62222_asts,_62232_errors) = _211b1970a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._211b19342_ImportPackage(_self_.get()._field_importer, _59838_imp.get()._field_Path,(!(_59838_imp.get()._field_Std)));
		if ((_62232_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
			_59879_ok = false;
			return _59879_ok;
		};
		_21102eed9_checkPackageAccessibility(_self_.ptr(), _59861_decl,_61717_oldMod,_59838_imp.get()._field_Path);
		{
			auto &expr = _62222_asts;
			auto it = expr.begin();
			_iter_begin_223e0cec5:;
			if (it != expr.end()) {
				jule::Ptr<_210e1c811_Ast> _63025_ast = *it;
				{
					jule::Ptr<_211b855ab_SymbolTable> _63125_table = nullptr;;
					std::tie(_63125_table,_62232_errors) = _211bd2c68_buildSymbols(_63025_ast,_self_.get()._field_importer,_self_);
					if ((_62232_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
						_21102c1a1_pushErrText(_self_.ptr(), _59838_imp.get()._field_Token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_59838_imp.get()._field_LinkPath)}));
						_59879_ok = false;
						return _59879_ok;
					};
					_59838_imp.get()._field_Package.get()._field_Files = jule::alloc_for_append(_59838_imp.get()._field_Package.get()._field_Files,1);_59838_imp.get()._field_Package.get()._field_Files.__push(_63125_table);;
				}
				_iter_next_223e0cec5:;
				++it;
				goto _iter_begin_223e0cec5;
			}
			_iter_end_223e0cec5:;
		};
	};
	_21102dba8_implImportSelections(_self_.ptr(), _59838_imp,_59861_decl);
	_59879_ok = true;
	return _59879_ok;
}



inline jule::Ptr<_211b1c378_ImportInfo> _2110306b0_importUseDecl(jule::Ptr<_21102b469_symbolBuilder> _self_, jule::Ptr<_210e69ae4_UseDecl>& _65038_decl) {
	jule::Ptr<_211b1c378_ImportInfo> _65117_imp = _21102d57b_buildImport(_self_, _65038_decl);;
	if ((_65117_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _65717_ok = _21102d889_checkDuplicateUseDecl(_self_.ptr(), _65117_imp);;
	if ((!(_65717_ok))) {
		return nullptr;
	};
	_65717_ok=_2110303a2_importPackage(_self_, _65117_imp,_65038_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_65117_imp);;
	if (_65717_ok) {
		_211b1970a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._211b195b7_Imported(_self_.get()._field_importer, _65117_imp);
		return _65117_imp;
	};
	return nullptr;
}



inline void _21103088b_importUseDecls(jule::Ptr<_21102b469_symbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_UseDecls;
		auto it = expr.begin();
		_iter_begin_223e18860:;
		if (it != expr.end()) {
			jule::Ptr<_210e69ae4_UseDecl> _67221_decl = *it;
			{
				_2110306b0_importUseDecl(_self_, _67221_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_223e18860;
				};
			}
			_iter_next_223e18860:;
			++it;
			goto _iter_begin_223e18860;
		}
		_iter_end_223e18860:;
	};
}



inline void _211030b11_appendNode(_21102b469_symbolBuilder* _self_, _210e1d4b0_Node& _68134_node) {
	{
		auto &_match_expr{ _68134_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_210e6d367_Impl>>()) {
			_case_begin_223e19124:;
			{
				(*_self_)._field_table.get()._field_Impls = jule::alloc_for_append((*_self_)._field_table.get()._field_Impls,1);(*_self_)._field_table.get()._field_Impls.__push(_21102ae19_buildImpl(_68134_node._field_Data.operator jule::Ptr<_210e6d367_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e68708_TypeAliasDecl>>()) {
			_case_begin_223e1a026:;
			{
				jule::Ptr<_211bb5762_TypeAlias> _68621_ta = _2110278a5_buildTypeAlias(_68134_node._field_Data.operator jule::Ptr<_210e68708_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_TypeAliases = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeAliases,1);(*_self_)._field_table.get()._field_TypeAliases.__push(_68621_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e6c652_StructDecl>>()) {
			_case_begin_223e1a08c:;
			{
				jule::Ptr<_210e427d1_Struct> _68921_srct = _211028213_buildStruct(_68134_node._field_Data.operator jule::Ptr<_210e6c652_StructDecl>());;
				(*_self_)._field_table.get()._field_Structs = jule::alloc_for_append((*_self_)._field_table.get()._field_Structs,1);(*_self_)._field_table.get()._field_Structs.__push(_68921_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e63db8_FnDecl>>()) {
			_case_begin_223e1a103:;
			{
				jule::Ptr<_211020084_Fn> _69221_f = _211028d6d_buildFn(_68134_node._field_Data.operator jule::Ptr<_210e63db8_FnDecl>());;
				(*_self_)._field_table.get()._field_Funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_Funcs,1);(*_self_)._field_table.get()._field_Funcs.__push(_69221_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e6cc5c_TraitDecl>>()) {
			_case_begin_223e1a8c8:;
			{
				jule::Ptr<_211031e42_Trait> _69521_t = _2110293ac_buildTrait(_68134_node._field_Data.operator jule::Ptr<_210e6cc5c_TraitDecl>());;
				(*_self_)._field_table.get()._field_Traits = jule::alloc_for_append((*_self_)._field_table.get()._field_Traits,1);(*_self_)._field_table.get()._field_Traits.__push(_69521_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e64d97_VarDecl>>()) {
			_case_begin_223e1a93e:;
			{
				jule::Ptr<_211b43228_Var> _69821_v = _21102a8ca_buildVar(_68134_node._field_Data.operator jule::Ptr<_210e64d97_VarDecl>());;
				(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_69821_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e6aa90_EnumDecl>>()) {
			_case_begin_223e1a9a5:;
			{
				jule::Ptr<_211034087_Enum> _70121_e = _211029b93_buildEnum(_68134_node._field_Data.operator jule::Ptr<_210e6aa90_EnumDecl>());;
				(*_self_)._field_table.get()._field_Enums = jule::alloc_for_append((*_self_)._field_table.get()._field_Enums,1);(*_self_)._field_table.get()._field_Enums.__push(_70121_e);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e6b794_TypeEnumDecl>>()) {
			_case_begin_223e1aa1b:;
			{
				jule::Ptr<_211035682_TypeEnum> _70421_e = _21102a633_buildTypeEnum(_68134_node._field_Data.operator jule::Ptr<_210e6b794_TypeEnumDecl>());;
				(*_self_)._field_table.get()._field_TypeEnums = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeEnums,1);(*_self_)._field_table.get()._field_TypeEnums.__push(_70421_e);;
			}
		}
		else {
			_case_begin_223e19e16:;
			{
				_21102bcd8_pushErr(&(*_self_), _68134_node._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_223e191ce:;
	};
}



inline void _211030cdc_appendNodes(_21102b469_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_Nodes;
		auto it = expr.begin();
		_iter_begin_223e245a2:;
		if (it != expr.end()) {
			_210e1d4b0_Node _71221_node = *it;
			{
				_211030b11_appendNode(&(*_self_), _71221_node);
			}
			_iter_next_223e245a2:;
			++it;
			goto _iter_begin_223e245a2;
		}
		_iter_end_223e245a2:;
	};
}



inline void _211031062_pushDirectivePass(_21102b469_symbolBuilder* _self_, jule::Ptr<_210e1d8ab_Directive>& _71741_d) {
	if ((_71741_d.get()._field_Args.len() == 0LL)) {
		_21102bcd8_pushErr(&(*_self_), _71741_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71741_d.get()._field_Args.len() > 1LL)) {
		jule::Ptr<_20e7ddc0b_Token> _72217_arg = _71741_d.get()._field_Args[1LL];;
		_21102bcd8_pushErr(&(*_self_), _72217_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20e7ddc0b_Token> _72613_arg = _71741_d.get()._field_Args[0LL];;
	if ((_72613_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_21102bcd8_pushErr(&(*_self_), _72613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72613_arg.get()._field_Kind[0LL] != '\"')) {
		_21102bcd8_pushErr(&(*_self_), _72613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_Passes = jule::alloc_for_append((*_self_)._field_table.get()._field_Passes,1);(*_self_)._field_table.get()._field_Passes.__push(_211026ec0_Pass{._field_Token=_71741_d.get()._field_Tag, ._field_Text=_72613_arg.get()._field_Kind.slice(1LL,(_72613_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _21103123d_appendTopDirectives(_21102b469_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_223e29eae:;
		if (it != expr.end()) {
			jule::Ptr<_210e1d8ab_Directive> _74421_d = *it;
			{
				{
					auto &_match_expr{ _74421_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_223e2a6c9:;
						{
							_211031062_pushDirectivePass(&(*_self_), _74421_d);
						}
					}
					_match_end_223e2a61e:;
				};
			}
			_iter_next_223e29eae:;
			++it;
			goto _iter_begin_223e29eae;
		}
		_iter_end_223e29eae:;
	};
}



inline void _211031419_build(jule::Ptr<_21102b469_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_211b855ab_SymbolTable>(_211b855ab_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_21103123d_appendTopDirectives(_self_.ptr());
	_21103088b_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_211030cdc_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _21102b469_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _21103233d_Str(_211031e42_Trait* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _21103264b_Equals(jule::Ptr<_211031e42_Trait> _self_, jule::Ptr<_211bb6455_TypeKind> _2522_other) {
	jule::Ptr<_211031e42_Trait> _2613_trt = _211bb9c2d_Trait(_2522_other.ptr());;
	return (_self_ == _2613_trt);
}



inline jule::Bool _2110329ae_IsBuiltin(_211031e42_Trait* _self_) {
	return ((*_self_)._field_Token == nullptr);
}



inline jule::Ptr<_211020084_Fn> _211032cbc_FindMethod(_211031e42_Trait* _self_, jule::Str _3929_ident) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_223e2e678:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3929_ident)) {
					return _4021_f;
				};
			}
			_iter_next_223e2e678:;
			++it;
			goto _iter_begin_223e2e678;
		}
		_iter_end_223e2e678:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _211031e42_Trait _Src) {
	_Stream << _21103233d_Str(&_Src);
	return _Stream;
}



inline jule::Bool _21103397c_AutoExpr(_211033592_EnumItem* _self_) {
	return ((*_self_)._field_Value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _211033592_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2110343ea_Str(_211034087_Enum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _211034708_Equals(jule::Ptr<_211034087_Enum> _self_, jule::Ptr<_211bb6455_TypeKind> _3822_other) {
	jule::Ptr<_211034087_Enum> _3913_enm = _211bb8ca4_Enum(_3822_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_211033592_EnumItem> _211034b48_FindItem(_211034087_Enum* _self_, jule::Str _4727_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_223e31e72:;
		if (it != expr.end()) {
			jule::Ptr<_211033592_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;
				};
			}
			_iter_next_223e31e72:;
			++it;
			goto _iter_begin_223e31e72;
		}
		_iter_end_223e31e72:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _211034087_Enum _Src) {
	_Stream << _2110343ea_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2110350bb_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2110359b2_Str(_211035682_TypeEnum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _211035cc0_Equals(jule::Ptr<_211035682_TypeEnum> _self_, jule::Ptr<_211bb6455_TypeKind> _8022_other) {
	jule::Ptr<_211035682_TypeEnum> _8113_tenm = _211bb9018_TypeEnum(_8022_other.ptr());;
	return (_self_ == _8113_tenm);
}



inline jule::Ptr<_2110350bb_TypeEnumItem> _2110361bb_FindItem(_211035682_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_223e341e9:;
		if (it != expr.end()) {
			jule::Ptr<_2110350bb_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;
				};
			}
			_iter_next_223e341e9:;
			++it;
			goto _iter_begin_223e341e9;
		}
		_iter_end_223e341e9:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _211035682_TypeEnum _Src) {
	_Stream << _2110359b2_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_211b254c4_Sema>&,jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>&)> _21105d699_readyFn(jule::Ptr<_21104d27c_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_211b254c4_Sema>&,jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>&)>([=](jule::Ptr<_211b254c4_Sema>& _6321_sema, jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>& _6339_generics) mutable -> jule::Bool {
		{
			auto &expr = _self_.get()._field_genericsD;
			auto it = expr.begin();
			_iter_begin_223e42191:;
			if (it != expr.end()) {
				jule::I64 _6418_i = it - expr.begin();
				jule::Ptr<_210e5e688_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_211bb4c28_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_223e42191;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_211bb6455_TypeKind>>::alloc(0LL,_6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto &expr = _6425_g.get()._field_Constraint.get()._field_Mask;
						auto it = expr.begin();
						_iter_begin_223e44407:;
						if (it != expr.end()) {
							jule::Ptr<_210e520a4_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = _6321_sema.get()._field_errors.len();;
								jule::Ptr<_211bb6455_TypeKind> _7229_kind = _211b2c7c8_buildTypeWithRefers(_6321_sema, _7029_mask,jule::Trait<_211bd2086_Lookup>(_6321_sema, 3),_6339_generics,nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type_is<jule::Ptr<_210e5266a_IdentTypeDecl>>()) {
											_case_begin_223e466e5:;
											{
												jule::Ptr<_210e5266a_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.operator jule::Ptr<_210e5266a_IdentTypeDecl>();;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _211095406_isBuiltinConstraint(_7637_itd.get()._field_Ident))) {
													_7229_kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													_6321_sema.get()._field_errors=_6321_sema.get()._field_errors.slice(0LL,_7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_223e4664b:;
									};
									return false;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_223e44407:;
							++it;
							goto _iter_begin_223e44407;
						}
						_iter_end_223e44407:;
					};
				}
				_iter_next_223e42191:;
				++it;
				_6418_i++;
				goto _iter_begin_223e42191;
			}
			_iter_end_223e42191:;
		};
		return true;
	});
}



inline jule::Bool _2110756d3_readyFi(jule::Ptr<_21104d27c_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _211b31bc8_fnEnvironment(_self_.get()._field_s, _self_.get()._field_fi,_21105d699_readyFn(_self_)));
}



inline jule::Bool _21109007c_readySi(jule::Ptr<_21104d27c_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _21105d699_readyFn(_self_)(_self_.get()._field_s,_self_.get()._field_genericsA));
}



inline jule::Bool _211091dc5_ready(jule::Ptr<_21104d27c_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _2110756d3_readyFi(_self_);
	};
	return _21109007c_readySi(_self_);
}



inline jule::Bool _2110930b3_check(jule::Ptr<_21104d27c_constraintChecker> _self_) {
	if ((!(_211091dc5_ready(_self_)))) {
		return false;
	};
	_julec_label_lookup:;
	{
		auto &expr = _self_.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_223e4d8c8:;
		if (it != expr.end()) {
			jule::I64 _11914_i = it - expr.begin();
			jule::Ptr<_211bb4c28_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_223e4d8c8;
				};
				{
					auto &expr = _11921_g.get()._field_Constraint;
					auto it = expr.begin();
					_iter_begin_223e4e973:;
					if (it != expr.end()) {
						jule::Ptr<_211bb6455_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_211bbae2c_Prim> _12425_prim = _211bb8567_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _211bbba21_IsConstraint(_12425_prim.ptr()))) {
								if (_211093811_matchConstraint(_12425_prim.get()._field_Kind,_11921_g.get()._field_Kind)) {
									goto _iter_next_223e4d8c8;
								};
								goto _iter_next_223e4e973;
							};
							if (_211bb6b5e_Equals(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_223e4d8c8;
							};
						}
						_iter_next_223e4e973:;
						++it;
						goto _iter_begin_223e4e973;
					}
					_iter_end_223e4e973:;
				};
				_211b28186_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et,jule::Str("type @ is not matched with @'s constraint", 41),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_11921_g.get()._field_Kind.ptr())),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident)}));
				return false;
			}
			_iter_next_223e4d8c8:;
			++it;
			_11914_i++;
			goto _iter_begin_223e4d8c8;
		}
		_iter_end_223e4d8c8:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _21104d27c_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2110965e4_IsTraitImpl(_2110b6658_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _211096d42_IsStructImpl(_2110b6658_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _2110b6658_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b0940e_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b095eb_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b097d8_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b099c5_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b09bb2_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2110b6845_IsWhileNext(_211b09d9e_WhileIter* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _211b09d9e_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b0a08b_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b0a278_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b0a465_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b0a652_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b0a83e_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b0aa2b_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b0ac18_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b0ae05_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _211b0b510_IsGenericTypeMatch(_211b0b0e2_Match* _self_) {
	return (((*_self_)._field_TypeMatch && ((*_self_)._field_Expr != nullptr)) && (*_self_)._field_Expr.get()._field_Kind.get()._field_Generic);
}







std::ostream &operator<<(std::ostream &_Stream, _211b0b0e2_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _211b0b82e_isDefault(_211b0b642_Case* _self_) {
	return ((*_self_)._field_Exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _211b0b642_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b0b961_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b0bb4d_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b0bd3a_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b0c027_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_211b1c378_ImportInfo> _211b0c401_FindPackage(_211b0c214_scopeChecker* _self_, jule::Str _45630_ident) {
	return _211b259e1_FindPackage((*_self_)._field_s.ptr(), _45630_ident);
}



inline jule::Ptr<_211b1c378_ImportInfo> _211b0c533_SelectPackage(_211b0c214_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_211b1c378_ImportInfo>)> _46632_selector) {
	return _211b25cee_SelectPackage((*_self_)._field_s.ptr(), _46632_selector);
}



inline jule::Ptr<_211b43228_Var> _211b0c665_FindVar(_211b0c214_scopeChecker* _self_, jule::Str _47726_ident, jule::Bool _47738_cpp_linked) {
	;
	jule::Ptr<_211b43228_Var> _48017_v = _211b87d50_findVar((*_self_)._field_table.ptr(), _47726_ident,_47738_cpp_linked,true);;
	if ((_48017_v != nullptr)) {
		return _48017_v;
	};
	jule::Ptr<_211b0c214_scopeChecker> _48517_parent = (*_self_)._field_parent;;
	while ((_48517_parent != nullptr)) {
		{
			_48017_v=_211b87d50_findVar(_48517_parent.get()._field_table.ptr(), _47726_ident,_47738_cpp_linked,true);
			if ((_48017_v != nullptr)) {
				return _48017_v;
			};
			_48517_parent=_48517_parent.get()._field_parent;
		}
	_iter_next_223e7a9e3:;
	}
	_iter_end_223e7a9e3:;;
	return _211b261a6_FindVar((*_self_)._field_s.ptr(), _47726_ident,_47738_cpp_linked);
}



inline jule::Ptr<_211bb5762_TypeAlias> _211b0c797_FindTypeAlias(_211b0c214_scopeChecker* _self_, jule::Str _50432_ident, jule::Bool _50444_cppLinked) {
	;
	jule::Ptr<_211bb5762_TypeAlias> _50717_ta = _211b882a1_findTypeAlias((*_self_)._field_table.ptr(), _50432_ident,_50444_cppLinked,true);;
	if ((_50717_ta != nullptr)) {
		return _50717_ta;
	};
	jule::Ptr<_211b0c214_scopeChecker> _51217_parent = (*_self_)._field_parent;;
	while ((_51217_parent != nullptr)) {
		{
			_50717_ta=_211b882a1_findTypeAlias(_51217_parent.get()._field_table.ptr(), _50432_ident,_50444_cppLinked,true);
			if ((_50717_ta != nullptr)) {
				return _50717_ta;
			};
			_51217_parent=_51217_parent.get()._field_parent;
		}
	_iter_next_223e7d919:;
	}
	_iter_end_223e7d919:;;
	return _211b2655d_FindTypeAlias((*_self_)._field_s.ptr(), _50432_ident,_50444_cppLinked);
}



inline jule::Ptr<_210e427d1_Struct> _211b0c8c9_FindStruct(_211b0c214_scopeChecker* _self_, jule::Str _52929_ident, jule::Bool _52941_cppLinked) {
	return _211b26915_FindStruct((*_self_)._field_s.ptr(), _52929_ident,_52941_cppLinked);
}



inline jule::Ptr<_211020084_Fn> _211b0ca0b_FindFn(_211b0c214_scopeChecker* _self_, jule::Str _53825_ident, jule::Bool _53837_cppLinked) {
	return _211b26cbc_FindFn((*_self_)._field_s.ptr(), _53825_ident,_53837_cppLinked);
}



inline jule::Ptr<_211031e42_Trait> _211b0cb3d_FindTrait(_211b0c214_scopeChecker* _self_, jule::Str _54728_ident) {
	return _211b270ca_FindTrait((*_self_)._field_s.ptr(), _54728_ident);
}



inline jule::Ptr<_211034087_Enum> _211b0cc70_FindEnum(_211b0c214_scopeChecker* _self_, jule::Str _55627_ident) {
	return _211b273d8_FindEnum((*_self_)._field_s.ptr(), _55627_ident);
}



inline jule::Ptr<_211035682_TypeEnum> _211b0cda2_FindTypeEnum(_211b0c214_scopeChecker* _self_, jule::Str _56531_ident) {
	return _211b276e6_FindTypeEnum((*_self_)._field_s.ptr(), _56531_ident);
}



inline jule::Bool _211b0ced4_isUnsafe(jule::Ptr<_211b0c214_scopeChecker> _self_) {
	jule::Ptr<_211b0c214_scopeChecker> _57317_scope = _self_;;
	_julec_label_iter:;
	if (_57317_scope.get()._field_scope.get()._field_Unsafety) {
		return true;
	};
	if ((_57317_scope.get()._field_parent != nullptr)) {
		_57317_scope=_57317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _211b0d116_isRoot(_211b0c214_scopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _211b0d248_stop(_211b0c214_scopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _211b0d37a_stopped(_211b0c214_scopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _211b0d4ac_isDeferred(jule::Ptr<_211b0c214_scopeChecker> _self_) {
	jule::Ptr<_211b0c214_scopeChecker> _60617_scope = _self_;;
	_julec_label_iter:;
	if (_60617_scope.get()._field_scope.get()._field_Deferred) {
		return true;
	};
	if ((_60617_scope.get()._field_parent != nullptr)) {
		_60617_scope=_60617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_211b0c214_scopeChecker> _211b0d5de_getRoot(jule::Ptr<_211b0c214_scopeChecker> _self_) {
	jule::Ptr<_211b0c214_scopeChecker> _62417_root = _self_;;
	while (((_62417_root.get()._field_parent != nullptr) && (_62417_root.get()._field_owner == nullptr))) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_223e8867c:;
	}
	_iter_end_223e8867c:;;
	return _62417_root;
}



inline jule::Ptr<_211b0c214_scopeChecker> _211b0d721_getHardRoot(jule::Ptr<_211b0c214_scopeChecker> _self_) {
	jule::Ptr<_211b0c214_scopeChecker> _63417_root = _self_;;
	while ((_63417_root.get()._field_parent != nullptr)) {
		{
			_63417_root=_63417_root.get()._field_parent;
		}
	_iter_next_223e8997a:;
	}
	_iter_end_223e8997a:;;
	return _63417_root;
}



inline jule::Ptr<_211b0a652_Label> _211b0d853_findLabel(_211b0c214_scopeChecker* _self_, jule::Str _64428_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_223e8a591:;
		if (it != expr.end()) {
			jule::Any _64521_st = *it;
			{
				{
					auto &_match_expr{ _64521_st };
					
					if (_match_expr.type_is<jule::Ptr<_211b0a652_Label>>()) {
						_case_begin_223e8b086:;
						{
							jule::Ptr<_211b0a652_Label> _64825_label = _64521_st.operator jule::Ptr<_211b0a652_Label>();;
							if ((_64825_label.get()._field_Ident == _64428_ident)) {
								return _64825_label;
							};
						}
					}
					_match_end_223e8ae87:;
				};
			}
			_iter_next_223e8a591:;
			++it;
			goto _iter_begin_223e8a591;
		}
		_iter_end_223e8a591:;
	};
	return nullptr;
}



inline jule::Ptr<_211b0bd3a_scopeLabel> _211b0d985_findLabelScope(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Str _66034_ident) {
	jule::Ptr<_211b0bd3a_scopeLabel> _66117_label = _211b0dab7_findLabelAll(_self_.ptr(), _66034_ident);;
	if (((_66117_label != nullptr) && (_66117_label.get()._field_scope == _self_))) {
		return _66117_label;
	};
	return nullptr;
}



inline jule::Ptr<_211b0bd3a_scopeLabel> _211b0dab7_findLabelAll(_211b0c214_scopeChecker* _self_, jule::Str _67231_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_223e8d484:;
		if (it != expr.end()) {
			jule::Ptr<_211b0bd3a_scopeLabel> _67321_lbl = *it;
			{
				if ((_67321_lbl.get()._field_label.get()._field_Ident == _67231_ident)) {
					return _67321_lbl;
				};
			}
			_iter_next_223e8d484:;
			++it;
			goto _iter_begin_223e8d484;
		}
		_iter_end_223e8d484:;
	};
	return nullptr;
}



inline jule::Bool _211b0dbe9_isDuplicatedIdent(_211b0c214_scopeChecker* _self_, jule::Uintptr _68436_itself, jule::Str _68453_ident) {
	jule::Ptr<_211b43228_Var> _68513_v = _211b0c665_FindVar(&(*_self_), _68453_ident,false);;
	if (((_68513_v != nullptr) && (static_cast<jule::Uintptr>(_68513_v) != _68436_itself))) {
		if ((_68513_v.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_68513_v.get()._field_Scope == (*_self_)._field_scope) || (!(_211b27a48_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	jule::Ptr<_211bb5762_TypeAlias> _69313_ta = _211b0c797_FindTypeAlias(&(*_self_), _68453_ident,false);;
	if (((_69313_ta != nullptr) && (static_cast<jule::Uintptr>(_69313_ta) != _68436_itself))) {
		if ((_69313_ta.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_69313_ta.get()._field_Scope == (*_self_)._field_tree) || (!(_211b27a48_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	return false;
}



inline void _211b0dd2b_checkVarDecl(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e64d97_VarDecl> _70436_decl) {
	jule::Ptr<_211b43228_Var> _70517_v = _21102a8ca_buildVar(_70436_decl);;
	_70517_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70517_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_70517_v));;
	});;
	if (_211b0dbe9_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70517_v)),_70517_v.get()._field_Ident)) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _70517_v.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70517_v.get()._field_Ident)}));
		_211b284a5_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_211b0d248_stop(_self_.ptr());
		return;;
	};
	_211b3764b_checkVarDecl(_self_.get()._field_s, _70517_v,jule::Trait<_211bd2086_Lookup>(_self_, 0));
	if (((!(_211b43844_IsTypeInferred(_70517_v.ptr()))) && ((_70517_v.get()._field_Kind == nullptr) || (_70517_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_211b3ac8c_checkTypeVar(_self_.get()._field_s, _70517_v,jule::Trait<_211bd2086_Lookup>(_self_, 0));
}



inline void _211b0de5d_checkTypeAliasDecl(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e68708_TypeAliasDecl> _72842_decl) {
	jule::Ptr<_211bb5762_TypeAlias> _72917_ta = _2110278a5_buildTypeAlias(_72842_decl);;
	if (_211b0dbe9_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72917_ta)),_72917_ta.get()._field_Ident)) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _72917_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72917_ta.get()._field_Ident)}));
		_211b284a5_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_211b0d248_stop(_self_.ptr());
		return;;
	};
	_211b3348d_checkTypeAliasDecl(_self_.get()._field_s, _72917_ta,jule::Trait<_211bd2086_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72917_ta);;
	if ((_72917_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_211b0d248_stop(_self_.ptr());
	};
}



inline jule::Ptr<_211b0940e_Scope> _211b0e090_getChild(_211b0c214_scopeChecker* _self_) {
	return jule::new_ptr<_211b0940e_Scope>(_211b0940e_Scope{._field_Parent=(*_self_)._field_scope, });
}



inline void _211b0e1c2_checkChildSsc(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e623c2_ScopeTree>& _75238_tree, jule::Ptr<_211b0940e_Scope>& _75261_s, jule::Ptr<_211b0c214_scopeChecker>& _75277_ssc) {
	_75277_ssc.get()._field_parent=_self_;
	_211b154d6_check(_75277_ssc, _75238_tree,_75261_s);
}



inline jule::Ptr<_211b0940e_Scope> _211b0e304_checkChildSc(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e623c2_ScopeTree>& _75737_tree, jule::Ptr<_211b0c214_scopeChecker>& _75760_ssc) {
	jule::Ptr<_211b0940e_Scope> _75817_s = _211b0e090_getChild(_self_.ptr());;
	_211b0e1c2_checkChildSsc(_self_, _75737_tree,_75817_s,_75760_ssc);
	return _75817_s;
}



inline jule::Ptr<_211b0940e_Scope> _211b0e436_checkChild(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e623c2_ScopeTree>& _76335_tree) {
	jule::Ptr<_211b0c214_scopeChecker> _76417_ssc = _211b1574a_newChildChecker(_self_);;
	return _211b0e304_checkChildSc(_self_, _76335_tree,_76417_ssc);
}



inline void _211b0e568_checkAnonScope(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e623c2_ScopeTree> _76838_tree) {
	jule::Ptr<_211b0940e_Scope> _76917_s = _211b0e436_checkChild(_self_, _76838_tree);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_76917_s));;
}



inline void _211b0e69a_processErrorCall(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_21101ba20_BuiltinErrorCallExprModel>& _77341_m, jule::Ptr<_20e7ddc0b_Token> _77372_err) {
	if (_211b0d4ac_isDeferred(_self_)) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _77372_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_211b0c214_scopeChecker> _77817_root = _211b0d5de_getRoot(_self_);;
	if ((!(_77817_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _77372_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_211b284a5_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77341_m.get()._field_Func=_77817_root.get()._field_owner;
}



inline void _211b0e7cc_checkExpr(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e565c5_Expr> _78633_expr) {
	jule::Ptr<_211b8bd87_Eval> _78717_eval = _211b2ea72_eval(_self_.get()._field_s, jule::Trait<_211bd2086_Lookup>(_self_, 0));;
	_78717_eval.get()._field_ignored=true;
	jule::Ptr<_211b8a319_Data> _78917_d = _211ba7b50_evalExpr(_78717_eval, _78633_expr);;
	if ((_78917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78917_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_21101ba20_BuiltinErrorCallExprModel>>()) {
			_case_begin_223ea5248:;
			{
				jule::Ptr<_21101ba20_BuiltinErrorCallExprModel> _79621_m = _78917_d.get()._field_Model.operator jule::Ptr<_21101ba20_BuiltinErrorCallExprModel>();;
				_211b0e69a_processErrorCall(_self_, _79621_m,_78633_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101c746_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_21101b646_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21101aba6_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21101a7cc_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21101a9b9_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21101b080_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21101b26c_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21101b833_BuiltinCopyCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21101c933_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_2110188b8_FnCallExprModel>>()) {
			_case_begin_223ea5457:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else {
			_case_begin_223ea5116:;
			{
				_211b28186_pushErr(_self_.get()._field_s.ptr(), _78633_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_223ea50b1:;
	};
}



inline void _211b0e90e_checkCoExpr(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e581ba_CoExpr> _81535_expr) {
	jule::Ptr<_211b8bd87_Eval> _81617_eval = _211b2ea72_eval(_self_.get()._field_s, jule::Trait<_211bd2086_Lookup>(_self_, 0));;
	_81617_eval.get()._field_ignored=true;
	jule::Ptr<_211b8a319_Data> _81817_d = _211ba7b50_evalExpr(_81617_eval, _81535_expr.get()._field_Expr);;
	if ((_81817_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _81817_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_2110188b8_FnCallExprModel>>()) {
			_case_begin_223eaa6c1:;
			{
				jule::Ptr<_2110188b8_FnCallExprModel> _82521_model = _81817_d.get()._field_Model.operator jule::Ptr<_2110188b8_FnCallExprModel>();;
				if (_82521_model.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
					_211b28186_pushErr(_self_.get()._field_s.ptr(), _81535_expr.get()._field_Token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_211b284a5_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				};
				_82521_model.get()._field_IsCo=true;
				_211b9e9e3_checkFnOfConcurrentCall(_81617_eval.ptr(), _82521_model.get()._field_Func,_81535_expr.get()._field_Expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_81817_d));;
			}
		}
		else {
			_case_begin_223eaa88b:;
			{
				_211b28186_pushErr(_self_.get()._field_s.ptr(), _81535_expr.get()._field_Token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_223eaa517:;
	};
}



inline jule::Ptr<_211b095eb_If> _211b0ea41_checkIf(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e67707_If> _83931_i) {
	jule::Ptr<_211b0940e_Scope> _84017_s = _211b0e436_checkChild(_self_, _83931_i.get()._field_Scope);;
	jule::Ptr<_211b8a319_Data> _84217_d = _211ba7b50_evalExpr(_211b2ea72_eval(_self_.get()._field_s, jule::Trait<_211bd2086_Lookup>(_self_, 0)), _83931_i.get()._field_Expr);;
	if ((_84217_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_211bbae2c_Prim> _84717_prim = _211bb8567_Prim(_84217_d.get()._field_Kind.ptr());;
	if (((_84717_prim == nullptr) || (!(_211bbddec_IsBool(_84717_prim.ptr()))))) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _83931_i.get()._field_Expr.get()._field_Token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_211b095eb_If>(_211b095eb_If{._field_Expr=_84217_d.get()._field_Model, ._field_Scope=_84017_s});
}



inline jule::Ptr<_211b097d8_Else> _211b0eb73_checkElse(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e67aae_Else> _85933_e) {
	return jule::new_ptr<_211b097d8_Else>(_211b097d8_Else{._field_Scope=_211b0e436_checkChild(_self_, _85933_e.get()._field_Scope)});
}



inline void _211b0eca5_checkConditional(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e68032_Conditional> _86540_conditional) {
	jule::Ptr<_211b099c5_Conditional> _86617_c = jule::new_ptr<_211b099c5_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_86617_c));;
	_86617_c.get()._field_Elifs=jule::Slice<jule::Ptr<_211b095eb_If>>::alloc(0LL,(_86540_conditional.get()._field_Tail.len() + 1LL));
	_86617_c.get()._field_Elifs = jule::alloc_for_append(_86617_c.get()._field_Elifs,1);_86617_c.get()._field_Elifs.__push(_211b0ea41_checkIf(_self_, _86540_conditional.get()._field_Head));;
	{
		auto &expr = _86540_conditional.get()._field_Tail;
		auto it = expr.begin();
		_iter_begin_223eb5247:;
		if (it != expr.end()) {
			jule::Ptr<_210e67707_If> _87221_elif = *it;
			{
				_86617_c.get()._field_Elifs = jule::alloc_for_append(_86617_c.get()._field_Elifs,1);_86617_c.get()._field_Elifs.__push(_211b0ea41_checkIf(_self_, _87221_elif));;
			}
			_iter_next_223eb5247:;
			++it;
			goto _iter_begin_223eb5247;
		}
		_iter_end_223eb5247:;
	};
	if ((_86540_conditional.get()._field_Default != nullptr)) {
		_86617_c.get()._field_Default=_211b0eb73_checkElse(_self_, _86540_conditional.get()._field_Default);
	};
}



inline void _211b0edd7_checkIterScopeSsc(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Uintptr _88137_it, jule::Ptr<_210e623c2_ScopeTree> _88154_tree, jule::Ptr<_211b0940e_Scope>& _88177_s, jule::Ptr<_211b0c214_scopeChecker> _88192_ssc) {
	_88192_ssc.get()._field_it=_88137_it;
	_211b0e1c2_checkChildSsc(_self_, _88154_tree,_88177_s,_88192_ssc);
}



inline jule::Ptr<_211b0940e_Scope> _211b10019_checkIterScopeSc(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Uintptr _88636_it, jule::Ptr<_210e623c2_ScopeTree> _88653_tree, jule::Ptr<_211b0c214_scopeChecker> _88675_ssc) {
	jule::Ptr<_211b0940e_Scope> _88717_scope = _211b0e090_getChild(_self_.ptr());;
	_211b0edd7_checkIterScopeSsc(_self_, _88636_it,_88653_tree,_88717_scope,_88675_ssc);
	return _88717_scope;
}



inline jule::Ptr<_211b0940e_Scope> _211b1014b_checkIterScope(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Uintptr _89234_it, jule::Ptr<_210e623c2_ScopeTree>& _89252_tree) {
	jule::Ptr<_211b0c214_scopeChecker> _89317_ssc = _211b1574a_newChildChecker(_self_);;
	return _211b10019_checkIterScopeSc(_self_, _89234_it,_89252_tree,_89317_ssc);
}



inline void _211b1027d_checkInfIter(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e658ae_Iter>& _89737_it) {
	jule::Ptr<_211b09bb2_InfIter> _89817_kind = jule::new_ptr<_211b09bb2_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_89817_kind));;
	_89817_kind.get()._field_Scope=_211b1014b_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89817_kind)),_89737_it.get()._field_Scope);
}



inline void _211b103b0_checkWhileIter(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e658ae_Iter>& _90339_it) {
	jule::Ptr<_210e66184_WhileKind> _90417_wh = _90339_it.get()._field_Kind.operator jule::Ptr<_210e66184_WhileKind>();;
	if (((_90417_wh.get()._field_Expr == nullptr) && (_90417_wh.get()._field_Next == nullptr))) {
		_211b1027d_checkInfIter(_self_, _90339_it);
		return;;
	};
	jule::Ptr<_211b09d9e_WhileIter> _91017_kind = jule::new_ptr<_211b09d9e_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_91017_kind));;
	_91017_kind.get()._field_Scope=_211b1014b_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_91017_kind)),_90339_it.get()._field_Scope);
	if ((_90417_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_211b8a319_Data> _91521_d = _211ba7b50_evalExpr(_211b2ea72_eval(_self_.get()._field_s, jule::Trait<_211bd2086_Lookup>(_self_, 0)), _90417_wh.get()._field_Expr);;
		if ((_91521_d == nullptr)) {
			return;;
		};
		jule::Ptr<_211bbae2c_Prim> _92017_prim = _211bb8567_Prim(_91521_d.get()._field_Kind.ptr());;
		if ((_92017_prim == nullptr)) {
			_211b28186_pushErr(_self_.get()._field_s.ptr(), _90339_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_211bbddec_IsBool(_92017_prim.ptr())))) {
			_211b28186_pushErr(_self_.get()._field_s.ptr(), _90339_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_91017_kind.get()._field_Expr=_91521_d.get()._field_Model;
	};
	if (_210e664d6_IsWhileNext(_90417_wh.ptr())) {
		if ((!(_2110b08c7_isValidAstStForNextSt(_90417_wh.get()._field_Next)))) {
			_211b28186_pushErr(_self_.get()._field_s.ptr(), _90417_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _94017_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_211b14282_checkNode(_self_, _90417_wh.get()._field_Next);
		if ((_94017_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _94325_st = _self_.get()._field_scope.get()._field_Stmts[_94017_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL,_94017_n);
			if ((!(_2110626d1_isValidStForNextSt(_94325_st)))) {
				_211b28186_pushErr(_self_.get()._field_s.ptr(), _90417_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_91017_kind.get()._field_Next=_94325_st;
		};
	};
}



inline void _211b104e2_checkRangeIter(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e658ae_Iter>& _95339_it) {
	jule::Ptr<_210e66a25_RangeKind> _95417_rang = _95339_it.get()._field_Kind.operator jule::Ptr<_210e66a25_RangeKind>();;
	jule::Ptr<_211b8a319_Data> _95617_d = _211ba7b50_evalExpr(_211b2ea72_eval(_self_.get()._field_s, jule::Trait<_211bd2086_Lookup>(_self_, 0)), _95417_rang.get()._field_Expr);;
	if ((_95617_d == nullptr)) {
		return;;
	};
	jule::Ptr<_211b0a08b_RangeIter> _96117_kind = jule::new_ptr<_211b0a08b_RangeIter>(_211b0a08b_RangeIter{._field_Expr=_95617_d, });;
	_211b815a7_rangeChecker _96517_rc = _211b815a7_rangeChecker{._field_sc=_self_, ._field_rang=_95417_rang, ._field_Kind=_96117_kind, ._field_d=_95617_d};;
	jule::Bool _97113_ok = _211b82e6b_check(&_96517_rc);;
	if ((!(_97113_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_96117_kind));;
	jule::Ptr<_211b0c214_scopeChecker> _97817_ssc = _211b1574a_newChildChecker(_self_);;
	jule::Ptr<_211b0940e_Scope> _97917_scope = _211b0e090_getChild(_self_.ptr());;
	if ((_96117_kind.get()._field_KeyA != nullptr)) {
		if (((!(_211b27a48_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _211b0dbe9_isDuplicatedIdent(_self_.ptr(), 0LLU,_96117_kind.get()._field_KeyA.get()._field_Ident))) {
			_211b28186_pushErr(_self_.get()._field_s.ptr(), _96117_kind.get()._field_KeyA.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96117_kind.get()._field_KeyA.get()._field_Ident)}));
			_211b284a5_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96117_kind.get()._field_KeyA.get()._field_Scope=_97917_scope;
		_97817_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_97817_ssc.get()._field_table.get()._field_Vars,1);_97817_ssc.get()._field_table.get()._field_Vars.__push(_96117_kind.get()._field_KeyA);;
	};
	if ((_96117_kind.get()._field_KeyB != nullptr)) {
		if (((!(_211b27a48_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _211b0dbe9_isDuplicatedIdent(_self_.ptr(), 0LLU,_96117_kind.get()._field_KeyB.get()._field_Ident))) {
			_211b28186_pushErr(_self_.get()._field_s.ptr(), _96117_kind.get()._field_KeyB.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96117_kind.get()._field_KeyB.get()._field_Ident)}));
			_211b284a5_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96117_kind.get()._field_KeyB.get()._field_Scope=_97917_scope;
		_97817_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_97817_ssc.get()._field_table.get()._field_Vars,1);_97817_ssc.get()._field_table.get()._field_Vars.__push(_96117_kind.get()._field_KeyB);;
	};
	_211b0edd7_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96117_kind)),_95339_it.get()._field_Scope,_97917_scope,_97817_ssc);
	_96117_kind.get()._field_Scope=_97917_scope;
}



inline void _211b10624_checkIter(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e658ae_Iter> _100333_it) {
	if (_210e65c11_IsInf(_100333_it.ptr())) {
		_211b1027d_checkInfIter(_self_, _100333_it);
		return;;
	};
	{
		auto &_match_expr{ _100333_it.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_210e66184_WhileKind>>()) {
			_case_begin_223ed23c9:;
			{
				_211b103b0_checkWhileIter(_self_, _100333_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e66a25_RangeKind>>()) {
			_case_begin_223ed1c8b:;
			{
				_211b104e2_checkRangeIter(_self_, _100333_it);
			}
		}
		else {
			_case_begin_223ed16d6:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_223ed1807:;
	};
}



inline jule::Bool _211b10756_checkValidContLabel(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Uintptr _101939_it) {
	jule::Ptr<_211b0c214_scopeChecker> _102017_scope = _self_;;
	_julec_label_iter:;
	if ((_102017_scope.get()._field_it == _101939_it)) {
		return true;
	};
	if ((_102017_scope.get()._field_parent != nullptr)) {
		_102017_scope=_102017_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _211b10888_checkValidBreakLabel(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Uintptr _103540_ptr) {
	jule::Ptr<_211b0c214_scopeChecker> _103617_scope = _self_;;
	_julec_label_iter:;
	if ((_103617_scope.get()._field_it == _103540_ptr)) {
		return true;
	};
	if ((_103617_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _104417_mtch = static_cast<jule::Uintptr>(((_211b0b642_Case*)(_103617_scope.get()._field_cse))->_field_Owner);;
		if ((_104417_mtch == _103540_ptr)) {
			return true;
		};
	};
	if ((_103617_scope.get()._field_parent != nullptr)) {
		_103617_scope=_103617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_211b0a278_ContSt> _211b109ba_checkContValidScope(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e67284_ContSt> _105839_c) {
	if (_211b0d4ac_isDeferred(_self_)) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _105839_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_105839_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_211b0a278_ContSt>();
	};
	jule::Ptr<_211b0c214_scopeChecker> _106817_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_106817_scope.get()._field_it == 0LLU) && (_106817_scope.get()._field_parent != nullptr)) && (_106817_scope.get()._field_owner == nullptr))) {
			_case_begin_223ed9ab8:;
			{
				_106817_scope=_106817_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_106817_scope.get()._field_it != 0LLU)) {
			_case_begin_223ed9b40:;
			{
				return jule::new_ptr<_211b0a278_ContSt>(_211b0a278_ContSt{._field_It=_106817_scope.get()._field_it});
			}
		}
		_match_end_223ed9a0d:;
	};
	_211b28186_pushErr(_self_.get()._field_s.ptr(), _105839_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _211b10aec_checkCont(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e67284_ContSt> _108229_c) {
	jule::Ptr<_211b0a278_ContSt> _108317_cont = _211b109ba_checkContValidScope(_self_, _108229_c);;
	if ((_108317_cont == nullptr)) {
		return;;
	};
	if ((_108229_c.get()._field_Label != nullptr)) {
		jule::Ptr<_211b0bd3a_scopeLabel> _108921_label = _2110a1115_findLabelParent(_108229_c.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
		if ((_108921_label == nullptr)) {
			_211b28186_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		_108921_label.get()._field_used=true;
		if (((_108921_label.get()._field_pos + 1LL) >= _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_211b28186_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		jule::I64 _110217_i = (_108921_label.get()._field_pos + 1LL);;
		if ((_110217_i >= _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_211b28186_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _110625_st = _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_110217_i];;
			{
				auto &_match_expr{ _110625_st };
				
				if (_match_expr.type_is<jule::Ptr<_211b09bb2_InfIter>>()) {
					_case_begin_223ee3cd1:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_211b09bb2_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_211b0a08b_RangeIter>>()) {
					_case_begin_223ee1cbd:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_211b0a08b_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_211b09d9e_WhileIter>>()) {
					_case_begin_223ee3819:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_211b09d9e_WhileIter>()));
					}
				}
				else {
					_case_begin_223ee371a:;
					{
						_211b28186_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
					}
				}
				_match_end_223ee36b5:;
			};
		};
	};
	if ((_108317_cont.get()._field_It != 0LLU)) {
		if ((!(_211b10756_checkValidContLabel(_self_, _108317_cont.get()._field_It)))) {
			_211b28186_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_108317_cont));;
}



inline void _211b10c2e_checkLabel(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e5ea40_LabelSt> _112934_l) {
	if ((_211b0d853_findLabel(_self_.ptr(), _112934_l.get()._field_Ident) != nullptr)) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _112934_l.get()._field_Token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_112934_l.get()._field_Ident)}));
		return;;
	};
	jule::Ptr<_211b0a652_Label> _113517_label = jule::new_ptr<_211b0a652_Label>(_211b0a652_Label{._field_Ident=_112934_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_113517_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_211b0bd3a_scopeLabel>>::make({jule::new_ptr<_211b0bd3a_scopeLabel>(_211b0bd3a_scopeLabel{._field_token=_112934_l.get()._field_Token, ._field_label=_113517_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _211b10d61_pushGoto(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e5ede7_GotoSt> _114832_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_211b0a83e_GotoSt>(_211b0a83e_GotoSt{._field_Ident=_114832_gt.get()._field_Label.get()._field_Kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_211b0c027_scopeGoto>>::make({jule::new_ptr<_211b0c027_scopeGoto>(_211b0c027_scopeGoto{._field_gt=_114832_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _211b10e93_checkPostfix(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e60d2c_AssignSt> _116036_a) {
	if ((_116036_a.get()._field_Left.len() > 1LL)) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_210e565c5_Expr> _116617_expr = _116036_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_211b8a319_Data> _116717_d = _211ba7b50_evalExpr(_211b2ea72_eval(_self_.get()._field_s, jule::Trait<_211bd2086_Lookup>(_self_, 0)), _116617_expr);;
	if ((_116717_d == nullptr)) {
		return;;
	};
	_2110b525b_checkAssign(_self_.get()._field_s,_116717_d,nullptr,_116036_a.get()._field_Setter);
	if ((_211bb8a40_Ptr(_116717_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_211bc2c25_Ptr> _117521_ptr = _211bb8a40_Ptr(_116717_d.get()._field_Kind.ptr());;
		if (_211bc36e8_IsUnsafe(_117521_ptr.ptr())) {
			_211b28186_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116036_a.get()._field_Setter.get()._field_Kind),jule::Any(_211bb6851_Str(_116717_d.get()._field_Kind.ptr()))}));
			return;;
		};
	} else {
		if (((_211bb8567_Prim(_116717_d.get()._field_Kind.ptr()) == nullptr) || (!(_211b08ebe_IsNum(_211bb8567_Prim(_116717_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_211b28186_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116036_a.get()._field_Setter.get()._field_Kind),jule::Any(_211bb6851_Str(_116717_d.get()._field_Kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_211b0aa2b_Postfix>(_211b0aa2b_Postfix{._field_Expr=_116717_d.get()._field_Model, ._field_Op=_116036_a.get()._field_Setter.get()._field_Kind})));;
}



inline jule::Bool _211b110c5_isNewAssignIdent(_211b0c214_scopeChecker* _self_, jule::Str _119335_ident) {
	if ((_20e7e14a0_IsIgnoreIdent(_119335_ident) || _119335_ident.empty())) {
		return false;
	};
	return (_211b88658_defByIdent((*_self_)._field_table.ptr(), _119335_ident,false) == nullptr);
}



inline jule::Bool _211b11207_checkStructureAssignOp(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e6db2b_StructIns>& _120047_s, jule::Ptr<_210e60d2c_AssignSt>& _120067_a, jule::Ptr<_211b8a319_Data>& _120086_r) {
	jule::Ptr<_211022c35_FnIns> _120317_overload = nullptr;;
	{
		auto &_match_expr{ _120067_a.get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_22400692b:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_224006992:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_2240078e9:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_224007960:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_2240079c6:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_224007a3c:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_224007aa3:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_224007b5d:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_224007bc4:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_224007c3a:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_2240067e9:;
			{
				_211b28186_pushErr(_self_.get()._field_s.ptr(), _120067_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120067_a.get()._field_Setter.get()._field_Kind),jule::Any(_210e37c9e_Str(_120047_s.ptr()))}));
				return false;
			}
		}
		_match_end_224006695:;
	};
	if ((_120317_overload == nullptr)) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _120067_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120067_a.get()._field_Setter.get()._field_Kind),jule::Any(_210e37c9e_Str(_120047_s.ptr()))}));
		return false;
	};
	jule::Ptr<_211021d66_ParamIns> _123517_p = _120317_overload.get()._field_Params[1LL];;
	return _211b3006c_checkAssignType(_self_.get()._field_s, _123517_p.get()._field_Decl.get()._field_Reference,_123517_p.get()._field_Kind,_120086_r,_120067_a.get()._field_Setter);
}



inline void _211b11339_checkSingleAssign(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e60d2c_AssignSt>& _123942_a) {
	jule::Ptr<_211b8a319_Data> _124017_l = nullptr;;
	if ((!(_20e7e14a0_IsIgnoreIdent(_123942_a.get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_210e565c5_Expr> _124321_expr = _123942_a.get()._field_Left[0LL].get()._field_Expr;;
		_124017_l=_211ba7b50_evalExpr(_211b2ea72_eval(_self_.get()._field_s, jule::Trait<_211bd2086_Lookup>(_self_, 0)), _124321_expr);
		if ((_124017_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_211b8bd87_Eval> _125017_eval = nullptr;;
	if ((_124017_l != nullptr)) {
		_125017_eval=_211b2e764_evalp(_self_.get()._field_s, jule::Trait<_211bd2086_Lookup>(_self_, 0),_124017_l.get()._field_Kind);
	} else {
		_125017_eval=_211b2ea72_eval(_self_.get()._field_s, jule::Trait<_211bd2086_Lookup>(_self_, 0));
	};
	_125017_eval.get()._field_unsafety=_211b0ced4_isUnsafe(_self_);
	jule::Ptr<_211b8a319_Data> _125717_r = _211ba7b50_evalExpr(_125017_eval, _123942_a.get()._field_Right);;
	if ((_125717_r == nullptr)) {
		return;;
	};
	if ((_124017_l == nullptr)) {
		if (_211bb75dd_Void(_125717_r.get()._field_Kind.ptr())) {
			_211b28186_pushErr(_self_.get()._field_s.ptr(), _123942_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_125717_r));;
		return;;
	};
	if ((!(_2110b525b_checkAssign(_self_.get()._field_s,_124017_l,_125717_r,_123942_a.get()._field_Setter)))) {
		return;;
	};
	if ((_211bba206_Tup(_125717_r.get()._field_Kind.ptr()) != nullptr)) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _123942_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_211017a4e_OperandExprModel> _127917_lm = jule::new_ptr<_211017a4e_OperandExprModel>(_211017a4e_OperandExprModel{._field_Kind=_124017_l.get()._field_Kind, ._field_Model=_124017_l.get()._field_Model});;
	jule::Ptr<_211017a4e_OperandExprModel> _128317_rm = jule::new_ptr<_211017a4e_OperandExprModel>(_211017a4e_OperandExprModel{._field_Kind=_125717_r.get()._field_Kind, ._field_Model=_125717_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_211b0ac18_Assign>(_211b0ac18_Assign{._field_L=_127917_lm, ._field_R=_128317_rm, ._field_Op=_123942_a.get()._field_Setter})));;
	if ((_123942_a.get()._field_Setter.get()._field_Kind != jule::Str("=", 1))) {
		jule::Ptr<_210e6db2b_StructIns> _129021_strct = _211bb99b9_Struct(_124017_l.get()._field_Kind.ptr());;
		if ((_129021_strct != nullptr)) {
			_211b11207_checkStructureAssignOp(_self_, _129021_strct,_123942_a,_125717_r);
			return;;
		};
		_123942_a.get()._field_Setter.get()._field_Kind=_123942_a.get()._field_Setter.get()._field_Kind.slice(0LL,(_123942_a.get()._field_Setter.get()._field_Kind.len() - 1LL));
		_211ba9d61_binaryEval _129721_solver = static__211baa768_new(_125017_eval,_123942_a.get()._field_Setter);;
		_125717_r=_211bb03e9_solveExplicit(&_129721_solver, _124017_l,_125717_r);
		if ((_125717_r == nullptr)) {
			return;;
		};
		_123942_a.get()._field_Setter.get()._field_Kind+=jule::Str("=", 1);
		return;;
	};
	_211b75da4_assignTypeChecker _130617_checker = _211b75da4_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_124017_l.get()._field_Kind, ._field_d=_125717_r, ._field_errorToken=_123942_a.get()._field_Setter};;
	if (_211b7702b_check(&_130617_checker)) {
		_128317_rm.get()._field_Model=_125717_r.get()._field_Model;
		_127917_lm.get()._field_Model=_124017_l.get()._field_Model;
	};
}



inline void _211b1146b_processEndPartOfMultiAssign(_211b0c214_scopeChecker* _self_, jule::Ptr<_211b0ae05_MultiAssign> _131850_st, jule::Ptr<_210e60d2c_AssignSt> _131913_a, jule::Ptr<_210e607dd_AssignLeft> _131931_lexpr, jule::Ptr<_211b8a319_Data> _131955_l, jule::Ptr<_211b8a319_Data> _131969_r) {
	if (_20e7e14a0_IsIgnoreIdent(_131931_lexpr.get()._field_Ident)) {
		if (_211bb75dd_Void(_131969_r.get()._field_Kind.ptr())) {
			_211b28186_pushErr((*_self_)._field_s.ptr(), _131913_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_131850_st.get()._field_L = jule::alloc_for_append(_131850_st.get()._field_L,1);_131850_st.get()._field_L.__push(nullptr);;
		return;;
	};
	if ((_131913_a.get()._field_Declarative && _211b110c5_isNewAssignIdent(&(*_self_), _131931_lexpr.get()._field_Ident))) {
		if (_211b0dbe9_isDuplicatedIdent(&(*_self_), 0LLU,_131931_lexpr.get()._field_Ident)) {
			_211b28186_pushErr((*_self_)._field_s.ptr(), _131931_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_131931_lexpr.get()._field_Ident)}));
			_211b284a5_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_211b0d248_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_211b43228_Var> _133721_v = jule::new_ptr<_211b43228_Var>(_211b43228_Var{._field_Scope=(*_self_)._field_scope, ._field_Token=_131931_lexpr.get()._field_Token, ._field_Ident=_131931_lexpr.get()._field_Ident, ._field_Mutable=_131931_lexpr.get()._field_Mutable, ._field_Reference=_131931_lexpr.get()._field_Reference, ._field_Value=jule::new_ptr<_211b8b392_Value>(_211b8b392_Value{._field_Expr=_131913_a.get()._field_Right, ._field_Data=_131969_r}), });;
		_211b3a96d_checkVar((*_self_)._field_s, _133721_v);
		_131850_st.get()._field_L = jule::alloc_for_append(_131850_st.get()._field_L,1);_131850_st.get()._field_L.__push(static_cast<jule::Any>(_133721_v));;
		(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_133721_v);;
		(*_self_)._field_scope.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_Stmts,1);(*_self_)._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_133721_v));;
		return;;
	};
	if ((_131931_lexpr.get()._field_Mutable || _131931_lexpr.get()._field_Reference)) {
		_211b28186_pushErr((*_self_)._field_s.ptr(), _131931_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_131931_lexpr.get()._field_Ident)}));
		_211b284a5_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_2110b525b_checkAssign((*_self_)._field_s,_131955_l,_131969_r,_131913_a.get()._field_Setter)))) {
		return;;
	};
	;
	_211b32ca6_checkValidityForInitExpr((*_self_)._field_s, _131955_l.get()._field_Mutable,false,_131955_l.get()._field_Kind,_131969_r,_131913_a.get()._field_Setter);
	_211b75da4_assignTypeChecker _137217_checker = _211b75da4_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_131955_l.get()._field_Kind, ._field_d=_131969_r, ._field_errorToken=_131913_a.get()._field_Setter};;
	_211b7702b_check(&_137217_checker);
	_131850_st.get()._field_L = jule::alloc_for_append(_131850_st.get()._field_L,1);_131850_st.get()._field_L.__push(_131955_l.get()._field_Model);;
}



inline void _211b1159d_checkRetMultiAssign(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e60d2c_AssignSt>& _138344_a) {
	jule::Ptr<_211b8a319_Data> _138417_rd = _211ba7b50_evalExpr(_211b2ea72_eval(_self_.get()._field_s, jule::Trait<_211bd2086_Lookup>(_self_, 0)), _138344_a.get()._field_Right);;
	if ((_138417_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_211b8a319_Data>> _138917_r = _2110b0c4b_getDatasFromTupleData(_138417_rd);;
	{
		
		if ((_138344_a.get()._field_Left.len() > _138917_r.len())) {
			_case_begin_2240284ca:;
			{
				_211b28186_pushErr(_self_.get()._field_s.ptr(), _138344_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_138344_a.get()._field_Left.len() < _138917_r.len())) {
			_case_begin_224028552:;
			{
				_211b28186_pushErr(_self_.get()._field_s.ptr(), _138344_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_224028475:;
	};
	jule::Ptr<_211b0ae05_MultiAssign> _140017_st = jule::new_ptr<_211b0ae05_MultiAssign>(_211b0ae05_MultiAssign{._field_R=_138417_rd.get()._field_Model});;
	if ((_211bba206_Tup(_138417_rd.get()._field_Kind.ptr()) == nullptr)) {
		_140017_st.get()._field_R=static_cast<jule::Any>(jule::new_ptr<_21101a5e0_TupleExprModel>(_21101a5e0_TupleExprModel{._field_Datas=_138917_r}));
	};
	{
		auto &expr = _138344_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_22402b3ce:;
		if (it != expr.end()) {
			jule::I64 _140813_i = it - expr.begin();
			{
				jule::Ptr<_210e607dd_AssignLeft> _140921_lexpr = _138344_a.get()._field_Left[_140813_i];;
				jule::Ptr<_211b8a319_Data> _141021_l = nullptr;;
				if (((!(_20e7e14a0_IsIgnoreIdent(_140921_lexpr.get()._field_Ident))) && ((!(_138344_a.get()._field_Declarative)) || (!(_211b110c5_isNewAssignIdent(_self_.ptr(), _140921_lexpr.get()._field_Ident)))))) {
					_141021_l=_211ba7b50_evalExpr(_211b2ea72_eval(_self_.get()._field_s, jule::Trait<_211bd2086_Lookup>(_self_, 0)), _140921_lexpr.get()._field_Expr);
					if ((_141021_l == nullptr)) {
						goto _iter_next_22402b3ce;
					};
				};
				_211b1146b_processEndPartOfMultiAssign(_self_.ptr(), _140017_st,_138344_a,_140921_lexpr,_141021_l,_138917_r[_140813_i]);
			}
			_iter_next_22402b3ce:;
			++it;
			_140813_i++;
			goto _iter_begin_22402b3ce;
		}
		_iter_end_22402b3ce:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_140017_st));;
}



inline void _211b116d0_checkMultiAssign(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e60d2c_AssignSt>& _142641_a) {
	{
		auto &_match_expr{ _142641_a.get()._field_Right.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_210e5a893_FnCallExpr>>()) {
			_case_begin_224030449:;
			{
				_211b1159d_checkRetMultiAssign(_self_, _142641_a);
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e57d13_UnsafeExpr>>()) {
			_case_begin_2240304c1:;
			{
				{
					auto &_match_expr{ _142641_a.get()._field_Right.get()._field_Kind.operator jule::Ptr<_210e57d13_UnsafeExpr>().get()._field_Expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_210e5a893_FnCallExpr>>()) {
						_case_begin_224031824:;
						{
							_211b1159d_checkRetMultiAssign(_self_, _142641_a);
							return;;
						}
					}
					_match_end_22403179c:;
				};
			}
		}
		_match_end_2240303d3:;
	};
	jule::Slice<jule::Any> _143917_right = _2110b3b94_getExprModels(_142641_a.get()._field_Right.get()._field_Kind);;
	{
		
		if ((_142641_a.get()._field_Left.len() > _143917_right.len())) {
			_case_begin_22403267c:;
			{
				_211b28186_pushErr(_self_.get()._field_s.ptr(), _142641_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_142641_a.get()._field_Left.len() < _143917_right.len())) {
			_case_begin_224032704:;
			{
				_211b28186_pushErr(_self_.get()._field_s.ptr(), _142641_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_224032517:;
	};
	jule::Ptr<_21101a5e0_TupleExprModel> _145017_rightTuple = jule::new_ptr<_21101a5e0_TupleExprModel>();;
	jule::Ptr<_211b0ae05_MultiAssign> _145217_st = jule::new_ptr<_211b0ae05_MultiAssign>(_211b0ae05_MultiAssign{._field_R=static_cast<jule::Any>(_145017_rightTuple)});;
	{
		auto &expr = _142641_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_224035075:;
		if (it != expr.end()) {
			jule::I64 _145613_i = it - expr.begin();
			{
				jule::Ptr<_210e607dd_AssignLeft> _145721_lexpr = _142641_a.get()._field_Left[_145613_i];;
				jule::Ptr<_211b8a319_Data> _145821_l = nullptr;;
				if (((!(_20e7e14a0_IsIgnoreIdent(_145721_lexpr.get()._field_Ident))) && ((!(_142641_a.get()._field_Declarative)) || (!(_211b110c5_isNewAssignIdent(_self_.ptr(), _145721_lexpr.get()._field_Ident)))))) {
					_145821_l=_211ba7b50_evalExpr(_211b2ea72_eval(_self_.get()._field_s, jule::Trait<_211bd2086_Lookup>(_self_, 0)), _145721_lexpr.get()._field_Expr);
					if ((_145821_l == nullptr)) {
						goto _iter_next_224035075;
					};
				};
				jule::Ptr<_210e565c5_Expr> _146821_expr = jule::new_ptr<_210e565c5_Expr>(_210e565c5_Expr{._field_Token=_142641_a.get()._field_Right.get()._field_Token, ._field_Kind=_143917_right[_145613_i]});;
				jule::Ptr<_211b8bd87_Eval> _147221_eval = nullptr;;
				if ((_145821_l != nullptr)) {
					_147221_eval=_211b2e764_evalp(_self_.get()._field_s, jule::Trait<_211bd2086_Lookup>(_self_, 0),_145821_l.get()._field_Kind);
				} else {
					_147221_eval=_211b2ea72_eval(_self_.get()._field_s, jule::Trait<_211bd2086_Lookup>(_self_, 0));
				};
				jule::Ptr<_211b8a319_Data> _147821_r = _211ba7b50_evalExpr(_147221_eval, _146821_expr);;
				if ((_147821_r == nullptr)) {
					goto _iter_next_224035075;
				};
				_145017_rightTuple.get()._field_Datas = jule::alloc_for_append(_145017_rightTuple.get()._field_Datas,1);_145017_rightTuple.get()._field_Datas.__push(_147821_r);;
				_211b1146b_processEndPartOfMultiAssign(_self_.ptr(), _145217_st,_142641_a,_145721_lexpr,_145821_l,_147821_r);
			}
			_iter_next_224035075:;
			++it;
			_145613_i++;
			goto _iter_begin_224035075;
		}
		_iter_end_224035075:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_145217_st));;
}



inline void _211b11812_checkAssignSt(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e60d2c_AssignSt> _149137_a) {
	{
		
		if (_20e7e354b_IsPostfixOp(_149137_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_22403c07c:;
			{
				_211b10e93_checkPostfix(_self_, _149137_a);
			}
		}
		else if (((_149137_a.get()._field_Left.len() == 1LL) && (!(_149137_a.get()._field_Declarative)))) {
			_case_begin_22403bd4b:;
			{
				_211b11339_checkSingleAssign(_self_, _149137_a);
			}
		}
		else {
			_case_begin_22403b9a5:;
			{
				_211b116d0_checkMultiAssign(_self_, _149137_a);
			}
		}
		_match_end_2240356e6:;
	};
}



inline jule::Ptr<_211b0940e_Scope> _211b11944_checkCaseScope(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_211b0b642_Case>& _150235_c, jule::Ptr<_210e623c2_ScopeTree>& _150250_tree) {
	jule::Ptr<_211b0c214_scopeChecker> _150317_ssc = _211b1574a_newChildChecker(_self_);;
	_150317_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_150235_c));
	return _211b0e304_checkChildSc(_self_, _150250_tree,_150317_ssc);
}



inline jule::Ptr<_211b0b642_Case> _211b11a76_checkCase(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_211b0b0e2_Match> _150833_m, jule::I64 _150844_i, jule::Ptr<_210e68b7b_Case> _150856_c, jule::Ptr<_211b8a319_Data> _150875_expr) {
	jule::Ptr<_211b0b642_Case> _150917_case = _150833_m.get()._field_Cases[_150844_i];;
	_150917_case.get()._field_Exprs=jule::Slice<jule::Ptr<_211b8a319_Data>>::alloc(0LL,_150856_c.get()._field_Exprs.len());
	jule::Bool _151117_genericMatched = false;;
	jule::Ptr<_211b8bd87_Eval> _151217_eval = _211b2ea72_eval(_self_.get()._field_s, jule::Trait<_211bd2086_Lookup>(_self_, 0));;
	{
		auto &expr = _150856_c.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_224041e2d:;
		if (it != expr.end()) {
			jule::Ptr<_210e565c5_Expr> _151321_e = *it;
			{
				jule::Ptr<_211b8a319_Data> _151421_d = _211ba7534_evalExprKind(_151217_eval, _151321_e.get()._field_Kind);;
				if ((_151421_d == nullptr)) {
					goto _iter_next_224041e2d;
				};
				if (_150833_m.get()._field_TypeMatch) {
					_150917_case.get()._field_Exprs = jule::alloc_for_append(_150917_case.get()._field_Exprs,1);_150917_case.get()._field_Exprs.__push(_151421_d);;
					if ((_2110a2e91_countMatchType(_150833_m,_151421_d.get()._field_Kind) > 1LL)) {
						_211b28186_pushErr(_self_.get()._field_s.ptr(), _151321_e.get()._field_Token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_151421_d.get()._field_Kind.ptr()))}));
					};
					if (_150875_expr.get()._field_Kind.get()._field_Generic) {
						_151117_genericMatched=(_151117_genericMatched || _211bb6b5e_Equals(_150875_expr.get()._field_Kind, _151421_d.get()._field_Kind));
					} else {
						if ((_211bb9018_TypeEnum(_150875_expr.get()._field_Kind.ptr()) != nullptr)) {
							_211b304bd_checkTypeCompatibility(_self_.get()._field_s, _150875_expr.get()._field_Kind,_151421_d.get()._field_Kind,_151321_e.get()._field_Token);
						} else {
							jule::Ptr<_211031e42_Trait> _152929_trt = _211bb9c2d_Trait(_150875_expr.get()._field_Kind.ptr());;
							if ((_152929_trt != nullptr)) {
								_211b304bd_checkTypeCompatibility(_self_.get()._field_s, _150875_expr.get()._field_Kind,_151421_d.get()._field_Kind,_151321_e.get()._field_Token);
							};
						};
					};
					goto _iter_next_224041e2d;
				};
				if (_151421_d.get()._field_Decl) {
					_211b28186_pushErr(_self_.get()._field_s.ptr(), _151321_e.get()._field_Token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_211b284a5_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_224041e2d;
				};
				_150917_case.get()._field_Exprs = jule::alloc_for_append(_150917_case.get()._field_Exprs,1);_150917_case.get()._field_Exprs.__push(_151421_d);;
				_211b75da4_assignTypeChecker _154721_checker = _211b75da4_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_150875_expr.get()._field_Kind, ._field_d=_151421_d, ._field_errorToken=_151321_e.get()._field_Token};;
				_211b7702b_check(&_154721_checker);
			}
			_iter_next_224041e2d:;
			++it;
			goto _iter_begin_224041e2d;
		}
		_iter_end_224041e2d:;
	};
	if ((((!(_150833_m.get()._field_TypeMatch)) || (!(_150875_expr.get()._field_Kind.get()._field_Generic))) || _151117_genericMatched)) {
		_150917_case.get()._field_Scope=_211b11944_checkCaseScope(_self_, _150917_case,_150856_c.get()._field_Scope);
	};
	return _150917_case;
}



inline void _211b11c30_checkCases(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e69352_MatchCase>& _156135_m, jule::Ptr<_211b0b0e2_Match> _156154_rm, jule::Ptr<_211b8a319_Data> _156170_expr) {
	_156154_rm.get()._field_Cases=jule::Slice<jule::Ptr<_211b0b642_Case>>::alloc(0LL,_156135_m.get()._field_Cases.len());
	{
		auto &expr = _156135_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_22404b278:;
		if (it != expr.end()) {
			jule::I64 _156313_i = it - expr.begin();
			{
				jule::Ptr<_211b0b642_Case> _156421_case = jule::new_ptr<_211b0b642_Case>(_211b0b642_Case{._field_Owner=_156154_rm, });;
				if ((_156313_i > 0LL)) {
					_156154_rm.get()._field_Cases[(_156313_i - 1LL)].get()._field_Next=_156421_case;
				};
				_156154_rm.get()._field_Cases = jule::alloc_for_append(_156154_rm.get()._field_Cases,1);_156154_rm.get()._field_Cases.__push(_156421_case);;
			}
			_iter_next_22404b278:;
			++it;
			_156313_i++;
			goto _iter_begin_22404b278;
		}
		_iter_end_22404b278:;
	};
	if (((_156154_rm.get()._field_Default != nullptr) && (_156135_m.get()._field_Cases.len() > 0LL))) {
		_156154_rm.get()._field_Cases[(_156154_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_156154_rm.get()._field_Default;
	};
	{
		auto &expr = _156135_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_22404e07d:;
		if (it != expr.end()) {
			jule::I64 _157714_i = it - expr.begin();
			jule::Ptr<_210e68b7b_Case> _157721_c = *it;
			{
				_211b11a76_checkCase(_self_, _156154_rm,_157714_i,_157721_c,_156170_expr);
			}
			_iter_next_22404e07d:;
			++it;
			_157714_i++;
			goto _iter_begin_22404e07d;
		}
		_iter_end_22404e07d:;
	};
}



inline jule::Ptr<_211b0b642_Case> _211b120d7_checkDefault(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_211b0b0e2_Match> _158236_m, jule::Ptr<_210e67aae_Else> _158251_d) {
	jule::Ptr<_211b0b642_Case> _158317_def = jule::new_ptr<_211b0b642_Case>(_211b0b642_Case{._field_Owner=_158236_m, });;
	_158317_def.get()._field_Scope=_211b11944_checkCaseScope(_self_, _158317_def,_158251_d.get()._field_Scope);
	return _158317_def;
}



inline void _211b1235c_checkComptimePanic(_211b0c214_scopeChecker* _self_, jule::Ptr<_211b0940e_Scope>& _159038_s) {
	if ((_159038_s.get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _159513_stmt = _159038_s.get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _159513_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_211b8a319_Data>>()) {
			_case_begin_224052416:;
			{
				jule::Ptr<_211b8a319_Data> _159817_d = _159513_stmt.operator jule::Ptr<_211b8a319_Data>();;
				{
					auto &_match_expr{ _159817_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_21101b080_BuiltinPanicCallExprModel>>()) {
						_case_begin_22405325d:;
						{
							jule::Ptr<_21101b080_BuiltinPanicCallExprModel> _160121_m = _159817_d.get()._field_Model.operator jule::Ptr<_21101b080_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _160121_m.get()._field_Expr };
								
								if (_match_expr.type_is<jule::Ptr<_210ea46cd_Const>>()) {
									_case_begin_22405421a:;
									{
										jule::Ptr<_210ea46cd_Const> _160425_c = _160121_m.get()._field_Expr.operator jule::Ptr<_210ea46cd_Const>();;
										if (_211013297_IsStr(_160425_c.ptr())) {
											_211b28186_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_calledFrom,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_211010dee_ReadStr(_160425_c.ptr()))}));
										};
									}
								}
								_match_end_224054050:;
							};
						}
					}
					_match_end_224053109:;
				};
			}
		}
		_match_end_2240523b1:;
	};
}



inline void _211b1267b_pushTypeMatch(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_211b0b0e2_Match> _161337_tm, jule::Ptr<_210e69352_MatchCase>& _161354_m) {
	if (_161337_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto &expr = _161337_tm.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_22405289a:;
			if (it != expr.end()) {
				jule::Ptr<_211b0b642_Case> _161725_c = *it;
				{
					if ((_161725_c.get()._field_Scope != nullptr)) {
						_211b1235c_checkComptimePanic(_self_.ptr(), _161725_c.get()._field_Scope);
						_161337_tm.get()._field_Default=_161725_c;
						_161337_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_22405289a:;
				++it;
				goto _iter_begin_22405289a;
			}
			_iter_end_22405289a:;
		};
		if ((_161354_m.get()._field_Default != nullptr)) {
			_161337_tm.get()._field_Cases=nullptr;
			_161337_tm.get()._field_Default=_211b120d7_checkDefault(_self_, _161337_tm,_161354_m.get()._field_Default);
			if ((_161337_tm.get()._field_Default != nullptr)) {
				_211b1235c_checkComptimePanic(_self_.ptr(), _161337_tm.get()._field_Default.get()._field_Scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_161337_tm));;
}



inline void _211b12901_checkTypeMatch(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e69352_MatchCase>& _163739_m) {
	jule::Ptr<_211b8a319_Data> _163817_d = _211ba7842_eval(_211b2ea72_eval(_self_.get()._field_s, jule::Trait<_211bd2086_Lookup>(_self_, 0)), _163739_m.get()._field_Expr);;
	if ((_163817_d == nullptr)) {
		return;;
	};
	if (((!(_163817_d.get()._field_Kind.get()._field_Generic)) && (!(((((_211bb8567_Prim(_163817_d.get()._field_Kind.ptr()) != nullptr) && _211bbe3c5_IsAny(_211bb8567_Prim(_163817_d.get()._field_Kind.ptr()).ptr())) || (_211bb9c2d_Trait(_163817_d.get()._field_Kind.ptr()) != nullptr)) || (_211bb9018_TypeEnum(_163817_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _163739_m.get()._field_Expr.get()._field_Token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_211b0b0e2_Match> _164917_tm = jule::new_ptr<_211b0b0e2_Match>(_211b0b0e2_Match{._field_Expr=_163817_d, ._field_TypeMatch=true, });;
	if (((!(_164917_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && (_163739_m.get()._field_Default != nullptr))) {
		_164917_tm.get()._field_Default=_211b120d7_checkDefault(_self_, _164917_tm,_163739_m.get()._field_Default);
	};
	_211b11c30_checkCases(_self_, _163739_m,_164917_tm,_163817_d);
	_211b1267b_pushTypeMatch(_self_, _164917_tm,_163739_m);
}



inline void _211b12b76_checkCommonMatch(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e69352_MatchCase>& _166241_m) {
	jule::Ptr<_211b8a319_Data> _166317_d = nullptr;;
	if ((_166241_m.get()._field_Expr == nullptr)) {
		_166317_d=jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__21100e87b_NewBool(true)});
		_166317_d.get()._field_Model=static_cast<jule::Any>(_166317_d.get()._field_Constant);
	} else {
		_166317_d=_211ba7b50_evalExpr(_211b2ea72_eval(_self_.get()._field_s, jule::Trait<_211bd2086_Lookup>(_self_, 0)), _166241_m.get()._field_Expr);
		if ((_166317_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_211b0b0e2_Match> _167717_mc = jule::new_ptr<_211b0b0e2_Match>(_211b0b0e2_Match{._field_Expr=_166317_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_167717_mc));;
	if ((_166241_m.get()._field_Default != nullptr)) {
		_167717_mc.get()._field_Default=_211b120d7_checkDefault(_self_, _167717_mc,_166241_m.get()._field_Default);
	};
	_211b11c30_checkCases(_self_, _166241_m,_167717_mc,_166317_d);
}



inline void _211b12deb_checkMatch(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e69352_MatchCase> _168934_m) {
	if (_168934_m.get()._field_TypeMatch) {
		_211b12901_checkTypeMatch(_self_, _168934_m);
		return;;
	};
	_211b12b76_checkCommonMatch(_self_, _168934_m);
}



inline void _211b13171_checkFall(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e601d3_FallSt> _169729_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _211b0d4ac_isDeferred(_self_))) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _169729_f.get()._field_Token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_211b0b642_Case* _170517_case = ((_211b0b642_Case*)(_self_.get()._field_cse));;
	if ((_170517_case->_field_Next == nullptr)) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _169729_f.get()._field_Token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_211b284a5_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_211b0b961_FallSt>(_211b0b961_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_170517_case->_field_Next))})));;
}



inline jule::Ptr<_211b0a465_BreakSt> _211b1347e_checkBreakWithLabel(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e66dcc_BreakSt> _171739_b) {
	jule::Ptr<_211b0a465_BreakSt> _171817_brk = _211b1378c_checkPlainBreak(_self_, _171739_b);;
	if ((_171817_brk == nullptr)) {
		return nullptr;
	};
	_171817_brk.get()._field_It=0LLU;
	_171817_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_211b0bd3a_scopeLabel> _172817_label = _2110a1115_findLabelParent(_171739_b.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
	if ((_172817_label == nullptr)) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	_172817_label.get()._field_used=true;
	if (((_172817_label.get()._field_pos + 1LL) >= _172817_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	jule::I64 _174113_i = (_172817_label.get()._field_pos + 1LL);;
	if ((_174113_i >= _172817_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
	} else {
		jule::Any _174521_st = _172817_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_174113_i];;
		{
			auto &_match_expr{ _174521_st };
			
			if (_match_expr.type_is<jule::Ptr<_211b09bb2_InfIter>>()) {
				_case_begin_22406cb29:;
				{
					_171817_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_211b09bb2_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_211b0a08b_RangeIter>>()) {
				_case_begin_224076182:;
				{
					_171817_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_211b0a08b_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_211b09d9e_WhileIter>>()) {
				_case_begin_2240761e8:;
				{
					_171817_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_211b09d9e_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_211b0b0e2_Match>>()) {
				_case_begin_22407625e:;
				{
					_171817_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_211b0b0e2_Match>()));
				}
			}
			else {
				_case_begin_224076083:;
				{
					_211b28186_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
				}
			}
			_match_end_22407602d:;
		};
	};
	if ((_171817_brk.get()._field_It != 0LLU)) {
		if ((!(_211b10888_checkValidBreakLabel(_self_, _171817_brk.get()._field_It)))) {
			_211b28186_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	if ((_171817_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_211b10888_checkValidBreakLabel(_self_, _171817_brk.get()._field_Mtch)))) {
			_211b28186_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	return _171817_brk;
}



inline jule::Ptr<_211b0a465_BreakSt> _211b1378c_checkPlainBreak(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e66dcc_BreakSt> _177535_b) {
	if (_211b0d4ac_isDeferred(_self_)) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _177535_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_211b0c214_scopeChecker> _178117_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_178117_scope.get()._field_it == 0LLU) && (_178117_scope.get()._field_cse == 0LLU)) && (_178117_scope.get()._field_parent != nullptr)) && (_178117_scope.get()._field_owner == nullptr))) {
			_case_begin_22407c70a:;
			{
				_178117_scope=_178117_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_178117_scope.get()._field_it != 0LLU)) {
			_case_begin_22407c782:;
			{
				return jule::new_ptr<_211b0a465_BreakSt>(_211b0a465_BreakSt{._field_It=_178117_scope.get()._field_it, });
			}
		}
		else if ((_178117_scope.get()._field_cse != 0LLU)) {
			_case_begin_22407c809:;
			{
				return jule::new_ptr<_211b0a465_BreakSt>(_211b0a465_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_211b0b642_Case*)(_178117_scope.get()._field_cse))->_field_Owner))});
			}
		}
		_match_end_22407c63e:;
	};
	_211b28186_pushErr(_self_.get()._field_s.ptr(), _177535_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _211b13a12_checkBreak(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e66dcc_BreakSt> _179730_b) {
	if ((_179730_b.get()._field_Label != nullptr)) {
		jule::Ptr<_211b0a465_BreakSt> _179921_brk = _211b1347e_checkBreakWithLabel(_self_, _179730_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_179921_brk));;
		return;;
	};
	jule::Ptr<_211b0a465_BreakSt> _180417_brk = _211b1378c_checkPlainBreak(_self_, _179730_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_180417_brk));;
}



inline void _211b13c87_checkRet(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e6524e_RetSt> _180832_r) {
	if (_211b0d4ac_isDeferred(_self_)) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _180832_r.get()._field_Token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_211b0bb4d_RetSt> _181317_rt = jule::new_ptr<_211b0bb4d_RetSt>(_211b0bb4d_RetSt{._field_Func=_211b0d5de_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_181317_rt));;
	jule::Ptr<_211b8370d_retTypeChecker> _181817_rtc = jule::new_ptr<_211b8370d_retTypeChecker>(_211b8370d_retTypeChecker{._field_sc=_self_, ._field_f=_181317_rt.get()._field_Func, ._field_errorToken=_180832_r.get()._field_Token, });;
	jule::Bool _182313_ok = _211b845ee_check(_181817_rtc.ptr(), _180832_r.get()._field_Expr);;
	if ((!(_182313_ok))) {
		return;;
	};
	if (((_180832_r.get()._field_Expr == nullptr) && (_181817_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_181317_rt.get()._field_Vars=_181817_rtc.get()._field_vars;
	if ((_180832_r.get()._field_Expr != nullptr)) {
		_181317_rt.get()._field_Expr=_181817_rtc.get()._field_model;
	};
}



inline void _211b1400c_checkUseExpr(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e56e66_UseExpr> _183932_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _183932_ue.get()._field_Token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_211b0d4ac_isDeferred(_self_)) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _183932_ue.get()._field_Token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_211b28186_pushErr(_self_.get()._field_s.ptr(), _183932_ue.get()._field_Token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _211b14282_checkNode(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Any& _185534_node) {
	{
		auto &_match_expr{ _185534_node };
		
		if (_match_expr.type_is<jule::Ptr<_210e623c2_ScopeTree>>()) {
			_case_begin_22408b1b9:;
			{
				_211b0e568_checkAnonScope(_self_, _185534_node.operator jule::Ptr<_210e623c2_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e64d97_VarDecl>>()) {
			_case_begin_22408abad:;
			{
				_211b0dd2b_checkVarDecl(_self_, _185534_node.operator jule::Ptr<_210e64d97_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e68708_TypeAliasDecl>>()) {
			_case_begin_22408b0ba:;
			{
				_211b0de5d_checkTypeAliasDecl(_self_, _185534_node.operator jule::Ptr<_210e68708_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e565c5_Expr>>()) {
			_case_begin_22408b40b:;
			{
				_211b0e7cc_checkExpr(_self_, _185534_node.operator jule::Ptr<_210e565c5_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e581ba_CoExpr>>()) {
			_case_begin_22408b5b5:;
			{
				_211b0e90e_checkCoExpr(_self_, _185534_node.operator jule::Ptr<_210e581ba_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e68032_Conditional>>()) {
			_case_begin_22408b62b:;
			{
				_211b0eca5_checkConditional(_self_, _185534_node.operator jule::Ptr<_210e68032_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e658ae_Iter>>()) {
			_case_begin_22408b692:;
			{
				_211b10624_checkIter(_self_, _185534_node.operator jule::Ptr<_210e658ae_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e67284_ContSt>>()) {
			_case_begin_22408b708:;
			{
				_211b10aec_checkCont(_self_, _185534_node.operator jule::Ptr<_210e67284_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e5ea40_LabelSt>>()) {
			_case_begin_22408b76e:;
			{
				_211b10c2e_checkLabel(_self_, _185534_node.operator jule::Ptr<_210e5ea40_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e5ede7_GotoSt>>()) {
			_case_begin_22408b7d5:;
			{
				_211b10d61_pushGoto(_self_, _185534_node.operator jule::Ptr<_210e5ede7_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e60d2c_AssignSt>>()) {
			_case_begin_22408b84b:;
			{
				_211b11812_checkAssignSt(_self_, _185534_node.operator jule::Ptr<_210e60d2c_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e69352_MatchCase>>()) {
			_case_begin_22408b8b2:;
			{
				_211b12deb_checkMatch(_self_, _185534_node.operator jule::Ptr<_210e69352_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e601d3_FallSt>>()) {
			_case_begin_22408b928:;
			{
				_211b13171_checkFall(_self_, _185534_node.operator jule::Ptr<_210e601d3_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e66dcc_BreakSt>>()) {
			_case_begin_22408b98e:;
			{
				_211b13a12_checkBreak(_self_, _185534_node.operator jule::Ptr<_210e66dcc_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e6524e_RetSt>>()) {
			_case_begin_22408ba05:;
			{
				_211b13c87_checkRet(_self_, _185534_node.operator jule::Ptr<_210e6524e_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e56e66_UseExpr>>()) {
			_case_begin_22408ba6b:;
			{
				_211b1400c_checkUseExpr(_self_, _185534_node.operator jule::Ptr<_210e56e66_UseExpr>());
			}
		}
		else {
			_case_begin_22408ad34:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_22408ac57:;
	};
}



inline void _211b1445d_checkResult(jule::Ptr<_211b0c214_scopeChecker> _self_) {
	_210e61cb7_Stmt _189517_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _189517_stmt._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_210e56e66_UseExpr>>()) {
			_case_begin_224095b0d:;
			{
				jule::Ptr<_210e56e66_UseExpr> _189821_ue = _189517_stmt._field_Data.operator jule::Ptr<_210e56e66_UseExpr>();;
				jule::Ptr<_211b8a319_Data> _189921_d = _211ba7b50_evalExpr(_211b2ea72_eval(_self_.get()._field_s, jule::Trait<_211bd2086_Lookup>(_self_, 0)), _189821_ue.get()._field_Expr);;
				if ((_189921_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_189921_d));;
				jule::Ptr<_211b8370d_retTypeChecker> _190421_rtc = jule::new_ptr<_211b8370d_retTypeChecker>(_211b8370d_retTypeChecker{._field_sc=_self_, ._field_types=_211023d57_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_189821_ue.get()._field_Expr.get()._field_Token, });;
				_211b845ee_check(_190421_rtc.ptr(), _189821_ue.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e565c5_Expr>>()) {
			_case_begin_224095b74:;
			{
				jule::Ptr<_210e565c5_Expr> _191121_expr = _189517_stmt._field_Data.operator jule::Ptr<_210e565c5_Expr>();;
				jule::Ptr<_211b8a319_Data> _191221_d = _211ba7b50_evalExpr(_211b2ea72_eval(_self_.get()._field_s, jule::Trait<_211bd2086_Lookup>(_self_, 0)), _191121_expr);;
				if ((_191221_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _191221_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_21101ba20_BuiltinErrorCallExprModel>>()) {
						_case_begin_22409a4a3:;
						{
							jule::Ptr<_21101ba20_BuiltinErrorCallExprModel> _191825_m = _191221_d.get()._field_Model.operator jule::Ptr<_21101ba20_BuiltinErrorCallExprModel>();;
							_211b0e69a_processErrorCall(_self_, _191825_m,_191121_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_191221_d));;
						}
					}
					else {
						_case_begin_22409a34e:;
						{
							return;;
						}
					}
					_match_end_22409a2e9:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e5ede7_GotoSt>>() || _match_expr.type_is<jule::Ptr<_210e66dcc_BreakSt>>() || _match_expr.type_is<jule::Ptr<_210e67284_ContSt>>() || _match_expr.type_is<jule::Ptr<_210e6524e_RetSt>>()) {
			_case_begin_2240952d3:;
			{
				_211b14282_checkNode(_self_, _189517_stmt._field_Data);
			}
		}
		else {
			_case_begin_22409526c:;
			{
				_211b14282_checkNode(_self_, _189517_stmt._field_Data);
				return;;
			}
		}
		_match_end_2240950d5:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _211b14639_checkTree(jule::Ptr<_211b0c214_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _194017_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_194017_n)--;
	};
	for (; (_self_.get()._field_i < _194017_n); (_self_.get()._field_i)++) {
		{
			_210e61cb7_Stmt _194821_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_211b14282_checkNode(_self_, _194821_stmt._field_Data);
			if (_211b0d37a_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_22409da4a:;
	}
	_iter_end_22409da4a:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_211b1445d_checkResult(_self_);
	};
}



inline void _211b14958_checkGoto(_211b0c214_scopeChecker* _self_, jule::Ptr<_211b0c027_scopeGoto>& _195933_gt, jule::Ptr<_211b0bd3a_scopeLabel>& _195954_label) {
	jule::Ptr<_211b0c214_scopeChecker> _196017_gtsc = _195933_gt.get()._field_scope;;
	while (((_196017_gtsc.get()._field_childIndex - 1LL) > _195954_label.get()._field_scope.get()._field_childIndex)) {
		{
			_196017_gtsc=_196017_gtsc.get()._field_parent;
		}
	_iter_next_2240a1c29:;
	}
	_iter_end_2240a1c29:;;
	jule::I64 _196517_n = 0LL;;
	if ((_196017_gtsc.get()._field_scope == _195954_label.get()._field_scope.get()._field_scope)) {
		if ((_195933_gt.get()._field_pos > _195954_label.get()._field_pos)) {
			return;;
		};
		_196517_n=_195933_gt.get()._field_pos;
	};
	jule::I64 _197817_i = (_195954_label.get()._field_pos - 1LL);;
	if ((_196517_n == 0LL)) {
		{
			auto &expr = _195954_label.get()._field_scope.get()._field_scope.get()._field_Stmts;
			auto it = expr.begin();
			_iter_begin_2240a4402:;
			if (it != expr.end()) {
				jule::I64 _198117_j = it - expr.begin();
				jule::Any _198120_stmt = *it;
				{
					if (_2110a20d3_stmtIsGotoScope(_198120_stmt,_196017_gtsc.get()._field_scope)) {
						_196517_n=_198117_j;
						goto _iter_end_2240a4402;
					};
				}
				_iter_next_2240a4402:;
				++it;
				_198117_j++;
				goto _iter_begin_2240a4402;
			}
			_iter_end_2240a4402:;
		};
	};
	for (; (_197817_i >= _196517_n); (_197817_i)--) {
		{
			jule::Any _199121_stmt = _195954_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_197817_i];;
			if (_21109de8c_stmtIsDef(_199121_stmt)) {
				_211b28186_pushErr((*_self_)._field_s.ptr(), _195933_gt.get()._field_gt.get()._field_Token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_195933_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
				return;;
			};
		}
	_iter_next_2240a3eb2:;
	}
	_iter_end_2240a3eb2:;;
}



inline void _211b14b34_checkGotos(_211b0c214_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_2240a5007:;
		if (it != expr.end()) {
			jule::Ptr<_211b0c027_scopeGoto> _200021_gt = *it;
			{
				jule::Ptr<_211b0bd3a_scopeLabel> _200121_label = _211b0dab7_findLabelAll(&(*_self_), _200021_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_200121_label == nullptr)) {
					_211b28186_pushErr((*_self_)._field_s.ptr(), _200021_gt.get()._field_gt.get()._field_Token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_200021_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
					goto _iter_next_2240a5007;
				};
				_200121_label.get()._field_used=true;
				_211b14958_checkGoto(&(*_self_), _200021_gt,_200121_label);
			}
			_iter_next_2240a5007:;
			++it;
			goto _iter_begin_2240a5007;
		}
		_iter_end_2240a5007:;
	};
}



inline void _211b14d10_checkLabels(_211b0c214_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_2240a769c:;
		if (it != expr.end()) {
			jule::Ptr<_211b0bd3a_scopeLabel> _201316_l = *it;
			{
				if ((!(_201316_l.get()._field_used))) {
					_211b28186_pushErr((*_self_)._field_s.ptr(), _201316_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_201316_l.get()._field_label.get()._field_Ident)}));
				};
			}
			_iter_next_2240a769c:;
			++it;
			goto _iter_begin_2240a769c;
		}
		_iter_end_2240a769c:;
	};
}



inline void _211b14edb_checkVars(_211b0c214_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_2240a9ec9:;
		if (it != expr.end()) {
			jule::Ptr<_211b43228_Var> _202116_v = *it;
			{
				if (((((!(_202116_v.get()._field_Used)) && (!(_20e7e14a0_IsIgnoreIdent(_202116_v.get()._field_Ident)))) && (!(_20e7e1747_IsAnonIdent(_202116_v.get()._field_Ident)))) && (_202116_v.get()._field_Ident != jule::Str("self", 4)))) {
					_211b28186_pushErr((*_self_)._field_s.ptr(), _202116_v.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_202116_v.get()._field_Ident)}));
				};
			}
			_iter_next_2240a9ec9:;
			++it;
			goto _iter_begin_2240a9ec9;
		}
		_iter_end_2240a9ec9:;
	};
}



inline void _211b151b7_checkAliases(_211b0c214_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_2240ac2d9:;
		if (it != expr.end()) {
			jule::Ptr<_211bb5762_TypeAlias> _202916_a = *it;
			{
				if ((((!(_202916_a.get()._field_Used)) && (!(_20e7e14a0_IsIgnoreIdent(_202916_a.get()._field_Ident)))) && (!(_20e7e1747_IsAnonIdent(_202916_a.get()._field_Ident))))) {
					_211b28186_pushErr((*_self_)._field_s.ptr(), _202916_a.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_202916_a.get()._field_Ident)}));
				};
			}
			_iter_next_2240ac2d9:;
			++it;
			goto _iter_begin_2240ac2d9;
		}
		_iter_end_2240ac2d9:;
	};
}



inline void _211b154d6_check(jule::Ptr<_211b0c214_scopeChecker> _self_, jule::Ptr<_210e623c2_ScopeTree>& _203730_tree, jule::Ptr<_211b0940e_Scope>& _203753_s) {
	_203753_s.get()._field_Deferred=_203730_tree.get()._field_Deferred;
	_203753_s.get()._field_Unsafety=_203730_tree.get()._field_Unsafety;
	jule::I64 _204113_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_203730_tree;
	_self_.get()._field_scope=_203753_s;
	_211b14639_checkTree(_self_);
	if ((_204113_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_211b14edb_checkVars(_self_.ptr());
		_211b151b7_checkAliases(_self_.ptr());
		if (_211b0d116_isRoot(_self_.ptr())) {
			_211b14b34_checkGotos(_self_.ptr());
			_211b14d10_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_211b0c214_scopeChecker> _211b1574a_newChildChecker(jule::Ptr<_211b0c214_scopeChecker> _self_) {
	jule::Ptr<_211b0c214_scopeChecker> _206117_base = _21109e6c9_newScopeCheckerBase(_self_.get()._field_s,nullptr);;
	_206117_base.get()._field_parent=_self_;
	_206117_base.get()._field_labels=_self_.get()._field_labels;
	_206117_base.get()._field_gotos=_self_.get()._field_gotos;
	_206117_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _206117_base;
}







std::ostream &operator<<(std::ostream &_Stream, _211b0c214_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _211b1673a_checkCdef(_211b162ea_directiveChecker* _self_, jule::Ptr<_210e1d8ab_Directive>& _1629_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_211020084_Fn>>()) {
			_case_begin_2240b47ca:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_211020084_Fn>().get()._field_CppLinked) {
					goto _match_end_2240b4a2d;
				};
				goto _case_begin_2240b4a83;
			}
		}
		else {
			_case_begin_2240b4a83:;
			{
				_211b28186_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1629_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_2240b4a2d:;
	};
	if ((_1629_d.get()._field_Args.len() > 0LL)) {
		_211b28186_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _211b169b0_checkTypedef(_211b162ea_directiveChecker* _self_, jule::Ptr<_210e1d8ab_Directive>& _3232_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_210e427d1_Struct>>()) {
			_case_begin_2240b7129:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_210e427d1_Struct>().get()._field_CppLinked) {
					goto _match_end_2240b735a;
				};
				goto _case_begin_2240b73b0;
			}
		}
		else {
			_case_begin_2240b73b0:;
			{
				_211b28186_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3232_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_2240b735a:;
	};
	if ((_3232_d.get()._field_Args.len() > 0LL)) {
		_211b28186_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _211b16c35_checkDerive(_211b162ea_directiveChecker* _self_, jule::Ptr<_210e1d8ab_Directive>& _4831_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_210e427d1_Struct>>()) {
			_case_begin_2240b9978:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_210e427d1_Struct>().get()._field_CppLinked))) {
					goto _match_end_2240b9ba9;
				};
				goto _case_begin_2240b9c0e;
			}
		}
		else {
			_case_begin_2240b9c0e:;
			{
				_211b28186_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_2240b9ba9:;
	};
	if ((_4831_d.get()._field_Args.len() == 0LL)) {
		_211b28186_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_211b284a5_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4831_d.get()._field_Args.len() > 1LL)) {
		_211b28186_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4831_d.get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_2240bd7c3:;
		}
		else {
			_case_begin_2240b9d30:;
			{
				_211b28186_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4831_d.get()._field_Args[0LL].get()._field_Kind)}));
			}
		}
		_match_end_2240bd383:;
	};
}



inline void _211b16eaa_checkNamespace(_211b162ea_directiveChecker* _self_, jule::Ptr<_210e1d8ab_Directive>& _7438_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_210e427d1_Struct>>()) {
			_case_begin_2240be890:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_210e427d1_Struct>().get()._field_CppLinked))) {
					_211b28186_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211020084_Fn>>()) {
			_case_begin_2240bed35:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_211020084_Fn>().get()._field_CppLinked))) {
					_211b28186_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b43228_Var>>()) {
			_case_begin_2240bed9b:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_211b43228_Var>().get()._field_CppLinked))) {
					_211b28186_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_2240bec14:;
			{
				_211b28186_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_2240bebae:;
	};
	if ((_7438_d.get()._field_Args.len() == 0LL)) {
		_211b28186_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7438_d.get()._field_Args.len() > 1LL)) {
		_211b28186_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20e7ddc0b_Token> _9913_arg = _7438_d.get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_211b28186_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_211b28186_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7438_d.get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL,(_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_210e427d1_Struct>>()) {
			_case_begin_2240c8778:;
			{
				if ((_211bb0b03_findDirective((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_210e1d8ab_Directive> _11625_typedef = jule::new_ptr<_210e1d8ab_Directive>(_210e1d8ab_Directive{._field_Tag=_7438_d.get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_210e1d8ab_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_2240c8129:;
	};
}



inline void _211b17230_checkDeprecated(_211b162ea_directiveChecker* _self_, jule::Ptr<_210e1d8ab_Directive>& _12539_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_210e427d1_Struct>>()) {
			_case_begin_2240c8ca6:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_210e427d1_Struct>().get()._field_CppLinked) {
					_211b28186_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211020084_Fn>>()) {
			_case_begin_2240caabb:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_211020084_Fn>().get()._field_CppLinked) {
					_211b28186_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b43228_Var>>()) {
			_case_begin_2240cab32:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_211b43228_Var>().get()._field_CppLinked) {
					_211b28186_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_2240ca45b:;
			{
				_211b28186_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_2240ca88a:;
	};
	if ((_12539_d.get()._field_Args.len() == 0LL)) {
		return;;
	};
	if ((_12539_d.get()._field_Args.len() > 1LL)) {
		_211b28186_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20e7ddc0b_Token> _15013_arg = _12539_d.get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_211b28186_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_211b28186_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12539_d.get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL,(_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _211b174a5_checkTest(_211b162ea_directiveChecker* _self_, jule::Ptr<_210e1d8ab_Directive>& _16429_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_211020084_Fn>>()) {
			_case_begin_2240d3651:;
			{
				jule::Ptr<_211020084_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_211020084_Fn>();;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_211020c33_IsInit(_16717_f.ptr())))) && (!(_2110209be_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_2240d419b;
				};
				if (_21102075a_IsMethod(_16717_f.ptr())) {
					_211b28186_pushErr((*_self_)._field_s.ptr(), _16717_f.get()._field_Token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_2240d419b;
				};
				goto _case_begin_2240d4201;
			}
		}
		else {
			_case_begin_2240d4201:;
			{
				_211b28186_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16429_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_2240d419b:;
	};
	if ((_16429_d.get()._field_Args.len() > 0LL)) {
		_211b28186_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _211b1772a_checkDirective(_211b162ea_directiveChecker* _self_, jule::Ptr<_210e1d8ab_Directive>& _18538_d) {
	{
		auto &_match_expr{ _18538_d.get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_2240d8b2e:;
			{
				_211b1673a_checkCdef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_2240d82b0:;
			{
				_211b169b0_checkTypedef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_2240d8326:;
			{
				_211b16c35_checkDerive(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_2240d838c:;
			{
				_211b16eaa_checkNamespace(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_2240d8403:;
			{
				_211b17230_checkDeprecated(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_2240d90b3:;
			{
				_211b174a5_checkTest(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_2240d9129:;
			{
				_211b28186_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		else {
			_case_begin_2240d8249:;
			{
				_211b28186_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_2240d818e:;
	};
}



inline void _211b17906_check(_211b162ea_directiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_2240db7d0:;
		if (it != expr.end()) {
			jule::Ptr<_210e1d8ab_Directive> _20821_d = *it;
			{
				_211b1772a_checkDirective(&(*_self_), _20821_d);
			}
			_iter_next_2240db7d0:;
			++it;
			goto _iter_begin_2240db7d0;
		}
		_iter_end_2240db7d0:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _211b162ea_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_211b1c378_ImportInfo> _211b1c895_FindPackage(_211b1c378_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_211b1c378_ImportInfo> _211b1cba3_SelectPackage(_211b1c378_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_211b1c378_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_211b43228_Var> _211b1d05a_FindVar(_211b1c378_ImportInfo* _self_, jule::Str _19226_ident, jule::Bool ) {
	if ((!(_211b1e941_isLookupable(&(*_self_), _19226_ident)))) {
		return nullptr;
	};
	return _211b19a90_findVarInPackage((*_self_)._field_Package.get()._field_Files,_19226_ident,false);
}



inline jule::Ptr<_211bb5762_TypeAlias> _211b1d412_FindTypeAlias(_211b1c378_ImportInfo* _self_, jule::Str _20432_ident, jule::Bool ) {
	if ((!(_211b1e941_isLookupable(&(*_self_), _20432_ident)))) {
		return nullptr;
	};
	return _211b19ebe_findTypeAliasInPackage((*_self_)._field_Package.get()._field_Files,_20432_ident,false);
}



inline jule::Ptr<_210e427d1_Struct> _211b1d7b9_FindStruct(_211b1c378_ImportInfo* _self_, jule::Str _21629_ident, jule::Bool ) {
	if ((!(_211b1e941_isLookupable(&(*_self_), _21629_ident)))) {
		return nullptr;
	};
	return _211b1a3a9_findStructInPackage((*_self_)._field_Package.get()._field_Files,_21629_ident,false);
}



inline jule::Ptr<_211020084_Fn> _211b1db71_FindFn(_211b1c378_ImportInfo* _self_, jule::Str _22825_ident, jule::Bool ) {
	if ((!(_211b1e941_isLookupable(&(*_self_), _22825_ident)))) {
		return nullptr;
	};
	return _211b1a81b_findFnInPackage((*_self_)._field_Package.get()._field_Files,_22825_ident,false);
}



inline jule::Ptr<_211031e42_Trait> _211b1de7e_FindTrait(_211b1c378_ImportInfo* _self_, jule::Str _23928_ident) {
	if ((!(_211b1e941_isLookupable(&(*_self_), _23928_ident)))) {
		return nullptr;
	};
	return _211b1ab29_findTraitInPackage((*_self_)._field_Package.get()._field_Files,_23928_ident);
}



inline jule::Ptr<_211034087_Enum> _211b1e28c_FindEnum(_211b1c378_ImportInfo* _self_, jule::Str _25027_ident) {
	if ((!(_211b1e941_isLookupable(&(*_self_), _25027_ident)))) {
		return nullptr;
	};
	return _211b1ae6a_findEnumInPackage((*_self_)._field_Package.get()._field_Files,_25027_ident);
}



inline jule::Ptr<_211035682_TypeEnum> _211b1e59a_FindTypeEnum(_211b1c378_ImportInfo* _self_, jule::Str _26131_ident) {
	if ((!(_211b1e941_isLookupable(&(*_self_), _26131_ident)))) {
		return nullptr;
	};
	return _211b1b2ab_findTypeEnumInPackage((*_self_)._field_Package.get()._field_Files,_26131_ident);
}



inline jule::Bool _211b1e941_isLookupable(_211b1c378_ImportInfo* _self_, jule::Str _27027_ident) {
	if ((*_self_)._field_CppLinked) {
		return false;
	};
	if ((!((*_self_)._field_ImportAll))) {
		if ((((*_self_)._field_Alias.len() != 0LL) || _211b1ec4e_existIdent(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_Selected.len() > 0LL)) {
			if ((!(_211b1ec4e_existIdent(&(*_self_), _27027_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _211b1ec4e_existIdent(_211b1c378_ImportInfo* _self_, jule::Str _29025_ident) {
	{
		auto &expr = (*_self_)._field_Selected;
		auto it = expr.begin();
		_iter_begin_224102e78:;
		if (it != expr.end()) {
			jule::Ptr<_20e7ddc0b_Token> &_29116_sident = *it;
			{
				if ((_29116_sident.get()._field_Kind == _29025_ident)) {
					return true;
				};
			}
			_iter_next_224102e78:;
			++it;
			goto _iter_begin_224102e78;
		}
		_iter_end_224102e78:;
	};
	return false;
}



inline jule::Bool _211b1eed5_isAccessibleViaSelection(_211b1c378_ImportInfo* _self_) {
	return (((*_self_)._field_ImportAll || ((*_self_)._field_Selected.len() == 0LL)) || _211b1ec4e_existIdent(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _211b1c378_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_211b1c378_ImportInfo> _211b207aa_FindPackage(_211b202d2_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_211b1c378_ImportInfo> _211b20ab8_SelectPackage(_211b202d2_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_211b1c378_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_211b43228_Var> _211b20e70_FindVar(_211b202d2_Package* _self_, jule::Str _32026_ident, jule::Bool _32038_cpp_linked) {
	return _211b19a90_findVarInPackage((*_self_)._field_Files,_32026_ident,_32038_cpp_linked);
}



inline jule::Ptr<_211bb5762_TypeAlias> _211b21327_FindTypeAlias(_211b202d2_Package* _self_, jule::Str _32632_ident, jule::Bool _32644_cpp_linked) {
	return _211b19ebe_findTypeAliasInPackage((*_self_)._field_Files,_32632_ident,_32644_cpp_linked);
}



inline jule::Ptr<_210e427d1_Struct> _211b216ce_FindStruct(_211b202d2_Package* _self_, jule::Str _33229_ident, jule::Bool _33241_cpp_linked) {
	return _211b1a3a9_findStructInPackage((*_self_)._field_Files,_33229_ident,_33241_cpp_linked);
}



inline jule::Ptr<_211020084_Fn> _211b21a86_FindFn(_211b202d2_Package* _self_, jule::Str _33825_ident, jule::Bool _33837_cpp_linked) {
	return _211b1a81b_findFnInPackage((*_self_)._field_Files,_33825_ident,_33837_cpp_linked);
}



inline jule::Ptr<_211031e42_Trait> _211b21d94_FindTrait(_211b202d2_Package* _self_, jule::Str _34428_ident) {
	return _211b1ab29_findTraitInPackage((*_self_)._field_Files,_34428_ident);
}



inline jule::Ptr<_211034087_Enum> _211b221a2_FindEnum(_211b202d2_Package* _self_, jule::Str _35027_ident) {
	return _211b1ae6a_findEnumInPackage((*_self_)._field_Files,_35027_ident);
}



inline jule::Ptr<_211035682_TypeEnum> _211b224b0_FindTypeEnum(_211b202d2_Package* _self_, jule::Str _35631_ident) {
	return _211b1b2ab_findTypeEnumInPackage((*_self_)._field_Files,_35631_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _211b202d2_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_211b1c378_ImportInfo> _211b259e1_FindPackage(_211b254c4_Sema* _self_, jule::Str _21930_ident) {
	return _211b85ac8_FindPackage((*_self_)._field_file.ptr(), _21930_ident);
}



inline jule::Ptr<_211b1c378_ImportInfo> _211b25cee_SelectPackage(_211b254c4_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_211b1c378_ImportInfo>)> _22932_selector) {
	return _211b85dd6_SelectPackage((*_self_)._field_file.ptr(), _22932_selector);
}



inline jule::Ptr<_211b43228_Var> _211b261a6_FindVar(_211b254c4_Sema* _self_, jule::Str _23926_ident, jule::Bool _23938_cpp_linked) {
	jule::Ptr<_211b43228_Var> _24117_v = _211b19a90_findVarInPackage((*_self_)._field_files,_23926_ident,_23938_cpp_linked);;
	if ((_24117_v != nullptr)) {
		return _24117_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_22412641e:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _24721_imp = *it;
			{
				if ((!(_211b23deb_impIsLookupable(_24721_imp,_23926_ident)))) {
					goto _iter_next_22412641e;
				};
				_24117_v=_211b1d05a_FindVar(_24721_imp.ptr(), _23926_ident,_23938_cpp_linked);
				if (((_24117_v != nullptr) && _211b2885c_isAccessibleDefine(&(*_self_), _24117_v.get()._field_Public,_24117_v.get()._field_Token))) {
					return _24117_v;
				};
			}
			_iter_next_22412641e:;
			++it;
			goto _iter_begin_22412641e;
		}
		_iter_end_22412641e:;
	};
	return nullptr;
}



inline jule::Ptr<_211bb5762_TypeAlias> _211b2655d_FindTypeAlias(_211b254c4_Sema* _self_, jule::Str _26632_ident, jule::Bool _26644_cpp_linked) {
	jule::Ptr<_211bb5762_TypeAlias> _26817_ta = _211b19ebe_findTypeAliasInPackage((*_self_)._field_files,_26632_ident,_26644_cpp_linked);;
	if ((_26817_ta != nullptr)) {
		return _26817_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_224128e49:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _27421_imp = *it;
			{
				if ((!(_211b23deb_impIsLookupable(_27421_imp,_26632_ident)))) {
					goto _iter_next_224128e49;
				};
				_26817_ta=_211b1d412_FindTypeAlias(_27421_imp.ptr(), _26632_ident,_26644_cpp_linked);
				if (((_26817_ta != nullptr) && _211b2885c_isAccessibleDefine(&(*_self_), _26817_ta.get()._field_Public,_26817_ta.get()._field_Token))) {
					return _26817_ta;
				};
			}
			_iter_next_224128e49:;
			++it;
			goto _iter_begin_224128e49;
		}
		_iter_end_224128e49:;
	};
	return nullptr;
}



inline jule::Ptr<_210e427d1_Struct> _211b26915_FindStruct(_211b254c4_Sema* _self_, jule::Str _29329_ident, jule::Bool _29341_cppLinked) {
	jule::Ptr<_210e427d1_Struct> _29517_s = _211b1a3a9_findStructInPackage((*_self_)._field_files,_29329_ident,_29341_cppLinked);;
	if ((_29517_s != nullptr)) {
		return _29517_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_22412b974:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _30021_imp = *it;
			{
				if ((!(_211b23deb_impIsLookupable(_30021_imp,_29329_ident)))) {
					goto _iter_next_22412b974;
				};
				_29517_s=_211b1d7b9_FindStruct(_30021_imp.ptr(), _29329_ident,_29341_cppLinked);
				if (((_29517_s != nullptr) && _211b2885c_isAccessibleDefine(&(*_self_), _29517_s.get()._field_Public,_29517_s.get()._field_Token))) {
					return _29517_s;
				};
			}
			_iter_next_22412b974:;
			++it;
			goto _iter_begin_22412b974;
		}
		_iter_end_22412b974:;
	};
	return nullptr;
}



inline jule::Ptr<_211020084_Fn> _211b26cbc_FindFn(_211b254c4_Sema* _self_, jule::Str _31825_ident, jule::Bool _31837_cpp_linked) {
	jule::Ptr<_211020084_Fn> _32017_f = _211b1a81b_findFnInPackage((*_self_)._field_files,_31825_ident,_31837_cpp_linked);;
	if ((_32017_f != nullptr)) {
		return _32017_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_22412e49e:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _32621_imp = *it;
			{
				if ((!(_211b23deb_impIsLookupable(_32621_imp,_31825_ident)))) {
					goto _iter_next_22412e49e;
				};
				_32017_f=_211b1db71_FindFn(_32621_imp.ptr(), _31825_ident,_31837_cpp_linked);
				if (((_32017_f != nullptr) && _211b2885c_isAccessibleDefine(&(*_self_), _32017_f.get()._field_Public,_32017_f.get()._field_Token))) {
					return _32017_f;
				};
			}
			_iter_next_22412e49e:;
			++it;
			goto _iter_begin_22412e49e;
		}
		_iter_end_22412e49e:;
	};
	return nullptr;
}



inline jule::Ptr<_211031e42_Trait> _211b270ca_FindTrait(_211b254c4_Sema* _self_, jule::Str _34528_ident) {
	jule::Ptr<_211031e42_Trait> _34717_t = _211b1ab29_findTraitInPackage((*_self_)._field_files,_34528_ident);;
	if ((_34717_t != nullptr)) {
		return _34717_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_224131b66:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _35321_imp = *it;
			{
				if ((!(_211b23deb_impIsLookupable(_35321_imp,_34528_ident)))) {
					goto _iter_next_224131b66;
				};
				_34717_t=_211b1de7e_FindTrait(_35321_imp.ptr(), _34528_ident);
				if (((_34717_t != nullptr) && _211b2885c_isAccessibleDefine(&(*_self_), _34717_t.get()._field_Public,_34717_t.get()._field_Token))) {
					return _34717_t;
				};
			}
			_iter_next_224131b66:;
			++it;
			goto _iter_begin_224131b66;
		}
		_iter_end_224131b66:;
	};
	return nullptr;
}



inline jule::Ptr<_211034087_Enum> _211b273d8_FindEnum(_211b254c4_Sema* _self_, jule::Str _37227_ident) {
	jule::Ptr<_211034087_Enum> _37417_e = _211b1ae6a_findEnumInPackage((*_self_)._field_files,_37227_ident);;
	if ((_37417_e != nullptr)) {
		return _37417_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_22413442c:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _38021_imp = *it;
			{
				if ((!(_211b23deb_impIsLookupable(_38021_imp,_37227_ident)))) {
					goto _iter_next_22413442c;
				};
				_37417_e=_211b1e28c_FindEnum(_38021_imp.ptr(), _37227_ident);
				if (((_37417_e != nullptr) && _211b2885c_isAccessibleDefine(&(*_self_), _37417_e.get()._field_Public,_37417_e.get()._field_Token))) {
					return _37417_e;
				};
			}
			_iter_next_22413442c:;
			++it;
			goto _iter_begin_22413442c;
		}
		_iter_end_22413442c:;
	};
	return nullptr;
}



inline jule::Ptr<_211035682_TypeEnum> _211b276e6_FindTypeEnum(_211b254c4_Sema* _self_, jule::Str _39931_ident) {
	jule::Ptr<_211035682_TypeEnum> _40117_e = _211b1b2ab_findTypeEnumInPackage((*_self_)._field_files,_39931_ident);;
	if ((_40117_e != nullptr)) {
		return _40117_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_224136be3:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _40721_imp = *it;
			{
				if ((!(_211b23deb_impIsLookupable(_40721_imp,_39931_ident)))) {
					goto _iter_next_224136be3;
				};
				_40117_e=_211b1e59a_FindTypeEnum(_40721_imp.ptr(), _39931_ident);
				if (((_40117_e != nullptr) && _211b2885c_isAccessibleDefine(&(*_self_), _40117_e.get()._field_Public,_40117_e.get()._field_Token))) {
					return _40117_e;
				};
			}
			_iter_next_224136be3:;
			++it;
			goto _iter_begin_224136be3;
		}
		_iter_end_224136be3:;
	};
	return nullptr;
}



inline jule::Bool _211b27a48_isFlag(_211b254c4_Sema* _self_, jule::I64 _42321_flags) {
	return (((*_self_)._field_flags & _42321_flags) == _42321_flags);
}



inline void _211b27cbd_setCurrentFile(_211b254c4_Sema* _self_, jule::Ptr<_211b855ab_SymbolTable> _42537_f) {
	(*_self_)._field_file=_42537_f;
}



inline void _211b28186_pushErr(_211b254c4_Sema* _self_, jule::Ptr<_20e7ddc0b_Token> _42726_token, jule::Str _42741_fmt, jule::Slice<jule::Any> _42754_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_211b23aaa_compilerErr(_42726_token,true,_42741_fmt,jule::Any(_42754_args)));;
}



inline void _211b284a5_pushSugggestion(_211b254c4_Sema* _self_, jule::Str _43234_fmt, jule::Slice<jule::Any> _43247_args) {
	{
		_211b25040_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43234_fmt,jule::Any(_43247_args));
	};
}



inline jule::Bool _211b2885c_isAccessibleDefine(_211b254c4_Sema* _self_, jule::Bool _43733_public, jule::Ptr<_20e7ddc0b_Token> _43747_token) {
	return ((_43733_public || (_43747_token.get()._field_File == nullptr)) || (_20e7e498c_Dir((*_self_)._field_file.get()._field_File.ptr()) == _20e7e498c_Dir(_43747_token.get()._field_File.ptr())));
}



inline jule::Bool _211b28cad_isDuplicatedIdent(_211b254c4_Sema* _self_, jule::Uintptr _44432_itself, jule::Str _44449_ident, jule::Bool _44461_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_22413d9ec:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> &_44516_f = *it;
			{
				if (_211b88aa9_isDuplicatedIdent(_44516_f.ptr(), _44432_itself,_44449_ident,_44461_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _44516_f.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_22413eba7:;
					if (it != expr.end()) {
						jule::Ptr<_211b1c378_ImportInfo> &_45020_imp = *it;
						{
							{
								auto &expr = _45020_imp.get()._field_Selected;
								auto it = expr.begin();
								_iter_begin_2241402a1:;
								if (it != expr.end()) {
									jule::Ptr<_20e7ddc0b_Token> &_45124_selected = *it;
									{
										if ((_45124_selected.get()._field_Kind == _44449_ident)) {
											return true;
										};
									}
									_iter_next_2241402a1:;
									++it;
									goto _iter_begin_2241402a1;
								}
								_iter_end_2241402a1:;
							};
						}
						_iter_next_22413eba7:;
						++it;
						goto _iter_begin_22413eba7;
					}
					_iter_end_22413eba7:;
				};
			}
			_iter_next_22413d9ec:;
			++it;
			goto _iter_begin_22413d9ec;
		}
		_iter_end_22413d9ec:;
	};
	return false;
}



inline void _211b290cc_checkDirectives(jule::Ptr<_211b254c4_Sema> _self_, jule::Slice<jule::Ptr<_210e1d8ab_Directive>>& _46140_d, jule::Any _46166_o) {
	_211b162ea_directiveChecker _46217_dc = _211b162ea_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_210e1d8ab_Directive>>>)((&(_46140_d)))), ._field_o=jule::Any(_46166_o)};;
	_211b17906_check(&_46217_dc);
}



inline jule::Bool _211b2952d_checkGenericQuantity(_211b254c4_Sema* _self_, jule::I64 _47039_required, jule::I64 _47054_given, jule::Ptr<_20e7ddc0b_Token> _47066_token) {
	jule::Bool _47083_ok = jule::Bool();
	{
		
		if (((_47039_required == 0LL) && (_47054_given > 0LL))) {
			_case_begin_224142eeb:;
			{
				_211b28186_pushErr(&(*_self_), _47066_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if (((_47039_required > 0LL) && (_47054_given == 0LL))) {
			_case_begin_2241430c8:;
			{
				_211b28186_pushErr(&(*_self_), _47066_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required < _47054_given)) {
			_case_begin_22414313e:;
			{
				_211b28186_pushErr(&(*_self_), _47066_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required > _47054_given)) {
			_case_begin_224142d20:;
			{
				_211b28186_pushErr(&(*_self_), _47066_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else {
			_case_begin_22414288b:;
			{
				_47083_ok = true;
				return _47083_ok;
			}
		}
		_match_end_2241427ae:;
	};
}



inline jule::Bool _211b29907_isDuplicatedImportSelection(_211b254c4_Sema* _self_, jule::Uintptr _48942_itself, jule::Str _48959_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_2241460a9:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> &_49016_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49016_imp) == _48942_itself)) {
					goto _iter_end_2241460a9;
				};
				if (_211b1ec4e_existIdent(_49016_imp.ptr(), _48959_ident)) {
					return true;
				};
			}
			_iter_next_2241460a9:;
			++it;
			goto _iter_begin_2241460a9;
		}
		_iter_end_2241460a9:;
	};
	return false;
}



inline jule::Any _211b29cc0_getImportDef(_211b254c4_Sema* _self_, jule::Str _50227_ident, jule::Ptr<_211b1c378_ImportInfo>& _50244_imp) {
	if ((_211c69140_findPackageBuiltinDef(_50244_imp.get()._field_LinkPath,_50227_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _50244_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_22414795c:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _50621_f = *it;
			{
				;
				jule::Any _50921_def = _211b88658_defByIdent(_50621_f.ptr(), _50227_ident,false);;
				if ((_50921_def != nullptr)) {
					return jule::Any(_50921_def);
				};
			}
			_iter_next_22414795c:;
			++it;
			goto _iter_begin_22414795c;
		}
		_iter_end_22414795c:;
	};
	return nullptr;
}



inline jule::Bool _22414e9b9_checkImportSelection(_211b254c4_Sema* _self_, jule::Ptr<_20e7ddc0b_Token>& _51743_ident, jule::Ptr<_211b43228_Var>& _51759_s) {
	if ((!(_211b2885c_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_211b28186_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_211b284a5_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_211b1b7a6_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_211b28186_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _224153c76_checkImportSelection(_211b254c4_Sema* _self_, jule::Ptr<_20e7ddc0b_Token>& _51743_ident, jule::Ptr<_211bb5762_TypeAlias>& _51759_s) {
	if ((!(_211b2885c_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_211b28186_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_211b284a5_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_211b1b7a6_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_211b28186_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _224157ebc_checkImportSelection(_211b254c4_Sema* _self_, jule::Ptr<_20e7ddc0b_Token>& _51743_ident, jule::Ptr<_210e427d1_Struct>& _51759_s) {
	if ((!(_211b2885c_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_211b28186_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_211b284a5_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_211b1b7a6_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_211b28186_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _22415c598_checkImportSelection(_211b254c4_Sema* _self_, jule::Ptr<_20e7ddc0b_Token>& _51743_ident, jule::Ptr<_211031e42_Trait>& _51759_s) {
	if ((!(_211b2885c_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_211b28186_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_211b284a5_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_211b1b7a6_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_211b28186_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _2241617de_checkImportSelection(_211b254c4_Sema* _self_, jule::Ptr<_20e7ddc0b_Token>& _51743_ident, jule::Ptr<_211034087_Enum>& _51759_s) {
	if ((!(_211b2885c_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_211b28186_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_211b284a5_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_211b1b7a6_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_211b28186_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _224165a35_checkImportSelection(_211b254c4_Sema* _self_, jule::Ptr<_20e7ddc0b_Token>& _51743_ident, jule::Ptr<_211035682_TypeEnum>& _51759_s) {
	if ((!(_211b2885c_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_211b28186_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_211b284a5_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_211b1b7a6_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_211b28186_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _224169c7b_checkImportSelection(_211b254c4_Sema* _self_, jule::Ptr<_20e7ddc0b_Token>& _51743_ident, jule::Ptr<_211020084_Fn>& _51759_s) {
	if ((!(_211b2885c_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_211b28186_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_211b284a5_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_211b1b7a6_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_211b28186_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}



inline jule::Bool _211b2a4a7_checkImportSelectedSelections(_211b254c4_Sema* _self_, jule::Ptr<_211b1c378_ImportInfo>& _53153_imp) {
	jule::Bool _53173_ok = jule::Bool();
	_53173_ok=true;
	{
		auto &expr = _53153_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_22414a003:;
		if (it != expr.end()) {
			jule::Ptr<_20e7ddc0b_Token> _53316_ident = *it;
			{
				if ((_53316_ident.get()._field_Kind == jule::Str("self", 4))) {
					goto _iter_next_22414a003;
				};
				if (_211b29907_isDuplicatedImportSelection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_53153_imp)),_53316_ident.get()._field_Kind)) {
					_211b28186_pushErr(&(*_self_), _53316_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_53316_ident.get()._field_Kind)}));
					_211b284a5_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_53173_ok=false;
					goto _iter_next_22414a003;
				};
				jule::Any _54521_def = _211b29cc0_getImportDef(&(*_self_), _53316_ident.get()._field_Kind,_53153_imp);;
				{
					auto &_match_expr{ _54521_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_22414c115:;
						{
							goto _iter_next_22414a003;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_211b43228_Var>>()) {
						_case_begin_22414ca72:;
						{
							jule::Ptr<_211b43228_Var> _55125_v = _54521_def.operator jule::Ptr<_211b43228_Var>();;
							_53173_ok=(_22414e9b9_checkImportSelection(&(*_self_), _53316_ident,_55125_v) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_211bb5762_TypeAlias>>()) {
						_case_begin_22414cad8:;
						{
							jule::Ptr<_211bb5762_TypeAlias> _55425_ta = _54521_def.operator jule::Ptr<_211bb5762_TypeAlias>();;
							_53173_ok=(_224153c76_checkImportSelection(&(*_self_), _53316_ident,_55425_ta) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_210e427d1_Struct>>()) {
						_case_begin_22414cb4e:;
						{
							jule::Ptr<_210e427d1_Struct> _55725_s = _54521_def.operator jule::Ptr<_210e427d1_Struct>();;
							_53173_ok=(_224157ebc_checkImportSelection(&(*_self_), _53316_ident,_55725_s) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_211031e42_Trait>>()) {
						_case_begin_22414d732:;
						{
							jule::Ptr<_211031e42_Trait> _56025_t = _54521_def.operator jule::Ptr<_211031e42_Trait>();;
							_53173_ok=(_22415c598_checkImportSelection(&(*_self_), _53316_ident,_56025_t) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_211034087_Enum>>()) {
						_case_begin_22414d798:;
						{
							jule::Ptr<_211034087_Enum> _56325_e = _54521_def.operator jule::Ptr<_211034087_Enum>();;
							_53173_ok=(_2241617de_checkImportSelection(&(*_self_), _53316_ident,_56325_e) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_211035682_TypeEnum>>()) {
						_case_begin_22414d80e:;
						{
							jule::Ptr<_211035682_TypeEnum> _56625_e = _54521_def.operator jule::Ptr<_211035682_TypeEnum>();;
							_53173_ok=(_224165a35_checkImportSelection(&(*_self_), _53316_ident,_56625_e) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_211020084_Fn>>()) {
						_case_begin_22414d875:;
						{
							jule::Ptr<_211020084_Fn> _56925_f = _54521_def.operator jule::Ptr<_211020084_Fn>();;
							_53173_ok=(_224169c7b_checkImportSelection(&(*_self_), _53316_ident,_56925_f) && _53173_ok);
						}
					}
					else {
						_case_begin_22414c841:;
						{
							_211b28186_pushErr(&(*_self_), _53316_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_53316_ident.get()._field_Kind)}));
							_53173_ok=false;
							goto _iter_next_22414a003;
						}
					}
					_match_end_22414a71d:;
				};
			}
			_iter_next_22414a003:;
			++it;
			goto _iter_begin_22414a003;
		}
		_iter_end_22414a003:;
	};
	return _53173_ok;
}



inline jule::Bool _22416e4cd_checkImportsAllSelectionsFromCollection(_211b254c4_Sema* _self_, jule::Slice<jule::Ptr<_211b43228_Var>>& _58062_s, jule::Ptr<_20e7ddc0b_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_2241710e5:;
		if (it != expr.end()) {
			jule::Ptr<_211b43228_Var> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_22414e9b9_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_2241710e5:;
			++it;
			goto _iter_begin_2241710e5;
		}
		_iter_end_2241710e5:;
	};
	return _58117_ok;
}

inline jule::Bool _22417037a_checkImportsAllSelectionsFromCollection(_211b254c4_Sema* _self_, jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>& _58062_s, jule::Ptr<_20e7ddc0b_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_22417404e:;
		if (it != expr.end()) {
			jule::Ptr<_211bb5762_TypeAlias> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_224153c76_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_22417404e:;
			++it;
			goto _iter_begin_22417404e;
		}
		_iter_end_22417404e:;
	};
	return _58117_ok;
}

inline jule::Bool _224173834_checkImportsAllSelectionsFromCollection(_211b254c4_Sema* _self_, jule::Slice<jule::Ptr<_210e427d1_Struct>>& _58062_s, jule::Ptr<_20e7ddc0b_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_224176e86:;
		if (it != expr.end()) {
			jule::Ptr<_210e427d1_Struct> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_224157ebc_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_224176e86:;
			++it;
			goto _iter_begin_224176e86;
		}
		_iter_end_224176e86:;
	};
	return _58117_ok;
}

inline jule::Bool _224177393_checkImportsAllSelectionsFromCollection(_211b254c4_Sema* _self_, jule::Slice<jule::Ptr<_211020084_Fn>>& _58062_s, jule::Ptr<_20e7ddc0b_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_224179e12:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_224169c7b_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_224179e12:;
			++it;
			goto _iter_begin_224179e12;
		}
		_iter_end_224179e12:;
	};
	return _58117_ok;
}

inline jule::Bool _2241796e7_checkImportsAllSelectionsFromCollection(_211b254c4_Sema* _self_, jule::Slice<jule::Ptr<_211031e42_Trait>>& _58062_s, jule::Ptr<_20e7ddc0b_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_22417cd05:;
		if (it != expr.end()) {
			jule::Ptr<_211031e42_Trait> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_22415c598_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_22417cd05:;
			++it;
			goto _iter_begin_22417cd05;
		}
		_iter_end_22417cd05:;
	};
	return _58117_ok;
}

inline jule::Bool _22417c5da_checkImportsAllSelectionsFromCollection(_211b254c4_Sema* _self_, jule::Slice<jule::Ptr<_211034087_Enum>>& _58062_s, jule::Ptr<_20e7ddc0b_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_224180be8:;
		if (it != expr.end()) {
			jule::Ptr<_211034087_Enum> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_2241617de_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_224180be8:;
			++it;
			goto _iter_begin_224180be8;
		}
		_iter_end_224180be8:;
	};
	return _58117_ok;
}

inline jule::Bool _2241804cd_checkImportsAllSelectionsFromCollection(_211b254c4_Sema* _self_, jule::Slice<jule::Ptr<_211035682_TypeEnum>>& _58062_s, jule::Ptr<_20e7ddc0b_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_224183b74:;
		if (it != expr.end()) {
			jule::Ptr<_211035682_TypeEnum> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_224165a35_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_224183b74:;
			++it;
			goto _iter_begin_224183b74;
		}
		_iter_end_224183b74:;
	};
	return _58117_ok;
}



inline jule::Bool _211b2abd3_checkImportAllSelections(_211b254c4_Sema* _self_, jule::Ptr<_211b1c378_ImportInfo>& _59044_imp) {
	jule::Bool _59064_ok = jule::Bool();
	_59064_ok=true;
	{
		auto &expr = _59044_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_22416da93:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> &_59216_file = *it;
			{
				_59064_ok=(_22416e4cd_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Vars,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_22417037a_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_TypeAliases,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_224173834_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Structs,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_224177393_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Funcs,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_2241796e7_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Traits,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_22417c5da_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Enums,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_2241804cd_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_TypeEnums,_59044_imp.get()._field_Token) && _59064_ok);
			}
			_iter_next_22416da93:;
			++it;
			goto _iter_begin_22416da93;
		}
		_iter_end_22416da93:;
	};
	return _59064_ok;
}



inline jule::Bool _211b2b002_checkImportSelections(_211b254c4_Sema* _self_, jule::Ptr<_211b1c378_ImportInfo>& _60445_imp) {
	jule::Bool _60465_ok = jule::Bool();
	if ((_60445_imp.get()._field_Selected.len() > 0LL)) {
		_60465_ok = _211b2a4a7_checkImportSelectedSelections(&(*_self_), _60445_imp);
		return _60465_ok;
	} else if (_60445_imp.get()._field_ImportAll) {
		_60465_ok = _211b2abd3_checkImportAllSelections(&(*_self_), _60445_imp);
		return _60465_ok;
	};
	_60465_ok = true;
	return _60465_ok;
}



inline jule::Bool _211b2b310_isUseAliasDuplication(_211b254c4_Sema* _self_, jule::Ptr<_211b1c378_ImportInfo>& _61341_imp) {
	if ((_61341_imp.get()._field_Alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_224186cba:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _61821_imp2 = *it;
			{
				if ((_61821_imp2 == _61341_imp)) {
					goto _iter_end_224186cba;
				};
				if ((_61821_imp2.get()._field_Alias == _61341_imp.get()._field_Alias)) {
					return true;
				};
				if (((_61821_imp2.get()._field_Ident == _61821_imp2.get()._field_LinkPath) && (_61821_imp2.get()._field_Ident == _61341_imp.get()._field_Alias))) {
					return true;
				};
			}
			_iter_next_224186cba:;
			++it;
			goto _iter_begin_224186cba;
		}
		_iter_end_224186cba:;
	};
	return false;
}



inline jule::Bool _211b2b61d_checkImport(_211b254c4_Sema* _self_, jule::Ptr<_211b1c378_ImportInfo>& _63335_imp) {
	if ((_63335_imp.get()._field_CppLinked || (_63335_imp.get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;
	};
	if (_211b2b310_isUseAliasDuplication(&(*_self_), _63335_imp)) {
		_211b28186_pushErr(&(*_self_), _63335_imp.get()._field_Token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_63335_imp.get()._field_Alias)}));
		_211b284a5_pushSugggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_63335_imp.get()._field_Duplicate))) {
		jule::Ptr<_211b254c4_Sema> _64421_sema = jule::new_ptr<_211b254c4_Sema>(_211b254c4_Sema{._field_flags=(*_self_)._field_flags});;
		_211b40247_check(_64421_sema, _63335_imp.get()._field_Package.get()._field_Files);
		if ((_64421_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_64421_sema.get()._field_errors);
			_64421_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _211b2b002_checkImportSelections(&(*_self_), _63335_imp);
}



inline void _211b2b7e9_checkImports(_211b254c4_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_22418cb4a:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _65821_file = *it;
			{
				_211b27cbd_setCurrentFile(&(*_self_), _65821_file);
				{
					auto &expr = _65821_file.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_22418d860:;
					if (it != expr.end()) {
						jule::Ptr<_211b1c378_ImportInfo> _66025_imp = *it;
						{
							jule::Bool _66121_ok = _211b2b61d_checkImport(&(*_self_), _66025_imp);;
							if ((!(_66121_ok))) {
								_211b28186_pushErr(&(*_self_), _66025_imp.get()._field_Token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_66025_imp.get()._field_LinkPath)}));
								return;;
							};
						}
						_iter_next_22418d860:;
						++it;
						goto _iter_begin_22418d860;
					}
					_iter_end_22418d860:;
				};
			}
			_iter_next_22418cb4a:;
			++it;
			goto _iter_begin_22418cb4a;
		}
		_iter_end_22418cb4a:;
	};
}



inline void _211b2b9c5_implFileImpls(jule::Ptr<_211b254c4_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Impls;
		auto it = expr.begin();
		_iter_begin_22418de9d:;
		if (it != expr.end()) {
			jule::Ptr<_2110b6658_Impl> _67221_imp = *it;
			{
				_211b3732c_implImpl(_self_, _67221_imp);
			}
			_iter_next_22418de9d:;
			++it;
			goto _iter_begin_22418de9d;
		}
		_iter_end_22418de9d:;
	};
}



inline void _211b2bba1_implImpls(jule::Ptr<_211b254c4_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_224190bb4:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _67821_file = *it;
			{
				_211b27cbd_setCurrentFile(_self_.ptr(), _67821_file);
				_211b2b9c5_implFileImpls(_self_);
			}
			_iter_next_224190bb4:;
			++it;
			goto _iter_begin_224190bb4;
		}
		_iter_end_224190bb4:;
	};
}



inline void _211b2bd7c_checkEnums(jule::Ptr<_211b254c4_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_224191d19:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _68521_file = *it;
			{
				_211b27cbd_setCurrentFile(_self_.ptr(), _68521_file);
				_211b34956_checkEnumDecls(_self_);
			}
			_iter_next_224191d19:;
			++it;
			goto _iter_begin_224191d19;
		}
		_iter_end_224191d19:;
	};
}



inline _211bc4980_typeChecker _211b2c2cd_typeChecker(jule::Ptr<_211b254c4_Sema> _self_, jule::Trait<_211bd2086_Lookup> _69135_l, jule::Slice<jule::Ptr<_211bb5762_TypeAlias>> _69150_generics, jule::Ptr<_211bc3b6b_referencer> _69213_referencer) {
	_211bc4980_typeChecker _69317_tc = _211bc4980_typeChecker{._field_s=_self_, ._field_rootLookup=_69135_l, ._field_lookup=_69135_l, ._field_referencer=_69213_referencer, ._field_useGenerics=_69150_generics, };;
	{
		auto &_match_expr{ _69135_l };
		
		if (_match_expr.type_is<jule::Ptr<_211b0c214_scopeChecker>>()) {
			_case_begin_224193832:;
			{
				jule::Ptr<_211b0c214_scopeChecker> _70221_hard = _211b0d721_getHardRoot(_69135_l.operator jule::Ptr<_211b0c214_scopeChecker>());;
				_69317_tc._field_refers=_70221_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_224193744:;
	};
	if (((_69213_referencer != nullptr) && (_69213_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _69213_referencer.get()._field_owner };
			
			if (_match_expr.type_is<jule::Ptr<_211bb5762_TypeAlias>>()) {
				_case_begin_224193ca5:;
				{
					_69317_tc._field_ownerAlias=_69213_referencer.get()._field_owner.operator jule::Ptr<_211bb5762_TypeAlias>();
				}
			}
			_match_end_224193c50:;
		};
	};
	return _69317_tc;
}



inline jule::Ptr<_211bb6455_TypeKind> _211b2c7c8_buildTypeWithRefers(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e520a4_TypeDecl>& _71844_t, jule::Trait<_211bd2086_Lookup> _71867_l, jule::Slice<jule::Ptr<_211bb5762_TypeAlias>> _71913_generics, jule::Ptr<_211bc3b6b_referencer> _71941_referencer) {
	return ({ auto _wrap_copy = _211b2c2cd_typeChecker(_self_, _71867_l,_71913_generics,_71941_referencer); _211bcbbeb_checkDecl(&_wrap_copy, _71844_t); });
}



inline jule::Bool _211b2ccc3_checkTypeWithRefers(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211bba5ad_TypeSymbol>& _72544_t, jule::Trait<_211bd2086_Lookup> _72564_l, jule::Slice<jule::Ptr<_211bb5762_TypeAlias>> _72613_generics, jule::Ptr<_211bc3b6b_referencer> _72641_referencer) {
	jule::Bool _72668_ok = jule::Bool();
	if (_211bba965_checked(_72544_t.ptr())) {
		_72668_ok = true;
		return _72668_ok;
	};
	_72544_t.get()._field_Kind=_211b2c7c8_buildTypeWithRefers(_self_, _72544_t.get()._field_Decl,_72564_l,_72613_generics,_72641_referencer);
	_72668_ok = _211bba965_checked(_72544_t.ptr());
	return _72668_ok;
}



inline jule::Ptr<_21104d27c_constraintChecker> _211b2d037_constraintChecker(jule::Ptr<_211b254c4_Sema> _self_) {
	return jule::new_ptr<_21104d27c_constraintChecker>(_21104d27c_constraintChecker{._field_s=_self_, });
}



inline jule::Bool _211b2d3de_checkType(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211bba5ad_TypeSymbol>& _74034_t, jule::Trait<_211bd2086_Lookup> _74054_l) {
	return _211b2ccc3_checkTypeWithRefers(_self_, _74034_t,_74054_l,nullptr,nullptr);
}



inline jule::Ptr<_211bb6455_TypeKind> _211b2d840_buildTypeWithGenerics(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e520a4_TypeDecl>& _74646_t, jule::Slice<jule::Ptr<_211bb5762_TypeAlias>> _74713_generics, jule::Ptr<_211025b06_ReferenceStack> _74741_refers) {
	jule::Ptr<_211bc4980_typeChecker> _74817_tc = jule::new_ptr<_211bc4980_typeChecker>(_211bc4980_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_211bd2086_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_211bd2086_Lookup>(_self_, 3), ._field_refers=_74741_refers, ._field_useGenerics=_74713_generics, });;
	return _211bcbbeb_checkDecl(_74817_tc.ptr(), _74646_t);
}



inline jule::Ptr<_211bb6455_TypeKind> _211b2db4d_buildType(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e520a4_TypeDecl>& _75934_t) {
	return _211b2d840_buildTypeWithGenerics(_self_, _75934_t,nullptr,nullptr);
}



inline jule::Ptr<_211bb6455_TypeKind> _211b2de5b_selectType(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e520a4_TypeDecl>& _76435_t) {
	jule::Ptr<_211bc4980_typeChecker> _76517_tc = jule::new_ptr<_211bc4980_typeChecker>(_211bc4980_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_211bd2086_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_211bd2086_Lookup>(_self_, 3), ._field_selection=true, });;
	return _211bcbbeb_checkDecl(_76517_tc.ptr(), _76435_t);
}



inline jule::Ptr<_211b8bd87_Eval> _211b2e3ac_evalpd(jule::Ptr<_211b254c4_Sema> _self_, jule::Trait<_211bd2086_Lookup> _77630_l, jule::Ptr<_211bb6455_TypeKind> _77645_p, jule::Ptr<_211b43228_Var> _77663_owner) {
	jule::Ptr<_211b8bd87_Eval> _77717_e = jule::new_ptr<_211b8bd87_Eval>(_211b8bd87_Eval{._field_s=_self_, ._field_lookup=_77630_l, ._field_owner=_77663_owner, });;
	{
		auto &_match_expr{ _77630_l };
		
		if (_match_expr.type_is<jule::Ptr<_211b0c214_scopeChecker>>()) {
			_case_begin_22419d5c8:;
			{
				_77717_e.get()._field_unsafety=_211b0ced4_isUnsafe(_77630_l.operator jule::Ptr<_211b0c214_scopeChecker>());
			}
		}
		_match_end_22419d562:;
	};
	_77717_e.get()._field_prefix=_77645_p;
	return _77717_e;
}



inline jule::Ptr<_211b8bd87_Eval> _211b2e764_evalp(jule::Ptr<_211b254c4_Sema> _self_, jule::Trait<_211bd2086_Lookup> _79129_l, jule::Ptr<_211bb6455_TypeKind> _79144_p) {
	return _211b2e3ac_evalpd(_self_, _79129_l,_79144_p,nullptr);
}



inline jule::Ptr<_211b8bd87_Eval> _211b2ea72_eval(jule::Ptr<_211b254c4_Sema> _self_, jule::Trait<_211bd2086_Lookup> _79628_l) {
	return _211b2e764_evalp(_self_, _79628_l,nullptr);
}



inline jule::Bool _211b3006c_checkAssignType(jule::Ptr<_211b254c4_Sema> _self_, jule::Bool _80035_destIsRef, jule::Ptr<_211bb6455_TypeKind>& _80057_dest, jule::Ptr<_211b8a319_Data>& _80114_d, jule::Ptr<_20e7ddc0b_Token> _80128_errorToken) {
	if (_80114_d.get()._field_Decl) {
		_211b28186_pushErr(_self_.ptr(), _80128_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_80035_destIsRef) {
		if ((!(_211bb6b5e_Equals(_80057_dest, _80114_d.get()._field_Kind)))) {
			_211b28186_pushErr(_self_.ptr(), _80128_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_80057_dest.ptr())),jule::Any(_211bb6851_Str(_80114_d.get()._field_Kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_211b75da4_assignTypeChecker> _81221_atc = jule::new_ptr<_211b75da4_assignTypeChecker>(_211b75da4_assignTypeChecker{._field_s=_self_, ._field_dest=_80057_dest, ._field_d=_80114_d, ._field_errorToken=_80128_errorToken});;
		jule::Bool _81817_ok = _211b7702b_check(_81221_atc.ptr());;
		if ((!(_81817_ok))) {
			return false;
		};
	};
	if (((!(_211b8abcc_IsConst(_80114_d.ptr()))) || (_211bb8567_Prim(_80057_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _82817_kind = _211bb8567_Prim(_80057_dest.ptr()).get()._field_Kind;;
	{
		
		if (_211b089e6_IsSigInt(_82817_kind)) {
			_case_begin_2241a5107:;
			{
				_211011b25_SetI64(_80114_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_2110113c7_AsI64(_80114_d.get()._field_Constant.ptr())));
			}
		}
		else if (_211b08b28_IsUnsigInt(_82817_kind)) {
			_case_begin_2241a517e:;
			{
				_211011d9a_SetU64(_80114_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_21101163b_AsU64(_80114_d.get()._field_Constant.ptr())));
			}
		}
		else if (_211b08d8c_IsFloat(_82817_kind)) {
			_case_begin_2241a5206:;
			{
				_21101261a_SetF64(_80114_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_2110118a0_AsF64(_80114_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_2241a503b:;
	};
	return true;
}



inline jule::Bool _211b304bd_checkTypeCompatibility(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211bb6455_TypeKind>& _84247_dest, jule::Ptr<_211bb6455_TypeKind>& _84314_src, jule::Ptr<_20e7ddc0b_Token>& _84335_errorToken) {
	if ((_84314_src == nullptr)) {
		_211b28186_pushErr(_self_.ptr(), _84335_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_84247_dest.ptr())),jule::Any(_211bb6851_Str(_84314_src.ptr()))}));
		return false;
	};
	if ((_211bba206_Tup(_84314_src.ptr()) != nullptr)) {
		_211b28186_pushErr(_self_.ptr(), _84335_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_84247_dest.ptr())),jule::Any(_211bb6851_Str(_84314_src.ptr()))}));
		return false;
	};
	_211b7427b_typeCompatibilityChecker _85717_tcc = _211b7427b_typeCompatibilityChecker{._field_s=_self_, ._field_dest=_84247_dest, ._field_src=_84314_src, ._field_errorToken=_84335_errorToken};;
	if (_211b75865_check(&_85717_tcc)) {
		return true;
	};
	_211b28186_pushErr(_self_.ptr(), _84335_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_84247_dest.ptr())),jule::Any(_211bb6851_Str(_84314_src.ptr()))}));
	return false;
}



inline jule::Ptr<_211bb6455_TypeKind> _211b30897_buildNonGenericTypeKind(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e520a4_TypeDecl>& _87848_ast, jule::Slice<jule::Ptr<_210e5e688_GenericDecl>>& _87914_generics) {
	jule::Ptr<_211bc4980_typeChecker> _88017_tc = jule::new_ptr<_211bc4980_typeChecker>(_211bc4980_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_211bd2086_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_211bd2086_Lookup>(_self_, 3), ._field_ignoreGenerics=_87914_generics, });;
	return _211bcbbeb_checkDecl(_88017_tc.ptr(), _87848_ast);
}



inline void _211b30b50_buildFnNonGenericTypeKinds(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211022c35_FnIns>& _88951_f) {
	jule::Slice<jule::Ptr<_210e5e688_GenericDecl>> _89017_generics = nullptr;;
	if (_21102075a_IsMethod(_88951_f.get()._field_Decl.ptr())) {
		_89017_generics=jule::append(_88951_f.get()._field_Decl.get()._field_Generics,_88951_f.get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_89017_generics=_88951_f.get()._field_Decl.get()._field_Generics;
	};
	{
		auto &expr = _88951_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_2241d3531:;
		if (it != expr.end()) {
			jule::Ptr<_211021d66_ParamIns> _89721_p = *it;
			{
				if ((!(_21101dd74_IsSelf(_89721_p.get()._field_Decl.ptr())))) {
					_89721_p.get()._field_Kind=_211b30897_buildNonGenericTypeKind(_self_, _89721_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_89017_generics);
				};
			}
			_iter_next_2241d3531:;
			++it;
			goto _iter_begin_2241d3531;
		}
		_iter_end_2241d3531:;
	};
	if ((!(_2110204e6_IsVoid(_88951_f.get()._field_Decl.ptr())))) {
		_88951_f.get()._field_Result=_211b30897_buildNonGenericTypeKind(_self_, _88951_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_89017_generics);
	};
}



inline jule::Ptr<_211022c35_FnIns> _211b30e6e_getTraitCheckFnKind(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211020084_Fn>& _90744_f) {
	if ((_90744_f.get()._field_Instances.len() == 1LL)) {
		return _90744_f.get()._field_Instances[0LL];
	};
	jule::Ptr<_211022c35_FnIns> _91117_ins = _211021470_instanceForce(_90744_f);;
	jule::Ptr<_211bc4980_typeChecker> _91317_tc = jule::new_ptr<_211bc4980_typeChecker>(_211bc4980_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_211bd2086_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_211bd2086_Lookup>(_self_, 3), });;
	{
		auto &expr = _91117_ins.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_2241d73ae:;
		if (it != expr.end()) {
			jule::Ptr<_211021d66_ParamIns> _91821_p = *it;
			{
				if ((!(_21101dd74_IsSelf(_91821_p.get()._field_Decl.ptr())))) {
					_91821_p.get()._field_Kind=_211bcbbeb_checkDecl(_91317_tc.ptr(), _91821_p.get()._field_Decl.get()._field_Kind.get()._field_Decl);
				};
			}
			_iter_next_2241d73ae:;
			++it;
			goto _iter_begin_2241d73ae;
		}
		_iter_end_2241d73ae:;
	};
	if ((!(_2110204e6_IsVoid(_90744_f.ptr())))) {
		_91117_ins.get()._field_Result=_211bcbbeb_checkDecl(_91317_tc.ptr(), _90744_f.get()._field_Result.get()._field_Kind.get()._field_Decl);
	};
	return _91117_ins;
}



inline jule::Bool _211b313c0_checkConstraintsFn(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211022c35_FnIns>& _93043_f, jule::Ptr<_20e7ddc0b_Token>& _93059_et, jule::Ptr<_211022c35_FnIns> _93075_exist) {
	jule::Ptr<_21104d27c_constraintChecker> _93117_cc = _211b2d037_constraintChecker(_self_);;
	_93117_cc.get()._field_et=_93059_et;
	_93117_cc.get()._field_fi=_93043_f;
	if ((_93075_exist != nullptr)) {
		{
			auto &expr = _93075_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_2241da813:;
			if (it != expr.end()) {
				jule::I64 _93518_i = it - expr.begin();
				jule::Ptr<_211bb4c28_InsGeneric> _93525_g = *it;
				{
					_93043_f.get()._field_Generics[_93518_i].get()._field_Constraint=_93525_g.get()._field_Constraint;
				}
				_iter_next_2241da813:;
				++it;
				_93518_i++;
				goto _iter_begin_2241da813;
			}
			_iter_end_2241da813:;
		};
	} else {
		_93117_cc.get()._field_uniq=true;
	};
	return _2110930b3_check(_93117_cc);
}



inline jule::Bool _211b31821_checkConstraintsStruct(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e6db2b_StructIns>& _94447_s, jule::Ptr<_20e7ddc0b_Token>& _94467_et, jule::Ptr<_210e6db2b_StructIns> _94483_exist) {
	jule::Ptr<_21104d27c_constraintChecker> _94517_cc = _211b2d037_constraintChecker(_self_);;
	_94517_cc.get()._field_et=_94467_et;
	_94517_cc.get()._field_si=_94447_s;
	if ((_94483_exist != nullptr)) {
		{
			auto &expr = _94483_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_2241dd44d:;
			if (it != expr.end()) {
				jule::I64 _94918_i = it - expr.begin();
				jule::Ptr<_211bb4c28_InsGeneric> _94925_g = *it;
				{
					_94447_s.get()._field_Generics[_94918_i].get()._field_Constraint=_94925_g.get()._field_Constraint;
				}
				_iter_next_2241dd44d:;
				++it;
				_94918_i++;
				goto _iter_begin_2241dd44d;
			}
			_iter_end_2241dd44d:;
		};
	} else {
		_94517_cc.get()._field_uniq=true;
	};
	return _2110930b3_check(_94517_cc);
}



inline jule::Bool _211b31bc8_fnEnvironment(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211022c35_FnIns>& _96138_f, jule::Fn<jule::Bool(jule::Ptr<_211b254c4_Sema>&,jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>&)> _96149_algo) {
	jule::Ptr<_211b254c4_Sema> _96217_sema = _96138_f.get()._field_Decl.get()._field_sema;;
	jule::Ptr<_211b855ab_SymbolTable> _96317_old = _96138_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_211b27cbd_setCurrentFile(_96138_f.get()._field_Decl.get()._field_sema.ptr(), _96317_old);
	});;
	jule::Ptr<_211b855ab_SymbolTable> _96517_file = _211b24acd_findFile(_96138_f.get()._field_Decl.get()._field_sema.get()._field_files,_96138_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_96517_file != nullptr)) {
		_211b27cbd_setCurrentFile(_96138_f.get()._field_Decl.get()._field_sema.ptr(), _96517_file);
	};
	jule::I64 _97017_size = _96138_f.get()._field_Generics.len();;
	if (((_96138_f.get()._field_Decl != nullptr) && (_96138_f.get()._field_Decl.get()._field_Owner != nullptr))) {
		_97017_size+=_96138_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_211bb5762_TypeAlias>> _97517_generics = jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>::alloc(0LL,_97017_size);;
	_211b2477b_appendGenericTypeAliases(_97517_generics,_96138_f);
	jule::Bool _97813_ok = _96149_algo(_96217_sema,_97517_generics);;
	if ((_96217_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_96217_sema.get()._field_errors);
		_96217_sema.get()._field_errors=nullptr;
	};
	return _97813_ok;
}



inline void _211b31e4d_checkFnParamKind(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211021d66_ParamIns>& _98841_p) {
	_98841_p.get()._field_Kind.get()._field_Variadic=_98841_p.get()._field_Decl.get()._field_Variadic;
	if ((_98841_p.get()._field_Decl.get()._field_Reference && (!(_211bcda11_isValidForRef(_98841_p.get()._field_Kind))))) {
		_211b28186_pushErr(_self_.ptr(), _98841_p.get()._field_Decl.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_98841_p.get()._field_Kind.ptr()))}));
	};
}



inline jule::Bool _211b3225b_reloadFnInsTypes(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211022c35_FnIns> _99540_f) {
	if ((_2110240bb_IsBuiltin(_99540_f.ptr()) || _211024330_IsAnon(_99540_f.ptr()))) {
		return true;
	};
	return _211b31bc8_fnEnvironment(_self_, _99540_f,jule::Fn<jule::Bool(jule::Ptr<_211b254c4_Sema>&,jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>&)>([=](jule::Ptr<_211b254c4_Sema>& _99943_sema, jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>& _99961_generics) mutable -> jule::Bool {
		jule::Bool _100021_ok = true;;
		{
			auto &expr = _99540_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_2241e9c95:;
			if (it != expr.end()) {
				jule::Ptr<_211021d66_ParamIns> _100125_p = *it;
				{
					if (_21101dd74_IsSelf(_100125_p.get()._field_Decl.ptr())) {
						if (_21101e0d8_IsRef(_100125_p.get()._field_Decl.ptr())) {
							_100125_p.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_211bbe6b1_Sptr>(_211bbe6b1_Sptr{._field_Elem=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_99540_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_100125_p.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_99540_f.get()._field_Owner, 0)});
						};
					} else {
						_100125_p.get()._field_Kind=_211b2d840_buildTypeWithGenerics(_99943_sema, _100125_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_99961_generics,_99540_f.get()._field_Refers);
						if ((_100125_p.get()._field_Kind != nullptr)) {
							_211b31e4d_checkFnParamKind(_self_, _100125_p);
						} else {
							_100021_ok=false;
						};
					};
				}
				_iter_next_2241e9c95:;
				++it;
				goto _iter_begin_2241e9c95;
			}
			_iter_end_2241e9c95:;
		};
		if ((!(_2110204e6_IsVoid(_99540_f.get()._field_Decl.ptr())))) {
			_99540_f.get()._field_Result=_211b2d840_buildTypeWithGenerics(_99943_sema, _99540_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_99961_generics,_99540_f.get()._field_Refers);
			_100021_ok=((_99540_f.get()._field_Result != nullptr) && _100021_ok);
		};
		return _100021_ok;
	}));
}



inline jule::Bool _211b326ce_checkRefValidityForInitExpr(jule::Ptr<_211b254c4_Sema> _self_, jule::Bool _103147_leftMut, jule::Ptr<_211b8a319_Data>& _103167_d, jule::Ptr<_20e7ddc0b_Token>& _103182_errorToken) {
	{
		auto &_match_expr{ _103167_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_211b43228_Var>>()) {
			_case_begin_2241eed77:;
			{
				goto _match_end_2241eea8b;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019732_TraitSubIdentExprModel>>()) {
			_case_begin_2241eeddd:;
			{
				jule::Ptr<_211019732_TraitSubIdentExprModel> _103621_model = _103167_d.get()._field_Model.operator jule::Ptr<_211019732_TraitSubIdentExprModel>();;
				if ((!(_211b23615_isValidModelForRef(_103621_model.get()._field_Expr)))) {
					_211b28186_pushErr(_self_.ptr(), _103182_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_103621_model.get()._field_Method.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019b50_StructSubIdentExprModel>>()) {
			_case_begin_2241eee54:;
			{
				jule::Ptr<_211019b50_StructSubIdentExprModel> _104221_model = _103167_d.get()._field_Model.operator jule::Ptr<_211019b50_StructSubIdentExprModel>();;
				if ((!(_211b23615_isValidModelForRef(_104221_model.get()._field_Expr.get()._field_Model)))) {
					_211b28186_pushErr(_self_.ptr(), _103182_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_104221_model.get()._field_Field.get()._field_Decl.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101a216_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_21101a403_CommonSubIdentExprModel>>()) {
			_case_begin_224200608:;
			{
				_211b28186_pushErr(_self_.ptr(), _103182_errorToken,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211017e28_UnaryExprModel>>()) {
			_case_begin_22420066e:;
			{
				jule::Ptr<_211017e28_UnaryExprModel> _105221_unary = _103167_d.get()._field_Model.operator jule::Ptr<_211017e28_UnaryExprModel>();;
				if ((_105221_unary.get()._field_Op.get()._field_Kind == jule::Str("*", 1))) {
					if ((!(_211b23615_isValidModelForRef(_103167_d.get()._field_Model)))) {
						_211b28186_pushErr(_self_.ptr(), _103182_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_2241eea8b;
				};
				goto _case_begin_2241eec45;
			}
		}
		else {
			_case_begin_2241eec45:;
			{
				_211b28186_pushErr(_self_.ptr(), _103182_errorToken,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_2241eea8b:;
	};
	if ((_103147_leftMut && (!(_103167_d.get()._field_Mutable)))) {
		_211b28186_pushErr(_self_.ptr(), _103182_errorToken,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _211b32ca6_checkValidityForInitExpr(jule::Ptr<_211b254c4_Sema> _self_, jule::Bool _107244_leftMut, jule::Bool _107259_leftRef, jule::Ptr<_211bb6455_TypeKind>& _107310_leftKind, jule::Ptr<_211b8a319_Data>& _107336_d, jule::Ptr<_20e7ddc0b_Token>& _107351_errorToken) {
	if (((_107244_leftMut && (!(_107336_d.get()._field_Mutable))) && _211bb7852_Mutable(_107336_d.get()._field_Kind.ptr()))) {
		_211b28186_pushErr(_self_.ptr(), _107351_errorToken,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_107336_d.get()._field_Kind.ptr()))}));
		return false;
	};
	if (_107259_leftRef) {
		if ((!(_211b326ce_checkRefValidityForInitExpr(_self_, _107244_leftMut,_107336_d,_107351_errorToken)))) {
			return false;
		};
	};
	jule::Ptr<_211b75da4_assignTypeChecker> _108317_atc = jule::new_ptr<_211b75da4_assignTypeChecker>(_211b75da4_assignTypeChecker{._field_s=_self_, ._field_d=_107336_d, ._field_errorToken=_107351_errorToken});;
	return _211b7657a_checkValidity(_108317_atc.ptr());
}



inline jule::Bool _211b3316e_checkTypeAliasDeclKind(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211bb5762_TypeAlias>& _109147_ta, jule::Trait<_211bd2086_Lookup> _109167_l) {
	jule::Bool _109180_ok = jule::Bool();
	jule::Ptr<_211b855ab_SymbolTable> _109217_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_211b27cbd_setCurrentFile(_self_.ptr(), _109217_old);
	});;
	if ((_109147_ta.get()._field_Token != nullptr)) {
		jule::Ptr<_211b855ab_SymbolTable> _109721_file = _211b24acd_findFile(_self_.get()._field_files,_109147_ta.get()._field_Token.get()._field_File);;
		if ((_109721_file != nullptr)) {
			_211b27cbd_setCurrentFile(_self_.ptr(), _109721_file);
		};
	};
	_109180_ok=_211b2ccc3_checkTypeWithRefers(_self_, _109147_ta.get()._field_Kind,_109167_l,nullptr,jule::new_ptr<_211bc3b6b_referencer>(_211bc3b6b_referencer{._field_ident=_109147_ta.get()._field_Ident, ._field_owner=jule::Any(_109147_ta), ._field_refs=(&(_109147_ta.get()._field_Refers))}));
	if (((_109180_ok && (_211bb927c_Arr(_109147_ta.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _211bb927c_Arr(_109147_ta.get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_211b28186_pushErr(_self_.ptr(), _109147_ta.get()._field_Kind.get()._field_Decl.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_109180_ok=false;
	};
	return _109180_ok;
}



inline void _211b3348d_checkTypeAliasDecl(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211bb5762_TypeAlias>& _111443_ta, jule::Trait<_211bd2086_Lookup> _111463_l) {
	if (_20e7e14a0_IsIgnoreIdent(_111443_ta.get()._field_Ident)) {
		_211b28186_pushErr(_self_.ptr(), _111443_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_211b3316e_checkTypeAliasDeclKind(_self_, _111443_ta,_111463_l);
}



inline void _211b33713_checkTypeAliasDeclDup(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211bb5762_TypeAlias>& _112246_ta) {
	if (_20e7e14a0_IsIgnoreIdent(_112246_ta.get()._field_Ident)) {
		_211b28186_pushErr(_self_.ptr(), _112246_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_211b28cad_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_112246_ta)),_112246_ta.get()._field_Ident,_112246_ta.get()._field_CppLinked)) {
		_211b28186_pushErr(_self_.ptr(), _112246_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_112246_ta.get()._field_Ident)}));
		_211b284a5_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_211b3316e_checkTypeAliasDeclKind(_self_, _112246_ta,jule::Trait<_211bd2086_Lookup>(_self_, 3));
}



inline jule::Bool _211b33977_checkTypeAliasDecls(jule::Ptr<_211b254c4_Sema> _self_) {
	jule::Bool _113441_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_2242130aa:;
		if (it != expr.end()) {
			jule::Ptr<_211bb5762_TypeAlias> _113521_ta = *it;
			{
				_211b33713_checkTypeAliasDeclDup(_self_, _113521_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_113441_ok = false;
					return _113441_ok;
				};
			}
			_iter_next_2242130aa:;
			++it;
			goto _iter_begin_2242130aa;
		}
		_iter_end_2242130aa:;
	};
	_113441_ok = true;
	return _113441_ok;
}



inline void _224224b7c_checkEnumItemsDup(_211b254c4_Sema* _self_, jule::Slice<jule::Ptr<_211033592_EnumItem>> _114639_items) {
	{
		auto &expr = _114639_items;
		auto it = expr.begin();
		_iter_begin_224225e69:;
		if (it != expr.end()) {
			jule::Ptr<_211033592_EnumItem> &_114716_item = *it;
			{
				if (_114716_item.get()._field_Ident.empty()) {
					goto _iter_next_224225e69;
				} else if (_20e7e14a0_IsIgnoreIdent(_114716_item.get()._field_Ident)) {
					_211b28186_pushErr(&(*_self_), _114716_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _114639_items;
						auto it = expr.begin();
						_iter_begin_224226ba1:;
						if (it != expr.end()) {
							jule::Ptr<_211033592_EnumItem> &_115324_citem = *it;
							{
								if ((_114716_item == _115324_citem)) {
									goto _iter_end_224226ba1;
								} else if ((_114716_item.get()._field_Ident == _115324_citem.get()._field_Ident)) {
									_211b28186_pushErr(&(*_self_), _114716_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_114716_item.get()._field_Ident)}));
									_211b284a5_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_224226ba1;
								};
							}
							_iter_next_224226ba1:;
							++it;
							goto _iter_begin_224226ba1;
						}
						_iter_end_224226ba1:;
					};
				};
			}
			_iter_next_224225e69:;
			++it;
			goto _iter_begin_224225e69;
		}
		_iter_end_224225e69:;
	};
}

inline void _224230935_checkEnumItemsDup(_211b254c4_Sema* _self_, jule::Slice<jule::Ptr<_2110350bb_TypeEnumItem>> _114639_items) {
	{
		auto &expr = _114639_items;
		auto it = expr.begin();
		_iter_begin_224231c22:;
		if (it != expr.end()) {
			jule::Ptr<_2110350bb_TypeEnumItem> &_114716_item = *it;
			{
				if (_114716_item.get()._field_Ident.empty()) {
					goto _iter_next_224231c22;
				} else if (_20e7e14a0_IsIgnoreIdent(_114716_item.get()._field_Ident)) {
					_211b28186_pushErr(&(*_self_), _114716_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _114639_items;
						auto it = expr.begin();
						_iter_begin_224232959:;
						if (it != expr.end()) {
							jule::Ptr<_2110350bb_TypeEnumItem> &_115324_citem = *it;
							{
								if ((_114716_item == _115324_citem)) {
									goto _iter_end_224232959;
								} else if ((_114716_item.get()._field_Ident == _115324_citem.get()._field_Ident)) {
									_211b28186_pushErr(&(*_self_), _114716_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_114716_item.get()._field_Ident)}));
									_211b284a5_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_224232959;
								};
							}
							_iter_next_224232959:;
							++it;
							goto _iter_begin_224232959;
						}
						_iter_end_224232959:;
					};
				};
			}
			_iter_next_224231c22:;
			++it;
			goto _iter_begin_224231c22;
		}
		_iter_end_224231c22:;
	};
}



inline void _211b33e72_checkEnumItemsStr(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211034087_Enum>& _116642_e) {
	jule::Ptr<_211b8bd87_Eval> _116717_eval = _211b2ea72_eval(_self_, jule::Trait<_211bd2086_Lookup>(_self_, 3));;
	{
		auto &expr = _116642_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_224214e8b:;
		if (it != expr.end()) {
			jule::Ptr<_211033592_EnumItem> _116821_item = *it;
			{
				if (_21103397c_AutoExpr(_116821_item.ptr())) {
					_116821_item.get()._field_Value=jule::new_ptr<_211b8b392_Value>(_211b8b392_Value{._field_Data=jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Constant=static__21100eb23_NewStr(_116821_item.get()._field_Ident)})});
					_116821_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_116821_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_211b8a319_Data> _117725_d = _211ba7b50_evalExpr(_116717_eval, _116821_item.get()._field_Value.get()._field_Expr);;
					if ((_117725_d == nullptr)) {
						goto _iter_next_224214e8b;
					};
					if ((!(_211b8abcc_IsConst(_117725_d.ptr())))) {
						_211b28186_pushErr(_self_.ptr(), _116821_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_211b3006c_checkAssignType(_self_, false,_116642_e.get()._field_Kind.get()._field_Kind,_117725_d,_116821_item.get()._field_Token);
					_116821_item.get()._field_Value.get()._field_Data=_117725_d;
				};
			}
			_iter_next_224214e8b:;
			++it;
			goto _iter_begin_224214e8b;
		}
		_iter_end_224214e8b:;
	};
}



inline void _211b341e7_checkEnumItemsInt(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211034087_Enum>& _119242_e) {
	jule::Ptr<_211bbae2c_Prim> _119313_prim = _211bb8567_Prim(_119242_e.get()._field_Kind.get()._field_Kind.ptr());;
	jule::U64 _119417_max = static_cast<jule::U64>(_2114ba83c_Max(_211bbb290_Str(_119313_prim.ptr())));;
	jule::Ptr<_211b8bd87_Eval> _119517_eval = _211b2ea72_eval(_self_, jule::Trait<_211bd2086_Lookup>(_self_, 3));;
	{
		auto &expr = _119242_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_22421a766:;
		if (it != expr.end()) {
			jule::I64 _119614_i = it - expr.begin();
			jule::Ptr<_211033592_EnumItem> _119621_item = *it;
			{
				if ((_119417_max == 0LLU)) {
					_211b28186_pushErr(_self_.ptr(), _119621_item.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_119417_max)--;
				};
				if (_21103397c_AutoExpr(_119621_item.ptr())) {
					_119621_item.get()._field_Value=jule::new_ptr<_211b8b392_Value>(_211b8b392_Value{._field_Data=jule::new_ptr<_211b8a319_Data>()});
					{
						
						if (_211b089e6_IsSigInt(_211bbb290_Str(_119313_prim.ptr()))) {
							_case_begin_22421cba8:;
							{
								_119621_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__21100e5b2_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((_119417_max - (_119417_max - static_cast<jule::U64>(_119614_i))))));
							}
						}
						else {
							_case_begin_22421c812:;
							{
								_119621_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__21100e6e4_NewU64(static_cast<jule::U64>((_119417_max - (_119417_max - static_cast<jule::U64>(_119614_i)))));
							}
						}
						_match_end_22421c79b:;
					};
					_119621_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_119621_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_211b8a319_Data> _121425_d = _211ba7b50_evalExpr(_119517_eval, _119621_item.get()._field_Value.get()._field_Expr);;
					if ((_121425_d == nullptr)) {
						goto _iter_next_22421a766;
					};
					if ((!(_211b8abcc_IsConst(_121425_d.ptr())))) {
						_211b28186_pushErr(_self_.ptr(), _119621_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_211b3006c_checkAssignType(_self_, false,_119242_e.get()._field_Kind.get()._field_Kind,_121425_d,_119621_item.get()._field_Token);
					_119621_item.get()._field_Value.get()._field_Data=_121425_d;
				};
			}
			_iter_next_22421a766:;
			++it;
			_119614_i++;
			goto _iter_begin_22421a766;
		}
		_iter_end_22421a766:;
	};
}



inline void _211b3446c_checkEnumDecl(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211034087_Enum>& _122738_e) {
	if (_20e7e14a0_IsIgnoreIdent(_122738_e.get()._field_Ident)) {
		_211b28186_pushErr(_self_.ptr(), _122738_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_211b28cad_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_122738_e)),_122738_e.get()._field_Ident,false)) {
		_211b28186_pushErr(_self_.ptr(), _122738_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_122738_e.get()._field_Ident)}));
		_211b284a5_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_122738_e.get()._field_Items.len() == 0LL)) {
		_211b28186_pushErr(_self_.ptr(), _122738_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_122738_e.get()._field_Ident)}));
	};
	_224224b7c_checkEnumItemsDup(_self_.ptr(), _122738_e.get()._field_Items);
	if ((_122738_e.get()._field_Kind != nullptr)) {
		if ((!(_211b2d3de_checkType(_self_, _122738_e.get()._field_Kind,jule::Trait<_211bd2086_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_122738_e.get()._field_Kind=jule::new_ptr<_211bba5ad_TypeSymbol>(_211bba5ad_TypeSymbol{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_211bbae2c_Prim> _125417_t = _211bb8567_Prim(_122738_e.get()._field_Kind.get()._field_Kind.ptr());;
	if ((_125417_t == nullptr)) {
		_211b28186_pushErr(_self_.ptr(), _122738_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_211bbe161_IsStr(_125417_t.ptr())) {
			_case_begin_22422b6cd:;
			{
				_211b33e72_checkEnumItemsStr(_self_, _122738_e);
			}
		}
		else if (_211b08c5a_IsInt(_211bbb290_Str(_125417_t.ptr()))) {
			_case_begin_22422b425:;
			{
				_211b341e7_checkEnumItemsInt(_self_, _122738_e);
			}
		}
		else {
			_case_begin_22422a8ca:;
			{
				_211b28186_pushErr(_self_.ptr(), _122738_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_22422a721:;
	};
}



inline void _211b346e2_checkTypeEnumDecl(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211035682_TypeEnum>& _127142_e) {
	if (_20e7e14a0_IsIgnoreIdent(_127142_e.get()._field_Ident)) {
		_211b28186_pushErr(_self_.ptr(), _127142_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_211b28cad_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_127142_e)),_127142_e.get()._field_Ident,false)) {
		_211b28186_pushErr(_self_.ptr(), _127142_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_127142_e.get()._field_Ident)}));
		_211b284a5_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_127142_e.get()._field_Items.len() == 0LL)) {
		_211b28186_pushErr(_self_.ptr(), _127142_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_127142_e.get()._field_Ident)}));
		return;;
	};
	_224230935_checkEnumItemsDup(_self_.ptr(), _127142_e.get()._field_Items);
	{
		auto &expr = _127142_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_224234131:;
		if (it != expr.end()) {
			jule::Ptr<_2110350bb_TypeEnumItem> _128521_item = *it;
			{
				if ((_128521_item.get()._field_Kind == nullptr)) {
					_211b28186_pushErr(_self_.ptr(), _128521_item.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_224234131;
				};
				jule::Bool _129017_ok = _211b2d3de_checkType(_self_, _128521_item.get()._field_Kind,jule::Trait<_211bd2086_Lookup>(_self_, 3));;
				if ((!(_129017_ok))) {
					goto _iter_next_224234131;
				};
				jule::Ptr<_211bbae2c_Prim> _129417_p = _211bb8567_Prim(_128521_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_129417_p != nullptr) && _211bbe3c5_IsAny(_129417_p.ptr()))) {
					_211b28186_pushErr(_self_.ptr(), _128521_item.get()._field_Token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_224234131:;
			++it;
			goto _iter_begin_224234131;
		}
		_iter_end_224234131:;
	};
	if ((_127142_e.get()._field_Items.len() == 1LL)) {
		jule::Ptr<_2110350bb_TypeEnumItem> _130021_item = _127142_e.get()._field_Items[0LL];;
		_211bb6455_TypeKind _130117_tk = _211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_127142_e, 4)};;
		if (((_130021_item.get()._field_Kind.get()._field_Kind != nullptr) && _211bb6b5e_Equals(_130021_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_211bb6455_TypeKind>)((&(_130117_tk))))))) {
			_211b28186_pushErr(_self_.ptr(), _130021_item.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_2110359b2_Str(_127142_e.ptr()))}));
		};
	};
}



inline jule::Bool _211b34956_checkEnumDecls(jule::Ptr<_211b254c4_Sema> _self_) {
	jule::Bool _131136_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Enums;
		auto it = expr.begin();
		_iter_begin_22423a621:;
		if (it != expr.end()) {
			jule::Ptr<_211034087_Enum> _131221_e = *it;
			{
				_211b3446c_checkEnumDecl(_self_, _131221_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_131136_ok = false;
					return _131136_ok;
				};
			}
			_iter_next_22423a621:;
			++it;
			goto _iter_begin_22423a621;
		}
		_iter_end_22423a621:;
	};
	_131136_ok = true;
	return _131136_ok;
}



inline jule::Bool _211b34bba_checkTypeEnumDecls(jule::Ptr<_211b254c4_Sema> _self_) {
	jule::Bool _132340_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_22423bd4d:;
		if (it != expr.end()) {
			jule::Ptr<_211035682_TypeEnum> _132421_e = *it;
			{
				_211b346e2_checkTypeEnumDecl(_self_, _132421_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_132340_ok = false;
					return _132340_ok;
				};
			}
			_iter_next_22423bd4d:;
			++it;
			goto _iter_begin_22423bd4d;
		}
		_iter_end_22423bd4d:;
	};
	_132340_ok = true;
	return _132340_ok;
}



inline jule::Bool _211b34ec8_checkDeclGenerics(_211b254c4_Sema* _self_, jule::Slice<jule::Ptr<_210e5e688_GenericDecl>>& _133437_generics) {
	jule::Bool _133470_ok = jule::Bool();
	_133470_ok=true;
	{
		auto &expr = _133437_generics;
		auto it = expr.begin();
		_iter_begin_22423d6ce:;
		if (it != expr.end()) {
			jule::I64 _133613_i = it - expr.begin();
			jule::Ptr<_210e5e688_GenericDecl> &_133616_g = *it;
			{
				if (_20e7e14a0_IsIgnoreIdent(_133616_g.get()._field_Ident)) {
					_211b28186_pushErr(&(*_self_), _133616_g.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_133470_ok=false;
					goto _iter_next_22423d6ce;
				};
				_julec_label_duplicationLookup:;
				{
					auto &expr = _133437_generics;
					auto it = expr.begin();
					_iter_begin_224240307:;
					if (it != expr.end()) {
						jule::I64 _134517_j = it - expr.begin();
						jule::Ptr<_210e5e688_GenericDecl> &_134520_ct = *it;
						{
							{
								
								if ((_134517_j >= _133613_i)) {
									_case_begin_22424110a:;
									{
										goto _iter_end_224240307;
									}
								}
								else if ((_133616_g.get()._field_Ident == _134520_ct.get()._field_Ident)) {
									_case_begin_224241182:;
									{
										_211b28186_pushErr(&(*_self_), _133616_g.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_133616_g.get()._field_Ident)}));
										_211b284a5_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_133470_ok=false;
										goto _iter_end_224240307;
									}
								}
								_match_end_224240ed9:;
							};
						}
						_iter_next_224240307:;
						++it;
						_134517_j++;
						goto _iter_begin_224240307;
					}
					_iter_end_224240307:;
				};
			}
			_iter_next_22423d6ce:;
			++it;
			_133613_i++;
			goto _iter_begin_22423d6ce;
		}
		_iter_end_22423d6ce:;
	};
	return _133470_ok;
}



inline jule::Bool _211b352d6_checkFnDeclParamsDup(_211b254c4_Sema* _self_, jule::Ptr<_211020084_Fn>& _136140_f) {
	jule::Bool _136150_ok = jule::Bool();
	_136150_ok=true;
	_julec_label_check:;
	{
		auto &expr = _136140_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_22424356e:;
		if (it != expr.end()) {
			jule::I64 _136413_i = it - expr.begin();
			jule::Ptr<_21101d747_Param> &_136416_p = *it;
			{
				{
					auto &expr = _136140_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_2242442ea:;
					if (it != expr.end()) {
						jule::Ptr<_210e5e688_GenericDecl> &_136620_g = *it;
						{
							if ((_136416_p.get()._field_Ident == _136620_g.get()._field_Ident)) {
								_136150_ok=false;
								_211b28186_pushErr(&(*_self_), _136416_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136416_p.get()._field_Ident)}));
								_211b284a5_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_22424356e;
							};
						}
						_iter_next_2242442ea:;
						++it;
						goto _iter_begin_2242442ea;
					}
					_iter_end_2242442ea:;
				};
				_julec_label_paramsLookup:;
				{
					auto &expr = _136140_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_22424477e:;
					if (it != expr.end()) {
						jule::I64 _137617_j = it - expr.begin();
						jule::Ptr<_21101d747_Param> &_137620_jp = *it;
						{
							{
								
								if ((_137617_j >= _136413_i)) {
									_case_begin_224246b16:;
									{
										goto _iter_end_22424477e;
									}
								}
								else if ((_20e7e1747_IsAnonIdent(_136416_p.get()._field_Ident) || _20e7e1747_IsAnonIdent(_137620_jp.get()._field_Ident))) {
									_case_begin_224246b8d:;
									{
										goto _iter_end_22424477e;
									}
								}
								else if ((_136416_p.get()._field_Ident == _137620_jp.get()._field_Ident)) {
									_case_begin_224246c15:;
									{
										_136150_ok=false;
										_211b28186_pushErr(&(*_self_), _136416_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136416_p.get()._field_Ident)}));
										_211b284a5_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_22424356e;
									}
								}
								_match_end_2242469d4:;
							};
						}
						_iter_next_22424477e:;
						++it;
						_137617_j++;
						goto _iter_begin_22424477e;
					}
					_iter_end_22424477e:;
				};
			}
			_iter_next_22424356e:;
			++it;
			_136413_i++;
			goto _iter_begin_22424356e;
		}
		_iter_end_22424356e:;
	};
	return _136150_ok;
}



inline jule::Bool _211b355e4_checkFnDeclResultDup(_211b254c4_Sema* _self_, jule::Ptr<_211020084_Fn>& _139540_f) {
	jule::Bool _139550_ok = jule::Bool();
	_139550_ok=true;
	if (_2110204e6_IsVoid(_139540_f.ptr())) {
		return _139550_ok;
	};
	{
		auto &expr = _139540_f.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_224249883:;
		if (it != expr.end()) {
			jule::I64 _140213_i = it - expr.begin();
			jule::Ptr<_20e7ddc0b_Token> &_140216_v = *it;
			{
				if ((_20e7e14a0_IsIgnoreIdent(_140216_v.get()._field_Kind) || _20e7e1747_IsAnonIdent(_140216_v.get()._field_Kind))) {
					goto _iter_next_224249883;
				};
				{
					auto &expr = _139540_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_22424b115:;
					if (it != expr.end()) {
						jule::Ptr<_210e5e688_GenericDecl> &_140720_g = *it;
						{
							if ((_140216_v.get()._field_Kind == _140720_g.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_22424b115:;
						++it;
						goto _iter_begin_22424b115;
					}
					_iter_end_22424b115:;
				};
				{
					auto &expr = _139540_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_22424c3d0:;
					if (it != expr.end()) {
						jule::Ptr<_21101d747_Param> &_141320_p = *it;
						{
							if ((_140216_v.get()._field_Kind == _141320_p.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_22424c3d0:;
						++it;
						goto _iter_begin_22424c3d0;
					}
					_iter_end_22424c3d0:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _139540_f.get()._field_Result.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_22424d667:;
					if (it != expr.end()) {
						jule::I64 _142117_j = it - expr.begin();
						jule::Ptr<_20e7ddc0b_Token> &_142120_jv = *it;
						{
							{
								
								if ((_142117_j >= _140213_i)) {
									_case_begin_22424e46a:;
									{
										goto _iter_end_22424d667;
									}
								}
								else if ((_142120_jv.get()._field_Kind == _140216_v.get()._field_Kind)) {
									_case_begin_22424e4e2:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_22424e349:;
							};
						}
						_iter_next_22424d667:;
						++it;
						_142117_j++;
						goto _iter_begin_22424d667;
					}
					_iter_end_22424d667:;
				};
				goto _iter_next_224249883;
				_julec_label_exist:;
				_211b28186_pushErr(&(*_self_), _140216_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_140216_v.get()._field_Kind)}));
				_211b284a5_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_139550_ok=false;
			}
			_iter_next_224249883:;
			++it;
			_140213_i++;
			goto _iter_begin_224249883;
		}
		_iter_end_224249883:;
	};
	return _139550_ok;
}



inline void _211b35869_checkFnDeclPrototype(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211020084_Fn>& _144245_f) {
	if ((_144245_f.get()._field_Exceptional && _144245_f.get()._field_CppLinked)) {
		_211b28186_pushErr(_self_.ptr(), _144245_f.get()._field_Token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_144245_f.get()._field_Exceptional) {
		if (_2110209be_IsEntryPoint(_144245_f.ptr())) {
			_211b28186_pushErr(_self_.ptr(), _144245_f.get()._field_Token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_211020c33_IsInit(_144245_f.ptr())) {
			_211b28186_pushErr(_self_.ptr(), _144245_f.get()._field_Token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_211b34ec8_checkDeclGenerics(_self_.ptr(), _144245_f.get()._field_Generics)))) {
			_case_begin_224253c66:;
		}
		else if ((!(_211b352d6_checkFnDeclParamsDup(_self_.ptr(), _144245_f)))) {
			_case_begin_224253ccc:;
		}
		else if ((!(_211b355e4_checkFnDeclResultDup(_self_.ptr(), _144245_f)))) {
			_case_begin_224253d43:;
		}
		_match_end_224252737:;
	};
}



inline void _211b35ade_checkTraitDeclMethod(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211020084_Fn>& _146345_f) {
	if (_20e7e14a0_IsIgnoreIdent(_146345_f.get()._field_Ident)) {
		_211b28186_pushErr(_self_.ptr(), _146345_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_146345_f.get()._field_sema=_self_;
	_211b35869_checkFnDeclPrototype(_self_, _146345_f);
	jule::Ptr<_211022c35_FnIns> _147017_ins = _2110216d4_instance(_146345_f);;
	_211b3225b_reloadFnInsTypes(_self_, _147017_ins);
	_147017_ins.get()._field_reloaded=true;
	_2110219ae_appendInstance(_146345_f.ptr(), _147017_ins);
}



inline void _211b35d64_checkTraitDeclMethods(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211031e42_Trait>& _147646_t) {
	{
		auto &expr = _147646_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_224257451:;
		if (it != expr.end()) {
			jule::I64 _147714_i = it - expr.begin();
			jule::Ptr<_211020084_Fn> _147721_f = *it;
			{
				_211b35ade_checkTraitDeclMethod(_self_, _147721_f);
				_147646_t.get()._field_Mutable=(_147646_t.get()._field_Mutable || _147721_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicateLookup:;
				{
					auto &expr = _147646_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_2242592aa:;
					if (it != expr.end()) {
						jule::I64 _148817_j = it - expr.begin();
						jule::Ptr<_211020084_Fn> _148820_jf = *it;
						{
							{
								
								if ((_148817_j >= _147714_i)) {
									_case_begin_22425a3bb:;
									{
										goto _iter_end_2242592aa;
									}
								}
								else if ((_147721_f.get()._field_Ident == _148820_jf.get()._field_Ident)) {
									_case_begin_22425a443:;
									{
										_211b28186_pushErr(_self_.ptr(), _147721_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_147721_f.get()._field_Ident)}));
										_211b284a5_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_2242592aa;
									}
								}
								_match_end_22425a29a:;
							};
						}
						_iter_next_2242592aa:;
						++it;
						_148817_j++;
						goto _iter_begin_2242592aa;
					}
					_iter_end_2242592aa:;
				};
			}
			_iter_next_224257451:;
			++it;
			_147714_i++;
			goto _iter_begin_224257451;
		}
		_iter_end_224257451:;
	};
}



inline void _211b360d9_checkTraitDecl(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211031e42_Trait>& _150739_t) {
	if (_20e7e14a0_IsIgnoreIdent(_150739_t.get()._field_Ident)) {
		_211b28186_pushErr(_self_.ptr(), _150739_t.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_211b28cad_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_150739_t)),_150739_t.get()._field_Ident,false)) {
		_211b28186_pushErr(_self_.ptr(), _150739_t.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_150739_t.get()._field_Ident)}));
		_211b284a5_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_211b35d64_checkTraitDeclMethods(_self_, _150739_t);
}



inline jule::Bool _211b3634d_checkTraitDecls(jule::Ptr<_211b254c4_Sema> _self_) {
	jule::Bool _151937_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_22425e513:;
		if (it != expr.end()) {
			jule::Ptr<_211031e42_Trait> _152021_t = *it;
			{
				_211b360d9_checkTraitDecl(_self_, _152021_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_151937_ok = false;
					return _151937_ok;
				};
			}
			_iter_next_22425e513:;
			++it;
			goto _iter_begin_22425e513;
		}
		_iter_end_22425e513:;
	};
	_151937_ok = true;
	return _151937_ok;
}



inline jule::Bool _211b36705_checkTraitImplMethods(_211b254c4_Sema* _self_, jule::Ptr<_211031e42_Trait>& _153045_base, jule::Ptr<_2110b6658_Impl>& _153060_ipl) {
	jule::Bool _153074_ok = jule::Bool();
	_153074_ok=true;
	{
		auto &expr = _153060_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_2242612d4:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> &_153216_f = *it;
			{
				if ((_211032cbc_FindMethod(_153045_base.ptr(), _153216_f.get()._field_Ident) == nullptr)) {
					_211b28186_pushErr(&(*_self_), _153216_f.get()._field_Token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_153045_base.get()._field_Ident),jule::Any(_153216_f.get()._field_Ident)}));
					_153074_ok=false;
				};
			}
			_iter_next_2242612d4:;
			++it;
			goto _iter_begin_2242612d4;
		}
		_iter_end_2242612d4:;
	};
	return _153074_ok;
}



inline jule::Bool _211b36aac_implToStruct(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e427d1_Struct>& _154137_dest, jule::Ptr<_2110b6658_Impl>& _154157_ipl) {
	jule::Bool _154171_ok = jule::Bool();
	_154171_ok=true;
	{
		auto &expr = _154157_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_22426369e:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> _154521_f = *it;
			{
				if (((_210e2de4e_FindMethod(_154137_dest.ptr(), _154521_f.get()._field_Ident,_154521_f.get()._field_Statically) != nullptr) || (_210e32c11_FindField(_154137_dest.ptr(), _154521_f.get()._field_Ident) != nullptr))) {
					_211b28186_pushErr(_self_.ptr(), _154521_f.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154137_dest.get()._field_Ident),jule::Any(_154521_f.get()._field_Ident)}));
					_154171_ok=false;
					goto _iter_next_22426369e;
				};
				if (((_154137_dest.get()._field_Generics.len() > 0LL) && (_154521_f.get()._field_Generics.len() > 0LL))) {
					{
						auto &expr = _154521_f.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_224265d55:;
						if (it != expr.end()) {
							jule::Ptr<_210e5e688_GenericDecl> _155324_fg = *it;
							{
								{
									auto &expr = _154137_dest.get()._field_Generics;
									auto it = expr.begin();
									_iter_begin_2242666a2:;
									if (it != expr.end()) {
										jule::Ptr<_210e5e688_GenericDecl> _155428_dg = *it;
										{
											if ((_155324_fg.get()._field_Ident == _155428_dg.get()._field_Ident)) {
												_211b28186_pushErr(_self_.ptr(), _155324_fg.get()._field_Token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_154171_ok=false;
											};
										}
										_iter_next_2242666a2:;
										++it;
										goto _iter_begin_2242666a2;
									}
									_iter_end_2242666a2:;
								};
							}
							_iter_next_224265d55:;
							++it;
							goto _iter_begin_224265d55;
						}
						_iter_end_224265d55:;
					};
				};
				_211b290cc_checkDirectives(_self_, _154521_f.get()._field_Directives,jule::Any(_154521_f));
				_154521_f.get()._field_sema=_self_;
				_154521_f.get()._field_Owner=_154137_dest;
				_154137_dest.get()._field_Methods = jule::alloc_for_append(_154137_dest.get()._field_Methods,1);_154137_dest.get()._field_Methods.__push(_154521_f);;
			}
			_iter_next_22426369e:;
			++it;
			goto _iter_begin_22426369e;
		}
		_iter_end_22426369e:;
	};
	{
		auto &expr = _154157_ipl.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_22426864e:;
		if (it != expr.end()) {
			jule::Ptr<_211b43228_Var> _157021_v = *it;
			{
				;
				if (((_210e2de4e_FindMethod(_154137_dest.ptr(), _157021_v.get()._field_Ident,true) != nullptr) || (_210e31bee_FindStatic(_154137_dest.ptr(), _157021_v.get()._field_Ident) != nullptr))) {
					_211b28186_pushErr(_self_.ptr(), _157021_v.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154137_dest.get()._field_Ident),jule::Any(_157021_v.get()._field_Ident)}));
					_154171_ok=false;
					goto _iter_next_22426864e;
				};
				_154137_dest.get()._field_Statics = jule::alloc_for_append(_154137_dest.get()._field_Statics,1);_154137_dest.get()._field_Statics.__push(_157021_v);;
			}
			_iter_next_22426864e:;
			++it;
			goto _iter_begin_22426864e;
		}
		_iter_end_22426864e:;
	};
	return _154171_ok;
}



inline void _211b36d32_implTrait(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_2110b6658_Impl>& _158334_decl) {
	jule::Ptr<_211bb6455_TypeKind> _158417_base_t = _211b2de5b_selectType(_self_, _158334_decl.get()._field_Base);;
	if ((_158417_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_211031e42_Trait> _158817_base = _211bb9c2d_Trait(_158417_base_t.ptr());;
	if ((_158817_base == nullptr)) {
		_211b28186_pushErr(_self_.ptr(), _158334_decl.get()._field_Base.get()._field_Token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_158417_base_t.ptr()))}));
		_211b284a5_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_211bb6455_TypeKind> _159517_destT = _211b2de5b_selectType(_self_, _158334_decl.get()._field_Dest);;
	if ((_159517_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_210e6db2b_StructIns> _159917_destS = _211bb99b9_Struct(_159517_destT.ptr());;
	if ((_159917_destS == nullptr)) {
		_211b28186_pushErr(_self_.ptr(), _158334_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_159517_destT.ptr()))}));
		_211b284a5_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_210e427d1_Struct> _160617_dest = _159917_destS.get()._field_Decl;;
	if ((_20e7e498c_Dir(_160617_dest.get()._field_Token.get()._field_File.ptr()) != _20e7e498c_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_211b28186_pushErr(_self_.ptr(), _158334_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_158817_base.get()._field_Implemented = jule::alloc_for_append(_158817_base.get()._field_Implemented,1);_158817_base.get()._field_Implemented.__push(_160617_dest);;
	_160617_dest.get()._field_Implements = jule::alloc_for_append(_160617_dest.get()._field_Implements,1);_160617_dest.get()._field_Implements.__push(_158817_base);;
	if ((_158334_decl.get()._field_Statics.len() > 0LL)) {
		_211b28186_pushErr(_self_.ptr(), _158334_decl.get()._field_Statics[0LL].get()._field_Token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_211b36705_checkTraitImplMethods(_self_.ptr(), _158817_base,_158334_decl)))) {
			_case_begin_224273bed:;
			{
				return;;
			}
		}
		else if ((!(_211b36aac_implToStruct(_self_, _160617_dest,_158334_decl)))) {
			_case_begin_224273c64:;
			{
				return;;
			}
		}
		_match_end_2242716ce:;
	};
}



inline void _211b370a7_implStruct(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_2110b6658_Impl>& _162835_decl) {
	jule::Ptr<_211bb6455_TypeKind> _162917_destT = _211b2de5b_selectType(_self_, _162835_decl.get()._field_Dest);;
	if ((_162917_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_210e6db2b_StructIns> _163317_destS = _211bb99b9_Struct(_162917_destT.ptr());;
	if ((_163317_destS == nullptr)) {
		_211b28186_pushErr(_self_.ptr(), _162835_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_162917_destT.ptr()))}));
		_211b284a5_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_210e427d1_Struct> _164017_dest = _163317_destS.get()._field_Decl;;
	if ((_20e7e498c_Dir(_164017_dest.get()._field_Token.get()._field_File.ptr()) != _20e7e498c_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_211b28186_pushErr(_self_.ptr(), _162835_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_211b36aac_implToStruct(_self_, _164017_dest,_162835_decl)))) {
			_case_begin_22427895b:;
			{
				return;;
			}
		}
		_match_end_22427620b:;
	};
}



inline void _211b3732c_implImpl(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_2110b6658_Impl>& _165333_decl) {
	{
		
		if (_2110965e4_IsTraitImpl(_165333_decl.ptr())) {
			_case_begin_224279561:;
			{
				_211b36d32_implTrait(_self_, _165333_decl);
			}
		}
		else if (_211096d42_IsStructImpl(_165333_decl.ptr())) {
			_case_begin_2242795d8:;
			{
				_211b370a7_implStruct(_self_, _165333_decl);
			}
		}
		_match_end_224279440:;
	};
}



inline void _211b3764b_checkVarDecl(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211b43228_Var>& _166437_decl, jule::Trait<_211bd2086_Lookup> _166453_l) {
	if (_20e7e14a0_IsIgnoreIdent(_166437_decl.get()._field_Ident)) {
		_211b28186_pushErr(_self_.ptr(), _166437_decl.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_211b43844_IsTypeInferred(_166437_decl.ptr())) {
		if ((!(_211b435d0_IsInitialized(_166437_decl.ptr())))) {
			_211b28186_pushErr(_self_.ptr(), _166437_decl.get()._field_Token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_211b2d3de_checkType(_self_, _166437_decl.get()._field_Kind,_166453_l);
	};
	if ((_166437_decl.get()._field_Constant && _166437_decl.get()._field_Reference)) {
		_211b28186_pushErr(_self_.ptr(), _166437_decl.get()._field_Token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_211b435d0_IsInitialized(_166437_decl.ptr())))) {
		if (_166437_decl.get()._field_Constant) {
			_211b28186_pushErr(_self_.ptr(), _166437_decl.get()._field_Token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_166437_decl.get()._field_Statically) {
			_211b28186_pushErr(_self_.ptr(), _166437_decl.get()._field_Token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_166437_decl.get()._field_Reference) {
			_211b28186_pushErr(_self_.ptr(), _166437_decl.get()._field_Token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _211b378c1_checkGlobalVarDecl(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211b43228_Var>& _169643_decl) {
	if (_211b28cad_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_169643_decl)),_169643_decl.get()._field_Ident,_169643_decl.get()._field_CppLinked)) {
		_211b28186_pushErr(_self_.ptr(), _169643_decl.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_169643_decl.get()._field_Ident)}));
		_211b284a5_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_169643_decl.get()._field_CppLinked && _169643_decl.get()._field_Constant)) {
		_211b28186_pushErr(_self_.ptr(), _169643_decl.get()._field_Token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_169643_decl.get()._field_CppLinked)) && (!(_169643_decl.get()._field_Constant))) && (!(_169643_decl.get()._field_Statically)))) {
		_211b28186_pushErr(_self_.ptr(), _169643_decl.get()._field_Token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_211b284a5_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_211b290cc_checkDirectives(_self_, _169643_decl.get()._field_Directives,jule::Any(_169643_decl));
	_211b3764b_checkVarDecl(_self_, _169643_decl,jule::Trait<_211bd2086_Lookup>(_self_, 3));
}



inline jule::Bool _211b37b35_checkGlobalDecls(jule::Ptr<_211b254c4_Sema> _self_) {
	jule::Bool _171338_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_2242843c3:;
		if (it != expr.end()) {
			jule::Ptr<_211b43228_Var> _171421_decl = *it;
			{
				_211b378c1_checkGlobalVarDecl(_self_, _171421_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_171338_ok = false;
					return _171338_ok;
				};
			}
			_iter_next_2242843c3:;
			++it;
			goto _iter_begin_2242843c3;
		}
		_iter_end_2242843c3:;
	};
	_171338_ok = true;
	return _171338_ok;
}



inline jule::Bool _211b37edc_checkStructTraitImpl(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e427d1_Struct>& _172445_strct, jule::Ptr<_211031e42_Trait>& _172466_trt) {
	jule::Bool _172481_ok = jule::Bool();
	{
		auto &expr = _172466_trt.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_224285e41:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> _172521_tf = *it;
			{
				jule::Bool _172621_exist = false;;
				jule::Ptr<_211020084_Fn> _172721_sf = _210e2de4e_FindMethod(_172445_strct.ptr(), _172521_tf.get()._field_Ident,_172521_tf.get()._field_Statically);;
				jule::Ptr<_211022c35_FnIns> _172817_tfK = _211b30e6e_getTraitCheckFnKind(_self_, _172521_tf);;
				if ((_172721_sf != nullptr)) {
					jule::Ptr<_211022c35_FnIns> _173025_sfK = _211b30e6e_getTraitCheckFnKind(_self_, _172721_sf);;
					_172621_exist=(((_172817_tfK.get()._field_Decl.get()._field_Public == _173025_sfK.get()._field_Decl.get()._field_Public) && (_172817_tfK.get()._field_Decl.get()._field_Ident == _173025_sfK.get()._field_Decl.get()._field_Ident)) && _211023ae3_equalsTrait(_172817_tfK, _173025_sfK));
				};
				if (_172621_exist) {
					jule::Ptr<_210e1d8ab_Directive> _173621_d = _211bb0b03_findDirective(_172721_sf.get()._field_Directives,jule::Str("deprecated", 10));;
					if ((_173621_d != nullptr)) {
						_211b28186_pushErr(_self_.ptr(), _173621_d.get()._field_Tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_172481_ok=false;
				} else {
					;
					jule::Str _174325_s = _21102494b_GetKindStr(_172817_tfK.ptr(), true);;
					if (_172521_tf.get()._field_Public) {
						(_174325_s).buffer.insert(0, (jule::Str()));;
					};
					_211b28186_pushErr(_self_.ptr(), _172445_strct.get()._field_Token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_172466_trt.get()._field_Ident),jule::Any(_174325_s)}));
					_172481_ok=false;
				};
			}
			_iter_next_224285e41:;
			++it;
			goto _iter_begin_224285e41;
		}
		_iter_end_224285e41:;
	};
	return _172481_ok;
}



inline jule::Bool _211b382ea_checkStructImpls(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e427d1_Struct>& _175441_s) {
	jule::Bool _175455_ok = jule::Bool();
	_175455_ok=true;
	{
		auto &expr = _175441_s.get()._field_Implements;
		auto it = expr.begin();
		_iter_begin_22428cc7d:;
		if (it != expr.end()) {
			jule::Ptr<_211031e42_Trait> _175621_trt = *it;
			{
				_175455_ok=(_211b37edc_checkStructTraitImpl(_self_, _175441_s,_175621_trt) && _175455_ok);
			}
			_iter_next_22428cc7d:;
			++it;
			goto _iter_begin_22428cc7d;
		}
		_iter_end_22428cc7d:;
	};
	return _175455_ok;
}



inline jule::Bool _211b38608_checkStructFields(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e427d1_Struct>& _176242_st) {
	jule::Bool _176257_ok = jule::Bool();
	_176257_ok=true;
	{
		auto &expr = _176242_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_22428e1be:;
		if (it != expr.end()) {
			jule::Ptr<_210e34c9b_Field> _176421_f = *it;
			{
				_176421_f.get()._field_Owner=_176242_st;
				{
					auto &expr = _176242_st.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_22428ead7:;
					if (it != expr.end()) {
						jule::Ptr<_210e34c9b_Field> _176620_cf = *it;
						{
							if ((_176421_f == _176620_cf)) {
								goto _iter_end_22428ead7;
							} else if ((_176421_f.get()._field_Ident == _176620_cf.get()._field_Ident)) {
								_211b28186_pushErr(_self_.ptr(), _176421_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_176421_f.get()._field_Ident)}));
								_211b284a5_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_176257_ok=false;
							};
						}
						_iter_next_22428ead7:;
						++it;
						goto _iter_begin_22428ead7;
					}
					_iter_end_22428ead7:;
				};
			}
			_iter_next_22428e1be:;
			++it;
			goto _iter_begin_22428e1be;
		}
		_iter_end_22428e1be:;
	};
	return _176257_ok;
}



inline void _211b3887d_checkStructDecl(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e427d1_Struct>& _177940_s) {
	if (_20e7e14a0_IsIgnoreIdent(_177940_s.get()._field_Ident)) {
		_211b28186_pushErr(_self_.ptr(), _177940_s.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_211b28cad_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_177940_s)),_177940_s.get()._field_Ident,_177940_s.get()._field_CppLinked)) {
		_211b28186_pushErr(_self_.ptr(), _177940_s.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_177940_s.get()._field_Ident)}));
		_211b284a5_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_211b290cc_checkDirectives(_self_, _177940_s.get()._field_Directives,jule::Any(_177940_s));
	{
		
		if ((!(_211b34ec8_checkDeclGenerics(_self_.ptr(), _177940_s.get()._field_Generics)))) {
			_case_begin_224293d61:;
		}
		else if ((!(_211b38608_checkStructFields(_self_, _177940_s)))) {
			_case_begin_224293dc7:;
		}
		else if ((!(_211b382ea_checkStructImpls(_self_, _177940_s)))) {
			_case_begin_224293e3d:;
		}
		_match_end_224293c0c:;
	};
}



inline jule::Bool _211b38ae2_checkStructDecls(jule::Ptr<_211b254c4_Sema> _self_) {
	jule::Bool _179738_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_224295280:;
		if (it != expr.end()) {
			jule::Ptr<_210e427d1_Struct> _179821_s = *it;
			{
				_211b3887d_checkStructDecl(_self_, _179821_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_179738_ok = false;
					return _179738_ok;
				};
			}
			_iter_next_224295280:;
			++it;
			goto _iter_begin_224295280;
		}
		_iter_end_224295280:;
	};
	_179738_ok = true;
	return _179738_ok;
}



inline void _211b38d67_checkFnDecl(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211020084_Fn>& _180836_f) {
	if (_20e7e14a0_IsIgnoreIdent(_180836_f.get()._field_Ident)) {
		_211b28186_pushErr(_self_.ptr(), _180836_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_211b290cc_checkDirectives(_self_, _180836_f.get()._field_Directives,jule::Any(_180836_f));
	_180836_f.get()._field_sema=_self_;
	_211b35869_checkFnDeclPrototype(_self_, _180836_f);
	if (_211b28cad_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_180836_f)),_180836_f.get()._field_Ident,_180836_f.get()._field_CppLinked)) {
		if ((_180836_f.get()._field_Ident == jule::Str("init", 4))) {
			jule::Ptr<_211020084_Fn> _182021_init = _211b26cbc_FindFn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_182021_init != nullptr)) {
				return;;
			};
		};
		_211b28186_pushErr(_self_.ptr(), _180836_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_180836_f.get()._field_Ident)}));
		_211b284a5_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _211b390cb_checkFnDecls(jule::Ptr<_211b254c4_Sema> _self_) {
	jule::Bool _183134_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_22429a61a:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> _183221_f = *it;
			{
				_211b38d67_checkFnDecl(_self_, _183221_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_183134_ok = false;
					return _183134_ok;
				};
			}
			_iter_next_22429a61a:;
			++it;
			goto _iter_begin_22429a61a;
		}
		_iter_end_22429a61a:;
	};
	_183134_ok = true;
	return _183134_ok;
}



inline void _211b39494_pushCycleError(_211b254c4_Sema* _self_, jule::Ptr<_210e427d1_Struct>& _184230_st1, jule::Ptr<_210e427d1_Struct>& _184245_st2, jule::Str& _184264_message) {
	;
	jule::Str _184413_refers_to = _20e4ba7b7_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_184230_st1.get()._field_Ident),jule::Any(_184245_st2.get()._field_Ident)}));;
	(_184264_message).buffer.insert(0, (((_20e437ed7_Repeat(jule::Str(" ", 1),4LL) + _184413_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _211b398e5_checkCrossCycle(_211b254c4_Sema* _self_, jule::Ptr<_210e427d1_Struct>& _184831_st1, jule::Ptr<_210e427d1_Struct>& _184846_st2, jule::Str& _184865_message) {
	{
		auto &expr = _184846_st2.get()._field_Uses;
		auto it = expr.begin();
		_iter_begin_22429dc28:;
		if (it != expr.end()) {
			jule::Ptr<_210e427d1_Struct> &_184916_u = *it;
			{
				if ((_184916_u == _184831_st1)) {
					_211b39494_pushCycleError(&(*_self_), _184846_st2,_184916_u,_184865_message);
					return false;
				};
				if ((!(_211b398e5_checkCrossCycle(&(*_self_), _184831_st1,_184916_u,_184865_message)))) {
					_211b39494_pushCycleError(&(*_self_), _184846_st2,_184916_u,_184865_message);
					return false;
				};
			}
			_iter_next_22429dc28:;
			++it;
			goto _iter_begin_22429dc28;
		}
		_iter_end_22429dc28:;
	};
	return true;
}



inline jule::Bool _211b39d68_checkStructDeriveIllegalCycles(_211b254c4_Sema* _self_, jule::Str _186349_derive, jule::Ptr<_210e427d1_Struct>& _186363_st1, jule::Ptr<_211bb6455_TypeKind>& _186382_k) {
	jule::Bool _186398_ok = jule::Bool();
	jule::Ptr<_210e427d1_Struct> _186417_st2 = _211bce69e_getStructFromKind(_186382_k);;
	if ((_186417_st2 == nullptr)) {
		_186398_ok = true;
		return _186398_ok;
	};
	if ((_186363_st1 == _186417_st2)) {
		_211b28186_pushErr(&(*_self_), _186363_st1.get()._field_Token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_186349_derive),jule::Any(_186363_st1.get()._field_Ident)}));
		_186398_ok = false;
		return _186398_ok;
	};
	jule::Str _187617_message = jule::Str();;
	if ((!(_211b398e5_checkCrossCycle(&(*_self_), _186363_st1,_186417_st2,_187617_message)))) {
		jule::Str _187821_errMsg = _187617_message;;
		_187617_message=jule::Str();
		_211b39494_pushCycleError(&(*_self_), _186363_st1,_186417_st2,_187617_message);
		_187821_errMsg+=_187617_message;
		_211b28186_pushErr(&(*_self_), _186363_st1.get()._field_Token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_186349_derive),jule::Any(_187821_errMsg)}));
		_186398_ok = false;
		return _186398_ok;
	};
	_186398_ok = true;
	return _186398_ok;
}



inline jule::Bool _211b3a1a9_checkStructInsDeriveClone(_211b254c4_Sema* _self_, jule::Ptr<_210e6db2b_StructIns> _188848_st) {
	jule::Bool _188866_ok = jule::Bool();
	if ((!(_210e3442c_IsDerives(_188848_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		_188866_ok = true;
		return _188866_ok;
	};
	{
		auto &expr = _188848_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_2242a4c73:;
		if (it != expr.end()) {
			jule::Ptr<_210e49e48_FieldIns> _189221_f = *it;
			{
				if ((_189221_f.get()._field_Kind == nullptr)) {
					goto _iter_next_2242a4c73;
				};
				if ((!(_211bb808e_SupportsCloning(_189221_f.get()._field_Kind.ptr())))) {
					_211b28186_pushErr(&(*_self_), _188848_st.get()._field_Decl.get()._field_Token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_189221_f.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_188866_ok = false;
					return _188866_ok;
				};
				if ((!(_211b39d68_checkStructDeriveIllegalCycles(&(*_self_), jule::Str("Clone", 5),_188848_st.get()._field_Decl,_189221_f.get()._field_Kind)))) {
					_188866_ok = false;
					return _188866_ok;
				};
			}
			_iter_next_2242a4c73:;
			++it;
			goto _iter_begin_2242a4c73;
		}
		_iter_end_2242a4c73:;
	};
	_188866_ok = true;
	return _188866_ok;
}



inline void _211b3a396_checkPackageDecls(jule::Ptr<_211b254c4_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_2242a7c76:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _191021_f = *it;
			{
				_211b27cbd_setCurrentFile(_self_.ptr(), _191021_f);
				if ((!(_211b34bba_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_211b33977_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_2242a7c76:;
			++it;
			goto _iter_begin_2242a7c76;
		}
		_iter_end_2242a7c76:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_2242a821b:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _192021_f = *it;
			{
				_211b27cbd_setCurrentFile(_self_.ptr(), _192021_f);
				if ((!(_211b3634d_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_2242a821b:;
			++it;
			goto _iter_begin_2242a821b;
		}
		_iter_end_2242a821b:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_2242a9360:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _192721_f = *it;
			{
				_211b27cbd_setCurrentFile(_self_.ptr(), _192721_f);
				if ((!(_211b37b35_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_2242a9360:;
			++it;
			goto _iter_begin_2242a9360;
		}
		_iter_end_2242a9360:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_2242ab076:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _193421_f = *it;
			{
				_211b27cbd_setCurrentFile(_self_.ptr(), _193421_f);
				{
					
					if ((!(_211b390cb_checkFnDecls(_self_)))) {
						_case_begin_2242abb37:;
					}
					else if ((!(_211b38ae2_checkStructDecls(_self_)))) {
						_case_begin_2242abb9d:;
					}
					else {
						_case_begin_2242abac1:;
						{
							goto _iter_next_2242ab076;
						}
					}
					_match_end_2242aba5a:;
				};
				return;;
			}
			_iter_next_2242ab076:;
			++it;
			goto _iter_begin_2242ab076;
		}
		_iter_end_2242ab076:;
	};
}



inline void _211b3a6d7_checkDataForTypeInference(_211b254c4_Sema* _self_, jule::Ptr<_211b8a319_Data>& _194645_d, jule::Ptr<_20e7ddc0b_Token>& _194656_err_token) {
	{
		
		if (_211b8a704_IsNil(_194645_d.ptr())) {
			_case_begin_2242acb7c:;
			{
				_211b28186_pushErr(&(*_self_), _194656_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_211b8a968_IsVoid(_194645_d.ptr())) {
			_case_begin_2242acc04:;
			{
				_211b28186_pushErr(&(*_self_), _194656_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_194645_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_2242acc7b:;
			{
				_211b28186_pushErr(&(*_self_), _194656_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_2242aca4a:;
	};
}



inline void _211b3a96d_checkVar(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211b43228_Var>& _195733_v) {
	if (_195733_v.get()._field_CppLinked) {
		return;;
	};
	if (_211b43844_IsTypeInferred(_195733_v.ptr())) {
		_195733_v.get()._field_Kind=jule::new_ptr<_211bba5ad_TypeSymbol>(_211bba5ad_TypeSymbol{._field_Kind=_195733_v.get()._field_Value.get()._field_Data.get()._field_Kind});
		_211b3a6d7_checkDataForTypeInference(_self_.ptr(), _195733_v.get()._field_Value.get()._field_Data,_195733_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		_211b32ca6_checkValidityForInitExpr(_self_, _195733_v.get()._field_Mutable,_195733_v.get()._field_Reference,_195733_v.get()._field_Kind.get()._field_Kind,_195733_v.get()._field_Value.get()._field_Data,_195733_v.get()._field_Value.get()._field_Expr.get()._field_Token);
	} else {
		jule::Ptr<_211bc22b8_Arr> _197421_arr = _211bb927c_Arr(_195733_v.get()._field_Kind.get()._field_Kind.ptr());;
		if ((_197421_arr != nullptr)) {
			if (_197421_arr.get()._field_Auto) {
				jule::Ptr<_211bc22b8_Arr> _197725_dataArr = _211bb927c_Arr(_195733_v.get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_197725_dataArr != nullptr)) {
					_197421_arr.get()._field_N=_197725_dataArr.get()._field_N;
				};
			};
		};
		if (_211b3006c_checkAssignType(_self_, _195733_v.get()._field_Reference,_195733_v.get()._field_Kind.get()._field_Kind,_195733_v.get()._field_Value.get()._field_Data,_195733_v.get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_211b32ca6_checkValidityForInitExpr(_self_, _195733_v.get()._field_Mutable,_195733_v.get()._field_Reference,_195733_v.get()._field_Kind.get()._field_Kind,_195733_v.get()._field_Value.get()._field_Data,_195733_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		};
	};
	if ((_195733_v.get()._field_Reference && (!(_211bcda11_isValidForRef(_195733_v.get()._field_Kind.get()._field_Kind))))) {
		_211b28186_pushErr(_self_.ptr(), _195733_v.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_195733_v.get()._field_Kind.get()._field_Kind.ptr()))}));
	};
	if (_195733_v.get()._field_Constant) {
		if ((!(_211b8abcc_IsConst(_195733_v.get()._field_Value.get()._field_Data.ptr())))) {
			_211b28186_pushErr(_self_.ptr(), _195733_v.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_195733_v.get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_211bba206_Tup(_195733_v.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		_195733_v.get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _211b3ac8c_checkTypeVar(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211b43228_Var>& _201237_decl, jule::Trait<_211bd2086_Lookup> _201253_l) {
	if ((_201237_decl.get()._field_CppLinked || (!(_211b435d0_IsInitialized(_201237_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_211b8bd87_Eval> _201717_eval = nullptr;;
	if ((_201237_decl.get()._field_Kind != nullptr)) {
		_201717_eval=_211b2e3ac_evalpd(_self_, _201253_l,_201237_decl.get()._field_Kind.get()._field_Kind,_201237_decl);
	} else {
		_201717_eval=_211b2e3ac_evalpd(_self_, _201253_l,nullptr,_201237_decl);
	};
	_201717_eval.get()._field_immutable=(!(_201237_decl.get()._field_Mutable));
	_201237_decl.get()._field_Value.get()._field_Data=_211ba7b50_evalExpr(_201717_eval, _201237_decl.get()._field_Value.get()._field_Expr);
	if ((_201237_decl.get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_211b3a96d_checkVar(_self_, _201237_decl);
}



inline void _211b3ae68_checkGlobalTypes(jule::Ptr<_211b254c4_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_2242bc6e7:;
		if (it != expr.end()) {
			jule::Ptr<_211b43228_Var> _203321_decl = *it;
			{
				if (((_211b435d0_IsInitialized(_203321_decl.ptr()) && (_203321_decl.get()._field_Value.get()._field_Data == nullptr)) || (_211b43844_IsTypeInferred(_203321_decl.ptr()) && (_203321_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_211b3ac8c_checkTypeVar(_self_, _203321_decl,jule::Trait<_211bd2086_Lookup>(_self_, 3));
				};
			}
			_iter_next_2242bc6e7:;
			++it;
			goto _iter_begin_2242bc6e7;
		}
		_iter_end_2242bc6e7:;
	};
}



inline jule::Ptr<_211022c35_FnIns> _211b3b320_readyToCheckFn(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e6db2b_StructIns>& _204439_s, jule::Ptr<_211020084_Fn>& _204459_f) {
	jule::Ptr<_211022c35_FnIns> _204517_ins = _2110216d4_instance(_204459_f);;
	if ((_204459_f.get()._field_Instances.len() != 0LL)) {
		return _204517_ins;
	};
	_204517_ins.get()._field_Owner=_204439_s;
	_2110219ae_appendInstance(_204459_f.ptr(), _204517_ins);
	_204517_ins.get()._field_reloaded=true;
	if (_211b3225b_reloadFnInsTypes(_self_, _204517_ins)) {
		return _204517_ins;
	};
	return nullptr;
}



inline void _211b3b63e_checkTypeMethod(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e6db2b_StructIns>& _205840_s, jule::Ptr<_211020084_Fn>& _205860_f) {
	if ((_205860_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_211022c35_FnIns> _206317_ins = _205860_f.get()._field_Instances[0LL];;
	if ((_206317_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_211b3dd17_checkFnIns(_self_, _206317_ins);
}



inline jule::Ptr<_211022c35_FnIns> _211b3ba90_checkStructInsOp(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e6db2b_StructIns>& _207141_s, jule::Ptr<_211020084_Fn>& _207161_f, jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)> _207169_p) {
	if ((((_207161_f == nullptr) || (_207161_f.get()._field_Generics.len() > 0LL)) || (!(_207169_p(_207161_f))))) {
		return nullptr;
	};
	return _207161_f.get()._field_Instances[0LL];
}



inline jule::Bool _211b3be47_checkStructEnv(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e6db2b_StructIns>& _208139_s, jule::Ptr<_20e7ddc0b_Token> _208158_errorToken) {
	jule::Bool _208180_ok = jule::Bool();
	_211bc4980_typeChecker _208217_tc = _211bc4980_typeChecker{._field_s=_208139_s.get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_211bd2086_Lookup>(_208139_s.get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_211bd2086_Lookup>(_208139_s.get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_211bc3b6b_referencer>(_211bc3b6b_referencer{._field_ident=_208139_s.get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any(_208139_s.get()._field_Decl), }), ._field_refers=_208139_s.get()._field_Refers, };;
	if ((_208139_s.get()._field_Generics.len() > 0LL)) {
		_208217_tc._field_useGenerics=jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>::alloc(0LL,_208139_s.get()._field_Generics.len());
		{
			auto &expr = _208139_s.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_2242c6bb8:;
			if (it != expr.end()) {
				jule::I64 _209518_i = it - expr.begin();
				jule::Ptr<_211bb4c28_InsGeneric> _209525_g = *it;
				{
					jule::Ptr<_210e5e688_GenericDecl> _209625_decl = _208139_s.get()._field_Decl.get()._field_Generics[_209518_i];;
					_208217_tc._field_useGenerics = jule::alloc_for_append(_208217_tc._field_useGenerics,1);_208217_tc._field_useGenerics.__push(jule::new_ptr<_211bb5762_TypeAlias>(_211bb5762_TypeAlias{._field_Token=_209625_decl.get()._field_Token, ._field_Ident=_209625_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_211bba5ad_TypeSymbol>(_211bba5ad_TypeSymbol{._field_Kind=_209525_g.get()._field_Kind}), }));;
				}
				_iter_next_2242c6bb8:;
				++it;
				_209518_i++;
				goto _iter_begin_2242c6bb8;
			}
			_iter_end_2242c6bb8:;
		};
	};
	jule::Ptr<_211b855ab_SymbolTable> _210517_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_211b27cbd_setCurrentFile(_self_.ptr(), _210517_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != _208139_s.get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_211b855ab_SymbolTable> _210921_file = _211b24acd_findFile(_self_.get()._field_files,_208139_s.get()._field_Decl.get()._field_Token.get()._field_File);;
		if ((_210921_file != nullptr)) {
			_211b27cbd_setCurrentFile(_self_.ptr(), _210921_file);
		};
	};
	if ((_208139_s.get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_21104d27c_constraintChecker> _211621_cc = _211b2d037_constraintChecker(_self_);;
		_211621_cc.get()._field_et=_208158_errorToken;
		_211621_cc.get()._field_si=_208139_s;
		_211621_cc.get()._field_genericsA=_208217_tc._field_useGenerics;
		_211621_cc.get()._field_uniq=true;
		if ((!(_2110930b3_check(_211621_cc)))) {
			return _208180_ok;
		};
	};
	_208180_ok=true;
	if ((_208139_s.get()._field_Statics.len() > 0LL)) {
		jule::I64 _212921_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_208217_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto &expr = _208139_s.get()._field_Statics;
			auto it = expr.begin();
			_iter_begin_2242ce660:;
			if (it != expr.end()) {
				jule::Ptr<_211b43228_Var> _213125_v = *it;
				{
					_211b3764b_checkVarDecl(_self_, _213125_v,jule::Trait<_211bd2086_Lookup>(_self_, 3));
					_211b3ac8c_checkTypeVar(_self_, _213125_v,jule::Trait<_211bd2086_Lookup>(_self_, 3));
					_208180_ok=(((_self_.get()._field_errors.len() - _212921_n) == 0LL) && _208180_ok);
				}
				_iter_next_2242ce660:;
				++it;
				goto _iter_begin_2242ce660;
			}
			_iter_end_2242ce660:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_208217_tc._field_useGenerics.len());
		if ((!(_208180_ok))) {
			_208180_ok = false;
			return _208180_ok;
		};
	};
	jule::Ptr<_211b8bd87_Eval> _214217_eval = _211b2ea72_eval(_self_, jule::Trait<_211bd2086_Lookup>(_self_, 3));;
	{
		auto &expr = _208139_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_2242d2025:;
		if (it != expr.end()) {
			jule::Ptr<_210e49e48_FieldIns> _214321_f = *it;
			{
				jule::Ptr<_211bb6455_TypeKind> _214421_kind = _211bcbbeb_checkDecl(&_208217_tc, _214321_f.get()._field_Decl.get()._field_Kind.get()._field_Decl);;
				_208180_ok=((_214421_kind != nullptr) && _208180_ok);
				if ((_214421_kind == nullptr)) {
					if (((_self_ != _208139_s.get()._field_Decl.get()._field_sema) && (_208139_s.get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_208139_s.get()._field_Decl.get()._field_sema.get()._field_errors);
						_208139_s.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_2242d2025;
				};
				_214321_f.get()._field_Kind=_214421_kind;
				_208139_s.get()._field_Mutable=(_208139_s.get()._field_Mutable || ((!(_214321_f.get()._field_Decl.get()._field_Mutable)) && _211bb7852_Mutable(_214321_f.get()._field_Kind.ptr())));
				_211b3a1a9_checkStructInsDeriveClone(_self_.ptr(), _208139_s);
				if ((_214321_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_2242d2025;
				};
				_214217_eval.get()._field_prefix=_214321_f.get()._field_Kind;
				_214217_eval.get()._field_field=_214321_f;
				_214321_f.get()._field_Default=_211ba7b50_evalExpr(_214217_eval, _214321_f.get()._field_Decl.get()._field_Default);
				if ((_214321_f.get()._field_Default == nullptr)) {
					goto _iter_next_2242d2025;
				};
				;
				_211b3006c_checkAssignType(_self_, false,_214321_f.get()._field_Kind,_214321_f.get()._field_Default,_214321_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_2242d2025:;
			++it;
			goto _iter_begin_2242d2025;
		}
		_iter_end_2242d2025:;
	};
	return _208180_ok;
}



inline jule::Bool _211b3c2ee_precheckStructIns(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e6db2b_StructIns>& _217742_s, jule::Ptr<_20e7ddc0b_Token> _217761_errorToken) {
	jule::Bool _217783_ok = jule::Bool();
	_217783_ok=_211b3be47_checkStructEnv(_self_, _217742_s,_217761_errorToken);
	if ((!(_217783_ok))) {
		_217783_ok = false;
		return _217783_ok;
	};
	{
		auto &expr = _217742_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_2242d9219:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> _218221_f = *it;
			{
				if ((_218221_f.get()._field_Generics.len() == 0LL)) {
					if ((_211b3b320_readyToCheckFn(_self_, _217742_s,_218221_f) == nullptr)) {
						_217783_ok = false;
						return _217783_ok;
					};
				};
			}
			_iter_next_2242d9219:;
			++it;
			goto _iter_begin_2242d9219;
		}
		_iter_end_2242d9219:;
	};
	_217783_ok = true;
	return _217783_ok;
}



inline void _211b3c574_checkStructIns(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e6db2b_StructIns>& _219239_s) {
	{
		auto &expr = _219239_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_2242da9ac:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> _219321_f = *it;
			{
				_211b3b63e_checkTypeMethod(_self_, _219239_s,_219321_f);
			}
			_iter_next_2242da9ac:;
			++it;
			goto _iter_begin_2242da9ac;
		}
		_iter_end_2242da9ac:;
	};
}



inline void _211b3c7e9_checkTypeStruct(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e427d1_Struct>& _219840_s) {
	if (_219840_s.get()._field_CppLinked) {
		return;;
	};
	if ((_219840_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _219840_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_2242dc10c:;
		if (it != expr.end()) {
			jule::Ptr<_210e6db2b_StructIns> _221121_ins = *it;
			{
				_211b3c574_checkStructIns(_self_, _221121_ins);
			}
			_iter_next_2242dc10c:;
			++it;
			goto _iter_begin_2242dc10c;
		}
		_iter_end_2242dc10c:;
	};
}



inline void _211b3c9c5_checkStructTypes(jule::Ptr<_211b254c4_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_2242dd0a8:;
		if (it != expr.end()) {
			jule::Ptr<_210e427d1_Struct> _221721_s = *it;
			{
				_211b3c7e9_checkTypeStruct(_self_, _221721_s);
			}
			_iter_next_2242dd0a8:;
			++it;
			goto _iter_begin_2242dd0a8;
		}
		_iter_end_2242dd0a8:;
	};
}



inline void _211b3cc6c_checkStructInsOperators(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e6db2b_StructIns> _222247_s) {
	{
		auto &expr = _222247_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_2242dde99:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> _222321_m = *it;
			{
				{
					auto &_match_expr{ _222321_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_2242dec69:;
						{
							_222247_s.get()._field_Operators._field_Eq=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _222665_f) mutable -> jule::Bool {
								return static__211b44c52_Eq(_222665_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_2242dece1:;
						{
							_222247_s.get()._field_Operators._field_Gt=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _222865_f) mutable -> jule::Bool {
								return static__211b44ee9_Gt(_222865_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_2242ded68:;
						{
							_222247_s.get()._field_Operators._field_GtEq=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _223067_f) mutable -> jule::Bool {
								return static__211b45291_GtEq(_223067_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_2242dede0:;
						{
							_222247_s.get()._field_Operators._field_Lt=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _223265_f) mutable -> jule::Bool {
								return static__211b45538_Lt(_223265_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_2242dee67:;
						{
							_222247_s.get()._field_Operators._field_LtEq=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _223467_f) mutable -> jule::Bool {
								return static__211b457d0_LtEq(_223467_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_2242deede:;
						{
							_222247_s.get()._field_Operators._field_Shl=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _223666_f) mutable -> jule::Bool {
								return static__211b45db8_Shl(_223666_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_2242e0066:;
						{
							_222247_s.get()._field_Operators._field_Shr=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _223866_f) mutable -> jule::Bool {
								return static__211b46160_Shr(_223866_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_2242e00dd:;
						{
							_222247_s.get()._field_Operators._field_Add=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _224066_f) mutable -> jule::Bool {
								return static__211b46407_Add(_224066_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_2242e0165:;
						{
							_222247_s.get()._field_Operators._field_Sub=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _224266_f) mutable -> jule::Bool {
								return static__211b4669e_Sub(_224266_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_2242e01dc:;
						{
							_222247_s.get()._field_Operators._field_Div=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _224466_f) mutable -> jule::Bool {
								return static__211b46946_Div(_224466_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_2242e0264:;
						{
							_222247_s.get()._field_Operators._field_Mul=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _224666_f) mutable -> jule::Bool {
								return static__211b46bdd_Mul(_224666_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_2242e02db:;
						{
							_222247_s.get()._field_Operators._field_Mod=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _224866_f) mutable -> jule::Bool {
								return static__211b46e85_Mod(_224866_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_2242e0363:;
						{
							_222247_s.get()._field_Operators._field_BitAnd=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _225069_f) mutable -> jule::Bool {
								return static__211b4722c_BitAnd(_225069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_2242e03da:;
						{
							_222247_s.get()._field_Operators._field_BitOr=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _225268_f) mutable -> jule::Bool {
								return static__211b474c4_BitOr(_225268_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_2242e0462:;
						{
							_222247_s.get()._field_Operators._field_BitXor=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _225469_f) mutable -> jule::Bool {
								return static__211b4776b_BitXor(_225469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_2242e04d9:;
						{
							_222247_s.get()._field_Operators._field_Neg=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _225666_f) mutable -> jule::Bool {
								return static__211b47d54_Neg(_225666_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_2242e0561:;
						{
							_222247_s.get()._field_Operators._field_Pos=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _225866_f) mutable -> jule::Bool {
								return static__211b480eb_Pos(_225866_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_2242e05d8:;
						{
							_222247_s.get()._field_Operators._field_BitNot=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _226069_f) mutable -> jule::Bool {
								return static__211b48393_BitNot(_226069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_2242e0660:;
						{
							_222247_s.get()._field_Operators._field_AddAssign=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _226272_f) mutable -> jule::Bool {
								return static__211b4897b_AddAssign(_226272_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_2242e06d7:;
						{
							_222247_s.get()._field_Operators._field_SubAssign=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _226472_f) mutable -> jule::Bool {
								return static__211b48c23_SubAssign(_226472_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_2242e075e:;
						{
							_222247_s.get()._field_Operators._field_DivAssign=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _226672_f) mutable -> jule::Bool {
								return static__211b48eba_DivAssign(_226672_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_2242e07d6:;
						{
							_222247_s.get()._field_Operators._field_MulAssign=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _226872_f) mutable -> jule::Bool {
								return static__211b49262_MulAssign(_226872_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_2242e085d:;
						{
							_222247_s.get()._field_Operators._field_ModAssign=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _227072_f) mutable -> jule::Bool {
								return static__211b49509_ModAssign(_227072_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_2242e08d5:;
						{
							_222247_s.get()._field_Operators._field_ShlAssign=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _227272_f) mutable -> jule::Bool {
								return static__211b497a1_ShlAssign(_227272_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_2242e095c:;
						{
							_222247_s.get()._field_Operators._field_ShrAssign=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _227472_f) mutable -> jule::Bool {
								return static__211b49a48_ShrAssign(_227472_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_2242e09d4:;
						{
							_222247_s.get()._field_Operators._field_BitOrAssign=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _227674_f) mutable -> jule::Bool {
								return static__211b49ce0_BitOrAssign(_227674_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_2242e0a5b:;
						{
							_222247_s.get()._field_Operators._field_BitAndAssign=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _227875_f) mutable -> jule::Bool {
								return static__211b4a087_BitAndAssign(_227875_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_2242e0ad3:;
						{
							_222247_s.get()._field_Operators._field_BitXorAssign=_211b3ba90_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_211020084_Fn>)>([=](jule::Ptr<_211020084_Fn> _228075_f) mutable -> jule::Bool {
								return static__211b4a32e_BitXorAssign(_228075_f);
							}));
						}
					}
					_match_end_2242de84b:;
				};
			}
			_iter_next_2242dde99:;
			++it;
			goto _iter_begin_2242dde99;
		}
		_iter_end_2242dde99:;
	};
}



inline void _211b3d003_precheckStructType(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_210e427d1_Struct>& _228543_s) {
	if (_228543_s.get()._field_CppLinked) {
		return;;
	};
	if ((_228543_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_228543_s.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_210e6db2b_StructIns> _229621_ins = _210e23ae2_instance(_228543_s);;
		_229621_ins.get()._field_Checked=true;
		_210e29bd6_appendInstance(_228543_s.ptr(), _229621_ins);
		_211b3c2ee_precheckStructIns(_self_, _229621_ins,nullptr);
	};
	_211b3cc6c_checkStructInsOperators(_self_, _228543_s.get()._field_Instances[0LL]);
}



inline void _211b3d1ce_precheckStructTypes(jule::Ptr<_211b254c4_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_22431b49e:;
		if (it != expr.end()) {
			jule::Ptr<_210e427d1_Struct> _230621_s = *it;
			{
				_211b3d003_precheckStructType(_self_, _230621_s);
			}
			_iter_next_22431b49e:;
			++it;
			goto _iter_begin_22431b49e;
		}
		_iter_end_22431b49e:;
	};
}



inline void _211b3d454_checkRets(_211b254c4_Sema* _self_, jule::Ptr<_211022c35_FnIns>& _231133_f) {
	if (_2110204e6_IsVoid(_231133_f.get()._field_Decl.ptr())) {
		return;;
	};
	_211b405ee_missingRetChecker _231513_mrc = static__211b409b7_new();;
	jule::Bool _231613_ok = _211b419c9_check(&_231513_mrc, _231133_f.get()._field_Scope);;
	if ((!(_231613_ok))) {
		_211b28186_pushErr(&(*_self_), _231133_f.get()._field_Decl.get()._field_Token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _211b3d773_checkFnInsSc(_211b254c4_Sema* _self_, jule::Ptr<_211022c35_FnIns>& _232236_f, jule::Ptr<_211b0c214_scopeChecker>& _232252_sc) {
	_211b241e8_appendRetVars(_232252_sc.get()._field_table.get()._field_Vars,_232236_f);
	_211b244a1_appendParamVars(_232252_sc.get()._field_table.get()._field_Vars,_232236_f);
	_211b2477b_appendGenericTypeAliases(_232252_sc.get()._field_table.get()._field_TypeAliases,_232236_f);
	_211b154d6_check(_232252_sc, _232236_f.get()._field_Decl.get()._field_Scope,_232236_f.get()._field_Scope);
	if ((!(_211b0d37a_stopped(_232252_sc.ptr())))) {
		_211b3d454_checkRets(&(*_self_), _232236_f);
	};
}



inline void _211b3da92_checkFnInsCaller(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211022c35_FnIns>& _233541_f, jule::Ptr<_20e7ddc0b_Token> _233556_caller) {
	if (_233541_f.get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_211b855ab_SymbolTable> _234017_old = _233541_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_211b27cbd_setCurrentFile(_233541_f.get()._field_Decl.get()._field_sema.ptr(), _234017_old);
	});;
	jule::Ptr<_211b855ab_SymbolTable> _234217_file = _211b24acd_findFile(_233541_f.get()._field_Decl.get()._field_sema.get()._field_files,_233541_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_234217_file != nullptr)) {
		_211b27cbd_setCurrentFile(_233541_f.get()._field_Decl.get()._field_sema.ptr(), _234217_file);
	};
	jule::Ptr<_211b0c214_scopeChecker> _234717_sc = _2110a0257_newScopeChecker(_233541_f.get()._field_Decl.get()._field_sema,_233541_f);;
	_234717_sc.get()._field_calledFrom=_233556_caller;
	_211b3d773_checkFnInsSc(_self_.ptr(), _233541_f,_234717_sc);
	if ((_233541_f.get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_233541_f.get()._field_Decl.get()._field_sema.get()._field_errors);
		_233541_f.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _211b3dd17_checkFnIns(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211022c35_FnIns>& _235735_f) {
	_211b3da92_checkFnInsCaller(_self_, _235735_f,nullptr);
}



inline void _211b3e08c_checkTypeFn(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211020084_Fn>& _236136_f) {
	if (_236136_f.get()._field_CppLinked) {
		return;;
	};
	if ((_236136_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _236136_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_2243270c0:;
		if (it != expr.end()) {
			jule::Ptr<_211022c35_FnIns> _237121_ins = *it;
			{
				_211b3dd17_checkFnIns(_self_, _237121_ins);
			}
			_iter_next_2243270c0:;
			++it;
			goto _iter_begin_2243270c0;
		}
		_iter_end_2243270c0:;
	};
}



inline void _211b3e312_checkTestFn(_211b254c4_Sema* _self_, jule::Ptr<_211022c35_FnIns>& _237635_f) {
	if (_237635_f.get()._field_Decl.get()._field_Public) {
		_211b28186_pushErr(&(*_self_), _237635_f.get()._field_Decl.get()._field_Token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_211b284a5_pushSugggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_237635_f.get()._field_Params.len() != 1LL) || (_237635_f.get()._field_Result != nullptr))) {
		_211b28186_pushErr(&(*_self_), _237635_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_211b284a5_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_211bbe6b1_Sptr> _238917_sptr = _211bb87cb_Sptr(_237635_f.get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_238917_sptr == nullptr)) {
		_211b28186_pushErr(&(*_self_), _237635_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_211b284a5_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_210e6db2b_StructIns> _239613_s = _211bb99b9_Struct(_238917_sptr.get()._field_Elem.ptr());;
	if (((_239613_s == nullptr) || (!(_211b228ab_isStdPackage(_239613_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("testing", 7)))))) {
		_211b28186_pushErr(&(*_self_), _237635_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_211b284a5_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _211b3e587_precheckTypeFn(jule::Ptr<_211b254c4_Sema> _self_, jule::Ptr<_211020084_Fn>& _240439_f) {
	if (_240439_f.get()._field_CppLinked) {
		return;;
	};
	if ((_240439_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_240439_f.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_211022c35_FnIns> _241521_ins = _211021470_instanceForce(_240439_f);;
		_240439_f.get()._field_Instances = jule::alloc_for_append(_240439_f.get()._field_Instances,1);_240439_f.get()._field_Instances.__push(_241521_ins);;
		_211b3225b_reloadFnInsTypes(_self_, _241521_ins);
		_241521_ins.get()._field_reloaded=true;
		if (_211bcd1a3_hasDirective(_240439_f.get()._field_Directives,jule::Str("test", 4))) {
			_211b3e312_checkTestFn(_self_.ptr(), _241521_ins);
		};
	};
}



inline void _211b3e763_precheckFnTypes(jule::Ptr<_211b254c4_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_224331d88:;
		if (it != expr.end()) {
			jule::Ptr<_211031e42_Trait> _242821_decl = *it;
			{
				{
					auto &expr = _242821_decl.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_22433276d:;
					if (it != expr.end()) {
						jule::Ptr<_211020084_Fn> _242925_m = *it;
						{
							_211b3e587_precheckTypeFn(_self_, _242925_m);
						}
						_iter_next_22433276d:;
						++it;
						goto _iter_begin_22433276d;
					}
					_iter_end_22433276d:;
				};
			}
			_iter_next_224331d88:;
			++it;
			goto _iter_begin_224331d88;
		}
		_iter_end_224331d88:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_224332482:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> _243321_decl = *it;
			{
				_211b3e587_precheckTypeFn(_self_, _243321_decl);
			}
			_iter_next_224332482:;
			++it;
			goto _iter_begin_224332482;
		}
		_iter_end_224332482:;
	};
}



inline void _211b3e93e_checkFnTypes(jule::Ptr<_211b254c4_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_2243337a2:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> _244021_decl = *it;
			{
				_211b3e08c_checkTypeFn(_self_, _244021_decl);
			}
			_iter_next_2243337a2:;
			++it;
			goto _iter_begin_2243337a2;
		}
		_iter_end_2243337a2:;
	};
}



inline void _211b3eb1a_checkPackageTypes(jule::Ptr<_211b254c4_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22433497e:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _244821_f = *it;
			{
				_211b27cbd_setCurrentFile(_self_.ptr(), _244821_f);
				_211b3ae68_checkGlobalTypes(_self_);
				_211b3e763_precheckFnTypes(_self_);
				_211b3d1ce_precheckStructTypes(_self_);
			}
			_iter_next_22433497e:;
			++it;
			goto _iter_begin_22433497e;
		}
		_iter_end_22433497e:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22433b227:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _245921_f = *it;
			{
				_211b27cbd_setCurrentFile(_self_.ptr(), _245921_f);
				_211b3e93e_checkFnTypes(_self_);
				_211b3c9c5_checkStructTypes(_self_);
			}
			_iter_next_22433b227:;
			++it;
			goto _iter_begin_22433b227;
		}
		_iter_end_22433b227:;
	};
}



inline void _211b3ece6_setFileSemaFields(jule::Ptr<_211b254c4_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_22433b898:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> _246721_f = *it;
			{
				_246721_f.get()._field_sema=_self_;
			}
			_iter_next_22433b898:;
			++it;
			goto _iter_begin_22433b898;
		}
		_iter_end_22433b898:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_22433c987:;
		if (it != expr.end()) {
			jule::Ptr<_210e427d1_Struct> _247021_st = *it;
			{
				_247021_st.get()._field_sema=_self_;
			}
			_iter_next_22433c987:;
			++it;
			goto _iter_begin_22433c987;
		}
		_iter_end_22433c987:;
	};
}



inline void _211b3eec2_setSemaFields(jule::Ptr<_211b254c4_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22433d4b0:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _247621_file = *it;
			{
				_211b27cbd_setCurrentFile(_self_.ptr(), _247621_file);
				_211b3ece6_setFileSemaFields(_self_);
			}
			_iter_next_22433d4b0:;
			++it;
			goto _iter_begin_22433d4b0;
		}
		_iter_end_22433d4b0:;
	};
}



inline void _211b40247_check(jule::Ptr<_211b254c4_Sema> _self_, jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>& _248230_files) {
	_self_.get()._field_files=_248230_files;
	_211b2b7e9_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_211b3eec2_setSemaFields(_self_);
	_211b2bd7c_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_211b2bba1_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_211b3a396_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_211b3eb1a_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _211b254c4_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _211b405ee_missingRetChecker static__211b409b7_new(void) {
	return _211b405ee_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU), };
}



inline jule::Bool _211b40c92_checkConditional(_211b405ee_missingRetChecker* _self_, jule::Ptr<_211b099c5_Conditional> _252535_c) {
	{
		auto &expr = _252535_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_224342a36:;
		if (it != expr.end()) {
			jule::Ptr<_211b095eb_If> _252621_elif = *it;
			{
				if ((_252621_elif == nullptr)) {
					return false;
				};
				if ((!(_211b416bb_checkScope(&(*_self_), _252621_elif.get()._field_Scope)))) {
					return false;
				};
			}
			_iter_next_224342a36:;
			++it;
			goto _iter_begin_224342a36;
		}
		_iter_end_224342a36:;
	};
	return ((_252535_c.get()._field_Default != nullptr) && _211b416bb_checkScope(&(*_self_), _252535_c.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _211b410a0_checkMatch(_211b405ee_missingRetChecker* _self_, jule::Ptr<_211b0b0e2_Match> _253729_m) {
	{
		auto &expr = _253729_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_224345033:;
		if (it != expr.end()) {
			jule::Ptr<_211b0b642_Case> _253821_c = *it;
			{
				if ((_253821_c == nullptr)) {
					return false;
				};
				jule::I64 _254217_n = (*_self_)._field_breaked.len();;
				jule::Bool _254317_ok = _211b416bb_checkScope(&(*_self_), _253821_c.get()._field_Scope);;
				{
					
					if ((_254217_n != (*_self_)._field_breaked.len())) {
						_case_begin_224346ce3:;
						{
							return false;
						}
					}
					else if ((!(_254317_ok))) {
						_case_begin_224346d6a:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_224346de2;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_224346de2:;
						{
							(*_self_)._field_falled=false;
							if ((_253821_c.get()._field_Next == nullptr)) {
								return false;
							};
							goto _iter_next_224345033;
						}
					}
					_match_end_224346c8d:;
				};
			}
			_iter_next_224345033:;
			++it;
			goto _iter_begin_224345033;
		}
		_iter_end_224345033:;
	};
	return ((_253729_m.get()._field_Default != nullptr) && _211b416bb_checkScope(&(*_self_), _253729_m.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _211b413ad_checkInfIter(_211b405ee_missingRetChecker* _self_, jule::Ptr<_211b09bb2_InfIter> _256331_it) {
	jule::I64 _256413_n = (*_self_)._field_breaked.len();;
	if (_211b416bb_checkScope(&(*_self_), _256331_it.get()._field_Scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_256413_n);
		return true;
	};
	if ((_256413_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _257017_itaddr = static_cast<jule::Uintptr>(_256331_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_256413_n);
			auto it = expr.begin();
			_iter_begin_22434ac5e:;
			if (it != expr.end()) {
				jule::Uintptr _257120_addr = *it;
				{
					if ((_257017_itaddr == _257120_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_256413_n);
						return false;
					};
				}
				_iter_next_22434ac5e:;
				++it;
				goto _iter_begin_22434ac5e;
			}
			_iter_end_22434ac5e:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_256413_n);
	};
	return true;
}



inline jule::Bool _211b416bb_checkScope(_211b405ee_missingRetChecker* _self_, jule::Ptr<_211b0940e_Scope> _258229_s) {
	if ((_258229_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _258229_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_22434c9a8:;
		if (it != expr.end()) {
			jule::Any _258621_st = *it;
			{
				{
					auto &_match_expr{ _258621_st };
					
					if (_match_expr.type_is<jule::Ptr<_211b0b961_FallSt>>()) {
						_case_begin_22434d39e:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_211b0a465_BreakSt>>()) {
						_case_begin_22434d448:;
						{
							jule::Uintptr _259221_addr = _258621_st.operator jule::Ptr<_211b0a465_BreakSt>().get()._field_It;;
							if ((_259221_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_259221_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_211b0a278_ContSt>>()) {
						_case_begin_22434d4ae:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_211b09bb2_InfIter>>()) {
						_case_begin_22434d525:;
						{
							if (_211b413ad_checkInfIter(&(*_self_), _258621_st.operator jule::Ptr<_211b09bb2_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_211b0bb4d_RetSt>>()) {
						_case_begin_22434d58b:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_211b0940e_Scope>>()) {
						_case_begin_22434d613:;
						{
							if (_211b416bb_checkScope(&(*_self_), _258621_st.operator jule::Ptr<_211b0940e_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_211b8a319_Data>>()) {
						_case_begin_22434d68a:;
						{
							{
								auto &_match_expr{ _258621_st.operator jule::Ptr<_211b8a319_Data>().get()._field_Model };
								
								if (_match_expr.type_is<jule::Ptr<_21101b080_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21101ba20_BuiltinErrorCallExprModel>>()) {
									_case_begin_22435243b:;
									{
										return true;
									}
								}
								_match_end_224352194:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_211b099c5_Conditional>>()) {
						_case_begin_22434d712:;
						{
							if (_211b40c92_checkConditional(&(*_self_), _258621_st.operator jule::Ptr<_211b099c5_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_211b0b0e2_Match>>()) {
						_case_begin_22434d789:;
						{
							if (_211b410a0_checkMatch(&(*_self_), _258621_st.operator jule::Ptr<_211b0b0e2_Match>())) {
								return true;
							};
						}
					}
					_match_end_22434d206:;
				};
			}
			_iter_next_22434c9a8:;
			++it;
			goto _iter_begin_22434c9a8;
		}
		_iter_end_22434c9a8:;
	};
	return false;
}



inline jule::Bool _211b419c9_check(_211b405ee_missingRetChecker* _self_, jule::Ptr<_211b0940e_Scope> _262824_s) {
	return _211b416bb_checkScope(&(*_self_), _262824_s);
}







std::ostream &operator<<(std::ostream &_Stream, _211b405ee_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b422b0_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _211b435d0_IsInitialized(_211b43228_Var* _self_) {
	return ((*_self_)._field_Value != nullptr);
}



inline jule::Bool _211b43844_IsTypeInferred(_211b43228_Var* _self_) {
	return (((*_self_)._field_Kind == nullptr) || ((*_self_)._field_Kind.get()._field_Decl == nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _211b43228_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__211b443c2_Dispose(jule::Ptr<_211020084_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && (_1023_f.get()._field_Ident == jule::Str("Dispose", 7))) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _2110204e6_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_21101e0d8_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));
}



inline jule::Bool static__211b44669_Str(jule::Ptr<_211020084_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (_2419_f.get()._field_Ident != jule::Str("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _2110204e6_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _21101e0d8_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_211022c35_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_211bbae2c_Prim> _3913_prim = _211bb8567_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;
	};
	return _211bbe161_IsStr(_3913_prim.ptr());
}



inline jule::Bool static__211b449aa_logical(jule::Ptr<_211020084_Fn>& _4624_f, jule::Str _4632_ident) {
	if ((((((((((((((_4624_f == nullptr) || (_4624_f.get()._field_Ident != _4632_ident)) || (_4624_f.get()._field_Owner == nullptr)) || (_4624_f.get()._field_Instances.len() == 0LL)) || _4624_f.get()._field_Statically) || _4624_f.get()._field_Unsafety) || _2110204e6_IsVoid(_4624_f.ptr())) || (_4624_f.get()._field_Generics.len() != 0LL)) || (_4624_f.get()._field_Params.len() != 2LL)) || _4624_f.get()._field_Params[0LL].get()._field_Mutable) || _21101e0d8_IsRef(_4624_f.get()._field_Params[0LL].ptr())) || _4624_f.get()._field_Params[1LL].get()._field_Mutable) || _4624_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_211022c35_FnIns> _6317_ins = _4624_f.get()._field_Instances[0LL];;
	jule::Ptr<_211bbae2c_Prim> _6413_prim = _211bb8567_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_211bbddec_IsBool(_6413_prim.ptr()))))) {
		return false;
	};
	return (_6317_ins.get()._field_Owner == _211bb99b9_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));
}



inline jule::Bool static__211b44c52_Eq(jule::Ptr<_211020084_Fn> _7218_f) {
	return static__211b449aa_logical(_7218_f,jule::Str("Eq", 2));
}



inline jule::Bool static__211b44ee9_Gt(jule::Ptr<_211020084_Fn> _7718_f) {
	return static__211b449aa_logical(_7718_f,jule::Str("Gt", 2));
}



inline jule::Bool static__211b45291_GtEq(jule::Ptr<_211020084_Fn> _8220_f) {
	return static__211b449aa_logical(_8220_f,jule::Str("GtEq", 4));
}



inline jule::Bool static__211b45538_Lt(jule::Ptr<_211020084_Fn> _8718_f) {
	return static__211b449aa_logical(_8718_f,jule::Str("Lt", 2));
}



inline jule::Bool static__211b457d0_LtEq(jule::Ptr<_211020084_Fn> _9220_f) {
	return static__211b449aa_logical(_9220_f,jule::Str("LtEq", 4));
}



inline jule::Bool static__211b45b21_result(jule::Ptr<_211020084_Fn>& _9623_f, jule::Str _9631_ident) {
	if ((((((((((((((_9623_f == nullptr) || (_9623_f.get()._field_Ident != _9631_ident)) || (_9623_f.get()._field_Owner == nullptr)) || (_9623_f.get()._field_Instances.len() == 0LL)) || _9623_f.get()._field_Statically) || _9623_f.get()._field_Unsafety) || _2110204e6_IsVoid(_9623_f.ptr())) || (_9623_f.get()._field_Generics.len() != 0LL)) || (_9623_f.get()._field_Params.len() != 2LL)) || _9623_f.get()._field_Params[0LL].get()._field_Mutable) || _21101e0d8_IsRef(_9623_f.get()._field_Params[0LL].ptr())) || _9623_f.get()._field_Params[1LL].get()._field_Mutable) || _9623_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_211022c35_FnIns> _11317_ins = _9623_f.get()._field_Instances[0LL];;
	return (_211bb99b9_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);
}



inline jule::Bool static__211b45db8_Shl(jule::Ptr<_211020084_Fn> _11819_f) {
	return static__211b45b21_result(_11819_f,jule::Str("Shl", 3));
}



inline jule::Bool static__211b46160_Shr(jule::Ptr<_211020084_Fn> _12319_f) {
	return static__211b45b21_result(_12319_f,jule::Str("Shr", 3));
}



inline jule::Bool static__211b46407_Add(jule::Ptr<_211020084_Fn> _12819_f) {
	return static__211b45b21_result(_12819_f,jule::Str("Add", 3));
}



inline jule::Bool static__211b4669e_Sub(jule::Ptr<_211020084_Fn> _13319_f) {
	return static__211b45b21_result(_13319_f,jule::Str("Sub", 3));
}



inline jule::Bool static__211b46946_Div(jule::Ptr<_211020084_Fn> _13819_f) {
	return static__211b45b21_result(_13819_f,jule::Str("Div", 3));
}



inline jule::Bool static__211b46bdd_Mul(jule::Ptr<_211020084_Fn> _14319_f) {
	return static__211b45b21_result(_14319_f,jule::Str("Mul", 3));
}



inline jule::Bool static__211b46e85_Mod(jule::Ptr<_211020084_Fn> _14819_f) {
	return static__211b45b21_result(_14819_f,jule::Str("Mod", 3));
}



inline jule::Bool static__211b4722c_BitAnd(jule::Ptr<_211020084_Fn> _15322_f) {
	return static__211b45b21_result(_15322_f,jule::Str("BitAnd", 6));
}



inline jule::Bool static__211b474c4_BitOr(jule::Ptr<_211020084_Fn> _15821_f) {
	return static__211b45b21_result(_15821_f,jule::Str("BitOr", 5));
}



inline jule::Bool static__211b4776b_BitXor(jule::Ptr<_211020084_Fn> _16322_f) {
	return static__211b45b21_result(_16322_f,jule::Str("BitXor", 6));
}



inline jule::Bool static__211b47aac_unary(jule::Ptr<_211020084_Fn>& _16722_f, jule::Str _16730_ident) {
	if ((((((((((((_16722_f == nullptr) || (_16722_f.get()._field_Ident != _16730_ident)) || (_16722_f.get()._field_Owner == nullptr)) || (_16722_f.get()._field_Instances.len() == 0LL)) || _16722_f.get()._field_Statically) || _16722_f.get()._field_Unsafety) || _2110204e6_IsVoid(_16722_f.ptr())) || (_16722_f.get()._field_Generics.len() != 0LL)) || (_16722_f.get()._field_Params.len() != 1LL)) || _16722_f.get()._field_Params[0LL].get()._field_Mutable) || _21101e0d8_IsRef(_16722_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_211022c35_FnIns> _18217_ins = _16722_f.get()._field_Instances[0LL];;
	return (_211bb99b9_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);
}



inline jule::Bool static__211b47d54_Neg(jule::Ptr<_211020084_Fn> _18719_f) {
	return static__211b47aac_unary(_18719_f,jule::Str("Neg", 3));
}



inline jule::Bool static__211b480eb_Pos(jule::Ptr<_211020084_Fn> _19219_f) {
	return static__211b47aac_unary(_19219_f,jule::Str("Pos", 3));
}



inline jule::Bool static__211b48393_BitNot(jule::Ptr<_211020084_Fn> _19722_f) {
	return static__211b47aac_unary(_19722_f,jule::Str("BitNot", 6));
}



inline jule::Bool static__211b486d4_assign(jule::Ptr<_211020084_Fn>& _20123_f, jule::Str _20131_ident) {
	if ((((((((((((((_20123_f == nullptr) || (_20123_f.get()._field_Ident != _20131_ident)) || (_20123_f.get()._field_Owner == nullptr)) || (_20123_f.get()._field_Instances.len() == 0LL)) || _20123_f.get()._field_Statically) || _20123_f.get()._field_Unsafety) || (!(_2110204e6_IsVoid(_20123_f.ptr())))) || (_20123_f.get()._field_Generics.len() != 0LL)) || (_20123_f.get()._field_Params.len() != 2LL)) || (!(_20123_f.get()._field_Params[0LL].get()._field_Mutable))) || _21101e0d8_IsRef(_20123_f.get()._field_Params[0LL].ptr())) || _20123_f.get()._field_Params[1LL].get()._field_Mutable) || _20123_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__211b4897b_AddAssign(jule::Ptr<_211020084_Fn> _22125_f) {
	return static__211b486d4_assign(_22125_f,jule::Str("AddAssign", 9));
}



inline jule::Bool static__211b48c23_SubAssign(jule::Ptr<_211020084_Fn> _22625_f) {
	return static__211b486d4_assign(_22625_f,jule::Str("SubAssign", 9));
}



inline jule::Bool static__211b48eba_DivAssign(jule::Ptr<_211020084_Fn> _23125_f) {
	return static__211b486d4_assign(_23125_f,jule::Str("DivAssign", 9));
}



inline jule::Bool static__211b49262_MulAssign(jule::Ptr<_211020084_Fn> _23625_f) {
	return static__211b486d4_assign(_23625_f,jule::Str("MulAssign", 9));
}



inline jule::Bool static__211b49509_ModAssign(jule::Ptr<_211020084_Fn> _24125_f) {
	return static__211b486d4_assign(_24125_f,jule::Str("ModAssign", 9));
}



inline jule::Bool static__211b497a1_ShlAssign(jule::Ptr<_211020084_Fn> _24625_f) {
	return static__211b486d4_assign(_24625_f,jule::Str("ShlAssign", 9));
}



inline jule::Bool static__211b49a48_ShrAssign(jule::Ptr<_211020084_Fn> _25125_f) {
	return static__211b486d4_assign(_25125_f,jule::Str("ShrAssign", 9));
}



inline jule::Bool static__211b49ce0_BitOrAssign(jule::Ptr<_211020084_Fn> _25627_f) {
	return static__211b486d4_assign(_25627_f,jule::Str("BitOrAssign", 11));
}



inline jule::Bool static__211b4a087_BitAndAssign(jule::Ptr<_211020084_Fn> _26128_f) {
	return static__211b486d4_assign(_26128_f,jule::Str("BitAndAssign", 12));
}



inline jule::Bool static__211b4a32e_BitXorAssign(jule::Ptr<_211020084_Fn> _26628_f) {
	return static__211b486d4_assign(_26628_f,jule::Str("BitXorAssign", 12));
}







std::ostream &operator<<(std::ostream &_Stream, _211b43c51_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _211b74798_pushErr(_211b7427b_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_211b28186_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_11726_fmt,jule::Any(_11739_args));
}



inline jule::Bool _211b74a0c_checkTrait(_211b7427b_typeCompatibilityChecker* _self_) {
	jule::Bool _12131_ok = jule::Bool();
	if (_211bb7379_IsNil((*_self_)._field_src.ptr())) {
		_12131_ok = true;
		return _12131_ok;
	};
	jule::Ptr<_211031e42_Trait> _12513_trt = _211bb9c2d_Trait((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_211bb87cb_Sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_22438beae:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_211bb87cb_Sptr((*_self_)._field_src.ptr()).get()._field_Elem;
				if ((_211bb99b9_Struct((*_self_)._field_src.ptr()) == nullptr)) {
					_12131_ok = false;
					return _12131_ok;
				};
				goto _case_begin_22438c09c;
			}
		}
		else if ((_211bb99b9_Struct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_22438c09c:;
			{
				jule::Ptr<_210e6db2b_StructIns> _13617_s = _211bb99b9_Struct((*_self_)._field_src.ptr());;
				if ((!(_210e32150_IsImplements(_13617_s.get()._field_Decl.ptr(), _12513_trt)))) {
					_12131_ok = false;
					return _12131_ok;
				};
				if (((!(_12617_ref)) && _211b646bc_traitHasReferenceReceiver(_12513_trt))) {
					_211b74798_pushErr(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12131_ok = false;
					return _12131_ok;
				};
				_12131_ok = true;
				return _12131_ok;
			}
		}
		else if ((_211bb9c2d_Trait((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_22438c113:;
			{
				_12131_ok = (_12513_trt == _211bb9c2d_Trait((*_self_)._field_src.ptr()));
				return _12131_ok;
			}
		}
		else {
			_case_begin_22438b84e:;
			{
				_12131_ok = false;
				return _12131_ok;
			}
		}
		_match_end_22438b7e9:;
	};
}



inline jule::Bool _211b74c71_checkPtr(_211b7427b_typeCompatibilityChecker* _self_) {
	jule::Bool _15229_ok = jule::Bool();
	if (_211bb7379_IsNil((*_self_)._field_src.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	jule::Ptr<_211bc2c25_Ptr> _15617_dest = _211bb8a40_Ptr((*_self_)._field_dest.ptr());;
	if (_211bc36e8_IsUnsafe(_15617_dest.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	_15229_ok = _211bb6b5e_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15229_ok;
}



inline jule::Bool _211b74ed5_checkPrim(_211b7427b_typeCompatibilityChecker* _self_) {
	jule::Bool _16330_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_Variadic))) {
		jule::Ptr<_211bbae2c_Prim> _16517_prim = _211bb8567_Prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _211bbe3c5_IsAny(_16517_prim.ptr()))) {
			_16330_ok = true;
			return _16330_ok;
		};
	};
	_16330_ok = _211bb6b5e_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16330_ok;
}



inline jule::Bool _211b7538c_typeEnum(_211b7427b_typeCompatibilityChecker* _self_, jule::Ptr<_211035682_TypeEnum>& _17328_e, jule::Ptr<_211bb6455_TypeKind>& _17347_t2) {
	jule::Bool _17364_ok = jule::Bool();
	{
		auto &expr = _17328_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_224394db8:;
		if (it != expr.end()) {
			jule::Ptr<_2110350bb_TypeEnumItem> _17421_item = *it;
			{
				if (_211bb6b5e_Equals(_17421_item.get()._field_Kind.get()._field_Kind, _17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
				jule::Ptr<_211035682_TypeEnum> _17821_ke = _211bb9018_TypeEnum(_17421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_224394db8;
				};
				if (_211b7538c_typeEnum(&(*_self_), _17821_ke,_17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
			}
			_iter_next_224394db8:;
			++it;
			goto _iter_begin_224394db8;
		}
		_iter_end_224394db8:;
	};
	_17364_ok = false;
	return _17364_ok;
}



inline jule::Bool _211b75601_checkTypeEnum(_211b7427b_typeCompatibilityChecker* _self_) {
	jule::Bool _18934_ok = jule::Bool();
	if (_211bb6b5e_Equals((*_self_)._field_dest, (*_self_)._field_src)) {
		_18934_ok = true;
		return _18934_ok;
	};
	jule::Ptr<_211035682_TypeEnum> _19317_e = _211bb9018_TypeEnum((*_self_)._field_dest.ptr());;
	_18934_ok = _211b7538c_typeEnum(&(*_self_), _19317_e,(*_self_)._field_src);
	return _18934_ok;
}



inline jule::Bool _211b75865_check(_211b7427b_typeCompatibilityChecker* _self_) {
	jule::Bool _19726_ok = jule::Bool();
	if ((_211bb8a40_Ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_19726_ok = _211b74c71_checkPtr(&(*_self_));
		return _19726_ok;
	};
	if (_211bb7ab6_NilCompatible((*_self_)._field_dest.ptr())) {
		if (_211bb7379_IsNil((*_self_)._field_src.ptr())) {
			_19726_ok = true;
			return _19726_ok;
		};
	};
	{
		
		if ((_211bb8567_Prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_22439a5e9:;
			{
				_19726_ok = _211b74ed5_checkPrim(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_211bb9018_TypeEnum((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_22439a808:;
			{
				_19726_ok = _211b75601_checkTypeEnum(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_211bb9c2d_Trait((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_22439a484:;
			{
				_19726_ok = _211b74a0c_checkTrait(&(*_self_));
				return _19726_ok;
			}
		}
		else {
			_case_begin_2243994e9:;
			{
				_19726_ok = _211bb6b5e_Equals((*_self_)._field_dest, (*_self_)._field_src);
				return _19726_ok;
			}
		}
		_match_end_2243993a6:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _211b7427b_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _211b76316_pushErr(_211b75da4_assignTypeChecker* _self_, jule::Str _22926_fmt, jule::Slice<jule::Any> _22939_args) {
	_211b28186_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_22926_fmt,jule::Any(_22939_args));
}



inline jule::Bool _211b7657a_checkValidity(_211b75da4_assignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_211bb9755_Fn((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_22439dd8e:;
			{
				jule::Ptr<_211022c35_FnIns> _23717_f = _211bb9755_Fn((*_self_)._field_d.get()._field_Kind.ptr());;
				{
					
					if (_2110240bb_IsBuiltin(_23717_f.ptr())) {
						_case_begin_2243a04cd:;
						{
							_211b76316_pushErr(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_2243a0555:;
						{
							_211b76316_pushErr(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_Decl.get()._field_Statically)) && _21102075a_IsMethod(_23717_f.get()._field_Decl.ptr()))) {
						_case_begin_2243a05cc:;
						{
							_211b76316_pushErr(&(*_self_), jule::Str("non-static methods cannot use as anonymous function", 51),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_23717_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_2243a0654:;
						{
							_211b76316_pushErr(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_211b284a5_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_2243a0401:;
				};
			}
		}
		else if ((_211bba206_Tup((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_22439de16:;
			{
				_211b76316_pushErr(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_22439dcd4:;
	};
	return _23417_valid;
}



inline jule::Bool _211b767de_checkConst(_211b75da4_assignTypeChecker* _self_) {
	if (((((!(_211b8abcc_IsConst((*_self_)._field_d.ptr()))) || (_211bb8567_Prim((*_self_)._field_dest.ptr()) == nullptr)) || (_211bb8567_Prim((*_self_)._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_211b08ebe_IsNum(_211bb8567_Prim((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_Model != (*_self_)._field_d.get()._field_Constant)) {
		return false;
	};
	jule::Str _27413_kind = _211bb8567_Prim((*_self_)._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_211b08d8c_IsFloat(_27413_kind)) {
			_case_begin_2243a80b8:;
			{
				if ((!(_211b5b6e7_floatAssignable(_27413_kind,(*_self_)._field_d)))) {
					_211b76316_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else if (_211b08c5a_IsInt(_27413_kind)) {
			_case_begin_2243a788c:;
			{
				if ((!(_211b73049_intAssignable(_27413_kind,(*_self_)._field_d)))) {
					_211b76316_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else {
			_case_begin_2243a7826:;
			{
				return false;
			}
		}
		_match_end_2243a77b0:;
	};
	return true;
}



inline jule::Bool _211b76a53_isPrim(_211b75da4_assignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_Variadic || (*_self_)._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;
	};
	if ((_211bb7115_CppLinked((*_self_)._field_dest.ptr()) || _211bb7115_CppLinked((*_self_)._field_d.get()._field_Kind.ptr()))) {
		return false;
	};
	return ((_211bb8567_Prim((*_self_)._field_dest.ptr()) != nullptr) && (_211bb8567_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr));
}



inline jule::Bool _211b76cb7_checkCompatibility(_211b75da4_assignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_2243abc9d:;
			{
				return false;
			}
		}
		else if ((!(_211b7657a_checkValidity(&(*_self_))))) {
			_case_begin_2243abd25:;
			{
				return false;
			}
		}
		else if (_211b767de_checkConst(&(*_self_))) {
			_case_begin_2243abd9c:;
			{
				return true;
			}
		}
		else if ((_211bb8ca4_Enum((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2243abe24:;
			{
				jule::Ptr<_211bb6455_TypeKind> _31621_dkind = (*_self_)._field_dest;;
				if ((_211bb8ca4_Enum((*_self_)._field_dest.ptr()) != nullptr)) {
					_31621_dkind=_211bb8ca4_Enum((*_self_)._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_211bb8567_Prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_2243abb7c;
				};
				if (_211384492_TypesAreCompatible(_211bb8567_Prim(_211bb8ca4_Enum((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind,_211bb8567_Prim(_31621_dkind.ptr()).get()._field_Kind)) {
					return true;
				};
			}
		}
		else if (_211b76a53_isPrim(&(*_self_))) {
			_case_begin_2243abe9b:;
			{
				jule::Ptr<_211bbae2c_Prim> _32617_dest = _211bb8567_Prim((*_self_)._field_dest.ptr());;
				if (_211bbe3c5_IsAny(_32617_dest.ptr())) {
					return true;
				};
				jule::Ptr<_211bbae2c_Prim> _33021_src = _211bb8567_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_211384492_TypesAreCompatible(_32617_dest.get()._field_Kind,_33021_src.get()._field_Kind)) {
					return true;
				};
			}
		}
		_match_end_2243abb7c:;
	};
	return _211b304bd_checkTypeCompatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_Kind,(*_self_)._field_errorToken);
}



inline jule::Bool _211b7702b_check(_211b75da4_assignTypeChecker* _self_) {
	jule::Bool _33913_ok = _211b76cb7_checkCompatibility(&(*_self_));;
	if (_33913_ok) {
		_211bcebee_applyImplicitCast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _33913_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _211b75da4_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2243c636c_annotateConstraintElem(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_210e545b2_ArrTypeDecl>>()) {
			_case_begin_2243c7989:;
			{
				jule::Ptr<_211bb6455_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_215520580:;
						{
							_36121_elem=_211bb927c_Arr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_2154da193:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_210e545b2_ArrTypeDecl>().get()._field_Elem;
				return _211b78e1d_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_2243c7901:;
	};
	return false;
}

inline jule::Bool _215523110_annotateConstraintElem(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_210e53858_SlcTypeDecl>>()) {
			_case_begin_215524397:;
			{
				jule::Ptr<_211bb6455_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_2155252dd:;
						{
							_36121_elem=_211bb94e1_Slc(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_215525189:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_210e53858_SlcTypeDecl>().get()._field_Elem;
				return _211b78e1d_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_21552430e:;
	};
	return false;
}

inline jule::Bool _2155233b8_annotateConstraintElem(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_210e53e30_PtrTypeDecl>>()) {
			_case_begin_215527d18:;
			{
				jule::Ptr<_211bb6455_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_215528cc5:;
						{
							_36121_elem=_211bb8a40_Ptr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_215528b0a:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_210e53e30_PtrTypeDecl>().get()._field_Elem;
				return _211b78e1d_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_215527c80:;
	};
	return false;
}

inline jule::Bool _215528115_annotateConstraintElem(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_210e5345c_SptrTypeDecl>>()) {
			_case_begin_21552b228:;
			{
				jule::Ptr<_211bb6455_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_21552c24b:;
						{
							_36121_elem=_211bb87cb_Sptr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_21552c01a:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_210e5345c_SptrTypeDecl>().get()._field_Elem;
				return _211b78e1d_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_21552b190:;
	};
	return false;
}



inline jule::Bool _211b781a3_annotateConstraintMap(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _37845_k) {
	jule::Bool _37861_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_210e54d10_MapTypeDecl>>()) {
			_case_begin_2243b4a97:;
			{
				jule::Ptr<_211bc16c4_Map> _38121_m = _211bb9e92_Map(_37845_k.ptr());;
				jule::Ptr<_210e54d10_MapTypeDecl> _38221_m2 = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_210e54d10_MapTypeDecl>();;
				(*_self_)._field_c=_38221_m2.get()._field_Key;
				if (_211b78e1d_annotateConstraint(&(*_self_), _38121_m.get()._field_Key)) {
					_37861_ok = true;
					return _37861_ok;
				};
				(*_self_)._field_c=_38221_m2.get()._field_Val;
				_37861_ok = _211b78e1d_annotateConstraint(&(*_self_), _38121_m.get()._field_Val);
				return _37861_ok;
			}
		}
		_match_end_2243b4a42:;
	};
	_37861_ok = false;
	return _37861_ok;
}



inline jule::Bool _211b784b1_annotateConstraintTup(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _39345_k) {
	jule::Bool _39361_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_210e53b44_TupleTypeDecl>>()) {
			_case_begin_2243b76b0:;
			{
				jule::Ptr<_210e53b44_TupleTypeDecl> _39621_tup = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_210e53b44_TupleTypeDecl>();;
				jule::Ptr<_211bc0b9b_Tuple> _39721_tup2 = _211bba206_Tup(_39345_k.ptr());;
				{
					auto &expr = _39721_tup2.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_2243b8c22:;
					if (it != expr.end()) {
						jule::Ptr<_211bb6455_TypeKind> _39825_t2 = *it;
						{
							{
								auto &expr = _39621_tup.get()._field_Types;
								auto it = expr.begin();
								_iter_begin_2243b9519:;
								if (it != expr.end()) {
									jule::Ptr<_210e520a4_TypeDecl> _39929_t = *it;
									{
										(*_self_)._field_c=_39929_t;
										if (_211b78e1d_annotateConstraint(&(*_self_), _39825_t2)) {
											_39361_ok = true;
											return _39361_ok;
										};
									}
									_iter_next_2243b9519:;
									++it;
									goto _iter_begin_2243b9519;
								}
								_iter_end_2243b9519:;
							};
						}
						_iter_next_2243b8c22:;
						++it;
						goto _iter_begin_2243b8c22;
					}
					_iter_end_2243b8c22:;
				};
			}
		}
		_match_end_2243b765a:;
	};
	_39361_ok = false;
	return _39361_ok;
}



inline jule::Bool _211b787be_annotateConstraintFn(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _41044_k) {
	jule::Bool _41060_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_210e63db8_FnDecl>>()) {
			_case_begin_2243b999d:;
			{
				jule::Ptr<_210e63db8_FnDecl> _41321_pf = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_210e63db8_FnDecl>();;
				jule::Ptr<_211022c35_FnIns> _41421_f = _211bb9755_Fn(_41044_k.ptr());;
				{
					auto &expr = _41421_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_2243bbb15:;
					if (it != expr.end()) {
						jule::I64 _41518_i = it - expr.begin();
						jule::Ptr<_211021d66_ParamIns> _41525_fp = *it;
						{
							(*_self_)._field_c=_41321_pf.get()._field_Params[_41518_i].get()._field_Kind;
							if (_211b78e1d_annotateConstraint(&(*_self_), _41525_fp.get()._field_Kind)) {
								_41060_ok = true;
								return _41060_ok;
							};
						}
						_iter_next_2243bbb15:;
						++it;
						_41518_i++;
						goto _iter_begin_2243bbb15;
					}
					_iter_end_2243bbb15:;
				};
				if ((_41321_pf.get()._field_Result != nullptr)) {
					(*_self_)._field_c=_41321_pf.get()._field_Result.get()._field_Kind;
					if (_211b78e1d_annotateConstraint(&(*_self_), _41421_f.get()._field_Result)) {
						_41060_ok = true;
						return _41060_ok;
					};
				};
			}
		}
		_match_end_2243b923e:;
	};
	_41060_ok = false;
	return _41060_ok;
}



inline jule::Bool _211b78aee_annotateConstraintIdent(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _43147_k) {
	jule::Ptr<_210e5266a_IdentTypeDecl> _43217_ident = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_210e5266a_IdentTypeDecl>();;
	jule::Ptr<_210e6db2b_StructIns> _43317_s = _211bb99b9_Struct(_43147_k.ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_2243c0025:;
		if (it != expr.end()) {
			jule::I64 _43413_i = it - expr.begin();
			jule::Ptr<_210e5e688_GenericDecl> _43416_g = *it;
			{
				if ((_43416_g.get()._field_Ident == _43217_ident.get()._field_Ident)) {
					jule::Ptr<_211bb4c28_InsGeneric> _43625_fg = (*_self_)._field_f.get()._field_Generics[_43413_i];;
					if ((_43625_fg != nullptr)) {
						return false;
					};
					_211b7923c_pushGeneric(&(*_self_), _43147_k,_43413_i);
					return true;
				};
				if ((_43317_s == nullptr)) {
					goto _iter_next_2243c0025;
				};
				jule::Ptr<_210e520a4_TypeDecl> _44621_c = (*_self_)._field_c;;
				{
					auto &expr = _43217_ident.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_2243c19b6:;
					if (it != expr.end()) {
						jule::Ptr<_210e520a4_TypeDecl> _44725_ig = *it;
						{
							(*_self_)._field_c=_44725_ig;
							{
								auto &expr = _43317_s.get()._field_Generics;
								auto it = expr.begin();
								_iter_begin_2243c3820:;
								if (it != expr.end()) {
									jule::Ptr<_211bb4c28_InsGeneric> _44929_sg = *it;
									{
										if (_211b78e1d_annotateConstraint(&(*_self_), _44929_sg.get()._field_Kind)) {
											return true;
										};
									}
									_iter_next_2243c3820:;
									++it;
									goto _iter_begin_2243c3820;
								}
								_iter_end_2243c3820:;
							};
						}
						_iter_next_2243c19b6:;
						++it;
						goto _iter_begin_2243c19b6;
					}
					_iter_end_2243c19b6:;
				};
				(*_self_)._field_c=_44621_c;
			}
			_iter_next_2243c0025:;
			++it;
			_43413_i++;
			goto _iter_begin_2243c0025;
		}
		_iter_end_2243c0025:;
	};
	return false;
}



inline jule::Bool _211b78e1d_annotateConstraint(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _46042_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_210e5266a_IdentTypeDecl>>()) {
			_case_begin_2243c31b0:;
			{
				return _211b78aee_annotateConstraintIdent(&(*_self_), _46042_k);
			}
		}
		_match_end_2243c315a:;
	};
	{
		
		if ((_211bb927c_Arr(_46042_k.ptr()) != nullptr)) {
			_case_begin_2243c48ba:;
			{
				return _2243c636c_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_211bb94e1_Slc(_46042_k.ptr()) != nullptr)) {
			_case_begin_2243c4931:;
			{
				return _215523110_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_211bb8a40_Ptr(_46042_k.ptr()) != nullptr)) {
			_case_begin_2243c4997:;
			{
				return _2155233b8_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_211bb87cb_Sptr(_46042_k.ptr()) != nullptr)) {
			_case_begin_2243c4a0d:;
			{
				return _215528115_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_211bb9e92_Map(_46042_k.ptr()) != nullptr)) {
			_case_begin_2243c5349:;
			{
				return _211b781a3_annotateConstraintMap(&(*_self_), _46042_k);
			}
		}
		else if ((_211bb9755_Fn(_46042_k.ptr()) != nullptr)) {
			_case_begin_2243c53b0:;
			{
				return _211b787be_annotateConstraintFn(&(*_self_), _46042_k);
			}
		}
		else if ((_211bba206_Tup(_46042_k.ptr()) != nullptr)) {
			_case_begin_2243c5437:;
			{
				return _211b784b1_annotateConstraintTup(&(*_self_), _46042_k);
			}
		}
		else {
			_case_begin_2243c526c:;
			{
				return false;
			}
		}
		_match_end_2243c5217:;
	};
}



inline void _211b7923c_pushGeneric(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _48535_k, jule::I64 _48549_i) {
	(*_self_)._field_f.get()._field_Generics[_48549_i]=jule::new_ptr<_211bb4c28_InsGeneric>(_211bb4c28_InsGeneric{._field_Kind=_48535_k, });
	jule::Ptr<_210e5e688_GenericDecl> _48717_gd = (*_self_)._field_f.get()._field_Decl.get()._field_Generics[_48549_i];;
	if (((_48717_gd.get()._field_Constraint == nullptr) || (_48717_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*_self_)._field_c=_48717_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_211b78e1d_annotateConstraint(&(*_self_), _48535_k);
}



inline jule::Bool _211b7954a_annotatePrim(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _49543_k) {
	jule::Bool _49559_ok = jule::Bool();
	_49559_ok = _211b7b371_annotateAny(&(*_self_), _49543_k);
	return _49559_ok;
}



inline jule::Bool _211b79858_annotateArr(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _49942_k) {
	jule::Bool _49958_ok = jule::Bool();
	jule::Ptr<_211bc22b8_Arr> _50017_parr = _211bb927c_Arr((*((*_self_)._field_k)).ptr());;
	if ((_50017_parr == nullptr)) {
		_49958_ok = false;
		return _49958_ok;
	};
	jule::Ptr<_211bc22b8_Arr> _50417_arr = _211bb927c_Arr(_49942_k.ptr());;
	(*_self_)._field_k=(&(_50017_parr.get()._field_Elem));
	_49958_ok = _211b7b67e_annotateKind(&(*_self_), _50417_arr.get()._field_Elem);
	return _49958_ok;
}



inline jule::Bool _211b79b66_annotateSlc(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _50942_k) {
	jule::Bool _50958_ok = jule::Bool();
	jule::Ptr<_211bc011d_Slc> _51017_pslc = _211bb94e1_Slc((*((*_self_)._field_k)).ptr());;
	if ((_51017_pslc == nullptr)) {
		_50958_ok = false;
		return _50958_ok;
	};
	jule::Ptr<_211bc011d_Slc> _51417_slc = _211bb94e1_Slc(_50942_k.ptr());;
	(*_self_)._field_k=(&(_51017_pslc.get()._field_Elem));
	_50958_ok = _211b7b67e_annotateKind(&(*_self_), _51417_slc.get()._field_Elem);
	return _50958_ok;
}



inline jule::Bool _211b7a01d_checkMapKey(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>* _51941_k, jule::Ptr<_211bb6455_TypeKind>& _51961_ck) {
	jule::Bool _51978_ok = jule::Bool();
	jule::Ptr<_211bb6455_TypeKind>* _52017_old = (*_self_)._field_k;;
	(*_self_)._field_k=_51941_k;
	_51978_ok=_211b7b67e_annotateKind(&(*_self_), _51961_ck);
	(*_self_)._field_k=_52017_old;
	return _51978_ok;
}



inline jule::Bool _211b7a32b_annotateMap(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _52742_k) {
	jule::Bool _52758_ok = jule::Bool();
	jule::Ptr<_211bc16c4_Map> _52817_pmap = _211bb9e92_Map((*((*_self_)._field_k)).ptr());;
	if ((_52817_pmap == nullptr)) {
		_52758_ok = false;
		return _52758_ok;
	};
	jule::Ptr<_211bc16c4_Map> _53217_m = _211bb9e92_Map(_52742_k.ptr());;
	_52758_ok = (_211b7a01d_checkMapKey(&(*_self_), (&(_52817_pmap.get()._field_Key)),_53217_m.get()._field_Key) && _211b7a01d_checkMapKey(&(*_self_), (&(_52817_pmap.get()._field_Val)),_53217_m.get()._field_Val));
	return _52758_ok;
}



inline jule::Bool _211b7a639_annotateFn(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _53741_k) {
	jule::Bool _53757_ok = jule::Bool();
	jule::Ptr<_211022c35_FnIns> _53817_pf = _211bb9755_Fn((*((*_self_)._field_k)).ptr());;
	if ((_53817_pf == nullptr)) {
		_53757_ok = false;
		return _53757_ok;
	};
	jule::Ptr<_211022c35_FnIns> _54217_f = _211bb9755_Fn(_53741_k.ptr());;
	{
		
		if ((_53817_pf.get()._field_Params.len() != _54217_f.get()._field_Params.len())) {
			_case_begin_21553b953:;
			{
				_53757_ok = false;
				return _53757_ok;
			}
		}
		else if ((_2110204e6_IsVoid(_53817_pf.get()._field_Decl.ptr()) != _2110204e6_IsVoid(_54217_f.get()._field_Decl.ptr()))) {
			_case_begin_21553b9ca:;
			{
				_53757_ok = false;
				return _53757_ok;
			}
		}
		_match_end_21553b8cb:;
	};
	_53757_ok=true;
	jule::Ptr<_211bb6455_TypeKind>* _55117_old = (*_self_)._field_k;;
	{
		auto &expr = _54217_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_21553d438:;
		if (it != expr.end()) {
			jule::I64 _55214_i = it - expr.begin();
			jule::Ptr<_211021d66_ParamIns> _55221_fp = *it;
			{
				(*_self_)._field_k=(&(_53817_pf.get()._field_Params[_55214_i].get()._field_Kind));
				_53757_ok=(_211b7b67e_annotateKind(&(*_self_), _55221_fp.get()._field_Kind) && _53757_ok);
			}
			_iter_next_21553d438:;
			++it;
			_55214_i++;
			goto _iter_begin_21553d438;
		}
		_iter_end_21553d438:;
	};
	if ((!(_2110204e6_IsVoid(_53817_pf.get()._field_Decl.ptr())))) {
		(*_self_)._field_k=(&(_53817_pf.get()._field_Result));
		_53757_ok=(_211b7b67e_annotateKind(&(*_self_), _54217_f.get()._field_Result) && _53757_ok);
	};
	(*_self_)._field_k=_55117_old;
	return _53757_ok;
}



inline jule::Bool _211b7a947_annotatePtr(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _56642_k) {
	jule::Bool _56658_ok = jule::Bool();
	jule::Ptr<_211bc2c25_Ptr> _56717_pptr = _211bb8a40_Ptr((*((*_self_)._field_k)).ptr());;
	if ((_56717_pptr == nullptr)) {
		_56658_ok = false;
		return _56658_ok;
	};
	jule::Ptr<_211bc2c25_Ptr> _57117_ptr = _211bb8a40_Ptr(_56642_k.ptr());;
	(*_self_)._field_k=(&(_56717_pptr.get()._field_Elem));
	_56658_ok = _211b7b67e_annotateKind(&(*_self_), _57117_ptr.get()._field_Elem);
	return _56658_ok;
}



inline jule::Bool _211b7ac55_annotateSptr(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _57643_k) {
	jule::Bool _57659_ok = jule::Bool();
	jule::Ptr<_211bbe6b1_Sptr> _57717_ssptr = _211bb87cb_Sptr((*((*_self_)._field_k)).ptr());;
	if ((_57717_ssptr == nullptr)) {
		_57659_ok = false;
		return _57659_ok;
	};
	jule::Ptr<_211bbe6b1_Sptr> _58117_sptr = _211bb87cb_Sptr(_57643_k.ptr());;
	(*_self_)._field_k=(&(_57717_ssptr.get()._field_Elem));
	_57659_ok = _211b7b67e_annotateKind(&(*_self_), _58117_sptr.get()._field_Elem);
	return _57659_ok;
}



inline jule::Bool _211b7b063_annotateStruct(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _58645_k) {
	jule::Bool _58661_ok = jule::Bool();
	jule::Ptr<_210e6db2b_StructIns> _58717_s = _211bb99b9_Struct((*((*_self_)._field_k)).ptr());;
	if ((_58717_s == nullptr)) {
		_58661_ok = false;
		return _58661_ok;
	};
	jule::Ptr<_210e6db2b_StructIns> _59117_s2 = _211bb99b9_Struct(_58645_k.ptr());;
	if ((_58717_s.get()._field_Generics.len() != _59117_s2.get()._field_Generics.len())) {
		_58661_ok = false;
		return _58661_ok;
	};
	{
		auto &expr = _58717_s.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_215546ebe:;
		if (it != expr.end()) {
			jule::I64 _59514_i = it - expr.begin();
			jule::Ptr<_211bb4c28_InsGeneric> _59521_g = *it;
			{
				jule::Ptr<_211bb4c28_InsGeneric> _59621_g2 = _59117_s2.get()._field_Generics[_59514_i];;
				if (_211bb6b5e_Equals(_59521_g.get()._field_Kind, _59621_g2.get()._field_Kind)) {
					goto _iter_next_215546ebe;
				};
				(*_self_)._field_k=(&(_59521_g.get()._field_Kind));
				if ((!(_211b7b67e_annotateKind(&(*_self_), _59621_g2.get()._field_Kind)))) {
					_58661_ok = false;
					return _58661_ok;
				};
			}
			_iter_next_215546ebe:;
			++it;
			_59514_i++;
			goto _iter_begin_215546ebe;
		}
		_iter_end_215546ebe:;
	};
	_58661_ok = true;
	return _58661_ok;
}



inline jule::Bool _211b7b371_annotateAny(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _60842_k) {
	jule::Bool _60858_ok = jule::Bool();
	jule::Str _60913_kind = _211bb6851_Str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_21554a0c1:;
		if (it != expr.end()) {
			jule::I64 _61013_i = it - expr.begin();
			jule::Ptr<_210e5e688_GenericDecl> _61016_g = *it;
			{
				if ((_60913_kind != _61016_g.get()._field_Ident)) {
					goto _iter_next_21554a0c1;
				};
				jule::Ptr<_211bb4c28_InsGeneric> _61417_t = (*_self_)._field_f.get()._field_Generics[_61013_i];;
				{
					
					if ((_61417_t == nullptr) || (_61417_t.get()._field_Kind == nullptr)) {
						_case_begin_21554bc1b:;
						{
							_211b7923c_pushGeneric(&(*_self_), _60842_k,_61013_i);
						}
					}
					else if ((!(_211bb6b5e_Equals(_61417_t.get()._field_Kind, _60842_k)))) {
						_case_begin_21554bc93:;
						{
							_60858_ok = false;
							return _60858_ok;
						}
					}
					_match_end_21554baa6:;
				};
				(*((*_self_)._field_k)).get()._field_Kind=_60842_k.get()._field_Kind;
				_60858_ok = true;
				return _60858_ok;
			}
			_iter_next_21554a0c1:;
			++it;
			_61013_i++;
			goto _iter_begin_21554a0c1;
		}
		_iter_end_21554a0c1:;
	};
	_60858_ok = false;
	return _60858_ok;
}



inline jule::Bool _211b7b67e_annotateKind(_211b777bd_dynamicTypeAnnotation* _self_, jule::Ptr<_211bb6455_TypeKind>& _63043_k) {
	jule::Bool _63059_ok = jule::Bool();
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _63059_ok;
	};
	{
		
		if (_211b7b371_annotateAny(&(*_self_), _63043_k)) {
			_case_begin_21554ed51:;
			{
				_63059_ok = true;
				return _63059_ok;
			}
		}
		else if ((_211bb8567_Prim(_63043_k.ptr()) != nullptr)) {
			_case_begin_21554edb7:;
			{
				_63059_ok = _211b7954a_annotatePrim(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_211bb927c_Arr(_63043_k.ptr()) != nullptr)) {
			_case_begin_21554ea65:;
			{
				_63059_ok = _211b79858_annotateArr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_211bb94e1_Slc(_63043_k.ptr()) != nullptr)) {
			_case_begin_21554eacb:;
			{
				_63059_ok = _211b79b66_annotateSlc(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_211bb9e92_Map(_63043_k.ptr()) != nullptr)) {
			_case_begin_21554eb42:;
			{
				_63059_ok = _211b7a32b_annotateMap(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_211bb9755_Fn(_63043_k.ptr()) != nullptr)) {
			_case_begin_21554e669:;
			{
				_63059_ok = _211b7a639_annotateFn(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_211bb8a40_Ptr(_63043_k.ptr()) != nullptr)) {
			_case_begin_21554e6d0:;
			{
				_63059_ok = _211b7a947_annotatePtr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_211bb87cb_Sptr(_63043_k.ptr()) != nullptr)) {
			_case_begin_21554e746:;
			{
				_63059_ok = _211b7ac55_annotateSptr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_211bb99b9_Struct(_63043_k.ptr()) != nullptr)) {
			_case_begin_21554e7ac:;
			{
				_63059_ok = _211b7b063_annotateStruct(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else {
			_case_begin_21554e603:;
			{
				_63059_ok = false;
				return _63059_ok;
			}
		}
		_match_end_21554e59d:;
	};
}



inline jule::Bool _211b7b8e3_annotate(_211b777bd_dynamicTypeAnnotation* _self_) {
	jule::Bool _65836_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_Kind));
	_65836_ok = _211b7b67e_annotateKind(&(*_self_), (*_self_)._field_a.get()._field_Kind);
	return _65836_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _211b777bd_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c;
	_Stream << "}";
	return _Stream;
}



inline void _211b7c619_pushErrToken(_211b7c0b9_fnCallArgChecker* _self_, jule::Ptr<_20e7ddc0b_Token> _67431_token, jule::Str _67446_fmt, jule::Slice<jule::Any> _67459_args) {
	_211b28186_pushErr((*_self_)._field_e.get()._field_s.ptr(), _67431_token,_67446_fmt,jule::Any(_67459_args));
}



inline void _211b7c938_pushErr(_211b7c0b9_fnCallArgChecker* _self_, jule::Str _67826_fmt, jule::Slice<jule::Any> _67839_args) {
	_211b7c619_pushErrToken(&(*_self_), (*_self_)._field_errorToken,_67826_fmt,jule::Any(_67839_args));
}



inline jule::Slice<jule::Ptr<_211021d66_ParamIns>> _211b7cb9c_getParams(_211b7c0b9_fnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_Params.len() > 0LL) && ((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _21101dd74_IsSelf((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*_self_)._field_f.get()._field_Params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_Params;
}



inline jule::Bool _211b7ceaa_checkCounts(_211b7c0b9_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_211021d66_ParamIns>>& _69131_params) {
	jule::Bool _69154_ok = jule::Bool();
	jule::I64 _69217_n = _69131_params.len();;
	if (((_69217_n > 0LL) && _21101dd74_IsSelf(_69131_params[0LL].get()._field_Decl.ptr()))) {
		(_69217_n)--;
	};
	jule::I64 _69717_diff = (_69217_n - (*_self_)._field_args.len());;
	{
		
		if ((_69717_diff == 0LL)) {
			_case_begin_21555b874:;
			{
				_69154_ok = true;
				return _69154_ok;
			}
		}
		else if (((_69217_n > 0LL) && _69131_params[(_69217_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_21555b8eb:;
			{
				_69154_ok = true;
				return _69154_ok;
			}
		}
		else if (((_69717_diff < 0LL) || (_69717_diff > _69131_params.len()))) {
			_case_begin_21555b973:;
			{
				_211b7c938_pushErr(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_69154_ok = false;
				return _69154_ok;
			}
		}
		_match_end_21555b81e:;
	};
	jule::Str _70817_idents = jule::Str();;
	for (; (_69717_diff > 0LL); (_69717_diff)--) {
		{
			_70817_idents+=(jule::Str(", ", 2) + _69131_params[(_69217_n - _69717_diff)].get()._field_Decl.get()._field_Ident);
		}
	_iter_next_21555da63:;
	}
	_iter_end_21555da63:;;
	(_70817_idents).mut_slice(2LL);;
	_211b7c938_pushErr(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_70817_idents)}));
	_69154_ok = false;
	return _69154_ok;
}



inline jule::Bool _211b7d40b_checkArg(_211b7c0b9_fnCallArgChecker* _self_, jule::Ptr<_211021d66_ParamIns>& _71832_p, jule::Ptr<_211b8a319_Data>& _71851_arg, jule::Ptr<_20e7ddc0b_Token>& _71868_errorToken) {
	jule::Bool _71890_ok = jule::Bool();
	if (((*_self_)._field_dynamicAnnotation && _211024d47_parameterUsesGenerics(_71832_p.get()._field_Decl,(*_self_)._field_f.get()._field_Decl.get()._field_Generics))) {
		_71890_ok=(!(_71832_p.get()._field_Decl.get()._field_Variadic));
		if (_71890_ok) {
			_211b777bd_dynamicTypeAnnotation _72225_dta = _211b777bd_dynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_71832_p, ._field_a=_71851_arg, ._field_errorToken=_71868_errorToken, };;
			_71890_ok=_211b7b8e3_annotate(&_72225_dta);
		};
		if ((!(_71890_ok))) {
			_211b7c619_pushErrToken(&(*_self_), _71868_errorToken,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_71890_ok = false;
			return _71890_ok;
		};
	};
	if (_211b32ca6_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, _71832_p.get()._field_Decl.get()._field_Mutable,_71832_p.get()._field_Decl.get()._field_Reference,_71832_p.get()._field_Kind,_71851_arg,_71868_errorToken)) {
		_211b3006c_checkAssignType((*_self_)._field_e.get()._field_s, _71832_p.get()._field_Decl.get()._field_Reference,_71832_p.get()._field_Kind,_71851_arg,_71868_errorToken);
	};
	_71890_ok = true;
	return _71890_ok;
}



inline jule::Bool _211b7d7b3_push(_211b7c0b9_fnCallArgChecker* _self_, jule::Ptr<_211021d66_ParamIns>& _74528_p, jule::Ptr<_210e565c5_Expr> _74546_arg) {
	jule::Bool _74560_ok = jule::Bool();
	jule::Ptr<_211bb6455_TypeKind> _74617_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _74713_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_211b8a319_Data> _74817_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_74528_p.get()._field_Decl.get()._field_Mutable));
	if (((!((*_self_)._field_dynamicAnnotation)) && (!(_74528_p.get()._field_Decl.get()._field_Variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_74528_p.get()._field_Kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_74817_d=_211ba7534_evalExprKind((*_self_)._field_e, _74546_arg.get()._field_Kind);
	(*_self_)._field_e.get()._field_prefix=_74617_old;
	(*_self_)._field_e.get()._field_immutable=_74713_old_immut;
	if ((_74817_d == nullptr)) {
		_74560_ok = false;
		return _74560_ok;
	};
	_74560_ok=_211b7d40b_checkArg(&(*_self_), _74528_p,_74817_d,_74546_arg.get()._field_Token);
	(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_74817_d.get()._field_Model);;
	return _74560_ok;
}



inline jule::Bool _211b7db6a_pushVariadic(_211b7c0b9_fnCallArgChecker* _self_, jule::Ptr<_211021d66_ParamIns>& _77036_p, jule::I64 _77054_i) {
	jule::Bool _77064_ok = jule::Bool();
	_77064_ok=true;
	jule::Bool _77217_variadiced = false;;
	jule::Bool _77313_more = ((_77054_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_211018aa5_SliceExprModel> _77417_model = jule::new_ptr<_211018aa5_SliceExprModel>(_211018aa5_SliceExprModel{._field_ElemKind=_77036_p.get()._field_Kind, });;
	jule::Ptr<_211bb6455_TypeKind> _77817_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _78313_variadic = _77036_p.get()._field_Kind.get()._field_Variadic;;
	_77036_p.get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		_77036_p.get()._field_Kind.get()._field_Variadic=_78313_variadic;
	});;
	for (; (_77054_i < (*_self_)._field_args.len()); (_77054_i)++) {
		{
			jule::Ptr<_210e565c5_Expr> _79021_arg = (*_self_)._field_args[_77054_i];;
			{
				auto &_match_expr{ _79021_arg.get()._field_Kind };
				
				if (_match_expr.type_is<jule::Ptr<_210e591ee_VariadicExpr>>()) {
					_case_begin_215569bd4:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_211bc011d_Slc>(_211bc011d_Slc{._field_Elem=_77036_p.get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_21556d16b:;
					{
						(*_self_)._field_e.get()._field_prefix=_77036_p.get()._field_Kind;
					}
				}
				_match_end_21556ced4:;
			};
			jule::Ptr<_211b8a319_Data> _80321_d = _211ba7842_eval((*_self_)._field_e, _79021_arg);;
			if ((_80321_d == nullptr)) {
				_77064_ok=false;
				goto _iter_next_21556bbd6;
			};
			if (_80321_d.get()._field_Kind.get()._field_Variadic) {
				_77217_variadiced=true;
				_77036_p.get()._field_Kind.get()._field_Variadic=true;
				_77064_ok=(_77064_ok && _211b7d40b_checkArg(&(*_self_), _77036_p,_80321_d,_79021_arg.get()._field_Token));
				{
					auto &_match_expr{ _80321_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_211018aa5_SliceExprModel>>()) {
						_case_begin_215570426:;
						{
							_77417_model=_80321_d.get()._field_Model.operator jule::Ptr<_211018aa5_SliceExprModel>();
							_77417_model.get()._field_ElemKind=_77036_p.get()._field_Kind;
						}
					}
					else {
						_case_begin_2155712a1:;
						{
							_77417_model=nullptr;
							(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_80321_d.get()._field_Model);;
						}
					}
					_match_end_21556eca5:;
				};
				(_77054_i)++;
				goto _iter_end_21556bbd6;
			};
			_77064_ok=(_77064_ok && _211b7d40b_checkArg(&(*_self_), _77036_p,_80321_d,_79021_arg.get()._field_Token));
			_77417_model.get()._field_Elems = jule::alloc_for_append(_77417_model.get()._field_Elems,1);_77417_model.get()._field_Elems.__push(_80321_d.get()._field_Model);;
		}
	_iter_next_21556bbd6:;
	}
	_iter_end_21556bbd6:;;
	(*_self_)._field_e.get()._field_prefix=_77817_old;
	if ((_77217_variadiced && _77313_more)) {
		_211b7c619_pushErrToken(&(*_self_), (*_self_)._field_args[_77054_i].get()._field_Token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_77417_model != nullptr)) {
		(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(static_cast<jule::Any>(_77417_model));;
	};
	return _77064_ok;
}



inline jule::Bool _211b7de78_checkArgs(_211b7c0b9_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_211021d66_ParamIns>>& _84633_params) {
	jule::Bool _84656_ok = jule::Bool();
	jule::Bool _84713_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_84656_ok=true;
	jule::I64 _85117_i = 0LL;;
	if (((_84633_params.len() > 0LL) && _21101dd74_IsSelf(_84633_params[0LL].get()._field_Decl.ptr()))) {
		(_85117_i)++;
	};
	_julec_label_iter:;
	while ((_85117_i < _84633_params.len())) {
		{
			jule::Ptr<_211021d66_ParamIns> _85821_p = _84633_params[_85117_i];;
			{
				
				if (_85821_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_215577a9e:;
					{
						_84656_ok=(_211b7db6a_pushVariadic(&(*_self_), _85821_p,_85117_i) && _84656_ok);
						goto _iter_end_215576086;
					}
				}
				else if (((*_self_)._field_args.len() <= _85117_i)) {
					_case_begin_21557721e:;
					{
						_84656_ok=false;
						goto _iter_end_215576086;
					}
				}
				else {
					_case_begin_215577708:;
					{
						_84656_ok=(_211b7d7b3_push(&(*_self_), _85821_p,(*_self_)._field_args[_85117_i]) && _84656_ok);
					}
				}
				_match_end_215577692:;
			};
			(_85117_i)++;
		}
	_iter_next_215576086:;
	}
	_iter_end_215576086:;;
	(*_self_)._field_e.get()._field_arg=_84713_arg;
	return _84656_ok;
}



inline jule::Bool _211b7e20e_checkDynamicTypeAnnotation(_211b7c0b9_fnCallArgChecker* _self_) {
	jule::Bool _87747_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_215579b7d:;
		if (it != expr.end()) {
			jule::Ptr<_211bb4c28_InsGeneric> _87816_g = *it;
			{
				if ((_87816_g == nullptr)) {
					_211b7c938_pushErr(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_87747_ok = false;
					return _87747_ok;
				};
			}
			_iter_next_215579b7d:;
			++it;
			goto _iter_begin_215579b7d;
		}
		_iter_end_215579b7d:;
	};
	_87747_ok = true;
	return _87747_ok;
}



inline jule::Bool _211b7e484_check(_211b7c0b9_fnCallArgChecker* _self_) {
	jule::Bool _88726_ok = jule::Bool();
	jule::Slice<jule::Ptr<_211021d66_ParamIns>> _88817_params = _211b7cb9c_getParams(&(*_self_));;
	_88726_ok=_211b7ceaa_checkCounts(&(*_self_), _88817_params);
	if ((!(_88726_ok))) {
		_88726_ok = false;
		return _88726_ok;
	};
	_88726_ok=_211b7de78_checkArgs(&(*_self_), _88817_params);
	if ((_88726_ok && (*_self_)._field_dynamicAnnotation)) {
		_88726_ok=_211b7e20e_checkDynamicTypeAnnotation(&(*_self_));
	};
	return _88726_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _211b7c0b9_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels;
	_Stream << "}";
	return _Stream;
}



inline void _211b7eece_pushErr(_211b7e9c3_structLitChecker* _self_, jule::Ptr<_20e7ddc0b_Token> _90926_token, jule::Str _90941_fmt, jule::Slice<jule::Any> _90954_args) {
	_211b8c393_pushErr((*_self_)._field_e.ptr(), _90926_token,_90941_fmt,jule::Any(_90954_args));
}



inline void _211b802ed_pushSugggestion(_211b7e9c3_structLitChecker* _self_, jule::Str _91434_fmt, jule::Slice<jule::Any> _91447_args) {
	_211b8c6b2_pushSugggestion((*_self_)._field_e.ptr(), _91434_fmt,jule::Any(_91447_args));
}



inline void _211b806b6_pushMatch(_211b7e9c3_structLitChecker* _self_, jule::Ptr<_210e49e48_FieldIns>& _91833_f, jule::Ptr<_211b8a319_Data>& _91852_d, jule::Ptr<_20e7ddc0b_Token>& _91867_errorToken) {
	;
	if (_211b32ca6_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_91833_f.get()._field_Kind,_91852_d,_91867_errorToken)) {
		_211b3006c_checkAssignType((*_self_)._field_e.get()._field_s, false,_91833_f.get()._field_Kind,_91852_d,_91867_errorToken);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_211018115_StructArgExprModel>(_211018115_StructArgExprModel{._field_Field=_91833_f, ._field_Expr=_91852_d.get()._field_Model}));;
}



inline void _211b809d5_checkPair(_211b7e9c3_structLitChecker* _self_, jule::Ptr<_210e5b322_FieldExprPair>& _93133_pair, jule::Slice<jule::Ptr<_210e565c5_Expr>>& _93160_exprs) {
	jule::Ptr<_210e49e48_FieldIns> _93317_f = _210e48c9e_FindField((*_self_)._field_s.ptr(), _93133_pair.get()._field_Field.get()._field_Kind);;
	if ((_93317_f == nullptr)) {
		_211b7eece_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
		return;;
	};
	if ((!(_211b2885c_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _93317_f.get()._field_Decl.get()._field_Public,_93317_f.get()._field_Decl.get()._field_Token)))) {
		_211b7eece_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
		_211b802ed_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _93160_exprs;
		auto it = expr.begin();
		_iter_begin_2155838ce:;
		if (it != expr.end()) {
			jule::Ptr<_210e565c5_Expr> _94521_expr = *it;
			{
				{
					auto &_match_expr{ _94521_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_210e5b322_FieldExprPair>>()) {
						_case_begin_2155859ad:;
						{
							jule::Ptr<_210e5b322_FieldExprPair> _94825_dpair = _94521_expr.get()._field_Kind.operator jule::Ptr<_210e5b322_FieldExprPair>();;
							{
								
								if ((_93133_pair == _94825_dpair)) {
									_case_begin_215586959:;
									{
										goto _iter_end_2155838ce;
									}
								}
								else if ((_93133_pair.get()._field_Field.get()._field_Kind == _94825_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_2155869d1:;
									{
										_211b7eece_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
										goto _iter_end_2155838ce;
									}
								}
								_match_end_21558689e:;
							};
						}
					}
					_match_end_21558578d:;
				};
			}
			_iter_next_2155838ce:;
			++it;
			goto _iter_begin_2155838ce;
		}
		_iter_end_2155838ce:;
	};
	jule::Ptr<_211bb6455_TypeKind> _95917_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_95917_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_93317_f.get()._field_Kind;
	jule::Ptr<_211b8a319_Data> _96317_d = _211ba7534_evalExprKind((*_self_)._field_e, _93133_pair.get()._field_Expr.get()._field_Kind);;
	if ((_96317_d == nullptr)) {
		return;;
	};
	_211b806b6_pushMatch(&(*_self_), _93317_f,_96317_d,_93133_pair.get()._field_Field);
}



inline jule::Bool _211b80ce3_readyExprs(_211b7e9c3_structLitChecker* _self_, jule::Slice<jule::Ptr<_210e565c5_Expr>>& _97034_exprs) {
	jule::Bool _97117_ok = true;;
	{
		auto &expr = _97034_exprs;
		auto it = expr.begin();
		_iter_begin_21558a61c:;
		if (it != expr.end()) {
			jule::I64 _97214_i = it - expr.begin();
			jule::Ptr<_210e565c5_Expr> _97221_expr = *it;
			{
				{
					auto &_match_expr{ _97221_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_210e5ca0a_KeyValPair>>()) {
						_case_begin_21558b3dc:;
						{
							jule::Ptr<_210e5ca0a_KeyValPair> _97525_pair = _97221_expr.get()._field_Kind.operator jule::Ptr<_210e5ca0a_KeyValPair>();;
							{
								auto &_match_expr{ _97525_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type_is<jule::Ptr<_210e5863d_IdentExpr>>()) {
									_case_begin_21558bc06:;
									{
										goto _match_end_21558c19b;
									}
								}
								else {
									_case_begin_21558c421:;
									{
										_211b7eece_pushErr(&(*_self_), _97525_pair.get()._field_Colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_97117_ok=false;
										goto _iter_next_21558a61c;
									}
								}
								_match_end_21558c19b:;
							};
							_97034_exprs[_97214_i].get()._field_Kind=static_cast<jule::Any>(jule::new_ptr<_210e5b322_FieldExprPair>(_210e5b322_FieldExprPair{._field_Field=_97525_pair.get()._field_Key.get()._field_Token, ._field_Expr=_97525_pair.get()._field_Val}));
						}
					}
					_match_end_21558b1bc:;
				};
			}
			_iter_next_21558a61c:;
			++it;
			_97214_i++;
			goto _iter_begin_21558a61c;
		}
		_iter_end_21558a61c:;
	};
	return _97117_ok;
}



inline void _211b81068_check(_211b7e9c3_structLitChecker* _self_, jule::Slice<jule::Ptr<_210e565c5_Expr>>& _99429_exprs) {
	if ((_99429_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_211b80ce3_readyExprs(&(*_self_), _99429_exprs)))) {
		return;;
	};
	jule::Bool _100117_paired = false;;
	{
		auto &expr = _99429_exprs;
		auto it = expr.begin();
		_iter_begin_21558b6b7:;
		if (it != expr.end()) {
			jule::I64 _100214_i = it - expr.begin();
			jule::Ptr<_210e565c5_Expr> _100221_expr = *it;
			{
				{
					auto &_match_expr{ _100221_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_210e5b322_FieldExprPair>>()) {
						_case_begin_2155953e6:;
						{
							jule::Ptr<_210e5b322_FieldExprPair> _100525_pair = _100221_expr.get()._field_Kind.operator jule::Ptr<_210e5b322_FieldExprPair>();;
							if (((_100214_i > 0LL) && (!(_100117_paired)))) {
								_211b7eece_pushErr(&(*_self_), _100525_pair.get()._field_Field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_100117_paired=true;
							_211b809d5_checkPair(&(*_self_), _100525_pair,_99429_exprs);
						}
					}
					else {
						_case_begin_215590787:;
						{
							if (_100117_paired) {
								_211b7eece_pushErr(&(*_self_), _100221_expr.get()._field_Token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_100214_i >= (*_self_)._field_s.get()._field_Fields.len())) {
								_211b7eece_pushErr(&(*_self_), _100221_expr.get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_21558b6b7;
							};
							jule::Ptr<_210e49e48_FieldIns> _102025_field = (*_self_)._field_s.get()._field_Fields[_100214_i];;
							if ((!(_211b2885c_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _102025_field.get()._field_Decl.get()._field_Public,_102025_field.get()._field_Decl.get()._field_Token)))) {
								_211b7eece_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_211b802ed_pushSugggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_211bb6455_TypeKind> _102825_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_102825_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_102025_field.get()._field_Kind;
							jule::Ptr<_211b8a319_Data> _103225_d = _211ba7534_evalExprKind((*_self_)._field_e, _100221_expr.get()._field_Kind);;
							if ((_103225_d == nullptr)) {
								goto _iter_next_21558b6b7;
							};
							_211b806b6_pushMatch(&(*_self_), _102025_field,_103225_d,_100221_expr.get()._field_Token);
						}
					}
					_match_end_215590600:;
				};
			}
			_iter_next_21558b6b7:;
			++it;
			_100214_i++;
			goto _iter_begin_21558b6b7;
		}
		_iter_end_21558b6b7:;
	};
	if ((!(_100117_paired))) {
		jule::I64 _104317_n = (*_self_)._field_s.get()._field_Fields.len();;
		jule::I64 _104421_diff = (_104317_n - _99429_exprs.len());;
		{
			
			if ((_104421_diff <= 0LL)) {
				_case_begin_21559851a:;
				{
					return;;
				}
			}
			_match_end_2155983b6:;
		};
		jule::Str _105021_idents = jule::Str();;
		for (; (_104421_diff > 0LL); (_104421_diff)--) {
			{
				_105021_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_Fields[(_104317_n - _104421_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_215598e66:;
		}
		_iter_end_215598e66:;;
		(_105021_idents).mut_slice(2LL);;
		_211b7eece_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_105021_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _211b7e9c3_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_211b43228_Var> _211b81a4c_buildVar(_211b815a7_rangeChecker* _self_, jule::Ptr<_210e64d97_VarDecl>& _106928_decl) {
	jule::Ptr<_211b43228_Var> _107017_v = _21102a8ca_buildVar(_106928_decl);;
	return _107017_v;
}



inline void _211b81c28_setSizeKey(_211b815a7_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _20e7e14a0_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyA=_211b81a4c_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_211bba5ad_TypeSymbol>(_211bba5ad_TypeSymbol{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_211b43228_Var>>()) {
			_case_begin_21559ccb1:;
			{
				(*_self_)._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_211b422b0_IterRelation>(_211b422b0_IterRelation{._field_Range=(*_self_)._field_d.get()._field_Model.operator jule::Ptr<_211b43228_Var>()});
			}
		}
		_match_end_21559cc28:;
	};
}



inline void _211b820e1_checkRangeExprValidity(_211b815a7_rangeChecker* _self_, jule::Ptr<_211b8a319_Data>& _110046_d, jule::Ptr<_211b43228_Var>& _110057_key, jule::Ptr<_211bb6455_TypeKind>& _110073_k) {
	jule::Bool _110117__mut = _110057_key.get()._field_Mutable;;
	if ((_110117__mut && (!(_211bb7852_Mutable(_110073_k.ptr()))))) {
		_110117__mut=false;
	};
	_211b32ca6_checkValidityForInitExpr((*_self_)._field_sc.get()._field_s, _110117__mut,_110057_key.get()._field_Reference,_110057_key.get()._field_Kind.get()._field_Kind,_110046_d,(*_self_)._field_rang.get()._field_InToken);
}



inline void _211b822bc_checkSlice(_211b815a7_rangeChecker* _self_) {
	_211b81c28_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _20e7e14a0_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_211bc011d_Slc> _111917_slc = _211bb94e1_Slc((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_211b81a4c_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_211bba5ad_TypeSymbol>(_211bba5ad_TypeSymbol{._field_Kind=_111917_slc.get()._field_Elem});
	_211b820e1_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_111917_slc.get()._field_Elem);
}



inline void _211b82498_checkArray(_211b815a7_rangeChecker* _self_) {
	_211b81c28_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _20e7e14a0_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_211bc22b8_Arr> _113217_arr = _211bb927c_Arr((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_211b81a4c_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_211bba5ad_TypeSymbol>(_211bba5ad_TypeSymbol{._field_Kind=_113217_arr.get()._field_Elem});
	_211b820e1_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_113217_arr.get()._field_Elem);
}



inline void _211b82674_checkMapKeyA(_211b815a7_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _20e7e14a0_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_211bc16c4_Map> _114417_m = _211bb9e92_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyA=_211b81a4c_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_211bba5ad_TypeSymbol>(_211bba5ad_TypeSymbol{._field_Kind=_114417_m.get()._field_Key});
	jule::Ptr<_211b8a319_Data> _114817_d = jule::new_ptr<_211b8a319_Data>((*((*_self_)._field_d)));;
	_114817_d.get()._field_Kind=_114417_m.get()._field_Key;
	_211b820e1_checkRangeExprValidity(&(*_self_), _114817_d,(*_self_)._field_Kind.get()._field_KeyA,_114417_m.get()._field_Key);
}



inline void _211b82850_checkMapKeyB(_211b815a7_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _20e7e14a0_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_211bc16c4_Map> _115917_m = _211bb9e92_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_211b81a4c_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_211bba5ad_TypeSymbol>(_211bba5ad_TypeSymbol{._field_Kind=_115917_m.get()._field_Val});
	jule::Ptr<_211b8a319_Data> _116317_d = jule::new_ptr<_211b8a319_Data>((*((*_self_)._field_d)));;
	_116317_d.get()._field_Kind=_115917_m.get()._field_Val;
	_211b820e1_checkRangeExprValidity(&(*_self_), _116317_d,(*_self_)._field_Kind.get()._field_KeyB,_115917_m.get()._field_Val);
}



inline void _211b82a2b_checkMap(_211b815a7_rangeChecker* _self_) {
	_211b82674_checkMapKeyA(&(*_self_));
	_211b82850_checkMapKeyB(&(*_self_));
}



inline void _211b82c07_checkStr(_211b815a7_rangeChecker* _self_) {
	_211b81c28_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _20e7e14a0_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyB=_211b81a4c_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_211bba5ad_TypeSymbol>(_211bba5ad_TypeSymbol{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _211b82e6b_check(_211b815a7_rangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_2155b2325:;
		}
		else if ((_211bb94e1_Slc((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2155b15dd:;
			{
				_211b822bc_checkSlice(&(*_self_));
				return true;
			}
		}
		else if ((_211bb927c_Arr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2155b1654:;
			{
				_211b82498_checkArray(&(*_self_));
				return true;
			}
		}
		else if ((_211bb9e92_Map((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2155b16ba:;
			{
				_211b82a2b_checkMap(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_2155b1577:;
			{
				jule::Ptr<_211bbae2c_Prim> _120117_prim = _211bb8567_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (((_120117_prim != nullptr) && _211bbe161_IsStr(_120117_prim.ptr()))) {
					_211b82c07_checkStr(&(*_self_));
					return true;
				};
			}
		}
		_match_end_2155b149a:;
	};
	_211b28186_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_InToken,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _211b815a7_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _211b83bb4_prepareTypes(_211b8370d_retTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_211023d57_Types((*_self_)._field_f.ptr());
	};
}



inline void _211b83e39_prepareExprs(_211b8370d_retTypeChecker* _self_, jule::Ptr<_210e565c5_Expr>& _123036_e) {
	if ((_123036_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _123036_e.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_210e57252_TupleExpr>>()) {
			_case_begin_2155b7715:;
			{
				(*_self_)._field_exprs=_123036_e.get()._field_Kind.operator jule::Ptr<_210e57252_TupleExpr>().get()._field_Expr;
			}
		}
		else {
			_case_begin_2155b736e:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_123036_e);;
			}
		}
		_match_end_2155b6e40:;
	};
}



inline void _211b84115_retVars(_211b8370d_retTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _2110204e6_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_211b43228_Var>>::alloc(0LL,(*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len());
	jule::Ptr<_211b0c214_scopeChecker> _124817_rootScope = _211b0d5de_getRoot((*_self_)._field_sc);;
	jule::I64 _125017_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_2155ba460:;
		if (it != expr.end()) {
			jule::I64 _125113_i = it - expr.begin();
			jule::Ptr<_20e7ddc0b_Token> _125116_ident = *it;
			{
				if (((!(_20e7e14a0_IsIgnoreIdent(_125116_ident.get()._field_Kind))) && (!(_20e7e1747_IsAnonIdent(_125116_ident.get()._field_Kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_124817_rootScope.get()._field_table.get()._field_Vars[_125017_j]);;
					(_125017_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_211b43228_Var>(_211b43228_Var{._field_Ident=jule::Str("_", 1), ._field_Kind=jule::new_ptr<_211bba5ad_TypeSymbol>(_211bba5ad_TypeSymbol{._field_Kind=(*_self_)._field_types[_125113_i]}), }));;
				};
			}
			_iter_next_2155ba460:;
			++it;
			_125113_i++;
			goto _iter_begin_2155ba460;
		}
		_iter_end_2155ba460:;
	};
	if ((_125017_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _211b842e1_checkExprs(_211b8370d_retTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_211b8a319_Data>> _127317_datas = jule::Slice<jule::Ptr<_211b8a319_Data>>::alloc(0LL,(*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_2155bdd8c:;
		if (it != expr.end()) {
			jule::I64 _127414_i = it - expr.begin();
			jule::Ptr<_210e565c5_Expr> _127421_expr = *it;
			{
				if ((_127414_i >= (*_self_)._field_types.len())) {
					goto _iter_end_2155bdd8c;
				};
				jule::Ptr<_211bb6455_TypeKind> _127921_t = (*_self_)._field_types[_127414_i];;
				jule::Ptr<_211b8a319_Data> _128121_d = _211ba7b50_evalExpr(_211b2e764_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_211bd2086_Lookup>((*_self_)._field_sc, 0),_127921_t), _127421_expr);;
				if ((_128121_d == nullptr)) {
					goto _iter_next_2155bdd8c;
				};
				_127317_datas = jule::alloc_for_append(_127317_datas,1);_127317_datas.__push(_128121_d);;
				if (((!(_128121_d.get()._field_Mutable)) && _211bb7852_Mutable(_128121_d.get()._field_Kind.ptr()))) {
					_211b28186_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_211b75da4_assignTypeChecker _129321_ac = _211b75da4_assignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_127921_t, ._field_d=_128121_d, ._field_errorToken=(*_self_)._field_errorToken};;
				_211b7702b_check(&_129321_ac);
			}
			_iter_next_2155bdd8c:;
			++it;
			_127414_i++;
			goto _iter_begin_2155bdd8c;
		}
		_iter_end_2155bdd8c:;
	};
	if ((_127317_datas.len() > 1LL)) {
		(*_self_)._field_model=static_cast<jule::Any>(jule::new_ptr<_21101a5e0_TupleExprModel>(_21101a5e0_TupleExprModel{._field_Datas=_127317_datas}));
	} else if ((_127317_datas.len() == 1LL)) {
		(*_self_)._field_model=_127317_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _211b845ee_check(_211b8370d_retTypeChecker* _self_, jule::Ptr<_210e565c5_Expr>& _131229_e) {
	_211b83bb4_prepareTypes(&(*_self_));
	_211b83e39_prepareExprs(&(*_self_), _131229_e);
	_211b84115_retVars(&(*_self_));
	jule::I64 _131713_n = (*_self_)._field_exprs.len();;
	if (((_131713_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_21102120b_AnyVar((*_self_)._field_f.get()._field_Decl.ptr())))) {
			_211b28186_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_131713_n > 0LL) && ((*_self_)._field_f != nullptr)) && _2110204e6_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		_211b28186_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_131713_n > (*_self_)._field_types.len())) {
		_211b28186_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_131713_n < (*_self_)._field_types.len())) {
		_211b28186_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_211b842e1_checkExprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _211b8370d_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_211b1c378_ImportInfo> _211b85ac8_FindPackage(_211b855ab_SymbolTable* _self_, jule::Str _2630_ident) {
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_2155cac9a:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2630_ident)) {
					return _2721_pkg;
				};
			}
			_iter_next_2155cac9a:;
			++it;
			goto _iter_begin_2155cac9a;
		}
		_iter_end_2155cac9a:;
	};
	return nullptr;
}



inline jule::Ptr<_211b1c378_ImportInfo> _211b85dd6_SelectPackage(_211b855ab_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_211b1c378_ImportInfo>)> _3832_selector) {
	if ((_3832_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_2155cbd89:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _4221_pkg = *it;
			{
				if (_3832_selector(_4221_pkg)) {
					return _4221_pkg;
				};
			}
			_iter_next_2155cbd89:;
			++it;
			goto _iter_begin_2155cbd89;
		}
		_iter_end_2155cbd89:;
	};
	return nullptr;
}



inline jule::Ptr<_211b43228_Var> _211b8628d_FindVar(_211b855ab_SymbolTable* _self_, jule::Str _5226_ident, jule::Bool _5238_cppLinked) {
	return _211b87d50_findVar(&(*_self_), _5226_ident,_5238_cppLinked,false);
}



inline jule::Ptr<_211bb5762_TypeAlias> _211b86645_FindTypeAlias(_211b855ab_SymbolTable* _self_, jule::Str _5832_ident, jule::Bool _5844_cppLinked) {
	return _211b882a1_findTypeAlias(&(*_self_), _5832_ident,_5844_cppLinked,false);
}



inline jule::Ptr<_210e427d1_Struct> _211b869ec_FindStruct(_211b855ab_SymbolTable* _self_, jule::Str _6429_ident, jule::Bool _6441_cppLinked) {
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_2155ce81a:;
		if (it != expr.end()) {
			jule::Ptr<_210e427d1_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6429_ident) && (_6521_s.get()._field_CppLinked == _6441_cppLinked))) {
					return _6521_s;
				};
			}
			_iter_next_2155ce81a:;
			++it;
			goto _iter_begin_2155ce81a;
		}
		_iter_end_2155ce81a:;
	};
	return nullptr;
}



inline jule::Ptr<_211020084_Fn> _211b86da4_FindFn(_211b855ab_SymbolTable* _self_, jule::Str _7525_ident, jule::Bool _7537_cppLinked) {
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_2155d0ca0:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7525_ident) && (_7621_f.get()._field_CppLinked == _7537_cppLinked))) {
					return _7621_f;
				};
			}
			_iter_next_2155d0ca0:;
			++it;
			goto _iter_begin_2155d0ca0;
		}
		_iter_end_2155d0ca0:;
	};
	return nullptr;
}



inline jule::Ptr<_211031e42_Trait> _211b871b2_FindTrait(_211b855ab_SymbolTable* _self_, jule::Str _8628_ident) {
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_2155d2059:;
		if (it != expr.end()) {
			jule::Ptr<_211031e42_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8628_ident)) {
					return _8721_t;
				};
			}
			_iter_next_2155d2059:;
			++it;
			goto _iter_begin_2155d2059;
		}
		_iter_end_2155d2059:;
	};
	return nullptr;
}



inline jule::Ptr<_211034087_Enum> _211b874c0_FindEnum(_211b855ab_SymbolTable* _self_, jule::Str _9727_ident) {
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_2155d3016:;
		if (it != expr.end()) {
			jule::Ptr<_211034087_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9727_ident)) {
					return _9821_e;
				};
			}
			_iter_next_2155d3016:;
			++it;
			goto _iter_begin_2155d3016;
		}
		_iter_end_2155d3016:;
	};
	return nullptr;
}



inline jule::Ptr<_211035682_TypeEnum> _211b877cd_FindTypeEnum(_211b855ab_SymbolTable* _self_, jule::Str _10831_ident) {
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_2155d3ec3:;
		if (it != expr.end()) {
			jule::Ptr<_211035682_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10831_ident)) {
					return _10921_e;
				};
			}
			_iter_next_2155d3ec3:;
			++it;
			goto _iter_begin_2155d3ec3;
		}
		_iter_end_2155d3ec3:;
	};
	return nullptr;
}



inline jule::Ptr<_211b43228_Var> _211b87d50_findVar(_211b855ab_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I64 _12121_i = ((*_self_)._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_211b43228_Var> _12325_v = (*_self_)._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;
				};
			}
		_iter_next_2155d6091:;
		}
		_iter_end_2155d6091:;;
	} else {
		{
			auto &expr = (*_self_)._field_Vars;
			auto it = expr.begin();
			_iter_begin_2155d6b30:;
			if (it != expr.end()) {
				jule::Ptr<_211b43228_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;
					};
				}
				_iter_next_2155d6b30:;
				++it;
				goto _iter_begin_2155d6b30;
			}
			_iter_end_2155d6b30:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_211bb5762_TypeAlias> _211b882a1_findTypeAlias(_211b855ab_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I64 _14021_i = ((*_self_)._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_211bb5762_TypeAlias> _14225_ta = (*_self_)._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;
				};
			}
		_iter_next_2155d93e6:;
		}
		_iter_end_2155d93e6:;;
	} else {
		{
			auto &expr = (*_self_)._field_TypeAliases;
			auto it = expr.begin();
			_iter_begin_2155d9e85:;
			if (it != expr.end()) {
				jule::Ptr<_211bb5762_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;
					};
				}
				_iter_next_2155d9e85:;
				++it;
				goto _iter_begin_2155d9e85;
			}
			_iter_end_2155d9e85:;
		};
	};
	return nullptr;
}



inline jule::Any _211b88658_defByIdent(_211b855ab_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_2155db8c1:;
		if (it != expr.end()) {
			jule::Ptr<_211b43228_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v);
				};
			}
			_iter_next_2155db8c1:;
			++it;
			goto _iter_begin_2155db8c1;
		}
		_iter_end_2155db8c1:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_2155dbd33:;
		if (it != expr.end()) {
			jule::Ptr<_211bb5762_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta);
				};
			}
			_iter_next_2155dbd33:;
			++it;
			goto _iter_begin_2155dbd33;
		}
		_iter_end_2155dbd33:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_2155dc828:;
		if (it != expr.end()) {
			jule::Ptr<_210e427d1_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s);
				};
			}
			_iter_next_2155dc828:;
			++it;
			goto _iter_begin_2155dc828;
		}
		_iter_end_2155dc828:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_2155dd670:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f);
				};
			}
			_iter_next_2155dd670:;
			++it;
			goto _iter_begin_2155dd670;
		}
		_iter_end_2155dd670:;
	};
	if (_15941_cppLinked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_2155e08e7:;
		if (it != expr.end()) {
			jule::Ptr<_211031e42_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t);
				};
			}
			_iter_next_2155e08e7:;
			++it;
			goto _iter_begin_2155e08e7;
		}
		_iter_end_2155e08e7:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_2155e1211:;
		if (it != expr.end()) {
			jule::Ptr<_211034087_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e);
				};
			}
			_iter_next_2155e1211:;
			++it;
			goto _iter_begin_2155e1211;
		}
		_iter_end_2155e1211:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_2155dd9e4:;
		if (it != expr.end()) {
			jule::Ptr<_211035682_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te);
				};
			}
			_iter_next_2155dd9e4:;
			++it;
			goto _iter_begin_2155dd9e4;
		}
		_iter_end_2155dd9e4:;
	};
	return nullptr;
}



inline jule::Bool _211b88aa9_isDuplicatedIdent(_211b855ab_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_2155e2dd3:;
		if (it != expr.end()) {
			jule::Ptr<_211b43228_Var> &_21316_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21316_v) != _21232_itself) && (_21316_v.get()._field_Ident == _21249_ident)) && (_21316_v.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_2155e2dd3:;
			++it;
			goto _iter_begin_2155e2dd3;
		}
		_iter_end_2155e2dd3:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_2155e42e1:;
		if (it != expr.end()) {
			jule::Ptr<_211bb5762_TypeAlias> &_21916_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21916_ta) != _21232_itself) && (_21916_ta.get()._field_Ident == _21249_ident)) && (_21916_ta.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_2155e42e1:;
			++it;
			goto _iter_begin_2155e42e1;
		}
		_iter_end_2155e42e1:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_2155e5468:;
		if (it != expr.end()) {
			jule::Ptr<_210e427d1_Struct> &_22516_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22516_s) != _21232_itself) && (_22516_s.get()._field_Ident == _21249_ident)) && (_22516_s.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_2155e5468:;
			++it;
			goto _iter_begin_2155e5468;
		}
		_iter_end_2155e5468:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_2155e6678:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> &_23116_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23116_f) != _21232_itself) && (_23116_f.get()._field_Ident == _21249_ident)) && (_23116_f.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_2155e6678:;
			++it;
			goto _iter_begin_2155e6678;
		}
		_iter_end_2155e6678:;
	};
	if (_21261_cppLinked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_2155e7a97:;
		if (it != expr.end()) {
			jule::Ptr<_211031e42_Trait> &_24116_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24116_t) != _21232_itself) && (_24116_t.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_2155e7a97:;
			++it;
			goto _iter_begin_2155e7a97;
		}
		_iter_end_2155e7a97:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_2155e8290:;
		if (it != expr.end()) {
			jule::Ptr<_211034087_Enum> &_24716_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24716_e) != _21232_itself) && (_24716_e.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_2155e8290:;
			++it;
			goto _iter_begin_2155e8290;
		}
		_iter_end_2155e8290:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_2155e96d1:;
		if (it != expr.end()) {
			jule::Ptr<_211035682_TypeEnum> &_25316_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25316_te) != _21232_itself) && (_25316_te.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_2155e96d1:;
			++it;
			goto _iter_begin_2155e96d1;
		}
		_iter_end_2155e96d1:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _211b855ab_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _211b8a704_IsNil(_211b8a319_Data* _self_) {
	return _211bb7379_IsNil((*_self_)._field_Kind.ptr());
}



inline jule::Bool _211b8a968_IsVoid(_211b8a319_Data* _self_) {
	return _211bb75dd_Void((*_self_)._field_Kind.ptr());
}



inline jule::Bool _211b8abcc_IsConst(_211b8a319_Data* _self_) {
	return ((*_self_)._field_Constant != nullptr);
}



inline jule::Bool _211b8aeda_GoodOperand(_211b8a319_Data* _self_, jule::Ptr<_211b8a319_Data>& _9631_other) {
	if ((_211bb9018_TypeEnum(_9631_other.get()._field_Kind.ptr()) != nullptr)) {
		return false;
	};
	return ((((_211bb8567_Prim(_9631_other.get()._field_Kind.ptr()) == nullptr) || (!(_211bbe3c5_IsAny(_211bb8567_Prim(_9631_other.get()._field_Kind.ptr()).ptr())))) && (_211bb9c2d_Trait(_9631_other.get()._field_Kind.ptr()) == nullptr)) && (!(_211bb7379_IsNil((*_self_)._field_Kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _211b8a319_Data _Src) {
	_Stream << "Data{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211b8b392_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _211b8c393_pushErr(_211b8bd87_Eval* _self_, jule::Ptr<_20e7ddc0b_Token> _12726_token, jule::Str _12741_fmt, jule::Slice<jule::Any> _12754_args) {
	_211b28186_pushErr((*_self_)._field_s.ptr(), _12726_token,_12741_fmt,jule::Any(_12754_args));
}



inline void _211b8c6b2_pushSugggestion(_211b8bd87_Eval* _self_, jule::Str _13234_fmt, jule::Slice<jule::Any> _13247_args) {
	_211b284a5_pushSugggestion((*_self_)._field_s.ptr(), _13234_fmt,jule::Any(_13247_args));
}



inline void _211b8c88d_allowBuiltin(_211b8bd87_Eval* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _211b8ca69_disallowBuiltin(_211b8bd87_Eval* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Bool _211b8cccd_isUnsafe(_211b8bd87_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _211b8d042_isGlobal(_211b8bd87_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_211b254c4_Sema>>()) {
			_case_begin_2244aa8d5:;
			{
				return true;
			}
		}
		else {
			_case_begin_2244aa2ec:;
			{
				return false;
			}
		}
		_match_end_2244aa297:;
	};
}



inline jule::Bool _211b8d31c_applyNumericPrefix(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data>& _15942_d) {
	if (((((_15942_d == nullptr) || (!(_211b8abcc_IsConst(_15942_d.ptr())))) || (_211bb8567_Prim(_15942_d.get()._field_Kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_211bbae2c_Prim> _16613_prim = _211bb8567_Prim((*_self_)._field_prefix.ptr());;
	if ((_16613_prim == nullptr)) {
		return false;
	};
	{
		
		if (_211b08d8c_IsFloat(_211bbb290_Str(_16613_prim.ptr()))) {
			_case_begin_2244ad267:;
			{
				_15942_d.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>((*((*_self_)._field_prefix)));
				_21101261a_SetF64(_15942_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_2110118a0_AsF64(_15942_d.get()._field_Constant.ptr())));
			}
		}
		else if (_211b089e6_IsSigInt(_211bbb290_Str(_16613_prim.ptr()))) {
			_case_begin_2244ad2cd:;
			{
				if ((!(_211b5b829_sigAssignable(_211bbb290_Str(_16613_prim.ptr()),_15942_d)))) {
					return false;
				};
				_15942_d.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>((*((*_self_)._field_prefix)));
				_211011b25_SetI64(_15942_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_2110113c7_AsI64(_15942_d.get()._field_Constant.ptr())));
			}
		}
		else if (_211b08b28_IsUnsigInt(_211bbb290_Str(_16613_prim.ptr()))) {
			_case_begin_2244ad344:;
			{
				if ((!(_211b72e17_unsigAssignable(_211bbb290_Str(_16613_prim.ptr()),_15942_d)))) {
					return false;
				};
				_15942_d.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>((*((*_self_)._field_prefix)));
				_211011d9a_SetU64(_15942_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_21101163b_AsU64(_15942_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_2244ad025:;
	};
	return true;
}



inline jule::Ptr<_211b8a319_Data> _211b8d581_litNil(_211b8bd87_Eval* _self_) {
	jule::Ptr<_210ea46cd_Const> _19517_constant = static__2110100b8_NewNil();;
	return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=nullptr}), ._field_Model=static_cast<jule::Any>(_19517_constant), ._field_Constant=_19517_constant});
}



inline jule::Ptr<_211b8a319_Data> _211b8d88e_litStr(_211b8bd87_Eval* _self_, jule::Ptr<_210e57609_LitExpr>& _20322_l) {
	jule::Str _20417_s = _20322_l.get()._field_Value.slice(1LL,(_20322_l.get()._field_Value.len() - 1LL));;
	if (_20e7e005e_IsRawStr(_20322_l.get()._field_Value)) {
		_20417_s=_211b73225_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20417_s));
	} else {
		_20417_s=_211b734cd_ToStr(static_cast<jule::Slice<jule::U8>>(_20417_s));
	};
	jule::Ptr<_210ea46cd_Const> _21017_constant = static__21100eb23_NewStr(_20417_s);;
	return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_21017_constant), ._field_Constant=_21017_constant});
}



inline jule::Ptr<_211b8a319_Data> _211b8db9c_litBool(_211b8bd87_Eval* _self_, jule::Ptr<_210e57609_LitExpr>& _22123_l) {
	jule::Ptr<_210ea46cd_Const> _22217_constant = static__21100e87b_NewBool((_22123_l.get()._field_Value == jule::Str("true", 4)));;
	return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Model=static_cast<jule::Any>(_22217_constant), ._field_Constant=_22217_constant});
}



inline jule::Ptr<_211b8a319_Data> _211b8deaa_litRune(_211b8bd87_Eval* _self_, jule::Ptr<_210e57609_LitExpr>& _23223_l) {
	;
	;
	jule::Str _23713_lt = _23223_l.get()._field_Value.slice(1LL,(_23223_l.get()._field_Value.len() - 1LL));;
	jule::I32 _23813_r = _211b5b40b_ToRune(static_cast<jule::Slice<jule::U8>>(_23713_lt));;
	jule::Ptr<_211b8a319_Data> _23917_data = jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Constant=static__21100e5b2_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_23813_r)))});;
	jule::Bool _24313_isAscii = _211b5b2c9_IsAscii(_23813_r);;
	if (_24313_isAscii) {
		_23917_data.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_23917_data.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_23917_data.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101c36c_RuneExprModel>(_21101c36c_RuneExprModel{._field_Code=_23813_r}));
	_23917_data.get()._field_IsRune=true;
	return _23917_data;
}



inline jule::Ptr<_211b8a319_Data> _211b8e2b8_litFloat(_211b8bd87_Eval* _self_, jule::Ptr<_210e57609_LitExpr>& _25924_l) {
	;
	jule::F64 _26213_f = ({
		auto except = _211969ba9_ParseFloat(_25924_l.get()._field_Value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_210ea46cd_Const> _26317_constant = static__21100edba_NewF64(_26213_f);;
	return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_26317_constant), ._field_Constant=_26317_constant});
}



inline jule::Ptr<_211b8a319_Data> _211b8e5c6_litInt(_211b8bd87_Eval* _self_, jule::Ptr<_210e57609_LitExpr>& _27426_l) {
	;
	jule::Str _27717_lit = _27426_l.get()._field_Value;;
	jule::I64 _27817_base = 0LL;;
	{
		
		if (_20e4446b9_HasPrefix(_27717_lit,jule::Str("0x", 2))) {
			_case_begin_2244be83e:;
			{
				(_27717_lit).mut_slice(2LL);;
				_27817_base=16LLU;
			}
		}
		else if (_20e4446b9_HasPrefix(_27717_lit,jule::Str("0b", 2))) {
			_case_begin_2244be520:;
			{
				(_27717_lit).mut_slice(2LL);;
				_27817_base=2LLU;
			}
		}
		else if (_20e4446b9_HasPrefix(_27717_lit,jule::Str("0o", 2))) {
			_case_begin_2244be586:;
			{
				(_27717_lit).mut_slice(2LL);;
				_27817_base=8LLU;
			}
		}
		else if (((_27717_lit[0LL] == '0') && (_27717_lit.len() > 1LL))) {
			_case_begin_2244be212:;
			{
				(_27717_lit).mut_slice(1LL);;
				_27817_base=8LLU;
			}
		}
		else {
			_case_begin_2244be19b:;
			{
				_27817_base=10LLU;
			}
		}
		_match_end_2244be146:;
	};
	jule::Ptr<_211b8a319_Data> _29817_d = jule::new_ptr<_211b8a319_Data>();;
	jule::Bool _30017_ok = true;;
	jule::I64 _30113_sig = ({
		auto except = _21180b1ee_ParseInt(_27717_lit,_27817_base,64LL);
		(except.ok()) ? (except.result) : ({
			_30017_ok=false;
			0LL;
		});
	});;
	if (_30017_ok) {
		_29817_d.get()._field_Constant=static__21100e5b2_NewI64(_30113_sig);
		_29817_d.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _31117_unsig = ({
			auto except = _21177e56d_ParseUint(_27717_lit,_27817_base,64LL);
			(except.ok()) ? (except.result) : ({
				_211b8c393_pushErr(&(*_self_), _27426_l.get()._field_Token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_211b8c6b2_pushSugggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_29817_d.get()._field_Constant=static__21100e6e4_NewU64(_31117_unsig);
		_29817_d.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_29817_d.get()._field_Model=static_cast<jule::Any>(_29817_d.get()._field_Constant);
	if ((!(_211b8d31c_applyNumericPrefix(&(*_self_), _29817_d)))) {
		_211bb1197_fitBitsize(_29817_d);
	};
	return _29817_d;
}



inline jule::Ptr<_211b8a319_Data> _211b8e8d4_litNum(_211b8bd87_Eval* _self_, jule::Ptr<_210e57609_LitExpr>& _33226_l) {
	{
		
		if (_20e7e0bb9_IsFloat(_33226_l.get()._field_Value)) {
			_case_begin_2244c7627:;
			{
				return _211b8e2b8_litFloat(&(*_self_), _33226_l);
			}
		}
		else {
			_case_begin_2244c6db8:;
			{
				return _211b8e5c6_litInt(&(*_self_), _33226_l);
			}
		}
		_match_end_2244c6d0d:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211b8ebe2_evalLit(_211b8bd87_Eval* _self_, jule::Ptr<_210e57609_LitExpr> _34126_lit) {
	{
		
		if (_210e5795b_IsNil(_34126_lit.ptr())) {
			_case_begin_2244c8837:;
			{
				return _211b8d581_litNil(&(*_self_));
			}
		}
		else if (_20e7decb7_IsStr(_34126_lit.get()._field_Value)) {
			_case_begin_2244c824e:;
			{
				return _211b8d88e_litStr(&(*_self_), _34126_lit);
			}
		}
		else if (_20e7e0922_IsBool(_34126_lit.get()._field_Value)) {
			_case_begin_2244c82c6:;
			{
				return _211b8db9c_litBool(&(*_self_), _34126_lit);
			}
		}
		else if (_20e7e0306_IsRune(_34126_lit.get()._field_Value)) {
			_case_begin_2244c834d:;
			{
				return _211b8deaa_litRune(&(*_self_), _34126_lit);
			}
		}
		else if (_20e7e0e61_IsNum(_34126_lit.get()._field_Value)) {
			_case_begin_2244c853a:;
			{
				return _211b8e8d4_litNum(&(*_self_), _34126_lit);
			}
		}
		else {
			_case_begin_2244c7b77:;
			{
				return nullptr;
			}
		}
		_match_end_2244c7a9a:;
	};
}



inline jule::Any _211b90000_findBuiltins(_211b8bd87_Eval* _self_, jule::Str _35831_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_211b1c378_ImportInfo>>()) {
			_case_begin_2244c8b34:;
			{
				jule::Any _36121_def = _211bb0e88_findBuiltinsImport(_35831_ident,(*_self_)._field_lookup.operator jule::Ptr<_211b1c378_ImportInfo>());;
				if ((_36121_def != nullptr)) {
					return jule::Any(_36121_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b254c4_Sema>>()) {
			_case_begin_2244c8b9a:;
			{
				jule::Any _36621_def = _211bb1b26_findBuiltinsSema(_35831_ident,(*_self_)._field_lookup.operator jule::Ptr<_211b254c4_Sema>());;
				if ((_36621_def != nullptr)) {
					return jule::Any(_36621_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0c214_scopeChecker>>()) {
			_case_begin_2244cb142:;
			{
				jule::Any _37121_def = _211bb1b26_findBuiltinsSema(_35831_ident,(*_self_)._field_lookup.operator jule::Ptr<_211b0c214_scopeChecker>().get()._field_s);;
				if ((_37121_def != nullptr)) {
					return jule::Any(_37121_def);
				};
			}
		}
		_match_end_2244c898b:;
	};
	if ((*_self_)._field_disBuiltin) {
		return nullptr;
	};
	return jule::Any(_211c0bd19_findBuiltinDef(_35831_ident));
}



inline jule::Any _211b903a7_getDef(_211b8bd87_Eval* _self_, jule::Str _38225_ident, jule::Bool _38237_cppLinked) {
	if ((!(_38237_cppLinked))) {
		jule::Ptr<_211034087_Enum> _38421_enm = _211bd2086_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._211bd1b35_FindEnum((*_self_)._field_lookup, _38225_ident);;
		if ((_38421_enm != nullptr)) {
			return jule::Any(_38421_enm);
		};
		jule::Ptr<_211035682_TypeEnum> _38921_tenm = _211bd2086_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._211bd1e43_FindTypeEnum((*_self_)._field_lookup, _38225_ident);;
		if ((_38921_tenm != nullptr)) {
			return jule::Any(_38921_tenm);
		};
	};
	jule::Ptr<_211b43228_Var> _39517_v = _211bd2086_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._211bd0903_FindVar((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_39517_v != nullptr)) {
		return jule::Any(_39517_v);
	};
	jule::Ptr<_211020084_Fn> _40017_f = _211bd2086_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._211bd1519_FindFn((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_40017_f != nullptr)) {
		return jule::Any(_40017_f);
	};
	jule::Ptr<_210e427d1_Struct> _40517_s = _211bd2086_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._211bd1162_FindStruct((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_40517_s != nullptr)) {
		return jule::Any(_40517_s);
	};
	jule::Ptr<_211bb5762_TypeAlias> _41017_ta = _211bd2086_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._211bd0caa_FindTypeAlias((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_41017_ta != nullptr)) {
		return jule::Any(_41017_ta);
	};
	return jule::Any(_211b90000_findBuiltins(&(*_self_), _38225_ident));
}



inline void _2244e2587_pushReference(_211b8bd87_Eval* _self_, jule::Ptr<_211022c35_FnIns>& _41840_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_211b0c214_scopeChecker>>()) {
			_case_begin_2244e37ca:;
			{
				jule::Ptr<_211b0c214_scopeChecker> _42121_sc = _211b0d721_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_211b0c214_scopeChecker>());;
				if ((!(_2244e4e19_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), _41840_ref)))) {
					_21102680a_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		else {
			_case_begin_2244e3a61:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_2244e4e19_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _41840_ref))))) {
					_21102680a_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		_match_end_2244e3a0b:;
	};
}

inline void _224507646_pushReference(_211b8bd87_Eval* _self_, jule::Ptr<_211b43228_Var>& _41840_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_211b0c214_scopeChecker>>()) {
			_case_begin_22450a528:;
			{
				jule::Ptr<_211b0c214_scopeChecker> _42121_sc = _211b0d721_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_211b0c214_scopeChecker>());;
				if ((!(_224509c86_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), _41840_ref)))) {
					_21102680a_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		else {
			_case_begin_2245088cd:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_224509c86_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _41840_ref))))) {
					_21102680a_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		_match_end_224508878:;
	};
}

inline void _22459c323_pushReference(_211b8bd87_Eval* _self_, jule::Ptr<_210e6db2b_StructIns>& _41840_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_211b0c214_scopeChecker>>()) {
			_case_begin_22459d412:;
			{
				jule::Ptr<_211b0c214_scopeChecker> _42121_sc = _211b0d721_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_211b0c214_scopeChecker>());;
				if ((!(_22459ea51_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), _41840_ref)))) {
					_21102680a_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		else {
			_case_begin_22459d698:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_22459ea51_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _41840_ref))))) {
					_21102680a_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		_match_end_22459d643:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211b9093a__evalEnum(_211b8bd87_Eval* _self_, jule::Ptr<_211034087_Enum> _43228_enm) {
	return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_43228_enm, 3)}), ._field_Decl=true, });
}



inline jule::Ptr<_211b8a319_Data> _211b90ce2_evalEnum(_211b8bd87_Eval* _self_, jule::Ptr<_211034087_Enum> _44131_enm, jule::Ptr<_20e7ddc0b_Token> _44143_errorToken) {
	if ((!(_211b2885c_isAccessibleDefine((*_self_)._field_s.ptr(), _44131_enm.get()._field_Public,_44131_enm.get()._field_Token)))) {
		_211b8c393_pushErr(&(*_self_), _44143_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_44131_enm.get()._field_Ident)}));
		_211b8c6b2_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _211b9093a__evalEnum(&(*_self_), _44131_enm);
}



inline jule::Ptr<_211b8a319_Data> _211b91100__evalTypeEnum(_211b8bd87_Eval* _self_, jule::Ptr<_211035682_TypeEnum> _45032_enm) {
	return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_45032_enm, 4)}), ._field_Decl=true, });
}



inline jule::Ptr<_211b8a319_Data> _211b914a7_evalTypeEnum(_211b8bd87_Eval* _self_, jule::Ptr<_211035682_TypeEnum> _45935_enm, jule::Ptr<_20e7ddc0b_Token> _45951_errorToken) {
	if ((!(_211b2885c_isAccessibleDefine((*_self_)._field_s.ptr(), _45935_enm.get()._field_Public,_45935_enm.get()._field_Token)))) {
		_211b8c393_pushErr(&(*_self_), _45951_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_45935_enm.get()._field_Ident)}));
		_211b8c6b2_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _211b91100__evalTypeEnum(&(*_self_), _45935_enm);
}



inline jule::Ptr<_211b8a319_Data> _211b917b5__evalStruct(_211b8bd87_Eval* _self_, jule::Ptr<_210e6db2b_StructIns> _46830_s) {
	return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_46830_s, 0)}), ._field_Model=static_cast<jule::Any>(_46830_s), ._field_Decl=true, });
}



inline jule::Ptr<_211b8a319_Data> _211b91b6c_evalStruct(_211b8bd87_Eval* _self_, jule::Ptr<_210e6db2b_StructIns> _47833_s, jule::Ptr<_20e7ddc0b_Token> _47848_errorToken) {
	if ((!(_211b2885c_isAccessibleDefine((*_self_)._field_s.ptr(), _47833_s.get()._field_Decl.get()._field_Public,_47833_s.get()._field_Decl.get()._field_Token)))) {
		_211b8c393_pushErr(&(*_self_), _47848_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_47833_s.get()._field_Decl.get()._field_Ident)}));
		_211b8c6b2_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_211b92299_checkDeprecated(&(*_self_), _47833_s.get()._field_Decl.get()._field_Directives,_47848_errorToken);
	return _211b917b5__evalStruct(&(*_self_), _47833_s);
}



inline jule::Ptr<_211b8a319_Data> _211b91e7a_evalFnIns(_211b8bd87_Eval* _self_, jule::Ptr<_211022c35_FnIns> _48828_f) {
	return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_48828_f, 1)}), ._field_Model=static_cast<jule::Any>(_48828_f), });
}



inline void _211b92299_checkDeprecated(_211b8bd87_Eval* _self_, jule::Slice<jule::Ptr<_210e1d8ab_Directive>>& _49739_directives, jule::Ptr<_20e7ddc0b_Token> _49770_tok) {
	if (_211b8cccd_isUnsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_210e1d8ab_Directive> _50213_d = _211bb0b03_findDirective(_49739_directives,jule::Str("deprecated", 10));;
	if ((_50213_d != nullptr)) {
		if ((_50213_d.get()._field_Args.len() == 0LL)) {
			_211b8c393_pushErr(&(*_self_), _49770_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_211b8c393_pushErr(&(*_self_), _49770_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_50213_d.get()._field_Args[0LL].get()._field_Kind)}));
		};
		_211b8c6b2_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_211b8a319_Data> _211b92651_evalFn(_211b8bd87_Eval* _self_, jule::Ptr<_211020084_Fn> _51329_f, jule::Ptr<_20e7ddc0b_Token> _51337_errorToken) {
	if ((!(_211b2885c_isAccessibleDefine((*_self_)._field_s.ptr(), _51329_f.get()._field_Public,_51329_f.get()._field_Token)))) {
		_211b8c393_pushErr(&(*_self_), _51337_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51329_f.get()._field_Ident)}));
		_211b8c6b2_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_211b92299_checkDeprecated(&(*_self_), _51329_f.get()._field_Directives,_51337_errorToken);
	jule::Ptr<_211022c35_FnIns> _52217_ins = _2110216d4_instance(_51329_f);;
	_2244e2587_pushReference(&(*_self_), _52217_ins);
	return _211b91e7a_evalFnIns(&(*_self_), _52217_ins);
}



inline void _211b92a19_pushIllegalCycleError(_211b8bd87_Eval* _self_, jule::Ptr<_211b43228_Var>& _52741_v1, jule::Ptr<_211b43228_Var>& _52752_v2, jule::Str& _52767_message) {
	;
	jule::Str _52913_refers_to = _20e4ba7b7_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_52741_v1.get()._field_Ident),jule::Any(_52752_v2.get()._field_Ident)}));;
	(_52767_message).buffer.insert(0, (((_20e437ed7_Repeat(jule::Str(" ", 1),4LL) + _52913_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _211b92dc1_checkCrossCycle(_211b8bd87_Eval* _self_, jule::Ptr<_211b43228_Var>& _53335_v, jule::Str& _53349_message) {
	{
		auto &expr = _53335_v.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_2244ea260:;
		if (it != expr.end()) {
			jule::Ptr<_211b43228_Var> &_53416_d = *it;
			{
				if ((_53416_d == (*_self_)._field_owner)) {
					_211b92a19_pushIllegalCycleError(&(*_self_), _53335_v,_53416_d,_53349_message);
					return false;
				};
				if ((!(_211b92dc1_checkCrossCycle(&(*_self_), _53416_d,_53349_message)))) {
					_211b92a19_pushIllegalCycleError(&(*_self_), _53335_v,_53416_d,_53349_message);
					return false;
				};
			}
			_iter_next_2244ea260:;
			++it;
			goto _iter_begin_2244ea260;
		}
		_iter_end_2244ea260:;
	};
	return true;
}



inline jule::Bool _211b93278_checkIllegalCycles(_211b8bd87_Eval* _self_, jule::Ptr<_211b43228_Var>& _55242_v, jule::Ptr<_20e7ddc0b_Token> _55251_decl_token) {
	jule::Bool _55273_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_55273_ok = true;
		return _55273_ok;
	};
	if (((*_self_)._field_owner == _55242_v)) {
		_211b8c393_pushErr(&(*_self_), (*_self_)._field_owner.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_Ident)}));
		_55273_ok = false;
		return _55273_ok;
	};
	jule::Str _56417_message = jule::Str();;
	if ((!(_211b92dc1_checkCrossCycle(&(*_self_), _55242_v,_56417_message)))) {
		jule::Str _56721_errMsg = _56417_message;;
		_56417_message=jule::Str();
		_211b92a19_pushIllegalCycleError(&(*_self_), (*_self_)._field_owner,_55242_v,_56417_message);
		_56721_errMsg+=_56417_message;
		_211b8c393_pushErr(&(*_self_), _55251_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_56721_errMsg)}));
		_55273_ok = false;
		return _55273_ok;
	};
	(*_self_)._field_owner.get()._field_Depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_Depends,1);(*_self_)._field_owner.get()._field_Depends.__push(_55242_v);;
	_55273_ok = true;
	return _55273_ok;
}



inline jule::Ptr<_211b8a319_Data> _211b93630_evalVar(_211b8bd87_Eval* _self_, jule::Ptr<_211b43228_Var> _57930_v, jule::Ptr<_20e7ddc0b_Token> _57939_errorToken) {
	if ((!(_211b2885c_isAccessibleDefine((*_self_)._field_s.ptr(), _57930_v.get()._field_Public,_57930_v.get()._field_Token)))) {
		_211b8c393_pushErr(&(*_self_), _57939_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_57930_v.get()._field_Ident)}));
		_211b8c6b2_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_211b92299_checkDeprecated(&(*_self_), _57930_v.get()._field_Directives,_57939_errorToken);
	_57930_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_211b254c4_Sema>>()) {
			_case_begin_22450308c:;
			{
				jule::Bool _59317_ok = _211b93278_checkIllegalCycles(&(*_self_), _57930_v,_57939_errorToken);;
				if ((!(_59317_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0c214_scopeChecker>>()) {
			_case_begin_224503136:;
			{
				if (((!(_57930_v.get()._field_Reference)) || _211b8cccd_isUnsafe(&(*_self_)))) {
					goto _match_end_224503037;
				};
				jule::Ptr<_211b0c214_scopeChecker> _60121_s = (*_self_)._field_lookup.operator jule::Ptr<_211b0c214_scopeChecker>();;
				while (((_60121_s.get()._field_owner == nullptr) && (_60121_s.get()._field_parent != nullptr))) {
					{
						_60121_s=_60121_s.get()._field_parent;
					}
				_iter_next_224505303:;
				}
				_iter_end_224505303:;;
				if ((((_60121_s.get()._field_owner != nullptr) && _60121_s.get()._field_owner.get()._field_Anon) && (_57930_v.get()._field_Scope != _60121_s.get()._field_owner.get()._field_Scope))) {
					_211b8c393_pushErr(&(*_self_), _57939_errorToken,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_57930_v.get()._field_Ident)}));
				};
			}
		}
		_match_end_224503037:;
	};
	if ((_57930_v.get()._field_Scope == nullptr)) {
		_224507646_pushReference(&(*_self_), _57930_v);
	};
	if (((!(_57930_v.get()._field_CppLinked)) && ((_57930_v.get()._field_Value == nullptr) || (_57930_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_57930_v.get()._field_Constant) {
			_211b3ac8c_checkTypeVar((*_self_)._field_s, _57930_v,jule::Trait<_211bd2086_Lookup>((*_self_)._field_s, 3));
			if ((_57930_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_57930_v.get()._field_Kind == nullptr) || (_57930_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_57930_v.get()._field_Scope != nullptr)) {
			return nullptr;
		};
		_211b3ac8c_checkTypeVar((*_self_)._field_s, _57930_v,(*_self_)._field_lookup);
		if (((_57930_v.get()._field_Kind == nullptr) || (_57930_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_211b8a319_Data> _64417_d = jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=_57930_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_57930_v.get()._field_Mutable, ._field_Reference=_57930_v.get()._field_Reference, ._field_Lvalue=(!(_57930_v.get()._field_Constant)), ._field_Model=static_cast<jule::Any>(_57930_v), });;
	if ((((!(_57930_v.get()._field_CppLinked)) && _211b435d0_IsInitialized(_57930_v.ptr())) && (_57930_v.get()._field_Value.get()._field_Data != nullptr))) {
		_64417_d.get()._field_IsRune=_57930_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_57930_v.get()._field_Constant && (_57930_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_64417_d.get()._field_Constant=jule::new_ptr<_210ea46cd_Const>((*(_57930_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_64417_d.get()._field_Model=static_cast<jule::Any>(_64417_d.get()._field_Constant);
	};
	if (_211b8abcc_IsConst(_64417_d.ptr())) {
		_211b8d31c_applyNumericPrefix(&(*_self_), _64417_d);
	};
	return _64417_d;
}



inline jule::Ptr<_211b8a319_Data> _211b939d7_evalTypeAlias(_211b8bd87_Eval* _self_, jule::Ptr<_211bb5762_TypeAlias> _66836_ta, jule::Ptr<_20e7ddc0b_Token> _66852_errorToken) {
	if ((!(_211b2885c_isAccessibleDefine((*_self_)._field_s.ptr(), _66836_ta.get()._field_Public,_66836_ta.get()._field_Token)))) {
		_211b8c393_pushErr(&(*_self_), _66852_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_66836_ta.get()._field_Ident)}));
		_211b8c6b2_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_66836_ta.get()._field_Used=true;
	jule::Trait<_211bb6026_Kind> _67717_kind = _66836_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_211b8a319_Data> _67817_d = nullptr;;
	{
		auto &_match_expr{ _67717_kind };
		
		if (_match_expr.type_is<jule::Ptr<_210e6db2b_StructIns>>()) {
			_case_begin_224518a31:;
			{
				_67817_d=_211b917b5__evalStruct(&(*_self_), _67717_kind.operator jule::Ptr<_210e6db2b_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211034087_Enum>>()) {
			_case_begin_224518833:;
			{
				_67817_d=_211b9093a__evalEnum(&(*_self_), _67717_kind.operator jule::Ptr<_211034087_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211035682_TypeEnum>>()) {
			_case_begin_224517b73:;
			{
				_67817_d=_211b91100__evalTypeEnum(&(*_self_), _67717_kind.operator jule::Ptr<_211035682_TypeEnum>());
			}
		}
		else {
			_case_begin_224517a52:;
			{
				_67817_d=jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=_66836_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_66836_ta.get()._field_CppLinked) {
					_67817_d.get()._field_Kind.get()._field_CppIdent=_66836_ta.get()._field_Ident;
				} else {
					_67817_d.get()._field_Kind.get()._field_CppIdent=_66836_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_67817_d.get()._field_Model=static_cast<jule::Any>(_67817_d.get()._field_Kind);
			}
		}
		_match_end_2245179ec:;
	};
	_67817_d.get()._field_Kind.get()._field_Generic=_66836_ta.get()._field_Generic;
	return _67817_d;
}



inline jule::Ptr<_211b8a319_Data> _211b93d8e_evalDef(_211b8bd87_Eval* _self_, jule::Any _70430_def, jule::Ptr<_20e7ddc0b_Token> _70440_ident) {
	{
		auto &_match_expr{ _70430_def };
		
		if (_match_expr.type_is<jule::Ptr<_211b43228_Var>>()) {
			_case_begin_22451bd42:;
			{
				return _211b93630_evalVar(&(*_self_), _70430_def.operator jule::Ptr<_211b43228_Var>(),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211034087_Enum>>()) {
			_case_begin_22451bda8:;
			{
				return _211b90ce2_evalEnum(&(*_self_), _70430_def.operator jule::Ptr<_211034087_Enum>(),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211035682_TypeEnum>>()) {
			_case_begin_22451be1e:;
			{
				return _211b914a7_evalTypeEnum(&(*_self_), _70430_def.operator jule::Ptr<_211035682_TypeEnum>(),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e427d1_Struct>>()) {
			_case_begin_22451be96:;
			{
				return _211b91b6c_evalStruct(&(*_self_), _210e23ae2_instance(_70430_def.operator jule::Ptr<_210e427d1_Struct>()),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211020084_Fn>>()) {
			_case_begin_22451c00c:;
			{
				jule::Ptr<_211020084_Fn> _71521_f = _70430_def.operator jule::Ptr<_211020084_Fn>();;
				if ((_71521_f.get()._field_Ident != jule::Str("init", 4))) {
					return _211b92651_evalFn(&(*_self_), _71521_f,_70440_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211022c35_FnIns>>()) {
			_case_begin_22451c073:;
			{
				return _211b91e7a_evalFnIns(&(*_self_), _70430_def.operator jule::Ptr<_211022c35_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211bb5762_TypeAlias>>()) {
			_case_begin_22451c0d9:;
			{
				return _211b939d7_evalTypeAlias(&(*_self_), _70430_def.operator jule::Ptr<_211bb5762_TypeAlias>(),_70440_ident);
			}
		}
		_match_end_22451bc54:;
	};
	_211b8c393_pushErr(&(*_self_), _70440_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_70440_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_211b8a319_Data> _211b9419c_evalIdent(_211b8bd87_Eval* _self_, jule::Ptr<_210e5863d_IdentExpr> _72828_ident) {
	jule::Any _72917_def = _211b903a7_getDef(&(*_self_), _72828_ident.get()._field_Ident,_72828_ident.get()._field_CppLinked);;
	return _211b93d8e_evalDef(&(*_self_), jule::Any(_72917_def),_72828_ident.get()._field_Token);
}



inline jule::Ptr<_211b8a319_Data> _211b944aa_evalUnary(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e58d47_UnaryExpr> _73333_u) {
	_211ba80c3_unaryEval _73417_unary = static__211ba8579_new(_self_);;
	return _211ba9822_eval(&_73417_unary, _73333_u);
}



inline jule::Ptr<_211b8a319_Data> _211b947b8_evalVariadic(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e591ee_VariadicExpr> _73836_v) {
	if ((_73836_v.get()._field_Expr == nullptr)) {
		_211b8c393_pushErr(_self_.ptr(), _73836_v.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_211bb6455_TypeKind> _74417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_74417_prefix;
	});;
	jule::Ptr<_211b8a319_Data> _74817_d = _211ba7534_evalExprKind(_self_, _73836_v.get()._field_Expr.get()._field_Kind);;
	if ((_74817_d == nullptr)) {
		return nullptr;
	};
	if ((!(_211bb8303_Variadicable(_74817_d.get()._field_Kind.ptr())))) {
		_211b8c393_pushErr(_self_.ptr(), _73836_v.get()._field_Token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_74817_d.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_211bc011d_Slc> _75813_slc = _211bb94e1_Slc(_74817_d.get()._field_Kind.ptr());;
	_74817_d.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_CppIdent=_75813_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_75813_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_75813_slc.get()._field_Elem.get()._field_Kind});
	return _74817_d;
}



inline jule::Ptr<_211b8a319_Data> _211b94ac6_evalUnsafe(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e57d13_UnsafeExpr> _76834_u) {
	jule::Bool _76913_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_211b8a319_Data> _77117_d = _211ba7534_evalExprKind(_self_, _76834_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_76913_unsafety;
	return _77117_d;
}



inline jule::Ptr<_211b8a319_Data> _211b94dd4_evalArr(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e5ce7d_SliceExpr> _77631_s) {
	jule::Ptr<_211bc22b8_Arr> _77817_pt = _211bb927c_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_211bc22b8_Arr> _78017_arr = jule::new_ptr<_211bc22b8_Arr>(_211bc22b8_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_77817_pt.get()._field_Elem});;
	jule::Bool _78617_filled = false;;
	if ((_77631_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _77631_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_210e591ee_VariadicExpr>>()) {
				_case_begin_22452bc86:;
				{
					if ((_77631_s.get()._field_Exprs[1LL].get()._field_Kind.operator jule::Ptr<_210e591ee_VariadicExpr>().get()._field_Expr != nullptr)) {
						goto _match_end_22452bc31;
					};
					if (_77817_pt.get()._field_Auto) {
						_211b8c393_pushErr(_self_.ptr(), _77631_s.get()._field_Token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_78617_filled=true;
					_77631_s.get()._field_Exprs=_77631_s.get()._field_Exprs.slice(0LL,1LL);
				}
			}
			_match_end_22452bc31:;
		};
	};
	_78017_arr.get()._field_N=static_cast<jule::I64>(_77631_s.get()._field_Exprs.len());
	if ((!(_77817_pt.get()._field_Auto))) {
		if ((_78017_arr.get()._field_N > _77817_pt.get()._field_N)) {
			_211b8c393_pushErr(_self_.ptr(), _77631_s.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_78017_arr.get()._field_N < _77817_pt.get()._field_N)) {
			_78017_arr.get()._field_N=_77817_pt.get()._field_N;
		};
	};
	jule::Ptr<_21101a029_ArrayExprModel> _81517_model = jule::new_ptr<_21101a029_ArrayExprModel>(_21101a029_ArrayExprModel{._field_Kind=_78017_arr, });;
	if (_78617_filled) {
		_81517_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_81517_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL,_77631_s.get()._field_Exprs.len());
	};
	jule::Ptr<_211bb6455_TypeKind> _82417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_78017_arr.get()._field_Elem;
	{
		auto &expr = _77631_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_22453174c:;
		if (it != expr.end()) {
			jule::Ptr<_210e565c5_Expr> _82621_elem = *it;
			{
				jule::Ptr<_211b8a319_Data> _82721_d = _211ba7534_evalExprKind(_self_, _82621_elem.get()._field_Kind);;
				if ((_82721_d == nullptr)) {
					goto _iter_next_22453174c;
				};
				_211b3006c_checkAssignType(_self_.get()._field_s, false,_78017_arr.get()._field_Elem,_82721_d,_77631_s.get()._field_Token);
				_81517_model.get()._field_Elems = jule::alloc_for_append(_81517_model.get()._field_Elems,1);_81517_model.get()._field_Elems.__push(_82721_d.get()._field_Model);;
			}
			_iter_next_22453174c:;
			++it;
			goto _iter_begin_22453174c;
		}
		_iter_end_22453174c:;
	};
	_self_.get()._field_prefix=_82417_prefix;
	if (_78617_filled) {
		_81517_model.get()._field_Elems = jule::alloc_for_append(_81517_model.get()._field_Elems,1);_81517_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_78017_arr, 11)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_81517_model), });
}



inline jule::Ptr<_211b8a319_Data> _211b95335_evalExpSlc(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e5ce7d_SliceExpr> _85134_s, jule::Ptr<_211bb6455_TypeKind> _85153_t, jule::Any _85171_first) {
	jule::Ptr<_211bc011d_Slc> _85217_slc = jule::new_ptr<_211bc011d_Slc>(_211bc011d_Slc{._field_Elem=_85153_t});;
	jule::Ptr<_211018aa5_SliceExprModel> _85617_model = jule::new_ptr<_211018aa5_SliceExprModel>(_211018aa5_SliceExprModel{._field_ElemKind=_85153_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL,_85134_s.get()._field_Exprs.len())});;
	if ((_85171_first != nullptr)) {
		_85617_model.get()._field_Elems = jule::alloc_for_append(_85617_model.get()._field_Elems,1);_85617_model.get()._field_Elems.__push(_85171_first);;
		_85134_s.get()._field_Exprs=_85134_s.get()._field_Exprs.slice(1LL);
	};
	jule::Ptr<_211bb6455_TypeKind> _86517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_85217_slc.get()._field_Elem;
	{
		auto &expr = _85134_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_224537731:;
		if (it != expr.end()) {
			jule::Ptr<_210e565c5_Expr> _86721_elem = *it;
			{
				jule::Ptr<_211b8a319_Data> _86821_d = _211ba7534_evalExprKind(_self_, _86721_elem.get()._field_Kind);;
				if ((_86821_d == nullptr)) {
					goto _iter_next_224537731;
				};
				_211b3006c_checkAssignType(_self_.get()._field_s, false,_85217_slc.get()._field_Elem,_86821_d,_85134_s.get()._field_Token);
				_85617_model.get()._field_Elems = jule::alloc_for_append(_85617_model.get()._field_Elems,1);_85617_model.get()._field_Elems.__push(_86821_d.get()._field_Model);;
			}
			_iter_next_224537731:;
			++it;
			goto _iter_begin_224537731;
		}
		_iter_end_224537731:;
	};
	_self_.get()._field_prefix=_86517_prefix;
	return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_85217_slc, 8)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_85617_model), });
}



inline jule::Ptr<_211b8a319_Data> _211b95643_evalSliceExpr(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e5ce7d_SliceExpr> _88637_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_211bb927c_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_22453a789:;
				{
					return _211b94dd4_evalArr(_self_, _88637_s);
				}
			}
			else if ((_211bb94e1_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_22453a811:;
				{
					jule::Ptr<_211bc011d_Slc> _89225_pt = _211bb94e1_Slc(_self_.get()._field_prefix.ptr());;
					return _211b95335_evalExpSlc(_self_, _88637_s,_89225_pt.get()._field_Elem,nullptr);
				}
			}
			_match_end_22453a668:;
		};
	};
	jule::Ptr<_211bb6455_TypeKind> _89717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_88637_s.get()._field_Exprs.len() == 0LL)) {
		_211b8c393_pushErr(_self_.ptr(), _88637_s.get()._field_Token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_211b8a319_Data> _90517_first_elem = _211ba7534_evalExprKind(_self_, _88637_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_90517_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_211b8a319_Data> _91017_d = _211b95335_evalExpSlc(_self_, _88637_s,_90517_first_elem.get()._field_Kind,_90517_first_elem.get()._field_Model);;
	_self_.get()._field_prefix=_89717_prefix;
	return _91017_d;
}



inline void _211b95984_checkIntegerIndexingByData(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data>& _91650_d, jule::Ptr<_20e7ddc0b_Token> _91660_token) {
	jule::Str _91713_err_key = _211bb309a_checkDataForIntegerIndexing(_91650_d);;
	{
		auto &_match_expr{ _91713_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_2245418c2:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_224540c12:;
			{
				_211b8c393_pushErr(&(*_self_), _91660_token,_91713_err_key,jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_91650_d.get()._field_Kind.ptr()))}));
			}
		}
		else {
			_case_begin_2245410b9:;
			{
				_211b8c393_pushErr(&(*_self_), _91660_token,_91713_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_224540edc:;
	};
}



inline void _211b95d5d_indexingPtr(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data>& _92835_d, jule::Ptr<_211b8a319_Data>& _92850_index, jule::Ptr<_210e5d81e_IndexingExpr>& _92865_i) {
	_211b95984_checkIntegerIndexingByData(&(*_self_), _92850_index,_92865_i.get()._field_Token);
	jule::Ptr<_211bc2c25_Ptr> _93117_ptr = _211bb8a40_Ptr(_92835_d.get()._field_Kind.ptr());;
	{
		
		if (_211bc36e8_IsUnsafe(_93117_ptr.ptr())) {
			_case_begin_224543ab1:;
			{
				_211b8c393_pushErr(&(*_self_), _92865_i.get()._field_Token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_211b8cccd_isUnsafe(&(*_self_))))) {
			_case_begin_224543b27:;
			{
				_211b8c393_pushErr(&(*_self_), _92865_i.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_22454395c:;
	};
	_92835_d.get()._field_Kind=_93117_ptr.get()._field_Elem;
}



inline void _211b96226_indexingArr(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data>& _94335_d, jule::Ptr<_211b8a319_Data>& _94350_index, jule::Ptr<_210e5d81e_IndexingExpr>& _94365_i) {
	jule::Ptr<_211bc22b8_Arr> _94417_arr = _211bb927c_Arr(_94335_d.get()._field_Kind.ptr());;
	_94335_d.get()._field_Kind=_94417_arr.get()._field_Elem;
	_211b95984_checkIntegerIndexingByData(&(*_self_), _94350_index,_94365_i.get()._field_Token);
	if ((_211b8abcc_IsConst(_94350_index.ptr()) && (_2110118a0_AsF64(_94350_index.get()._field_Constant.ptr()) >= static_cast<jule::F64>(_94417_arr.get()._field_N)))) {
		_211b8c393_pushErr(&(*_self_), _94365_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _211b965de_indexingSlc(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data>& _95235_d, jule::Ptr<_211b8a319_Data>& _95250_index, jule::Ptr<_210e5d81e_IndexingExpr>& _95265_i) {
	jule::Ptr<_211bc011d_Slc> _95317_slc = _211bb94e1_Slc(_95235_d.get()._field_Kind.ptr());;
	_95235_d.get()._field_Kind=_95317_slc.get()._field_Elem;
	_211b95984_checkIntegerIndexingByData(&(*_self_), _95250_index,_95265_i.get()._field_Token);
	if ((!(_211b8abcc_IsConst(_95250_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _95235_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_211018aa5_SliceExprModel>>()) {
			_case_begin_224549765:;
			{
				jule::Ptr<_211018aa5_SliceExprModel> _96321_m = _95235_d.get()._field_Model.operator jule::Ptr<_211018aa5_SliceExprModel>();;
				jule::F64 _96417_indx = _2110118a0_AsF64(_95250_index.get()._field_Constant.ptr());;
				if ((_96417_indx >= static_cast<jule::F64>(_96321_m.get()._field_Elems.len()))) {
					_211b8c393_pushErr(&(*_self_), _95265_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_95235_d.get()._field_Model=_96321_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_96417_indx))];
					_95235_d.get()._field_Decl=true;
				};
			}
		}
		_match_end_224549446:;
	};
}



inline void _211b969a7_indexingMap(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data>& _97435_d, jule::Ptr<_211b8a319_Data>& _97450_index, jule::Ptr<_210e5d81e_IndexingExpr>& _97469_i) {
	if ((_97450_index == nullptr)) {
		return;;
	};
	jule::Ptr<_211bc16c4_Map> _97817_m = _211bb9e92_Map(_97435_d.get()._field_Kind.ptr());;
	_211b75da4_assignTypeChecker _97917_atc = _211b75da4_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_97817_m.get()._field_Key, ._field_d=_97450_index, ._field_errorToken=_97469_i.get()._field_Token};;
	_211b7702b_check(&_97917_atc);
	_97435_d.get()._field_Kind=_97817_m.get()._field_Val;
}



inline void _211b96d70_indexingStr(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data>& _98935_d, jule::Ptr<_211b8a319_Data>& _98950_index, jule::Ptr<_210e5d81e_IndexingExpr>& _98965_i) {
	;
	_98935_d.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("u8", 2)), 6)});
	if ((_98950_index == nullptr)) {
		return;;
	};
	_211b95984_checkIntegerIndexingByData(&(*_self_), _98950_index,_98965_i.get()._field_Token);
	if ((!(_211b8abcc_IsConst(_98950_index.ptr())))) {
		_98935_d.get()._field_Constant=nullptr;
		return;;
	};
	if (_211b8abcc_IsConst(_98935_d.ptr())) {
		jule::Ptr<_20e7ddc0b_Token> _100517_errorToken = _98965_i.get()._field_Token;;
		jule::I64 _100617_j = _2110113c7_AsI64(_98950_index.get()._field_Constant.ptr());;
		jule::Str _100717_s = _211010dee_ReadStr(_98935_d.get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_100617_j) >= _100717_s.len())) {
			_211b8c393_pushErr(&(*_self_), _100517_errorToken,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_211011d9a_SetU64(_98935_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_100717_s[_100617_j])));
		};
	};
}



inline void _211b97238_toIndexing(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data>& _101634_d, jule::Ptr<_211b8a319_Data>& _101649_index, jule::Ptr<_210e5d81e_IndexingExpr>& _101668_i) {
	{
		
		if ((_211bb8a40_Ptr(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_22455486e:;
			{
				_211b95d5d_indexingPtr(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_211bb927c_Arr(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2245548e6:;
			{
				_211b96226_indexingArr(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_211bb94e1_Slc(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_22455496d:;
			{
				_211b965de_indexingSlc(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_211bb9e92_Map(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2245549e5:;
			{
				_211b969a7_indexingMap(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_211bb8567_Prim(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_224554a6c:;
			{
				jule::Ptr<_211bbae2c_Prim> _103117_prim = _211bb8567_Prim(_101634_d.get()._field_Kind.ptr());;
				{
					
					if (_211bbe161_IsStr(_103117_prim.ptr())) {
						_case_begin_224558e06:;
						{
							_211b96d70_indexingStr(&(*_self_), _101634_d,_101649_index,_101668_i);
							return;;
						}
					}
					_match_end_224558d5c:;
				};
			}
		}
		_match_end_22455471a:;
	};
	_211b8c393_pushErr(&(*_self_), _101668_i.get()._field_Token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_101634_d.get()._field_Kind.ptr()))}));
}



inline jule::Bool _211b976ab_pushGenericsFromExprSubIdent(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e59dd1_SubIdentExpr>& _104153_sexpr, jule::Slice<jule::Ptr<_210e520a4_TypeDecl>>& _104214_generics, jule::Ptr<_210e565c5_Expr>& _104242_expr) {
	jule::Ptr<_210e52cb9_SubIdentTypeDecl> _104317_t = jule::new_ptr<_210e52cb9_SubIdentTypeDecl>();;
	if ((!(_211bb3d6a_pushSubIdentFromExpr(static_cast<jule::Any>(_104153_sexpr),_104317_t)))) {
		_211b8c393_pushErr(_self_.ptr(), _104242_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	_104214_generics = jule::alloc_for_append(_104214_generics,1);_104214_generics.__push(jule::new_ptr<_210e520a4_TypeDecl>(_210e520a4_TypeDecl{._field_Kind=static_cast<jule::Any>(_104317_t)}));;
	return true;
}



inline jule::Bool _211b97a74_pushGenericsFromData(jule::Ptr<_211b8bd87_Eval> _self_, jule::Slice<jule::Ptr<_210e520a4_TypeDecl>>& _105245_generics, jule::Ptr<_210e565c5_Expr>& _105273_expr) {
	{
		auto &_match_expr{ _105273_expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_210e58d47_UnaryExpr>>()) {
			_case_begin_22455c4ae:;
			{
				jule::Ptr<_211b8a319_Data> _105721_d = _211b944aa_evalUnary(_self_, _105273_expr.get()._field_Kind.operator jule::Ptr<_210e58d47_UnaryExpr>());;
				if ((!(_105721_d.get()._field_Decl))) {
					_211b8c393_pushErr(_self_.ptr(), _105273_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(jule::new_ptr<_210e520a4_TypeDecl>(_210e520a4_TypeDecl{._field_Token=_105273_expr.get()._field_Token, ._field_Kind=(*(((jule::Any*)((&(_105721_d.get()._field_Kind.get()._field_Kind))))))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e520a4_TypeDecl>>()) {
			_case_begin_22455c525:;
			{
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(_105273_expr.get()._field_Kind.operator jule::Ptr<_210e520a4_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e59dd1_SubIdentExpr>>()) {
			_case_begin_22455c59c:;
			{
				jule::Ptr<_210e59dd1_SubIdentExpr> _106921_sexpr = _105273_expr.get()._field_Kind.operator jule::Ptr<_210e59dd1_SubIdentExpr>();;
				return _211b976ab_pushGenericsFromExprSubIdent(_self_, _106921_sexpr,_105245_generics,_105273_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e5863d_IdentExpr>>()) {
			_case_begin_22455cd61:;
			{
				jule::Ptr<_210e5863d_IdentExpr> _107221_ident = _105273_expr.get()._field_Kind.operator jule::Ptr<_210e5863d_IdentExpr>();;
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(jule::new_ptr<_210e520a4_TypeDecl>(_210e520a4_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_210e5266a_IdentTypeDecl>(_210e5266a_IdentTypeDecl{._field_Token=_107221_ident.get()._field_Token, ._field_Ident=_107221_ident.get()._field_Ident, ._field_CppLinked=_107221_ident.get()._field_CppLinked, }))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e57252_TupleExpr>>()) {
			_case_begin_22455cdc7:;
			{
				{
					auto &expr = _105273_expr.get()._field_Kind.operator jule::Ptr<_210e57252_TupleExpr>().get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_224562360:;
					if (it != expr.end()) {
						jule::Ptr<_210e565c5_Expr> _108125_texpr = *it;
						{
							if ((!(_211b97a74_pushGenericsFromData(_self_, _105245_generics,_108125_texpr)))) {
								return false;
							};
						}
						_iter_next_224562360:;
						++it;
						goto _iter_begin_224562360;
					}
					_iter_end_224562360:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e5995d_NsSelectionExpr>>()) {
			_case_begin_22455ce4e:;
			{
				jule::Ptr<_210e5995d_NsSelectionExpr> _108721_ns = _105273_expr.get()._field_Kind.operator jule::Ptr<_210e5995d_NsSelectionExpr>();;
				jule::Ptr<_210e5266a_IdentTypeDecl> _108821_decl = jule::new_ptr<_210e5266a_IdentTypeDecl>(_210e5266a_IdentTypeDecl{._field_Token=_108721_ns.get()._field_Ident, ._field_Ident=_108721_ns.get()._field_Ident.get()._field_Kind, });;
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(jule::new_ptr<_210e520a4_TypeDecl>(_210e520a4_TypeDecl{._field_Token=_108821_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_210e53171_NamespaceTypeDecl>(_210e53171_NamespaceTypeDecl{._field_Idents=_108721_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_210e520a4_TypeDecl>(_210e520a4_TypeDecl{._field_Token=_108821_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(_108821_decl)})}))}));;
			}
		}
		else {
			_case_begin_22455c3c1:;
			{
				_211b8c393_pushErr(_self_.ptr(), _105273_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_22455c217:;
	};
	return true;
}



inline void _211b97db5_evalIdentDeclFromIndexing(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_211b8a319_Data>& _110950_d, jule::Ptr<_210e5d81e_IndexingExpr>& _110965_i) {
	jule::Ptr<_210e6db2b_StructIns> _111017_s = _211bb99b9_Struct(_110950_d.get()._field_Kind.ptr());;
	if ((_111017_s == nullptr)) {
		_211b8c393_pushErr(_self_.ptr(), _110965_i.get()._field_Expr.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_110950_d.get()._field_Kind.ptr()))}));
		_110950_d=nullptr;
		return;;
	};
	jule::Ptr<_210e5266a_IdentTypeDecl> _111717_decl = nullptr;;
	{
		auto &_match_expr{ _110965_i.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_210e5863d_IdentExpr>>()) {
			_case_begin_224567c5b:;
			{
				jule::Ptr<_210e5863d_IdentExpr> _112021_expr = _110965_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_210e5863d_IdentExpr>();;
				_111717_decl=jule::new_ptr<_210e5266a_IdentTypeDecl>(_210e5266a_IdentTypeDecl{._field_Token=_112021_expr.get()._field_Token, ._field_Ident=_112021_expr.get()._field_Ident, ._field_CppLinked=_112021_expr.get()._field_CppLinked, });
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e5995d_NsSelectionExpr>>()) {
			_case_begin_224568de4:;
			{
				jule::Ptr<_210e5995d_NsSelectionExpr> _112721_expr = _110965_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_210e5995d_NsSelectionExpr>();;
				_111717_decl=jule::new_ptr<_210e5266a_IdentTypeDecl>(_210e5266a_IdentTypeDecl{._field_Token=_112721_expr.get()._field_Ident, ._field_Ident=_112721_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_2245681ac:;
			{
				_211b8c393_pushErr(_self_.ptr(), _110965_i.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_110950_d=nullptr;
				return;;
			}
		}
		_match_end_224568157:;
	};
	if ((!(_211b97a74_pushGenericsFromData(_self_, _111717_decl.get()._field_Generics,_110965_i.get()._field_Index)))) {
		_110950_d=nullptr;
		return;;
	};
	_111017_s=({ auto _wrap_copy = _211b9dc56_typeChecker(_self_.ptr()); _211bc880d_fromStruct(&_wrap_copy, _111717_decl,_111017_s.get()._field_Decl); });
	if ((_111017_s == nullptr)) {
		_110950_d=nullptr;
		return;;
	};
	_110950_d.get()._field_Kind.get()._field_Kind=jule::Trait<_211bb6026_Kind>(_111017_s, 0);
}



inline jule::Bool _211b98327_checkGenericFn(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_211022c35_FnIns>& _115239_f, jule::Ptr<_20e7ddc0b_Token>& _115255_et, jule::Any& _115272_model) {
	jule::Bool _115313_ok = _211b3225b_reloadFnInsTypes(_self_.get()._field_s, _115239_f);;
	_115239_f.get()._field_reloaded=true;
	if ((!(_115313_ok))) {
		return false;
	};
	jule::Ptr<_211022c35_FnIns> _115817_existInstance = _2110219ae_appendInstance(_115239_f.get()._field_Decl.ptr(), _115239_f);;
	if ((!(_211b313c0_checkConstraintsFn(_self_.get()._field_s, _115239_f,_115255_et,_115817_existInstance)))) {
		return false;
	};
	if ((_115817_existInstance != nullptr)) {
		_115239_f=_115817_existInstance;
		_211bb3b28_updateModelToGenericIns(_115272_model,_115817_existInstance);
	} else {
		_211b3da92_checkFnInsCaller(_self_.get()._field_s, _115239_f,_115255_et);
	};
	return true;
}



inline void _211b98668_evalFnGenericFromIndexing(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_211b8a319_Data>& _117750_d, jule::Ptr<_210e5d81e_IndexingExpr>& _117765_i) {
	jule::Slice<jule::Ptr<_210e520a4_TypeDecl>> _117817_generics = jule::Slice<jule::Ptr<_210e520a4_TypeDecl>>::alloc(0LL,8LLU);;
	if ((!(_211b97a74_pushGenericsFromData(_self_, _117817_generics,_117765_i.get()._field_Index)))) {
		_117750_d=nullptr;
		return;;
	};
	jule::Ptr<_211022c35_FnIns> _118417_f = _211bb9755_Fn(_117750_d.get()._field_Kind.ptr());;
	jule::I64 _118517_genericsLen = 0LL;;
	if ((_118417_f.get()._field_Decl != nullptr)) {
		_118517_genericsLen=static_cast<jule::I64>(_118417_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_211b2952d_checkGenericQuantity(_self_.get()._field_s.ptr(), _118517_genericsLen,static_cast<jule::I64>(_117817_generics.len()),_117765_i.get()._field_Expr.get()._field_Token)))) {
		_117750_d=nullptr;
		return;;
	};
	_118417_f.get()._field_Generics=jule::Slice<jule::Ptr<_211bb4c28_InsGeneric>>::alloc(0LL,_118417_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto &expr = _117817_generics;
		auto it = expr.begin();
		_iter_begin_224574691:;
		if (it != expr.end()) {
			jule::Ptr<_210e520a4_TypeDecl> _119621_g = *it;
			{
				jule::Ptr<_211b8a319_Data> _119721_k = _211b9e064_evalType(_self_.ptr(), _119621_g);;
				if ((_119721_k == nullptr)) {
					_117750_d=nullptr;
					return;;
				};
				_118417_f.get()._field_Generics = jule::alloc_for_append(_118417_f.get()._field_Generics,1);_118417_f.get()._field_Generics.__push(jule::new_ptr<_211bb4c28_InsGeneric>(_211bb4c28_InsGeneric{._field_Kind=_119721_k.get()._field_Kind, }));;
			}
			_iter_next_224574691:;
			++it;
			goto _iter_begin_224574691;
		}
		_iter_end_224574691:;
	};
	if (_2110240bb_IsBuiltin(_118417_f.ptr())) {
		return;;
	};
	if (_211b98327_checkGenericFn(_self_, _118417_f,_117765_i.get()._field_Expr.get()._field_Token,_117750_d.get()._field_Model)) {
		_117750_d.get()._field_Kind.get()._field_Kind=jule::Trait<_211bb6026_Kind>(_118417_f, 1);
	} else {
		_117750_d=nullptr;
	};
}



inline jule::Ptr<_211b8a319_Data> _211b98987_evalIndexing(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e5d81e_IndexingExpr> _121636_i) {
	jule::Ptr<_211bb6455_TypeKind> _121717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_121717_prefix;
	});;
	jule::Ptr<_211b8a319_Data> _122117_d = _211ba7534_evalExprKind(_self_, _121636_i.get()._field_Expr.get()._field_Kind);;
	if ((_122117_d == nullptr)) {
		return nullptr;
	};
	if (_122117_d.get()._field_Decl) {
		_211b97db5_evalIdentDeclFromIndexing(_self_, _122117_d,_121636_i);
		return _122117_d;
	};
	if ((_211bb9755_Fn(_122117_d.get()._field_Kind.ptr()) != nullptr)) {
		_211b98668_evalFnGenericFromIndexing(_self_, _122117_d,_121636_i);
		return _122117_d;
	};
	_211b8a319_Data _123717_old_d = (*(_122117_d));;
	jule::Ptr<_211b8a319_Data> _123917_index = _211ba7534_evalExprKind(_self_, _121636_i.get()._field_Index.get()._field_Kind);;
	if ((_123917_index == nullptr)) {
		return nullptr;
	};
	_122117_d.get()._field_Decl=false;
	_211b97238_toIndexing(_self_.ptr(), _122117_d,_123917_index,_121636_i);
	if (_211b8abcc_IsConst(_122117_d.ptr())) {
		_122117_d.get()._field_Decl=false;
		_122117_d.get()._field_Model=static_cast<jule::Any>(_122117_d.get()._field_Constant);
	} else if (_122117_d.get()._field_Decl) {
		_122117_d.get()._field_Decl=false;
	} else {
		_122117_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_211018c92_IndexingExprModel>(_211018c92_IndexingExprModel{._field_Token=_121636_i.get()._field_Token, ._field_Expr=jule::new_ptr<_211b8a319_Data>(_123717_old_d), ._field_Index=_123917_index}));
	};
	return _122117_d;
}



inline std::tuple<jule::Ptr<_211b8a319_Data>,jule::Ptr<_211b8a319_Data>> _211b98c95_evalSlicingExprs(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e5de29_SlicingExpr>& _127041_s) {
	jule::Ptr<_211bb6455_TypeKind> _127117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_127117_prefix;
	});;
	jule::Ptr<_211b8a319_Data> _127517_l = nullptr;;
	jule::Ptr<_211b8a319_Data> _127617_r = nullptr;;
	if ((_127041_s.get()._field_Start != nullptr)) {
		_127517_l=_211ba7534_evalExprKind(_self_, _127041_s.get()._field_Start.get()._field_Kind);
		if ((_127517_l != nullptr)) {
			_211b95984_checkIntegerIndexingByData(_self_.ptr(), _127517_l,_127041_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_127517_l=jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__21100e5b2_NewI64(0LL)});
		_127517_l.get()._field_Model=static_cast<jule::Any>(_127517_l.get()._field_Constant);
	};
	if ((_127041_s.get()._field_To != nullptr)) {
		_127617_r=_211ba7534_evalExprKind(_self_, _127041_s.get()._field_To.get()._field_Kind);
		if ((_127617_r != nullptr)) {
			_211b95984_checkIntegerIndexingByData(_self_.ptr(), _127617_r,_127041_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_127517_l,_127617_r);
}



inline void _211b9901a_slicingArr(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data>& _130530_d) {
	jule::Ptr<_211bb6455_TypeKind> _130617_elemType = _211bb927c_Arr(_130530_d.get()._field_Kind.ptr()).get()._field_Elem;;
	_130530_d.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_211bc011d_Slc>(_211bc011d_Slc{._field_Elem=_130617_elemType}), 8)});
	_130530_d.get()._field_Lvalue=false;
	_130530_d.get()._field_Mutable=(_130530_d.get()._field_Mutable || (!(_211bb7852_Mutable(_130617_elemType.ptr()))));
}



inline void _211b993d3_slicingStr(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data>& _132030_d, jule::Ptr<_211b8a319_Data>& _132041_l, jule::Ptr<_211b8a319_Data>& _132052_r) {
	_132030_d.get()._field_Lvalue=false;
	_132030_d.get()._field_Mutable=true;
	if ((!(_211b8abcc_IsConst(_132030_d.ptr())))) {
		return;;
	};
	if (((_132041_l == nullptr) || (_132052_r == nullptr))) {
		_132030_d.get()._field_Constant=nullptr;
		return;;
	};
	if ((_211b8abcc_IsConst(_132041_l.ptr()) && _211b8abcc_IsConst(_132052_r.ptr()))) {
		jule::I64 _133317_left = _2110113c7_AsI64(_132041_l.get()._field_Constant.ptr());;
		if ((_133317_left < 0LL)) {
			return;;
		};
		jule::Str _133817_s = _211010dee_ReadStr(_132030_d.get()._field_Constant.ptr());;
		jule::I64 _133921_right = 0LL;;
		if ((_132052_r == nullptr)) {
			_133921_right=static_cast<jule::I64>(static_cast<jule::I64>(_133817_s.len()));
		} else {
			_133921_right=static_cast<jule::I64>(_2110113c7_AsI64(_132052_r.get()._field_Constant.ptr()));
		};
		if ((_133317_left > _133921_right)) {
			return;;
		};
		_211012395_SetStr(_132030_d.get()._field_Constant.ptr(), _133817_s.slice(_133317_left,_133921_right));
		_132030_d.get()._field_Decl=true;
	} else {
		_132030_d.get()._field_Constant=nullptr;
	};
}



inline void _211b99845_checkSlicing(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data>& _135636_d, jule::Ptr<_211b8a319_Data>& _135647_l, jule::Ptr<_211b8a319_Data>& _135658_r, jule::Ptr<_210e5de29_SlicingExpr>& _135669_s) {
	{
		
		if ((_211bb927c_Arr(_135636_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_22458b675:;
			{
				_211b9901a_slicingArr(&(*_self_), _135636_d);
				return;;
			}
		}
		else if ((_211bb94e1_Slc(_135636_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_22458b6ec:;
			{
				return;;
			}
		}
		else if ((_211bb8567_Prim(_135636_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_22458b774:;
			{
				jule::Ptr<_211bbae2c_Prim> _136417_prim = _211bb8567_Prim(_135636_d.get()._field_Kind.ptr());;
				{
					
					if (_211bbe161_IsStr(_136417_prim.ptr())) {
						_case_begin_22458dcd7:;
						{
							_211b993d3_slicingStr(&(*_self_), _135636_d,_135647_l,_135658_r);
							return;;
						}
					}
					_match_end_22458dc3d:;
				};
			}
		}
		_match_end_22458b543:;
	};
	_211b8c393_pushErr(&(*_self_), _135669_s.get()._field_Token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_135636_d.get()._field_Kind.ptr()))}));
}



inline jule::Ptr<_211b8a319_Data> _211b99b53_evalSlicing(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e5de29_SlicingExpr> _137535_s) {
	jule::Ptr<_211b8a319_Data> _137617_d = _211ba7534_evalExprKind(_self_, _137535_s.get()._field_Expr.get()._field_Kind);;
	if ((_137617_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_211b8a319_Data> _138118_l;;
	jule::Ptr<_211b8a319_Data> _138125_r;;
	std::tie(_138118_l,_138125_r) = _211b98c95_evalSlicingExprs(_self_, _137535_s);
	if ((_138118_l == nullptr)) {
		return _137617_d;
	};
	_137617_d.get()._field_Decl=false;
	_211b99845_checkSlicing(_self_.ptr(), _137617_d,_138118_l,_138125_r,_137535_s);
	if (_211b8abcc_IsConst(_137617_d.ptr())) {
		_137617_d.get()._field_Decl=false;
		_137617_d.get()._field_Model=static_cast<jule::Any>(_137617_d.get()._field_Constant);
	} else if (_137617_d.get()._field_Decl) {
		_137617_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_211019545_SlicingExprModel> _139921_model = jule::new_ptr<_211019545_SlicingExprModel>(_211019545_SlicingExprModel{._field_Token=_137535_s.get()._field_Token, ._field_Expr=_137617_d.get()._field_Model, ._field_Left=_138118_l.get()._field_Model, });;
		if ((_138125_r != nullptr)) {
			_139921_model.get()._field_Right=_138125_r.get()._field_Model;
		};
		_137617_d.get()._field_Model=static_cast<jule::Any>(_139921_model);
	};
	return _137617_d;
}



inline void _211b9a01b_castPtr(_211b8bd87_Eval* _self_, jule::Ptr<_211bb6455_TypeKind> _141230_t, jule::Ptr<_211b8a319_Data> _141248_d, jule::Ptr<_20e7ddc0b_Token> _141258_errorToken) {
	_141248_d.get()._field_Constant=nullptr;
	jule::Ptr<_211bbe6b1_Sptr> _141413_sptr = _211bb87cb_Sptr(_141248_d.get()._field_Kind.ptr());;
	if ((_141413_sptr != nullptr)) {
		if ((!(_211bb6b5e_Equals(_211bb8a40_Ptr(_141230_t.ptr()).get()._field_Elem, _141413_sptr.get()._field_Elem)))) {
			_211b8c393_pushErr(&(*_self_), _141258_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_141248_d.get()._field_Kind.ptr())),jule::Any(_211bb6851_Str(_141230_t.ptr()))}));
		};
		return;;
	};
	if ((!(_211b8cccd_isUnsafe(&(*_self_))))) {
		_211b8c393_pushErr(&(*_self_), _141258_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_211bbae2c_Prim> _142713_prim = _211bb8567_Prim(_141248_d.get()._field_Kind.ptr());;
	if (((_211bb8a40_Ptr(_141248_d.get()._field_Kind.ptr()) == nullptr) && ((_142713_prim == nullptr) || (!(_211b08c5a_IsInt(_211bbb290_Str(_142713_prim.ptr()))))))) {
		_211b8c393_pushErr(&(*_self_), _141258_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_141248_d.get()._field_Kind.ptr())),jule::Any(_211bb6851_Str(_141230_t.ptr()))}));
	};
}



inline void _211b9a3d4_castStruct(_211b8bd87_Eval* _self_, jule::Ptr<_211bb6455_TypeKind> _143333_t, jule::Ptr<_211b8a319_Data> _143351_d, jule::Ptr<_20e7ddc0b_Token> _143361_errorToken) {
	_143351_d.get()._field_Constant=nullptr;
	jule::Ptr<_211031e42_Trait> _143517_tr = _211bb9c2d_Trait(_143351_d.get()._field_Kind.ptr());;
	if ((_143517_tr == nullptr)) {
		_211b8c393_pushErr(&(*_self_), _143361_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_143351_d.get()._field_Kind.ptr())),jule::Any(_211bb6851_Str(_143333_t.ptr()))}));
		return;;
	};
	jule::Ptr<_210e6db2b_StructIns> _144117_s = _211bb99b9_Struct(_143333_t.ptr());;
	_22459c323_pushReference(&(*_self_), _144117_s);
	if ((!(_210e32150_IsImplements(_144117_s.get()._field_Decl.ptr(), _143517_tr)))) {
		_211b8c393_pushErr(&(*_self_), _143361_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_143351_d.get()._field_Kind.ptr())),jule::Any(_211bb6851_Str(_143333_t.ptr()))}));
	};
}



inline void _211b9a79c_castRef(_211b8bd87_Eval* _self_, jule::Ptr<_211bb6455_TypeKind> _144930_t, jule::Ptr<_211b8a319_Data> _144948_d, jule::Ptr<_20e7ddc0b_Token> _144958_errorToken) {
	_144948_d.get()._field_Constant=nullptr;
	jule::Ptr<_211bbe6b1_Sptr> _145117_sptr = _211bb87cb_Sptr(_144930_t.ptr());;
	jule::Ptr<_211bc2c25_Ptr> _145317_ptr = _211bb8a40_Ptr(_144948_d.get()._field_Kind.ptr());;
	if (((_145317_ptr != nullptr) && _211bb6b5e_Equals(_145117_sptr.get()._field_Elem, _145317_ptr.get()._field_Elem))) {
		if ((!(_211b8cccd_isUnsafe(&(*_self_))))) {
			_211b8c393_pushErr(&(*_self_), _144958_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_211bb99b9_Struct(_145117_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_211b9a3d4_castStruct(&(*_self_), _145117_sptr.get()._field_Elem,_144948_d,_144958_errorToken);
		return;;
	};
	_211b8c393_pushErr(&(*_self_), _144958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_144948_d.get()._field_Kind.ptr())),jule::Any(_211bb6851_Str(_144930_t.ptr()))}));
}



inline void _211b9ab65_castSlc(_211b8bd87_Eval* _self_, jule::Ptr<_211bb6455_TypeKind> _147130_t, jule::Ptr<_211b8a319_Data> _147148_d, jule::Ptr<_20e7ddc0b_Token> _147158_errorToken) {
	_147148_d.get()._field_Constant=nullptr;
	if ((_211bb8ca4_Enum(_147148_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_211bb8567_Prim(_211bb8ca4_Enum(_147148_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_211bbe161_IsStr(_211bb8567_Prim(_211bb8ca4_Enum(_147148_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_211b8c393_pushErr(&(*_self_), _147158_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_147148_d.get()._field_Kind.ptr())),jule::Any(_211bb6851_Str(_147130_t.ptr()))}));
			return;;
		};
	} else if (((_211bb8567_Prim(_147148_d.get()._field_Kind.ptr()) == nullptr) || (!(_211bbe161_IsStr(_211bb8567_Prim(_147148_d.get()._field_Kind.ptr()).ptr()))))) {
		_211b8c393_pushErr(&(*_self_), _147158_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_147148_d.get()._field_Kind.ptr())),jule::Any(_211bb6851_Str(_147130_t.ptr()))}));
		return;;
	};
	_147130_t=_211bb94e1_Slc(_147130_t.ptr()).get()._field_Elem;
	jule::Ptr<_211bbae2c_Prim> _148413_prim = _211bb8567_Prim(_147130_t.ptr());;
	if (((_148413_prim == nullptr) || ((!(_211bbc736_IsU8(_148413_prim.ptr()))) && (!(_211bbc25d_IsI32(_148413_prim.ptr())))))) {
		_211b8c393_pushErr(&(*_self_), _147158_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_147148_d.get()._field_Kind.ptr())),jule::Any(_211bb6851_Str(_147130_t.ptr()))}));
	};
}



inline void _211b9ae84_castStr(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data> _149030_d, jule::Ptr<_20e7ddc0b_Token> _149040_errorToken) {
	_149030_d.get()._field_Constant=nullptr;
	if ((_211bb8ca4_Enum(_149030_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_211034087_Enum> _149321_e = _211bb8ca4_Enum(_149030_d.get()._field_Kind.ptr());;
		if (((_211bb8567_Prim(_149321_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _211bbe161_IsStr(_211bb8567_Prim(_149321_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_211bb8567_Prim(_149030_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_211bbae2c_Prim> _150017_prim = _211bb8567_Prim(_149030_d.get()._field_Kind.ptr());;
		if (((!(_211bbc736_IsU8(_150017_prim.ptr()))) && (!(_211bbc25d_IsI32(_150017_prim.ptr()))))) {
			_211b8c393_pushErr(&(*_self_), _149040_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_211bb6851_Str(_149030_d.get()._field_Kind.ptr()))}));
		};
		return;;
	};
	if ((_211bb94e1_Slc(_149030_d.get()._field_Kind.ptr()) == nullptr)) {
		_211b8c393_pushErr(&(*_self_), _149040_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_211bb6851_Str(_149030_d.get()._field_Kind.ptr()))}));
		return;;
	};
	jule::Ptr<_211bb6455_TypeKind> _151217_t = _211bb94e1_Slc(_149030_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_211bbae2c_Prim> _151313_prim = _211bb8567_Prim(_151217_t.ptr());;
	if (((_151313_prim == nullptr) || ((!(_211bbc736_IsU8(_151313_prim.ptr()))) && (!(_211bbc25d_IsI32(_151313_prim.ptr())))))) {
		_211b8c393_pushErr(&(*_self_), _149040_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_211bb6851_Str(_149030_d.get()._field_Kind.ptr()))}));
	};
}



inline void _211b9b34c_castInt(_211b8bd87_Eval* _self_, jule::Ptr<_211bb6455_TypeKind> _151930_t, jule::Ptr<_211b8a319_Data> _151948_d, jule::Ptr<_20e7ddc0b_Token> _151958_errorToken) {
	if (_211b8abcc_IsConst(_151948_d.ptr())) {
		jule::Ptr<_211bbae2c_Prim> _152117_prim = _211bb8567_Prim(_151930_t.ptr());;
		{
			
			if (_211b089e6_IsSigInt(_152117_prim.get()._field_Kind)) {
				_case_begin_2245b833e:;
				{
					_211011b25_SetI64(_151948_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_2110113c7_AsI64(_151948_d.get()._field_Constant.ptr())));
				}
			}
			else if (_211b08b28_IsUnsigInt(_152117_prim.get()._field_Kind)) {
				_case_begin_2245b83b6:;
				{
					_211011d9a_SetU64(_151948_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_21101163b_AsU64(_151948_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_2245b8284:;
		};
	} else {
		_151948_d.get()._field_Constant=nullptr;
	};
	if ((_211bb8ca4_Enum(_151948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_211034087_Enum> _153317_e = _211bb8ca4_Enum(_151948_d.get()._field_Kind.ptr());;
		if (_211b08ebe_IsNum(_211bb6851_Str(_153317_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_211bb87cb_Sptr(_151948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_211bbae2c_Prim> _154017_prim = _211bb8567_Prim(_151930_t.ptr());;
		if ((!(_211bbdb88_IsUintptr(_154017_prim.ptr())))) {
			_211b8c393_pushErr(&(*_self_), _151958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_151948_d.get()._field_Kind.ptr())),jule::Any(_211bb6851_Str(_151930_t.ptr()))}));
		};
		return;;
	};
	if ((_211bb8a40_Ptr(_151948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_211bbae2c_Prim> _154717_prim = _211bb8567_Prim(_151930_t.ptr());;
		if (_211bbdb88_IsUintptr(_154717_prim.ptr())) {
		} else if ((!(_211b8cccd_isUnsafe(&(*_self_))))) {
			_211b8c393_pushErr(&(*_self_), _151958_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_211bbae2c_Prim> _155613_prim = _211bb8567_Prim(_151948_d.get()._field_Kind.ptr());;
	if (((_155613_prim != nullptr) && _211b08ebe_IsNum(_211bbb290_Str(_155613_prim.ptr())))) {
		return;;
	};
	_211b8c393_pushErr(&(*_self_), _151958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_151948_d.get()._field_Kind.ptr())),jule::Any(_211bb6851_Str(_151930_t.ptr()))}));
}



inline void _211b9b715_castNum(_211b8bd87_Eval* _self_, jule::Ptr<_211bb6455_TypeKind> _156430_t, jule::Ptr<_211b8a319_Data> _156448_d, jule::Ptr<_20e7ddc0b_Token> _156458_errorToken) {
	if (_211b8abcc_IsConst(_156448_d.ptr())) {
		jule::Ptr<_211bbae2c_Prim> _156617_prim = _211bb8567_Prim(_156430_t.ptr());;
		{
			
			if (_211b08d8c_IsFloat(_156617_prim.get()._field_Kind)) {
				_case_begin_2245c2898:;
				{
					_21101261a_SetF64(_156448_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_2110118a0_AsF64(_156448_d.get()._field_Constant.ptr())));
				}
			}
			else if (_211b089e6_IsSigInt(_156617_prim.get()._field_Kind)) {
				_case_begin_2245c2920:;
				{
					_211011b25_SetI64(_156448_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_2110113c7_AsI64(_156448_d.get()._field_Constant.ptr())));
				}
			}
			else if (_211b08b28_IsUnsigInt(_156617_prim.get()._field_Kind)) {
				_case_begin_2245c2997:;
				{
					_211011d9a_SetU64(_156448_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_21101163b_AsU64(_156448_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_2245c27cc:;
		};
	} else {
		_156448_d.get()._field_Constant=nullptr;
	};
	if ((_211bb8ca4_Enum(_156448_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_211034087_Enum> _158017_e = _211bb8ca4_Enum(_156448_d.get()._field_Kind.ptr());;
		if (_211b08ebe_IsNum(_211bb6851_Str(_158017_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_211bbae2c_Prim> _158613_prim = _211bb8567_Prim(_156448_d.get()._field_Kind.ptr());;
	if (((_158613_prim != nullptr) && _211b08ebe_IsNum(_211bbb290_Str(_158613_prim.ptr())))) {
		return;;
	};
	_211b8c393_pushErr(&(*_self_), _156458_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_156448_d.get()._field_Kind.ptr())),jule::Any(_211bb6851_Str(_156430_t.ptr()))}));
}



inline void _211b9bacd_castPrim(_211b8bd87_Eval* _self_, jule::Ptr<_211bb6455_TypeKind> _159431_t, jule::Ptr<_211b8a319_Data> _159449_d, jule::Ptr<_20e7ddc0b_Token> _159459_errorToken) {
	jule::Ptr<_211bbae2c_Prim> _159513_prim = _211bb8567_Prim(_159431_t.ptr());;
	{
		
		if (_211bbe3c5_IsAny(_159513_prim.ptr())) {
			_case_begin_2245c8a8b:;
			{
				_159449_d.get()._field_Constant=nullptr;
			}
		}
		else if (_211bbe161_IsStr(_159513_prim.ptr())) {
			_case_begin_2245c911e:;
			{
				_211b9ae84_castStr(&(*_self_), _159449_d,_159459_errorToken);
			}
		}
		else if (_211b08c5a_IsInt(_211bbb290_Str(_159513_prim.ptr()))) {
			_case_begin_2245c9185:;
			{
				_211b9b34c_castInt(&(*_self_), _159431_t,_159449_d,_159459_errorToken);
			}
		}
		else if (_211b08ebe_IsNum(_211bbb290_Str(_159513_prim.ptr()))) {
			_case_begin_2245c920c:;
			{
				_211b9b715_castNum(&(*_self_), _159431_t,_159449_d,_159459_errorToken);
			}
		}
		else {
			_case_begin_2245c90a8:;
			{
				_211b8c393_pushErr(&(*_self_), _159459_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_159431_t.ptr()))}));
			}
		}
		_match_end_2245c9042:;
	};
}



inline void _211b9bdec_castConstant(_211b8bd87_Eval* _self_, jule::Ptr<_211bb6455_TypeKind>& _161136_t, jule::Ptr<_211b8a319_Data>& _161155_d) {
	if (((_161155_d == nullptr) || (!(_211b8abcc_IsConst(_161155_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_211bbae2c_Prim> _161513_prim = _211bb8567_Prim(_161136_t.ptr());;
	_211bb361c_castConstByType(_161513_prim.get()._field_Kind,_161155_d);
	_161155_d.get()._field_Model=static_cast<jule::Any>(_161155_d.get()._field_Constant);
}



inline void _211b9c2b5_castTypeEnum(_211b8bd87_Eval* _self_, jule::Ptr<_211bb6455_TypeKind>& _162036_t, jule::Ptr<_211b8a319_Data>& _162055_d, jule::Ptr<_20e7ddc0b_Token>& _162070_errorToken) {
	jule::I64 _162113_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_211b304bd_checkTypeCompatibility((*_self_)._field_s, _162055_d.get()._field_Kind,_162036_t,_162070_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_162113_n);
		_211b8c393_pushErr(&(*_self_), _162070_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_162055_d.get()._field_Kind.ptr())),jule::Any(_211bb6851_Str(_162036_t.ptr()))}));
	};
	_162055_d.get()._field_Constant=nullptr;
}



inline jule::Ptr<_211b8a319_Data> _211b9c716_evalCastByTypeNData(_211b8bd87_Eval* _self_, jule::Ptr<_211bb6455_TypeKind> _162942_t, jule::Ptr<_211b8a319_Data> _162960_d, jule::Ptr<_20e7ddc0b_Token> _162974_errorToken) {
	if (((_162960_d != nullptr) && _162960_d.get()._field_Decl)) {
		_211b8c393_pushErr(&(*_self_), _162974_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (((_211bb8567_Prim(_162960_d.get()._field_Kind.ptr()) != nullptr) && _211bbe3c5_IsAny(_211bb8567_Prim(_162960_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_2245d3304:;
			{
				if ((_211bb8ca4_Enum(_162942_t.ptr()) != nullptr)) {
					_211b8c393_pushErr(&(*_self_), _162974_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_211b8c6b2_pushSugggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_211bb9018_TypeEnum(_162942_t.ptr()) != nullptr)) {
					_211b8c393_pushErr(&(*_self_), _162974_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
				_162960_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_211bb9018_TypeEnum(_162960_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2245d2644:;
			{
				_211b9c2b5_castTypeEnum(&(*_self_), _162942_t,_162960_d,_162974_errorToken);
			}
		}
		else if ((_211bb8a40_Ptr(_162942_t.ptr()) != nullptr)) {
			_case_begin_2245d26aa:;
			{
				_211b9a01b_castPtr(&(*_self_), _162942_t,_162960_d,_162974_errorToken);
			}
		}
		else if ((_211bb87cb_Sptr(_162942_t.ptr()) != nullptr)) {
			_case_begin_2245d2721:;
			{
				_211b9a79c_castRef(&(*_self_), _162942_t,_162960_d,_162974_errorToken);
			}
		}
		else if ((_211bb94e1_Slc(_162942_t.ptr()) != nullptr)) {
			_case_begin_2245d2787:;
			{
				_211b9ab65_castSlc(&(*_self_), _162942_t,_162960_d,_162974_errorToken);
			}
		}
		else if ((_211bb99b9_Struct(_162942_t.ptr()) != nullptr)) {
			_case_begin_2245d3469:;
			{
				_211b9a3d4_castStruct(&(*_self_), _162942_t,_162960_d,_162974_errorToken);
			}
		}
		else if ((_211bb8567_Prim(_162942_t.ptr()) != nullptr)) {
			_case_begin_2245d34d0:;
			{
				_211b9bacd_castPrim(&(*_self_), _162942_t,_162960_d,_162974_errorToken);
				_211b9bdec_castConstant(&(*_self_), _162942_t,_162960_d);
			}
		}
		else {
			_case_begin_2245d25cd:;
			{
				_211b8c393_pushErr(&(*_self_), _162974_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_162942_t.ptr()))}));
				_162960_d=nullptr;
			}
		}
		_match_end_2245d2578:;
	};
	if ((_162960_d == nullptr)) {
		return nullptr;
	};
	_162960_d.get()._field_Mutable=(_162960_d.get()._field_Mutable || ((!(_211bb7852_Mutable(_162960_d.get()._field_Kind.ptr()))) && _211bb7852_Mutable(_162942_t.ptr())));
	_162960_d.get()._field_Lvalue=false;
	_162960_d.get()._field_Decl=false;
	if (((_211bb8ca4_Enum(_162960_d.get()._field_Kind.ptr()) == nullptr) || (!(_211bb6b5e_Equals(_211bb8ca4_Enum(_162960_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _162942_t))))) {
		_211bb2ad3_applyCastKind(_162960_d,_162942_t);
		_162960_d.get()._field_Model.operator jule::Ptr<_2110186cb_CastingExprModel>().get()._field_Token=_162974_errorToken;
	} else {
		_162960_d.get()._field_Kind=_162942_t;
	};
	return _162960_d;
}



inline jule::Ptr<_211b8a319_Data> _211b9cb67_evalCastT(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_211bb6455_TypeKind>& _168334_t, jule::Ptr<_210e565c5_Expr>& _168353_e, jule::Ptr<_20e7ddc0b_Token>& _168368_et) {
	jule::Ptr<_211bb6455_TypeKind> _168417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_168417_prefix;
	});;
	if ((_211bb94e1_Slc(_168334_t.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _168353_e.get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_210e5ce7d_SliceExpr>>()) {
				_case_begin_2245de0e0:;
				{
					_self_.get()._field_prefix=_168334_t;
				}
			}
			_match_end_2245de08a:;
		};
	};
	jule::Ptr<_211b8a319_Data> _169317_d = _211ba7534_evalExprKind(_self_, _168353_e.get()._field_Kind);;
	if (((_169317_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _169317_d;
	};
	return _211b9c716_evalCastByTypeNData(_self_.ptr(), _168334_t,_169317_d,_168368_et);
}



inline jule::Ptr<_211b8a319_Data> _211b9ce75_evalCast(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e595a6_CastExpr> _170032_c) {
	jule::Ptr<_211bba5ad_TypeSymbol> _170117_t = _211027322_buildType(_170032_c.get()._field_Kind);;
	jule::Bool _170213_ok = _211b2d3de_checkType(_self_.get()._field_s, _170117_t,_self_.get()._field_lookup);;
	if ((!(_170213_ok))) {
		return nullptr;
	};
	return _211b9cb67_evalCastT(_self_, _170117_t.get()._field_Kind,_170032_c.get()._field_Expr,_170032_c.get()._field_Kind.get()._field_Token);
}



inline jule::Ptr<_211b8a319_Data> _211b9d283_evalNsSelection(_211b8bd87_Eval* _self_, jule::Ptr<_210e5995d_NsSelectionExpr> _170934_s) {
	jule::Str _171013_path = _211bce050_buildLinkPathByTokens(_170934_s.get()._field_Ns);;
	jule::Ptr<_211b1c378_ImportInfo> _171117_imp = _211bd2086_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._211bd054b_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_211b1c378_ImportInfo>)>([=](jule::Ptr<_211b1c378_ImportInfo> _171152_imp) mutable -> jule::Bool {
		if (((_170934_s.get()._field_Ns.len() == 1LL) && (_171152_imp.get()._field_Alias == _171013_path))) {
			return true;
		};
		return ((_171152_imp.get()._field_LinkPath == _171013_path) && _211b1eed5_isAccessibleViaSelection(_171152_imp.ptr()));
	}));;
	if ((_171117_imp == nullptr)) {
		_211b8c393_pushErr(&(*_self_), _170934_s.get()._field_Ns[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_171013_path)}));
		return nullptr;
	};
	jule::Trait<_211bd2086_Lookup> _172317_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_211bd2086_Lookup>(_171117_imp, 1);
	;
	_211b8ca69_disallowBuiltin(&(*_self_));
	jule::Any _172817_def = _211b903a7_getDef(&(*_self_), _170934_s.get()._field_Ident.get()._field_Kind,false);;
	_211b8c88d_allowBuiltin(&(*_self_));
	(*_self_)._field_lookup=_172317_lookup;
	jule::Ptr<_211b8a319_Data> _173117_d = _211b93d8e_evalDef(&(*_self_), jule::Any(_172817_def),_170934_s.get()._field_Ident);;
	return _173117_d;
}



inline jule::Ptr<_211b8a319_Data> _211b9d6d4_evalStructLitExplicit(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e6db2b_StructIns> _173545_s, jule::Slice<jule::Ptr<_210e565c5_Expr>> _173613_exprs, jule::Ptr<_20e7ddc0b_Token> _173633_errorToken) {
	jule::Bool _173713_ok = _211b2952d_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_173545_s.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_173545_s.get()._field_Generics.len()),_173633_errorToken);;
	if ((!(_173713_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _173545_s.get()._field_Decl))) {
		_211b8c393_pushErr(_self_.ptr(), _173633_errorToken,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_173545_s.get()._field_Decl.get()._field_Ident)}));
	};
	_22459c323_pushReference(_self_.ptr(), _173545_s);
	_211b92299_checkDeprecated(_self_.ptr(), _173545_s.get()._field_Decl.get()._field_Directives,_173633_errorToken);
	_211b7e9c3_structLitChecker _175017_slc = _211b7e9c3_structLitChecker{._field_e=_self_, ._field_errorToken=_173633_errorToken, ._field_s=_173545_s, };;
	_211b81068_check(&_175017_slc, _173613_exprs);
	return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_173545_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_211018302_StructLitExprModel>(_211018302_StructLitExprModel{._field_Strct=_173545_s, ._field_Args=_175017_slc._field_args})), });
}



inline jule::Ptr<_211b8a319_Data> _211b9d9e2_evalStructLit(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e5ba70_StructLit> _176937_lit) {
	jule::Ptr<_211bba5ad_TypeSymbol> _177017_t = _211027322_buildType(_176937_lit.get()._field_Kind);;
	jule::Bool _177113_ok = _211b2d3de_checkType(_self_.get()._field_s, _177017_t,_self_.get()._field_lookup);;
	if ((!(_177113_ok))) {
		return nullptr;
	};
	jule::Ptr<_210e6db2b_StructIns> _177617_s = _211bb99b9_Struct(_177017_t.get()._field_Kind.ptr());;
	if ((_177617_s == nullptr)) {
		if ((_211bb87cb_Sptr(_177017_t.get()._field_Kind.ptr()) != nullptr)) {
			_177617_s=_211bb99b9_Struct(_211bb87cb_Sptr(_177017_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_177617_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_211b8c393_pushErr(_self_.ptr(), _176937_lit.get()._field_Kind.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_211b8a319_Data> _178917_d = _211b9d6d4_evalStructLitExplicit(_self_, _177617_s,_176937_lit.get()._field_Exprs,_176937_lit.get()._field_Kind.get()._field_Token);;
	if ((_211bb87cb_Sptr(_177017_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_211018302_StructLitExprModel> _179121_model = _178917_d.get()._field_Model.operator jule::Ptr<_211018302_StructLitExprModel>();;
		_211bb1494_makeStructLitAlloc(_178917_d,_179121_model);
	};
	return _178917_d;
}



inline _211bc4980_typeChecker _211b9dc56_typeChecker(_211b8bd87_Eval* _self_) {
	return _211b2c2cd_typeChecker((*_self_)._field_s, (*_self_)._field_lookup,nullptr,nullptr);
}



inline jule::Ptr<_211b8a319_Data> _211b9e064_evalType(_211b8bd87_Eval* _self_, jule::Ptr<_210e520a4_TypeDecl> _180131_t) {
	jule::Ptr<_211bba5ad_TypeSymbol> _180217_tk = _211027322_buildType(_180131_t);;
	jule::Bool _180313_ok = _211b2d3de_checkType((*_self_)._field_s, _180217_tk,(*_self_)._field_lookup);;
	if ((!(_180313_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=_180217_tk.get()._field_Kind, ._field_Model=static_cast<jule::Any>(_180217_tk.get()._field_Kind), ._field_Decl=true, });
}



inline void _211b9e383_callTypeFn(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e5a893_FnCallExpr>& _181435_fc, jule::Ptr<_211b8a319_Data>& _181457_d) {
	if ((_181435_fc.get()._field_Args.len() < 1LL)) {
		_211b8c393_pushErr(_self_.ptr(), _181435_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_181435_fc.get()._field_Args.len() > 1LL)) {
		_211b8c393_pushErr(_self_.ptr(), _181435_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	if ((_181435_fc.get()._field_Args.len() > 0LL)) {
		jule::Ptr<_210e565c5_Expr> _182221_arg = _181435_fc.get()._field_Args[0LL];;
		_181457_d=_211b9cb67_evalCastT(_self_, _181457_d.get()._field_Kind,_182221_arg,_182221_arg.get()._field_Token);
		return;;
	};
	if ((_181457_d != nullptr)) {
		_181457_d.get()._field_Decl=false;
	};
}



inline void _211b9e6a2_callBuiltinFn(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e5a893_FnCallExpr>& _183238_fc, jule::Ptr<_211b8a319_Data>& _183260_d) {
	_183260_d=_211bb9755_Fn(_183260_d.get()._field_Kind.ptr()).get()._field_caller(_self_,_183238_fc,_183260_d);
	if ((_183260_d == nullptr)) {
		return;;
	};
	_183260_d.get()._field_Mutable=true;
}



inline void _211b9e9e3_checkFnOfConcurrentCall(_211b8bd87_Eval* _self_, jule::Ptr<_211022c35_FnIns>& _184043_f, jule::Ptr<_20e7ddc0b_Token> _184054_errorToken) {
	if (_211b8cccd_isUnsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _184043_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_224613499:;
		if (it != expr.end()) {
			jule::Ptr<_211021d66_ParamIns> &_184416_p = *it;
			{
				if (_184416_p.get()._field_Decl.get()._field_Reference) {
					_211b8c393_pushErr(&(*_self_), _184054_errorToken,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_224613499:;
			++it;
			goto _iter_begin_224613499;
		}
		_iter_end_224613499:;
	};
}



inline void _211b9edde_processExceptionalHandler(_211b8bd87_Eval* _self_, jule::Ptr<_211022c35_FnIns>& _185249_f, jule::Ptr<_210e5a893_FnCallExpr>& _185265_fc, jule::Ptr<_211b8a319_Data>& _185287_d) {
	jule::Bool _185313_resultNeeded = ((!(_2110204e6_IsVoid(_185249_f.get()._field_Decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_211b0c214_scopeChecker> _185417_csc = nullptr;;
	jule::Ptr<_211b0940e_Scope> _185517_ch = nullptr;;
	jule::Ptr<_2110188b8_FnCallExprModel> _185717_model = _185287_d.get()._field_Model.operator jule::Ptr<_2110188b8_FnCallExprModel>();;
	jule::Ptr<_211b0c214_scopeChecker> _186117_sc = (*_self_)._field_lookup.operator jule::Ptr<_211b0c214_scopeChecker>();;
	_185417_csc=_211b1574a_newChildChecker(_186117_sc);
	if (_185313_resultNeeded) {
		_185417_csc.get()._field_result=_185249_f;
	};
	_185517_ch=_211b0e090_getChild(_186117_sc.ptr());
	_185265_fc.get()._field_Exception.get()._field_Parent=_186117_sc.get()._field_tree;
	_185417_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_185417_csc.get()._field_table.get()._field_Vars,1);_185417_csc.get()._field_table.get()._field_Vars.__push(_211bb17d5_buildErrorVar(_185517_ch,_185265_fc));;
	_211b0e1c2_checkChildSsc(_186117_sc, _185265_fc.get()._field_Exception,_185517_ch,_185417_csc);
	_185717_model.get()._field_Assigned=_185313_resultNeeded;
	_185717_model.get()._field_Except=_185517_ch;
	if ((_185313_resultNeeded && (_185417_csc.get()._field_result != nullptr))) {
		_211b8c393_pushErr(&(*_self_), _185265_fc.get()._field_Token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _211ba021e_callFn(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e5a893_FnCallExpr>& _187931_fc, jule::Ptr<_211b8a319_Data>& _187953_d) {
	jule::Ptr<_211022c35_FnIns> _188017_f = _211bb9755_Fn(_187953_d.get()._field_Kind.ptr());;
	if ((_211b8d042_isGlobal(_self_.ptr()) && _188017_f.get()._field_Decl.get()._field_Exceptional)) {
		_211b8c393_pushErr(_self_.ptr(), _187931_fc.get()._field_Token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_211b8c6b2_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_187953_d=nullptr;
		return;;
	};
	if (_2110240bb_IsBuiltin(_188017_f.ptr())) {
		_211b9e6a2_callBuiltinFn(_self_, _187931_fc,_187953_d);
		return;;
	};
	if (((!(_21102075a_IsMethod(_188017_f.get()._field_Decl.ptr()))) && _211bcd1a3_hasDirective(_188017_f.get()._field_Decl.get()._field_Directives,jule::Str("test", 4)))) {
		_211b8c393_pushErr(_self_.ptr(), _187931_fc.get()._field_Token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_187953_d=nullptr;
		return;;
	};
	if (((((!(_187953_d.get()._field_Mutable)) && _21102075a_IsMethod(_188017_f.get()._field_Decl.ptr())) && (!(_188017_f.get()._field_Decl.get()._field_Statically))) && _188017_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_211b8c393_pushErr(_self_.ptr(), _187931_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_211b8cccd_isUnsafe(_self_.ptr()))) && _188017_f.get()._field_Decl.get()._field_Unsafety)) {
		_211b8c393_pushErr(_self_.ptr(), _187931_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _190417_dynamicAnnotation = (((_188017_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_188017_f.get()._field_Generics.len() == 0LL)) && (_188017_f.get()._field_Params.len() > 0LL));;
	if (_190417_dynamicAnnotation) {
		_188017_f.get()._field_Generics=jule::Slice<jule::Ptr<_211bb4c28_InsGeneric>>::alloc(_188017_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_188017_f.get()._field_Generics.len() != _188017_f.get()._field_Decl.get()._field_Generics.len())) {
		_211b2952d_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_188017_f.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_188017_f.get()._field_Generics.len()),_187931_fc.get()._field_Token);
		_187953_d=nullptr;
		return;;
	};
	jule::Ptr<_211b254c4_Sema> _191317_old = _self_.get()._field_s;;
	if ((_188017_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_188017_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_191317_old != _self_.get()._field_s)) {
			_191317_old.get()._field_errors=jule::append(_191317_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_191317_old;
	});;
	if ((!(_190417_dynamicAnnotation))) {
		if ((!(_188017_f.get()._field_reloaded))) {
			jule::Bool _192821_ok = _211b3225b_reloadFnInsTypes(_self_.get()._field_s, _188017_f);;
			_188017_f.get()._field_reloaded=true;
			if ((!(_192821_ok))) {
				_187953_d=nullptr;
				return;;
			};
		};
		jule::Ptr<_211022c35_FnIns> _193521_existInstance = _2110219ae_appendInstance(_188017_f.get()._field_Decl.ptr(), _188017_f);;
		if ((_193521_existInstance != nullptr)) {
			_188017_f=_193521_existInstance;
		};
	} else {
		_211b30b50_buildFnNonGenericTypeKinds(_self_.get()._field_s, _188017_f);
	};
	_211b7c0b9_fnCallArgChecker _194317_fcac = _211b7c0b9_fnCallArgChecker{._field_e=_self_, ._field_args=_187931_fc.get()._field_Args, ._field_errorToken=_187931_fc.get()._field_Token, ._field_f=_188017_f, ._field_dynamicAnnotation=_190417_dynamicAnnotation, };;
	jule::Bool _195017_ok = false;;
	if ((_188017_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		std::tie(_191317_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_191317_old);
		_195017_ok=_211b7e484_check(&_194317_fcac);
		std::tie(_191317_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_191317_old);
	} else {
		_195017_ok=_211b7e484_check(&_194317_fcac);
	};
	if (_190417_dynamicAnnotation) {
		if ((!(_195017_ok))) {
			_187953_d=nullptr;
			return;;
		};
		if ((!(_211b98327_checkGenericFn(_self_, _188017_f,_187931_fc.get()._field_Token,_187953_d.get()._field_Model)))) {
			_187953_d=nullptr;
			return;;
		};
	};
	jule::Any _197017_callModel = _187953_d.get()._field_Model;;
	if (_2110204e6_IsVoid(_188017_f.get()._field_Decl.ptr())) {
		_187953_d=_211bb2cd1_buildVoidData();
	} else {
		_187953_d.get()._field_Kind=_188017_f.get()._field_Result;
		_187953_d.get()._field_Lvalue=false;
	};
	jule::Ptr<_2110188b8_FnCallExprModel> _197917_model = jule::new_ptr<_2110188b8_FnCallExprModel>(_2110188b8_FnCallExprModel{._field_Token=_187931_fc.get()._field_Token, ._field_Func=_188017_f, ._field_Expr=_197017_callModel, ._field_Args=_194317_fcac._field_argModels, });;
	_187953_d.get()._field_Model=static_cast<jule::Any>(_197917_model);
	_187953_d.get()._field_Mutable=true;
	if (_188017_f.get()._field_Decl.get()._field_Exceptional) {
		{
			
			if (_210e5ac06_Unhandled(_187931_fc.ptr())) {
				_case_begin_22462e54d:;
				{
					_211b8c393_pushErr(_self_.ptr(), _187931_fc.get()._field_Token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_211b8c6b2_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_210e5ae6a_Ignored(_187931_fc.ptr())) {
				_case_begin_2246208c4:;
				{
					goto _match_end_22462e0ca;
				}
			}
			else {
				_case_begin_22462e1a7:;
				{
					_211b9edde_processExceptionalHandler(_self_.ptr(), _188017_f,_187931_fc,_187953_d);
				}
			}
			_match_end_22462e0ca:;
		};
	} else if ((!(_210e5ac06_Unhandled(_187931_fc.ptr())))) {
		_211b8c393_pushErr(_self_.ptr(), _187931_fc.get()._field_Token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba052c_evalFnCall(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e5a893_FnCallExpr> _200534_fc) {
	jule::Ptr<_211bb6455_TypeKind> _200617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_200617_prefix;
	});;
	{
		auto &_match_expr{ _200534_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_210e5863d_IdentExpr>>()) {
			_case_begin_224631c9d:;
			{
				if ((_200534_fc.get()._field_Expr.get()._field_Token.get()._field_Kind == jule::Str("error", 5))) {
					return _211c68b01_builtinCallerError(_self_,_200534_fc);
				};
			}
		}
		_match_end_224631c48:;
	};
	jule::Ptr<_211b8a319_Data> _201917_d = _211ba7534_evalExprKind(_self_, _200534_fc.get()._field_Expr.get()._field_Kind);;
	if ((_201917_d == nullptr)) {
		return nullptr;
	};
	if (_201917_d.get()._field_Decl) {
		_211b9e383_callTypeFn(_self_, _200534_fc,_201917_d);
		return _201917_d;
	};
	if ((_211bb9755_Fn(_201917_d.get()._field_Kind.ptr()) == nullptr)) {
		_211b8c393_pushErr(_self_.ptr(), _200534_fc.get()._field_Token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_211ba021e_callFn(_self_, _200534_fc,_201917_d);
	return _201917_d;
}



inline jule::Ptr<_211b8a319_Data> _211ba08d4_evalEnumStatic(_211b8bd87_Eval* _self_, jule::Ptr<_211034087_Enum> _203837_enm, jule::Ptr<_20e7ddc0b_Token> _203849_ident) {
	jule::Ptr<_211b8a319_Data> _203917_d = jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_203837_enm, 3)}), });;
	jule::Ptr<_211033592_EnumItem> _204517_item = _211034b48_FindItem(_203837_enm.ptr(), _203849_ident.get()._field_Kind);;
	if ((_204517_item == nullptr)) {
		_211b8c393_pushErr(&(*_self_), _203849_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_203837_enm.get()._field_Ident),jule::Any(_203849_ident.get()._field_Kind)}));
	} else {
		_203917_d.get()._field_Constant=jule::new_ptr<_210ea46cd_Const>((*(_204517_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_203917_d.get()._field_Model=static_cast<jule::Any>(_203917_d.get()._field_Constant);
		_211bb3364_applyCastModelByEnum(_203917_d,_203837_enm);
	};
	return _203917_d;
}



inline jule::Ptr<_211b8a319_Data> _211ba0c8b_evalTypeEnumStatic(_211b8bd87_Eval* _self_, jule::Ptr<_211035682_TypeEnum> _205741_enm, jule::Ptr<_20e7ddc0b_Token> _205757_ident) {
	jule::Ptr<_2110350bb_TypeEnumItem> _205817_item = _2110361bb_FindItem(_205741_enm.ptr(), _205757_ident.get()._field_Kind);;
	if ((_205817_item == nullptr)) {
		_211b8c393_pushErr(&(*_self_), _205757_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_205741_enm.get()._field_Ident),jule::Any(_205757_ident.get()._field_Kind)}));
		return nullptr;
	};
	{
		
		if ((_211bb8ca4_Enum(_205817_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_22463a999:;
			{
				return _211b9093a__evalEnum(&(*_self_), _211bb8ca4_Enum(_205817_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_211bb9018_TypeEnum(_205817_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_22463aba8:;
			{
				return _211b91100__evalTypeEnum(&(*_self_), _211bb9018_TypeEnum(_205817_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_211bb99b9_Struct(_205817_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_224639d94:;
			{
				return _211b917b5__evalStruct(&(*_self_), _211bb99b9_Struct(_205817_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else {
			_case_begin_2246390c4:;
			{
				jule::Ptr<_211b8a319_Data> _207121_d = jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=_205817_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_207121_d.get()._field_Model=static_cast<jule::Any>(_207121_d.get()._field_Kind);
				return _207121_d;
			}
		}
		_match_end_22463905d:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba1143_evalStructStatic(_211b8bd87_Eval* _self_, jule::Ptr<_210e6db2b_StructIns> _208039_s, jule::Ptr<_20e7ddc0b_Token> _208054_ident) {
	jule::Ptr<_211b8a319_Data> _208117_d = jule::new_ptr<_211b8a319_Data>();;
	;
	jule::Ptr<_211020084_Fn> _208517_method = _210e4797e_FindMethod(_208039_s.ptr(), _208054_ident.get()._field_Kind,true);;
	if ((_208517_method != nullptr)) {
		if ((!(_211b2885c_isAccessibleDefine((*_self_)._field_s.ptr(), _208517_method.get()._field_Public,_208517_method.get()._field_Token)))) {
			_211b8c393_pushErr(&(*_self_), _208054_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_208054_ident.get()._field_Kind)}));
			_211b8c6b2_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_211022c35_FnIns> _209221_ins = _2110216d4_instance(_208517_method);;
		_209221_ins.get()._field_Owner=_208039_s;
		_2244e2587_pushReference(&(*_self_), _209221_ins);
		_208117_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_211019d3c_StructStaticIdentExprModel>(_211019d3c_StructStaticIdentExprModel{._field_Structure=_208039_s, ._field_Expr=_208117_d.get()._field_Model, ._field_Method=_209221_ins}));
		_208117_d.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_209221_ins, 1)});
		return _208117_d;
	};
	jule::Ptr<_211b43228_Var> _210617_sttc = _210e4b7b8_FindStatic(_208039_s.ptr(), _208054_ident.get()._field_Kind);;
	if ((_210617_sttc != nullptr)) {
		return _211b93630_evalVar(&(*_self_), _210617_sttc,_208054_ident);
	};
	_211b8c393_pushErr(&(*_self_), _208054_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_208039_s.get()._field_Decl.get()._field_Ident),jule::Any(_208054_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_211b8a319_Data> _211ba1594_evalTraitSubIdent(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data> _211540_d, jule::Ptr<_211031e42_Trait> _211554_trt, jule::Ptr<_20e7ddc0b_Token> _211571_ident) {
	jule::Ptr<_211020084_Fn> _211617_f = _211032cbc_FindMethod(_211554_trt.ptr(), _211571_ident.get()._field_Kind);;
	if ((_211617_f == nullptr)) {
		_211b8c393_pushErr(&(*_self_), _211571_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_211554_trt.get()._field_Ident),jule::Any(_211571_ident.get()._field_Kind)}));
		return nullptr;
	};
	return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_2110216d4_instance(_211617_f), 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_211019732_TraitSubIdentExprModel>(_211019732_TraitSubIdentExprModel{._field_Token=_211571_ident, ._field_Expr=_211540_d.get()._field_Model, ._field_Method=_211617_f, ._field_Trt=_211554_trt})), });
}



inline jule::Ptr<_211b8a319_Data> _211ba1a8e_evalStructSubIdent(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data> _213441_d, jule::Ptr<_210e6db2b_StructIns> _213455_s, jule::Ptr<_210e59dd1_SubIdentExpr> _213474_si, jule::Bool _213493_ref) {
	jule::Ptr<_210e49e48_FieldIns> _213517_f = _210e48c9e_FindField(_213455_s.ptr(), _213474_si.get()._field_Ident.get()._field_Kind);;
	if ((_213517_f != nullptr)) {
		if ((!(_211b2885c_isAccessibleDefine((*_self_)._field_s.ptr(), _213517_f.get()._field_Decl.get()._field_Public,_213517_f.get()._field_Decl.get()._field_Token)))) {
			_211b8c393_pushErr(&(*_self_), _213474_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_213517_f.get()._field_Decl.get()._field_Ident)}));
			_211b8c6b2_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_211019b50_StructSubIdentExprModel> _214221_model = jule::new_ptr<_211019b50_StructSubIdentExprModel>(_211019b50_StructSubIdentExprModel{._field_Token=_213474_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_211b8a319_Data>((*(_213441_d))), ._field_ExprKind=_213441_d.get()._field_Kind, ._field_Field=_213517_f, ._field_Owner=_213455_s});;
		_213441_d.get()._field_Model=static_cast<jule::Any>(_214221_model);
		_213441_d.get()._field_Kind=_213517_f.get()._field_Kind;
		_213441_d.get()._field_Lvalue=true;
		if ((_213517_f.get()._field_Decl.get()._field_Mutable && (!(_213441_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_211b0c214_scopeChecker>>()) {
					_case_begin_22464c26e:;
					{
						jule::Ptr<_211b0c214_scopeChecker> _215725_scope = _211b0d5de_getRoot((*_self_)._field_lookup.operator jule::Ptr<_211b0c214_scopeChecker>());;
						_213441_d.get()._field_Mutable=((_215725_scope.get()._field_owner != nullptr) && (_215725_scope.get()._field_owner.get()._field_Owner == _213455_s));
					}
				}
				_match_end_22464c219:;
			};
		};
		return _213441_d;
	};
	;
	jule::Ptr<_211020084_Fn> _216617_m = _210e4797e_FindMethod(_213455_s.ptr(), _213474_si.get()._field_Ident.get()._field_Kind,false);;
	if ((_216617_m == nullptr)) {
		_211b8c393_pushErr(&(*_self_), _213474_si.get()._field_Ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_213455_s.get()._field_Decl.get()._field_Ident),jule::Any(_213474_si.get()._field_Ident.get()._field_Kind)}));
		return nullptr;
	};
	if ((!(_211b2885c_isAccessibleDefine((*_self_)._field_s.ptr(), _216617_m.get()._field_Public,_216617_m.get()._field_Token)))) {
		_211b8c393_pushErr(&(*_self_), _213474_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_216617_m.get()._field_Ident)}));
		_211b8c6b2_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_21101e0d8_IsRef(_216617_m.get()._field_Params[0LL].ptr()) && (!(_213493_ref)))) {
		_211b8c393_pushErr(&(*_self_), _213474_si.get()._field_Ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_211b92299_checkDeprecated(&(*_self_), _216617_m.get()._field_Directives,_213474_si.get()._field_Ident);
	jule::Ptr<_211022c35_FnIns> _218217_ins = _2110216d4_instance(_216617_m);;
	_218217_ins.get()._field_Owner=_213455_s;
	_2244e2587_pushReference(&(*_self_), _218217_ins);
	jule::Ptr<_211b8a319_Data> _218517_model = jule::new_ptr<_211b8a319_Data>((*(_213441_d)));;
	_213441_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_211019b50_StructSubIdentExprModel>(_211019b50_StructSubIdentExprModel{._field_Token=_213474_si.get()._field_Ident, ._field_Expr=_218517_model, ._field_ExprKind=_213441_d.get()._field_Kind, ._field_Method=_218217_ins, ._field_Owner=_213455_s}));
	_213441_d.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_218217_ins, 1)});
	return _213441_d;
}



inline jule::Ptr<_211b8a319_Data> _211ba1e46_evalSliceSubIdent(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data> _219740_d, jule::Ptr<_20e7ddc0b_Token> _219754_ident) {
	{
		auto &_match_expr{ _219754_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_224656289:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Mutable=false, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101a403_CommonSubIdentExprModel>(_21101a403_CommonSubIdentExprModel{._field_ExprKind=_219740_d.get()._field_Kind, ._field_Expr=_219740_d.get()._field_Model, ._field_Token=_219754_ident, ._field_Ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_224656300:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Mutable=false, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101a403_CommonSubIdentExprModel>(_21101a403_CommonSubIdentExprModel{._field_ExprKind=_219740_d.get()._field_Kind, ._field_Expr=_219740_d.get()._field_Model, ._field_Token=_219754_ident, ._field_Ident=jule::Str("cap()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_224656366:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_Params=jule::Slice<jule::Ptr<_211021d66_ParamIns>>::make({jule::new_ptr<_211021d66_ParamIns>(_211021d66_ParamIns{._field_Decl=jule::new_ptr<_21101d747_Param>(_21101d747_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_211021d66_ParamIns>(_211021d66_ParamIns{._field_Decl=jule::new_ptr<_21101d747_Param>(_21101d747_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c4c94d_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_219740_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101a403_CommonSubIdentExprModel>(_21101a403_CommonSubIdentExprModel{._field_ExprKind=_219740_d.get()._field_Kind, ._field_Expr=_219740_d.get()._field_Model, ._field_Token=_219754_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_224656223:;
			{
				_211b8c393_pushErr(&(*_self_), _219754_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_219740_d.get()._field_Kind.ptr())),jule::Any(_219754_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_224655ed1:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba22ed_evalArraySubIdent(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data> _225640_d, jule::Ptr<_20e7ddc0b_Token> _225654_ident) {
	{
		auto &_match_expr{ _225654_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_22465b7cd:;
			{
				jule::Ptr<_210ea46cd_Const> _225921_c = static__21100e5b2_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_211bb927c_Arr(_225640_d.get()._field_Kind.ptr()).get()._field_N)));;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_225921_c), ._field_Constant=_225921_c});
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_22465b844:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_Params=jule::Slice<jule::Ptr<_211021d66_ParamIns>>::make({jule::new_ptr<_211021d66_ParamIns>(_211021d66_ParamIns{._field_Decl=jule::new_ptr<_21101d747_Param>(_21101d747_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_211021d66_ParamIns>(_211021d66_ParamIns{._field_Decl=jule::new_ptr<_21101d747_Param>(_21101d747_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c4c94d_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_225640_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101a403_CommonSubIdentExprModel>(_21101a403_CommonSubIdentExprModel{._field_ExprKind=_225640_d.get()._field_Kind, ._field_Expr=_225640_d.get()._field_Model, ._field_Token=_225654_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_22465b767:;
			{
				_211b8c393_pushErr(&(*_self_), _225654_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_225640_d.get()._field_Kind.ptr())),jule::Any(_225654_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_22465b6ac:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba26a5_evalMapSubIdent(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data> _230038_d, jule::Ptr<_20e7ddc0b_Token> _230052_ident) {
	jule::Ptr<_211bc16c4_Map> _230117_mapKind = _211bb9e92_Map(_230038_d.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ _230052_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_2246619c0:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101a403_CommonSubIdentExprModel>(_21101a403_CommonSubIdentExprModel{._field_ExprKind=_230038_d.get()._field_Kind, ._field_Expr=_230038_d.get()._field_Model, ._field_Token=_230052_ident, ._field_Ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_224661a36:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c4c94d_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_230038_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101a403_CommonSubIdentExprModel>(_21101a403_CommonSubIdentExprModel{._field_ExprKind=_230038_d.get()._field_Kind, ._field_Expr=_230038_d.get()._field_Model, ._field_Token=_230052_ident, ._field_Ident=jule::Str("clear", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_224661a9c:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_Result=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_211bc011d_Slc>(_211bc011d_Slc{._field_Elem=_230117_mapKind.get()._field_Key}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c4c94d_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_230038_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101a403_CommonSubIdentExprModel>(_21101a403_CommonSubIdentExprModel{._field_ExprKind=_230038_d.get()._field_Kind, ._field_Expr=_230038_d.get()._field_Model, ._field_Token=_230052_ident, ._field_Ident=jule::Str("keys", 4)})), });
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_22466265d:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_Result=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_211bc011d_Slc>(_211bc011d_Slc{._field_Elem=_230117_mapKind.get()._field_Val}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c4c94d_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_230038_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101a403_CommonSubIdentExprModel>(_21101a403_CommonSubIdentExprModel{._field_ExprKind=_230038_d.get()._field_Kind, ._field_Expr=_230038_d.get()._field_Model, ._field_Token=_230052_ident, ._field_Ident=jule::Str("values", 6)})), });
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_2246626c4:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_Params=jule::Slice<jule::Ptr<_211021d66_ParamIns>>::make({jule::new_ptr<_211021d66_ParamIns>(_211021d66_ParamIns{._field_Decl=jule::new_ptr<_21101d747_Param>(_21101d747_Param{._field_Ident=jule::Str("key", 3)}), ._field_Kind=_230117_mapKind.get()._field_Key})}), ._field_Result=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c43290_builtinCallerCommon), }), 1)}), ._field_Mutable=_230038_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101a403_CommonSubIdentExprModel>(_21101a403_CommonSubIdentExprModel{._field_ExprKind=_230038_d.get()._field_Kind, ._field_Expr=_230038_d.get()._field_Model, ._field_Token=_230052_ident, ._field_Ident=jule::Str("has", 3)})), });
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_22466273a:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_Params=jule::Slice<jule::Ptr<_211021d66_ParamIns>>::make({jule::new_ptr<_211021d66_ParamIns>(_211021d66_ParamIns{._field_Decl=jule::new_ptr<_21101d747_Param>(_21101d747_Param{._field_Ident=jule::Str("key", 3)}), ._field_Kind=_230117_mapKind.get()._field_Key})}), ._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c4c94d_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_230038_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101a403_CommonSubIdentExprModel>(_21101a403_CommonSubIdentExprModel{._field_ExprKind=_230038_d.get()._field_Kind, ._field_Expr=_230038_d.get()._field_Model, ._field_Token=_230052_ident, ._field_Ident=jule::Str("del", 3)})), });
			}
		}
		else {
			_case_begin_2246618d2:;
			{
				_211b8c393_pushErr(&(*_self_), _230052_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_211bc1a37_Str(_230117_mapKind.ptr())),jule::Any(_230052_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_224661849:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba2a5c_evalStrSubIdent(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data> _242238_d, jule::Ptr<_20e7ddc0b_Token> _242252_ident) {
	jule::Ptr<_211bb6455_TypeKind> _242317_strKind = jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("str", 3)), 6)});;
	{
		auto &_match_expr{ _242252_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_22466b3c0:;
			{
				jule::Ptr<_211b8a319_Data> _242621_sd = jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)}), });;
				if (_211b8abcc_IsConst(_242238_d.ptr())) {
					_242621_sd.get()._field_Constant=static__21100e5b2_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_211010dee_ReadStr(_242238_d.get()._field_Constant.ptr()).len())));
					_242621_sd.get()._field_Model=static_cast<jule::Any>(_242621_sd.get()._field_Constant);
				} else {
					_242621_sd.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101a403_CommonSubIdentExprModel>(_21101a403_CommonSubIdentExprModel{._field_ExprKind=_242238_d.get()._field_Kind, ._field_Expr=_242238_d.get()._field_Model, ._field_Token=_242252_ident, ._field_Ident=jule::Str("len()", 5)}));
				};
				return _242621_sd;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_22466b436:;
			{
				jule::Ptr<_211b8a319_Data> _244221_sd = jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)}), });;
				if (_211b8abcc_IsConst(_242238_d.ptr())) {
					_244221_sd.get()._field_Constant=static__21100e5b2_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_211010dee_ReadStr(_242238_d.get()._field_Constant.ptr()).cap())));
					_244221_sd.get()._field_Model=static_cast<jule::Any>(_244221_sd.get()._field_Constant);
				} else {
					_244221_sd.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101a403_CommonSubIdentExprModel>(_21101a403_CommonSubIdentExprModel{._field_ExprKind=_242238_d.get()._field_Kind, ._field_Expr=_242238_d.get()._field_Model, ._field_Token=_242252_ident, ._field_Ident=jule::Str("cap()", 5)}));
				};
				return _244221_sd;
			}
		}
		else {
			_case_begin_22466b359:;
			{
				_211b8c393_pushErr(&(*_self_), _242252_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_242317_strKind.ptr())),jule::Any(_242252_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_22466b2c1:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba2d6a_evalIntTypeStatic(_211b8bd87_Eval* _self_, jule::Ptr<_20e7ddc0b_Token> _246336_ident) {
	;
	{
		auto &_match_expr{ _246336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2246727a0:;
			{
				jule::Ptr<_210ea46cd_Const> _246821_c = static__21100e5b2_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2114ba83c_Max(jule::Str("int", 3)))));;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_246821_c), ._field_Constant=_246821_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_224672816:;
			{
				jule::Ptr<_210ea46cd_Const> _247521_c = static__21100e5b2_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2114b2a10_Min(jule::Str("int", 3)))));;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_247521_c), ._field_Constant=_247521_c});
			}
		}
		else {
			_case_begin_224672739:;
			{
				_211b8c393_pushErr(&(*_self_), _246336_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_246336_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_2246726d4:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba3178_evalUintTypeStatic(_211b8bd87_Eval* _self_, jule::Ptr<_20e7ddc0b_Token> _248737_ident) {
	;
	{
		auto &_match_expr{ _248737_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_224676166:;
			{
				jule::Ptr<_210ea46cd_Const> _249221_c = static__21100e6e4_NewU64(static_cast<jule::U64>(static_cast<jule::U64>(_2114ba83c_Max(jule::Str("uint", 4)))));;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=static_cast<jule::Any>(_249221_c), ._field_Constant=_249221_c});
			}
		}
		else {
			_case_begin_2246760cd:;
			{
				_211b8c393_pushErr(&(*_self_), _248737_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_248737_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_224676078:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba3486_evalI8TypeStatic(_211b8bd87_Eval* _self_, jule::Ptr<_20e7ddc0b_Token> _250435_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _250435_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_22467919c:;
			{
				jule::Ptr<_210ea46cd_Const> _251121_c = static__21100e5b2_NewI64(127LL);;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_251121_c), ._field_Constant=_251121_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_224679213:;
			{
				jule::Ptr<_210ea46cd_Const> _251821_c = static__21100e5b2_NewI64(-128LL);;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_251821_c), ._field_Constant=_251821_c});
			}
		}
		else {
			_case_begin_224679103:;
			{
				_211b8c393_pushErr(&(*_self_), _250435_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_250435_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_22467909d:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba3794_evalI16TypeStatic(_211b8bd87_Eval* _self_, jule::Ptr<_20e7ddc0b_Token> _253036_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _253036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_22467cdb5:;
			{
				jule::Ptr<_210ea46cd_Const> _253721_c = static__21100e5b2_NewI64(32767LL);;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_253721_c), ._field_Constant=_253721_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_22467ce2b:;
			{
				jule::Ptr<_210ea46cd_Const> _254421_c = static__21100e5b2_NewI64(-32768LL);;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_254421_c), ._field_Constant=_254421_c});
			}
		}
		else {
			_case_begin_22467cd1b:;
			{
				_211b8c393_pushErr(&(*_self_), _253036_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_253036_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_22467ccb6:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba3aa2_evalI32TypeStatic(_211b8bd87_Eval* _self_, jule::Ptr<_20e7ddc0b_Token> _255636_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _255636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_224681acd:;
			{
				jule::Ptr<_210ea46cd_Const> _256321_c = static__21100e5b2_NewI64(2147483647LL);;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_256321_c), ._field_Constant=_256321_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_224681b44:;
			{
				jule::Ptr<_210ea46cd_Const> _257021_c = static__21100e5b2_NewI64(-2147483648LL);;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_257021_c), ._field_Constant=_257021_c});
			}
		}
		else {
			_case_begin_224681a34:;
			{
				_211b8c393_pushErr(&(*_self_), _255636_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_255636_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_2246819ce:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba3db0_evalI64TypeStatic(_211b8bd87_Eval* _self_, jule::Ptr<_20e7ddc0b_Token> _258236_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _258236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2246857e6:;
			{
				jule::Ptr<_210ea46cd_Const> _258921_c = static__21100e5b2_NewI64(jule::MAX_I64);;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_258921_c), ._field_Constant=_258921_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_22468585c:;
			{
				jule::Ptr<_210ea46cd_Const> _259621_c = static__21100e5b2_NewI64(jule::MIN_I64);;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_259621_c), ._field_Constant=_259621_c});
			}
		}
		else {
			_case_begin_22468574c:;
			{
				_211b8c393_pushErr(&(*_self_), _258236_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_258236_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_2246856e7:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba41bd_evalU8TypeStatic(_211b8bd87_Eval* _self_, jule::Ptr<_20e7ddc0b_Token> _260835_ident) {
	;
	;
	{
		auto &_match_expr{ _260835_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_22468909c:;
			{
				jule::Ptr<_210ea46cd_Const> _261421_c = static__21100e6e4_NewU64(255LLU);;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_261421_c), ._field_Constant=_261421_c});
			}
		}
		else {
			_case_begin_224688585:;
			{
				_211b8c393_pushErr(&(*_self_), _260835_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_260835_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_224688e48:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba44cb_evalU16TypeStatic(_211b8bd87_Eval* _self_, jule::Ptr<_20e7ddc0b_Token> _262636_ident) {
	;
	;
	{
		auto &_match_expr{ _262636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_22468ba50:;
			{
				jule::Ptr<_210ea46cd_Const> _263221_c = static__21100e6e4_NewU64(65535LLU);;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_263221_c), ._field_Constant=_263221_c});
			}
		}
		else {
			_case_begin_22468b18c:;
			{
				_211b8c393_pushErr(&(*_self_), _262636_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_262636_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_22468b830:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba47d9_evalU32TypeStatic(_211b8bd87_Eval* _self_, jule::Ptr<_20e7ddc0b_Token> _264436_ident) {
	;
	;
	{
		auto &_match_expr{ _264436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_22468e437:;
			{
				jule::Ptr<_210ea46cd_Const> _265021_c = static__21100e6e4_NewU64(4294967295LLU);;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_265021_c), ._field_Constant=_265021_c});
			}
		}
		else {
			_case_begin_22468da74:;
			{
				_211b8c393_pushErr(&(*_self_), _264436_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_264436_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_22468e217:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba4ae7_evalU64TypeStatic(_211b8bd87_Eval* _self_, jule::Ptr<_20e7ddc0b_Token> _266236_ident) {
	;
	;
	{
		auto &_match_expr{ _266236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_224691d1e:;
			{
				jule::Ptr<_210ea46cd_Const> _266821_c = static__21100e6e4_NewU64(jule::MAX_U64);;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_266821_c), ._field_Constant=_266821_c});
			}
		}
		else {
			_case_begin_22469145b:;
			{
				_211b8c393_pushErr(&(*_self_), _266236_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_266236_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_224691aee:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba4e05_evalF32TypeStatic(_211b8bd87_Eval* _self_, jule::Ptr<_20e7ddc0b_Token> _268036_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _268036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_224694e43:;
			{
				jule::Ptr<_210ea46cd_Const> _268821_c = static__21100edba_NewF64(340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_268821_c), ._field_Constant=_268821_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_224694ea9:;
			{
				jule::Ptr<_210ea46cd_Const> _269521_c = static__21100edba_NewF64(-340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_269521_c), ._field_Constant=_269521_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_224695020:;
			{
				jule::Ptr<_210ea46cd_Const> _270221_c = static__21100edba_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_270221_c), ._field_Constant=_270221_c});
			}
		}
		else {
			_case_begin_224694d11:;
			{
				_211b8c393_pushErr(&(*_self_), _268036_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_268036_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_224694c9a:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba5213_evalF64TypeStatic(_211b8bd87_Eval* _self_, jule::Ptr<_20e7ddc0b_Token> _271436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _271436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_224699de3:;
			{
				jule::Ptr<_210ea46cd_Const> _272221_c = static__21100edba_NewF64(jule::MAX_F64);;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_272221_c), ._field_Constant=_272221_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_224699e59:;
			{
				jule::Ptr<_210ea46cd_Const> _272921_c = static__21100edba_NewF64(jule::MIN_F64);;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_272921_c), ._field_Constant=_272921_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_224699ec0:;
			{
				jule::Ptr<_210ea46cd_Const> _273621_c = static__21100edba_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_273621_c), ._field_Constant=_273621_c});
			}
		}
		else {
			_case_begin_224699cb1:;
			{
				_211b8c393_pushErr(&(*_self_), _271436_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_271436_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_224699c4a:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba55ba_evalPrimStatic(_211b8bd87_Eval* _self_, jule::Str _274833_kind, jule::Ptr<_20e7ddc0b_Token> _274844_ident) {
	{
		auto &_match_expr{ _274833_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_22469da73:;
			{
				return _211ba2d6a_evalIntTypeStatic(&(*_self_), _274844_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_22469e9a8:;
			{
				return _211ba3178_evalUintTypeStatic(&(*_self_), _274844_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_22469ea1e:;
			{
				return _211ba3486_evalI8TypeStatic(&(*_self_), _274844_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_22469dd1a:;
			{
				return _211ba3794_evalI16TypeStatic(&(*_self_), _274844_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_22469dd81:;
			{
				return _211ba3aa2_evalI32TypeStatic(&(*_self_), _274844_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_22469dde7:;
			{
				return _211ba3db0_evalI64TypeStatic(&(*_self_), _274844_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_22469de5d:;
			{
				return _211ba41bd_evalU8TypeStatic(&(*_self_), _274844_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_22469ea85:;
			{
				return _211ba44cb_evalU16TypeStatic(&(*_self_), _274844_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_22469eaeb:;
			{
				return _211ba47d9_evalU32TypeStatic(&(*_self_), _274844_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_22469eb62:;
			{
				return _211ba4ae7_evalU64TypeStatic(&(*_self_), _274844_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_22469ebc8:;
			{
				return _211ba4e05_evalF32TypeStatic(&(*_self_), _274844_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_22469ec3e:;
			{
				return _211ba5213_evalF64TypeStatic(&(*_self_), _274844_ident);
			}
		}
		else {
			_case_begin_22469d435:;
			{
				_211b8c393_pushErr(&(*_self_), _274844_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_274833_kind),jule::Any(_274844_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_22469dc93:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba5972_evalTypeStatic(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data> _278037_d, jule::Ptr<_210e59dd1_SubIdentExpr> _278051_si) {
	{
		
		if ((_211bb8567_Prim(_278037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2246a442a:;
			{
				return _211ba55ba_evalPrimStatic(&(*_self_), _211bbb290_Str(_211bb8567_Prim(_278037_d.get()._field_Kind.ptr()).ptr()),_278051_si.get()._field_Ident);
			}
		}
		else if ((_211bb8ca4_Enum(_278037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2246a4491:;
			{
				return _211ba08d4_evalEnumStatic(&(*_self_), _211bb8ca4_Enum(_278037_d.get()._field_Kind.ptr()),_278051_si.get()._field_Ident);
			}
		}
		else if ((_211bb9018_TypeEnum(_278037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2246a4507:;
			{
				return _211ba0c8b_evalTypeEnumStatic(&(*_self_), _211bb9018_TypeEnum(_278037_d.get()._field_Kind.ptr()),_278051_si.get()._field_Ident);
			}
		}
		else if ((_211bb99b9_Struct(_278037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2246a456d:;
			{
				return _211ba1143_evalStructStatic(&(*_self_), _211bb99b9_Struct(_278037_d.get()._field_Kind.ptr()),_278051_si.get()._field_Ident);
			}
		}
		else {
			_case_begin_2246a43b4:;
			{
				_211b8c393_pushErr(&(*_self_), _278051_si.get()._field_Ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_278037_d.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_2246a0190:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba5d29_evalObjSubIdent(_211b8bd87_Eval* _self_, jule::Ptr<_211b8a319_Data> _279638_d, jule::Ptr<_210e59dd1_SubIdentExpr> _279652_si) {
	if (_20e7e14a0_IsIgnoreIdent(_279652_si.get()._field_Ident.get()._field_Kind)) {
		_211b8c393_pushErr(&(*_self_), _279652_si.get()._field_Ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_211bb6455_TypeKind> _280217_kind = _279638_d.get()._field_Kind;;
	{
		
		if ((_211bb8a40_Ptr(_279638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2246aa4ec:;
			{
				jule::Ptr<_211bc2c25_Ptr> _280517_ptr = _211bb8a40_Ptr(_279638_d.get()._field_Kind.ptr());;
				if (_211bc36e8_IsUnsafe(_280517_ptr.ptr())) {
					goto _match_end_2246aa398;
				};
				if (((!(_279652_si.get()._field_IsSelf)) && (!(_211b8cccd_isUnsafe(&(*_self_)))))) {
					_211b8c393_pushErr(&(*_self_), _279652_si.get()._field_Ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_280217_kind=_211bb8a40_Ptr(_279638_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_211bb87cb_Sptr(_279638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2246aa563:;
			{
				_280217_kind=_211bb87cb_Sptr(_279638_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_2246aa398:;
	};
	{
		
		if ((_211bb9c2d_Trait(_279638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2246ad0d2:;
			{
				return _211ba1594_evalTraitSubIdent(&(*_self_), _279638_d,_211bb9c2d_Trait(_279638_d.get()._field_Kind.ptr()),_279652_si.get()._field_Ident);
			}
		}
		else if ((_211bb99b9_Struct(_280217_kind.ptr()) != nullptr)) {
			_case_begin_2246ad159:;
			{
				jule::Ptr<_210e6db2b_StructIns> _282117_s = _211bb99b9_Struct(_280217_kind.ptr());;
				if (_211bb2275_isInstancedStruct(_282117_s)) {
					jule::Bool _282325_usedReferenceElem = (_211bb87cb_Sptr(_279638_d.get()._field_Kind.ptr()) != nullptr);;
					return _211ba1a8e_evalStructSubIdent(&(*_self_), _279638_d,_211bb99b9_Struct(_280217_kind.ptr()),_279652_si,_282325_usedReferenceElem);
				};
			}
		}
		else if ((_211bb94e1_Slc(_280217_kind.ptr()) != nullptr)) {
			_case_begin_2246ad1d1:;
			{
				return _211ba1e46_evalSliceSubIdent(&(*_self_), _279638_d,_279652_si.get()._field_Ident);
			}
		}
		else if ((_211bb927c_Arr(_280217_kind.ptr()) != nullptr)) {
			_case_begin_2246ad258:;
			{
				return _211ba22ed_evalArraySubIdent(&(*_self_), _279638_d,_279652_si.get()._field_Ident);
			}
		}
		else if ((_211bb9e92_Map(_280217_kind.ptr()) != nullptr)) {
			_case_begin_2246ad7ec:;
			{
				return _211ba26a5_evalMapSubIdent(&(*_self_), _279638_d,_279652_si.get()._field_Ident);
			}
		}
		else if ((_211bb8567_Prim(_280217_kind.ptr()) != nullptr)) {
			_case_begin_2246ad874:;
			{
				jule::Ptr<_211bbae2c_Prim> _283317_p = _211bb8567_Prim(_280217_kind.ptr());;
				{
					auto &_match_expr{ _283317_p.get()._field_Kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_2246b43b3:;
						{
							return _211ba2a5c_evalStrSubIdent(&(*_self_), _279638_d,_279652_si.get()._field_Ident);
						}
					}
					_match_end_2246b41e8:;
				};
			}
		}
		_match_end_2246aced3:;
	};
	_211b8c393_pushErr(&(*_self_), _279652_si.get()._field_Ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_279638_d.get()._field_Kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_211b8a319_Data> _211ba6137_evalSubIdent(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e59dd1_SubIdentExpr> _284336_si) {
	jule::Ptr<_211bb6455_TypeKind> _284417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_284417_prefix;
	});;
	jule::Ptr<_211b8a319_Data> _284817_d = _211ba7534_evalExprKind(_self_, _284336_si.get()._field_Expr.get()._field_Kind);;
	if ((_284817_d == nullptr)) {
		return nullptr;
	};
	if (_284817_d.get()._field_Decl) {
		return _211ba5972_evalTypeStatic(_self_.ptr(), _284817_d,_284336_si);
	};
	return _211ba5d29_evalObjSubIdent(_self_.ptr(), _284817_d,_284336_si);
}



inline jule::Ptr<_211b8a319_Data> _211ba6445_evalTuple(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e57252_TupleExpr> _286033_tup) {
	jule::Ptr<_211bc0b9b_Tuple> _286117_tupT = jule::new_ptr<_211bc0b9b_Tuple>();;
	_286117_tupT.get()._field_Types=jule::Slice<jule::Ptr<_211bb6455_TypeKind>>::alloc(0LL,_286033_tup.get()._field_Expr.len());
	jule::Ptr<_21101a5e0_TupleExprModel> _286417_model = jule::new_ptr<_21101a5e0_TupleExprModel>(_21101a5e0_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_211b8a319_Data>>::alloc(0LL,_286033_tup.get()._field_Expr.len())});;
	jule::Bool _286817_ok = true;;
	{
		auto &expr = _286033_tup.get()._field_Expr;
		auto it = expr.begin();
		_iter_begin_2246b96a4:;
		if (it != expr.end()) {
			jule::Ptr<_210e565c5_Expr> _286921_expr = *it;
			{
				jule::Ptr<_211b8a319_Data> _287021_d = _211ba7534_evalExprKind(_self_, _286921_expr.get()._field_Kind);;
				if ((_287021_d == nullptr)) {
					_286817_ok=false;
					goto _iter_next_2246b96a4;
				};
				_286117_tupT.get()._field_Types = jule::alloc_for_append(_286117_tupT.get()._field_Types,1);_286117_tupT.get()._field_Types.__push(_287021_d.get()._field_Kind);;
				_286417_model.get()._field_Datas = jule::alloc_for_append(_286417_model.get()._field_Datas,1);_286417_model.get()._field_Datas.__push(_287021_d);;
			}
			_iter_next_2246b96a4:;
			++it;
			goto _iter_begin_2246b96a4;
		}
		_iter_end_2246b96a4:;
	};
	if ((!(_286817_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_286117_tupT, 9)}), ._field_Model=static_cast<jule::Any>(_286417_model), });
}



inline jule::Ptr<_211b8a319_Data> _211ba67ec_evalMap(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_211bc16c4_Map> _288931_m, jule::Ptr<_210e5bee3_BraceLit> _288944_lit) {
	jule::Ptr<_211019358_MapExprModel> _289017_model = jule::new_ptr<_211019358_MapExprModel>(_211019358_MapExprModel{._field_KeyKind=_288931_m.get()._field_Key, ._field_ValKind=_288931_m.get()._field_Val, });;
	{
		auto &expr = _288944_lit.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_2246bcb08:;
		if (it != expr.end()) {
			jule::Ptr<_210e565c5_Expr> _289521_expr = *it;
			{
				{
					auto &_match_expr{ _289521_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_210e5ca0a_KeyValPair>>()) {
						_case_begin_2246bd631:;
						{
							goto _match_end_2246bd433;
						}
					}
					else {
						_case_begin_2246bd5ba:;
						{
							_211b8c393_pushErr(_self_.ptr(), _288944_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_2246bd433:;
				};
				jule::Ptr<_210e5ca0a_KeyValPair> _290521_pair = _289521_expr.get()._field_Kind.operator jule::Ptr<_210e5ca0a_KeyValPair>();;
				jule::Ptr<_211b8a319_Data> _290721_key = _211ba7534_evalExprKind(_self_, _290521_pair.get()._field_Key.get()._field_Kind);;
				if ((_290721_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_211b8a319_Data> _291221_val = _211ba7534_evalExprKind(_self_, _290521_pair.get()._field_Val.get()._field_Kind);;
				if ((_291221_val == nullptr)) {
					return nullptr;
				};
				_211b3006c_checkAssignType(_self_.get()._field_s, false,_288931_m.get()._field_Key,_290721_key,_290521_pair.get()._field_Colon);
				_211b3006c_checkAssignType(_self_.get()._field_s, false,_288931_m.get()._field_Val,_291221_val,_290521_pair.get()._field_Colon);
				_289017_model.get()._field_Entries = jule::alloc_for_append(_289017_model.get()._field_Entries,1);_289017_model.get()._field_Entries.__push(jule::new_ptr<_21101916b_KeyValPairExprModel>(_21101916b_KeyValPairExprModel{._field_Key=_290721_key.get()._field_Model, ._field_Val=_291221_val.get()._field_Model}));;
			}
			_iter_next_2246bcb08:;
			++it;
			goto _iter_begin_2246bcb08;
		}
		_iter_end_2246bcb08:;
	};
	return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_288931_m, 10)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_289017_model), });
}



inline jule::Ptr<_211b8a319_Data> _211ba6b0a_evalBraceLit(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e5bee3_BraceLit> _293336_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_2246c30c5:;
			{
				_211b8c393_pushErr(_self_.ptr(), _293336_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_211bb9e92_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_2246c313b:;
			{
				return _211ba67ec_evalMap(_self_, _211bb9e92_Map(_self_.get()._field_prefix.ptr()),_293336_lit);
			}
		}
		else if ((_211bb99b9_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_2246c31a2:;
			{
				return _211b9d6d4_evalStructLitExplicit(_self_, _211bb99b9_Struct(_self_.get()._field_prefix.ptr()),_293336_lit.get()._field_Exprs,_293336_lit.get()._field_Token);
			}
		}
		else {
			_case_begin_2246c301a:;
			{
				_211b8c393_pushErr(_self_.ptr(), _293336_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_2246c2e3d:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba6e18_evalAnonFn(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e63db8_FnDecl> _294834_decl) {
	_211bc4980_typeChecker _294917_tc = _211bc4980_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_211022c35_FnIns> _295417_ins = _211bcb2c2_buildFn(&_294917_tc, _294834_decl);;
	if ((_295417_ins == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_211b0c214_scopeChecker>>()) {
			_case_begin_2246c7c23:;
			{
				jule::Ptr<_211b0c214_scopeChecker> _296021_sc = _self_.get()._field_lookup.operator jule::Ptr<_211b0c214_scopeChecker>();;
				jule::Ptr<_211b0c214_scopeChecker> _296121_scc = _211b1574a_newChildChecker(_296021_sc);;
				_296121_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_211b0bd3a_scopeLabel>>>(nullptr);
				_296121_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_211b0c027_scopeGoto>>>(nullptr);
				_296121_scc.get()._field_owner=nullptr;
				_296121_scc.get()._field_childIndex=0LL;
				_296121_scc.get()._field_it=0LLU;
				_296121_scc.get()._field_cse=0LLU;
				_296121_scc.get()._field_owner=_295417_ins;
				_211b3d773_checkFnInsSc(_self_.get()._field_s.ptr(), _295417_ins,_296121_scc);
			}
		}
		else {
			_case_begin_2246c7a9c:;
			{
				_211b3dd17_checkFnIns(_self_.get()._field_s, _295417_ins);
			}
		}
		_match_end_2246c7827:;
	};
	return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_295417_ins, 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_211018e7e_AnonFnExprModel>(_211018e7e_AnonFnExprModel{._field_Func=_295417_ins, ._field_Global=_211b8d042_isGlobal(_self_.ptr())})), });
}



inline jule::Ptr<_211b8a319_Data> _211ba7226_evalBinop(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e5a354_BinopExpr> _298333_op) {
	_211ba9d61_binaryEval _298417_bs = static__211baa427_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_211bbae2c_Prim> _298717_prim = _211bb8567_Prim(_self_.get()._field_prefix.ptr());;
		if (((_298717_prim == nullptr) || (!(_211b08ebe_IsNum(_211bbb290_Str(_298717_prim.ptr())))))) {
			jule::Ptr<_211bb6455_TypeKind> _298925_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_298925_prefix;
			});;
			return _211bb0707_eval(&_298417_bs, _298333_op);
		};
	};
	return _211bb0707_eval(&_298417_bs, _298333_op);
}



inline jule::Ptr<_211b8a319_Data> _211ba7534_evalExprKind(jule::Ptr<_211b8bd87_Eval> _self_, jule::Any _299836_kind) {
	{
		auto &_match_expr{ _299836_kind };
		
		if (_match_expr.type_is<jule::Ptr<_210e568b1_RangeExpr>>()) {
			_case_begin_2246d019d:;
			{
				jule::Ptr<_210e568b1_RangeExpr> _300121_e = _299836_kind.operator jule::Ptr<_210e568b1_RangeExpr>();;
				return _211ba7534_evalExprKind(_self_, _300121_e.get()._field_Expr.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e57609_LitExpr>>()) {
			_case_begin_2246d0335:;
			{
				return _211b8ebe2_evalLit(_self_.ptr(), _299836_kind.operator jule::Ptr<_210e57609_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e5863d_IdentExpr>>()) {
			_case_begin_2246d039b:;
			{
				return _211b9419c_evalIdent(_self_.ptr(), _299836_kind.operator jule::Ptr<_210e5863d_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e58d47_UnaryExpr>>()) {
			_case_begin_2246d0412:;
			{
				return _211b944aa_evalUnary(_self_, _299836_kind.operator jule::Ptr<_210e58d47_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e591ee_VariadicExpr>>()) {
			_case_begin_2246d0478:;
			{
				return _211b947b8_evalVariadic(_self_, _299836_kind.operator jule::Ptr<_210e591ee_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e57d13_UnsafeExpr>>()) {
			_case_begin_2246d04de:;
			{
				return _211b94ac6_evalUnsafe(_self_, _299836_kind.operator jule::Ptr<_210e57d13_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e5ce7d_SliceExpr>>()) {
			_case_begin_2246d0566:;
			{
				return _211b95643_evalSliceExpr(_self_, _299836_kind.operator jule::Ptr<_210e5ce7d_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e5d81e_IndexingExpr>>()) {
			_case_begin_2246d0621:;
			{
				return _211b98987_evalIndexing(_self_, _299836_kind.operator jule::Ptr<_210e5d81e_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e5de29_SlicingExpr>>()) {
			_case_begin_2246d0687:;
			{
				return _211b99b53_evalSlicing(_self_, _299836_kind.operator jule::Ptr<_210e5de29_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e595a6_CastExpr>>()) {
			_case_begin_2246d06ed:;
			{
				return _211b9ce75_evalCast(_self_, _299836_kind.operator jule::Ptr<_210e595a6_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e5995d_NsSelectionExpr>>()) {
			_case_begin_2246d0764:;
			{
				return _211b9d283_evalNsSelection(_self_.ptr(), _299836_kind.operator jule::Ptr<_210e5995d_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e5ba70_StructLit>>()) {
			_case_begin_2246d07db:;
			{
				return _211b9d9e2_evalStructLit(_self_, _299836_kind.operator jule::Ptr<_210e5ba70_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e520a4_TypeDecl>>()) {
			_case_begin_2246d0863:;
			{
				return _211b9e064_evalType(_self_.ptr(), _299836_kind.operator jule::Ptr<_210e520a4_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e5a893_FnCallExpr>>()) {
			_case_begin_2246d08da:;
			{
				return _211ba052c_evalFnCall(_self_, _299836_kind.operator jule::Ptr<_210e5a893_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e59dd1_SubIdentExpr>>()) {
			_case_begin_2246d0962:;
			{
				return _211ba6137_evalSubIdent(_self_, _299836_kind.operator jule::Ptr<_210e59dd1_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e57252_TupleExpr>>()) {
			_case_begin_2246d09d9:;
			{
				return _211ba6445_evalTuple(_self_, _299836_kind.operator jule::Ptr<_210e57252_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e5bee3_BraceLit>>()) {
			_case_begin_2246d0a61:;
			{
				return _211ba6b0a_evalBraceLit(_self_, _299836_kind.operator jule::Ptr<_210e5bee3_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e63db8_FnDecl>>()) {
			_case_begin_2246d0ad8:;
			{
				return _211ba6e18_evalAnonFn(_self_, _299836_kind.operator jule::Ptr<_210e63db8_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e5a354_BinopExpr>>()) {
			_case_begin_2246d0b60:;
			{
				return _211ba7226_evalBinop(_self_, _299836_kind.operator jule::Ptr<_210e5a354_BinopExpr>());
			}
		}
		else {
			_case_begin_2246cedd4:;
			{
				return nullptr;
			}
		}
		_match_end_2246cece6:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba7842_eval(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e565c5_Expr> _304628_expr) {
	jule::Ptr<_211b8a319_Data> _304717_d = _211ba7534_evalExprKind(_self_, _304628_expr.get()._field_Kind);;
	if (((_304717_d == nullptr) || (_304717_d.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_211bb9755_Fn(_304717_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2246dad8a:;
			{
				jule::Ptr<_211022c35_FnIns> _305421_f = _211bb9755_Fn(_304717_d.get()._field_Kind.ptr());;
				if (_2110240bb_IsBuiltin(_305421_f.ptr())) {
					goto _match_end_2246dac36;
				};
				if ((_305421_f.get()._field_Generics.len() != _305421_f.get()._field_Decl.get()._field_Generics.len())) {
					_211b28186_pushErr(_self_.get()._field_s.ptr(), _304628_expr.get()._field_Token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (((!(_305421_f.get()._field_Decl.get()._field_Statically)) && _21102075a_IsMethod(_305421_f.get()._field_Decl.ptr()))) {
					_211b28186_pushErr(_self_.get()._field_s.ptr(), _304628_expr.get()._field_Token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_2246dac36:;
	};
	return _304717_d;
}



inline jule::Ptr<_211b8a319_Data> _211ba7b50_evalExpr(jule::Ptr<_211b8bd87_Eval> _self_, jule::Ptr<_210e565c5_Expr> _307232_expr) {
	jule::Ptr<_211b8a319_Data> _307317_d = _211ba7842_eval(_self_, _307232_expr);;
	{
		
		if ((_307317_d == nullptr)) {
			_case_begin_2246deb5d:;
			{
				return nullptr;
			}
		}
		else if (_307317_d.get()._field_Decl) {
			_case_begin_2246debd5:;
			{
				_211b8c393_pushErr(_self_.ptr(), _307232_expr.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_2246dead6:;
			{
				return _307317_d;
			}
		}
		_match_end_2246dea81:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _211b8bd87_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _211ba80c3_unaryEval static__211ba8579_new(jule::Ptr<_211b8bd87_Eval> _309323_e) {
	return _211ba80c3_unaryEval{._field_e=_309323_e, };
}



inline void _211ba8755_minus(_211ba80c3_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_2246e1c3c:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_211bb8567_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2246e1ca3:;
			{
				if ((!(_211b08ebe_IsNum(_211bb6851_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_211bb99b9_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2246e14ab:;
			{
				if ((_211bb99b9_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_2246e1445:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_2246e1203:;
	};
	if (_211b8abcc_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_21101350b_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_2246e50d6:;
				{
					_21101261a_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_211011163_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_211012a5a_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_2246e515d:;
				{
					_211011b25_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_2110106b2_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_211012cbe_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_2246e51d5:;
				{
					_211011b25_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_2110113c7_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_2246e4ea4:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_211017e28_UnaryExprModel>(_211017e28_UnaryExprModel{._field_Expr=jule::new_ptr<_211b8a319_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _211ba8931_plus(_211ba80c3_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_2246e9edc:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_211bb8567_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2246ea053:;
			{
				if ((!(_211b08ebe_IsNum(_211bb6851_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_211bb99b9_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2246e975b:;
			{
				if ((_211bb99b9_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_2246e96e5:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_2246e9618:;
	};
	if (_211b8abcc_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_21101350b_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_2246ed386:;
				{
					_21101261a_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_211011163_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_211012a5a_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_2246ed40d:;
				{
					_211011b25_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_2110106b2_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_211012cbe_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_2246ed485:;
				{
					_211011b25_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_2110113c7_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_2246ed254:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_211017e28_UnaryExprModel>(_211017e28_UnaryExprModel{._field_Expr=jule::new_ptr<_211b8a319_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _211ba8b0c_caret(_211ba80c3_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_22470326a:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_211bb8567_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2247032d1:;
			{
				if ((!(_211b08c5a_IsInt(_211bb6851_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_211bb99b9_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2247029d9:;
			{
				if ((_211bb99b9_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_224702973:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_224702896:;
	};
	if (_211b8abcc_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_211012a5a_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_224706603:;
				{
					_211011b25_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_2110106b2_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_211012cbe_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_22470667a:;
				{
					_211011d9a_SetU64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_211010926_ReadU64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_2247064d2:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_211017e28_UnaryExprModel>(_211017e28_UnaryExprModel{._field_Expr=jule::new_ptr<_211b8a319_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _211ba8cd8_excl(_211ba80c3_unaryEval* _self_) {
	jule::Ptr<_211bbae2c_Prim> _321213_t = _211bb8567_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
	if (((_321213_t == nullptr) || (!(_211bbddec_IsBool(_321213_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_211b8abcc_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_211013033_IsBool((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_22470b3e9:;
				{
					_211012120_SetBool((*_self_)._field_d.get()._field_Constant.ptr(), (!(_211010b8a_ReadBool((*_self_)._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_22470b2d9:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_211017e28_UnaryExprModel>(_211017e28_UnaryExprModel{._field_Expr=jule::new_ptr<_211b8a319_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _211ba8eb4_star(_211ba80c3_unaryEval* _self_) {
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_211017e28_UnaryExprModel>(_211017e28_UnaryExprModel{._field_Expr=jule::new_ptr<_211b8a319_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
	{
		
		if ((_211bb8a40_Ptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_22470e8d6:;
			{
				if ((!(_211b8cccd_isUnsafe((*_self_)._field_e.ptr())))) {
					_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_211bc2c25_Ptr> _324421_t = _211bb8a40_Ptr((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_211bc36e8_IsUnsafe(_324421_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_Kind=_324421_t.get()._field_Elem;
			}
		}
		else if ((_211bb87cb_Sptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_22470e94c:;
			{
				(*_self_)._field_d.get()._field_Kind=_211bb87cb_Sptr((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_22470e0de:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_22470e078:;
	};
	(*_self_)._field_d.get()._field_Constant=nullptr;
	(*_self_)._field_d.get()._field_Lvalue=true;
}



inline void _211ba9190_amper(_211ba80c3_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_211018302_StructLitExprModel>>()) {
			_case_begin_2247142c0:;
			{
				jule::Ptr<_211018302_StructLitExprModel> _326421_lit = (*_self_)._field_d.get()._field_Model.operator jule::Ptr<_211018302_StructLitExprModel>();;
				_211bb1494_makeStructLitAlloc((*_self_)._field_d,_326421_lit);
			}
		}
		else {
			_case_begin_224713a61:;
			{
				{
					
					if (_211bcd44a_canGetPtr((*_self_)._field_d)) {
						_case_begin_2247146cc:;
						{
							(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_211bc2c25_Ptr>(_211bc2c25_Ptr{._field_Elem=(*_self_)._field_d.get()._field_Kind}), 12)});
							(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_211017e28_UnaryExprModel>(_211017e28_UnaryExprModel{._field_Expr=jule::new_ptr<_211b8a319_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
						}
					}
					else {
						_case_begin_224714127:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_22471404a:;
				};
			}
		}
		_match_end_224713a0b:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_Constant=nullptr;
		(*_self_)._field_d.get()._field_Lvalue=false;
	};
}



inline void _211ba936b_typeDecl(_211ba80c3_unaryEval* _self_) {
	_211bc4980_typeChecker _328817_tc = _211bc4980_typeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_rootLookup=(*_self_)._field_e.get()._field_lookup, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_errorToken=(*_self_)._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_22471a2a4:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bc9b61_buildPtrFromType(&_328817_tc, (*_self_)._field_d.get()._field_Kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_22471a31a:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bc9545_buildSptrFromType(&_328817_tc, (*_self_)._field_d.get()._field_Kind), 7)});
			}
		}
		else {
			_case_begin_2247189de:;
			{
				_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_211bb6851_Str((*_self_)._field_d.get()._field_Kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_224718989:;
	};
	(*_self_)._field_d.get()._field_Decl=true;
}



inline void _211ba9547_evalData(_211ba80c3_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_22471c77e:;
			{
				jule::Ptr<_211bb6455_TypeKind> _331121_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_211ba7534_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
				(*_self_)._field_e.get()._field_prefix=_331121_prefix;
			}
		}
		else {
			_case_begin_22471c361:;
			{
				(*_self_)._field_d=_211ba7534_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_22471c2a6:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211ba9822_eval(_211ba80c3_unaryEval* _self_, jule::Ptr<_210e58d47_UnaryExpr> _332027_u) {
	(*_self_)._field_u=_332027_u;
	_211ba9547_evalData(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_Decl) {
		_211ba936b_typeDecl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_211bb6455_TypeKind> _333113_kind = (*_self_)._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_224721cc2:;
			{
				_211ba8755_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_2247217b6:;
			{
				_211ba8931_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_22472182c:;
			{
				_211ba8b0c_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_224721893:;
			{
				_211ba8cd8_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_224721909:;
			{
				_211ba8eb4_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_224721e7b:;
			{
				_211ba9190_amper(&(*_self_));
			}
		}
		else {
			_case_begin_224721750:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_2247216ea:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_224721ee2:;
			{
				_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_211bb6851_Str(_333113_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_211b8abcc_IsConst((*_self_)._field_d.ptr())) {
			_case_begin_2247222ab:;
			{
				(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>((*_self_)._field_d.get()._field_Constant);
			}
		}
		_match_end_224723ce6:;
	};
	(*_self_)._field_d.get()._field_Mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _211ba80c3_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _211ba9d61_binaryEval static__211baa427_newPlain(jule::Ptr<_211b8bd87_Eval> _336928_e) {
	return _211ba9d61_binaryEval{._field_e=_336928_e, };
}



inline _211ba9d61_binaryEval static__211baa768_new(jule::Ptr<_211b8bd87_Eval> _337523_e, jule::Ptr<_20e7ddc0b_Token> _337537_op) {
	return _211ba9d61_binaryEval{._field_e=_337523_e, ._field_op=_337537_op};
}



inline jule::Bool _211baa9cc_checkTypeCompatibility(_211ba9d61_binaryEval* _self_) {
	return _211b304bd_checkTypeCompatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_Kind,(*_self_)._field_r.get()._field_Kind,(*_self_)._field_op);
}



inline jule::Bool _211baac74_checkStructCommonOperatorCompatibility(_211ba9d61_binaryEval* _self_) {
	jule::Ptr<_211022c35_FnIns> _338917_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_224728b75:;
			{
				_338917_overload=_211bb99b9_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_224728bdb:;
			{
				_338917_overload=_211bb99b9_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_224729cdb:;
			{
				_338917_overload=_211bb99b9_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_224729d52:;
			{
				_338917_overload=_211bb99b9_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_224729db8:;
			{
				_338917_overload=_211bb99b9_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_224729e2e:;
			{
				_338917_overload=_211bb99b9_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_224729e95:;
			{
				_338917_overload=_211bb99b9_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_22472a061:;
			{
				_338917_overload=_211bb99b9_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_22472a0c7:;
			{
				_338917_overload=_211bb99b9_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_22472a13d:;
			{
				_338917_overload=_211bb99b9_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_224728a43:;
			{
				_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_211bb6851_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return false;
			}
		}
		_match_end_2247288de:;
	};
	if ((_338917_overload == nullptr)) {
		_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_211bb6851_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
		return false;
	};
	jule::Ptr<_211021d66_ParamIns> _342117_p = _338917_overload.get()._field_Params[1LL];;
	return _211b3006c_checkAssignType((*_self_)._field_e.get()._field_s, _342117_p.get()._field_Decl.get()._field_Reference,_342117_p.get()._field_Kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_211b8a319_Data> _211bab01b_evalNil(_211ba9d61_binaryEval* _self_) {
	if ((!(_211bb7ab6_NilCompatible((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_211bb6851_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2247345ed:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_224734587:;
			{
				_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_224734532:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211bab280_evalEnum(_211ba9d61_binaryEval* _self_) {
	jule::Ptr<_211034087_Enum> _344617_enm = _211bb8ca4_Enum((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_224736853:;
			{
				jule::Ptr<_211bb6455_TypeKind> _345021_rkind = (*_self_)._field_r.get()._field_Kind;;
				if ((_211bb8ca4_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_345021_rkind=_211bb8ca4_Enum((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_211b304bd_checkTypeCompatibility((*_self_)._field_e.get()._field_s, _344617_enm.get()._field_Kind.get()._field_Kind,_345021_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_2247367ba:;
	};
	if (((_211bb8ca4_Enum((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr) || (_344617_enm != _211bb8ca4_Enum((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_344617_enm.get()._field_Ident),jule::Any(_211bb6851_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_224736bd8:;
			{
				if ((!(_211b08ebe_IsNum(_211bb6851_Str(_344617_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_344617_enm.get()._field_Ident)}));
					return nullptr;
				};
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_22473c0ea:;
			{
				if (((_211bb8567_Prim(_344617_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_211b08c5a_IsInt(_211bbb290_Str(_211bb8567_Prim(_344617_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_344617_enm.get()._field_Ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_22473ae84:;
			{
				_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_344617_enm.get()._field_Ident)}));
				return nullptr;
			}
		}
		_match_end_22473adb8:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211bab4e4_evalTypeEnum(_211ba9d61_binaryEval* _self_) {
	jule::Ptr<_211035682_TypeEnum> _349717_enm = _211bb9018_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr());;
	if ((!(_211baa9cc_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2247422dc:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_2247419e5:;
			{
				_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_2110359b2_Str(_349717_enm.ptr()))}));
				return nullptr;
			}
		}
		_match_end_224742199:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211bab758_evalSptr(_211ba9d61_binaryEval* _self_) {
	if ((!(_211baa9cc_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_224744476:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_224744410:;
			{
				_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_211bb6851_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_2247443aa:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211bab9bc_evalPtr(_211ba9d61_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_2247463ce:;
			{
				if ((!(_211baa9cc_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_224746445:;
			{
				if ((_211bb8a40_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_211bc36e8_IsUnsafe(_211bb8a40_Ptr((*_self_)._field_l.get()._field_Kind.ptr()).ptr())) {
					_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_211bb6851_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				};
				if ((!(_211bb25d8_isPtrArithmeticCompatible((*_self_)._field_l,(*_self_)._field_r)))) {
					_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_224745b81:;
			{
				_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_211bb6851_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_224745741:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211babc31_evalArr(_211ba9d61_binaryEval* _self_) {
	if ((!(_211baa9cc_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_22474c968:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_22474c902:;
			{
				_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_211bb6851_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_22474c89c:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211babe95_evalSlc(_211ba9d61_binaryEval* _self_) {
	if ((!(_211baa9cc_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_22474ec78:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_22474ec12:;
			{
				_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_211bb6851_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_22474ebac:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211bac209_evalFn(_211ba9d61_binaryEval* _self_) {
	if ((!(_211baa9cc_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_224752088:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_224752022:;
			{
				_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_211bb6851_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_224751ebc:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211bac46d_evalStruct(_211ba9d61_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_224753809:;
			{
				if ((_211bb99b9_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_211bb6851_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_224753870:;
			{
				if ((_211bb99b9_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_211bb6851_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_224753ee1:;
			{
				if ((_211bb99b9_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_211bb6851_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_224754057:;
			{
				if ((_211bb99b9_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_211bb6851_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2247540bd:;
			{
				if ((!(_211baa9cc_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_224753353:;
	};
	if ((!(_211baac74_checkStructCommonOperatorCompatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_211b8a319_Data> _211bac6d2_evalTrait(_211ba9d61_binaryEval* _self_) {
	if ((!(_211baa9cc_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2247637b4:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_22476374d:;
			{
				_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_211bb6851_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_2247636e8:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211bac946_evalAny(_211ba9d61_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_22476571c:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_224764ebe:;
			{
				_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_224764a7e:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211bacbaa_evalBool(_211ba9d61_binaryEval* _self_) {
	if ((!(_211baa9cc_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_224767664:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_2247675ed:;
			{
				_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_211bb6851_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_224767598:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211bace1e_evalStr(_211ba9d61_binaryEval* _self_) {
	jule::Str _373917_rk = _211bb6851_Str((*_self_)._field_r.get()._field_Kind.ptr());;
	if ((_373917_rk != jule::Str("str", 3))) {
		_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_373917_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_22476a920:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_22476a986:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_224768b82:;
			{
				_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_224769a95:;
	};
}



inline void _211bad0ea_setTypeToGreater(_211ba9d61_binaryEval* _self_) {
	if (_211b8abcc_IsConst((*_self_)._field_l.ptr())) {
		if ((!(_211b8abcc_IsConst((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_211b8abcc_IsConst((*_self_)._field_r.ptr())) {
		return;;
	};
	_julec_label_set:;
	if (_211b085a6_IsGreater(_211bb8567_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind,_211bb8567_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind)) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
	};
}



inline void _211bad33c_checkModData(_211ba9d61_binaryEval* _self_, jule::Ptr<_211b8a319_Data>& _378236_d) {
	if ((!(_211b8abcc_IsConst(_378236_d.ptr())))) {
		if (((_211bb8567_Prim(_378236_d.get()._field_Kind.ptr()) == nullptr) || (!(_211b08c5a_IsInt(_211bb8567_Prim(_378236_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_211b5b829_sigAssignable(jule::Str("i64", 3),_378236_d)) {
			_case_begin_2247730dc:;
			{
				_211011b25_SetI64(_378236_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_2110113c7_AsI64(_378236_d.get()._field_Constant.ptr())));
			}
		}
		else if (_211b72e17_unsigAssignable(jule::Str("u64", 3),_378236_d)) {
			_case_begin_224772a6a:;
			{
				_211011d9a_SetU64(_378236_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_21101163b_AsU64(_378236_d.get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_2247726c4:;
			{
				_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_224770edb:;
	};
}



inline void _211bad518_mod(_211ba9d61_binaryEval* _self_) {
	_211bad33c_checkModData(&(*_self_), (*_self_)._field_l);
	_211bad33c_checkModData(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _211bad8c0_numbersAreCompatibile(_211ba9d61_binaryEval* _self_, jule::Str& _380437_lk, jule::Str& _380447_rk) {
	if ((!(_211b08ebe_IsNum(_380447_rk)))) {
		return false;
	};
	if (_211b8abcc_IsConst((*_self_)._field_l.ptr())) {
		return true;
	};
	if ((_380437_lk == jule::Str("f32", 3))) {
		if (_211b8abcc_IsConst((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_380447_rk == jule::Str("f32", 3));
	};
	if ((_380437_lk == jule::Str("f64", 3))) {
		if (_211b8abcc_IsConst((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_380447_rk == jule::Str("f64", 3));
	};
	if (_211b8abcc_IsConst((*_self_)._field_r.ptr())) {
		return true;
	};
	return (_380437_lk == _380447_rk);
}



inline jule::Ptr<_211b8a319_Data> _211badb34_evalFloat(_211ba9d61_binaryEval* _self_) {
	jule::Str _383413_lk = _211bb8567_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _383513_rk = _211bb8567_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_211bad8c0_numbersAreCompatibile(&(*_self_), _383413_lk,_383513_rk)))) {
		_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_383413_lk),jule::Any(_383513_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_22477a864:;
			{
				if (((!(_211b8abcc_IsConst((*_self_)._field_l.ptr()))) || (!(_211b73049_intAssignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_383413_lk),jule::Any(_383513_rk)}));
					return nullptr;
				};
				if (((!(_211b8abcc_IsConst((*_self_)._field_r.ptr()))) || (!(_211b73049_intAssignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_383413_lk),jule::Any(_383513_rk)}));
					return nullptr;
				};
				_211011b25_SetI64((*_self_)._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_2110113c7_AsI64((*_self_)._field_l.get()._field_Constant.ptr())));
				_211011d9a_SetU64((*_self_)._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_21101163b_AsU64((*_self_)._field_r.get()._field_Constant.ptr())));
				if ((!(_211bb1dbd_isOkForShifting((*_self_)._field_r)))) {
					_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_22477a80e:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_22478046d:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_224780418:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_224781073:;
			{
				_211bad0ea_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2247810d9:;
			{
				if ((!(_211b08c5a_IsInt(_383513_rk)))) {
					_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_383413_lk),jule::Any(_383513_rk)}));
					return nullptr;
				};
				_211bad518_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_224781518:;
			{
				_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_2247813b4:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211badd98_evalInt(_211ba9d61_binaryEval* _self_) {
	jule::Str _389813_lk = _211bb8567_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _389913_rk = _211bb8567_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_224781150:;
			{
				if (((!(_211b08c5a_IsInt(_389813_lk))) || (!(_211b08c5a_IsInt(_389913_rk))))) {
					_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_389813_lk),jule::Any(_389913_rk)}));
					return nullptr;
				};
				if ((!(_211bb1dbd_isOkForShifting((*_self_)._field_r)))) {
					_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_224785929:;
	};
	if ((!(_211bad8c0_numbersAreCompatibile(&(*_self_), _389813_lk,_389913_rk)))) {
		_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_389813_lk),jule::Any(_389913_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_224788bb3:;
			{
				return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_224788ab4:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_224789488:;
			{
				_211bad0ea_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2247894ee:;
			{
				_211bad518_mod(&(*_self_));
				_211bad0ea_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_22478992d:;
			{
				_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_2247897c9:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211bae10c_evalPrim(_211ba9d61_binaryEval* _self_) {
	jule::Ptr<_211bbae2c_Prim> _395713_prim = _211bb8567_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		
		if (_211bbddec_IsBool(_395713_prim.ptr())) {
			_case_begin_22478ccd8:;
			{
				return _211bacbaa_evalBool(&(*_self_));
			}
		}
		else if (_211bbe161_IsStr(_395713_prim.ptr())) {
			_case_begin_22478cd60:;
			{
				return _211bace1e_evalStr(&(*_self_));
			}
		}
		_match_end_22478cc2d:;
	};
	if ((_211bb8567_Prim((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_211bbb290_Str(_395713_prim.ptr())),jule::Any(_211bb6851_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_211b08d8c_IsFloat(_395713_prim.get()._field_Kind)) {
			_case_begin_224790846:;
			{
				return _211badb34_evalFloat(&(*_self_));
			}
		}
		else if (_211b08c5a_IsInt(_395713_prim.get()._field_Kind)) {
			_case_begin_2247901b4:;
			{
				return _211badd98_evalInt(&(*_self_));
			}
		}
		else {
			_case_begin_22479014d:;
			{
				return nullptr;
			}
		}
		_match_end_22478d25b:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211bae371_evalOp(_211ba9d61_binaryEval* _self_) {
	{
		
		if (_211bb75dd_Void((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_224790acc:;
			{
				_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_211bb8567_Prim((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr) && _211bbe3c5_IsAny(_211bb8567_Prim((*_self_)._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_224792062:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_224791cdc;
			}
		}
		else if (((_211bb8567_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr) && _211bbe3c5_IsAny(_211bb8567_Prim((*_self_)._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_224791cdc:;
			{
				return _211bac946_evalAny(&(*_self_));
			}
		}
		else if ((_211bb9018_TypeEnum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_224791d53:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_224791db9;
			}
		}
		else if ((_211bb9018_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_224791db9:;
			{
				return _211bab4e4_evalTypeEnum(&(*_self_));
			}
		}
		else if (_211bb7379_IsNil((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_224791e30:;
			{
				return _211bab01b_evalNil(&(*_self_));
			}
		}
		else if ((_211bb8ca4_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_224791e96:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_22479213e;
			}
		}
		else if ((_211bb8ca4_Enum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_22479213e:;
			{
				return _211bab280_evalEnum(&(*_self_));
			}
		}
		else if ((_211bb87cb_Sptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2247921a5:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_22479221b;
			}
		}
		else if ((_211bb87cb_Sptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_22479221b:;
			{
				return _211bab758_evalSptr(&(*_self_));
			}
		}
		else if ((_211bb8a40_Ptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_224792293:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_22479231a;
			}
		}
		else if ((_211bb8a40_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_22479231a:;
			{
				return _211bab9bc_evalPtr(&(*_self_));
			}
		}
		else if ((_211bb927c_Arr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_224792392:;
			{
				return _211babc31_evalArr(&(*_self_));
			}
		}
		else if ((_211bb94e1_Slc((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_224792419:;
			{
				return _211babe95_evalSlc(&(*_self_));
			}
		}
		else if ((_211bb9755_Fn((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_224792491:;
			{
				return _211bac209_evalFn(&(*_self_));
			}
		}
		else if ((_211bb9c2d_Trait((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_224792518:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_224792590;
			}
		}
		else if ((_211bb9c2d_Trait((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_224792590:;
			{
				return _211bac6d2_evalTrait(&(*_self_));
			}
		}
		else if ((_211bb99b9_Struct((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_224792617:;
			{
				return _211bac46d_evalStruct(&(*_self_));
			}
		}
		else if ((_211bb8567_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_22479268e:;
			{
				return _211bae10c_evalPrim(&(*_self_));
			}
		}
		else {
			_case_begin_2247908e0:;
			{
				return nullptr;
			}
		}
		_match_end_224791715:;
	};
}



inline void _211bae5e6_evalConst(_211ba9d61_binaryEval* _self_, jule::Ptr<_211b8a319_Data>& _403233_d) {
	{
		
		if ((_403233_d == nullptr)) {
			_case_begin_2247a1ba9:;
			{
				return;;
			}
		}
		else if ((!(_211b8abcc_IsConst((*_self_)._field_l.ptr()))) || (!(_211b8abcc_IsConst((*_self_)._field_r.ptr())))) {
			_case_begin_2247a234c:;
			{
				_403233_d.get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_2247a1a88:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_2247a3958:;
			{
				_403233_d.get()._field_Constant=static__21100e87b_NewBool(_2110144a7_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_2247a39be:;
			{
				_403233_d.get()._field_Constant=static__21100e87b_NewBool((!(_2110144a7_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_2247a3a35:;
			{
				_403233_d.get()._field_Constant=static__21100e87b_NewBool(_211014199_Or((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_2247a3a9b:;
			{
				_403233_d.get()._field_Constant=static__21100e87b_NewBool(_211013d8b_And((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_2247a3b12:;
			{
				_403233_d.get()._field_Constant=static__21100e87b_NewBool(_211014dd1_Gt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_2247a3b78:;
			{
				_403233_d.get()._field_Constant=static__21100e87b_NewBool(_2110147b5_Lt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_2247a3bde:;
			{
				_403233_d.get()._field_Constant=static__21100e87b_NewBool(_2110151de_GtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_2247a3c55:;
			{
				_403233_d.get()._field_Constant=static__21100e87b_NewBool(_211014ac3_LtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_2247a3cbb:;
			{
				_2110154ec_Add((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_403233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_2247a3d32:;
			{
				_21101580a_Sub((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_403233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2247a3da9:;
			{
				_211015b18_Mul((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_403233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_2247a3e31:;
			{
				jule::Bool _406917_ok = _211015e26_Div((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_406917_ok)) && (_2110118a0_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_403233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
				jule::Ptr<_211bbae2c_Prim> _407421_prim = _211bb8567_Prim(_403233_d.get()._field_Kind.ptr());;
				{
					
					if (_211b089e6_IsSigInt(_407421_prim.get()._field_Kind)) {
						_case_begin_2247b1180:;
						{
							_211011b25_SetI64(_403233_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_2110113c7_AsI64(_403233_d.get()._field_Constant.ptr())));
						}
					}
					else if (_211b08b28_IsUnsigInt(_407421_prim.get()._field_Kind)) {
						_case_begin_2247b1207:;
						{
							_211011d9a_SetU64(_403233_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_21101163b_AsU64(_403233_d.get()._field_Constant.ptr())));
						}
					}
					_match_end_2247b10c5:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2247a3ea8:;
			{
				jule::Bool _408217_ok = _211016234_Mod((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_408217_ok)) && (_2110118a0_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_403233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_2247a4030:;
			{
				_211016850_BitwiseOr((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_403233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_2247a40a7:;
			{
				_211016542_BitwiseAnd((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_403233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_2247a412e:;
			{
				_211016b5d_Xor((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_403233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_2247a41a6:;
			{
				_211016e6b_Lshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_403233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_2247a422d:;
			{
				_211017279_Rshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_403233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		_match_end_2247a31c7:;
	};
	_403233_d.get()._field_Model=static_cast<jule::Any>(_403233_d.get()._field_Constant);
	_211bb3364_applyCastModelByEnum(_403233_d,_211bb8ca4_Enum(_403233_d.get()._field_Kind.ptr()));
}



inline void _211bae86b_checkData(_211ba9d61_binaryEval* _self_, jule::Ptr<_211b8a319_Data>& _410733_d) {
	jule::Ptr<_211022c35_FnIns> _410813_f = _211bb9755_Fn(_410733_d.get()._field_Kind.ptr());;
	if ((((_410813_f != nullptr) && (_410813_f.get()._field_Decl != nullptr)) && _21102075a_IsMethod(_410813_f.get()._field_Decl.ptr()))) {
		_211b8c393_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _211baea47_checkDatas(_211ba9d61_binaryEval* _self_) {
	_211bae86b_checkData(&(*_self_), (*_self_)._field_l);
	_211bae86b_checkData(&(*_self_), (*_self_)._field_r);
}



inline void _211baecbc_setModel(_211ba9d61_binaryEval* _self_, jule::Ptr<_211b8a319_Data>& _411932_d) {
	if (_211b8abcc_IsConst(_411932_d.ptr())) {
		if ((_211b8abcc_IsConst((*_self_)._field_l.ptr()) && _211b8abcc_IsConst((*_self_)._field_r.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_211b8a319_Data> _412718_l = (*_self_)._field_l;;
	jule::Ptr<_211b8a319_Data> _412725_r = (*_self_)._field_r;;
	std::tie(_412718_l,_412725_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_211b8aeda_GoodOperand(_412718_l.ptr(), _412725_r)))) {
		std::tie(_412718_l,_412725_r) = std::make_tuple(_412725_r,_412718_l);
	};
	_411932_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_211017c3b_BinopExprModel>(_211017c3b_BinopExprModel{._field_Left=jule::new_ptr<_211017a4e_OperandExprModel>(_211017a4e_OperandExprModel{._field_Kind=_412718_l.get()._field_Kind, ._field_Model=_412718_l.get()._field_Model}), ._field_Right=jule::new_ptr<_211017a4e_OperandExprModel>(_211017a4e_OperandExprModel{._field_Kind=_412725_r.get()._field_Kind, ._field_Model=_412725_r.get()._field_Model}), ._field_Op=(*_self_)._field_op}));
}



inline void _211bb0042_postEval(_211ba9d61_binaryEval* _self_, jule::Ptr<_211b8a319_Data>& _414532_d) {
	_414532_d.get()._field_Lvalue=false;
	_211baecbc_setModel(&(*_self_), _414532_d);
}



inline jule::Ptr<_211b8a319_Data> _211bb03e9_solveExplicit(_211ba9d61_binaryEval* _self_, jule::Ptr<_211b8a319_Data>& _415037_l, jule::Ptr<_211b8a319_Data>& _415052_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_415037_l,_415052_r);
	_211baea47_checkDatas(&(*_self_));
	jule::Ptr<_211b8a319_Data> _415517_d = _211bae371_evalOp(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_415037_l,_415052_r);
	_211bae5e6_evalConst(&(*_self_), _415517_d);
	if ((_415517_d != nullptr)) {
		_415517_d.get()._field_Mutable=true;
		_211bb0042_postEval(&(*_self_), _415517_d);
	};
	return _415517_d;
}



inline jule::Ptr<_211b8a319_Data> _211bb0707_eval(_211ba9d61_binaryEval* _self_, jule::Ptr<_210e5a354_BinopExpr>& _417028_op) {
	if ((_417028_op.get()._field_Op.get()._field_Kind == jule::Str("=", 1))) {
		_211b8c393_pushErr((*_self_)._field_e.ptr(), _417028_op.get()._field_Op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_211b8c6b2_pushSugggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_211b8a319_Data> _417717_l = _211ba7534_evalExprKind((*_self_)._field_e, _417028_op.get()._field_Left.get()._field_Kind);;
	if (((_417717_l == nullptr) || (_417717_l.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_211bb6455_TypeKind> _418217_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_417717_l.get()._field_Kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_418217_prefix;
	});;
	jule::Ptr<_211b8a319_Data> _418517_r = _211ba7534_evalExprKind((*_self_)._field_e, _417028_op.get()._field_Right.get()._field_Kind);;
	if (((_418517_r == nullptr) || (_418517_r.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_417028_op.get()._field_Op;
	jule::Ptr<_211b8a319_Data> _419217_d = _211bb03e9_solveExplicit(&(*_self_), _417717_l,_418517_r);;
	if ((((_419217_d != nullptr) && _417717_l.get()._field_IsRune) && _418517_r.get()._field_IsRune)) {
		_419217_d.get()._field_IsRune=true;
	};
	return _419217_d;
}







std::ostream &operator<<(std::ostream &_Stream, _211ba9d61_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211bb4c28_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211bb5762_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _211bb6851_Str(_211bb6455_TypeKind* _self_) {
	if (_211bb7379_IsNil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*_self_)._field_Variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_211bb7115_CppLinked(&(*_self_))) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*_self_)._field_CppIdent;
	} else {
		_7417_kind+=_211bb6026_Kind_mptr_data[((*_self_)._field_Kind).type_offset]._211bb5ac5_Str((*_self_)._field_Kind);
	};
	return _7417_kind;
}



inline jule::Bool _211bb6b5e_Equals(jule::Ptr<_211bb6455_TypeKind> _self_, jule::Ptr<_211bb6455_TypeKind> _9022_other) {
	if (_211bb7379_IsNil(_self_.ptr())) {
		return _211bb7379_IsNil(_9022_other.ptr());
	};
	if (_211bb7115_CppLinked(_self_.ptr())) {
		return (_211bb7115_CppLinked(_9022_other.ptr()) && (_self_.get()._field_CppIdent == _9022_other.get()._field_CppIdent));
	};
	return _211bb6026_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._211bb5dd3_Equals(_self_.get()._field_Kind, _9022_other);
}



inline jule::Bool _211bb7115_CppLinked(_211bb6455_TypeKind* _self_) {
	return ((*_self_)._field_CppIdent.len() != 0LL);
}



inline jule::Bool _211bb7379_IsNil(_211bb6455_TypeKind* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}



inline jule::Bool _211bb75dd_Void(_211bb6455_TypeKind* _self_) {
	jule::Ptr<_211bbae2c_Prim> _11113_prim = _211bb8567_Prim(&(*_self_));;
	return ((_11113_prim != nullptr) && (_11113_prim.get()._field_Kind == jule::Str("void", 4)));
}



inline jule::Bool _211bb7852_Mutable(_211bb6455_TypeKind* _self_) {
	{
		_211bb6455_TypeKind* _11821__self = (&((*_self_)));;
		if ((_211bb99b9_Struct(_11821__self) != nullptr)) {
			return _211bb99b9_Struct(_11821__self).get()._field_Mutable;
		};
		if ((_211bb9c2d_Trait(_11821__self) != nullptr)) {
			return _211bb9c2d_Trait(_11821__self).get()._field_Mutable;
		};
		if ((_211bb8567_Prim(_11821__self) != nullptr)) {
			jule::Ptr<_211bbae2c_Prim> _12721_p = _211bb8567_Prim(_11821__self);;
			return _211bbe3c5_IsAny(_12721_p.ptr());
		};
		if ((_211bb927c_Arr(_11821__self) != nullptr)) {
			return _211bb7852_Mutable(_211bb927c_Arr(_11821__self).get()._field_Elem.ptr());
		};
		return (((_211bb94e1_Slc(_11821__self) != nullptr) || (_211bb8a40_Ptr(_11821__self) != nullptr)) || (_211bb87cb_Sptr(_11821__self) != nullptr));
	};
}



inline jule::Bool _211bb7ab6_NilCompatible(_211bb6455_TypeKind* _self_) {
	{
		_211bb6455_TypeKind* _14221__self = (&((*_self_)));;
		jule::Ptr<_211bbae2c_Prim> _14417_prim = _211bb8567_Prim(_14221__self);;
		if (((_14417_prim != nullptr) && _211bbe3c5_IsAny(_14417_prim.ptr()))) {
			return true;
		};
		return (((((((_211bb7379_IsNil(_14221__self) || (_211bb9755_Fn(_14221__self) != nullptr)) || (_211bb87cb_Sptr(_14221__self) != nullptr)) || (_211bb8a40_Ptr(_14221__self) != nullptr)) || (_211bb9c2d_Trait(_14221__self) != nullptr)) || (_211bb94e1_Slc(_14221__self) != nullptr)) || (_211bb9e92_Map(_14221__self) != nullptr)) || (_211bb9018_TypeEnum(_14221__self) != nullptr));
	};
}



inline jule::Bool _211bb7d2a_PerformsRC(_211bb6455_TypeKind* _self_) {
	{
		_211bb6455_TypeKind* _16321__self = (&((*_self_)));;
		return (((_211bb87cb_Sptr(_16321__self) != nullptr) || (_211bb94e1_Slc(_16321__self) != nullptr)) || (_211bb9c2d_Trait(_16321__self) != nullptr));
	};
}



inline jule::Bool _211bb808e_SupportsCloning(_211bb6455_TypeKind* _self_) {
	{
		_211bb6455_TypeKind* _17121__self = (&((*_self_)));;
		{
			
			if ((_211bb8567_Prim(_17121__self) != nullptr)) {
				_case_begin_212cb7379:;
				{
					return (!(_211bbe3c5_IsAny(_211bb8567_Prim(_17121__self).ptr())));
				}
			}
			else if ((_211bb8ca4_Enum(_17121__self) != nullptr)) {
				_case_begin_212cb73e0:;
				{
					return true;
				}
			}
			else if ((_211bb9755_Fn(_17121__self) != nullptr)) {
				_case_begin_212cb76dc:;
				{
					return true;
				}
			}
			else if ((_211bb8a40_Ptr(_17121__self) != nullptr)) {
				_case_begin_212cb7753:;
				{
					return true;
				}
			}
			else if ((_211bb94e1_Slc(_17121__self) != nullptr)) {
				_case_begin_212cb77b9:;
				{
					return _211bb808e_SupportsCloning(_211bb94e1_Slc(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_211bb9e92_Map(_17121__self) != nullptr)) {
				_case_begin_212cb7830:;
				{
					jule::Ptr<_211bc16c4_Map> _18421_m = _211bb9e92_Map(_17121__self);;
					return (_211bb808e_SupportsCloning(_18421_m.get()._field_Key.ptr()) && _211bb808e_SupportsCloning(_18421_m.get()._field_Val.ptr()));
				}
			}
			else if ((_211bb927c_Arr(_17121__self) != nullptr)) {
				_case_begin_212cb7896:;
				{
					return _211bb808e_SupportsCloning(_211bb927c_Arr(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_211bb87cb_Sptr(_17121__self) != nullptr)) {
				_case_begin_212cb790c:;
				{
					return _211bb808e_SupportsCloning(_211bb87cb_Sptr(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_211bb99b9_Struct(_17121__self) != nullptr)) {
				_case_begin_212cb7984:;
				{
					jule::Ptr<_210e6db2b_StructIns> _19125_s = _211bb99b9_Struct(_17121__self);;
					return (((_19125_s.get()._field_Decl != nullptr) && (!(_19125_s.get()._field_Decl.get()._field_CppLinked))) && _210e3442c_IsDerives(_19125_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_212cb7258:;
				{
					return false;
				}
			}
			_match_end_212cb71e2:;
		};
	};
}



inline jule::Bool _211bb8303_Variadicable(_211bb6455_TypeKind* _self_) {
	{
		_211bb6455_TypeKind* _20421__self = (&((*_self_)));;
		return (_211bb94e1_Slc(_20421__self) != nullptr);
	};
}



inline jule::Ptr<_211bbae2c_Prim> _211bb8567_Prim(_211bb6455_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_211bbae2c_Prim>>()) {
			_case_begin_212cc0481:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_211bbae2c_Prim>();
			}
		}
		else {
			_case_begin_212cbed32:;
			{
				return nullptr;
			}
		}
		_match_end_212cbeccc:;
	};
}



inline jule::Ptr<_211bbe6b1_Sptr> _211bb87cb_Sptr(_211bb6455_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_211bbe6b1_Sptr>>()) {
			_case_begin_212cc1185:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_211bbe6b1_Sptr>();
			}
		}
		else {
			_case_begin_212cc0b9b:;
			{
				return nullptr;
			}
		}
		_match_end_212cc088d:;
	};
}



inline jule::Ptr<_211bc2c25_Ptr> _211bb8a40_Ptr(_211bb6455_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_211bc2c25_Ptr>>()) {
			_case_begin_212cc1e22:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_211bc2c25_Ptr>();
			}
		}
		else {
			_case_begin_212cc1938:;
			{
				return nullptr;
			}
		}
		_match_end_212cc162a:;
	};
}



inline jule::Ptr<_211034087_Enum> _211bb8ca4_Enum(_211bb6455_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_211034087_Enum>>()) {
			_case_begin_212cc2bae:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_211034087_Enum>();
			}
		}
		else {
			_case_begin_212cc26c5:;
			{
				return nullptr;
			}
		}
		_match_end_212cc23b7:;
	};
}



inline jule::Ptr<_211035682_TypeEnum> _211bb9018_TypeEnum(_211bb6455_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_211035682_TypeEnum>>()) {
			_case_begin_212cc394b:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_211035682_TypeEnum>();
			}
		}
		else {
			_case_begin_212cc3462:;
			{
				return nullptr;
			}
		}
		_match_end_212cc3154:;
	};
}



inline jule::Ptr<_211bc22b8_Arr> _211bb927c_Arr(_211bb6455_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_211bc22b8_Arr>>()) {
			_case_begin_212cc46d8:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_211bc22b8_Arr>();
			}
		}
		else {
			_case_begin_212cc41ee:;
			{
				return nullptr;
			}
		}
		_match_end_212cc3de1:;
	};
}



inline jule::Ptr<_211bc011d_Slc> _211bb94e1_Slc(_211bb6455_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_211bc011d_Slc>>()) {
			_case_begin_212cc5475:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_211bc011d_Slc>();
			}
		}
		else {
			_case_begin_212cc4e8b:;
			{
				return nullptr;
			}
		}
		_match_end_212cc4b7d:;
	};
}



inline jule::Ptr<_211022c35_FnIns> _211bb9755_Fn(_211bb6455_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_211022c35_FnIns>>()) {
			_case_begin_212cc6212:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_211022c35_FnIns>();
			}
		}
		else {
			_case_begin_212cc5c28:;
			{
				return nullptr;
			}
		}
		_match_end_212cc591a:;
	};
}



inline jule::Ptr<_210e6db2b_StructIns> _211bb99b9_Struct(_211bb6455_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_210e6db2b_StructIns>>()) {
			_case_begin_212cc6e9e:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_210e6db2b_StructIns>();
			}
		}
		else {
			_case_begin_212cc69b5:;
			{
				return nullptr;
			}
		}
		_match_end_212cc66a7:;
	};
}



inline jule::Ptr<_211031e42_Trait> _211bb9c2d_Trait(_211bb6455_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_211031e42_Trait>>()) {
			_case_begin_212cc7c3b:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_211031e42_Trait>();
			}
		}
		else {
			_case_begin_212cc7752:;
			{
				return nullptr;
			}
		}
		_match_end_212cc7444:;
	};
}



inline jule::Ptr<_211bc16c4_Map> _211bb9e92_Map(_211bb6455_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_211bc16c4_Map>>()) {
			_case_begin_212cc89c8:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_211bc16c4_Map>();
			}
		}
		else {
			_case_begin_212cc84de:;
			{
				return nullptr;
			}
		}
		_match_end_212cc81d1:;
	};
}



inline jule::Ptr<_211bc0b9b_Tuple> _211bba206_Tup(_211bb6455_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_211bc0b9b_Tuple>>()) {
			_case_begin_212cc9765:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_211bc0b9b_Tuple>();
			}
		}
		else {
			_case_begin_212cc927b:;
			{
				return nullptr;
			}
		}
		_match_end_212cc8e6d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _211bb6455_TypeKind _Src) {
	_Stream << _211bb6851_Str(&_Src);
	return _Stream;
}



inline jule::Bool _211bba965_checked(_211bba5ad_TypeSymbol* _self_) {
	return ((*_self_)._field_Kind != nullptr);
}



inline void _211bbab41_removeKind(_211bba5ad_TypeSymbol* _self_) {
	(*_self_)._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _211bba5ad_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _211bbb290_Str(_211bbae2c_Prim* _self_) {
	return (*_self_)._field_Kind;
}



inline jule::Bool _211bbb59d_Equals(jule::Ptr<_211bbae2c_Prim> _self_, jule::Ptr<_211bb6455_TypeKind> _35722_other) {
	jule::Ptr<_211bbae2c_Prim> _35813_prim = _211bb8567_Prim(_35722_other.ptr());;
	if ((_35813_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_Kind == _35813_prim.get()._field_Kind);
}



inline jule::Bool _211bbba21_IsConstraint(_211bbae2c_Prim* _self_) {
	return ((((!(_211bbe161_IsStr(&(*_self_)))) && (!(_211bbe3c5_IsAny(&(*_self_))))) && (!(_211bbddec_IsBool(&(*_self_))))) && (!(_211b08ebe_IsNum((*_self_)._field_Kind))));
}



inline jule::Bool _211bbbc85_IsI8(_211bbae2c_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i8", 2));
}



inline jule::Bool _211bbbee9_IsI16(_211bbae2c_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i16", 3));
}



inline jule::Bool _211bbc25d_IsI32(_211bbae2c_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i32", 3));
}



inline jule::Bool _211bbc4c2_IsI64(_211bbae2c_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i64", 3));
}



inline jule::Bool _211bbc736_IsU8(_211bbae2c_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u8", 2));
}



inline jule::Bool _211bbc99a_IsU16(_211bbae2c_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u16", 3));
}



inline jule::Bool _211bbcc0e_IsU32(_211bbae2c_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u32", 3));
}



inline jule::Bool _211bbce73_IsU64(_211bbae2c_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u64", 3));
}



inline jule::Bool _211bbd1d7_IsF32(_211bbae2c_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f32", 3));
}



inline jule::Bool _211bbd44b_IsF64(_211bbae2c_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f64", 3));
}



inline jule::Bool _211bbd6b0_IsInt(_211bbae2c_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("int", 3));
}



inline jule::Bool _211bbd924_IsUint(_211bbae2c_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uint", 4));
}



inline jule::Bool _211bbdb88_IsUintptr(_211bbae2c_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uintptr", 7));
}



inline jule::Bool _211bbddec_IsBool(_211bbae2c_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("bool", 4));
}



inline jule::Bool _211bbe161_IsStr(_211bbae2c_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("str", 3));
}



inline jule::Bool _211bbe3c5_IsAny(_211bbae2c_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _211bbae2c_Prim _Src) {
	_Stream << _211bbb290_Str(&_Src);
	return _Stream;
}



inline jule::Str _211bbea24_Str(_211bbe6b1_Sptr* _self_) {
	return (jule::Str("&", 1) + _211bb6851_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _211bbed32_Equals(jule::Ptr<_211bbe6b1_Sptr> _self_, jule::Ptr<_211bb6455_TypeKind> _43422_other) {
	jule::Ptr<_211bbe6b1_Sptr> _43513_sptr = _211bb87cb_Sptr(_43422_other.ptr());;
	if ((_43513_sptr == nullptr)) {
		return false;
	};
	return _211bb6b5e_Equals(_self_.get()._field_Elem, _43513_sptr.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _211bbe6b1_Sptr _Src) {
	_Stream << _211bbea24_Str(&_Src);
	return _Stream;
}



inline jule::Str _211bc0629_Str(_211bc011d_Slc* _self_) {
	return (jule::Str("[]", 2) + _211bb6851_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _211bc0937_Equals(jule::Ptr<_211bc011d_Slc> _self_, jule::Ptr<_211bb6455_TypeKind> _45322_other) {
	jule::Ptr<_211bc011d_Slc> _45413_slc = _211bb94e1_Slc(_45322_other.ptr());;
	if ((_45413_slc == nullptr)) {
		return false;
	};
	return _211bb6b5e_Equals(_self_.get()._field_Elem, _45413_slc.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _211bc011d_Slc _Src) {
	_Stream << _211bc0629_Str(&_Src);
	return _Stream;
}



inline jule::Str _211bc100e_Str(_211bc0b9b_Tuple* _self_) {
	jule::Str _47017_s = jule::Str("(", 1);;
	_47017_s+=_211bb6851_Str((*_self_)._field_Types[0LL].ptr());
	{
		auto expr = (*_self_)._field_Types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_212cd86ca:;
		if (it != expr.end()) {
			jule::Ptr<_211bb6455_TypeKind> &_47216_t = *it;
			{
				_47017_s+=jule::Str(",", 1);
				_47017_s+=_211bb6851_Str(_47216_t.ptr());
			}
			_iter_next_212cd86ca:;
			++it;
			goto _iter_begin_212cd86ca;
		}
		_iter_end_212cd86ca:;
	};
	_47017_s+=jule::Str(")", 1);
	return _47017_s;
}



inline jule::Bool _211bc131c_Equals(jule::Ptr<_211bc0b9b_Tuple> _self_, jule::Ptr<_211bb6455_TypeKind> _48122_other) {
	jule::Ptr<_211bc0b9b_Tuple> _48213_tup = _211bba206_Tup(_48122_other.ptr());;
	if ((_48213_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Types.len() != _48213_tup.get()._field_Types.len())) {
		return false;
	};
	jule::I64 _48917_i = 0LL;;
	for (; (_48917_i < _self_.get()._field_Types.len()); (_48917_i)++) {
		{
			if ((!(_211bb6b5e_Equals(_self_.get()._field_Types[_48917_i], _48213_tup.get()._field_Types[_48917_i])))) {
				return false;
			};
		}
	_iter_next_212cdbd3d:;
	}
	_iter_end_212cdbd3d:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _211bc0b9b_Tuple _Src) {
	_Stream << _211bc100e_Str(&_Src);
	return _Stream;
}



inline jule::Str _211bc1a37_Str(_211bc16c4_Map* _self_) {
	jule::Str _50917_s = jule::Str("[", 1);;
	_50917_s+=_211bb6851_Str((*_self_)._field_Key.ptr());
	_50917_s+=jule::Str(":", 1);
	_50917_s+=_211bb6851_Str((*_self_)._field_Val.ptr());
	_50917_s+=jule::Str("]", 1);
	return _50917_s;
}



inline jule::Bool _211bc1d45_Equals(jule::Ptr<_211bc16c4_Map> _self_, jule::Ptr<_211bb6455_TypeKind> _51822_other) {
	jule::Ptr<_211bc16c4_Map> _51913_map = _211bb9e92_Map(_51822_other.ptr());;
	if ((_51913_map == nullptr)) {
		return false;
	};
	return (_211bb6b5e_Equals(_self_.get()._field_Key, _51913_map.get()._field_Key) && _211bb6b5e_Equals(_self_.get()._field_Val, _51913_map.get()._field_Val));
}







std::ostream &operator<<(std::ostream &_Stream, _211bc16c4_Map _Src) {
	_Stream << _211bc1a37_Str(&_Src);
	return _Stream;
}



inline jule::Str _211bc262b_Str(_211bc22b8_Arr* _self_) {
	jule::Str _53717_s = jule::Str("[", 1);;
	_53717_s+=_211b07275_Itoa((*_self_)._field_N);
	_53717_s+=jule::Str("]", 1);
	_53717_s+=_211bb6851_Str((*_self_)._field_Elem.ptr());
	return _53717_s;
}



inline jule::Bool _211bc2939_Equals(jule::Ptr<_211bc22b8_Arr> _self_, jule::Ptr<_211bb6455_TypeKind> _54522_other) {
	jule::Ptr<_211bc22b8_Arr> _54613_arr = _211bb927c_Arr(_54522_other.ptr());;
	if ((_54613_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_N == _54613_arr.get()._field_N) && _211bb6b5e_Equals(_self_.get()._field_Elem, _54613_arr.get()._field_Elem));
}







std::ostream &operator<<(std::ostream &_Stream, _211bc22b8_Arr _Src) {
	_Stream << _211bc262b_Str(&_Src);
	return _Stream;
}



inline jule::Str _211bc3088_Str(_211bc2c25_Ptr* _self_) {
	if (_211bc36e8_IsUnsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _211bb6851_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _211bc3396_Equals(jule::Ptr<_211bc2c25_Ptr> _self_, jule::Ptr<_211bb6455_TypeKind> _56922_other) {
	jule::Ptr<_211bc2c25_Ptr> _57013_ptr = _211bb8a40_Ptr(_56922_other.ptr());;
	if ((_57013_ptr == nullptr)) {
		return false;
	};
	return _211bb6b5e_Equals(_self_.get()._field_Elem, _57013_ptr.get()._field_Elem);
}



inline jule::Bool _211bc36e8_IsUnsafe(_211bc2c25_Ptr* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _211bc2c25_Ptr _Src) {
	_Stream << _211bc3088_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211bc3b6b_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _211bc5189_pushErr(_211bc4980_typeChecker* _self_, jule::Ptr<_20e7ddc0b_Token> _65226_token, jule::Str _65241_fmt, jule::Slice<jule::Any> _65254_args) {
	_211b28186_pushErr((*_self_)._field_s.ptr(), _65226_token,_65241_fmt,jule::Any(_65254_args));
}



inline void _211bc5365_allowBuiltin(_211bc4980_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _211bc5541_disallowBuiltin(_211bc4980_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Ptr<_211bbae2c_Prim> _211bc584e_buildPrim(_211bc4980_typeChecker* _self_, jule::Ptr<_210e5266a_IdentTypeDecl>& _66429_decl) {
	if ((!(_211bce946_isPrim(_66429_decl.get()._field_Ident)))) {
		_211bc5189_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_66429_decl.get()._field_Generics.len() > 0LL)) {
		_211bc5189_pushErr(&(*_self_), _66429_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_66429_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _211bce407_buildPrimType(_66429_decl.get()._field_Ident);
}



inline void _212ceba84_pushReference(_211bc4980_typeChecker* _self_, jule::Ptr<_210e6db2b_StructIns>& _67840_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_22459ea51_Exist((*_self_)._field_refers.ptr(), _67840_t)) {
		return;;
	};
	_21102680a_Push((*_self_)._field_refers.ptr(), jule::Any(_67840_t));
}

inline void _212ceeb75_pushReference(_211bc4980_typeChecker* _self_, jule::Ptr<_211031e42_Trait>& _67840_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_212d01506_Exist((*_self_)._field_refers.ptr(), _67840_t)) {
		return;;
	};
	_21102680a_Push((*_self_)._field_refers.ptr(), jule::Any(_67840_t));
}



inline void _211bc5d49_pushReferenceByKind(_211bc4980_typeChecker* _self_, jule::Ptr<_211bb6455_TypeKind>& _68843_k) {
	{
		
		if ((_211bb99b9_Struct(_68843_k.ptr()) != nullptr)) {
			_case_begin_212cea687:;
			{
				jule::Ptr<_210e6db2b_StructIns> _69121_t = _211bb99b9_Struct(_68843_k.ptr());;
				_212ceba84_pushReference(&(*_self_), _69121_t);
			}
		}
		else if ((_211bb9c2d_Trait(_68843_k.ptr()) != nullptr)) {
			_case_begin_212cea70e:;
			{
				jule::Ptr<_211031e42_Trait> _69421_t = _211bb9c2d_Trait(_68843_k.ptr());;
				_212ceeb75_pushReference(&(*_self_), _69421_t);
			}
		}
		_match_end_212cea566:;
	};
}



inline void _211bc6212_pushCycleError(_211bc4980_typeChecker* _self_, jule::Any _69929_def1, jule::Any _69940_def2, jule::Str& _69956_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _70113_getIdent = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _70128_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _70128_def };
			
			if (_match_expr.type_is<jule::Ptr<_211bb5762_TypeAlias>>()) {
				_case_begin_212d04bd0:;
				{
					return _70128_def.operator jule::Ptr<_211bb5762_TypeAlias>().get()._field_Ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_210e427d1_Struct>>()) {
				_case_begin_212d04c46:;
				{
					return _70128_def.operator jule::Ptr<_210e427d1_Struct>().get()._field_Ident;
				}
			}
			else {
				_case_begin_212d04a48:;
				{
					return jule::Str();
				}
			}
			_match_end_212d0496b:;
		};
	});;
	jule::Str _71113_def1Ident = _70113_getIdent(_69929_def1);;
	jule::Str _71213_def2Ident = _70113_getIdent(_69940_def2);;
	jule::Str _71313_refersTo = _20e4ba7b7_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_71113_def1Ident),jule::Any(_71213_def2Ident)}));;
	(_69956_message).buffer.insert(0, (((_20e437ed7_Repeat(jule::Str(" ", 1),4LL) + _71313_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _211bc65b9_checkCrossCycle(_211bc4980_typeChecker* _self_, jule::Any _71730_decl, jule::Str& _71746_message) {
	{
		auto &_match_expr{ _71730_decl };
		
		if (_match_expr.type_is<jule::Ptr<_211bb5762_TypeAlias>>()) {
			_case_begin_212d075a6:;
			{
				jule::Ptr<_211bb5762_TypeAlias> _72017_ta = _71730_decl.operator jule::Ptr<_211bb5762_TypeAlias>();;
				{
					auto &expr = _72017_ta.get()._field_Refers;
					auto it = expr.begin();
					_iter_begin_212d08343:;
					if (it != expr.end()) {
						jule::Any &_72120_d = *it;
						{
							{
								
								if ((_72120_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_212d08cd3:;
									{
										_211bc6212_pushCycleError(&(*_self_), jule::Any(_72017_ta),jule::Any(_72120_d),_71746_message);
										return false;
									}
								}
								else if ((!(_211bc65b9_checkCrossCycle(&(*_self_), jule::Any(_72120_d),_71746_message)))) {
									_case_begin_212d08d5a:;
									{
										_211bc6212_pushCycleError(&(*_self_), jule::Any(_72017_ta),jule::Any(_72120_d),_71746_message);
										return false;
									}
								}
								_match_end_212d08bb2:;
							};
						}
						_iter_next_212d08343:;
						++it;
						goto _iter_begin_212d08343;
					}
					_iter_end_212d08343:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e427d1_Struct>>()) {
			_case_begin_212d0761c:;
			{
				jule::Ptr<_210e427d1_Struct> _73217_s = _71730_decl.operator jule::Ptr<_210e427d1_Struct>();;
				{
					auto &expr = _73217_s.get()._field_Depends;
					auto it = expr.begin();
					_iter_begin_212d0a004:;
					if (it != expr.end()) {
						jule::Ptr<_210e427d1_Struct> &_73320_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _73320_d)) {
									_case_begin_212d0b434:;
									{
										_211bc6212_pushCycleError(&(*_self_), jule::Any(_73217_s),jule::Any(_73320_d),_71746_message);
										return false;
									}
								}
								else if ((!(_211bc65b9_checkCrossCycle(&(*_self_), jule::Any(_73320_d),_71746_message)))) {
									_case_begin_212d0b4ab:;
									{
										_211bc6212_pushCycleError(&(*_self_), jule::Any(_73217_s),jule::Any(_73320_d),_71746_message);
										return false;
									}
								}
								_match_end_212d0b313:;
							};
						}
						_iter_next_212d0a004:;
						++it;
						goto _iter_begin_212d0a004;
					}
					_iter_end_212d0a004:;
				};
			}
		}
		_match_end_212d07551:;
	};
	return true;
}



inline jule::Bool _211bc6971_checkIllegalCycles(_211bc4980_typeChecker* _self_, jule::Ptr<_210e5266a_IdentTypeDecl>& _75138_ident, jule::Any _75165_decl) {
	jule::Bool _75178_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_75178_ok = true;
		return _75178_ok;
	};
	{
		auto &_match_expr{ _75165_decl };
		
		if (_match_expr.type_is<jule::Ptr<_210e427d1_Struct>>()) {
			_case_begin_212d0c567:;
			{
				if (((*_self_)._field_notPlain || _75165_decl.operator jule::Ptr<_210e427d1_Struct>().get()._field_CppLinked)) {
					_75178_ok = true;
					return _75178_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211bb5762_TypeAlias>>()) {
			_case_begin_212d0c710:;
			{
				if (_75165_decl.operator jule::Ptr<_211bb5762_TypeAlias>().get()._field_CppLinked) {
					_75178_ok = true;
					return _75178_ok;
				};
			}
		}
		_match_end_212d0d447:;
	};
	if ((_75165_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_211bc5189_pushErr(&(*_self_), _75138_ident.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_75178_ok = false;
		return _75178_ok;
	};
	jule::Str _77417_message = jule::Str();;
	if ((!(_211bc65b9_checkCrossCycle(&(*_self_), jule::Any(_75165_decl),_77417_message)))) {
		jule::Str _77721_errMsg = _77417_message;;
		_77417_message=jule::Str();
		_211bc6212_pushCycleError(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_75165_decl),_77417_message);
		_77721_errMsg+=_77417_message;
		_211bc5189_pushErr(&(*_self_), _75138_ident.get()._field_Token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_77721_errMsg)}));
		_75178_ok = false;
		return _75178_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_211bb5762_TypeAlias>>()) {
			_case_begin_212d129ac:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({jule::Any(_75165_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e427d1_Struct>>()) {
			_case_begin_212d12a56:;
			{
				{
					auto &_match_expr{ _75165_decl };
					
					if (_match_expr.type_is<jule::Ptr<_210e427d1_Struct>>()) {
						_case_begin_212d1324e:;
						{
							jule::Ptr<_210e427d1_Struct> _79325_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_210e427d1_Struct>();;
							_79325_s.get()._field_Depends = jule::alloc_for_append(_79325_s.get()._field_Depends,1);_79325_s.get()._field_Depends.__push(_75165_decl.operator jule::Ptr<_210e427d1_Struct>());;
						}
					}
					_match_end_212d13161:;
				};
			}
		}
		_match_end_212d12957:;
	};
	_75178_ok = true;
	return _75178_ok;
}



inline jule::Trait<_211bb6026_Kind> _211bc6d28_fromTypeAlias(_211bc4980_typeChecker* _self_, jule::Ptr<_210e5266a_IdentTypeDecl>& _80133_decl, jule::Ptr<_211bb5762_TypeAlias>& _80160_ta) {
	if ((!(_211b2885c_isAccessibleDefine((*_self_)._field_s.ptr(), _80160_ta.get()._field_Public,_80160_ta.get()._field_Token)))) {
		_211bc5189_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
		return nullptr;
	};
	_80160_ta.get()._field_Used=true;
	if ((_80133_decl.get()._field_Generics.len() > 0LL)) {
		_211bc5189_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_bannedGenerics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_212d17c9d:;
			if (it != expr.end()) {
				jule::Ptr<_211bb5762_TypeAlias> _81820_bg = *it;
				{
					if (((_81820_bg == _80160_ta) || ((_80160_ta.get()._field_Kind.get()._field_Kind != nullptr) && _211bb6b5e_Equals(_80160_ta.get()._field_Kind.get()._field_Kind, _81820_bg.get()._field_Kind.get()._field_Kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_212d17c9d;
					};
				}
				_iter_next_212d17c9d:;
				++it;
				goto _iter_begin_212d17c9d;
			}
			_iter_end_212d17c9d:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_212d19bb2:;
			if (it != expr.end()) {
				jule::Ptr<_211bb5762_TypeAlias> _82920_bg = *it;
				{
					if ((_82920_bg == _80160_ta)) {
						_211bc5189_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
						return nullptr;
					};
					{
						auto &expr = _80160_ta.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_212d1a5ec:;
						if (it != expr.end()) {
							jule::Ptr<_211bb5762_TypeAlias> _83424_dg = *it;
							{
								if ((_82920_bg == _83424_dg)) {
									_211bc5189_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
									return nullptr;
								};
							}
							_iter_next_212d1a5ec:;
							++it;
							goto _iter_begin_212d1a5ec;
						}
						_iter_end_212d1a5ec:;
					};
				}
				_iter_next_212d19bb2:;
				++it;
				goto _iter_begin_212d19bb2;
			}
			_iter_end_212d19bb2:;
		};
	};
	jule::Bool _84317_ok = _211bc6971_checkIllegalCycles(&(*_self_), _80133_decl,jule::Any(_80160_ta));;
	if ((!(_84317_ok))) {
		return nullptr;
	};
	_84317_ok=_211b3316e_checkTypeAliasDeclKind((*_self_)._field_s, _80160_ta,(*_self_)._field_lookup);
	if ((!(_84317_ok))) {
		return nullptr;
	};
	if ((_80160_ta.get()._field_Generic && ((*_self_)._field_ownerAlias != nullptr))) {
		(*_self_)._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*_self_)._field_ownerAlias.get()._field_Generics,1);(*_self_)._field_ownerAlias.get()._field_Generics.__push(_80160_ta);;
	};
	jule::Ptr<_211bb6455_TypeKind> _86017_tk = jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Generic=_80160_ta.get()._field_Generic, ._field_Kind=_80160_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_211bc5d49_pushReferenceByKind(&(*_self_), _86017_tk);
	if (_80160_ta.get()._field_CppLinked) {
		_86017_tk.get()._field_CppIdent=_80160_ta.get()._field_Ident;
	} else {
		_86017_tk.get()._field_CppIdent=_80160_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_211bb6026_Kind>(_86017_tk, 5);
}



inline jule::Ptr<_211034087_Enum> _211bc71d0_fromEnum(_211bc4980_typeChecker* _self_, jule::Ptr<_210e5266a_IdentTypeDecl>& _87328_decl, jule::Ptr<_211034087_Enum>& _87355_e) {
	if ((!(_211b2885c_isAccessibleDefine((*_self_)._field_s.ptr(), _87355_e.get()._field_Public,_87355_e.get()._field_Token)))) {
		_211bc5189_pushErr(&(*_self_), _87328_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_87328_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_87328_decl.get()._field_Generics.len() > 0LL)) {
		_211bc5189_pushErr(&(*_self_), _87328_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_87328_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _87355_e;
}



inline jule::Ptr<_211035682_TypeEnum> _211bc7587_fromTypeEnum(_211bc4980_typeChecker* _self_, jule::Ptr<_210e5266a_IdentTypeDecl>& _88532_decl, jule::Ptr<_211035682_TypeEnum>& _88559_e) {
	if ((!(_211b2885c_isAccessibleDefine((*_self_)._field_s.ptr(), _88559_e.get()._field_Public,_88559_e.get()._field_Token)))) {
		_211bc5189_pushErr(&(*_self_), _88532_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_88532_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_88532_decl.get()._field_Generics.len() > 0LL)) {
		_211bc5189_pushErr(&(*_self_), _88532_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_88532_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _88559_e;
}



inline jule::Ptr<_211031e42_Trait> _211bc793e_fromTrait(_211bc4980_typeChecker* _self_, jule::Ptr<_210e5266a_IdentTypeDecl>& _89729_decl, jule::Ptr<_211031e42_Trait>& _89756_t) {
	if ((!(_211b2885c_isAccessibleDefine((*_self_)._field_s.ptr(), _89756_t.get()._field_Public,_89756_t.get()._field_Token)))) {
		_211bc5189_pushErr(&(*_self_), _89729_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_89729_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_89729_decl.get()._field_Generics.len() > 0LL)) {
		_211bc5189_pushErr(&(*_self_), _89729_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_89729_decl.get()._field_Ident)}));
		return nullptr;
	};
	_212ceeb75_pushReference(&(*_self_), _89756_t);
	return _89756_t;
}



inline jule::Bool _211bc7ce6_checkStructIns(_211bc4980_typeChecker* _self_, jule::Ptr<_210e6db2b_StructIns>& _91038_ins, jule::Ptr<_20e7ddc0b_Token>& _91060_errorToken) {
	jule::Bool _91082_ok = jule::Bool();
	if (_91038_ins.get()._field_Checked) {
		_91082_ok = true;
		return _91082_ok;
	};
	_91038_ins.get()._field_Checked=true;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _91038_ins.get()._field_Decl))) {
		_91082_ok = true;
		return _91082_ok;
	};
	if ((!(_211b3c2ee_precheckStructIns((*_self_)._field_s, _91038_ins,_91060_errorToken)))) {
		_91082_ok = false;
		return _91082_ok;
	};
	if ((_91038_ins.get()._field_Generics.len() > 0LL)) {
		_211b3cc6c_checkStructInsOperators((*_self_)._field_s, _91038_ins);
		_211b3c574_checkStructIns((*_self_)._field_s, _91038_ins);
	};
	_91082_ok = true;
	return _91082_ok;
}



inline void _211bc808d_appendUsedStructReference(_211bc4980_typeChecker* _self_, jule::Ptr<_210e427d1_Struct>& _93149_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_210e427d1_Struct>>()) {
			_case_begin_212d2bca1:;
			{
				jule::Ptr<_210e427d1_Struct> _93721_refS = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_210e427d1_Struct>();;
				if ((!(_210e33838_IsUses(_93721_refS.ptr(), _93149_s)))) {
					_93721_refS.get()._field_Uses = jule::alloc_for_append(_93721_refS.get()._field_Uses,1);_93721_refS.get()._field_Uses.__push(_93149_s);;
				};
			}
		}
		_match_end_212d2bc4b:;
	};
}



inline jule::Ptr<_210e6db2b_StructIns> _211bc8456_buildStructInstance(_211bc4980_typeChecker* _self_, jule::Ptr<_210e5266a_IdentTypeDecl>& _94443_decl, jule::Ptr<_210e427d1_Struct>& _94470_s) {
	jule::Ptr<_211bc3b6b_referencer> _94617_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_211bb5762_TypeAlias>> _94817_bannedGenerics = (*_self_)._field_bannedGenerics;;
	if (((*_self_)._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_211b0c214_scopeChecker>>()) {
				_case_begin_212d2ece8:;
				{
					jule::Ptr<_211b0c214_scopeChecker> _95525_sc = (*_self_)._field_lookup.operator jule::Ptr<_211b0c214_scopeChecker>();;
					jule::Ptr<_211b0c214_scopeChecker> _95625_hard = _211b0d721_getHardRoot(_95525_sc);;
					if (((_95625_hard.get()._field_owner.get()._field_Owner == nullptr) || (_95625_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != _94470_s))) {
						goto _match_end_212d2ec93;
					};
					jule::I64 _96021_n = (_95625_hard.get()._field_owner.get()._field_Generics.len() + _95625_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*_self_)._field_bannedGenerics=_95625_hard.get()._field_table.get()._field_TypeAliases.slice(0LL,_96021_n);
				}
			}
			_match_end_212d2ec93:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Trait<_211bd2086_Lookup> _97017_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=(*_self_)._field_rootLookup;
	jule::Ptr<_210e6db2b_StructIns> _97417_ins = _210e23ae2_instance(_94470_s);;
	_97417_ins.get()._field_Generics=jule::Slice<jule::Ptr<_211bb4c28_InsGeneric>>::alloc(0LL,_94443_decl.get()._field_Generics.len());
	{
		auto &expr = _94443_decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_212d345a0:;
		if (it != expr.end()) {
			jule::Ptr<_210e520a4_TypeDecl> _97621_g = *it;
			{
				jule::Ptr<_211bb6455_TypeKind> _97721_kind = _211bcb8dd_build(&(*_self_), _97621_g.get()._field_Kind);;
				if ((_97721_kind == nullptr)) {
					return nullptr;
				};
				_97417_ins.get()._field_Generics = jule::alloc_for_append(_97417_ins.get()._field_Generics,1);_97417_ins.get()._field_Generics.__push(jule::new_ptr<_211bb4c28_InsGeneric>(_211bb4c28_InsGeneric{._field_Kind=_97721_kind, }));;
			}
			_iter_next_212d345a0:;
			++it;
			goto _iter_begin_212d345a0;
		}
		_iter_end_212d345a0:;
	};
	(*_self_)._field_lookup=_97017_lookup;
	(*_self_)._field_bannedGenerics=_94817_bannedGenerics;
	(*_self_)._field_referencer=_94617_referencer;
	return _97417_ins;
}



inline jule::Ptr<_210e6db2b_StructIns> _211bc880d_fromStruct(_211bc4980_typeChecker* _self_, jule::Ptr<_210e5266a_IdentTypeDecl>& _99234_decl, jule::Ptr<_210e427d1_Struct>& _99261_s) {
	if ((!(_211b2885c_isAccessibleDefine((*_self_)._field_s.ptr(), _99261_s.get()._field_Public,_99261_s.get()._field_Token)))) {
		_211bc5189_pushErr(&(*_self_), _99234_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_99234_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_99234_decl.get()._field_Generics.len() > 0LL)) {
			_211bc5189_pushErr(&(*_self_), _99234_decl.get()._field_Token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_210e6db2b_StructIns>(_210e6db2b_StructIns{._field_Decl=_99261_s, });
	};
	jule::Bool _101017_ok = ((*_self_)._field_notPlain || _211bc6971_checkIllegalCycles(&(*_self_), _99234_decl,jule::Any(_99261_s)));;
	if ((!(_101017_ok))) {
		return nullptr;
	};
	_211bc808d_appendUsedStructReference(&(*_self_), _99261_s);
	jule::Ptr<_210e6db2b_StructIns> _101617_ins = _211bc8456_buildStructInstance(&(*_self_), _99234_decl,_99261_s);;
	if ((_101617_ins == nullptr)) {
		return nullptr;
	};
	_101017_ok=_211b2952d_checkGenericQuantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_101617_ins.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_101617_ins.get()._field_Generics.len()),_99234_decl.get()._field_Token);
	if ((!(_101017_ok))) {
		return nullptr;
	};
	jule::Ptr<_210e6db2b_StructIns> _102617_existInstance = _210e29bd6_appendInstance(_99261_s.ptr(), _101617_ins);;
	if ((_102617_existInstance != nullptr)) {
		if ((!(_211b31821_checkConstraintsStruct((*_self_)._field_s, _101617_ins,_99234_decl.get()._field_Token,_102617_existInstance)))) {
			return nullptr;
		};
		_212ceba84_pushReference(&(*_self_), _102617_existInstance);
		return _102617_existInstance;
	};
	if ((!(_211bc7ce6_checkStructIns(&(*_self_), _101617_ins,_99234_decl.get()._field_Token)))) {
		return nullptr;
	};
	_212ceba84_pushReference(&(*_self_), _101617_ins);
	return _101617_ins;
}



inline jule::Trait<_211bb6026_Kind> _211bc8b1b_getDef(_211bc4980_typeChecker* _self_, jule::Ptr<_210e5266a_IdentTypeDecl>& _105030_decl) {
	{
		auto &expr = (*_self_)._field_ignoreGenerics;
		auto it = expr.begin();
		_iter_begin_212d3e698:;
		if (it != expr.end()) {
			jule::Ptr<_210e5e688_GenericDecl> _105116_g = *it;
			{
				if ((_105116_g.get()._field_Ident == _105030_decl.get()._field_Ident)) {
					return jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(_105116_g.get()._field_Ident), 6);
				};
			}
			_iter_next_212d3e698:;
			++it;
			goto _iter_begin_212d3e698;
		}
		_iter_end_212d3e698:;
	};
	{
		auto &expr = (*_self_)._field_useGenerics;
		auto it = expr.begin();
		_iter_begin_212d3e80d:;
		if (it != expr.end()) {
			jule::Ptr<_211bb5762_TypeAlias> _105721_g = *it;
			{
				if ((_105721_g.get()._field_Ident == _105030_decl.get()._field_Ident)) {
					if ((_105030_decl.get()._field_Generics.len() > 0LL)) {
						_211bc5189_pushErr(&(*_self_), _105030_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_105030_decl.get()._field_Ident)}));
						return nullptr;
					};
					jule::Ptr<_210e6db2b_StructIns> _106325_st = _211bb99b9_Struct(_105721_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_106325_st != nullptr)) {
						jule::Bool _106525_ok = _211bc6971_checkIllegalCycles(&(*_self_), _105030_decl,jule::Any(_106325_st.get()._field_Decl));;
						if ((!(_106525_ok))) {
							return nullptr;
						};
					};
					return _105721_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;
				};
			}
			_iter_next_212d3e80d:;
			++it;
			goto _iter_begin_212d3e80d;
		}
		_iter_end_212d3e80d:;
	};
	if ((!(_105030_decl.get()._field_CppLinked))) {
		jule::Ptr<_211034087_Enum> _107521_e = _211bd2086_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._211bd1b35_FindEnum((*_self_)._field_lookup, _105030_decl.get()._field_Ident);;
		if ((_107521_e != nullptr)) {
			return jule::Trait<_211bb6026_Kind>(_211bc71d0_fromEnum(&(*_self_), _105030_decl,_107521_e), 3);
		};
		jule::Ptr<_211035682_TypeEnum> _108021_te = _211bd2086_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._211bd1e43_FindTypeEnum((*_self_)._field_lookup, _105030_decl.get()._field_Ident);;
		if ((_108021_te != nullptr)) {
			return jule::Trait<_211bb6026_Kind>(_211bc7587_fromTypeEnum(&(*_self_), _105030_decl,_108021_te), 4);
		};
		jule::Ptr<_211031e42_Trait> _108521_t = _211bd2086_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._211bd1827_FindTrait((*_self_)._field_lookup, _105030_decl.get()._field_Ident);;
		if ((_108521_t != nullptr)) {
			return jule::Trait<_211bb6026_Kind>(_211bc793e_fromTrait(&(*_self_), _105030_decl,_108521_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_211bc5189_pushErr(&(*_self_), _105030_decl.get()._field_Token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_210e427d1_Struct> _109417_s = _211bd2086_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._211bd1162_FindStruct((*_self_)._field_lookup, _105030_decl.get()._field_Ident,_105030_decl.get()._field_CppLinked);;
	if ((_109417_s != nullptr)) {
		return jule::Trait<_211bb6026_Kind>(_211bc880d_fromStruct(&(*_self_), _105030_decl,_109417_s), 0);
	};
	jule::Ptr<_211bb5762_TypeAlias> _109917_ta = _211bd2086_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._211bd0caa_FindTypeAlias((*_self_)._field_lookup, _105030_decl.get()._field_Ident,_105030_decl.get()._field_CppLinked);;
	if (((_109917_ta == nullptr) && (!((*_self_)._field_disBuiltin)))) {
		_109917_ta=_211be1084_findBuiltinTypeAlias(_105030_decl.get()._field_Ident);
	};
	if ((_109917_ta != nullptr)) {
		return _211bc6d28_fromTypeAlias(&(*_self_), _105030_decl,_109917_ta);
	};
	_211bc5189_pushErr(&(*_self_), _105030_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_105030_decl.get()._field_Ident)}));
	return nullptr;
}



inline jule::Trait<_211bb6026_Kind> _211bc8e29_buildIdent(_211bc4980_typeChecker* _self_, jule::Ptr<_210e5266a_IdentTypeDecl> _111133_decl) {
	{
		
		if (_211bce946_isPrim(_111133_decl.get()._field_Ident)) {
			_case_begin_212d4b111:;
			{
				return jule::Trait<_211bb6026_Kind>(_211bc584e_buildPrim(&(*_self_), _111133_decl), 6);
			}
		}
		else {
			_case_begin_212d4a891:;
			{
				return _211bc8b1b_getDef(&(*_self_), _111133_decl);
			}
		}
		_match_end_212d4a7b4:;
	};
}



inline jule::Trait<_211bb6026_Kind> _211bc9237_buildSubIdent(_211bc4980_typeChecker* _self_, jule::Ptr<_210e52cb9_SubIdentTypeDecl> _112036_decl) {
	jule::Trait<_211bb6026_Kind> _112117_ident = _211bc8e29_buildIdent(&(*_self_), _112036_decl.get()._field_Idents[0LL]);;
	if ((_112117_ident == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _112117_ident };
		
		if (_match_expr.type_is<jule::Ptr<_211035682_TypeEnum>>()) {
			_case_begin_212d4cb4b:;
			{
				goto _match_end_212d4ca6e;
			}
		}
		else {
			_case_begin_212d4c83d:;
			{
				_211bc5189_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_212d4ca6e:;
	};
	jule::Ptr<_211035682_TypeEnum> _113217_t = _112117_ident.operator jule::Ptr<_211035682_TypeEnum>();;
	jule::Slice<jule::Ptr<_210e5266a_IdentTypeDecl>> _113317_idents = _112036_decl.get()._field_Idents.slice(1LL);;
	{
		auto &expr = _113317_idents;
		auto it = expr.begin();
		_iter_begin_212d4e037:;
		if (it != expr.end()) {
			jule::I64 _113413_i = it - expr.begin();
			jule::Ptr<_210e5266a_IdentTypeDecl> _113416_id = *it;
			{
				jule::Ptr<_2110350bb_TypeEnumItem> _113521_item = _2110361bb_FindItem(_113217_t.ptr(), _113416_id.get()._field_Ident);;
				if ((_113521_item == nullptr)) {
					_211bc5189_pushErr(&(*_self_), _113416_id.get()._field_Token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_113217_t.get()._field_Ident),jule::Any(_113416_id.get()._field_Ident)}));
					return nullptr;
				};
				if (((_113317_idents.len() - _113413_i) == 1LL)) {
					_211bc5d49_pushReferenceByKind(&(*_self_), _113521_item.get()._field_Kind.get()._field_Kind);
					return jule::Trait<_211bb6026_Kind>(_113521_item.get()._field_Kind.get()._field_Kind, 5);
				};
				_113217_t=_211bb9018_TypeEnum(_113521_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_113217_t == nullptr)) {
					_211bc5189_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
			_iter_next_212d4e037:;
			++it;
			_113413_i++;
			goto _iter_begin_212d4e037;
		}
		_iter_end_212d4e037:;
	};
	return nullptr;
}



inline jule::Ptr<_211bbe6b1_Sptr> _211bc9545_buildSptrFromType(_211bc4980_typeChecker* _self_, jule::Ptr<_211bb6455_TypeKind>& _115441_elem) {
	{
		
		if ((_115441_elem == nullptr)) {
			_case_begin_212d4e972:;
			{
				return nullptr;
			}
		}
		else if ((_211bb99b9_Struct(_115441_elem.ptr()) != nullptr)) {
			_case_begin_212d4e9e9:;
			{
				jule::Ptr<_210e6db2b_StructIns> _116017_s = _211bb99b9_Struct(_115441_elem.ptr());;
				if (((_116017_s.get()._field_Decl != nullptr) && _116017_s.get()._field_Decl.get()._field_CppLinked)) {
					_211bc5189_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_211bb927c_Arr(_115441_elem.ptr()) != nullptr) && _211bb927c_Arr(_115441_elem.ptr()).get()._field_Auto)) {
			_case_begin_212d4ea71:;
			{
				_211bc5189_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_212d4e840:;
	};
	return jule::new_ptr<_211bbe6b1_Sptr>(_211bbe6b1_Sptr{._field_Elem=_115441_elem});
}



inline jule::Ptr<_211bbe6b1_Sptr> _211bc9853_buildSptr(_211bc4980_typeChecker* _self_, jule::Ptr<_210e5345c_SptrTypeDecl> _117432_decl) {
	jule::Bool _117513_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_117513_notPlain;
	});;
	jule::Ptr<_211bb6455_TypeKind> _117917_elem = _211bcbbeb_checkDecl(&(*_self_), _117432_decl.get()._field_Elem);;
	return _211bc9545_buildSptrFromType(&(*_self_), _117917_elem);
}



inline jule::Ptr<_211bc2c25_Ptr> _211bc9b61_buildPtrFromType(_211bc4980_typeChecker* _self_, jule::Ptr<_211bb6455_TypeKind>& _118340_elem) {
	{
		
		if ((_118340_elem == nullptr)) {
			_case_begin_212d5833d:;
			{
				return nullptr;
			}
		}
		else if (((_211bb927c_Arr(_118340_elem.ptr()) != nullptr) && _211bb927c_Arr(_118340_elem.ptr()).get()._field_Auto)) {
			_case_begin_212d583b5:;
			{
				_211bc5189_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_211bc2c25_Ptr>();
			}
		}
		_match_end_212d5821c:;
	};
	return jule::new_ptr<_211bc2c25_Ptr>(_211bc2c25_Ptr{._field_Elem=_118340_elem});
}



inline jule::Ptr<_211bc2c25_Ptr> _211bc9e6e_buildPtr(_211bc4980_typeChecker* _self_, jule::Ptr<_210e53e30_PtrTypeDecl> _119831_decl) {
	jule::Bool _119913_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_119913_notPlain;
	});;
	jule::Ptr<_211bb6455_TypeKind> _120317_elem = nullptr;;
	if ((!(_210e54282_IsUnsafe(_119831_decl.ptr())))) {
		_120317_elem=_211bcbbeb_checkDecl(&(*_self_), _119831_decl.get()._field_Elem);
		return _211bc9b61_buildPtrFromType(&(*_self_), _120317_elem);
	};
	return jule::new_ptr<_211bc2c25_Ptr>(_211bc2c25_Ptr{._field_Elem=_120317_elem});
}



inline jule::Ptr<_211bc011d_Slc> _211bca27c_buildSlc(_211bc4980_typeChecker* _self_, jule::Ptr<_210e53858_SlcTypeDecl> _121531_decl) {
	jule::Bool _121613_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_121613_notPlain;
	});;
	jule::Ptr<_211bb6455_TypeKind> _122017_elem = _211bcbbeb_checkDecl(&(*_self_), _121531_decl.get()._field_Elem);;
	{
		
		if ((_122017_elem == nullptr)) {
			_case_begin_212d5d71c:;
			{
				return nullptr;
			}
		}
		else if (((_211bb927c_Arr(_122017_elem.ptr()) != nullptr) && _211bb927c_Arr(_122017_elem.ptr()).get()._field_Auto)) {
			_case_begin_212d5d794:;
			{
				_211bc5189_pushErr(&(*_self_), _121531_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_212d5d662:;
	};
	return jule::new_ptr<_211bc011d_Slc>(_211bc011d_Slc{._field_Elem=_122017_elem});
}



inline jule::Ptr<_211bc22b8_Arr> _211bca58a_buildArr(_211bc4980_typeChecker* _self_, jule::Ptr<_210e545b2_ArrTypeDecl> _123631_decl) {
	jule::Bool _123713_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_123713_notPlain;
	});;
	jule::I64 _124117_n = 0LL;;
	if ((!(_210e5498b_AutoSized(_123631_decl.ptr())))) {
		jule::Ptr<_211b8a319_Data> _124421_size = _211ba7b50_evalExpr(_211b2ea72_eval((*_self_)._field_s, (*_self_)._field_lookup), _123631_decl.get()._field_Size);;
		if ((_124421_size == nullptr)) {
			return nullptr;
		};
		if ((!(_211b8abcc_IsConst(_124421_size.ptr())))) {
			_211bc5189_pushErr(&(*_self_), _123631_decl.get()._field_Size.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_211bb8567_Prim(_124421_size.get()._field_Kind.ptr()) == nullptr) || (!(_211b08c5a_IsInt(_211bb8567_Prim(_124421_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_211bc5189_pushErr(&(*_self_), _123631_decl.get()._field_Size.get()._field_Token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_124117_n=static_cast<jule::I64>(static_cast<jule::I64>(_2110113c7_AsI64(_124421_size.get()._field_Constant.ptr())));
		if ((_124117_n < 0LL)) {
			_211bc5189_pushErr(&(*_self_), _123631_decl.get()._field_Elem.get()._field_Token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_211113b17_BitSize != 64LL) && (static_cast<jule::F64>(_124117_n) > _2114ba83c_Max(jule::Str("int", 3))))) {
			_211bc5189_pushErr(&(*_self_), _123631_decl.get()._field_Size.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_211bb6455_TypeKind> _126717_elem = _211bcbbeb_checkDecl(&(*_self_), _123631_decl.get()._field_Elem);;
	{
		
		if ((_126717_elem == nullptr)) {
			_case_begin_212d6766b:;
			{
				return nullptr;
			}
		}
		else if (((_211bb927c_Arr(_126717_elem.ptr()) != nullptr) && _211bb927c_Arr(_126717_elem.ptr()).get()._field_Auto)) {
			_case_begin_212d676d2:;
			{
				_211bc5189_pushErr(&(*_self_), _123631_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_212d673e6:;
	};
	return jule::new_ptr<_211bc22b8_Arr>(_211bc22b8_Arr{._field_Auto=_210e5498b_AutoSized(_123631_decl.ptr()), ._field_N=_124117_n, ._field_Elem=_126717_elem});
}



inline jule::Ptr<_211bc16c4_Map> _211bca898_buildMap(_211bc4980_typeChecker* _self_, jule::Ptr<_210e54d10_MapTypeDecl> _128531_decl) {
	jule::Bool _128613_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_128613_notPlain;
	});;
	jule::Ptr<_211bb6455_TypeKind> _129017_key = _211bcbbeb_checkDecl(&(*_self_), _128531_decl.get()._field_Key);;
	if ((_129017_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_211bb6455_TypeKind> _129517_val = _211bcbbeb_checkDecl(&(*_self_), _128531_decl.get()._field_Val);;
	if ((_129517_val == nullptr)) {
		return nullptr;
	};
	if ((_211bb8ca4_Enum(_129517_val.ptr()) != nullptr)) {
		_211bc5189_pushErr(&(*_self_), _128531_decl.get()._field_Val.get()._field_Token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_211bc16c4_Map>(_211bc16c4_Map{._field_Key=_129017_key, ._field_Val=_129517_val});
}



inline jule::Ptr<_211bc0b9b_Tuple> _211bcaba6_buildTuple(_211bc4980_typeChecker* _self_, jule::Ptr<_210e53b44_TupleTypeDecl> _130933_decl) {
	jule::Slice<jule::Ptr<_211bb6455_TypeKind>> _131017_types = jule::Slice<jule::Ptr<_211bb6455_TypeKind>>::alloc(0LL,_130933_decl.get()._field_Types.len());;
	{
		auto &expr = _130933_decl.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_212d6d2dc:;
		if (it != expr.end()) {
			jule::Ptr<_210e520a4_TypeDecl> _131121_t = *it;
			{
				jule::Ptr<_211bb6455_TypeKind> _131221_kind = _211bcbbeb_checkDecl(&(*_self_), _131121_t);;
				if ((_131221_kind == nullptr)) {
					return nullptr;
				};
				_131017_types = jule::alloc_for_append(_131017_types,1);_131017_types.__push(_131221_kind);;
			}
			_iter_next_212d6d2dc:;
			++it;
			goto _iter_begin_212d6d2dc;
		}
		_iter_end_212d6d2dc:;
	};
	return jule::new_ptr<_211bc0b9b_Tuple>(_211bc0b9b_Tuple{._field_Types=_131017_types});
}



inline jule::Bool _211bcaeb4_checkFnTypes(_211bc4980_typeChecker* _self_, jule::Ptr<_211022c35_FnIns>& _132236_f) {
	jule::Bool _132249_ok = jule::Bool();
	{
		auto &expr = _132236_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_212d6ed9e:;
		if (it != expr.end()) {
			jule::Ptr<_211021d66_ParamIns> _132321_p = *it;
			{
				_132321_p.get()._field_Kind=_211bcb8dd_build(&(*_self_), _132321_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind);
				_132249_ok=(_132321_p.get()._field_Kind != nullptr);
				if ((!(_132249_ok))) {
					_132249_ok = false;
					return _132249_ok;
				};
				_211b31e4d_checkFnParamKind((*_self_)._field_s, _132321_p);
			}
			_iter_next_212d6ed9e:;
			++it;
			goto _iter_begin_212d6ed9e;
		}
		_iter_end_212d6ed9e:;
	};
	if ((!(_2110204e6_IsVoid(_132236_f.get()._field_Decl.ptr())))) {
		_132236_f.get()._field_Result=_211bcb8dd_build(&(*_self_), _132236_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind);
		_132249_ok = (_132236_f.get()._field_Result != nullptr);
		return _132249_ok;
	};
	_132249_ok = true;
	return _132249_ok;
}



inline jule::Ptr<_211022c35_FnIns> _211bcb2c2_buildFn(_211bc4980_typeChecker* _self_, jule::Ptr<_210e63db8_FnDecl> _134030_decl) {
	if ((_134030_decl.get()._field_Generics.len() > 0LL)) {
		_211bc5189_pushErr(&(*_self_), _134030_decl.get()._field_Token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_211020084_Fn> _134617_f = _211028d6d_buildFn(_134030_decl);;
	jule::I64 _134813_n = (*_self_)._field_s.get()._field_errors.len();;
	_211b38d67_checkFnDecl((*_self_)._field_s, _134617_f);
	if ((_134813_n != (*_self_)._field_s.get()._field_errors.len())) {
		return nullptr;
	};
	jule::Ptr<_211022c35_FnIns> _135417_ins = _211021470_instanceForce(_134617_f);;
	_135417_ins.get()._field_Anon=true;
	jule::Bool _135713_ok = _211bcaeb4_checkFnTypes(&(*_self_), _135417_ins);;
	if ((!(_135713_ok))) {
		return nullptr;
	};
	return _135417_ins;
}



inline jule::Trait<_211bb6026_Kind> _211bcb5d0_buildByNamespace(_211bc4980_typeChecker* _self_, jule::Ptr<_210e53171_NamespaceTypeDecl> _136539_decl) {
	jule::Str _136613_path = _211bce050_buildLinkPathByTokens(_136539_decl.get()._field_Idents);;
	jule::Ptr<_211b1c378_ImportInfo> _136717_imp = _211bd2086_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._211bd054b_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_211b1c378_ImportInfo>)>([=](jule::Ptr<_211b1c378_ImportInfo> _136752_imp) mutable -> jule::Bool {
		if (((_136539_decl.get()._field_Idents.len() == 1LL) && (_136752_imp.get()._field_Alias == _136613_path))) {
			return true;
		};
		return ((_136752_imp.get()._field_LinkPath == _136613_path) && _211b1eed5_isAccessibleViaSelection(_136752_imp.ptr()));
	}));;
	if (((_136717_imp == nullptr) || (!(_211b1e941_isLookupable(_136717_imp.ptr(), jule::Str("self", 4)))))) {
		_211bc5189_pushErr(&(*_self_), _136539_decl.get()._field_Idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_136613_path)}));
		return nullptr;
	};
	_211bc5541_disallowBuiltin(&(*_self_));
	jule::Trait<_211bd2086_Lookup> _138017_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_211bd2086_Lookup>(_136717_imp, 1);
	jule::Ptr<_211bb6455_TypeKind> _138217_kind = _211bcbbeb_checkDecl(&(*_self_), _136539_decl.get()._field_Kind);;
	(*_self_)._field_lookup=_138017_lookup;
	_211bc5365_allowBuiltin(&(*_self_));
	return jule::Trait<_211bb6026_Kind>(_138217_kind, 5);
}



inline jule::Ptr<_211bb6455_TypeKind> _211bcb8dd_build(_211bc4980_typeChecker* _self_, jule::Any& _138829_declKind) {
	jule::Trait<_211bb6026_Kind> _138917_kind = nullptr;;
	{
		auto &_match_expr{ _138829_declKind };
		
		if (_match_expr.type_is<jule::Ptr<_210e5266a_IdentTypeDecl>>()) {
			_case_begin_212d7dad3:;
			{
				jule::Trait<_211bb6026_Kind> _139221_t = _211bc8e29_buildIdent(&(*_self_), _138829_declKind.operator jule::Ptr<_210e5266a_IdentTypeDecl>());;
				if ((_139221_t != nullptr)) {
					_138917_kind=_139221_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e52cb9_SubIdentTypeDecl>>()) {
			_case_begin_212d7e6a5:;
			{
				jule::Trait<_211bb6026_Kind> _139721_t = _211bc9237_buildSubIdent(&(*_self_), _138829_declKind.operator jule::Ptr<_210e52cb9_SubIdentTypeDecl>());;
				if ((_139721_t != nullptr)) {
					_138917_kind=_139721_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e5345c_SptrTypeDecl>>()) {
			_case_begin_212d7e71b:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_211bbe6b1_Sptr> _140321_t = _211bc9853_buildSptr(&(*_self_), _138829_declKind.operator jule::Ptr<_210e5345c_SptrTypeDecl>());;
				if ((_140321_t != nullptr)) {
					_138917_kind=jule::Trait<_211bb6026_Kind>(_140321_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e53e30_PtrTypeDecl>>()) {
			_case_begin_212d7ccbe:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_211bc2c25_Ptr> _140921_t = _211bc9e6e_buildPtr(&(*_self_), _138829_declKind.operator jule::Ptr<_210e53e30_PtrTypeDecl>());;
				if ((_140921_t != nullptr)) {
					_138917_kind=jule::Trait<_211bb6026_Kind>(_140921_t, 12);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e53858_SlcTypeDecl>>()) {
			_case_begin_212d7cd35:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_211bc011d_Slc> _141521_t = _211bca27c_buildSlc(&(*_self_), _138829_declKind.operator jule::Ptr<_210e53858_SlcTypeDecl>());;
				if ((_141521_t != nullptr)) {
					_138917_kind=jule::Trait<_211bb6026_Kind>(_141521_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e545b2_ArrTypeDecl>>()) {
			_case_begin_212d7cd9b:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_211bc22b8_Arr> _142121_t = _211bca58a_buildArr(&(*_self_), _138829_declKind.operator jule::Ptr<_210e545b2_ArrTypeDecl>());;
				if ((_142121_t != nullptr)) {
					_138917_kind=jule::Trait<_211bb6026_Kind>(_142121_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e54d10_MapTypeDecl>>()) {
			_case_begin_212d7ce12:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_211bc16c4_Map> _142721_t = _211bca898_buildMap(&(*_self_), _138829_declKind.operator jule::Ptr<_210e54d10_MapTypeDecl>());;
				if ((_142721_t != nullptr)) {
					_138917_kind=jule::Trait<_211bb6026_Kind>(_142721_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e53b44_TupleTypeDecl>>()) {
			_case_begin_212d7eba0:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_211bc0b9b_Tuple> _143321_t = _211bcaba6_buildTuple(&(*_self_), _138829_declKind.operator jule::Ptr<_210e53b44_TupleTypeDecl>());;
				if ((_143321_t != nullptr)) {
					_138917_kind=jule::Trait<_211bb6026_Kind>(_143321_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e63db8_FnDecl>>()) {
			_case_begin_212d7ec16:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_211022c35_FnIns> _143921_t = _211bcb2c2_buildFn(&(*_self_), _138829_declKind.operator jule::Ptr<_210e63db8_FnDecl>());;
				if ((_143921_t != nullptr)) {
					_138917_kind=jule::Trait<_211bb6026_Kind>(_143921_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e53171_NamespaceTypeDecl>>()) {
			_case_begin_212d7ec7c:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_211bb6026_Kind> _144521_t = _211bcb5d0_buildByNamespace(&(*_self_), _138829_declKind.operator jule::Ptr<_210e53171_NamespaceTypeDecl>());;
				if ((_144521_t != nullptr)) {
					_138917_kind=_144521_t;
				};
			}
		}
		else {
			_case_begin_212d7cb26:;
			{
				jule::Any _145021_udeclKind = (*(((jule::Any*)((&(_138829_declKind))))));;
				{
					auto &_match_expr{ _145021_udeclKind };
					
					if (_match_expr.type_is<jule::Ptr<_211bbe6b1_Sptr>>()) {
						_case_begin_212d7da06:;
						{
							_138917_kind=jule::Trait<_211bb6026_Kind>(_145021_udeclKind.operator jule::Ptr<_211bbe6b1_Sptr>(), 7);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_211bc2c25_Ptr>>()) {
						_case_begin_212d7da6c:;
						{
							_138917_kind=jule::Trait<_211bb6026_Kind>(_145021_udeclKind.operator jule::Ptr<_211bc2c25_Ptr>(), 12);
						}
					}
					else {
						_case_begin_212d7d8a2:;
						{
							_211bc5189_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_212d7d7b4:;
				};
			}
		}
		_match_end_212d7cac1:;
	};
	if ((_138917_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _138917_kind };
		
		if (_match_expr.type_is<jule::Ptr<_211bb6455_TypeKind>>()) {
			_case_begin_212d8c064:;
			{
				return _138917_kind.operator jule::Ptr<_211bb6455_TypeKind>();
			}
		}
		else {
			_case_begin_212d8b52a:;
			{
				return jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=_138917_kind});
			}
		}
		_match_end_212d8b904:;
	};
}



inline jule::Ptr<_211bb6455_TypeKind> _211bcbbeb_checkDecl(_211bc4980_typeChecker* _self_, jule::Ptr<_210e520a4_TypeDecl>& _147433_decl) {
	jule::Ptr<_20e7ddc0b_Token> _147617_errorToken = (*_self_)._field_errorToken;;
	(*_self_)._field_errorToken=_147433_decl.get()._field_Token;
	jule::Ptr<_211bb6455_TypeKind> _147917_kind = _211bcb8dd_build(&(*_self_), _147433_decl.get()._field_Kind);;
	(*_self_)._field_errorToken=_147617_errorToken;
	return _147917_kind;
}



inline void _211bcbe71_check(_211bc4980_typeChecker* _self_, jule::Ptr<_211bba5ad_TypeSymbol>& _148529_t) {
	if ((_148529_t.get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_211bb6455_TypeKind> _148917_kind = _211bcbbeb_checkDecl(&(*_self_), _148529_t.get()._field_Decl);;
	if ((_148917_kind == nullptr)) {
		_211bbab41_removeKind(_148529_t.ptr());
		return;;
	};
	_148529_t.get()._field_Kind=_148917_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _211bc4980_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__211bcc5d1_identTypeDecl(jule::Str& _150130_ident, jule::Ptr<_210e5266a_IdentTypeDecl> _150142_t) {
	if ((_150142_t.get()._field_Ident == _150130_ident)) {
		return true;
	};
	{
		auto &expr = _150142_t.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_212d90b7d:;
		if (it != expr.end()) {
			jule::Ptr<_210e520a4_TypeDecl> &_150516_g = *it;
			{
				if (static__211bcc922_exist(_150130_ident,_150516_g.get()._field_Kind)) {
					return true;
				};
			}
			_iter_next_212d90b7d:;
			++it;
			goto _iter_begin_212d90b7d;
		}
		_iter_end_212d90b7d:;
	};
	return false;
}



inline jule::Bool static__211bcc922_exist(jule::Str& _151322_ident, jule::Any& _151335_k) {
	{
		auto &_match_expr{ _151335_k };
		
		if (_match_expr.type_is<jule::Ptr<_210e5266a_IdentTypeDecl>>()) {
			_case_begin_212d91ca0:;
			{
				return static__211bcc5d1_identTypeDecl(_151322_ident,_151335_k.operator jule::Ptr<_210e5266a_IdentTypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e52cb9_SubIdentTypeDecl>>()) {
			_case_begin_212d91d16:;
			{
				jule::Ptr<_210e52cb9_SubIdentTypeDecl> _151817_sit = _151335_k.operator jule::Ptr<_210e52cb9_SubIdentTypeDecl>();;
				{
					auto &expr = _151817_sit.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_212d93620:;
					if (it != expr.end()) {
						jule::Ptr<_210e5266a_IdentTypeDecl> &_151920_id = *it;
						{
							if (static__211bcc5d1_identTypeDecl(_151322_ident,_151920_id)) {
								return true;
							};
						}
						_iter_next_212d93620:;
						++it;
						goto _iter_begin_212d93620;
					}
					_iter_end_212d93620:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e5345c_SptrTypeDecl>>()) {
			_case_begin_212d92003:;
			{
				jule::Ptr<_210e5345c_SptrTypeDecl> _152617_sptr = _151335_k.operator jule::Ptr<_210e5345c_SptrTypeDecl>();;
				return static__211bcc922_exist(_151322_ident,_152617_sptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e53e30_PtrTypeDecl>>()) {
			_case_begin_212d92069:;
			{
				jule::Ptr<_210e53e30_PtrTypeDecl> _152917_ptr = _151335_k.operator jule::Ptr<_210e53e30_PtrTypeDecl>();;
				return static__211bcc922_exist(_151322_ident,_152917_ptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e53858_SlcTypeDecl>>()) {
			_case_begin_212d920d0:;
			{
				jule::Ptr<_210e53858_SlcTypeDecl> _153217_slc = _151335_k.operator jule::Ptr<_210e53858_SlcTypeDecl>();;
				return static__211bcc922_exist(_151322_ident,_153217_slc.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e545b2_ArrTypeDecl>>()) {
			_case_begin_212d92146:;
			{
				jule::Ptr<_210e545b2_ArrTypeDecl> _153517_arr = _151335_k.operator jule::Ptr<_210e545b2_ArrTypeDecl>();;
				return static__211bcc922_exist(_151322_ident,_153517_arr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e54d10_MapTypeDecl>>()) {
			_case_begin_212d921ac:;
			{
				jule::Ptr<_210e54d10_MapTypeDecl> _153817_map = _151335_k.operator jule::Ptr<_210e54d10_MapTypeDecl>();;
				return (static__211bcc922_exist(_151322_ident,_153817_map.get()._field_Key.get()._field_Kind) || static__211bcc922_exist(_151322_ident,_153817_map.get()._field_Val.get()._field_Kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e63db8_FnDecl>>()) {
			_case_begin_212d92223:;
			{
				jule::Ptr<_210e63db8_FnDecl> _154217_f = _151335_k.operator jule::Ptr<_210e63db8_FnDecl>();;
				{
					auto &expr = _154217_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_212d98aa9:;
					if (it != expr.end()) {
						jule::Ptr<_210e62a98_ParamDecl> &_154320_p = *it;
						{
							if (_210e62e0b_IsSelf(_154320_p.ptr())) {
								goto _iter_next_212d98aa9;
							};
							if (static__211bcc922_exist(_151322_ident,_154320_p.get()._field_Kind.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_212d98aa9:;
						++it;
						goto _iter_begin_212d98aa9;
					}
					_iter_end_212d98aa9:;
				};
				if ((_154217_f.get()._field_Result != nullptr)) {
					return static__211bcc922_exist(_151322_ident,_154217_f.get()._field_Result.get()._field_Kind.get()._field_Kind);
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e53b44_TupleTypeDecl>>()) {
			_case_begin_212d9229a:;
			{
				jule::Ptr<_210e53b44_TupleTypeDecl> _155617_tup = _151335_k.operator jule::Ptr<_210e53b44_TupleTypeDecl>();;
				{
					auto &expr = _155617_tup.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_212d9b183:;
					if (it != expr.end()) {
						jule::Ptr<_210e520a4_TypeDecl> &_155720_t = *it;
						{
							if (static__211bcc922_exist(_151322_ident,_155720_t.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_212d9b183:;
						++it;
						goto _iter_begin_212d9b183;
					}
					_iter_end_212d9b183:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e53171_NamespaceTypeDecl>>()) {
			_case_begin_212d92322:;
			{
				jule::Ptr<_210e53171_NamespaceTypeDecl> _156417_ns = _151335_k.operator jule::Ptr<_210e53171_NamespaceTypeDecl>();;
				return static__211bcc922_exist(_151322_ident,_156417_ns.get()._field_Kind.get()._field_Kind);
			}
		}
		else {
			_case_begin_212d91ac4:;
			{
				return false;
			}
		}
		_match_end_212d91a6e:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _211bcc191_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2123c73a2_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21242be0c_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _21242cdb9_stop(_21242c737_scopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _21242d12d_stopped(_21242c737_scopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _21242d392_finished(_21242c737_scopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _21242d606_isLastSt(_21242c737_scopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _21242d925_pushErr(_21242c737_scopeParser* _self_, jule::Ptr<_20e7ddc0b_Token> _19226_token, jule::Str _19241_fmt) {
	_2124497dc_pushErr((*_self_)._field_p.ptr(), _19226_token,_19241_fmt,jule::Slice<jule::Any>());
}



inline void _21242dc44_pushSuggestion(_21242c737_scopeParser* _self_, jule::Str _19733_fmt, jule::Slice<jule::Any> _19746_args) {
	_212449b0b_pushSuggestion((*_self_)._field_p.ptr(), _19733_fmt,jule::Any(_19746_args));
}



inline void _21242deb9_insertAsNext(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _20136_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_21242be0c_stmt>(_21242be0c_stmt{._field_tokens=_20136_tokens, });
}



inline jule::Ptr<_21242be0c_stmt> _21242e22d_next(_21242c737_scopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_210e623c2_ScopeTree> _21242e5d5_buildScope(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _21134_tokens, jule::Ptr<_20e7ddc0b_Token> _21156_end) {
	jule::Ptr<_210e623c2_ScopeTree> _21217_s = _21242acda_newScope();;
	_21217_s.get()._field_Parent=(*_self_)._field_s;
	_21217_s.get()._field_End=_21156_end;
	_21242c737_scopeParser _21517_ssp = _21242c737_scopeParser{._field_p=(*_self_)._field_p, };;
	_2124382c0_build(&_21517_ssp, _21134_tokens,_21217_s);
	return _21217_s;
}



inline jule::Ptr<_210e64d97_VarDecl> _21242e8e3_buildVarSt(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _22234_tokens) {
	jule::Ptr<_210e64d97_VarDecl> _22317_v = _21244c328_buildVar((*_self_)._field_p, _22234_tokens);;
	_22317_v.get()._field_Scope=(*_self_)._field_s;
	return _22317_v;
}



inline jule::Ptr<_210e6524e_RetSt> _21242ec01_buildRetSt(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _22833_tokens) {
	jule::Ptr<_210e6524e_RetSt> _22917_st = jule::new_ptr<_210e6524e_RetSt>(_210e6524e_RetSt{._field_Token=_22833_tokens[0LL], });;
	if ((_22833_tokens.len() > 1LL)) {
		_22833_tokens=_22833_tokens.slice(1LL);
		_22917_st.get()._field_Expr=_212449e19_buildExpr((*_self_)._field_p, _22833_tokens);
	};
	return _22917_st;
}



inline jule::Ptr<_210e658ae_Iter> _21243000e_buildWhileNextIter(_21242c737_scopeParser* _self_, jule::Ptr<_21242be0c_stmt>& _23942_s) {
	jule::Ptr<_210e658ae_Iter> _24017_it = jule::new_ptr<_210e658ae_Iter>(_210e658ae_Iter{._field_Token=_23942_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _24317_tokens = _23942_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_210e66184_WhileKind> _24417_kind = jule::new_ptr<_210e66184_WhileKind>();;
	if ((_24317_tokens.len() > 0LL)) {
		_24417_kind.get()._field_Expr=_212449e19_buildExpr((*_self_)._field_p, _24317_tokens);
	};
	if (_21242d606_isLastSt(&(*_self_))) {
		_21242d925_pushErr(&(*_self_), _24017_it.get()._field_Token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24317_tokens=_21242e22d_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _25617_stTokens = _212444023_getBlockExpr(_24317_tokens);;
	if ((_25617_stTokens.len() > 0LL)) {
		jule::Ptr<_21242be0c_stmt> _25821_stmt = jule::new_ptr<_21242be0c_stmt>(_21242be0c_stmt{._field_tokens=_25617_stTokens, ._field_terminated=_23942_s.get()._field_terminated});;
		_24417_kind.get()._field_NextToken=_25617_stTokens[0LL];
		_24417_kind.get()._field_Next=_212437ea1_buildSt(&(*_self_), _25821_stmt);
	};
	jule::I64 _26617_i = _25617_stTokens.len();;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _26717_blockTokens = _2124470e2_range(_26617_i,jule::Str("{", 1),jule::Str("}", 1),_24317_tokens);;
	if ((_26717_blockTokens == nullptr)) {
		_21242cdb9_stop(&(*_self_));
		_21242d925_pushErr(&(*_self_), _24017_it.get()._field_Token,jule::Str("body is not exist", 17));
		_21242dc44_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26617_i < _24317_tokens.len())) {
		_21242d925_pushErr(&(*_self_), _24317_tokens[_26617_i],jule::Str("invalid syntax", 14));
	};
	_24017_it.get()._field_Scope=_21242e5d5_buildScope(&(*_self_), _26717_blockTokens,_24317_tokens[(_26617_i - 1LL)]);
	_24017_it.get()._field_Kind=static_cast<jule::Any>(_24417_kind);
	return _24017_it;
}



inline jule::Ptr<_210e66184_WhileKind> _21243031c_buildWhileIterKind(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _28442_tokens) {
	return jule::new_ptr<_210e66184_WhileKind>(_210e66184_WhileKind{._field_Expr=_212449e19_buildExpr((*_self_)._field_p, _28442_tokens), });
}



inline jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _21243062a_getRangeKindKeysTokens(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _29046_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _29118_vars;;
	jule::Slice<_20e4ba377_Log> _29124_errs;;
	std::tie(_29118_vars,_29124_errs) = _212447b5e_parts(_29046_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29124_errs);
	return _29118_vars;
}



inline jule::Ptr<_210e64d97_VarDecl> _212430938_buildRangeKindKey(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _29641_tokens) {
	if ((_29641_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_210e64d97_VarDecl> _30017_key = jule::new_ptr<_210e64d97_VarDecl>(_210e64d97_VarDecl{._field_Token=_29641_tokens[0LL], });;
	if ((_30017_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_30017_key.get()._field_Mutable=true;
		if ((_29641_tokens.len() == 1LL)) {
			_21242d925_pushErr(&(*_self_), _30017_key.get()._field_Token,jule::Str("invalid syntax", 14));
		};
		_30017_key.get()._field_Token=_29641_tokens[1LL];
	} else if ((_29641_tokens.len() > 1LL)) {
		_21242d925_pushErr(&(*_self_), _29641_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_30017_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_21242d925_pushErr(&(*_self_), _30017_key.get()._field_Token,jule::Str("invalid syntax", 14));
		_21242dc44_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_30017_key.get()._field_Ident=_30017_key.get()._field_Token.get()._field_Kind;
	return _30017_key;
}



inline jule::Slice<jule::Ptr<_210e64d97_VarDecl>> _212430c46_buildRangeKindKeys(_21242c737_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>>& _32142_parts) {
	jule::Slice<jule::Ptr<_210e64d97_VarDecl>> _32217_keys = nullptr;;
	{
		auto &expr = _32142_parts;
		auto it = expr.begin();
		_iter_begin_224a02e4e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _32321_tokens = *it;
			{
				_32217_keys = jule::alloc_for_append(_32217_keys,1);_32217_keys.__push(_212430938_buildRangeKindKey(&(*_self_), _32321_tokens));;
			}
			_iter_next_224a02e4e:;
			++it;
			goto _iter_begin_224a02e4e;
		}
		_iter_end_224a02e4e:;
	};
	return _32217_keys;
}



inline void _212431087_setupRangeKindKeysPlain(_21242c737_scopeParser* _self_, jule::Ptr<_210e66a25_RangeKind>& _32947_rng, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _32969_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _33017_keyTokens = _21243062a_getRangeKindKeysTokens(&(*_self_), _32969_tokens);;
	if ((_33017_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_33017_keyTokens.len() > 2LL)) {
		_21242d925_pushErr(&(*_self_), _32947_rng.get()._field_InToken,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_210e64d97_VarDecl>> _33717_keys = _212430c46_buildRangeKindKeys(&(*_self_), _33017_keyTokens);;
	_32947_rng.get()._field_KeyA=_33717_keys[0LL];
	if ((_33717_keys.len() > 1LL)) {
		_32947_rng.get()._field_KeyB=_33717_keys[1LL];
	};
}



inline void _2124313d9_setupRangeKindKeysExplicit(_21242c737_scopeParser* _self_, jule::Ptr<_210e66a25_RangeKind>& _34450_rng, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _34472_tokens) {
	jule::I64 _34517_i = 0LL;;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _34617_rang = _2124470e2_range(_34517_i,jule::Str("(", 1),jule::Str(")", 1),_34472_tokens);;
	if ((_34517_i < _34472_tokens.len())) {
		_21242d925_pushErr(&(*_self_), _34450_rng.get()._field_InToken,jule::Str("invalid syntax", 14));
	};
	_212431087_setupRangeKindKeysPlain(&(*_self_), _34450_rng,_34617_rang);
}



inline void _212431719_setupRangeKindKeys(_21242c737_scopeParser* _self_, jule::Ptr<_210e66a25_RangeKind>& _35342_rng, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _35364_tokens) {
	if ((_35364_tokens[0LL].get()._field_Id == static_cast<jule::U64>(3LLU))) {
		if ((_35364_tokens[0LL].get()._field_Kind != jule::Str("(", 1))) {
			_21242d925_pushErr(&(*_self_), _35364_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_2124313d9_setupRangeKindKeysExplicit(&(*_self_), _35342_rng,_35364_tokens);
		return;;
	};
	_212431087_setupRangeKindKeysPlain(&(*_self_), _35342_rng,_35364_tokens);
}



inline jule::Ptr<_210e66a25_RangeKind> _212431b6a_buildRangeIterKind(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _36542_var_tokens, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _36614_exprTokens, jule::Ptr<_20e7ddc0b_Token>& _36641_inToken) {
	jule::Ptr<_210e66a25_RangeKind> _36717_rng = jule::new_ptr<_210e66a25_RangeKind>(_210e66a25_RangeKind{._field_InToken=_36641_inToken, });;
	if ((_36614_exprTokens.len() == 0LL)) {
		_21242d925_pushErr(&(*_self_), _36717_rng.get()._field_InToken,jule::Str("expression missing", 18));
		return _36717_rng;
	};
	_36717_rng.get()._field_Expr=_212449e19_buildExpr((*_self_)._field_p, _36614_exprTokens);
	if ((_36542_var_tokens.len() > 0LL)) {
		_212431719_setupRangeKindKeys(&(*_self_), _36717_rng,_36542_var_tokens);
	};
	return _36717_rng;
}



inline jule::Any _212432022_buildCommonIterKind(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _38143_tokens, jule::Ptr<_20e7ddc0b_Token>& _38162_err_tok) {
	jule::I64 _38217_braceN = 0LL;;
	{
		auto &expr = _38143_tokens;
		auto it = expr.begin();
		_iter_begin_224a0dbe6:;
		if (it != expr.end()) {
			jule::I64 _38314_i = it - expr.begin();
			jule::Ptr<_20e7ddc0b_Token> _38321_tok = *it;
			{
				if ((_38321_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38321_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_224a0eba3:;
							{
								(_38217_braceN)++;
								goto _iter_next_224a0dbe6;
							}
						}
						else {
							_case_begin_224a0ee7d:;
							{
								(_38217_braceN)--;
							}
						}
						_match_end_224a0ec6e:;
					};
				};
				if ((_38217_braceN != 0LL)) {
					goto _iter_next_224a0dbe6;
				};
				{
					auto &_match_expr{ _38321_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_224a10456:;
						{
							jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _40025_declTokens = _38143_tokens.slice(0LL,_38314_i);;
							jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _40125_exprTokens = _38143_tokens.slice((_38314_i + 1LL));;
							return static_cast<jule::Any>(_212431b6a_buildRangeIterKind(&(*_self_), _40025_declTokens,_40125_exprTokens,_38321_tok));
						}
					}
					_match_end_224a10be8:;
				};
			}
			_iter_next_224a0dbe6:;
			++it;
			_38314_i++;
			goto _iter_begin_224a0dbe6;
		}
		_iter_end_224a0dbe6:;
	};
	return static_cast<jule::Any>(_21243031c_buildWhileIterKind(&(*_self_), _38143_tokens));
}



inline jule::Ptr<_210e658ae_Iter> _212432330_buildCommonIter(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _40838_tokens) {
	jule::Ptr<_210e658ae_Iter> _40917_it = jule::new_ptr<_210e658ae_Iter>(_210e658ae_Iter{._field_Token=_40838_tokens[0LL], });;
	_40838_tokens=_40838_tokens.slice(1LL);
	if ((_40838_tokens.len() == 0LL)) {
		_21242cdb9_stop(&(*_self_));
		_21242d925_pushErr(&(*_self_), _40917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_21242dc44_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _41917_exprTokens = _212444023_getBlockExpr(_40838_tokens);;
	if ((_41917_exprTokens.len() > 0LL)) {
		_40917_it.get()._field_Kind=_212432022_buildCommonIterKind(&(*_self_), _41917_exprTokens,_40917_it.get()._field_Token);
	};
	jule::I64 _42317_i = _41917_exprTokens.len();;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _42417_scopeTokens = _2124470e2_range(_42317_i,jule::Str("{", 1),jule::Str("}", 1),_40838_tokens);;
	if ((_42417_scopeTokens == nullptr)) {
		_21242cdb9_stop(&(*_self_));
		_21242d925_pushErr(&(*_self_), _40917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_21242dc44_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42317_i < _40838_tokens.len())) {
		_21242d925_pushErr(&(*_self_), _40838_tokens[_42317_i],jule::Str("invalid syntax", 14));
	};
	_40917_it.get()._field_Scope=_21242e5d5_buildScope(&(*_self_), _42417_scopeTokens,_40838_tokens[(_42317_i - 1LL)]);
	return _40917_it;
}



inline jule::Ptr<_210e658ae_Iter> _21243263d_buildIterSt(_21242c737_scopeParser* _self_, jule::Ptr<_21242be0c_stmt>& _43835_st) {
	if (_43835_st.get()._field_terminated) {
		return _21243000e_buildWhileNextIter(&(*_self_), _43835_st);
	};
	return _212432330_buildCommonIter(&(*_self_), _43835_st.get()._field_tokens);
}



inline jule::Ptr<_210e66dcc_BreakSt> _21243294b_buildBreakSt(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _44536_tokens) {
	jule::Ptr<_210e66dcc_BreakSt> _44617_brk = jule::new_ptr<_210e66dcc_BreakSt>(_210e66dcc_BreakSt{._field_Token=_44536_tokens[0LL], });;
	if ((_44536_tokens.len() > 1LL)) {
		if ((_44536_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_21242d925_pushErr(&(*_self_), _44536_tokens[1LL],jule::Str("invalid syntax", 14));
			_21242dc44_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44617_brk.get()._field_Label=_44536_tokens[1LL];
			if ((_44536_tokens.len() > 2LL)) {
				_21242d925_pushErr(&(*_self_), _44536_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44617_brk;
}



inline jule::Ptr<_210e67284_ContSt> _212432c59_buildContSt(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _46335_tokens) {
	jule::Ptr<_210e67284_ContSt> _46417_cont = jule::new_ptr<_210e67284_ContSt>(_210e67284_ContSt{._field_Token=_46335_tokens[0LL], });;
	if ((_46335_tokens.len() > 1LL)) {
		if ((_46335_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_21242d925_pushErr(&(*_self_), _46335_tokens[1LL],jule::Str("invalid syntax", 14));
			_21242dc44_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46417_cont.get()._field_Label=_46335_tokens[1LL];
			if ((_46335_tokens.len() > 2LL)) {
				_21242d925_pushErr(&(*_self_), _46335_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46417_cont;
}



inline jule::Ptr<_210e67707_If> _212433067_buildIf(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _48131_tokens) {
	jule::Ptr<_210e67707_If> _48217_model = jule::new_ptr<_210e67707_If>(_210e67707_If{._field_Token=_48131_tokens[0LL], });;
	_48131_tokens=_48131_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _48617_exprTokens = _212444023_getBlockExpr(_48131_tokens);;
	jule::I64 _48717_i = 0LL;;
	if ((_48617_exprTokens.len() == 0LL)) {
		_21242d925_pushErr(&(*_self_), _48217_model.get()._field_Token,jule::Str("expression missing", 18));
	} else {
		_48717_i=static_cast<jule::I64>(_48617_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _49317_scopeTokens = _2124470e2_range(_48717_i,jule::Str("{", 1),jule::Str("}", 1),_48131_tokens);;
	if ((_49317_scopeTokens == nullptr)) {
		_21242cdb9_stop(&(*_self_));
		_21242d925_pushErr(&(*_self_), _48217_model.get()._field_Token,jule::Str("body is not exist", 17));
		_21242dc44_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20e7ddc0b_Token> _50017_end = _48131_tokens[(_48717_i - 1LL)];;
	if ((_48717_i < _48131_tokens.len())) {
		if ((_48131_tokens[_48717_i].get()._field_Id == static_cast<jule::U64>(17LLU))) {
			_48131_tokens=_48131_tokens.slice(_48717_i);
		} else {
			_21242d925_pushErr(&(*_self_), _48131_tokens[_48717_i],jule::Str("invalid syntax", 14));
			_48131_tokens=nullptr;
		};
	};
	_48217_model.get()._field_Expr=_212449e19_buildExpr((*_self_)._field_p, _48617_exprTokens);
	_48217_model.get()._field_Scope=_21242e5d5_buildScope(&(*_self_), _49317_scopeTokens,_50017_end);
	return _48217_model;
}



inline jule::Ptr<_210e67aae_Else> _212433375_buildElse(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _51433_tokens) {
	jule::Ptr<_210e67aae_Else> _51517_els = jule::new_ptr<_210e67aae_Else>(_210e67aae_Else{._field_Token=_51433_tokens[0LL], });;
	_51433_tokens=_51433_tokens.slice(1LL);
	jule::I64 _51917_i = 0LL;;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _52017_scopeTokens = _2124470e2_range(_51917_i,jule::Str("{", 1),jule::Str("}", 1),_51433_tokens);;
	if ((_52017_scopeTokens == nullptr)) {
		if ((_51917_i < _51433_tokens.len())) {
			_21242d925_pushErr(&(*_self_), _51517_els.get()._field_Token,jule::Str("else's cannot have any expression", 33));
		} else {
			_21242cdb9_stop(&(*_self_));
			_21242d925_pushErr(&(*_self_), _51517_els.get()._field_Token,jule::Str("body is not exist", 17));
			_21242dc44_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51917_i < _51433_tokens.len())) {
		_21242d925_pushErr(&(*_self_), _51433_tokens[_51917_i],jule::Str("invalid syntax", 14));
	};
	_51517_els.get()._field_Scope=_21242e5d5_buildScope(&(*_self_), _52017_scopeTokens,_51433_tokens[(_51917_i - 1LL)]);
	return _51517_els;
}



inline jule::Ptr<_210e68032_Conditional> _212433683_buildIfElseChain(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _53839_tokens) {
	jule::Ptr<_210e68032_Conditional> _53917_chain = jule::new_ptr<_210e68032_Conditional>(_210e68032_Conditional{._field_Head=_212433067_buildIf(&(*_self_), _53839_tokens), });;
	if ((_53917_chain.get()._field_Head == nullptr)) {
		return nullptr;
	};
	while ((_53839_tokens.len() != 0LL)) {
		{
			if ((_53839_tokens[0LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_224a31565;
			};
			if (((_53839_tokens.len() > 1LL) && (_53839_tokens[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
				_53839_tokens=_53839_tokens.slice(1LL);
				jule::Ptr<_210e67707_If> _55125_elif = _212433067_buildIf(&(*_self_), _53839_tokens);;
				_53917_chain.get()._field_Tail = jule::alloc_for_append(_53917_chain.get()._field_Tail,1);_53917_chain.get()._field_Tail.__push(_55125_elif);;
				goto _iter_next_224a31565;
			};
			_53917_chain.get()._field_Default=_212433375_buildElse(&(*_self_), _53839_tokens);
			goto _iter_end_224a31565;
		}
	_iter_next_224a31565:;
	}
	_iter_end_224a31565:;;
	return _53917_chain;
}



inline jule::Ptr<_210e581ba_CoExpr> _212433991_buildCoCallSt(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _56136_tokens) {
	jule::Ptr<_210e581ba_CoExpr> _56217_c = jule::new_ptr<_210e581ba_CoExpr>(_210e581ba_CoExpr{._field_Token=_56136_tokens[0LL], });;
	_56136_tokens=_56136_tokens.slice(1LL);
	_56217_c.get()._field_Expr=_212449e19_buildExpr((*_self_)._field_p, _56136_tokens);
	return _56217_c;
}



inline jule::Ptr<_210e5ede7_GotoSt> _212433c9e_buildGotoSt(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _57035_tokens) {
	jule::Ptr<_210e5ede7_GotoSt> _57117_gt = jule::new_ptr<_210e5ede7_GotoSt>(_210e5ede7_GotoSt{._field_Token=_57035_tokens[0LL], });;
	if ((_57035_tokens.len() == 1LL)) {
		_21242d925_pushErr(&(*_self_), _57117_gt.get()._field_Token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_57035_tokens.len() > 2LL)) {
		_21242d925_pushErr(&(*_self_), _57035_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_20e7ddc0b_Token> _58017_identToken = _57035_tokens[1LL];;
	if ((_58017_identToken.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_21242d925_pushErr(&(*_self_), _58017_identToken,jule::Str("invalid syntax", 14));
		_21242dc44_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57117_gt;
	};
	_57117_gt.get()._field_Label=_58017_identToken;
	return _57117_gt;
}



inline jule::Ptr<_210e601d3_FallSt> _2124340ac_buildFallSt(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _59035_tokens) {
	jule::Ptr<_210e601d3_FallSt> _59117_fll = jule::new_ptr<_210e601d3_FallSt>(_210e601d3_FallSt{._field_Token=_59035_tokens[0LL]});;
	if ((_59035_tokens.len() > 1LL)) {
		_21242d925_pushErr(&(*_self_), _59035_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59117_fll;
}



inline jule::Ptr<_210e68708_TypeAliasDecl> _2124343ba_buildTypeAliasSt(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _60040_tokens) {
	jule::Ptr<_210e68708_TypeAliasDecl> _60117_tad = _21244b514_buildTypeAliasDecl((*_self_)._field_p, _60040_tokens);;
	_60117_tad.get()._field_Scope=(*_self_)._field_s;
	return _60117_tad;
}



inline void _21243482c_pushCaseExpr(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _60635_tokens, jule::Ptr<_20e7ddc0b_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_210e565c5_Expr>>& _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I64 _61321_i = 0LL;;
		jule::Ptr<_210e520a4_TypeDecl> _61422_t;;
		jule::Bool _61425_ok;;
		std::tie(_61422_t,_61425_ok) = _21244b206_buildType((*_self_)._field_p, _60635_tokens,(&(_61321_i)),true);
		if (_61425_ok) {
			_60731_exprs = jule::alloc_for_append(_60731_exprs,1);_60731_exprs.__push(jule::new_ptr<_210e565c5_Expr>(_210e565c5_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_61422_t)}));;
			if ((_61321_i < _60635_tokens.len())) {
				_21242d925_pushErr(&(*_self_), _60635_tokens[_61321_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_60731_exprs = jule::alloc_for_append(_60731_exprs,1);_60731_exprs.__push(_212449e19_buildExpr((*_self_)._field_p, _60635_tokens));;
}



inline jule::Slice<jule::Ptr<_210e565c5_Expr>> _212434c7d_buildCaseExprs(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _63038_tokens, jule::Ptr<_20e7ddc0b_Token>& _63061_colon, jule::Bool _63076_typeMatch) {
	jule::Slice<jule::Ptr<_210e565c5_Expr>> _63117_exprs = jule::Slice<jule::Ptr<_210e565c5_Expr>>::alloc(0LL,1LL);;
	jule::I64 _63317_braceN = 0LL;;
	jule::I64 _63417_j = 0LL;;
	{
		auto &expr = _63038_tokens;
		auto it = expr.begin();
		_iter_begin_224a41ed2:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_20e7ddc0b_Token> _63521_tok = *it;
			{
				if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63521_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_224a430c1:;
							{
								(_63317_braceN)++;
							}
						}
						else {
							_case_begin_224a4339b:;
							{
								(_63317_braceN)--;
							}
						}
						_match_end_224a4318c:;
					};
					goto _iter_next_224a41ed2;
				} else if ((_63317_braceN != 0LL)) {
					goto _iter_next_224a41ed2;
				};
				{
					
					if (((_63521_tok.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_63521_tok.get()._field_Kind == jule::Str("|", 1)))) {
						_case_begin_224a440a0:;
						{
							jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _65121_exprTokens = _63038_tokens.slice(_63417_j,_63514_i);;
							if ((_65121_exprTokens.len() == 0LL)) {
								_21242d925_pushErr(&(*_self_), _63521_tok,jule::Str("expression missing", 18));
							} else {
								_21243482c_pushCaseExpr(&(*_self_), _63038_tokens.slice(_63417_j,_63514_i),_63521_tok,_63076_typeMatch,_63117_exprs);
							};
							_63417_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_case_begin_224a44116:;
						{
							_63061_colon=_63521_tok;
							_21243482c_pushCaseExpr(&(*_self_), _63038_tokens.slice(_63417_j,_63514_i),_63521_tok,_63076_typeMatch,_63117_exprs);
							_63038_tokens=_63038_tokens.slice((_63514_i + 1LL));
							return _63117_exprs;
						}
					}
					_match_end_224a43874:;
				};
			}
			_iter_next_224a41ed2:;
			++it;
			_63514_i++;
			goto _iter_begin_224a41ed2;
		}
		_iter_end_224a41ed2:;
	};
	_21242d925_pushErr(&(*_self_), _63038_tokens[0LL],jule::Str("invalid syntax", 14));
	_63038_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_210e623c2_ScopeTree> _21243508b_buildCaseScope(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _67038_tokens) {
	jule::I64 _67117_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67321_i = 0LL;;
			jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _67422_next;;
			std::tie(_67422_next,std::ignore) = _21242bb10_skipSt(_67321_i,_67038_tokens.slice(_67117_n));
			if ((_67422_next.len() == 0LL)) {
				goto _iter_end_224a47c52;
			};
			jule::Ptr<_20e7ddc0b_Token> _67817_tok = _67422_next[0LL];;
			if (((_67817_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_67817_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_67117_n+=_67321_i;
				goto _iter_next_224a47c52;
			};
			jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _68321_scopeTokens = _67038_tokens.slice(0LL,_67117_n);;
			jule::Ptr<_210e623c2_ScopeTree> _68421_scope = _21242e5d5_buildScope(&(*_self_), _68321_scopeTokens,_67038_tokens[_67117_n]);;
			_67038_tokens=_67038_tokens.slice(_67117_n);
			return _68421_scope;
		}
	_iter_next_224a47c52:;
	}
	_iter_end_224a47c52:;;
	jule::Ptr<_20e7ddc0b_Token> _68817_end = jule::Ptr<_20e7ddc0b_Token>();;
	if ((_67038_tokens.len() > 0LL)) {
		_68817_end=_67038_tokens[(_67038_tokens.len() - 1LL)];
	};
	jule::Ptr<_210e623c2_ScopeTree> _69217_scope = _21242e5d5_buildScope(&(*_self_), _67038_tokens,_68817_end);;
	_67038_tokens=nullptr;
	return _69217_scope;
}



inline std::tuple<jule::Ptr<_210e68b7b_Case>,jule::Bool> _212435443_buildCase(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _69733_tokens, jule::Bool _69751_typeMatch) {
	jule::Ptr<_210e68b7b_Case> _69817_c = jule::new_ptr<_210e68b7b_Case>(_210e68b7b_Case{._field_Token=_69733_tokens[0LL], });;
	_69733_tokens=_69733_tokens.slice(1LL);
	jule::Ptr<_20e7ddc0b_Token> _70217_colon = nullptr;;
	_69817_c.get()._field_Exprs=_212434c7d_buildCaseExprs(&(*_self_), _69733_tokens,_70217_colon,_69751_typeMatch);
	_69817_c.get()._field_Scope=_21243508b_buildCaseScope(&(*_self_), _69733_tokens);
	if ((_69817_c.get()._field_Scope.get()._field_End == nullptr)) {
		_69817_c.get()._field_Scope.get()._field_End=_70217_colon;
	};
	jule::Bool _70813_isDefault = (_69817_c.get()._field_Exprs.len() == 0LL);;
	return std::make_tuple(_69817_c,_70813_isDefault);
}



inline std::tuple<jule::Slice<jule::Ptr<_210e68b7b_Case>>,jule::Ptr<_210e67aae_Else>> _2124357ea_buildCases(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _71233_tokens, jule::Bool _71251_typeMatch) {
	jule::Slice<jule::Ptr<_210e68b7b_Case>> _71317_cases = nullptr;;
	jule::Ptr<_210e67aae_Else> _71417_def = nullptr;;
	jule::Bool _71517_defNotLast = false;;
	while ((_71233_tokens.len() > 0LL)) {
		{
			jule::Ptr<_20e7ddc0b_Token> _71721_tok = _71233_tokens[0LL];;
			if (((_71721_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_71721_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_21242d925_pushErr(&(*_self_), _71721_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_224a51a08;
			};
			jule::Ptr<_210e68b7b_Case> _72222_c;;
			jule::Bool _72225_isDefault;;
			std::tie(_72222_c,_72225_isDefault) = _212435443_buildCase(&(*_self_), _71233_tokens,_71251_typeMatch);
			if (_72225_isDefault) {
				_72222_c.get()._field_Token=_71721_tok;
				if ((_71417_def == nullptr)) {
					_71417_def=jule::new_ptr<_210e67aae_Else>(_210e67aae_Else{._field_Token=_72222_c.get()._field_Token, ._field_Scope=_72222_c.get()._field_Scope});
				} else {
					_21242d925_pushErr(&(*_self_), _71721_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_71517_defNotLast=(_71517_defNotLast || (_71417_def != nullptr));
				_71317_cases = jule::alloc_for_append(_71317_cases,1);_71317_cases.__push(_72222_c);;
			};
		}
	_iter_next_224a51a08:;
	}
	_iter_end_224a51a08:;;
	if (_71517_defNotLast) {
		_21242d925_pushErr(&(*_self_), _71417_def.get()._field_Token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_71317_cases,_71417_def);
}



inline jule::Ptr<_210e69352_MatchCase> _212435b08_buildMatchCase(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _74637_tokens) {
	jule::Ptr<_210e69352_MatchCase> _74717_m = jule::new_ptr<_210e69352_MatchCase>(_210e69352_MatchCase{._field_Token=_74637_tokens[0LL], });;
	_74637_tokens=_74637_tokens.slice(1LL);
	if (((_74637_tokens.len() > 0LL) && (_74637_tokens[0LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		_74717_m.get()._field_TypeMatch=true;
		_74637_tokens=_74637_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _75717_exprTokens = _212444023_getBlockExpr(_74637_tokens);;
	if ((_75717_exprTokens.len() > 0LL)) {
		_74717_m.get()._field_Expr=_212449e19_buildExpr((*_self_)._field_p, _75717_exprTokens);
	} else if (_74717_m.get()._field_TypeMatch) {
		_21242d925_pushErr(&(*_self_), _74717_m.get()._field_Token,jule::Str("expression missing", 18));
	};
	jule::I64 _76417_i = _75717_exprTokens.len();;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _76517_blockToks = _2124470e2_range(_76417_i,jule::Str("{", 1),jule::Str("}", 1),_74637_tokens);;
	if ((_76517_blockToks == nullptr)) {
		_21242cdb9_stop(&(*_self_));
		_21242d925_pushErr(&(*_self_), _74717_m.get()._field_Token,jule::Str("body is not exist", 17));
		_21242dc44_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_76417_i < _74637_tokens.len())) {
		_21242d925_pushErr(&(*_self_), _74637_tokens[_76417_i],jule::Str("invalid syntax", 14));
	};
	_74717_m.get()._field_End=_74637_tokens[(_76417_i - 1LL)];
	std::tie(_74717_m.get()._field_Cases,_74717_m.get()._field_Default) = _2124357ea_buildCases(&(*_self_), _76517_blockToks,_74717_m.get()._field_TypeMatch);
	return _74717_m;
}



inline jule::Ptr<_210e623c2_ScopeTree> _212435e16_buildScopeSt(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _77935_tokens) {
	jule::Bool _78017_isUnsafe = false;;
	jule::Bool _78117_isDeferred = false;;
	jule::Ptr<_20e7ddc0b_Token> _78217_token = _77935_tokens[0LL];;
	if ((_78217_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_78017_isUnsafe=true;
		_77935_tokens=_77935_tokens.slice(1LL);
		if ((_77935_tokens.len() == 0LL)) {
			_21242d925_pushErr(&(*_self_), _78217_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_78217_token=_77935_tokens[0LL];
		if ((_78217_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
			_78117_isDeferred=true;
			_77935_tokens=_77935_tokens.slice(1LL);
			if ((_77935_tokens.len() == 0LL)) {
				_21242d925_pushErr(&(*_self_), _78217_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_78217_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_78117_isDeferred=true;
		_77935_tokens=_77935_tokens.slice(1LL);
		if ((_77935_tokens.len() == 0LL)) {
			_21242d925_pushErr(&(*_self_), _78217_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I64 _80817_i = 0LL;;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _80917_scopeTokens = _2124470e2_range(_80817_i,jule::Str("{", 1),jule::Str("}", 1),_77935_tokens);;
	if ((_80917_scopeTokens == nullptr)) {
		_21242d925_pushErr(&(*_self_), _78217_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_80817_i < _77935_tokens.len())) {
		_21242d925_pushErr(&(*_self_), _77935_tokens[_80817_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_210e623c2_ScopeTree> _81617_scope = _21242e5d5_buildScope(&(*_self_), _80917_scopeTokens,_77935_tokens[(_80817_i - 1LL)]);;
	_81617_scope.get()._field_Unsafety=_78017_isUnsafe;
	_81617_scope.get()._field_Deferred=_78117_isDeferred;
	return _81617_scope;
}



inline jule::Ptr<_210e5ea40_LabelSt> _212436224_buildLabelSt(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _82236_tokens) {
	jule::Ptr<_210e5ea40_LabelSt> _82317_lbl = jule::new_ptr<_210e5ea40_LabelSt>(_210e5ea40_LabelSt{._field_Token=_82236_tokens[0LL], ._field_Ident=_82236_tokens[0LL].get()._field_Kind});;
	if ((_82236_tokens.len() > 2LL)) {
		_82236_tokens=_82236_tokens.slice(2LL);
		_21242deb9_insertAsNext(&(*_self_), _82236_tokens);
	};
	return _82317_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _212436532_buildIdSt(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _83733_tokens) {
	jule::Bool _83763_ok = jule::Bool();
	if ((_83733_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_83763_ok);
	};
	jule::Ptr<_20e7ddc0b_Token> _84217_token = _83733_tokens[1LL];;
	{
		auto &_match_expr{ _84217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_224a67997:;
			{
				_83763_ok = true;
				return std::make_tuple(static_cast<jule::Any>(_212436224_buildLabelSt(&(*_self_), _83733_tokens)),_83763_ok);
			}
		}
		_match_end_224a68668:;
	};
	return std::make_tuple(jule::Any(),_83763_ok);
}



inline jule::Ptr<_212445552_assignInfo> _212436840_buildAssignInfo(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _85139_tokens) {
	jule::Ptr<_212445552_assignInfo> _85217_info = jule::new_ptr<_212445552_assignInfo>(_212445552_assignInfo{._field_ok=true});;
	jule::I64 _85517_braceN = 0LL;;
	{
		auto &expr = _85139_tokens;
		auto it = expr.begin();
		_iter_begin_224a6a4c2:;
		if (it != expr.end()) {
			jule::I64 _85614_i = it - expr.begin();
			jule::Ptr<_20e7ddc0b_Token> _85621_token = *it;
			{
				if ((_85621_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _85621_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_224a6b4c3:;
							{
								(_85517_braceN)++;
							}
						}
						else {
							_case_begin_224a6b79d:;
							{
								(_85517_braceN)--;
							}
						}
						_match_end_224a6b58e:;
					};
				};
				{
					
					if ((_85517_braceN > 0LL)) {
						_case_begin_224a6be96:;
						{
							goto _iter_next_224a6a4c2;
						}
					}
					else if ((_85621_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_224a6c01d:;
						{
							goto _iter_next_224a6a4c2;
						}
					}
					else if ((!(_20e7e37e3_IsAssignOp(_85621_token.get()._field_Kind)))) {
						_case_begin_224a6c095:;
						{
							goto _iter_next_224a6a4c2;
						}
					}
					_match_end_224a6bc76:;
				};
				_85217_info.get()._field_l=_85139_tokens.slice(0LL,_85614_i);
				if ((_85217_info.get()._field_l.len() == 0LL)) {
					_85217_info.get()._field_ok=false;
				};
				_85217_info.get()._field_setter=_85621_token;
				if (((_85614_i + 1LL) >= _85139_tokens.len())) {
					_85217_info.get()._field_r=nullptr;
					_85217_info.get()._field_ok=_20e7e354b_IsPostfixOp(_85217_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_224a6a4c2;
				};
				_85217_info.get()._field_r=_85139_tokens.slice((_85614_i + 1LL));
				if (_20e7e354b_IsPostfixOp(_85217_info.get()._field_setter.get()._field_Kind)) {
					if ((_85217_info.get()._field_r.len() > 0LL)) {
						_21242d925_pushErr(&(*_self_), _85217_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_85217_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_224a6a4c2;
			}
			_iter_next_224a6a4c2:;
			++it;
			_85614_i++;
			goto _iter_begin_224a6a4c2;
		}
		_iter_end_224a6a4c2:;
	};
	return _85217_info;
}



inline jule::Ptr<_210e607dd_AssignLeft> _212436b4d_buildAssignL(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _89936_tokens) {
	jule::Ptr<_210e607dd_AssignLeft> _90017_l = jule::new_ptr<_210e607dd_AssignLeft>(_210e607dd_AssignLeft{._field_Token=_89936_tokens[0LL], });;
	if ((_89936_tokens[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		_90017_l.get()._field_Ident=_90017_l.get()._field_Token.get()._field_Kind;
	};
	_90017_l.get()._field_Expr=_212449e19_buildExpr((*_self_)._field_p, _89936_tokens);
	return _90017_l;
}



inline jule::Slice<jule::Ptr<_210e607dd_AssignLeft>> _212436e5b_buildAssignLs(_21242c737_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>>& _91037_parts) {
	jule::Slice<jule::Ptr<_210e607dd_AssignLeft>> _91117_lefts = nullptr;;
	{
		auto &expr = _91037_parts;
		auto it = expr.begin();
		_iter_begin_224a73d8d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _91221_part = *it;
			{
				jule::Ptr<_210e607dd_AssignLeft> _91321_l = _212436b4d_buildAssignL(&(*_self_), _91221_part);;
				_91117_lefts = jule::alloc_for_append(_91117_lefts,1);_91117_lefts.__push(_91321_l);;
			}
			_iter_next_224a73d8d:;
			++it;
			goto _iter_begin_224a73d8d;
		}
		_iter_end_224a73d8d:;
	};
	return _91117_lefts;
}



inline std::tuple<jule::Ptr<_210e60d2c_AssignSt>,jule::Bool> _212437269_buildPlainAssign(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _92040_tokens) {
	jule::Ptr<_212445552_assignInfo> _92117_info = _212436840_buildAssignInfo(&(*_self_), _92040_tokens);;
	if ((!(_92117_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_210e60d2c_AssignSt> _92617_assign = jule::new_ptr<_210e60d2c_AssignSt>(_210e60d2c_AssignSt{._field_Setter=_92117_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _93018_parts;;
	jule::Slice<_20e4ba377_Log> _93025_errs;;
	std::tie(_93018_parts,_93025_errs) = _212447b5e_parts(_92117_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_93025_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_93025_errs);
		return std::make_tuple(nullptr,false);
	};
	_92617_assign.get()._field_Left=_212436e5b_buildAssignLs(&(*_self_), _93018_parts);
	if ((_92117_info.get()._field_r != nullptr)) {
		_92617_assign.get()._field_Right=_212449e19_buildExpr((*_self_)._field_p, _92117_info.get()._field_r);
	};
	return std::make_tuple(_92617_assign,true);
}



inline std::tuple<jule::Ptr<_210e60d2c_AssignSt>,jule::Bool> _212437577_buildDeclAssign(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _94438_tokens) {
	if ((_94438_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_94438_tokens=_94438_tokens.slice(1LL);
	jule::Ptr<_20e7ddc0b_Token> _95017_token = _94438_tokens[0LL];;
	if (((_95017_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_95017_token.get()._field_Kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_210e60d2c_AssignSt> _95517_assign = jule::new_ptr<_210e60d2c_AssignSt>(_210e60d2c_AssignSt{._field_Declarative=true, });;
	jule::I64 _95917_i = 0LL;;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _96017_rang = _2124470e2_range(_95917_i,jule::Str("(", 1),jule::Str(")", 1),_94438_tokens);;
	if ((_96017_rang == nullptr)) {
		_21242d925_pushErr(&(*_self_), _95017_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_95917_i + 1LL) < _94438_tokens.len())) {
		_95517_assign.get()._field_Setter=_94438_tokens[_95917_i];
		(_95917_i)++;
		jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _96721_exprTokens = _94438_tokens.slice(_95917_i);;
		_95517_assign.get()._field_Right=_212449e19_buildExpr((*_self_)._field_p, _96721_exprTokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _97218_parts;;
	jule::Slice<_20e4ba377_Log> _97225_errs;;
	std::tie(_97218_parts,_97225_errs) = _212447b5e_parts(_96017_rang,static_cast<jule::U64>(8LLU),true);
	if ((_97225_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_97225_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _97218_parts;
		auto it = expr.begin();
		_iter_begin_224a7edee:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _97821_part = *it;
			{
				jule::Bool _97921_isMut = false;;
				jule::Bool _98021_isRef = false;;
				_95017_token=_97821_part[0LL];
				if ((_95017_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_97921_isMut=true;
					_97821_part=_97821_part.slice(1LL);
					if ((_97821_part.len() == 0LL)) {
						_21242d925_pushErr(&(*_self_), _95017_token,jule::Str("invalid syntax", 14));
						goto _iter_next_224a7edee;
					};
				};
				if (((_97821_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_97821_part[0LL].get()._field_Kind == jule::Str("&", 1)))) {
					_98021_isRef=true;
					_97821_part=_97821_part.slice(1LL);
					if ((_97821_part.len() == 0LL)) {
						_21242d925_pushErr(&(*_self_), _95017_token,jule::Str("invalid syntax", 14));
						goto _iter_next_224a7edee;
					};
				};
				if ((((_97821_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97821_part[0LL].get()._field_Id != static_cast<jule::U64>(3LLU))) && (_97821_part[0LL].get()._field_Kind != jule::Str("(", 1)))) {
					_21242d925_pushErr(&(*_self_), _95017_token,jule::Str("invalid syntax", 14));
					goto _iter_next_224a7edee;
				};
				jule::Ptr<_210e607dd_AssignLeft> _100821_l = _212436b4d_buildAssignL(&(*_self_), _97821_part);;
				_100821_l.get()._field_Mutable=_97921_isMut;
				_100821_l.get()._field_Reference=_98021_isRef;
				_95517_assign.get()._field_Left = jule::alloc_for_append(_95517_assign.get()._field_Left,1);_95517_assign.get()._field_Left.__push(_100821_l);;
			}
			_iter_next_224a7edee:;
			++it;
			goto _iter_begin_224a7edee;
		}
		_iter_end_224a7edee:;
	};
	return std::make_tuple(_95517_assign,true);
}



inline std::tuple<jule::Ptr<_210e60d2c_AssignSt>,jule::Bool> _212437885_buildAssignSt(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _101737_tokens) {
	jule::Ptr<_210e60d2c_AssignSt> _101757_st = jule::Ptr<_210e60d2c_AssignSt>();
	jule::Bool _101772_ok = jule::Bool();
	if ((!(_2124458e8_checkAssignTokens(_101737_tokens)))) {
		_101757_st = nullptr;
		_101772_ok = false;
		return std::make_tuple(_101757_st,_101772_ok);
	};
	{
		auto &_match_expr{ _101737_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_224a88d3c:;
			{
				std::tie(_101757_st,_101772_ok) = _212437577_buildDeclAssign(&(*_self_), _101737_tokens);
			}
		}
		else {
			_case_begin_224a88930:;
			{
				std::tie(_101757_st,_101772_ok) = _212437269_buildPlainAssign(&(*_self_), _101737_tokens);
			}
		}
		_match_end_224a888ca:;
	};
	return std::make_tuple(_101757_st,_101772_ok);
}



inline jule::Ptr<_210e56e66_UseExpr> _212437b93_buildUseExpr(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _103236_tokens) {
	if ((_103236_tokens.len() == 1LL)) {
		_21242d925_pushErr(&(*_self_), _103236_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_210e56e66_UseExpr> _103717_ue = jule::new_ptr<_210e56e66_UseExpr>(_210e56e66_UseExpr{._field_Token=_103236_tokens[0LL], });;
	_103236_tokens=_103236_tokens.slice(1LL);
	_103717_ue.get()._field_Expr=_212449e19_buildExpr((*_self_)._field_p, _103236_tokens);
	return _103717_ue;
}



inline jule::Any _212437ea1_buildSt(_21242c737_scopeParser* _self_, jule::Ptr<_21242be0c_stmt>& _104531_st) {
	jule::Ptr<_20e7ddc0b_Token> _104617_token = _104531_st.get()._field_tokens[0LL];;
	if ((_104617_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		jule::Any _104822_s;;
		jule::Bool _104825_ok;;
		std::tie(_104822_s,_104825_ok) = _212436532_buildIdSt(&(*_self_), _104531_st.get()._field_tokens);
		if (_104825_ok) {
			return _104822_s;
		};
	};
	jule::Ptr<_210e60d2c_AssignSt> _105418_s;;
	jule::Bool _105421_ok;;
	std::tie(_105418_s,_105421_ok) = _212437885_buildAssignSt(&(*_self_), _104531_st.get()._field_tokens);
	if (_105421_ok) {
		return static_cast<jule::Any>(_105418_s);
	};
	{
		auto &_match_expr{ _104617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_224a8e11c:;
			{
				return static_cast<jule::Any>(_212437b93_buildUseExpr(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_224a8dd53:;
			{
				return static_cast<jule::Any>(_21242e8e3_buildVarSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_224a8e419:;
			{
				return static_cast<jule::Any>(_21242ec01_buildRetSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_224a8e480:;
			{
				return static_cast<jule::Any>(_21243263d_buildIterSt(&(*_self_), _104531_st));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_224a8e4e6:;
			{
				return static_cast<jule::Any>(_21243294b_buildBreakSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_224a8e55c:;
			{
				return static_cast<jule::Any>(_212432c59_buildContSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_224a8e5c3:;
			{
				return static_cast<jule::Any>(_212433683_buildIfElseChain(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_224a8e639:;
			{
				return static_cast<jule::Any>(_212433991_buildCoCallSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_224a8e6a0:;
			{
				return static_cast<jule::Any>(_212433c9e_buildGotoSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_224a8e716:;
			{
				return static_cast<jule::Any>(_2124340ac_buildFallSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_224a8e77c:;
			{
				return static_cast<jule::Any>(_2124343ba_buildTypeAliasSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_224a8e7e3:;
			{
				return static_cast<jule::Any>(_212435b08_buildMatchCase(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_224a8e859:;
			{
				return static_cast<jule::Any>(_212435e16_buildScopeSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_224a8e8d1:;
			{
				if ((_104617_token.get()._field_Kind == jule::Str("{", 1))) {
					return static_cast<jule::Any>(_212435e16_buildScopeSt(&(*_self_), _104531_st.get()._field_tokens));
				};
			}
		}
		_match_end_224a8dea7:;
	};
	jule::Ptr<_210e565c5_Expr> _109517_expr = _212449e19_buildExpr((*_self_)._field_p, _104531_st.get()._field_tokens);;
	if ((_109517_expr != nullptr)) {
		return static_cast<jule::Any>(_109517_expr);
	};
	_21242d925_pushErr(&(*_self_), _104617_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _2124382c0_build(_21242c737_scopeParser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _110329_tokens, jule::Ptr<_210e623c2_ScopeTree>& _110352_s) {
	if ((_110352_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_21242c2a3_splitStmts(_110329_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_110352_s;
	while (((!(_21242d606_isLastSt(&(*_self_)))) && (!(_21242d392_finished(&(*_self_)))))) {
		{
			jule::Ptr<_21242be0c_stmt> _111121_st = _21242e22d_next(&(*_self_));;
			jule::Any _111221_data = _212437ea1_buildSt(&(*_self_), _111121_st);;
			if ((_111221_data != nullptr)) {
				(*_self_)._field_s.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_Stmts,1);(*_self_)._field_s.get()._field_Stmts.__push(_210e61cb7_Stmt{._field_Token=_111121_st.get()._field_tokens[0LL], ._field_Data=_111221_data});;
			};
			if (_21242d12d_stopped(&(*_self_))) {
				goto _iter_end_224a97dc3;
			};
		}
	_iter_next_224a97dc3:;
	}
	_iter_end_224a97dc3:;;
}







std::ostream &operator<<(std::ostream &_Stream, _21242c737_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _2124394e1_pushErr(_212438be9_exprBuilder* _self_, jule::Ptr<_20e7ddc0b_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_2124497dc_pushErr((*_self_)._field_p.ptr(), _4426_token,_4441_fmt,jule::Any(_4454_args));
}



inline void _212439810_pushSuggestion(_212438be9_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_212449b0b_pushSuggestion((*_self_)._field_p.ptr(), _4933_fmt,jule::Any(_4946_args));
}



inline jule::Ptr<_210e57252_TupleExpr> _212439b1d_buildTuple(_212438be9_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>>& _5334_parts) {
	jule::Ptr<_210e57252_TupleExpr> _5417_tuple = jule::new_ptr<_210e57252_TupleExpr>(_210e57252_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_210e565c5_Expr>>::alloc(0LL,_5334_parts.len())});;
	{
		auto &expr = _5334_parts;
		auto it = expr.begin();
		_iter_begin_2243e6007:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_21244363d_buildFromTokens(&(*_self_), _5721_part));;
			}
			_iter_next_2243e6007:;
			++it;
			goto _iter_begin_2243e6007;
		}
		_iter_end_2243e6007:;
	};
	return _5417_tuple;
}



inline jule::Ptr<_210e57609_LitExpr> _212439e2b_buildLit(_212438be9_exprBuilder* _self_, jule::Ptr<_20e7ddc0b_Token> _6327_token) {
	return jule::new_ptr<_210e57609_LitExpr>(_210e57609_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});
}



inline jule::Ptr<_210e520a4_TypeDecl> _21243a239_buildPrimitiveType(_212438be9_exprBuilder* _self_, jule::Ptr<_20e7ddc0b_Token>& _7038_token) {
	return _212459610_buildPrimType(_7038_token);
}



inline jule::Any _21243a547_buildSingle(_212438be9_exprBuilder* _self_, jule::Ptr<_20e7ddc0b_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_2243e7cc8:;
			{
				return static_cast<jule::Any>(_212439e2b_buildLit(&(*_self_), _7434_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_2243e7d3e:;
			{
				if ((_7434_token.get()._field_Kind == jule::Str("...", 3))) {
					return static_cast<jule::Any>(jule::new_ptr<_210e591ee_VariadicExpr>(_210e591ee_VariadicExpr{._field_Token=_7434_token, }));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(27LLU) || _match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_2243e7da5:;
			{
				return static_cast<jule::Any>(_2124448e7_buildIdentExpr(_7434_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_2243e7e1b:;
			{
				return static_cast<jule::Any>(_21243a239_buildPrimitiveType(&(*_self_), _7434_token));
			}
		}
		_match_end_2243e7943:;
	};
	_2124394e1_pushErr(&(*_self_), _7434_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_210e5863d_IdentExpr> _21243a855_buildCppLinkedIdent(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _9543_tokens) {
	if ((_9543_tokens[0LL].get()._field_Id != static_cast<jule::U64>(30LLU))) {
		return nullptr;
	} else if ((_9543_tokens[1LL].get()._field_Id != static_cast<jule::U64>(20LLU))) {
		_2124394e1_pushErr(&(*_self_), _9543_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_212439810_pushSuggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20e7ddc0b_Token> _10317_token = _9543_tokens[2LL];;
	if ((_10317_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2124394e1_pushErr(&(*_self_), _9543_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_212439810_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_210e5863d_IdentExpr> _10917_expr = _2124448e7_buildIdentExpr(_10317_token);;
	_10917_expr.get()._field_CppLinked=true;
	return _10917_expr;
}



inline jule::Ptr<_210e58d47_UnaryExpr> _21243ab63_buildUnary(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _11433_tokens) {
	jule::Ptr<_20e7ddc0b_Token> _11517_op = _11433_tokens[0LL];;
	if ((_11433_tokens.len() == 1LL)) {
		_2124394e1_pushErr(&(*_self_), _11517_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_20e7de415_IsUnaryOp(_11517_op.get()._field_Kind)))) {
		_2124394e1_pushErr(&(*_self_), _11517_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_11517_op.get()._field_Kind)}));
		return nullptr;
	};
	_11433_tokens=_11433_tokens.slice(1LL);
	return jule::new_ptr<_210e58d47_UnaryExpr>(_210e58d47_UnaryExpr{._field_Op=_11517_op, ._field_Expr=_21244363d_buildFromTokens(&(*_self_), _11433_tokens)});
}



inline jule::Ptr<_210e59dd1_SubIdentExpr> _21243ae71_buildObjSubIdent(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _13539_tokens) {
	jule::I64 _13617_i = (_13539_tokens.len() - 1LL);;
	jule::Ptr<_20e7ddc0b_Token> _13717_identToken = _13539_tokens[_13617_i];;
	(_13617_i)--;
	_13539_tokens=_13539_tokens.slice(0LL,_13617_i);
	if ((_13539_tokens.len() == 0LL)) {
		_2124394e1_pushErr(&(*_self_), _13717_identToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_210e59dd1_SubIdentExpr>(_210e59dd1_SubIdentExpr{._field_Expr=_21244363d_buildFromTokens(&(*_self_), _13539_tokens), ._field_Ident=_13717_identToken});
}



inline jule::Ptr<_210e5995d_NsSelectionExpr> _21243b27e_buildNsSubIdent(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _15039_tokens) {
	jule::Ptr<_210e5995d_NsSelectionExpr> _15117_ns = jule::new_ptr<_210e5995d_NsSelectionExpr>();;
	{
		auto &expr = _15039_tokens;
		auto it = expr.begin();
		_iter_begin_22440470d:;
		if (it != expr.end()) {
			jule::I64 _15214_i = it - expr.begin();
			jule::Ptr<_20e7ddc0b_Token> _15221_token = *it;
			{
				if (((_15214_i & 1LL) == 0LL)) {
					if ((_15221_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
						_2124394e1_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_212439810_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_15117_ns.get()._field_Ns = jule::alloc_for_append(_15117_ns.get()._field_Ns,1);_15117_ns.get()._field_Ns.__push(_15221_token);;
				} else if ((_15221_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_2124394e1_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_212439810_pushSuggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_22440470d:;
			++it;
			_15214_i++;
			goto _iter_begin_22440470d;
		}
		_iter_end_22440470d:;
	};
	_15117_ns.get()._field_Ident=_15117_ns.get()._field_Ns[(_15117_ns.get()._field_Ns.len() - 1LL)];
	_15117_ns.get()._field_Ns=_15117_ns.get()._field_Ns.slice(0LL,(_15117_ns.get()._field_Ns.len() - 1LL));
	return _15117_ns;
}



inline jule::Ptr<_210e520a4_TypeDecl> _21243b58c_buildType(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _16933_tokens) {
	jule::I64 _17017_i = 0LL;;
	jule::Ptr<_210e520a4_TypeDecl> _17118_t;;
	jule::Bool _17121_ok;;
	std::tie(_17118_t,_17121_ok) = _21244b206_buildType((*_self_)._field_p, _16933_tokens,(&(_17017_i)),false);
	if ((!(_17121_ok))) {
		_2124394e1_pushErr(&(*_self_), _16933_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_17017_i < _16933_tokens.len())) {
		_2124394e1_pushErr(&(*_self_), _16933_tokens[_17017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _17118_t;
}



inline jule::Any _21243b89a_buildSubIdent(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _18337_tokens) {
	jule::I64 _18413_i = (_18337_tokens.len() - 2LL);;
	jule::Ptr<_20e7ddc0b_Token> _18513_token = _18337_tokens[_18413_i];;
	{
		auto &_match_expr{ _18513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_22440bc87:;
			{
				return static_cast<jule::Any>(_21243ae71_buildObjSubIdent(&(*_self_), _18337_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_22440c2b5:;
			{
				return static_cast<jule::Any>(_21243b27e_buildNsSubIdent(&(*_self_), _18337_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_22440c32b:;
			{
				if ((_18513_token.get()._field_Kind == jule::Str("]", 1))) {
					return static_cast<jule::Any>(_21243b58c_buildType(&(*_self_), _18337_tokens));
				};
			}
		}
		_match_end_22440c12d:;
	};
	_2124394e1_pushErr(&(*_self_), _18513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_210e591ee_VariadicExpr> _21243bba8_buildVariadic(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _20136_tokens) {
	jule::Ptr<_20e7ddc0b_Token> _20217_token = _20136_tokens[(_20136_tokens.len() - 1LL)];;
	_20136_tokens=_20136_tokens.slice(0LL,(_20136_tokens.len() - 1LL));
	return jule::new_ptr<_210e591ee_VariadicExpr>(_210e591ee_VariadicExpr{._field_Token=_20217_token, ._field_Expr=_21244363d_buildFromTokens(&(*_self_), _20136_tokens)});
}



inline jule::Any _21243beb6_buildOpRight(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _21036_tokens) {
	jule::Ptr<_20e7ddc0b_Token> _21117_token = _21036_tokens[(_21036_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _21117_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_22441152d:;
			{
				_21036_tokens=_21036_tokens.slice(0LL,(_21036_tokens.len() - 1LL));
				jule::Any _21521_d = _212443022_build(&(*_self_), _21036_tokens);;
				if ((_21521_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _21521_d };
					
					if (_match_expr.type_is<jule::Ptr<_210e5a893_FnCallExpr>>()) {
						_case_begin_22441292a:;
						{
							_21521_d.operator jule::Ptr<_210e5a893_FnCallExpr>().get()._field_Exception=jule::new_ptr<_210e623c2_ScopeTree>(_210e623c2_ScopeTree{._field_Deferred=true, });
							return _21521_d;
						}
					}
					_match_end_22441283c:;
				};
			}
		}
		_match_end_224411495:;
	};
	_2124394e1_pushErr(&(*_self_), _21117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_210e568b1_RangeExpr> _21243c2e6_buildBetweenParentheses(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _23146_tokens) {
	if ((_23146_tokens.len() == 2LL)) {
		_2124394e1_pushErr(&(*_self_), _23146_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_212439810_pushSuggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_23146_tokens=_23146_tokens.slice(1LL,(_23146_tokens.len() - 1LL));
	return jule::new_ptr<_210e568b1_RangeExpr>(_210e568b1_RangeExpr{._field_Expr=_21244363d_buildFromTokens(&(*_self_), _23146_tokens)});
}



inline jule::Ptr<_210e595a6_CastExpr> _21243c615_tryBuildCast(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _24336_tokens) {
	jule::I64 _24417_rangeN = 0LL;;
	{
		auto &expr = _24336_tokens;
		auto it = expr.begin();
		_iter_begin_2244161d1:;
		if (it != expr.end()) {
			jule::I64 _24513_i = it - expr.begin();
			jule::Ptr<_20e7ddc0b_Token> _24516_token = *it;
			{
				if ((_24516_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _24516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_2244170e4:;
							{
								(_24417_rangeN)++;
								goto _iter_next_2244161d1;
							}
						}
						else {
							_case_begin_2244173be:;
							{
								(_24417_rangeN)--;
							}
						}
						_match_end_2244171b0:;
					};
				};
				if ((_24417_rangeN > 0LL)) {
					goto _iter_next_2244161d1;
				} else if (((_24513_i + 1LL) == _24336_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _26421_typeTokens = _24336_tokens.slice(0LL,(_24513_i + 1LL));;
				jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _26521_exprTokens = _24336_tokens.slice((_24513_i + 1LL));;
				if ((_26521_exprTokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_20e7ddc0b_Token> _27217_tok = _26521_exprTokens[0LL];;
				if (((_27217_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_27217_tok.get()._field_Kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_210e595a6_CastExpr> _27721_cast = jule::new_ptr<_210e595a6_CastExpr>(_210e595a6_CastExpr{});;
				if ((_26521_exprTokens.len() == 2LL)) {
					_2124394e1_pushErr(&(*_self_), _26521_exprTokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_212439810_pushSuggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_26421_typeTokens.len() == 2LL)) {
					_2124394e1_pushErr(&(*_self_), _26421_typeTokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_212439810_pushSuggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_26421_typeTokens=_26421_typeTokens.slice(1LL,(_26421_typeTokens.len() - 1LL));
					jule::I64 _29125_typeIndex = 0LL;;
					jule::Ptr<_210e520a4_TypeDecl> _29226_t;;
					jule::Bool _29229_ok;;
					std::tie(_29226_t,_29229_ok) = _21244b206_buildType((*_self_)._field_p, _26421_typeTokens,(&(_29125_typeIndex)),true);
					if ((_29229_ok && (_29125_typeIndex < _26421_typeTokens.len()))) {
						_2124394e1_pushErr(&(*_self_), _26421_typeTokens[_29125_typeIndex],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_29229_ok))) {
						return _27721_cast;
					};
					_27721_cast.get()._field_Kind=_29226_t;
					if ((_26521_exprTokens.len() > 2LL)) {
						jule::I64 _30229_j = 0LL;;
						_2124470e2_range(_30229_j,jule::Str("(", 1),jule::Str(")", 1),_26521_exprTokens);
						if ((_30229_j < _26521_exprTokens.len())) {
							return nullptr;
						};
						_26521_exprTokens=_26521_exprTokens.slice(0LL,_30229_j);
						_27721_cast.get()._field_Expr=_21244363d_buildFromTokens(&(*_self_), _26521_exprTokens);
					};
				};
				return _27721_cast;
			}
			_iter_next_2244161d1:;
			++it;
			_24513_i++;
			goto _iter_begin_2244161d1;
		}
		_iter_end_2244161d1:;
	};
	return nullptr;
}



inline void _21243c9cd_pushArg(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_210e565c5_Expr>>& _31731_args, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _31750_tokens, jule::Ptr<_20e7ddc0b_Token> _31768_err_token) {
	if ((_31750_tokens.len() == 0LL)) {
		_2124394e1_pushErr(&(*_self_), _31768_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_212439810_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_31731_args = jule::alloc_for_append(_31731_args,1);_31731_args.__push(_21244363d_buildFromTokens(&(*_self_), _31750_tokens));;
}



inline jule::Slice<jule::Ptr<_210e565c5_Expr>> _21243ccdb_buildArgs(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _32632_tokens) {
	if ((_32632_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_210e565c5_Expr>> _33217_args = nullptr;;
	jule::I64 _33317_last = 0LL;;
	jule::I64 _33417_rangeN = 0LL;;
	_32632_tokens=_32632_tokens.slice(1LL,(_32632_tokens.len() - 1LL));
	{
		auto &expr = _32632_tokens;
		auto it = expr.begin();
		_iter_begin_224425894:;
		if (it != expr.end()) {
			jule::I64 _33613_i = it - expr.begin();
			jule::Ptr<_20e7ddc0b_Token> _33616_token = *it;
			{
				if ((_33616_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _33616_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_224426686:;
							{
								(_33417_rangeN)++;
							}
						}
						else {
							_case_begin_224426961:;
							{
								(_33417_rangeN)--;
							}
						}
						_match_end_224426752:;
					};
				};
				if (((_33417_rangeN > 0LL) || (_33616_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_224425894;
				};
				_21243c9cd_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last,_33613_i),_33616_token);
				_33317_last=static_cast<jule::I64>((_33613_i + 1LL));
			}
			_iter_next_224425894:;
			++it;
			_33613_i++;
			goto _iter_begin_224425894;
		}
		_iter_end_224425894:;
	};
	if ((_33317_last < _32632_tokens.len())) {
		if ((_33317_last == 0LL)) {
			if ((_32632_tokens.len() > 0LL)) {
				_21243c9cd_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[_33317_last]);
			};
		} else {
			_21243c9cd_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[(_33317_last - 1LL)]);
		};
	};
	return _33217_args;
}



inline jule::Slice<jule::Ptr<_210e520a4_TypeDecl>> _21243d0e9_buildCallGenerics(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _36840_tokens) {
	if ((_36840_tokens.len() == 0LL)) {
		return nullptr;
	};
	_36840_tokens=_36840_tokens.slice(1LL,(_36840_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _37418_parts;;
	jule::Slice<_20e4ba377_Log> _37425_errs;;
	std::tie(_37418_parts,_37425_errs) = _212447b5e_parts(_36840_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_210e520a4_TypeDecl>> _37517_generics = jule::Slice<jule::Ptr<_210e520a4_TypeDecl>>::alloc(0LL,_37418_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_37425_errs);
	{
		auto &expr = _37418_parts;
		auto it = expr.begin();
		_iter_begin_22442bdc8:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _37721_part = *it;
			{
				if ((_37721_part.len() == 0LL)) {
					goto _iter_next_22442bdc8;
				};
				jule::I64 _38121_j = 0LL;;
				jule::Ptr<_210e520a4_TypeDecl> _38222_generic;;
				std::tie(_38222_generic,std::ignore) = _21244b206_buildType((*_self_)._field_p, _37721_part,(&(_38121_j)),true);
				if ((_38121_j < _37721_part.len())) {
					_2124394e1_pushErr(&(*_self_), _37721_part[_38121_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_37517_generics = jule::alloc_for_append(_37517_generics,1);_37517_generics.__push(_38222_generic);;
			}
			_iter_next_22442bdc8:;
			++it;
			goto _iter_begin_22442bdc8;
		}
		_iter_end_22442bdc8:;
	};
	return _37517_generics;
}



inline jule::Ptr<_210e5a893_FnCallExpr> _21243d54a_buildFnCall(_212438be9_exprBuilder* _self_, jule::Ptr<_20e7ddc0b_Token>& _39235_token, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _39255_expr, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _39276_args) {
	return jule::new_ptr<_210e5a893_FnCallExpr>(_210e5a893_FnCallExpr{._field_Token=_39235_token, ._field_Expr=_21244363d_buildFromTokens(&(*_self_), _39255_expr), ._field_Args=_21243ccdb_buildArgs(&(*_self_), _39276_args), });
}



inline jule::Any _21243d858_buildParenthesesRange(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _40045_tokens) {
	jule::Ptr<_20e7ddc0b_Token> _40117_token = _40045_tokens[0LL];;
	{
		auto &_match_expr{ _40117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_2244312c8:;
			{
				{
					auto &_match_expr{ _40117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_224431a8c:;
						{
							jule::Ptr<_210e595a6_CastExpr> _40625_expr = _21243c615_tryBuildCast(&(*_self_), _40045_tokens);;
							if ((_40625_expr != nullptr)) {
								return static_cast<jule::Any>(_40625_expr);
							};
						}
					}
					_match_end_2244318b1:;
				};
			}
		}
		_match_end_224431240:;
	};
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _41218_exprTokens;;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _41234_args_tokens;;
	std::tie(_41218_exprTokens,_41234_args_tokens) = _212447389_rangeLast(_40045_tokens);
	if ((_41218_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_21243c2e6_buildBetweenParentheses(&(*_self_), _41234_args_tokens));
	};
	return static_cast<jule::Any>(_21243d54a_buildFnCall(&(*_self_), _40117_token,_41218_exprTokens,_41234_args_tokens));
}



inline jule::Ptr<_210e57d13_UnsafeExpr> _21243db66_buildUnsafeExpr(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _42138_tokens) {
	jule::Ptr<_20e7ddc0b_Token> _42217_token = _42138_tokens[0LL];;
	_42138_tokens=_42138_tokens.slice(1LL);
	jule::I64 _42417_i = 0LL;;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _42517_rangeTokens = _2124470e2_range(_42417_i,jule::Str("{", 1),jule::Str("}", 1),_42138_tokens);;
	if ((_42517_rangeTokens.len() == 0LL)) {
		_2124394e1_pushErr(&(*_self_), _42138_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_210e57d13_UnsafeExpr>(_210e57d13_UnsafeExpr{._field_Token=_42217_token, ._field_Expr=_21244363d_buildFromTokens(&(*_self_), _42517_rangeTokens)});
}



inline jule::Ptr<_210e63db8_FnDecl> _21243de74_buildAnonFn(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _43635_tokens) {
	jule::Ptr<_210e63db8_FnDecl> _43717_f = _21245034d_buildFn((*_self_)._field_p, _43635_tokens,false,false);;
	if ((!(_210e6421a_IsAnon(_43717_f.ptr())))) {
		_2124394e1_pushErr(&(*_self_), _43717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_212439810_pushSuggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _43717_f;
}



inline jule::Any _21243e282_buildUnsafe(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _44535_tokens) {
	{
		auto &_match_expr{ _44535_tokens[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_224438148:;
			{
				return static_cast<jule::Any>(_21243de74_buildAnonFn(&(*_self_), _44535_tokens));
			}
		}
		else {
			_case_begin_224438654:;
			{
				return static_cast<jule::Any>(_21243db66_buildUnsafeExpr(&(*_self_), _44535_tokens));
			}
		}
		_match_end_224438599:;
	};
}



inline void _21243e64a_pushRangeLitPart(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _45539_part, jule::Ptr<_20e7ddc0b_Token> _4569_errorToken, jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>>& _45634_parts) {
	if ((_45539_part.len() == 0LL)) {
		_2124394e1_pushErr(&(*_self_), _4569_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_212439810_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_45634_parts = jule::alloc_for_append(_45634_parts,1);_45634_parts.__push(_45539_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _21243e97a_getBraceRangeLitExprParts(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _46648_tokens) {
	if ((_46648_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _47217_parts = nullptr;;
	jule::I64 _47417_last = 0LL;;
	jule::I64 _47517_rangeN = 0LL;;
	_46648_tokens=_46648_tokens.slice(1LL,(_46648_tokens.len() - 1LL));
	{
		auto &expr = _46648_tokens;
		auto it = expr.begin();
		_iter_begin_22443cd40:;
		if (it != expr.end()) {
			jule::I64 _47713_i = it - expr.begin();
			jule::Ptr<_20e7ddc0b_Token> _47716_token = *it;
			{
				if ((_47716_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _47716_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_22443db32:;
							{
								(_47517_rangeN)++;
							}
						}
						else {
							_case_begin_22443de0c:;
							{
								(_47517_rangeN)--;
							}
						}
						_match_end_22443dbed:;
					};
				};
				if (((_47517_rangeN > 0LL) || (_47716_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_22443cd40;
				};
				_21243e64a_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last,_47713_i),_47716_token,_47217_parts);
				_47417_last=static_cast<jule::I64>((_47713_i + 1LL));
			}
			_iter_next_22443cd40:;
			++it;
			_47713_i++;
			goto _iter_begin_22443cd40;
		}
		_iter_end_22443cd40:;
	};
	if ((_47417_last < _46648_tokens.len())) {
		if ((_47417_last == 0LL)) {
			if ((_46648_tokens.len() > 0LL)) {
				_21243e64a_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[_47417_last],_47217_parts);
			};
		} else {
			_21243e64a_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[(_47417_last - 1LL)],_47217_parts);
		};
	};
	return _47217_parts;
}



inline jule::Ptr<_210e5b322_FieldExprPair> _21243ec99_buildFieldExprPair(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _50841_tokens) {
	if (((_50841_tokens.len() - 2LL) == 0LL)) {
		_2124394e1_pushErr(&(*_self_), _50841_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_210e5b322_FieldExprPair> _51317_pair = jule::new_ptr<_210e5b322_FieldExprPair>(_210e5b322_FieldExprPair{._field_Field=_50841_tokens[0LL], });;
	_50841_tokens=_50841_tokens.slice(2LL);
	_51317_pair.get()._field_Expr=_21244363d_buildFromTokens(&(*_self_), _50841_tokens);
	return _51317_pair;
}



inline jule::Ptr<_210e565c5_Expr> _2124400a7_buildStructLitExpr(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _52142_tokens) {
	jule::Ptr<_20e7ddc0b_Token> _52217_token = _52142_tokens[0LL];;
	if (((_52217_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && (_52142_tokens.len() > 1LL))) {
		_52217_token=_52142_tokens[1LL];
		if ((_52217_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_210e565c5_Expr>(_210e565c5_Expr{._field_Token=_52217_token, ._field_End=_52142_tokens[(_52142_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_21243ec99_buildFieldExprPair(&(*_self_), _52142_tokens))});
		};
	};
	return _21244363d_buildFromTokens(&(*_self_), _52142_tokens);
}



inline jule::Slice<jule::Ptr<_210e565c5_Expr>> _2124403b5_buildStructLitExprs(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _53643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _53717_parts = _21243e97a_getBraceRangeLitExprParts(&(*_self_), _53643_tokens);;
	if ((_53717_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_210e565c5_Expr>> _54217_pairs = jule::Slice<jule::Ptr<_210e565c5_Expr>>::alloc(0LL,_53717_parts.len());;
	{
		auto &expr = _53717_parts;
		auto it = expr.begin();
		_iter_begin_224448774:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _54321_part = *it;
			{
				_54217_pairs = jule::alloc_for_append(_54217_pairs,1);_54217_pairs.__push(_2124400a7_buildStructLitExpr(&(*_self_), _54321_part));;
			}
			_iter_next_224448774:;
			++it;
			goto _iter_begin_224448774;
		}
		_iter_end_224448774:;
	};
	return _54217_pairs;
}



inline jule::Ptr<_210e5ba70_StructLit> _2124406e5_buildTypedStructLiteral(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _54946_tokens) {
	jule::I64 _55017_i = 0LL;;
	jule::Ptr<_210e520a4_TypeDecl> _55118_t;;
	jule::Bool _55121_ok;;
	std::tie(_55118_t,_55121_ok) = _21244b206_buildType((*_self_)._field_p, _54946_tokens,(&(_55017_i)),true);
	if ((!(_55121_ok))) {
		return nullptr;
	} else if ((_55017_i >= _54946_tokens.len())) {
		_2124394e1_pushErr(&(*_self_), _54946_tokens[_55017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_54946_tokens=_54946_tokens.slice(_55017_i);
	jule::Ptr<_20e7ddc0b_Token> _56013_token = _54946_tokens[0LL];;
	if (((_56013_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_56013_token.get()._field_Kind != jule::Str("{", 1)))) {
		_2124394e1_pushErr(&(*_self_), _56013_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_210e5ba70_StructLit>(_210e5ba70_StructLit{._field_End=_54946_tokens[(_54946_tokens.len() - 1LL)], ._field_Kind=_55118_t, ._field_Exprs=_2124403b5_buildStructLitExprs(&(*_self_), _54946_tokens)});
}



inline jule::Ptr<_210e565c5_Expr> _212440a14_buildBraceLitPart(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _57341_tokens) {
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _57418_l;;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _57425_r;;
	std::tie(_57418_l,_57425_r) = _2124443a8_splitDelim(_57341_tokens,static_cast<jule::U64>(11LLU));
	if ((_57418_l != nullptr)) {
		return jule::new_ptr<_210e565c5_Expr>(_210e565c5_Expr{._field_Token=_57341_tokens[0LL], ._field_End=_57341_tokens[(_57341_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_210e5ca0a_KeyValPair>(_210e5ca0a_KeyValPair{._field_Key=_21244363d_buildFromTokens(&(*_self_), _57418_l), ._field_Val=_21244363d_buildFromTokens(&(*_self_), _57425_r), ._field_Colon=_57341_tokens[_57418_l.len()]}))});
	};
	return _21244363d_buildFromTokens(&(*_self_), _57341_tokens);
}



inline jule::Ptr<_210e5bee3_BraceLit> _212440d22_buildBraceLit(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _59037_tokens) {
	jule::Ptr<_210e5bee3_BraceLit> _59117_lit = jule::new_ptr<_210e5bee3_BraceLit>(_210e5bee3_BraceLit{._field_Token=_59037_tokens[0LL], ._field_End=_59037_tokens[(_59037_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _59617_parts = _21243e97a_getBraceRangeLitExprParts(&(*_self_), _59037_tokens);;
	if ((_59617_parts == nullptr)) {
		return _59117_lit;
	};
	_59117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_210e565c5_Expr>>::alloc(0LL,_59617_parts.len());
	{
		auto &expr = _59617_parts;
		auto it = expr.begin();
		_iter_begin_224452250:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _60221_part = *it;
			{
				_59117_lit.get()._field_Exprs = jule::alloc_for_append(_59117_lit.get()._field_Exprs,1);_59117_lit.get()._field_Exprs.__push(_212440a14_buildBraceLitPart(&(*_self_), _60221_part));;
			}
			_iter_next_224452250:;
			++it;
			goto _iter_begin_224452250;
		}
		_iter_end_224452250:;
	};
	return _59117_lit;
}



inline jule::Any _212441130_buildBraceRange(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _60939_tokens) {
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _61018_exprTokens;;
	jule::I64 _61030_rangeN;;
	std::tie(_61018_exprTokens,_61030_rangeN) = _212444b8e_getRangeExprTokens(_60939_tokens);
	{
		
		if ((_61018_exprTokens.len() == 0LL)) {
			_case_begin_224454241:;
			{
				return static_cast<jule::Any>(_212440d22_buildBraceLit(&(*_self_), _60939_tokens));
			}
		}
		else if ((_61030_rangeN > 0LL)) {
			_case_begin_2244542b8:;
			{
				_2124394e1_pushErr(&(*_self_), _60939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_2244541a8:;
	};
	jule::Ptr<_20e7ddc0b_Token> _62113_elseToken = _61018_exprTokens[(_61018_exprTokens.len() - 1LL)];;
	if ((_61018_exprTokens[(_61018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(17LLU))) {
		_61018_exprTokens=_61018_exprTokens.slice(0LL,(_61018_exprTokens.len() - 1LL));
		jule::Any _62421_d = _212443022_build(&(*_self_), _61018_exprTokens);;
		if ((_62421_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _62421_d };
			
			if (_match_expr.type_is<jule::Ptr<_210e5a893_FnCallExpr>>()) {
				_case_begin_2244577d8:;
				{
					_60939_tokens=_60939_tokens.slice((_61018_exprTokens.len() + 1LL));
					jule::I64 _63125_i = 0LL;;
					jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _63225_rangeTokens = _2124470e2_range(_63125_i,jule::Str("{", 1),jule::Str("}", 1),_60939_tokens);;
					jule::Ptr<_210e5a893_FnCallExpr> _63325_model = _62421_d.operator jule::Ptr<_210e5a893_FnCallExpr>();;
					if (_210e5ae6a_Ignored(_63325_model.ptr())) {
						_2124394e1_pushErr(&(*_self_), _62113_elseToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_212439810_pushSuggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_63325_model.get()._field_Exception=_21244a854_buildScope((*_self_)._field_p, _63225_rangeTokens,_60939_tokens[(_63125_i - 1LL)]);
					return _62421_d;
				}
			}
			else {
				_case_begin_2244572dd:;
				{
					_2124394e1_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_224457200:;
		};
	};
	{
		auto &_match_expr{ _61018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_22445b7dc:;
			{
				return _21243e282_buildUnsafe(&(*_self_), _60939_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_22445b853:;
			{
				return static_cast<jule::Any>(_21243de74_buildAnonFn(&(*_self_), _60939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_22445b8b9:;
			{
				return static_cast<jule::Any>(_2124406e5_buildTypedStructLiteral(&(*_self_), _60939_tokens));
			}
		}
		else {
			_case_begin_22445784e:;
			{
				_2124394e1_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_2244562a9:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _21244143d_getEnumerableParts(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _66141_tokens) {
	_66141_tokens=_66141_tokens.slice(1LL,(_66141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _66318_parts;;
	jule::Slice<_20e4ba377_Log> _66325_errors;;
	std::tie(_66318_parts,_66325_errors) = _212447b5e_parts(_66141_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_66325_errors);
	return _66318_parts;
}



inline jule::Ptr<_210e5ce7d_SliceExpr> _21244174b_buildSlice(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _66833_tokens) {
	jule::Ptr<_210e5ce7d_SliceExpr> _66917_slc = jule::new_ptr<_210e5ce7d_SliceExpr>(_210e5ce7d_SliceExpr{._field_Token=_66833_tokens[0LL], ._field_End=_66833_tokens[(_66833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _67417_parts = _21244143d_getEnumerableParts(&(*_self_), _66833_tokens);;
	if ((_67417_parts.len() == 0LL)) {
		return _66917_slc;
	};
	_66917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_210e565c5_Expr>>::alloc(0LL,_67417_parts.len());
	{
		auto &expr = _67417_parts;
		auto it = expr.begin();
		_iter_begin_224461d97:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _68021_p = *it;
			{
				if ((_68021_p.len() == 0LL)) {
					goto _iter_next_224461d97;
				};
				_66917_slc.get()._field_Exprs = jule::alloc_for_append(_66917_slc.get()._field_Exprs,1);_66917_slc.get()._field_Exprs.__push(_21244363d_buildFromTokens(&(*_self_), _68021_p));;
			}
			_iter_next_224461d97:;
			++it;
			goto _iter_begin_224461d97;
		}
		_iter_end_224461d97:;
	};
	return _66917_slc;
}



inline jule::Ptr<_210e5d81e_IndexingExpr> _212441b9c_buildIndexing(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _69036_exprTokens, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _69113_tokens, jule::Ptr<_20e7ddc0b_Token> _69135_errorToken) {
	jule::Ptr<_20e7ddc0b_Token> _69217_end = _69113_tokens[(_69113_tokens.len() - 1LL)];;
	_69113_tokens=_69113_tokens.slice(1LL,(_69113_tokens.len() - 1LL));
	if ((_69113_tokens.len() == 0LL)) {
		_2124394e1_pushErr(&(*_self_), _69135_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_210e565c5_Expr> _69817_expr = _21244363d_buildFromTokens(&(*_self_), _69036_exprTokens);;
	if ((_69817_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_210e565c5_Expr> _70217_index = _21244363d_buildFromTokens(&(*_self_), _69113_tokens);;
	if ((_70217_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_210e5d81e_IndexingExpr>(_210e5d81e_IndexingExpr{._field_Token=_69135_errorToken, ._field_End=_69217_end, ._field_Expr=_69817_expr, ._field_Index=_70217_index});
}



inline jule::Ptr<_210e5de29_SlicingExpr> _212442241_buildSlicing(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _71436_exprTokens, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _71463_start, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _71514_to, jule::Ptr<_20e7ddc0b_Token>& _71533_errorToken, jule::Ptr<_20e7ddc0b_Token> _71557_end) {
	jule::Ptr<_210e5de29_SlicingExpr> _71617_slc = jule::new_ptr<_210e5de29_SlicingExpr>(_210e5de29_SlicingExpr{._field_Token=_71533_errorToken, ._field_End=_71557_end, ._field_Expr=_21244363d_buildFromTokens(&(*_self_), _71436_exprTokens), });;
	if ((_71463_start.len() > 0LL)) {
		_71617_slc.get()._field_Start=_21244363d_buildFromTokens(&(*_self_), _71463_start);
	};
	if ((_71514_to.len() > 0LL)) {
		_71617_slc.get()._field_To=_21244363d_buildFromTokens(&(*_self_), _71514_to);
	};
	return _71617_slc;
}



inline jule::Any _21244254e_buildBracketRange(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _73040_tokens) {
	jule::Ptr<_20e7ddc0b_Token> _73117_errorToken = _73040_tokens[0LL];;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _73218_exprTokens;;
	jule::I64 _73230_rangeN;;
	std::tie(_73218_exprTokens,_73230_rangeN) = _212444b8e_getRangeExprTokens(_73040_tokens);
	if ((_73218_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_21244174b_buildSlice(&(*_self_), _73040_tokens));
	} else if ((_73230_rangeN > 0LL)) {
		_2124394e1_pushErr(&(*_self_), _73117_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_73040_tokens=_73040_tokens.slice(_73218_exprTokens.len());
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _74717_splitTokens = _73040_tokens.slice(1LL,(_73040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _74818_start;;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _74829_to;;
	std::tie(_74818_start,_74829_to) = _2124443a8_splitDelim(_74717_splitTokens,static_cast<jule::U64>(11LLU));
	if (((_74818_start != nullptr) || (_74829_to != nullptr))) {
		return static_cast<jule::Any>(_212442241_buildSlicing(&(*_self_), _73218_exprTokens,_74818_start,_74829_to,_73117_errorToken,_73040_tokens[(_73040_tokens.len() - 1LL)]));
	};
	return static_cast<jule::Any>(_212441b9c_buildIndexing(&(*_self_), _73218_exprTokens,_73040_tokens,_73117_errorToken));
}



inline jule::Any _21244285c_buildData(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _75533_tokens) {
	{
		auto _match_expr{ _75533_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_22446e3b0:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_22446e437:;
			{
				return _21243a547_buildSingle(&(*_self_), _75533_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_22446e4ae:;
			{
				if ((_75533_tokens[0LL].get()._field_Id == static_cast<jule::U64>(30LLU))) {
					return static_cast<jule::Any>(_21243a855_buildCppLinkedIdent(&(*_self_), _75533_tokens));
				};
			}
		}
		_match_end_22446e13a:;
	};
	jule::Ptr<_20e7ddc0b_Token> _76717_token = _75533_tokens[(_75533_tokens.len() - 1LL)];;
	if (((_76717_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_76717_token.get()._field_Kind == jule::Str("...", 3)))) {
		return static_cast<jule::Any>(_21243bba8_buildVariadic(&(*_self_), _75533_tokens));
	};
	_76717_token=_75533_tokens[0LL];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_224472726:;
			{
				if (((_75533_tokens.len() > 1LL) && (_76717_token.get()._field_Kind == jule::Str("*", 1)))) {
					_76717_token=_75533_tokens[1LL];
					if (((_76717_token.get()._field_Id == static_cast<jule::U64>(1LLU)) || (_76717_token.get()._field_Id == static_cast<jule::U64>(34LLU)))) {
						return static_cast<jule::Any>(_21243b58c_buildType(&(*_self_), _75533_tokens));
					};
				};
				return static_cast<jule::Any>(_21243ab63_buildUnary(&(*_self_), _75533_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_22447287a:;
			{
				if ((_75533_tokens.len() < 3LL)) {
					goto _match_end_224472814;
				};
				if ((_75533_tokens.len() > 3LL)) {
					jule::Ptr<_20e7ddc0b_Token> _78921_t = _75533_tokens[(_75533_tokens.len() - 1LL)];;
					if (((_78921_t.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_78921_t.get()._field_Kind == jule::Str(")", 1)))) {
						goto _match_end_224472814;
					};
				};
				jule::Ptr<_20e7ddc0b_Token> _79517_next = _75533_tokens[1LL];;
				if (((_79517_next.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_79517_next.get()._field_Kind != jule::Str("]", 1)))) {
					jule::I64 _79825_delim = 0LL;;
					_79825_delim=static_cast<jule::I64>(_212459951_mapColon(_75533_tokens,_79825_delim));
					if ((_79825_delim == -1LL)) {
						goto _match_end_224472814;
					};
				};
				return static_cast<jule::Any>(_21243b58c_buildType(&(*_self_), _75533_tokens));
			}
		}
		_match_end_224472814:;
	};
	_76717_token=_75533_tokens[(_75533_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_224472d64:;
			{
				return _21243b89a_buildSubIdent(&(*_self_), _75533_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_224479134:;
			{
				return static_cast<jule::Any>(_21243b58c_buildType(&(*_self_), _75533_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_22447919a:;
			{
				return _21243beb6_buildOpRight(&(*_self_), _75533_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_224479211:;
			{
				{
					auto &_match_expr{ _76717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_22447aa81:;
						{
							return _21243d858_buildParenthesesRange(&(*_self_), _75533_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_22447aae7:;
						{
							return _212441130_buildBraceRange(&(*_self_), _75533_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_22447ab5d:;
						{
							return _21244254e_buildBracketRange(&(*_self_), _75533_tokens);
						}
					}
					_match_end_22447a71d:;
				};
			}
		}
		_match_end_224472d0e:;
	};
	if ((_76717_token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		return static_cast<jule::Any>(_21243b58c_buildType(&(*_self_), _75533_tokens));
	};
	_2124394e1_pushErr(&(*_self_), _76717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Any _212442c14_buildBinop(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _83634_tokens, jule::I64 _83652_i) {
	jule::Ptr<_20e7ddc0b_Token> _83717_op = _83634_tokens[_83652_i];;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _83817_leftTokens = _83634_tokens.slice(0LL,_83652_i);;
	if ((_212443990_isTypeOp(_83717_op.get()._field_Kind) && _212443c7b_isTypeRange(_83817_leftTokens))) {
		return static_cast<jule::Any>(_21243b58c_buildType(&(*_self_), _83634_tokens));
	};
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _84317_rightTokens = _83634_tokens.slice((_83652_i + 1LL));;
	if ((_83817_leftTokens.len() == 0LL)) {
		_2124394e1_pushErr(&(*_self_), _83634_tokens[_83652_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_212439810_pushSuggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_84317_rightTokens.len() == 0LL)) {
		_2124394e1_pushErr(&(*_self_), _83634_tokens[_83652_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_212439810_pushSuggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return static_cast<jule::Any>(jule::new_ptr<_210e5a354_BinopExpr>(_210e5a354_BinopExpr{._field_Left=_21244363d_buildFromTokens(&(*_self_), _83817_leftTokens), ._field_Right=_21244363d_buildFromTokens(&(*_self_), _84317_rightTokens), ._field_Op=_83717_op}));
}



inline jule::Any _212443022_build(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _86129_tokens) {
	jule::I64 _86213_i = _212444650_findLowestPrecOp(_86129_tokens);;
	if ((_86213_i == -1LL)) {
		return _21244285c_buildData(&(*_self_), _86129_tokens);
	};
	return _212442c14_buildBinop(&(*_self_), _86129_tokens,_86213_i);
}



inline jule::Any _212443330_buildKind(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _86933_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _87018_parts;;
	jule::Slice<_20e4ba377_Log> _87025_errors;;
	std::tie(_87018_parts,_87025_errors) = _212447b5e_parts(_86933_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_87025_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_87025_errors);
		return nullptr;
	} else if ((_87018_parts.len() > 1LL)) {
		return static_cast<jule::Any>(_212439b1d_buildTuple(&(*_self_), _87018_parts));
	};
	return _212443022_build(&(*_self_), _86933_tokens);
}



inline jule::Ptr<_210e565c5_Expr> _21244363d_buildFromTokens(_212438be9_exprBuilder* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _88038_tokens) {
	if ((_88038_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_210e565c5_Expr>(_210e565c5_Expr{._field_Token=_88038_tokens[0LL], ._field_End=_88038_tokens[(_88038_tokens.len() - 1LL)], ._field_Kind=_212443330_buildKind(&(*_self_), _88038_tokens)});
}







std::ostream &operator<<(std::ostream &_Stream, _212438be9_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _212445552_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _2124491b0_stop(_212448d80_parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _212449424_stopped(_212448d80_parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _2124497dc_pushErr(_212448d80_parser* _self_, jule::Ptr<_20e7ddc0b_Token> _28726_token, jule::Str _28741_fmt, jule::Slice<jule::Any> _28754_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_2124482e1_compilerErr(_28726_token,_28741_fmt,jule::Any(_28754_args)));;
}



inline void _212449b0b_pushSuggestion(_212448d80_parser* _self_, jule::Str _29233_fmt, jule::Slice<jule::Any> _29246_args) {
	{
		_212448720_pushSuggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_29233_fmt,jule::Any(_29246_args));
	};
}



inline jule::Ptr<_210e565c5_Expr> _212449e19_buildExpr(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _29634_tokens) {
	jule::Ptr<_212438be9_exprBuilder> _29717_ep = jule::new_ptr<_212438be9_exprBuilder>(_212438be9_exprBuilder{._field_p=_self_});;
	jule::Ptr<_210e565c5_Expr> _30017_expr = _21244363d_buildFromTokens(_29717_ep.ptr(), _29634_tokens);;
	return _30017_expr;
}



inline jule::Ptr<_210e1d8ab_Directive> _21244a227_buildDirective(_212448d80_parser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _30437_tokens) {
	if ((_30437_tokens.len() == 1LL)) {
		_2124497dc_pushErr(&(*_self_), _30437_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_30437_tokens[1LL].get()._field_Column != (_30437_tokens[0LL].get()._field_Column + 1LL))) {
		_2124497dc_pushErr(&(*_self_), _30437_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_210e1d8ab_Directive>(_210e1d8ab_Directive{._field_Tag=_30437_tokens[1LL], ._field_Args=_30437_tokens.slice(2LL)});
}



inline void _21244a49c_pushDirective(_212448d80_parser* _self_, jule::Ptr<_210e1d8ab_Directive> _31936_d) {
	if ((_31936_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_224b9ed76:;
		if (it != expr.end()) {
			jule::Ptr<_210e1d8ab_Directive> _32416_pd = *it;
			{
				if ((_31936_d.get()._field_Tag.get()._field_Kind == _32416_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_224b9ed76:;
			++it;
			goto _iter_begin_224b9ed76;
		}
		_iter_end_224b9ed76:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_31936_d);;
}



inline jule::Ptr<_210e623c2_ScopeTree> _21244a854_buildScope(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _33235_tokens, jule::Ptr<_20e7ddc0b_Token> _33257_end) {
	jule::Ptr<_210e623c2_ScopeTree> _33317_s = _21242acda_newScope();;
	_33317_s.get()._field_End=_33257_end;
	_21242c737_scopeParser _33517_sp = _21242c737_scopeParser{._field_p=_self_, };;
	_2124382c0_build(&_33517_sp, _33235_tokens,_33317_s);
	return _33317_s;
}



inline std::tuple<jule::Ptr<_210e520a4_TypeDecl>,jule::Bool> _21244aca5__buildType(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _34242_tokens, jule::I64* _34313_i, jule::Bool _34322_err) {
	_212459e5c_typeBuilder _34417_tb = _212459e5c_typeBuilder{._field_p=_self_, ._field_tokens=_34242_tokens, ._field_i=_34313_i, ._field_err=_34322_err};;
	jule::Ptr<_210e520a4_TypeDecl> _35018_decl;;
	jule::Bool _35024_ok;;
	std::tie(_35018_decl,_35024_ok) = _21245d317_build(&_34417_tb);
	return std::make_tuple(_35018_decl,_35024_ok);
}



inline std::tuple<jule::Ptr<_210e520a4_TypeDecl>,jule::Bool> _21244b206_buildType(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _35541_tokens, jule::I64* _35613_i, jule::Bool _35622_err) {
	jule::Ptr<_20e7ddc0b_Token> _35713_token = _35541_tokens[(*(_35613_i))];;
	jule::Ptr<_210e520a4_TypeDecl> _35818_t;;
	jule::Bool _35821_ok;;
	std::tie(_35818_t,_35821_ok) = _21244aca5__buildType(_self_, _35541_tokens,_35613_i,_35622_err);
	if ((_35622_err && (!(_35821_ok)))) {
		_2124497dc_pushErr(_self_.ptr(), _35713_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_35818_t,_35821_ok);
}



inline jule::Ptr<_210e68708_TypeAliasDecl> _21244b514_buildTypeAliasDecl(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _36543_tokens) {
	jule::I64 _36617_i = 1LL;;
	if ((_36617_i >= _36543_tokens.len())) {
		_2124497dc_pushErr(_self_.ptr(), _36543_tokens[(_36617_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_210e68708_TypeAliasDecl> _37117_tad = jule::new_ptr<_210e68708_TypeAliasDecl>(_210e68708_TypeAliasDecl{._field_Token=_36543_tokens[1LL], ._field_Ident=_36543_tokens[1LL].get()._field_Kind, });;
	jule::Ptr<_20e7ddc0b_Token> _37517_token = _36543_tokens[_36617_i];;
	if ((_37517_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2124497dc_pushErr(_self_.ptr(), _37517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_36617_i)++;
	if ((_36617_i >= _36543_tokens.len())) {
		_2124497dc_pushErr(_self_.ptr(), _36543_tokens[(_36617_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _37117_tad;
	};
	_37517_token=_36543_tokens[_36617_i];
	if ((_37517_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_2124497dc_pushErr(_self_.ptr(), _36543_tokens[(_36617_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _37117_tad;
	};
	(_36617_i)++;
	if ((_36617_i >= _36543_tokens.len())) {
		_2124497dc_pushErr(_self_.ptr(), _36543_tokens[(_36617_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _37117_tad;
	};
	jule::Ptr<_210e520a4_TypeDecl> _39618_t;;
	jule::Bool _39621_ok;;
	std::tie(_39618_t,_39621_ok) = _21244b206_buildType(_self_, _36543_tokens,(&(_36617_i)),true);
	_37117_tad.get()._field_Kind=_39618_t;
	if ((_39621_ok && (_36617_i < _36543_tokens.len()))) {
		_2124497dc_pushErr(_self_.ptr(), _36543_tokens[_36617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_37117_tad.get()._field_Public=_212458a2c_isPub(_37117_tad.get()._field_Ident);
	return _37117_tad;
}



inline void _21244b833_buildVarTypeAndExpr(jule::Ptr<_212448d80_parser> _self_, jule::Ptr<_210e64d97_VarDecl>& _40544_v, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _40562_tokens) {
	jule::I64 _40617_i = 0LL;;
	jule::Ptr<_20e7ddc0b_Token> _40717_tok = _40562_tokens[_40617_i];;
	if ((_40717_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_40617_i)++;
		if (((_40617_i >= _40562_tokens.len()) || ((_40562_tokens[_40617_i].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_40562_tokens[_40617_i].get()._field_Kind == jule::Str("=", 1))))) {
			_2124497dc_pushErr(_self_.ptr(), _40717_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_210e520a4_TypeDecl> _41522_t;;
		jule::Bool _41525_ok;;
		std::tie(_41522_t,_41525_ok) = _21244b206_buildType(_self_, _40562_tokens,(&(_40617_i)),true);
		if (_41525_ok) {
			_40544_v.get()._field_Kind=_41522_t;
			if ((_40617_i >= _40562_tokens.len())) {
				return;;
			};
			_40717_tok=_40562_tokens[_40617_i];
		};
	};
	if ((_40717_tok.get()._field_Id == static_cast<jule::U64>(7LLU))) {
		if ((_40717_tok.get()._field_Kind != jule::Str("=", 1))) {
			_2124497dc_pushErr(_self_.ptr(), _40717_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _43021_exprTokens = _40562_tokens.slice((_40617_i + 1LL));;
		if ((_43021_exprTokens.len() == 0LL)) {
			_2124497dc_pushErr(_self_.ptr(), _40717_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_40544_v.get()._field_Expr=_212449e19_buildExpr(_self_, _43021_exprTokens);
	} else {
		_2124497dc_pushErr(_self_.ptr(), _40717_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _21244bb52_buildVarCommon(jule::Ptr<_212448d80_parser> _self_, jule::Ptr<_210e64d97_VarDecl>& _44139_v, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _44156_tokens) {
	_44139_v.get()._field_Token=_44156_tokens[0LL];
	if ((_44139_v.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2124497dc_pushErr(_self_.ptr(), _44139_v.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_44139_v.get()._field_Ident=_44139_v.get()._field_Token.get()._field_Kind;
	_44139_v.get()._field_Public=_212458a2c_isPub(_44139_v.get()._field_Ident);
	_44139_v.get()._field_Kind=nullptr;
	if ((_44156_tokens.len() > 1LL)) {
		_44156_tokens=_44156_tokens.slice(1LL);
		_21244b833_buildVarTypeAndExpr(_self_, _44139_v,_44156_tokens);
	};
}



inline void _21244c01a_buildVarBegin(_212448d80_parser* _self_, jule::Ptr<_210e64d97_VarDecl>& _45737_v, jule::I64& _45755_i, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _45764_tokens) {
	jule::Ptr<_20e7ddc0b_Token> _45813_tok = _45764_tokens[_45755_i];;
	{
		auto &_match_expr{ _45813_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_224bb96dc:;
			{
				_45737_v.get()._field_Statically=true;
				goto _case_begin_224bba5de;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_224bba5de:;
			{
				(_45755_i)++;
				if ((_45755_i >= _45764_tokens.len())) {
					_2124497dc_pushErr(&(*_self_), _45813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_45764_tokens[_45755_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_45737_v.get()._field_Mutable=true;
					(_45755_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_224bba655:;
			{
				(_45755_i)++;
				_45737_v.get()._field_Constant=true;
			}
		}
		else {
			_case_begin_224bb9b93:;
			{
				_2124497dc_pushErr(&(*_self_), _45813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_224bb99d9:;
	};
	if ((_45755_i >= _45764_tokens.len())) {
		_2124497dc_pushErr(&(*_self_), _45813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_210e64d97_VarDecl> _21244c328_buildVar(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _48732_tokens) {
	jule::I64 _48817_i = 0LL;;
	jule::Ptr<_210e64d97_VarDecl> _48917_v = jule::new_ptr<_210e64d97_VarDecl>(_210e64d97_VarDecl{._field_Token=_48732_tokens[0LL], });;
	_21244c01a_buildVarBegin(_self_.ptr(), _48917_v,_48817_i,_48732_tokens);
	if ((_48817_i >= _48732_tokens.len())) {
		return nullptr;
	};
	_48732_tokens=_48732_tokens.slice(_48817_i);
	if (((_48732_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_48732_tokens[0LL].get()._field_Kind == jule::Str("&", 1)))) {
		_48917_v.get()._field_Reference=true;
		if ((_48732_tokens.len() == 1LL)) {
			return nullptr;
		};
		_48732_tokens=_48732_tokens.slice(1LL);
	};
	_21244bb52_buildVarCommon(_self_, _48917_v,_48732_tokens);
	return _48917_v;
}



inline jule::Ptr<_210e5e688_GenericDecl> _21244c636_buildGeneric(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _50937_tokens) {
	jule::Ptr<_210e5e688_GenericDecl> _51017_g = jule::new_ptr<_210e5e688_GenericDecl>(_210e5e688_GenericDecl{._field_Token=_50937_tokens[0LL], });;
	if ((_51017_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2124497dc_pushErr(_self_.ptr(), _51017_g.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_51017_g.get()._field_Ident=_51017_g.get()._field_Token.get()._field_Kind;
	if ((_50937_tokens.len() > 1LL)) {
		if ((_50937_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
			_2124497dc_pushErr(_self_.ptr(), _50937_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		if ((_50937_tokens.len() == 2LL)) {
			_2124497dc_pushErr(_self_.ptr(), _50937_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _52721_constraintTokens = _50937_tokens.slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _52822_parts;;
		jule::Slice<_20e4ba377_Log> _52829_errors;;
		std::tie(_52822_parts,_52829_errors) = _212447774_partsKind(_52721_constraintTokens,jule::Str("|", 1),true);
		if ((_52829_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52829_errors);
			return nullptr;
		};
		_51017_g.get()._field_Constraint=jule::new_ptr<_210e5e215_Constraint>(_210e5e215_Constraint{._field_Mask=jule::Slice<jule::Ptr<_210e520a4_TypeDecl>>::alloc(0LL,_52822_parts.len())});
		{
			auto &expr = _52822_parts;
			auto it = expr.begin();
			_iter_begin_224bc7d05:;
			if (it != expr.end()) {
				jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _53425_part = *it;
				{
					jule::I64 _53525_i = 0LL;;
					jule::Ptr<_210e520a4_TypeDecl> _53626_kind;;
					std::tie(_53626_kind,std::ignore) = _21244b206_buildType(_self_, _53425_part,(&(_53525_i)),true);
					_51017_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_51017_g.get()._field_Constraint.get()._field_Mask,1);_51017_g.get()._field_Constraint.get()._field_Mask.__push(_53626_kind);;
					if ((_53525_i < _53425_part.len())) {
						_2124497dc_pushErr(_self_.ptr(), _53425_part[_53525_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				}
				_iter_next_224bc7d05:;
				++it;
				goto _iter_begin_224bc7d05;
			}
			_iter_end_224bc7d05:;
		};
	};
	return _51017_g;
}



inline jule::Slice<jule::Ptr<_210e5e688_GenericDecl>> _21244c9dd_buildGenerics(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _54638_tokens, jule::Ptr<_20e7ddc0b_Token>& _54657_errorToken) {
	if ((_54638_tokens.len() == 0LL)) {
		_2124497dc_pushErr(_self_.ptr(), _54657_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _55218_parts;;
	jule::Slice<_20e4ba377_Log> _55225_errors;;
	std::tie(_55218_parts,_55225_errors) = _212447b5e_parts(_54638_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_55225_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_55225_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_210e5e688_GenericDecl>> _55817_generics = jule::Slice<jule::Ptr<_210e5e688_GenericDecl>>::alloc(0LL,_55218_parts.len());;
	{
		auto &expr = _55218_parts;
		auto it = expr.begin();
		_iter_begin_224bcc997:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _55921_part = *it;
			{
				_55817_generics = jule::alloc_for_append(_55817_generics,1);_55817_generics.__push(_21244c636_buildGeneric(_self_, _55921_part));;
			}
			_iter_next_224bcc997:;
			++it;
			goto _iter_begin_224bcc997;
		}
		_iter_end_224bcc997:;
	};
	return _55817_generics;
}



inline jule::Ptr<_210e62a98_ParamDecl> _21244cceb_buildSelfParam(_212448d80_parser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _56637_tokens) {
	if ((_56637_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_210e62a98_ParamDecl> _57117_param = jule::new_ptr<_210e62a98_ParamDecl>();;
	jule::I64 _57417_i = 0LL;;
	if ((_56637_tokens[_57417_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_57117_param.get()._field_Mutable=true;
		(_57417_i)++;
		if ((_57417_i >= _56637_tokens.len())) {
			_2124497dc_pushErr(&(*_self_), _56637_tokens[(_57417_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56637_tokens[_57417_i].get()._field_Kind == jule::Str("&", 1))) {
		_57117_param.get()._field_Ident=jule::Str("&", 1);
		(_57417_i)++;
		if ((_57417_i >= _56637_tokens.len())) {
			_2124497dc_pushErr(&(*_self_), _56637_tokens[(_57417_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56637_tokens[_57417_i].get()._field_Id == static_cast<jule::U64>(27LLU))) {
		_57117_param.get()._field_Ident+=jule::Str("self", 4);
		_57117_param.get()._field_Token=_56637_tokens[_57417_i];
		(_57417_i)++;
		if ((_57417_i < _56637_tokens.len())) {
			_2124497dc_pushErr(&(*_self_), _56637_tokens[_57417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _57117_param;
}



inline void _21244d1b4_paramTypeBegin(_212448d80_parser* _self_, jule::Ptr<_210e62a98_ParamDecl>& _60538_param, jule::I64& _60562_i, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _60571_tokens) {
	for (; (_60562_i < _60571_tokens.len()); (_60562_i)++) {
		{
			jule::Ptr<_20e7ddc0b_Token> _60717_token = _60571_tokens[_60562_i];;
			if ((_60717_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60717_token.get()._field_Kind != jule::Str("...", 3))) {
				return;;
			};
			if (_60538_param.get()._field_Variadic) {
				_2124497dc_pushErr(&(*_self_), _60717_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_224bd4262;
			};
			_60538_param.get()._field_Variadic=true;
		}
	_iter_next_224bd4262:;
	}
	_iter_end_224bd4262:;;
}



inline void _21244d4d3_buildParamType(jule::Ptr<_212448d80_parser> _self_, jule::Ptr<_210e62a98_ParamDecl>& _62239_param, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _62263_tokens) {
	jule::I64 _62317_i = 0LL;;
	_21244d1b4_paramTypeBegin(_self_.ptr(), _62239_param,_62317_i,_62263_tokens);
	if ((_62317_i >= _62263_tokens.len())) {
		return;;
	};
	std::tie(_62239_param.get()._field_Kind,std::ignore) = _21244b206_buildType(_self_, _62263_tokens,(&(_62317_i)),true);
	if ((_62317_i < _62263_tokens.len())) {
		_2124497dc_pushErr(_self_.ptr(), _62263_tokens[_62317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _21244d802_buildParamBody(jule::Ptr<_212448d80_parser> _self_, jule::Ptr<_210e62a98_ParamDecl>& _63539_param, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _63562_tokens) {
	jule::Ptr<_20e7ddc0b_Token> _63617_tok = _63562_tokens[0LL];;
	_63539_param.get()._field_Ident=_63617_tok.get()._field_Kind;
	if ((_63562_tokens.len() == 1LL)) {
		return;;
	} else if ((_63562_tokens.len() < 3LL)) {
		_2124497dc_pushErr(_self_.ptr(), _63617_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_63562_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_21244d4d3_buildParamType(_self_, _63539_param,_63562_tokens);
		return;;
	};
	_63562_tokens=_63562_tokens.slice(2LL);
	_21244d4d3_buildParamType(_self_, _63539_param,_63562_tokens);
}



inline jule::Ptr<_210e62a98_ParamDecl> _21244db10_buildParam(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _65334_tokens) {
	jule::Ptr<_210e62a98_ParamDecl> _65417_param = jule::new_ptr<_210e62a98_ParamDecl>(_210e62a98_ParamDecl{._field_Token=_65334_tokens[0LL], });;
	if ((_65417_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_65417_param.get()._field_Mutable=true;
		if ((_65334_tokens.len() == 1LL)) {
			_2124497dc_pushErr(_self_.ptr(), _65334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_65334_tokens=_65334_tokens.slice(1LL);
		_65417_param.get()._field_Token=_65334_tokens[0LL];
	};
	if ((_65334_tokens.len() >= 3LL)) {
		if (((_65417_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_65417_param.get()._field_Token.get()._field_Kind == jule::Str("&", 1)))) {
			if ((_65334_tokens.len() == 1LL)) {
				_2124497dc_pushErr(_self_.ptr(), _65334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_65334_tokens[1LL].get()._field_Id == static_cast<jule::U64>(2LLU)) && (_65334_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
				_65417_param.get()._field_Reference=true;
				_65334_tokens=_65334_tokens.slice(1LL);
				_65417_param.get()._field_Token=_65334_tokens[0LL];
			};
		};
	};
	if ((_65417_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_65417_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_21244d4d3_buildParamType(_self_, _65417_param,_65334_tokens);
	} else {
		_21244d802_buildParamBody(_self_, _65417_param,_65334_tokens);
	};
	return _65417_param;
}



inline void _21244dd85_checkParams(_212448d80_parser* _self_, jule::Slice<jule::Ptr<_210e62a98_ParamDecl>>& _69635_params) {
	{
		auto &expr = _69635_params;
		auto it = expr.begin();
		_iter_begin_224be398b:;
		if (it != expr.end()) {
			jule::Ptr<_210e62a98_ParamDecl> _69721_param = *it;
			{
				if ((_210e62e0b_IsSelf(_69721_param.ptr()) || (_69721_param.get()._field_Kind != nullptr))) {
					goto _iter_next_224be398b;
				};
				if ((_69721_param.get()._field_Token == nullptr)) {
					_2124497dc_pushErr(&(*_self_), _69721_param.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_69721_param.get()._field_Kind=jule::new_ptr<_210e520a4_TypeDecl>(_210e520a4_TypeDecl{._field_Token=_69721_param.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_210e5266a_IdentTypeDecl>(_210e5266a_IdentTypeDecl{._field_Token=_69721_param.get()._field_Token, ._field_Ident=_69721_param.get()._field_Token.get()._field_Kind, }))});
					_69721_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_224be398b:;
			++it;
			goto _iter_begin_224be398b;
		}
		_iter_end_224be398b:;
	};
}



inline jule::Slice<jule::Ptr<_210e62a98_ParamDecl>> _21244e23c_buildParams(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _71636_tokens, jule::Bool _71654_method) {
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _71718_parts;;
	jule::Slice<_20e4ba377_Log> _71725_errs;;
	std::tie(_71718_parts,_71725_errs) = _212447b5e_parts(_71636_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71725_errs);
	if ((_71718_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_210e62a98_ParamDecl>> _72317_params = nullptr;;
	if ((_71654_method && (_71718_parts.len() > 0LL))) {
		jule::Ptr<_210e62a98_ParamDecl> _72521_param = _21244cceb_buildSelfParam(_self_.ptr(), _71718_parts[0LL]);;
		if (((_72521_param != nullptr) && _210e62e0b_IsSelf(_72521_param.ptr()))) {
			_72317_params = jule::alloc_for_append(_72317_params,1);_72317_params.__push(_72521_param);;
			_71718_parts=_71718_parts.slice(1LL);
		};
	};
	{
		auto &expr = _71718_parts;
		auto it = expr.begin();
		_iter_begin_224be83b9:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _73221_part = *it;
			{
				jule::Ptr<_210e62a98_ParamDecl> _73321_param = _21244db10_buildParam(_self_, _73221_part);;
				if ((_73321_param != nullptr)) {
					_72317_params = jule::alloc_for_append(_72317_params,1);_72317_params.__push(_73321_param);;
				};
			}
			_iter_next_224be83b9:;
			++it;
			goto _iter_begin_224be83b9;
		}
		_iter_end_224be83b9:;
	};
	_21244dd85_checkParams(_self_.ptr(), _72317_params);
	return _72317_params;
}



inline std::tuple<jule::Ptr<_210e551b7_RetTypeDecl>,jule::Bool> _21244e5e4_buildMultiRetType(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _74342_tokens, jule::I64& _74365_i) {
	jule::Ptr<_210e551b7_RetTypeDecl> _74375_t = jule::Ptr<_210e551b7_RetTypeDecl>();
	jule::Bool _74392_ok = jule::Bool();
	_74375_t=jule::new_ptr<_210e551b7_RetTypeDecl>();
	(_74365_i)++;
	if ((_74365_i >= _74342_tokens.len())) {
		(_74365_i)--;
		std::tie(_74375_t.get()._field_Kind,_74392_ok) = _21244b206_buildType(_self_, _74342_tokens,(&(_74365_i)),false);
		return std::make_tuple(_74375_t,_74392_ok);
	};
	(_74365_i)--;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _75317_rangeTokens = _2124470e2_range(_74365_i,jule::Str("(", 1),jule::Str(")", 1),_74342_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _75518_parts;;
	jule::Slice<_20e4ba377_Log> _75525_errs;;
	std::tie(_75518_parts,_75525_errs) = _212447b5e_parts(_75317_rangeTokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_75525_errs);
	if ((_75518_parts.len() == 0LL)) {
		return std::make_tuple(_74375_t,_74392_ok);
	};
	jule::Slice<jule::Ptr<_210e520a4_TypeDecl>> _76117_types = jule::Slice<jule::Ptr<_210e520a4_TypeDecl>>::alloc(0LL,_75518_parts.len());;
	_74375_t.get()._field_Idents=jule::Slice<jule::Ptr<_20e7ddc0b_Token>>::alloc(0LL,_75518_parts.len());
	{
		auto &expr = _75518_parts;
		auto it = expr.begin();
		_iter_begin_224beeaa7:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _76321_part = *it;
			{
				jule::Ptr<_20e7ddc0b_Token> _76421_token = _76321_part[0LL];;
				jule::I64 _76521_offset = 0LL;;
				if ((_76321_part.len() > 1LL)) {
					_76421_token=_76321_part[1LL];
					if ((_76421_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_76521_offset=2LL;
						if ((_76321_part.len() < 3LL)) {
							_2124497dc_pushErr(_self_.ptr(), _76421_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_224beeaa7;
						};
					};
				};
				_76421_token=_76321_part[0LL];
				if ((_76521_offset != 2LL)) {
					jule::Ptr<_20e7ddc0b_Token> _78125_newToken = jule::new_ptr<_20e7ddc0b_Token>((*(_76421_token)));;
					_78125_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					_74375_t.get()._field_Idents = jule::alloc_for_append(_74375_t.get()._field_Idents,1);_74375_t.get()._field_Idents.__push(_78125_newToken);;
				} else {
					_74375_t.get()._field_Idents = jule::alloc_for_append(_74375_t.get()._field_Idents,1);_74375_t.get()._field_Idents.__push(_76421_token);;
				};
				jule::Ptr<_210e520a4_TypeDecl> _78822_tk;;
				std::tie(_78822_tk,std::ignore) = _21244b206_buildType(_self_, _76321_part,(&(_76521_offset)),true);
				if ((_76521_offset < _76321_part.len())) {
					_2124497dc_pushErr(_self_.ptr(), _76321_part[_76521_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_76117_types = jule::alloc_for_append(_76117_types,1);_76117_types.__push(_78822_tk);;
			}
			_iter_next_224beeaa7:;
			++it;
			goto _iter_begin_224beeaa7;
		}
		_iter_end_224beeaa7:;
	};
	if ((_76117_types.len() > 1LL)) {
		_74375_t.get()._field_Kind=jule::new_ptr<_210e520a4_TypeDecl>(_210e520a4_TypeDecl{._field_Token=_74342_tokens[0LL], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_210e53b44_TupleTypeDecl>(_210e53b44_TupleTypeDecl{._field_Types=_76117_types}))});
	} else {
		_74375_t.get()._field_Kind=_76117_types[0LL];
	};
	_74392_ok=true;
	return std::make_tuple(_74375_t,_74392_ok);
}



inline std::tuple<jule::Ptr<_210e551b7_RetTypeDecl>,jule::Bool> _21244e99b_buildRetType(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _81137_tokens, jule::I64& _81160_i) {
	jule::Ptr<_210e551b7_RetTypeDecl> _81170_t = jule::Ptr<_210e551b7_RetTypeDecl>();
	jule::Bool _81187_ok = jule::Bool();
	_81170_t=jule::new_ptr<_210e551b7_RetTypeDecl>();
	if ((_81160_i >= _81137_tokens.len())) {
		return std::make_tuple(_81170_t,_81187_ok);
	};
	jule::Ptr<_20e7ddc0b_Token> _81717_token = _81137_tokens[_81160_i];;
	{
		auto &_match_expr{ _81717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_224c086c6:;
			{
				if ((_81717_token.get()._field_Kind == jule::Str("{", 1))) {
					return std::make_tuple(_81170_t,_81187_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_224c0873c:;
			{
				if ((_81717_token.get()._field_Kind == jule::Str("=", 1))) {
					return std::make_tuple(_81170_t,_81187_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_224c087a3:;
			{
				if (((_81160_i + 1LL) >= _81137_tokens.len())) {
					_2124497dc_pushErr(_self_.ptr(), _81717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_81170_t,_81187_ok);
				};
				(_81160_i)++;
				_81717_token=_81137_tokens[_81160_i];
				if ((_81717_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81717_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_224c0b333:;
							{
								std::tie(_81170_t,_81187_ok) = _21244e5e4_buildMultiRetType(_self_, _81137_tokens,_81160_i);
								return std::make_tuple(_81170_t,_81187_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_224c0b399:;
							{
								_2124497dc_pushErr(_self_.ptr(), _81717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_81170_t,_81187_ok);
							}
						}
						_match_end_224c0b135:;
					};
				};
				std::tie(_81170_t.get()._field_Kind,_81187_ok) = _21244b206_buildType(_self_, _81137_tokens,(&(_81160_i)),true);
				return std::make_tuple(_81170_t,_81187_ok);
			}
		}
		_match_end_224c0861b:;
	};
	(_81160_i)++;
	_2124497dc_pushErr(_self_.ptr(), _81717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_81170_t,_81187_ok);
}



inline jule::Ptr<_210e63db8_FnDecl> _21244edec_buildFnPrototype(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _85641_tokens, jule::I64& _85664_i, jule::Bool _85672_method) {
	jule::Ptr<_210e63db8_FnDecl> _85717_f = jule::new_ptr<_210e63db8_FnDecl>(_210e63db8_FnDecl{._field_Token=_85641_tokens[_85664_i], });;
	if ((_85717_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		_85717_f.get()._field_Statically=true;
		(_85664_i)++;
		if ((_85664_i >= _85641_tokens.len())) {
			_2124497dc_pushErr(_self_.ptr(), _85717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85717_f.get()._field_Token=_85641_tokens[_85664_i];
	};
	if ((_85717_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_85717_f.get()._field_Unsafety=true;
		(_85664_i)++;
		if ((_85664_i >= _85641_tokens.len())) {
			_2124497dc_pushErr(_self_.ptr(), _85717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85717_f.get()._field_Token=_85641_tokens[_85664_i];
	};
	(_85664_i)++;
	if ((_85664_i >= _85641_tokens.len())) {
		_2124497dc_pushErr(_self_.ptr(), _85717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20e7ddc0b_Token> _89013_tok = _85641_tokens[_85664_i];;
	if ((_89013_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		(_85664_i)++;
		if ((_85664_i >= _85641_tokens.len())) {
			_2124497dc_pushErr(_self_.ptr(), _85717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85717_f.get()._field_Ident=_89013_tok.get()._field_Kind;
	} else {
		_85717_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_20e7ddc0b_Token> _90213_errorToken = _85641_tokens[_85664_i];;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _90317_genericsTokens = _2124470e2_range(_85664_i,jule::Str("[", 1),jule::Str("]", 1),_85641_tokens);;
	if ((_90317_genericsTokens != nullptr)) {
		_85717_f.get()._field_Generics=_21244c9dd_buildGenerics(_self_, _90317_genericsTokens,_90213_errorToken);
	};
	if ((_85641_tokens[_85664_i].get()._field_Kind != jule::Str("(", 1))) {
		_2124497dc_pushErr(_self_.ptr(), _85641_tokens[_85664_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _91317_paramsToks = _2124470e2_range(_85664_i,jule::Str("(", 1),jule::Str(")", 1),_85641_tokens);;
	if ((_91317_paramsToks.len() > 0LL)) {
		_85717_f.get()._field_Params=_21244e23c_buildParams(_self_, _91317_paramsToks,_85672_method);
	};
	if ((_85664_i < _85641_tokens.len())) {
		jule::Ptr<_20e7ddc0b_Token> _91917_token = _85641_tokens[_85664_i];;
		if (((_91917_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_91917_token.get()._field_Kind == jule::Str("!", 1)))) {
			_85717_f.get()._field_Exceptional=true;
			(_85664_i)++;
		};
	};
	_85717_f.get()._field_Public=_212458a2c_isPub(_85717_f.get()._field_Ident);
	std::tie(_85717_f.get()._field_Result,std::ignore) = _21244e99b_buildRetType(_self_, _85641_tokens,_85664_i);
	return _85717_f;
}



inline jule::Ptr<_210e63db8_FnDecl> _21245034d_buildFn(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _93332_tokens, jule::Bool _93350_method, jule::Bool _93364_prototype) {
	jule::I64 _93417_i = 0LL;;
	jule::Ptr<_210e63db8_FnDecl> _93517_f = _21244edec_buildFnPrototype(_self_, _93332_tokens,_93417_i,_93350_method);;
	if (_93364_prototype) {
		if ((_93417_i < _93332_tokens.len())) {
			_2124497dc_pushErr(_self_.ptr(), _93332_tokens[(_93417_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _93517_f;
	} else if ((_93517_f == nullptr)) {
		return _93517_f;
	};
	if ((_93417_i >= _93332_tokens.len())) {
		_2124491b0_stop(_self_.ptr());
		_2124497dc_pushErr(_self_.ptr(), _93517_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _95117_blockTokens = _2124470e2_range(_93417_i,jule::Str("{", 1),jule::Str("}", 1),_93332_tokens);;
	if ((_95117_blockTokens != nullptr)) {
		_93517_f.get()._field_Scope=_21244a854_buildScope(_self_, _95117_blockTokens,_93332_tokens[(_93417_i - 1LL)]);
		_93517_f.get()._field_Scope.get()._field_Unsafety=_93517_f.get()._field_Unsafety;
		if ((_93417_i < _93332_tokens.len())) {
			_2124497dc_pushErr(_self_.ptr(), _93332_tokens[_93417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_2124491b0_stop(_self_.ptr());
		_2124497dc_pushErr(_self_.ptr(), _93517_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _93517_f;
}



inline jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _21245065b_getUseDeclSelectors(_212448d80_parser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _96742_tokens) {
	jule::I64 _96817_i = 0LL;;
	_96742_tokens=_2124470e2_range(_96817_i,jule::Str("{", 1),jule::Str("}", 1),_96742_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _97018_parts;;
	jule::Slice<_20e4ba377_Log> _97025_errs;;
	std::tie(_97018_parts,_97025_errs) = _212447b5e_parts(_96742_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_97025_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_97025_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _97617_selectors = jule::Slice<jule::Ptr<_20e7ddc0b_Token>>::alloc(0LL,_97018_parts.len());;
	{
		auto &expr = _97018_parts;
		auto it = expr.begin();
		_iter_begin_224c23317:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _97721_part = *it;
			{
				if ((_97721_part.len() > 1LL)) {
					_2124497dc_pushErr(&(*_self_), _97721_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_20e7ddc0b_Token> _98121_tok = _97721_part[0LL];;
				if (((_98121_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) && (_98121_tok.get()._field_Id != static_cast<jule::U64>(27LLU)))) {
					_2124497dc_pushErr(&(*_self_), _98121_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_212449b0b_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_224c23317;
				};
				_97617_selectors = jule::alloc_for_append(_97617_selectors,1);_97617_selectors.__push(_98121_tok);;
			}
			_iter_next_224c23317:;
			++it;
			goto _iter_begin_224c23317;
		}
		_iter_end_224c23317:;
	};
	return _97617_selectors;
}



inline void _21245097a_buildCppUseDecl(_212448d80_parser* _self_, jule::Ptr<_210e69ae4_UseDecl>& _99239_decl, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _99256_tokens) {
	if ((_99256_tokens.len() > 1LL)) {
		_2124497dc_pushErr(&(*_self_), _99256_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20e7ddc0b_Token> _99613_token = _99256_tokens[0LL];;
	if (((_99613_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || ((_99613_token.get()._field_Kind[0LL] != '`') && (_99613_token.get()._field_Kind[0LL] != '\"')))) {
		_2124497dc_pushErr(&(*_self_), _99613_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_99239_decl.get()._field_CppLinked=true;
	_99239_decl.get()._field_LinkPath=_99613_token.get()._field_Kind.slice(1LL,(_99613_token.get()._field_Kind.len() - 1LL));
}



inline void _212450c99_buildStdUseDecl(_212448d80_parser* _self_, jule::Ptr<_210e69ae4_UseDecl>& _100539_decl, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _100559_tokens) {
	_100539_decl.get()._field_Std=true;
	jule::Ptr<_20e7ddc0b_Token> _100817_token = _100559_tokens[0LL];;
	if ((_100559_tokens.len() < 3LL)) {
		_2124497dc_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_100559_tokens=_100559_tokens.slice(2LL);
	_100817_token=_100559_tokens[(_100559_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_224c2be14:;
			{
				_2124497dc_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_224c2be8b:;
			{
				if ((_100817_token.get()._field_Kind != jule::Str("}", 1))) {
					_2124497dc_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _102521_selectors = nullptr;;
				std::tie(_100559_tokens,_102521_selectors) = _212447389_rangeLast(_100559_tokens);
				_100539_decl.get()._field_Selected=_21245065b_getUseDeclSelectors(&(*_self_), _102521_selectors);
				if ((_100559_tokens.len() == 0LL)) {
					_2124497dc_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100817_token=_100559_tokens[(_100559_tokens.len() - 1LL)];
				if ((_100817_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_2124497dc_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100559_tokens=_100559_tokens.slice(0LL,(_100559_tokens.len() - 1LL));
				if ((_100559_tokens.len() == 0LL)) {
					_2124497dc_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_224c2c013:;
			{
				if ((_100817_token.get()._field_Kind != jule::Str("*", 1))) {
					_2124497dc_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100559_tokens=_100559_tokens.slice(0LL,(_100559_tokens.len() - 1LL));
				if ((_100559_tokens.len() == 0LL)) {
					_2124497dc_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100817_token=_100559_tokens[(_100559_tokens.len() - 1LL)];
				if ((_100817_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_2124497dc_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100559_tokens=_100559_tokens.slice(0LL,(_100559_tokens.len() - 1LL));
				if ((_100559_tokens.len() == 0LL)) {
					_2124497dc_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100539_decl.get()._field_Full=true;
			}
		}
		_match_end_224c2bd8c:;
	};
	_100539_decl.get()._field_LinkPath=(jule::Str("std::", 5) + _2124489b7_tokstoa(_100559_tokens));
}



inline void _2124510b8_buildIdentUseDecl(_212448d80_parser* _self_, jule::Ptr<_210e69ae4_UseDecl>& _106741_decl, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _106761_tokens) {
	_106741_decl.get()._field_Std=false;
	jule::Ptr<_20e7ddc0b_Token> _107017_token = _106761_tokens[(_106761_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _107017_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_224c370ea:;
			{
				_2124497dc_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_224c372b5:;
			{
				if ((_107017_token.get()._field_Kind != jule::Str("}", 1))) {
					_2124497dc_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _108121_selectors = nullptr;;
				std::tie(_106761_tokens,_108121_selectors) = _212447389_rangeLast(_106761_tokens);
				_106741_decl.get()._field_Selected=_21245065b_getUseDeclSelectors(&(*_self_), _108121_selectors);
				if ((_106761_tokens.len() == 0LL)) {
					_2124497dc_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_107017_token=_106761_tokens[(_106761_tokens.len() - 1LL)];
				if ((_107017_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_2124497dc_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106761_tokens=_106761_tokens.slice(0LL,(_106761_tokens.len() - 1LL));
				if ((_106761_tokens.len() == 0LL)) {
					_2124497dc_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_224c3732b:;
			{
				if ((_107017_token.get()._field_Kind != jule::Str("*", 1))) {
					_2124497dc_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106761_tokens=_106761_tokens.slice(0LL,(_106761_tokens.len() - 1LL));
				if ((_106761_tokens.len() == 0LL)) {
					_2124497dc_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_107017_token=_106761_tokens[(_106761_tokens.len() - 1LL)];
				if ((_107017_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_2124497dc_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106761_tokens=_106761_tokens.slice(0LL,(_106761_tokens.len() - 1LL));
				if ((_106761_tokens.len() == 0LL)) {
					_2124497dc_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106741_decl.get()._field_Full=true;
			}
		}
		_match_end_224c37095:;
	};
	_106741_decl.get()._field_LinkPath=_2124489b7_tokstoa(_106761_tokens);
}



inline void _2124513d7_parseUseDecl(_212448d80_parser* _self_, jule::Ptr<_210e69ae4_UseDecl>& _113036_decl, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _113056_tokens) {
	if (_113036_decl.get()._field_CppLinked) {
		_21245097a_buildCppUseDecl(&(*_self_), _113036_decl,_113056_tokens);
		return;;
	};
	jule::Ptr<_20e7ddc0b_Token> _113617_token = _113056_tokens[0LL];;
	if ((_113617_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2124497dc_pushErr(&(*_self_), _113617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_113056_tokens.len() > 2LL) && (_113056_tokens[1LL].get()._field_Id == static_cast<jule::U64>(12LLU)))) {
		_113036_decl.get()._field_Alias=_113617_token.get()._field_Kind;
		if ((_113056_tokens[2LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_2124497dc_pushErr(&(*_self_), _113617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_212449b0b_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_113056_tokens=_113056_tokens.slice(2LL);
		_113617_token=_113056_tokens[0LL];
	};
	;
	{
		
		if ((_113617_token.get()._field_Kind == jule::Str("std", 3))) {
			_case_begin_224c43ada:;
			{
				_212450c99_buildStdUseDecl(&(*_self_), _113036_decl,_113056_tokens);
			}
		}
		else {
			_case_begin_224c45c0d:;
			{
				_2124510b8_buildIdentUseDecl(&(*_self_), _113036_decl,_113056_tokens);
			}
		}
		_match_end_224c45b97:;
	};
}



inline jule::Ptr<_210e69ae4_UseDecl> _21245178e_buildUseDecl(_212448d80_parser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _116435_tokens, jule::Bool _116453_cpp_linked) {
	jule::Ptr<_210e69ae4_UseDecl> _116517_decl = jule::new_ptr<_210e69ae4_UseDecl>(_210e69ae4_UseDecl{._field_Token=_116435_tokens[0LL], ._field_CppLinked=_116453_cpp_linked, });;
	if ((_116435_tokens.len() < 2LL)) {
		_2124497dc_pushErr(&(*_self_), _116517_decl.get()._field_Token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_116435_tokens=_116435_tokens.slice(1LL);
	_2124513d7_parseUseDecl(&(*_self_), _116517_decl,_116435_tokens);
	return _116517_decl;
}



inline jule::Ptr<_210e520a4_TypeDecl> _212451b46_buildTypeEnumItemKind(jule::Ptr<_212448d80_parser> _self_, jule::I64& _117846_i, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _117859_tokens) {
	jule::I64 _117917_braceN = 0LL;;
	jule::I64 _118013_exprStart = _117846_i;;
	for (; (_117846_i < _117859_tokens.len()); (_117846_i)++) {
		{
			jule::Ptr<_20e7ddc0b_Token> _118217_t = _117859_tokens[_117846_i];;
			if ((_118217_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _118217_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_224c4a2b7:;
						{
							(_117917_braceN)++;
							goto _iter_next_224c49b02;
						}
					}
					else {
						_case_begin_224c4ab7a:;
						{
							(_117917_braceN)--;
						}
					}
					_match_end_224c4a96b:;
				};
			};
			if ((_117917_braceN > 0LL)) {
				goto _iter_next_224c49b02;
			};
			if (((_118217_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_117846_i + 1LL) >= _117859_tokens.len()))) {
				jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _119825_kindTokens = nullptr;;
				if ((_118217_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_119825_kindTokens=_117859_tokens.slice(_118013_exprStart,_117846_i);
				} else {
					_119825_kindTokens=_117859_tokens.slice(_118013_exprStart);
				};
				jule::I64 _120425_j = 0LL;;
				jule::Ptr<_210e520a4_TypeDecl> _120526_kind;;
				std::tie(_120526_kind,std::ignore) = _21244b206_buildType(_self_, _119825_kindTokens,(&(_120425_j)),true);
				if ((_120425_j < _119825_kindTokens.len())) {
					_2124497dc_pushErr(_self_.ptr(), _119825_kindTokens[_120425_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _120526_kind;
			};
		}
	_iter_next_224c49b02:;
	}
	_iter_end_224c49b02:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_210e6b596_TypeEnumItemDecl>> _212451e54_buildTypeEnumItems(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _121543_tokens) {
	jule::Slice<jule::Ptr<_210e6b596_TypeEnumItemDecl>> _121617_items = jule::Slice<jule::Ptr<_210e6b596_TypeEnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _121717_i = 0LL;;
	for (; (_121717_i < _121543_tokens.len()); (_121717_i)++) {
		{
			jule::Ptr<_20e7ddc0b_Token> _121921_t = _121543_tokens[_121717_i];;
			jule::Ptr<_210e6b596_TypeEnumItemDecl> _122021_item = jule::new_ptr<_210e6b596_TypeEnumItemDecl>();;
			_122021_item.get()._field_Token=_121921_t;
			if (((_122021_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(2LLU)) && ((_121543_tokens.len() - _121717_i) > 2LL))) {
				_122021_item.get()._field_Ident=_122021_item.get()._field_Token.get()._field_Kind;
				_121921_t=_121543_tokens[(_121717_i + 1LL)];
				if ((_121921_t.get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_121717_i+=2LL;
					if (((_121717_i >= _121543_tokens.len()) || (_121543_tokens[_121717_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
						_2124497dc_pushErr(_self_.ptr(), _121921_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_224c50b5d;
					};
				};
			};
			_122021_item.get()._field_Kind=_212451b46_buildTypeEnumItemKind(_self_, _121717_i,_121543_tokens);
			_121617_items = jule::alloc_for_append(_121617_items,1);_121617_items.__push(_122021_item);;
		}
	_iter_next_224c50b5d:;
	}
	_iter_end_224c50b5d:;;
	return _121617_items;
}



inline jule::Ptr<_210e6b794_TypeEnumDecl> _212452262_buildTypeEnumDecl(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _123942_tokens) {
	jule::I64 _124017_i = 1LL;;
	jule::Ptr<_210e6b794_TypeEnumDecl> _124117_e = jule::new_ptr<_210e6b794_TypeEnumDecl>(_210e6b794_TypeEnumDecl{._field_Token=_123942_tokens[_124017_i], });;
	if ((_124117_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2124497dc_pushErr(_self_.ptr(), _124117_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_124117_e.get()._field_Ident=_124117_e.get()._field_Token.get()._field_Kind;
	_124017_i+=3LL;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _125117_itemTokens = _2124470e2_range(_124017_i,jule::Str("{", 1),jule::Str("}", 1),_123942_tokens);;
	if ((_125117_itemTokens == nullptr)) {
		_2124491b0_stop(_self_.ptr());
		_2124497dc_pushErr(_self_.ptr(), _124117_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _124117_e;
	} else if ((_124017_i < _123942_tokens.len())) {
		_2124497dc_pushErr(_self_.ptr(), _123942_tokens[_124017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_124117_e.get()._field_Public=_212458a2c_isPub(_124117_e.get()._field_Ident);
	_124117_e.get()._field_End=_123942_tokens[(_124017_i - 1LL)];
	_124117_e.get()._field_Items=_212451e54_buildTypeEnumItems(_self_, _125117_itemTokens);
	return _124117_e;
}



inline jule::Ptr<_210e565c5_Expr> _212452619_buildEnumItemExpr(jule::Ptr<_212448d80_parser> _self_, jule::I64& _126642_i, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _126655_tokens) {
	jule::I64 _126717_braceN = 0LL;;
	jule::I64 _126813_exprStart = _126642_i;;
	for (; (_126642_i < _126655_tokens.len()); (_126642_i)++) {
		{
			jule::Ptr<_20e7ddc0b_Token> _127017_t = _126655_tokens[_126642_i];;
			if ((_127017_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _127017_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_224c5bb03:;
						{
							(_126717_braceN)++;
							goto _iter_next_224c5b43d;
						}
					}
					else {
						_case_begin_224c5c4b6:;
						{
							(_126717_braceN)--;
						}
					}
					_match_end_224c5c2a7:;
				};
			};
			if ((_126717_braceN > 0LL)) {
				goto _iter_next_224c5b43d;
			};
			if (((_127017_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_126642_i + 1LL) >= _126655_tokens.len()))) {
				jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _128625_exprTokens = nullptr;;
				if ((_127017_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_128625_exprTokens=_126655_tokens.slice(_126813_exprStart,_126642_i);
				} else {
					_128625_exprTokens=_126655_tokens.slice(_126813_exprStart);
				};
				return _212449e19_buildExpr(_self_, _128625_exprTokens);
			};
		}
	_iter_next_224c5b43d:;
	}
	_iter_end_224c5b43d:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_210e6a067_EnumItemDecl>> _212452927_buildEnumItems(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _129839_tokens) {
	jule::Slice<jule::Ptr<_210e6a067_EnumItemDecl>> _129917_items = jule::Slice<jule::Ptr<_210e6a067_EnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _130017_i = 0LL;;
	for (; (_130017_i < _129839_tokens.len()); (_130017_i)++) {
		{
			jule::Ptr<_20e7ddc0b_Token> _130221_t = _129839_tokens[_130017_i];;
			jule::Ptr<_210e6a067_EnumItemDecl> _130321_item = jule::new_ptr<_210e6a067_EnumItemDecl>();;
			_130321_item.get()._field_Token=_130221_t;
			if ((_130321_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
				_2124497dc_pushErr(_self_.ptr(), _130321_item.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_130321_item.get()._field_Ident=_130321_item.get()._field_Token.get()._field_Kind;
			if ((((_130017_i + 1LL) >= _129839_tokens.len()) || (_129839_tokens[(_130017_i + 1LL)].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				if (((_130017_i + 1LL) < _129839_tokens.len())) {
					(_130017_i)++;
				};
				_129917_items = jule::alloc_for_append(_129917_items,1);_129917_items.__push(_130321_item);;
				goto _iter_next_224c60ee2;
			};
			(_130017_i)++;
			_130221_t=_129839_tokens[_130017_i];
			(_130017_i)++;
			if ((_130221_t.get()._field_Id != static_cast<jule::U64>(11LLU))) {
				_2124497dc_pushErr(_self_.ptr(), _130221_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_224c60ee2;
			};
			if (((_130017_i >= _129839_tokens.len()) || (_129839_tokens[_130017_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_2124497dc_pushErr(_self_.ptr(), _130221_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_224c60ee2;
			};
			_130321_item.get()._field_Expr=_212452619_buildEnumItemExpr(_self_, _130017_i,_129839_tokens);
			_129917_items = jule::alloc_for_append(_129917_items,1);_129917_items.__push(_130321_item);;
		}
	_iter_next_224c60ee2:;
	}
	_iter_end_224c60ee2:;;
	return _129917_items;
}



inline jule::Ptr<_210e6aa90_EnumDecl> _212452c35_buildEnumDecl(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _133538_tokens) {
	if ((_133538_tokens.len() < 3LL)) {
		_2124497dc_pushErr(_self_.ptr(), _133538_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_210e6aa90_EnumDecl> _134017_e = jule::new_ptr<_210e6aa90_EnumDecl>(_210e6aa90_EnumDecl{._field_Token=_133538_tokens[1LL], });;
	if ((_134017_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2124497dc_pushErr(_self_.ptr(), _134017_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_134017_e.get()._field_Ident=_134017_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134817_i = 2LL;;
	if ((_133538_tokens[_134817_i].get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_134817_i)++;
		if ((_134817_i >= _133538_tokens.len())) {
			_2124497dc_pushErr(_self_.ptr(), _133538_tokens[(_134817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _134017_e;
		};
		std::tie(_134017_e.get()._field_Kind,std::ignore) = _21244b206_buildType(_self_, _133538_tokens,(&(_134817_i)),true);
		if ((_134817_i >= _133538_tokens.len())) {
			_2124491b0_stop(_self_.ptr());
			_2124497dc_pushErr(_self_.ptr(), _134017_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _134017_e;
		};
	} else {
		_134017_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _136517_itemTokens = _2124470e2_range(_134817_i,jule::Str("{", 1),jule::Str("}", 1),_133538_tokens);;
	if ((_136517_itemTokens == nullptr)) {
		_2124491b0_stop(_self_.ptr());
		_2124497dc_pushErr(_self_.ptr(), _134017_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _134017_e;
	} else if ((_134817_i < _133538_tokens.len())) {
		_2124497dc_pushErr(_self_.ptr(), _133538_tokens[_134817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_134017_e.get()._field_Public=_212458a2c_isPub(_134017_e.get()._field_Ident);
	_134017_e.get()._field_End=_133538_tokens[(_134817_i - 1LL)];
	_134017_e.get()._field_Items=_212452927_buildEnumItems(_self_, _136517_itemTokens);
	return _134017_e;
}



inline jule::Any _212453043_buildNodeEnumDecl(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _138042_tokens) {
	if (((_138042_tokens.len() > 3LL) && (_138042_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		if ((_138042_tokens[3LL].get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return static_cast<jule::Any>(_212452262_buildTypeEnumDecl(_self_, _138042_tokens));
		};
	};
	return static_cast<jule::Any>(_212452c35_buildEnumDecl(_self_, _138042_tokens));
}



inline jule::Ptr<_210e6bce4_FieldDecl> _212453351_buildField(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _138934_tokens) {
	jule::Ptr<_210e6bce4_FieldDecl> _139017_f = jule::new_ptr<_210e6bce4_FieldDecl>();;
	_139017_f.get()._field_Mutable=(_138934_tokens[0LL].get()._field_Id == static_cast<jule::U64>(35LLU));
	if (_139017_f.get()._field_Mutable) {
		if ((_138934_tokens.len() == 1LL)) {
			_2124497dc_pushErr(_self_.ptr(), _138934_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138934_tokens=_138934_tokens.slice(1LL);
	};
	_139017_f.get()._field_Token=_138934_tokens[0LL];
	if ((_139017_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2124497dc_pushErr(_self_.ptr(), _139017_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_139017_f.get()._field_Ident=_139017_f.get()._field_Token.get()._field_Kind;
	if ((_138934_tokens.len() == 1LL)) {
		_2124497dc_pushErr(_self_.ptr(), _138934_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_138934_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_2124497dc_pushErr(_self_.ptr(), _138934_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138934_tokens=_138934_tokens.slice(2LL);
	jule::I64 _141817_i = 0LL;;
	std::tie(_139017_f.get()._field_Kind,std::ignore) = _21244b206_buildType(_self_, _138934_tokens,(&(_141817_i)),true);
	if ((_141817_i < _138934_tokens.len())) {
		jule::Ptr<_20e7ddc0b_Token> _142117_token = _138934_tokens[_141817_i];;
		if (((_142117_token.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_142117_token.get()._field_Kind != jule::Str("=", 1)))) {
			_2124497dc_pushErr(_self_.ptr(), _138934_tokens[_141817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_141817_i)++;
		if ((_141817_i >= _138934_tokens.len())) {
			_2124497dc_pushErr(_self_.ptr(), _142117_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138934_tokens=_138934_tokens.slice(_141817_i);
		_139017_f.get()._field_Default=_212449e19_buildExpr(_self_, _138934_tokens);
	};
	_139017_f.get()._field_Public=_212458a2c_isPub(_139017_f.get()._field_Ident);
	return _139017_f;
}



inline jule::Slice<jule::Ptr<_210e6bce4_FieldDecl>> _21245365e_buildStructDeclFields(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _143845_tokens) {
	jule::Slice<jule::Ptr<_210e6bce4_FieldDecl>> _143917_fields = nullptr;;
	jule::Slice<jule::Ptr<_21242be0c_stmt>> _144017_stmts = _21242c2a3_splitStmts(_143845_tokens);;
	{
		auto &expr = _144017_stmts;
		auto it = expr.begin();
		_iter_begin_224c7d6c4:;
		if (it != expr.end()) {
			jule::Ptr<_21242be0c_stmt> _144121_stmt = *it;
			{
				_143845_tokens=_144121_stmt.get()._field_tokens;
				jule::Ptr<_210e6bce4_FieldDecl> _144321_f = _212453351_buildField(_self_, _143845_tokens);;
				_143917_fields = jule::alloc_for_append(_143917_fields,1);_143917_fields.__push(_144321_f);;
			}
			_iter_next_224c7d6c4:;
			++it;
			goto _iter_begin_224c7d6c4;
		}
		_iter_end_224c7d6c4:;
	};
	return _143917_fields;
}



inline jule::Ptr<_210e6c652_StructDecl> _21245396c_buildStructDecl(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _144940_tokens) {
	if ((_144940_tokens.len() < 3LL)) {
		_2124497dc_pushErr(_self_.ptr(), _144940_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _145517_i = 1LL;;
	jule::Ptr<_210e6c652_StructDecl> _145617_s = jule::new_ptr<_210e6c652_StructDecl>(_210e6c652_StructDecl{._field_Token=_144940_tokens[_145517_i], });;
	if ((_145617_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2124497dc_pushErr(_self_.ptr(), _145617_s.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_145517_i)++;
	if ((_145517_i >= _144940_tokens.len())) {
		_2124497dc_pushErr(_self_.ptr(), _144940_tokens[_145517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _145617_s;
	};
	_145617_s.get()._field_Ident=_145617_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_20e7ddc0b_Token> _147013_errorToken = _144940_tokens[_145517_i];;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _147117_genericsTokens = _2124470e2_range(_145517_i,jule::Str("[", 1),jule::Str("]", 1),_144940_tokens);;
	if ((_147117_genericsTokens != nullptr)) {
		_145617_s.get()._field_Generics=_21244c9dd_buildGenerics(_self_, _147117_genericsTokens,_147013_errorToken);
	};
	if ((_145517_i >= _144940_tokens.len())) {
		_2124497dc_pushErr(_self_.ptr(), _144940_tokens[(_145517_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145617_s;
	};
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _148117_bodyTokens = _2124470e2_range(_145517_i,jule::Str("{", 1),jule::Str("}", 1),_144940_tokens);;
	if ((_148117_bodyTokens == nullptr)) {
		_2124491b0_stop(_self_.ptr());
		_2124497dc_pushErr(_self_.ptr(), _145617_s.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145617_s;
	};
	if ((_145517_i < _144940_tokens.len())) {
		_2124497dc_pushErr(_self_.ptr(), _144940_tokens[_145517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_145617_s.get()._field_Public=_212458a2c_isPub(_145617_s.get()._field_Ident);
	_145617_s.get()._field_Fields=_21245365e_buildStructDeclFields(_self_, _148117_bodyTokens);
	_145617_s.get()._field_End=_144940_tokens[(_145517_i - 1LL)];
	return _145617_s;
}



inline void _212453be2_checkMethodReceiver(_212448d80_parser* _self_, jule::Ptr<_210e63db8_FnDecl>& _149739_f) {
	if (_149739_f.get()._field_Statically) {
		if (((_149739_f.get()._field_Params.len() > 0LL) && _210e62e0b_IsSelf(_149739_f.get()._field_Params[0LL].ptr()))) {
			_2124497dc_pushErr(&(*_self_), _149739_f.get()._field_Token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_149739_f.get()._field_Params.len() == 0LL)) {
		_2124497dc_pushErr(&(*_self_), _149739_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_210e62a98_ParamDecl> _150913_param = _149739_f.get()._field_Params[0LL];;
	if ((!(_210e62e0b_IsSelf(_150913_param.ptr())))) {
		_2124497dc_pushErr(&(*_self_), _149739_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_210e63db8_FnDecl>> _212454000_buildTraitMethods(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _151641_tokens) {
	jule::Slice<jule::Ptr<_210e63db8_FnDecl>> _151717_methods = nullptr;;
	jule::Slice<jule::Ptr<_21242be0c_stmt>> _151817_stmts = _21242c2a3_splitStmts(_151641_tokens);;
	{
		auto &expr = _151817_stmts;
		auto it = expr.begin();
		_iter_begin_2241b09d6:;
		if (it != expr.end()) {
			jule::Ptr<_21242be0c_stmt> _151921_stmt = *it;
			{
				_151641_tokens=_151921_stmt.get()._field_tokens;
				if ((_151641_tokens.len() == 0LL)) {
					goto _iter_next_2241b09d6;
				};
				jule::Ptr<_210e63db8_FnDecl> _152421_f = _21245034d_buildFn(_self_, _151641_tokens,true,true);;
				if ((_152421_f != nullptr)) {
					if (_210e6421a_IsAnon(_152421_f.ptr())) {
						_2124497dc_pushErr(_self_.ptr(), _152421_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_212453be2_checkMethodReceiver(_self_.ptr(), _152421_f);
					if ((_152421_f.get()._field_Generics.len() > 0LL)) {
						_2124497dc_pushErr(_self_.ptr(), _152421_f.get()._field_Token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_151717_methods = jule::alloc_for_append(_151717_methods,1);_151717_methods.__push(_152421_f);;
				};
			}
			_iter_next_2241b09d6:;
			++it;
			goto _iter_begin_2241b09d6;
		}
		_iter_end_2241b09d6:;
	};
	return _151717_methods;
}



inline jule::Ptr<_210e6cc5c_TraitDecl> _21245430d_buildTraitDecl(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _153939_tokens) {
	if ((_153939_tokens.len() < 3LL)) {
		_2124497dc_pushErr(_self_.ptr(), _153939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_210e6cc5c_TraitDecl> _154417_t = jule::new_ptr<_210e6cc5c_TraitDecl>(_210e6cc5c_TraitDecl{._field_Token=_153939_tokens[1LL], });;
	if ((_154417_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2124497dc_pushErr(_self_.ptr(), _154417_t.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_154417_t.get()._field_Ident=_154417_t.get()._field_Token.get()._field_Kind;
	jule::I64 _155217_i = 2LL;;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _155317_bodyTokens = _2124470e2_range(_155217_i,jule::Str("{", 1),jule::Str("}", 1),_153939_tokens);;
	if ((_155317_bodyTokens == nullptr)) {
		_2124491b0_stop(_self_.ptr());
		_2124497dc_pushErr(_self_.ptr(), _154417_t.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_155217_i < _153939_tokens.len())) {
		_2124497dc_pushErr(_self_.ptr(), _153939_tokens[_155217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_154417_t.get()._field_Public=_212458a2c_isPub(_154417_t.get()._field_Ident);
	_154417_t.get()._field_Methods=_212454000_buildTraitMethods(_self_, _155317_bodyTokens);
	_154417_t.get()._field_End=_153939_tokens[(_155217_i - 1LL)];
	return _154417_t;
}



inline jule::Ptr<_210e63db8_FnDecl> _21245461b_buildCppLinkFn(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _156938_tokens) {
	_156938_tokens=_156938_tokens.slice(1LL);
	jule::Ptr<_210e63db8_FnDecl> _157117_f = _21245034d_buildFn(_self_, _156938_tokens,false,true);;
	if ((_157117_f != nullptr)) {
		if (_210e6421a_IsAnon(_157117_f.ptr())) {
			_2124497dc_pushErr(_self_.ptr(), _157117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_157117_f.get()._field_Public=false;
		_157117_f.get()._field_CppLinked=true;
	};
	return _157117_f;
}



inline jule::Ptr<_210e64d97_VarDecl> _212454929_buildCppLinkVar(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _158239_tokens) {
	_158239_tokens=_158239_tokens.slice(1LL);
	jule::Ptr<_210e64d97_VarDecl> _158417_v = _21244c328_buildVar(_self_, _158239_tokens);;
	if ((_158417_v != nullptr)) {
		_158417_v.get()._field_Public=false;
		_158417_v.get()._field_CppLinked=true;
		if ((_158417_v.get()._field_Expr != nullptr)) {
			_2124497dc_pushErr(_self_.ptr(), _158417_v.get()._field_Token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _158417_v;
}



inline jule::Ptr<_210e6c652_StructDecl> _212454c37_buildCppLinkStruct(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _159542_tokens) {
	_159542_tokens=_159542_tokens.slice(1LL);
	jule::Ptr<_210e6c652_StructDecl> _159717_s = _21245396c_buildStructDecl(_self_, _159542_tokens);;
	if ((_159717_s != nullptr)) {
		_159717_s.get()._field_Public=false;
		{
			auto &expr = _159717_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_2241c0a7e:;
			if (it != expr.end()) {
				jule::Ptr<_210e6bce4_FieldDecl> _160025_f = *it;
				{
					_160025_f.get()._field_Public=true;
				}
				_iter_next_2241c0a7e:;
				++it;
				goto _iter_begin_2241c0a7e;
			}
			_iter_end_2241c0a7e:;
		};
		_159717_s.get()._field_CppLinked=true;
	};
	return _159717_s;
}



inline jule::Ptr<_210e68708_TypeAliasDecl> _212455045_buildCppLinkTypeAlias(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _160945_tokens) {
	_160945_tokens=_160945_tokens.slice(1LL);
	jule::Ptr<_210e68708_TypeAliasDecl> _161117_t = _21244b514_buildTypeAliasDecl(_self_, _160945_tokens);;
	if ((_161117_t != nullptr)) {
		_161117_t.get()._field_Public=false;
		_161117_t.get()._field_CppLinked=true;
	};
	return _161117_t;
}



inline jule::Ptr<_210e69ae4_UseDecl> _212455353_buildCppLinkUse(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _161939_tokens) {
	if ((_161939_tokens.len() == 1LL)) {
		_2124497dc_pushErr(_self_.ptr(), _161939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_161939_tokens=_161939_tokens.slice(1LL);
	;
	return _21245178e_buildUseDecl(_self_.ptr(), _161939_tokens,true);
}



inline jule::Any _212455661_buildCppLink(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _163037_tokens) {
	jule::Ptr<_20e7ddc0b_Token> _163117_token = _163037_tokens[0LL];;
	if ((_163037_tokens.len() == 1LL)) {
		_2124497dc_pushErr(_self_.ptr(), _163117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_163117_token=_163037_tokens[1LL];
	{
		auto &_match_expr{ _163117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_2241c55ab:;
			{
				return static_cast<jule::Any>(_21245461b_buildCppLinkFn(_self_, _163037_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_2241c6634:;
			{
				return static_cast<jule::Any>(_212454929_buildCppLinkVar(_self_, _163037_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_2241c669a:;
			{
				return static_cast<jule::Any>(_212454c37_buildCppLinkStruct(_self_, _163037_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_2241c6711:;
			{
				return static_cast<jule::Any>(_212455045_buildCppLinkTypeAlias(_self_, _163037_tokens));
			}
		}
		else {
			_case_begin_2241c64be:;
			{
				_2124497dc_pushErr(_self_.ptr(), _163117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_2241c61c2:;
	};
	return nullptr;
}



inline jule::Ptr<_210e63db8_FnDecl> _21245596e_getMethod(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _165434_tokens) {
	jule::I64 _165517_i = 0LL;;
	jule::Ptr<_20e7ddc0b_Token> _165617_token = _165434_tokens[_165517_i];;
	if ((_165617_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		if (((_165517_i + 1LL) >= _165434_tokens.len())) {
			_2124497dc_pushErr(_self_.ptr(), _165617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_165517_i)++;
		_165617_token=_165434_tokens[_165517_i];
	};
	if ((_165617_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_165517_i + 1LL) >= _165434_tokens.len())) {
			_2124497dc_pushErr(_self_.ptr(), _165617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_165517_i)++;
		_165617_token=_165434_tokens[_165517_i];
	};
	if ((_165617_token.get()._field_Id != static_cast<jule::U64>(32LLU))) {
		_2124497dc_pushErr(_self_.ptr(), _165617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_210e63db8_FnDecl> _168017_f = _21245034d_buildFn(_self_, _165434_tokens,true,false);;
	if (((_168017_f != nullptr) && _210e6421a_IsAnon(_168017_f.ptr()))) {
		_2124497dc_pushErr(_self_.ptr(), _168017_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _168017_f;
}



inline void _212455c8d_parseImplBody(jule::Ptr<_212448d80_parser> _self_, jule::Ptr<_210e6d367_Impl>& _168738_ipl, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _168755_tokens) {
	jule::Slice<jule::Ptr<_21242be0c_stmt>> _168817_stmts = _21242c2a3_splitStmts(_168755_tokens);;
	{
		auto &expr = _168817_stmts;
		auto it = expr.begin();
		_iter_begin_224ce025d:;
		if (it != expr.end()) {
			jule::Ptr<_21242be0c_stmt> _168921_stmt = *it;
			{
				_168755_tokens=_168921_stmt.get()._field_tokens;
				jule::Ptr<_20e7ddc0b_Token> _169121_token = _168755_tokens[0LL];;
				{
					auto &_match_expr{ _169121_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(38LLU)) {
						_case_begin_224ce1418:;
						{
							_21244a49c_pushDirective(_self_.ptr(), _21244a227_buildDirective(_self_.ptr(), _168755_tokens));
							goto _iter_next_224ce025d;
						}
					}
					_match_end_224ce13b3:;
				};
				{
					auto &_match_expr{ _169121_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_224ce158e:;
						{
							jule::Ptr<_210e64d97_VarDecl> _170025_v = _21244c328_buildVar(_self_, _168755_tokens);;
							if ((_170025_v != nullptr)) {
								_168738_ipl.get()._field_Statics = jule::alloc_for_append(_168738_ipl.get()._field_Statics,1);_168738_ipl.get()._field_Statics.__push(_170025_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_224ce21e9:;
						{
							jule::Ptr<_210e63db8_FnDecl> _170725_f = _21245596e_getMethod(_self_, _168755_tokens);;
							if ((_170725_f != nullptr)) {
								_212453be2_checkMethodReceiver(_self_.ptr(), _170725_f);
								_21245662e_applyFnMeta(_self_.ptr(), _170725_f);
								_168738_ipl.get()._field_Methods = jule::alloc_for_append(_168738_ipl.get()._field_Methods,1);_168738_ipl.get()._field_Methods.__push(_170725_f);;
							};
						}
					}
					else {
						_case_begin_224ce1913:;
						{
							_2124497dc_pushErr(_self_.ptr(), _169121_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_224ce025d;
						}
					}
					_match_end_224ce18ad:;
				};
			}
			_iter_next_224ce025d:;
			++it;
			goto _iter_begin_224ce025d;
		}
		_iter_end_224ce025d:;
	};
}



inline jule::Ptr<_210e6d367_Impl> _21245609b_buildImpl(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _172033_tokens) {
	jule::Ptr<_20e7ddc0b_Token> _172117_token = _172033_tokens[0LL];;
	if ((_172033_tokens.len() < 2LL)) {
		_2124497dc_pushErr(_self_.ptr(), _172117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _172717_i = 1LL;;
	jule::Ptr<_210e520a4_TypeDecl> _172918_base;;
	jule::Bool _172928_ok;;
	std::tie(_172918_base,_172928_ok) = _21244b206_buildType(_self_, _172033_tokens,(&(_172717_i)),true);
	if ((!(_172928_ok))) {
		return nullptr;
	};
	if ((_172717_i >= _172033_tokens.len())) {
		_2124497dc_pushErr(_self_.ptr(), _172117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_210e6d367_Impl> _173817_ipl = jule::new_ptr<_210e6d367_Impl>(_210e6d367_Impl{._field_Base=_172918_base, });;
	_172117_token=_172033_tokens[_172717_i];
	if ((_172117_token.get()._field_Id != static_cast<jule::U64>(12LLU))) {
		if (((_172117_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_172117_token.get()._field_Kind == jule::Str("{", 1)))) {
			std::tie(_173817_ipl.get()._field_Base,_173817_ipl.get()._field_Dest) = std::make_tuple(_173817_ipl.get()._field_Dest,_173817_ipl.get()._field_Base);
			goto _julec_label_body;
		};
		_2124491b0_stop(_self_.ptr());
		_2124497dc_pushErr(_self_.ptr(), _172117_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_172717_i)++;
	if ((_172717_i >= _172033_tokens.len())) {
		_2124491b0_stop(_self_.ptr());
		_2124497dc_pushErr(_self_.ptr(), _172117_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_173817_ipl.get()._field_Dest,_172928_ok) = _21244b206_buildType(_self_, _172033_tokens,(&(_172717_i)),true);
	if ((!(_172928_ok))) {
		return nullptr;
	};
	if ((_172717_i >= _172033_tokens.len())) {
		_2124491b0_stop(_self_.ptr());
		_2124497dc_pushErr(_self_.ptr(), _172117_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _177617_bodyTokens = _2124470e2_range(_172717_i,jule::Str("{", 1),jule::Str("}", 1),_172033_tokens);;
	if ((_177617_bodyTokens == nullptr)) {
		_2124491b0_stop(_self_.ptr());
		_2124497dc_pushErr(_self_.ptr(), _172117_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_172717_i < _172033_tokens.len())) {
		_2124497dc_pushErr(_self_.ptr(), _172033_tokens[_172717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_173817_ipl.get()._field_End=_172033_tokens[(_172717_i - 1LL)];
	_212455c8d_parseImplBody(_self_, _173817_ipl,_177617_bodyTokens);
	return _173817_ipl;
}



inline jule::Any _2124563a9_buildNodeData(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _179138_tokens) {
	jule::Ptr<_20e7ddc0b_Token> _179217_token = _179138_tokens[0LL];;
	{
		auto &_match_expr{ _179217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_224d02d0e:;
			{
				jule::Ptr<_210e63db8_FnDecl> _179621_f = _21245034d_buildFn(_self_, _179138_tokens,false,false);;
				if ((_179621_f != nullptr)) {
					_179621_f.get()._field_Global=true;
					if (_210e6421a_IsAnon(_179621_f.ptr())) {
						_2124497dc_pushErr(_self_.ptr(), _179621_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return static_cast<jule::Any>(_179621_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_224d02d75:;
			{
				return static_cast<jule::Any>(_21244c328_buildVar(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_224d0356d:;
			{
				return static_cast<jule::Any>(_21244b514_buildTypeAliasDecl(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_224d035d4:;
			{
				return _212453043_buildNodeEnumDecl(_self_, _179138_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_224d0364a:;
			{
				return static_cast<jule::Any>(_21245396c_buildStructDecl(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_224d036b1:;
			{
				return static_cast<jule::Any>(_21245430d_buildTraitDecl(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_224d03727:;
			{
				return static_cast<jule::Any>(_21245609b_buildImpl(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_224d037c1:;
			{
				return _212455661_buildCppLink(_self_, _179138_tokens);
			}
		}
		else {
			_case_begin_224d02bee:;
			{
				_2124497dc_pushErr(_self_.ptr(), _179217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_224d02b66:;
	};
}



inline void _21245662e_applyFnMeta(_212448d80_parser* _self_, jule::Ptr<_210e63db8_FnDecl>& _182735_f) {
	_182735_f.get()._field_Directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _2124568a4_applyMeta(_212448d80_parser* _self_, _210e1d4b0_Node& _183233_node) {
	{
		auto &_match_expr{ _183233_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_210e64d97_VarDecl>>()) {
			_case_begin_224d09530:;
			{
				jule::Ptr<_210e64d97_VarDecl> _183521_v = _183233_node._field_Data.operator jule::Ptr<_210e64d97_VarDecl>();;
				if ((_183521_v == nullptr)) {
					return;;
				};
				_183521_v.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e63db8_FnDecl>>()) {
			_case_begin_224d09596:;
			{
				jule::Ptr<_210e63db8_FnDecl> _184221_f = _183233_node._field_Data.operator jule::Ptr<_210e63db8_FnDecl>();;
				if ((_184221_f == nullptr)) {
					return;;
				};
				_21245662e_applyFnMeta(&(*_self_), _184221_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e6c652_StructDecl>>()) {
			_case_begin_224d0960c:;
			{
				jule::Ptr<_210e6c652_StructDecl> _184821_sd = _183233_node._field_Data.operator jule::Ptr<_210e6c652_StructDecl>();;
				if ((_184821_sd == nullptr)) {
					return;;
				};
				_184821_sd.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_224d09321:;
	};
}



inline void _212456b29_pushUseDecl(jule::Ptr<_212448d80_parser> _self_, jule::Ptr<_210e69ae4_UseDecl>& _185736_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push(_185736_decl);;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_2124497dc_pushErr(_self_.ptr(), _185736_decl.get()._field_Token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_212449b0b_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _212456e37_pushMetaNodes(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _186538_tokens) {
	{
		auto &_match_expr{ _186538_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_224d103d2:;
			{
				;
				jule::Ptr<_210e69ae4_UseDecl> _186921_decl = _21245178e_buildUseDecl(_self_.ptr(), _186538_tokens,false);;
				_212456b29_pushUseDecl(_self_, _186921_decl);
				return true;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_224d10448:;
			{
				if (((_186538_tokens.len() > 1LL) && (_186538_tokens[1LL].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_210e69ae4_UseDecl> _187425_decl = _212455353_buildCppLinkUse(_self_, _186538_tokens);;
					_212456b29_pushUseDecl(_self_, _187425_decl);
					return true;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_224d104c0:;
			{
				_21244a49c_pushDirective(_self_.ptr(), _21244a227_buildDirective(_self_.ptr(), _186538_tokens));
				return true;
			}
		}
		_match_end_224d102d3:;
	};
	return false;
}



inline _210e1d4b0_Node _212457245_parseNode(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _188534_st) {
	_210e1d4b0_Node _188617_node = _210e1d4b0_Node{._field_Token=_188534_st[0LL], };;
	if (_212456e37_pushMetaNodes(_self_, _188534_st)) {
		return _188617_node;
	};
	jule::Any _189417_data = _2124563a9_buildNodeData(_self_, _188534_st);;
	if ((_189417_data == nullptr)) {
		return _188617_node;
	};
	_188617_node._field_Data=_189417_data;
	_2124568a4_applyMeta(_self_.ptr(), _188617_node);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_2124497dc_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _188617_node;
}



inline void _2124574ba_appendNode(jule::Ptr<_212448d80_parser> _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _190935_st) {
	if ((_190935_st.len() == 0LL)) {
		return;;
	};
	_210e1d4b0_Node _191317_node = _212457245_parseNode(_self_, _190935_st);;
	if (((_191317_node._field_Data == nullptr) || _212449424_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_191317_node);;
}



inline void _21245792c_removeRange(_212448d80_parser* _self_, jule::I64 _192030_i, jule::Str _192038_kind, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _192050_tokens, jule::Slice<jule::I64>& _192073_ranges) {
	jule::Str _192113_close = _212447e06_getCloseKindOfBrace(_192038_kind);;
	for (; (_192030_i >= 0LL); (_192030_i)--) {
		{
			jule::Ptr<_20e7ddc0b_Token> _192317_tok = _192050_tokens[_192073_ranges[_192030_i]];;
			if ((_192317_tok.get()._field_Kind != _192113_close)) {
				goto _iter_next_224d19e14;
			};
			_192073_ranges=jule::append(_192073_ranges.slice(0LL,_192030_i),_192073_ranges.slice((_192030_i + 1LL)));
			goto _iter_end_224d19e14;
		}
	_iter_next_224d19e14:;
	}
	_iter_end_224d19e14:;;
}



inline void _212457ce5_pushWrongOrderCloseErr(_212448d80_parser* _self_, jule::Ptr<_20e7ddc0b_Token>& _193242_t, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _193254_tokens, jule::Slice<jule::I64>& _193273_ranges) {
	{
		auto &_match_expr{ _193254_tokens[_193273_ranges[(_193273_ranges.len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_224d1c246:;
			{
				_2124497dc_pushErr(&(*_self_), _193242_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_224d1c2bd:;
			{
				_2124497dc_pushErr(&(*_self_), _193242_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_224d1c345:;
			{
				_2124497dc_pushErr(&(*_self_), _193242_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_224d1c114:;
	};
}



inline void _212458257_pushRangeClose(_212448d80_parser* _self_, jule::Ptr<_20e7ddc0b_Token> _194333_t, jule::Str _194344_left, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _194356_tokens, jule::Slice<jule::I64>& _194379_ranges) {
	jule::I64 _194413_n = _194379_ranges.len();;
	if ((_194413_n == 0LL)) {
		{
			auto &_match_expr{ _194333_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_224d1ee19:;
				{
					_2124497dc_pushErr(&(*_self_), _194333_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_224d1ee91:;
				{
					_2124497dc_pushErr(&(*_self_), _194333_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_224d20018:;
				{
					_2124497dc_pushErr(&(*_self_), _194333_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_224d1ebb6:;
		};
		return;;
	} else if ((_194356_tokens[_194379_ranges[(_194413_n - 1LL)]].get()._field_Kind != _194344_left)) {
		_212457ce5_pushWrongOrderCloseErr(&(*_self_), _194333_t,_194356_tokens,_194379_ranges);
	};
	_21245792c_removeRange(&(*_self_), static_cast<jule::I64>((_194413_n - 1LL)),_194333_t.get()._field_Kind,_194356_tokens,_194379_ranges);
}



inline void _2124584cc_checkRanges(_212448d80_parser* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _196131_tokens) {
	jule::Slice<jule::I64> _196217_ranges = nullptr;;
	{
		auto &expr = _196131_tokens;
		auto it = expr.begin();
		_iter_begin_224d232a2:;
		if (it != expr.end()) {
			jule::I64 _196413_i = it - expr.begin();
			jule::Ptr<_20e7ddc0b_Token> &_196416_token = *it;
			{
				if ((_196416_token.get()._field_Id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_224d232a2;
				};
				{
					auto &_match_expr{ _196416_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_224d2457d:;
						{
							_196217_ranges = jule::alloc_for_append(_196217_ranges,1);_196217_ranges.__push(_196413_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_224d245e4:;
						{
							_212458257_pushRangeClose(&(*_self_), _196416_token,jule::Str("(", 1),_196131_tokens,_196217_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_224d2465a:;
						{
							_212458257_pushRangeClose(&(*_self_), _196416_token,jule::Str("{", 1),_196131_tokens,_196217_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_224d246d2:;
						{
							_212458257_pushRangeClose(&(*_self_), _196416_token,jule::Str("[", 1),_196131_tokens,_196217_ranges);
						}
					}
					_match_end_224d2433b:;
				};
			}
			_iter_next_224d232a2:;
			++it;
			_196413_i++;
			goto _iter_begin_224d232a2;
		}
		_iter_end_224d232a2:;
	};
	{
		auto &expr = _196217_ranges;
		auto it = expr.begin();
		_iter_begin_224d2323b:;
		if (it != expr.end()) {
			jule::I64 _198216_i = *it;
			{
				jule::Ptr<_20e7ddc0b_Token> _198317_token = _196131_tokens[_198216_i];;
				{
					auto &_match_expr{ _198317_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_224d26dbb:;
						{
							_2124497dc_pushErr(&(*_self_), _198317_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_224d26e54:;
						{
							_2124497dc_pushErr(&(*_self_), _198317_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_224d26eba:;
						{
							_2124497dc_pushErr(&(*_self_), _198317_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_224d26d00:;
				};
			}
			_iter_next_224d2323b:;
			++it;
			goto _iter_begin_224d2323b;
		}
		_iter_end_224d2323b:;
	};
}



inline void _212458752_parse(jule::Ptr<_212448d80_parser> _self_, jule::Ptr<_20e7e4096_File>& _199530_f) {
	_self_.get()._field_ast=jule::new_ptr<_210e1c811_Ast>(_210e1c811_Ast{._field_File=_199530_f, });
	_2124584cc_checkRanges(_self_.ptr(), _199530_f.get()._field_Tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_21242be0c_stmt>> _200517_stmts = _21242c2a3_splitStmts(_199530_f.get()._field_Tokens);;
	jule::I64 _200817_i = 0LL;;
	for (; (_200817_i < _200517_stmts.len()); (_200817_i)++) {
		{
			jule::Ptr<_21242be0c_stmt> _201021_stmt = _200517_stmts[_200817_i];;
			if ((_201021_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_201021_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(38LLU))) {
				goto _iter_end_224d2a122;
			};
			if ((!(_20e4bc29c_IsTopDirective(_201021_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_224d2a122;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_21244a227_buildDirective(_self_.ptr(), _201021_stmt.get()._field_tokens));;
		}
	_iter_next_224d2a122:;
	}
	_iter_end_224d2a122:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200817_i < _200517_stmts.len()); (_200817_i)++) {
		{
			jule::Ptr<_21242be0c_stmt> _202721_stmt = _200517_stmts[_200817_i];;
			_2124574ba_appendNode(_self_, _202721_stmt.get()._field_tokens);
			if (_212449424_stopped(_self_.ptr())) {
				goto _iter_end_224d2ceb0;
			};
		}
	_iter_next_224d2ceb0:;
	}
	_iter_end_224d2ceb0:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_2124497dc_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _212448d80_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _21245a501_pushErr(_212459e5c_typeBuilder* _self_, jule::Ptr<_20e7ddc0b_Token> _7326_token, jule::Str _7341_fmt) {
	if ((*_self_)._field_err) {
		_2124497dc_pushErr((*_self_)._field_p.ptr(), _7326_token,_7341_fmt,jule::Slice<jule::Any>());
	};
}



inline void _21245a820_pushSuggestion(_212459e5c_typeBuilder* _self_, jule::Str _8033_fmt, jule::Slice<jule::Any> _8046_args) {
	if ((*_self_)._field_err) {
		_212449b0b_pushSuggestion((*_self_)._field_p.ptr(), _8033_fmt,jule::Any(_8046_args));
	};
}



inline jule::Ptr<_210e520a4_TypeDecl> _21245aa84_buildPrim(_212459e5c_typeBuilder* _self_) {
	jule::Ptr<_210e520a4_TypeDecl> _8717_t = _212459610_buildPrimType((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _8717_t;
}



inline jule::Ptr<_210e520a4_TypeDecl> _21245ace8_buildNamespace(_212459e5c_typeBuilder* _self_) {
	jule::Ptr<_210e520a4_TypeDecl> _9317_t = jule::new_ptr<_210e520a4_TypeDecl>(_210e520a4_TypeDecl{._field_Token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_210e53171_NamespaceTypeDecl> _9717_nst = jule::new_ptr<_210e53171_NamespaceTypeDecl>();;
	jule::I64 _9817_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_20e7ddc0b_Token> _10021_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_9817_n & 1LL) == 0LL)) {
				if ((_10021_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
					_21245a501_pushErr(&(*_self_), _10021_token,jule::Str("invalid syntax", 14));
					_21245a820_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_9717_nst.get()._field_Idents = jule::alloc_for_append(_9717_nst.get()._field_Idents,1);_9717_nst.get()._field_Idents.__push(_10021_token);;
			} else if ((_10021_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
				goto _iter_end_224d37d22;
			};
			(_9817_n)++;
		}
	_iter_next_224d37d22:;
	}
	_iter_end_224d37d22:;;
	_9717_nst.get()._field_Idents=_9717_nst.get()._field_Idents.slice(0LL,(_9717_nst.get()._field_Idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_9717_nst.get()._field_Kind=_21245b535_buildIdent(&(*_self_));
	_9317_t.get()._field_Kind=static_cast<jule::Any>(_9717_nst);
	return _9317_t;
}



inline jule::Slice<jule::Ptr<_210e520a4_TypeDecl>> _21245b05c_buildGenerics(_212459e5c_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_20e7ddc0b_Token> _12613_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_12613_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12613_token.get()._field_Kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _13117_parts = _21245b2c1_identGenerics(&(*_self_));;
	if ((_13117_parts.len() == 0LL)) {
		_21245a501_pushErr(&(*_self_), _12613_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_210e520a4_TypeDecl>> _13717_types = jule::Slice<jule::Ptr<_210e520a4_TypeDecl>>::alloc(0LL,_13117_parts.len());;
	{
		auto &expr = _13117_parts;
		auto it = expr.begin();
		_iter_begin_224d40b3d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _13821_part = *it;
			{
				jule::I64 _13921_j = 0LL;;
				jule::Ptr<_210e520a4_TypeDecl> _14022_t;;
				std::tie(_14022_t,std::ignore) = _21244b206_buildType((*_self_)._field_p, _13821_part,(&(_13921_j)),true);
				if ((_13921_j < _13821_part.len())) {
					_21245a501_pushErr(&(*_self_), _13821_part[_13921_j],jule::Str("invalid syntax", 14));
				};
				_13717_types = jule::alloc_for_append(_13717_types,1);_13717_types.__push(_14022_t);;
			}
			_iter_next_224d40b3d:;
			++it;
			goto _iter_begin_224d40b3d;
		}
		_iter_end_224d40b3d:;
	};
	return _13717_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _21245b2c1_identGenerics(_212459e5c_typeBuilder* _self_) {
	jule::I64 _15013_first = (*((*_self_)._field_i));;
	jule::I64 _15117_rangeN = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_20e7ddc0b_Token> _15317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_15317_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _15317_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_224d44889:;
						{
							(_15117_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_224d44911:;
						{
							(_15117_rangeN)--;
						}
					}
					_match_end_224d44647:;
				};
			};
			if ((_15117_rangeN == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_224d434c0;
			};
		}
	_iter_next_224d434c0:;
	}
	_iter_end_224d434c0:;;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _16717_tokens = (*_self_)._field_tokens.slice((_15013_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _16818_parts;;
	jule::Slice<_20e4ba377_Log> _16825_errors;;
	std::tie(_16818_parts,_16825_errors) = _212447b5e_parts(_16717_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_16825_errors);
	};
	return _16818_parts;
}



inline jule::Ptr<_210e520a4_TypeDecl> _21245b535_buildIdent(_212459e5c_typeBuilder* _self_) {
	jule::Bool _17617_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_17617_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return _21245ace8_buildNamespace(&(*_self_));
	};
	jule::Ptr<_20e7ddc0b_Token> _18017_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_210e5266a_IdentTypeDecl> _18117_it = jule::new_ptr<_210e5266a_IdentTypeDecl>(_210e5266a_IdentTypeDecl{._field_Token=_18017_token, ._field_Ident=_18017_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_210e520a4_TypeDecl> _18717_itd = jule::new_ptr<_210e520a4_TypeDecl>(_210e520a4_TypeDecl{._field_Token=_18017_token, ._field_Kind=static_cast<jule::Any>(_18117_it)});;
	if (((!(_17617_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_18117_it.get()._field_Generics=_21245b05c_buildGenerics(&(*_self_));
		return _18717_itd;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_21245a501_pushErr(&(*_self_), _18017_token,jule::Str("invalid syntax", 14));
		return _18717_itd;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_21245a501_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _18717_itd;
	};
	jule::Ptr<_210e52cb9_SubIdentTypeDecl> _20417_sit = jule::new_ptr<_210e52cb9_SubIdentTypeDecl>();;
	_20417_sit.get()._field_Idents = jule::alloc_for_append(_20417_sit.get()._field_Idents,1);_20417_sit.get()._field_Idents.__push(_18117_it);;
	jule::Ptr<_210e520a4_TypeDecl> _20617_ident = _21245b535_buildIdent(&(*_self_));;
	{
		auto &_match_expr{ _20617_ident.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_210e5266a_IdentTypeDecl>>()) {
			_case_begin_224d4ed7d:;
			{
				_20417_sit.get()._field_Idents = jule::alloc_for_append(_20417_sit.get()._field_Idents,1);_20417_sit.get()._field_Idents.__push(_20617_ident.get()._field_Kind.operator jule::Ptr<_210e5266a_IdentTypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e52cb9_SubIdentTypeDecl>>()) {
			_case_begin_224d4ee38:;
			{
				_20417_sit.get()._field_Idents=jule::append(_20417_sit.get()._field_Idents,_20617_ident.get()._field_Kind.operator jule::Ptr<_210e52cb9_SubIdentTypeDecl>().get()._field_Idents);
			}
		}
		_match_end_224d4ed17:;
	};
	return jule::new_ptr<_210e520a4_TypeDecl>(_210e520a4_TypeDecl{._field_Token=_18017_token, ._field_Kind=static_cast<jule::Any>(_20417_sit)});
}



inline jule::Ptr<_210e520a4_TypeDecl> _21245b799_buildCppLink(_212459e5c_typeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_21245a501_pushErr(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_210e520a4_TypeDecl> _22517_t = _21245b535_buildIdent(&(*_self_));;
	_22517_t.get()._field_Kind.operator jule::Ptr<_210e5266a_IdentTypeDecl>().get()._field_CppLinked=true;
	return _22517_t;
}



inline jule::Ptr<_210e520a4_TypeDecl> _21245ba0d_buildFn(_212459e5c_typeBuilder* _self_) {
	jule::Ptr<_20e7ddc0b_Token> _23117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_210e63db8_FnDecl> _23217_f = _21244edec_buildFnPrototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_23217_f == nullptr)) {
		return nullptr;
	};
	if ((!(_210e6421a_IsAnon(_23217_f.ptr())))) {
		_21245a501_pushErr(&(*_self_), _23217_f.get()._field_Token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_210e520a4_TypeDecl>(_210e520a4_TypeDecl{._field_Token=_23117_token, ._field_Kind=static_cast<jule::Any>(_23217_f)});
}



inline jule::Ptr<_210e520a4_TypeDecl> _21245bc72_buildPtr(_212459e5c_typeBuilder* _self_) {
	jule::Ptr<_20e7ddc0b_Token> _24617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_21245a501_pushErr(&(*_self_), _24617_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_210e520a4_TypeDecl>(_210e520a4_TypeDecl{._field_Token=_24617_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_210e53e30_PtrTypeDecl>(_210e53e30_PtrTypeDecl{._field_Elem=nullptr}))});
	};
	jule::Ptr<_210e520a4_TypeDecl> _26317_elem = _21245d0a3_step(&(*_self_));;
	if ((_26317_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_210e520a4_TypeDecl>(_210e520a4_TypeDecl{._field_Token=_24617_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_210e53e30_PtrTypeDecl>(_210e53e30_PtrTypeDecl{._field_Elem=_26317_elem}))});
}



inline jule::Ptr<_210e520a4_TypeDecl> _21245bed6_buildSptr(_212459e5c_typeBuilder* _self_) {
	jule::Ptr<_20e7ddc0b_Token> _27717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_21245a501_pushErr(&(*_self_), _27717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_210e520a4_TypeDecl> _28417_elem = _21245d0a3_step(&(*_self_));;
	if ((_28417_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_210e520a4_TypeDecl>(_210e520a4_TypeDecl{._field_Token=_27717_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_210e5345c_SptrTypeDecl>(_210e5345c_SptrTypeDecl{._field_Elem=_28417_elem}))});
}



inline jule::Ptr<_210e520a4_TypeDecl> _21245c24a_buildOp(_212459e5c_typeBuilder* _self_) {
	jule::Ptr<_20e7ddc0b_Token> _29817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _29817_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_224d5d870:;
			{
				return _21245bc72_buildPtr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_224d5d8d6:;
			{
				return _21245bed6_buildSptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_224d5d94c:;
			{
				return jule::new_ptr<_210e520a4_TypeDecl>(_210e520a4_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_210e5345c_SptrTypeDecl>(_210e5345c_SptrTypeDecl{._field_Elem=_21245bed6_buildSptr(&(*_self_))}))});
			}
		}
		else {
			_case_begin_224d5d7b5:;
			{
				_21245a501_pushErr(&(*_self_), _29817_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_224d5d72c:;
	};
}



inline jule::Ptr<_210e520a4_TypeDecl> _21245c4ae_buildSlc(_212459e5c_typeBuilder* _self_) {
	jule::Ptr<_20e7ddc0b_Token> _31717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_210e520a4_TypeDecl> _31917_elem = _21245d0a3_step(&(*_self_));;
	if ((_31917_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_210e520a4_TypeDecl>(_210e520a4_TypeDecl{._field_Token=_31717_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_210e53858_SlcTypeDecl>(_210e53858_SlcTypeDecl{._field_Elem=_31917_elem}))});
}



inline jule::Ptr<_210e520a4_TypeDecl> _21245c723_buildArr(_212459e5c_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_21245a501_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::I64 _34013_exprDelta = (*((*_self_)._field_i));;
	jule::Ptr<_210e520a4_TypeDecl> _34217_elem = _21245d0a3_step(&(*_self_));;
	if ((_34217_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_210e545b2_ArrTypeDecl> _34717_arrt = jule::new_ptr<_210e545b2_ArrTypeDecl>(_210e545b2_ArrTypeDecl{._field_Elem=_34217_elem, });;
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _35117_exprTokens = (*_self_)._field_tokens.slice(0LL,_34013_exprDelta);;
	std::tie(std::ignore,_35117_exprTokens) = _212447389_rangeLast(_35117_exprTokens);
	_35117_exprTokens=_35117_exprTokens.slice(1LL,(_35117_exprTokens.len() - 1LL));
	jule::Ptr<_20e7ddc0b_Token> _35417_token = _35117_exprTokens[0LL];;
	if ((((_35117_exprTokens.len() == 1LL) && (_35417_token.get()._field_Id == static_cast<jule::U64>(7LLU))) && (_35417_token.get()._field_Kind == jule::Str("...", 3)))) {
	} else {
		_34717_arrt.get()._field_Size=_212449e19_buildExpr((*_self_)._field_p, _35117_exprTokens);
	};
	return jule::new_ptr<_210e520a4_TypeDecl>(_210e520a4_TypeDecl{._field_Token=_35417_token, ._field_Kind=static_cast<jule::Any>(_34717_arrt)});
}



inline jule::Ptr<_210e520a4_TypeDecl> _21245caca_buildMap(_212459e5c_typeBuilder* _self_, jule::I64 _36734_start, jule::I64 _36746_delim) {
	jule::Ptr<_20e7ddc0b_Token> _36817_delimToken = (*_self_)._field_tokens[_36746_delim];;
	if (((_36746_delim == 0LL) || ((_36746_delim + 1LL) >= (*_self_)._field_tokens.len()))) {
		_21245a501_pushErr(&(*_self_), _36817_delimToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _37517_keyTokens = (*_self_)._field_tokens.slice((_36734_start + 1LL),(_36746_delim - 1LL));;
	if ((_37517_keyTokens.len() == 0LL)) {
		_21245a501_pushErr(&(*_self_), _36817_delimToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Ptr<_210e54d10_MapTypeDecl> _38117_mapt = jule::new_ptr<_210e54d10_MapTypeDecl>();;
	jule::I64 _38317_j = 0LL;;
	jule::Ptr<_210e520a4_TypeDecl> _38418_keyt;;
	jule::Bool _38428_ok;;
	std::tie(_38418_keyt,_38428_ok) = _21244b206_buildType((*_self_)._field_p, _37517_keyTokens,(&(_38317_j)),(*_self_)._field_err);
	if ((!(_38428_ok))) {
		return nullptr;
	} else if ((_38317_j < _37517_keyTokens.len())) {
		_21245a501_pushErr(&(*_self_), _37517_keyTokens[_38317_j],jule::Str("invalid syntax", 14));
	};
	_38117_mapt.get()._field_Key=_38418_keyt;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_210e520a4_TypeDecl> _39318_valt;;
	std::tie(_39318_valt,_38428_ok) = _21244b206_buildType((*_self_)._field_p, (*_self_)._field_tokens,(*_self_)._field_i,(*_self_)._field_err);
	if ((!(_38428_ok))) {
		return nullptr;
	};
	_38117_mapt.get()._field_Val=_39318_valt;
	return jule::new_ptr<_210e520a4_TypeDecl>(_210e520a4_TypeDecl{._field_Token=_36817_delimToken, ._field_Kind=static_cast<jule::Any>(_38117_mapt)});
}



inline jule::Ptr<_210e520a4_TypeDecl> _21245cd3e_buildEnumerable(_212459e5c_typeBuilder* _self_) {
	jule::Ptr<_20e7ddc0b_Token> _40517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_40517_token.get()._field_Id != static_cast<jule::U64>(3LLU))) || (_40517_token.get()._field_Kind != jule::Str("[", 1)))) {
		_21245a501_pushErr(&(*_self_), _40517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_40517_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_40517_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_40517_token.get()._field_Kind == jule::Str("]", 1)))) {
		return _21245c4ae_buildSlc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	jule::I64 _41913_i = (*((*_self_)._field_i));;
	jule::I64 _42017_delim = _212459951_mapColon((*_self_)._field_tokens,(*((*_self_)._field_i)));;
	((*((*_self_)._field_i)))++;
	if ((_42017_delim == -1LL)) {
		return _21245c723_buildArr(&(*_self_));
	};
	return _21245caca_buildMap(&(*_self_), _41913_i,_42017_delim);
}



inline jule::Ptr<_210e520a4_TypeDecl> _21245d0a3_step(_212459e5c_typeBuilder* _self_) {
	jule::Ptr<_20e7ddc0b_Token> _42913_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _42913_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_224d75117:;
			{
				return _21245aa84_buildPrim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_224d7517d:;
			{
				return _21245b535_buildIdent(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_224d751e4:;
			{
				return _21245b799_buildCppLink(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_224d74523:;
			{
				return _21245ba0d_buildFn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_224d74589:;
			{
				return _21245c24a_buildOp(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_224d74600:;
			{
				return _21245cd3e_buildEnumerable(&(*_self_));
			}
		}
		else {
			_case_begin_224d744ac:;
			{
				((*((*_self_)._field_i)))++;
				_21245a501_pushErr(&(*_self_), _42913_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_224d74424:;
	};
}



inline std::tuple<jule::Ptr<_210e520a4_TypeDecl>,jule::Bool> _21245d317_build(_212459e5c_typeBuilder* _self_) {
	jule::Bool _45244_ok = jule::Bool();
	jule::Ptr<_210e520a4_TypeDecl> _45317_root = _21245d0a3_step(&(*_self_));;
	if ((_45317_root == nullptr)) {
		_45244_ok = false;
		return std::make_tuple(_21245939b_buildVoidType(),_45244_ok);
	};
	_45244_ok = true;
	return std::make_tuple(_45317_root,_45244_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _212459e5c_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211c955ab_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _211c96e5e_pushErr(_211c9690e_directiveEval* _self_, jule::Ptr<_20e7ddc0b_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_20e4ba377_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_20e4ba7b7_Logf(_2137_fmt,jule::Any(_2150_args)), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _211c97316_splitOperans(_211c9690e_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>>::alloc(0LL,10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3351_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_20e7ddc0b_Token> _4017_b = _3351_tokens[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_224d9b8d0:;
						{
							(_3717_rangeN)++;
							goto _iter_next_224d9a7d0;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_224d9b957:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_224d9b6d2:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_224d9a7d0;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_224d9a7d0:;
	}
	_iter_end_224d9a7d0:;;
	if ((_3817_last < _3351_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last));;
	} else {
		_211c96e5e_pushErr(&(*_self_), _3351_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _211c97624_evalDirectiveIdent(_211c9690e_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_224d9eebb:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7333_ident)) {
					return true;
				};
			}
			_iter_next_224d9eebb:;
			++it;
			goto _iter_begin_224d9eebb;
		}
		_iter_end_224d9eebb:;
	};
	return false;
}



inline jule::Bool _211c97932_evalDirectivePart(_211c9690e_directiveEval* _self_, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_8740_part[0LL].get()._field_Kind == jule::Str("!", 1)));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_211c96e5e_pushErr(&(*_self_), _8740_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _211c97624_evalDirectiveIdent(&(*_self_), _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _211c97b96_eval(_211c9690e_directiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_Args.len() == 0LL)) {
		_211c96e5e_pushErr(&(*_self_), (*_self_)._field_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _11317_logicalOrParts = _211c97316_splitOperans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_Args);;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logicalOrParts;
		auto it = expr.begin();
		_iter_begin_224da60d2:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _12021_logicalAndParts = _211c97316_splitOperans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logicalAndParts;
					auto it = expr.begin();
					_iter_begin_224da7930:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_20e7ddc0b_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_Kind == jule::Str("(", 1)))) {
								jule::Ptr<_20e7ddc0b_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_Kind != jule::Str(")", 1)))) {
									_211c96e5e_pushErr(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_andPart=_12525_andPart.slice(1LL,(_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _211c97932_evalDirectivePart(&(*_self_), _12525_andPart));
						}
						_iter_next_224da7930:;
						++it;
						goto _iter_begin_224da7930;
					}
					_iter_end_224da7930:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_224da60d2:;
			++it;
			goto _iter_begin_224da60d2;
		}
		_iter_end_224da60d2:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _211c9690e_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_211d89b78_JuleImporter> static__211de8775_New(_211c955ab_CompileInfo _5819_info) {
	jule::Ptr<_211d89b78_JuleImporter> _5917_imp = jule::new_ptr<_211d89b78_JuleImporter>(_211d89b78_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_20e508aad_PathStdlib}), });;
	_211c95dc5_initVars(_5917_imp.get()._field_vars,_5819_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_211b1c378_ImportInfo>> _211e09984_AllPackages(_211d89b78_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _211e14b8c_SetModPath(_211d89b78_JuleImporter* _self_, jule::Str _7529_path) {
	(*_self_)._field_mod=_7529_path;
}



inline jule::Str _211e39b90_GetModPath(_211d89b78_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _211ee67b8_ModById(_211d89b78_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*_self_)._field_mods[_8322_id];
}



inline jule::Ptr<_211b1c378_ImportInfo> _21200c724_GetImport(_211d89b78_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_224daec45:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;
				};
			}
			_iter_next_224daec45:;
			++it;
			goto _iter_begin_224daec45;
		}
		_iter_end_224daec45:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_210e1c811_Ast>>,jule::Slice<_20e4ba377_Log>> _212017aa3_ImportPackage(_211d89b78_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	jule::Slice<jule::Ptr<_20c697db4_DirEntry>> _9717_dirents = ({
		auto except = static__20d422665_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_20e4ba377_Log>::make({_211d84337_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))}));
		} jule::Slice<jule::Ptr<_20c697db4_DirEntry>>();});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _211ca6721_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_newMod;
			jule::Slice<_20e4ba377_Log> _10525_errs = _211ca69a7_CheckModuleFile((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_210e1c811_Ast>> _11217_asts = jule::Slice<jule::Ptr<_210e1c811_Ast>>::alloc(0LL,_9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_224db41ab:;
		if (it != expr.end()) {
			jule::Ptr<_20c697db4_DirEntry> _11316_dirent = *it;
			{
				if ((_20c6d15e5_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_20e444b92_HasSuffix(_11316_dirent.get()._field_Name,jule::Str(".jule", 5)))))) {
					goto _iter_next_224db41ab;
				};
				jule::Str _11917__path = _20d4b1cdc_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_20e7e4096_File> _12021_file = _20e7e55c5_NewFileSet(_11917__path);;
				_20e7e4728_Fill(_12021_file.ptr(), _211d67c55_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_20e4ba377_Log> _12221_errors = _20e801009_Lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_2123c73a2_FileInfo> _12721_finfo = _2123ce057_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_Errors);
				};
				if ((!(_211c7b3b6_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_224db41ab;
				};
				jule::Bool _13718_r;;
				jule::Slice<_20e4ba377_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _212065837_isPassBuildDirectives(&(*_self_), _12721_finfo.get()._field_Ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_224db41ab;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_224db41ab:;
			++it;
			goto _iter_begin_224db41ab;
		}
		_iter_end_224db41ab:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _212063703_Imported(_211d89b78_JuleImporter* _self_, jule::Ptr<_211b1c378_ImportInfo> _15331_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_224db78a7:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_224db78a7:;
			++it;
			goto _iter_begin_224db78a7;
		}
		_iter_end_224db78a7:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_224dbb603:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_224dbb603:;
				++it;
				_16217_i++;
				goto _iter_begin_224dbb603;
			}
			_iter_end_224dbb603:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15331_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_20e4ba377_Log>> _212065837_isPassBuildDirectives(_211d89b78_JuleImporter* _self_, jule::Ptr<_210e1c811_Ast>& _17945_file) {
	{
		auto &expr = _17945_file.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_224dbe8e2:;
		if (it != expr.end()) {
			jule::Ptr<_210e1d8ab_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_Tag.get()._field_Kind != jule::Str("build", 5))) {
					goto _iter_next_224dbe8e2;
				};
				_211c9690e_directiveEval _18421_de = _211c9690e_directiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _211c97b96_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_224dbe8e2:;
			++it;
			goto _iter_begin_224dbe8e2;
		}
		_iter_end_224dbe8e2:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _211d89b78_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2123c9959_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _224de223e_isCommonOrdered(jule::Slice<jule::Ptr<_210e427d1_Struct>>& _1835_s, jule::Ptr<_210e427d1_Struct> _1844_t) {
	jule::Ptr<_210e427d1_Struct>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_210e427d1_Struct>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_224de5187:;
		if (it != expr.end()) {
			jule::Ptr<_210e427d1_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_224de5187;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_224de5187:;
			++it;
			goto _iter_begin_224de5187;
		}
		_iter_end_224de5187:;
	};
	return false;
}

inline jule::Bool _224dea665_isCommonOrdered(jule::Slice<jule::Ptr<_211b43228_Var>>& _1835_s, jule::Ptr<_211b43228_Var> _1844_t) {
	jule::Ptr<_211b43228_Var>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_211b43228_Var>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_224ded569:;
		if (it != expr.end()) {
			jule::Ptr<_211b43228_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_224ded569;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_224ded569:;
			++it;
			goto _iter_begin_224ded569;
		}
		_iter_end_224ded569:;
	};
	return false;
}



inline void _224ddd290_orderCommon(jule::Slice<jule::Ptr<_210e427d1_Struct>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_224dde5b0:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_210e427d1_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_224dde5b0:;
			++it;
			_4114_j++;
			goto _iter_begin_224dde5b0;
		}
		_iter_end_224dde5b0:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_224de223e_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_224de1b56:;
			}
			_iter_end_224de1b56:;;
		}
	_iter_next_224dde538:;
	}
	_iter_end_224dde538:;;
}

inline void _224dddacb_orderCommon(jule::Slice<jule::Ptr<_211b43228_Var>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_224de79d6:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_211b43228_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_224de79d6:;
			++it;
			_4114_j++;
			goto _iter_begin_224de79d6;
		}
		_iter_end_224de79d6:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_224dea665_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_224dea07c:;
			}
			_iter_end_224dea07c:;;
		}
	_iter_next_224de795e:;
	}
	_iter_end_224de795e:;;
}



inline void static__212245363_orderStructures(jule::Slice<jule::Ptr<_210e427d1_Struct>>& _6136_structs) {
	_224ddd290_orderCommon(_6136_structs);
}



inline void static__21225a0c0_orderVars(jule::Slice<jule::Ptr<_211b43228_Var>>& _6730_vars) {
	_224dddacb_orderCommon(_6730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _211d7c495_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21251d383_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _21255042b_optimizeChild(jule::Ptr<_21254ee53_scopeDeadCode> _self_, jule::Ptr<_211b0940e_Scope>& _3938_s) {
	jule::Ptr<_21254ee53_scopeDeadCode> _4017_sdc = jule::new_ptr<_21254ee53_scopeDeadCode>(_21254ee53_scopeDeadCode{._field_parent=_self_, ._field_s=_3938_s, ._field_stmts=(&(_3938_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_212552a6b_optimizeStmts(_4017_sdc);
	};
}



inline void _2125506c3_optimizeBodyChildExceptional(jule::Ptr<_21254ee53_scopeDeadCode> _self_, jule::Ptr<_211b0940e_Scope>& _5053_s) {
	jule::Ptr<_21254ee53_scopeDeadCode> _5117_sdc = jule::new_ptr<_21254ee53_scopeDeadCode>(_21254ee53_scopeDeadCode{._field_s=_5053_s, ._field_stmts=(&(_5053_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_212552a6b_optimizeStmts(_5117_sdc);
	};
}



inline void _212550959_optimizeBodyChild(jule::Ptr<_21254ee53_scopeDeadCode> _self_, jule::Ptr<_211b0940e_Scope>& _6142_s) {
	jule::Ptr<_21254ee53_scopeDeadCode> _6217_sdc = jule::new_ptr<_21254ee53_scopeDeadCode>(_21254ee53_scopeDeadCode{._field_s=_6142_s, ._field_stmts=(&(_6142_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_212552a6b_optimizeStmts(_6217_sdc);
	};
}



inline void _212550bce_optimizeExprModel(jule::Ptr<_21254ee53_scopeDeadCode> _self_, jule::Any& _7142_model) {
	_212553dad_exprDeadCode _7213_edc = static__2125544a7_new(_self_);;
	_212559952_optimize(&_7213_edc, _7142_model);
}



inline void _212550daa_eliminateFollowed(_21254ee53_scopeDeadCode* _self_) {
	if (((*_self_)._field_gotos.get().len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_21254ee53_scopeDeadCode> _8317_parent = (*_self_)._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL,(_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_224e74304:;
	}
	_iter_end_224e74304:;;
}



inline void _212551130_pushGoto(jule::Ptr<_21254ee53_scopeDeadCode> _self_, jule::Ptr<_211b0a83e_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < _self_.get()._field_labels.get().len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_224e76cc9:;
	}
	_iter_end_224e76cc9:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_211b0a83e_GotoSt>>::make({_9232_gt}));
}



inline void _2125513a5_pushLabel(jule::Ptr<_21254ee53_scopeDeadCode> _self_, jule::Ptr<_211b0a652_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < _self_.get()._field_gotos.get().len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,(_self_.get()._field_gotos.get().len() - 1LL));
				goto _iter_next_224e78aab;
			};
			(_10317_i)++;
		}
	_iter_next_224e78aab:;
	}
	_iter_end_224e78aab:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_211b0a652_Label>>::make({_10233_l}));
}



inline void _21255162a_optimizeRangeIter(jule::Ptr<_21254ee53_scopeDeadCode> _self_, jule::Ptr<_211b0a08b_RangeIter> _11541_it) {
	_212550bce_optimizeExprModel(_self_, _11541_it.get()._field_Expr.get()._field_Model);
	_212550959_optimizeBodyChild(_self_, _11541_it.get()._field_Scope);
}



inline void _2125518a0_optimizeWhileIter(jule::Ptr<_21254ee53_scopeDeadCode> _self_, jule::Ptr<_211b09d9e_WhileIter> _12041_it) {
	_212550bce_optimizeExprModel(_self_, _12041_it.get()._field_Expr);
	if ((_12041_it.get()._field_Next != nullptr)) {
		_212552890_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_212550959_optimizeBodyChild(_self_, _12041_it.get()._field_Scope);
}



inline void _212551b25_optimizeInfIter(jule::Ptr<_21254ee53_scopeDeadCode> _self_, jule::Ptr<_211b09bb2_InfIter> _12839_it) {
	_212550959_optimizeBodyChild(_self_, _12839_it.get()._field_Scope);
}



inline void _212551d9a_optimizeConditional(jule::Ptr<_21254ee53_scopeDeadCode> _self_, jule::Ptr<_211b099c5_Conditional> _13243_c) {
	{
		auto &expr = _13243_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_224e7e7d7:;
		if (it != expr.end()) {
			jule::Ptr<_211b095eb_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_212550bce_optimizeExprModel(_self_, _13321_case.get()._field_Expr);
					_212550959_optimizeBodyChild(_self_, _13321_case.get()._field_Scope);
				};
			}
			_iter_next_224e7e7d7:;
			++it;
			goto _iter_begin_224e7e7d7;
		}
		_iter_end_224e7e7d7:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_21255042b_optimizeChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		} else {
			_212550959_optimizeBodyChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _212552120_optimizeMatch(jule::Ptr<_21254ee53_scopeDeadCode> _self_, jule::Ptr<_211b0b0e2_Match> _15037_m) {
	{
		auto &expr = _15037_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_224e82510:;
		if (it != expr.end()) {
			jule::Ptr<_211b0b642_Case> _15121_case = *it;
			{
				{
					auto &expr = _15121_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_224e82db2:;
					if (it != expr.end()) {
						jule::Ptr<_211b8a319_Data> _15225_expr = *it;
						{
							_212550bce_optimizeExprModel(_self_, _15225_expr.get()._field_Model);
						}
						_iter_next_224e82db2:;
						++it;
						goto _iter_begin_224e82db2;
					}
					_iter_end_224e82db2:;
				};
				_212550959_optimizeBodyChild(_self_, _15121_case.get()._field_Scope);
			}
			_iter_next_224e82510:;
			++it;
			goto _iter_begin_224e82510;
		}
		_iter_end_224e82510:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_21255042b_optimizeChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		} else {
			_212550959_optimizeBodyChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _212552395_optimizeAssign(jule::Ptr<_21254ee53_scopeDeadCode> _self_, jule::Ptr<_211b0ac18_Assign> _16838_assign) {
	_212550bce_optimizeExprModel(_self_, _16838_assign.get()._field_L.get()._field_Model);
	_212550bce_optimizeExprModel(_self_, _16838_assign.get()._field_R.get()._field_Model);
}



inline void _21255261a_optimizeMultiAssign(jule::Ptr<_21254ee53_scopeDeadCode> _self_, jule::Ptr<_211b0ae05_MultiAssign> _17343_assign) {
	{
		auto &expr = _17343_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_224e864ae:;
		if (it != expr.end()) {
			jule::Any _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_212550bce_optimizeExprModel(_self_, _17421_l);
				};
			}
			_iter_next_224e864ae:;
			++it;
			goto _iter_begin_224e864ae;
		}
		_iter_end_224e864ae:;
	};
	_212550bce_optimizeExprModel(_self_, _17343_assign.get()._field_R);
}



inline void _212552890_optimizeStmt(jule::Ptr<_21254ee53_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type_is<jule::Ptr<_211b0940e_Scope>>()) {
			_case_begin_224e87b31:;
			{
				jule::Ptr<_211b0940e_Scope> _18521_scope = _18236_st.operator jule::Ptr<_211b0940e_Scope>();;
				if (_18521_scope.get()._field_Deferred) {
					_212552d57_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_21255042b_optimizeChild(_self_, _18521_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0a08b_RangeIter>>()) {
			_case_begin_224e87ca7:;
			{
				_21255162a_optimizeRangeIter(_self_, _18236_st.operator jule::Ptr<_211b0a08b_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b09d9e_WhileIter>>()) {
			_case_begin_224e87d1d:;
			{
				_2125518a0_optimizeWhileIter(_self_, _18236_st.operator jule::Ptr<_211b09d9e_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b09bb2_InfIter>>()) {
			_case_begin_224e87d84:;
			{
				_212551b25_optimizeInfIter(_self_, _18236_st.operator jule::Ptr<_211b09bb2_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b099c5_Conditional>>()) {
			_case_begin_224e87e0b:;
			{
				_212551d9a_optimizeConditional(_self_, _18236_st.operator jule::Ptr<_211b099c5_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0b0e2_Match>>()) {
			_case_begin_224e87e83:;
			{
				_212552120_optimizeMatch(_self_, _18236_st.operator jule::Ptr<_211b0b0e2_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0ac18_Assign>>()) {
			_case_begin_224e8800a:;
			{
				_212552395_optimizeAssign(_self_, _18236_st.operator jule::Ptr<_211b0ac18_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0ae05_MultiAssign>>()) {
			_case_begin_224e88082:;
			{
				_21255261a_optimizeMultiAssign(_self_, _18236_st.operator jule::Ptr<_211b0ae05_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b8a319_Data>>()) {
			_case_begin_224e88109:;
			{
				jule::Ptr<_211b8a319_Data> _20621_d = _18236_st.operator jule::Ptr<_211b8a319_Data>();;
				if (_self_.get()._field_except) {
					goto _match_end_224e87c41;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_21101ba20_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21101b080_BuiltinPanicCallExprModel>>()) {
						_case_begin_224e8d31d:;
						{
							_212550daa_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_224e8d890:;
						{
							_212550bce_optimizeExprModel(_self_, _20621_d.get()._field_Model);
						}
					}
					_match_end_224e8d83a:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0bb4d_RetSt>>()) {
			_case_begin_224e88181:;
			{
				_212550daa_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0a83e_GotoSt>>()) {
			_case_begin_224e88208:;
			{
				_212551130_pushGoto(_self_, _18236_st.operator jule::Ptr<_211b0a83e_GotoSt>());
				_212550daa_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0a652_Label>>()) {
			_case_begin_224e88280:;
			{
				_2125513a5_pushLabel(_self_, _18236_st.operator jule::Ptr<_211b0a652_Label>());
			}
		}
		_match_end_224e87c41:;
	};
}



inline void _212552a6b_optimizeStmts(jule::Ptr<_21254ee53_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < _self_.get()._field_stmts->len()); (_self_.get()._field_i)++) {
		{
			_212552890_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_224e8cebb:;
	}
	_iter_end_224e8cebb:;;
}







std::ostream &operator<<(std::ostream &_Stream, _21254ee53_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _212553dad_exprDeadCode static__2125544a7_new(jule::Ptr<_21254ee53_scopeDeadCode>& _4724_s) {
	return _212553dad_exprDeadCode{._field_s=_4724_s};
}



inline void _21255472c_binary(_212553dad_exprDeadCode* _self_, jule::Ptr<_211017c3b_BinopExprModel> _5325_m) {
	_212559952_optimize(&(*_self_), _5325_m.get()._field_Left.get()._field_Model);
	_212559952_optimize(&(*_self_), _5325_m.get()._field_Right.get()._field_Model);
}



inline void _2125549a2_unary(_212553dad_exprDeadCode* _self_, jule::Ptr<_211017e28_UnaryExprModel> _5824_m) {
	_212559952_optimize(&(*_self_), _5824_m.get()._field_Expr.get()._field_Model);
}



inline void _212554c27_structureLit(_212553dad_exprDeadCode* _self_, jule::Ptr<_211018302_StructLitExprModel> _6231_m) {
	{
		auto &expr = _6231_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_224e94137:;
		if (it != expr.end()) {
			jule::Ptr<_211018115_StructArgExprModel> _6321_arg = *it;
			{
				_212559952_optimize(&(*_self_), _6321_arg.get()._field_Expr);
			}
			_iter_next_224e94137:;
			++it;
			goto _iter_begin_224e94137;
		}
		_iter_end_224e94137:;
	};
}



inline void _212554e9c_allocStructure(_212553dad_exprDeadCode* _self_, jule::Ptr<_2110184de_AllocStructLitExprModel> _6833_m) {
	_212554c27_structureLit(&(*_self_), _6833_m.get()._field_Lit);
}



inline void _212555222_casting(_212553dad_exprDeadCode* _self_, jule::Ptr<_2110186cb_CastingExprModel> _7226_m) {
	_212559952_optimize(&(*_self_), _7226_m.get()._field_Expr);
}



inline void _212555497_args(_212553dad_exprDeadCode* _self_, jule::Slice<jule::Any>& _7624_args) {
	{
		auto &expr = _7624_args;
		auto it = expr.begin();
		_iter_begin_224e96425:;
		if (it != expr.end()) {
			jule::Any _7721_arg = *it;
			{
				_212559952_optimize(&(*_self_), _7721_arg);
			}
			_iter_next_224e96425:;
			++it;
			goto _iter_begin_224e96425;
		}
		_iter_end_224e96425:;
	};
}



inline void _21255571c_funcCall(_212553dad_exprDeadCode* _self_, jule::Ptr<_2110188b8_FnCallExprModel> _8227_m) {
	_212559952_optimize(&(*_self_), _8227_m.get()._field_Expr);
	_212555497_args(&(*_self_), _8227_m.get()._field_Args);
	if ((_8227_m.get()._field_Except != nullptr)) {
		_2125506c3_optimizeBodyChildExceptional((*_self_)._field_s, _8227_m.get()._field_Except);
	};
}



inline void _212555992_slice(_212553dad_exprDeadCode* _self_, jule::Ptr<_211018aa5_SliceExprModel> _9024_m) {
	_212555497_args(&(*_self_), _9024_m.get()._field_Elems);
}



inline void _212555c17_array(_212553dad_exprDeadCode* _self_, jule::Ptr<_21101a029_ArrayExprModel> _9424_m) {
	if (((_9424_m.get()._field_Elems.len() == 2LL) && (_9424_m.get()._field_Elems[1LL] == nullptr))) {
		_212559952_optimize(&(*_self_), _9424_m.get()._field_Elems[0LL]);
	};
	_212555497_args(&(*_self_), _9424_m.get()._field_Elems);
}



inline void _212555e8c_indexing(_212553dad_exprDeadCode* _self_, jule::Ptr<_211018c92_IndexingExprModel> _10127_m) {
	_212559952_optimize(&(*_self_), _10127_m.get()._field_Expr.get()._field_Model);
	_212559952_optimize(&(*_self_), _10127_m.get()._field_Index.get()._field_Model);
}



inline void _212556212_anonFunc(_212553dad_exprDeadCode* _self_, jule::Ptr<_211018e7e_AnonFnExprModel> _10627_m) {
	_212552d57_eliminateDeadCodeOfScope(_10627_m.get()._field_Func.get()._field_Scope);
}



inline void _212556487_map(_212553dad_exprDeadCode* _self_, jule::Ptr<_211019358_MapExprModel> _11022_m) {
	{
		auto &expr = _11022_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_224e9c53b:;
		if (it != expr.end()) {
			jule::Ptr<_21101916b_KeyValPairExprModel> _11121_pair = *it;
			{
				_212559952_optimize(&(*_self_), _11121_pair.get()._field_Key);
				_212559952_optimize(&(*_self_), _11121_pair.get()._field_Val);
			}
			_iter_next_224e9c53b:;
			++it;
			goto _iter_begin_224e9c53b;
		}
		_iter_end_224e9c53b:;
	};
}



inline void _21255670c_slicing(_212553dad_exprDeadCode* _self_, jule::Ptr<_211019545_SlicingExprModel> _11726_m) {
	_212559952_optimize(&(*_self_), _11726_m.get()._field_Expr);
	_212559952_optimize(&(*_self_), _11726_m.get()._field_Left);
	if ((_11726_m.get()._field_Right != nullptr)) {
		_212559952_optimize(&(*_self_), _11726_m.get()._field_Right);
	};
}



inline void _212556982_traitSub(_212553dad_exprDeadCode* _self_, jule::Ptr<_211019732_TraitSubIdentExprModel> _12527_m) {
	_212559952_optimize(&(*_self_), _12527_m.get()._field_Expr);
}



inline void _212556c07_structureSub(_212553dad_exprDeadCode* _self_, jule::Ptr<_211019b50_StructSubIdentExprModel> _12931_m) {
	_212559952_optimize(&(*_self_), _12931_m.get()._field_Expr.get()._field_Model);
}



inline void _212556e7c_commonSub(_212553dad_exprDeadCode* _self_, jule::Ptr<_21101a403_CommonSubIdentExprModel> _13328_m) {
	_212559952_optimize(&(*_self_), _13328_m.get()._field_Expr);
}



inline void _212557202_tuple(_212553dad_exprDeadCode* _self_, jule::Ptr<_21101a5e0_TupleExprModel> _13724_m) {
	{
		auto &expr = _13724_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_224ea1b7d:;
		if (it != expr.end()) {
			jule::Ptr<_211b8a319_Data> _13821_d = *it;
			{
				_212559952_optimize(&(*_self_), _13821_d.get()._field_Model);
			}
			_iter_next_224ea1b7d:;
			++it;
			goto _iter_begin_224ea1b7d;
		}
		_iter_end_224ea1b7d:;
	};
}



inline void _212557477_newCall(_212553dad_exprDeadCode* _self_, jule::Ptr<_21101ad93_BuiltinNewCallExprModel> _14326_m) {
	if ((_14326_m.get()._field_Init != nullptr)) {
		_212559952_optimize(&(*_self_), _14326_m.get()._field_Init);
	};
}



inline void _2125576ec_outCall(_212553dad_exprDeadCode* _self_, jule::Ptr<_21101a7cc_BuiltinOutCallExprModel> _14926_m) {
	_212559952_optimize(&(*_self_), _14926_m.get()._field_Expr);
}



inline void _212557972_outlnCall(_212553dad_exprDeadCode* _self_, jule::Ptr<_21101a9b9_BuiltinOutlnCallExprModel> _15328_m) {
	_212559952_optimize(&(*_self_), _15328_m.get()._field_Expr);
}



inline void _212557be7_panicCall(_212553dad_exprDeadCode* _self_, jule::Ptr<_21101b080_BuiltinPanicCallExprModel> _15728_m) {
	_212559952_optimize(&(*_self_), _15728_m.get()._field_Expr);
}



inline void _212557e6c_assertCall(_212553dad_exprDeadCode* _self_, jule::Ptr<_21101b26c_BuiltinAssertCallExprModel> _16129_m) {
	_212559952_optimize(&(*_self_), _16129_m.get()._field_Expr);
}



inline void _2125581e2_errorCall(_212553dad_exprDeadCode* _self_, jule::Ptr<_21101ba20_BuiltinErrorCallExprModel> _16528_m) {
	_212559952_optimize(&(*_self_), _16528_m.get()._field_Err);
}



inline void _212558467_makeCall(_212553dad_exprDeadCode* _self_, jule::Ptr<_21101b459_BuiltinMakeCallExprModel> _16927_m) {
	if ((_16927_m.get()._field_Len != nullptr)) {
		_212559952_optimize(&(*_self_), _16927_m.get()._field_Len);
	};
	if ((_16927_m.get()._field_Cap != nullptr)) {
		_212559952_optimize(&(*_self_), _16927_m.get()._field_Cap);
	};
}



inline void _2125586dc_appendCall(_212553dad_exprDeadCode* _self_, jule::Ptr<_21101b646_BuiltinAppendCallExprModel> _17829_m) {
	_212559952_optimize(&(*_self_), _17829_m.get()._field_Dest);
	_212559952_optimize(&(*_self_), _17829_m.get()._field_Elements);
}



inline void _212558962_cloneCall(_212553dad_exprDeadCode* _self_, jule::Ptr<_21101aba6_BuiltinCloneCallExprModel> _18328_m) {
	_212559952_optimize(&(*_self_), _18328_m.get()._field_Expr);
}



inline void _212558bd7_sizeof(_212553dad_exprDeadCode* _self_, jule::Ptr<_21101991e_SizeofExprModel> _18725_m) {
	_212559952_optimize(&(*_self_), _18725_m.get()._field_Expr);
}



inline void _212558e5c_alignof(_212553dad_exprDeadCode* _self_, jule::Ptr<_21101c180_AlignofExprModel> _19126_m) {
	_212559952_optimize(&(*_self_), _19126_m.get()._field_Expr);
}



inline void _2125591d2_integratedToStr(_212553dad_exprDeadCode* _self_, jule::Ptr<_21101c559_IntegratedToStrExprModel> _19534_m) {
	_212559952_optimize(&(*_self_), _19534_m.get()._field_Expr);
}



inline void _212559457_free(_212553dad_exprDeadCode* _self_, jule::Ptr<_21101c933_FreeExprModel> _19923_m) {
	_212559952_optimize(&(*_self_), _19923_m.get()._field_Expr);
}



inline void _2125596cc_backendEmit(_212553dad_exprDeadCode* _self_, jule::Ptr<_21101c746_BackendEmitExprModel> _20330_m) {
	_212555497_args(&(*_self_), _20330_m.get()._field_Exprs);
}



inline void _212559952_optimize(_212553dad_exprDeadCode* _self_, jule::Any& _20728_model) {
	{
		auto &_match_expr{ _20728_model };
		
		if (_match_expr.type_is<jule::Ptr<_211017c3b_BinopExprModel>>()) {
			_case_begin_224eac0ea:;
			{
				_21255472c_binary(&(*_self_), _20728_model.operator jule::Ptr<_211017c3b_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211017e28_UnaryExprModel>>()) {
			_case_begin_224eac172:;
			{
				_2125549a2_unary(&(*_self_), _20728_model.operator jule::Ptr<_211017e28_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211018302_StructLitExprModel>>()) {
			_case_begin_224eac1e9:;
			{
				_212554c27_structureLit(&(*_self_), _20728_model.operator jule::Ptr<_211018302_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2110184de_AllocStructLitExprModel>>()) {
			_case_begin_224eac590:;
			{
				_212554e9c_allocStructure(&(*_self_), _20728_model.operator jule::Ptr<_2110184de_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2110186cb_CastingExprModel>>()) {
			_case_begin_224eac606:;
			{
				_212555222_casting(&(*_self_), _20728_model.operator jule::Ptr<_2110186cb_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2110188b8_FnCallExprModel>>()) {
			_case_begin_224eac67d:;
			{
				_21255571c_funcCall(&(*_self_), _20728_model.operator jule::Ptr<_2110188b8_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211018aa5_SliceExprModel>>()) {
			_case_begin_224eac705:;
			{
				_212555992_slice(&(*_self_), _20728_model.operator jule::Ptr<_211018aa5_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101a029_ArrayExprModel>>()) {
			_case_begin_224eac77c:;
			{
				_212555c17_array(&(*_self_), _20728_model.operator jule::Ptr<_21101a029_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211018c92_IndexingExprModel>>()) {
			_case_begin_224eac804:;
			{
				_212555e8c_indexing(&(*_self_), _20728_model.operator jule::Ptr<_211018c92_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211018e7e_AnonFnExprModel>>()) {
			_case_begin_224eac87b:;
			{
				_212556212_anonFunc(&(*_self_), _20728_model.operator jule::Ptr<_211018e7e_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019358_MapExprModel>>()) {
			_case_begin_224eac903:;
			{
				_212556487_map(&(*_self_), _20728_model.operator jule::Ptr<_211019358_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019545_SlicingExprModel>>()) {
			_case_begin_224eac97a:;
			{
				_21255670c_slicing(&(*_self_), _20728_model.operator jule::Ptr<_211019545_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019732_TraitSubIdentExprModel>>()) {
			_case_begin_224eaca02:;
			{
				_212556982_traitSub(&(*_self_), _20728_model.operator jule::Ptr<_211019732_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019b50_StructSubIdentExprModel>>()) {
			_case_begin_224eaca79:;
			{
				_212556c07_structureSub(&(*_self_), _20728_model.operator jule::Ptr<_211019b50_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101a403_CommonSubIdentExprModel>>()) {
			_case_begin_224eacb01:;
			{
				_212556e7c_commonSub(&(*_self_), _20728_model.operator jule::Ptr<_21101a403_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101a5e0_TupleExprModel>>()) {
			_case_begin_224eacb78:;
			{
				_212557202_tuple(&(*_self_), _20728_model.operator jule::Ptr<_21101a5e0_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101a7cc_BuiltinOutCallExprModel>>()) {
			_case_begin_224eacc00:;
			{
				_2125576ec_outCall(&(*_self_), _20728_model.operator jule::Ptr<_21101a7cc_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101a9b9_BuiltinOutlnCallExprModel>>()) {
			_case_begin_224eacc77:;
			{
				_212557972_outlnCall(&(*_self_), _20728_model.operator jule::Ptr<_21101a9b9_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101ad93_BuiltinNewCallExprModel>>()) {
			_case_begin_224eaccee:;
			{
				_212557477_newCall(&(*_self_), _20728_model.operator jule::Ptr<_21101ad93_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101b080_BuiltinPanicCallExprModel>>()) {
			_case_begin_224eacd76:;
			{
				_212557be7_panicCall(&(*_self_), _20728_model.operator jule::Ptr<_21101b080_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101b26c_BuiltinAssertCallExprModel>>()) {
			_case_begin_224eacded:;
			{
				_212557e6c_assertCall(&(*_self_), _20728_model.operator jule::Ptr<_21101b26c_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101ba20_BuiltinErrorCallExprModel>>()) {
			_case_begin_224eace75:;
			{
				_2125581e2_errorCall(&(*_self_), _20728_model.operator jule::Ptr<_21101ba20_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101b459_BuiltinMakeCallExprModel>>()) {
			_case_begin_224eaceec:;
			{
				_212558467_makeCall(&(*_self_), _20728_model.operator jule::Ptr<_21101b459_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101b646_BuiltinAppendCallExprModel>>()) {
			_case_begin_224ead074:;
			{
				_2125586dc_appendCall(&(*_self_), _20728_model.operator jule::Ptr<_21101b646_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101aba6_BuiltinCloneCallExprModel>>()) {
			_case_begin_224ead0eb:;
			{
				_212558962_cloneCall(&(*_self_), _20728_model.operator jule::Ptr<_21101aba6_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101991e_SizeofExprModel>>()) {
			_case_begin_224ead173:;
			{
				_212558bd7_sizeof(&(*_self_), _20728_model.operator jule::Ptr<_21101991e_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101c180_AlignofExprModel>>()) {
			_case_begin_224ead1ea:;
			{
				_212558e5c_alignof(&(*_self_), _20728_model.operator jule::Ptr<_21101c180_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101c559_IntegratedToStrExprModel>>()) {
			_case_begin_224ead272:;
			{
				_2125591d2_integratedToStr(&(*_self_), _20728_model.operator jule::Ptr<_21101c559_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101c933_FreeExprModel>>()) {
			_case_begin_224ead2e9:;
			{
				_212559457_free(&(*_self_), _20728_model.operator jule::Ptr<_21101c933_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101c746_BackendEmitExprModel>>()) {
			_case_begin_224ead371:;
			{
				_2125596cc_backendEmit(&(*_self_), _20728_model.operator jule::Ptr<_21101c746_BackendEmitExprModel>());
			}
		}
		_match_end_224eac2e8:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _212553dad_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20e81ad04_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210340e22_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21073810a_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210bd39e5_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20e858e96_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20ea01baa_scopeOptimizer> static__20e813a33_new(jule::Ptr<_211b0940e_Scope> _4523_scope) {
	return jule::new_ptr<_20ea01baa_scopeOptimizer>(_20ea01baa_scopeOptimizer{._field_scope=_4523_scope});
}



inline void _20e822e3d_setCurrentStmt(_20ea01baa_scopeOptimizer* _self_, jule::Any _5137_stmt) {
	(*_self_)._field_scope.get()._field_Stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5137_stmt))))));
}



inline void _20e82d08b_optimizeData(_20ea01baa_scopeOptimizer* _self_, jule::Ptr<_211b8a319_Data> _5535_d) {
	{
		auto &_match_expr{ _5535_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_2110188b8_FnCallExprModel>>()) {
			_case_begin_224ee8268:;
			{
				jule::Ptr<_2110188b8_FnCallExprModel> _5821_m = _5535_d.get()._field_Model.operator jule::Ptr<_2110188b8_FnCallExprModel>();;
				if (_20c5533ce_Production) {
					if (((!(_2110240bb_IsBuiltin(_5821_m.get()._field_Func.ptr()))) && _20e94ee7c_isStdPackage(_5821_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("debug", 5)))) {
						_20e822e3d_setCurrentStmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_224ee8059:;
	};
	static__20e97c1b8_optimize(_5535_d.get()._field_Model);
}



inline void _20e83a593_optimizeVar(_20ea01baa_scopeOptimizer* _self_, jule::Ptr<_211b43228_Var> _7034_v) {
	if ((_7034_v.get()._field_Value != nullptr)) {
		static__20e97c1b8_optimize(_7034_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _20e83b286_optimizeConditional(_20ea01baa_scopeOptimizer* _self_, jule::Ptr<_211b099c5_Conditional> _7642_c) {
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_224eeb359:;
		if (it != expr.end()) {
			jule::Ptr<_211b095eb_If> _7721_elif = *it;
			{
				static__20e97c1b8_optimize(_7721_elif.get()._field_Expr);
				_20e949dcd_optimizeChild(&(*_self_), _7721_elif.get()._field_Scope);
			}
			_iter_next_224eeb359:;
			++it;
			goto _iter_begin_224eeb359;
		}
		_iter_end_224eeb359:;
	};
	if ((_7642_c.get()._field_Default != nullptr)) {
		_20e949dcd_optimizeChild(&(*_self_), _7642_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_20e85998b_Cond))) {
		return;;
	};
	jule::Bool _8917_constCase = false;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_224eed48d:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_211b095eb_If> _9221_elif = *it;
			{
				if ((!(_20e9529da_isConstantValidConditionalCase(_9221_elif)))) {
					goto _iter_next_224eed48d;
				};
				_8917_constCase=true;
				_7642_c.get()._field_Elifs=_7642_c.get()._field_Elifs.slice(0LL,_9214_i);
				_7642_c.get()._field_Default=jule::new_ptr<_211b097d8_Else>(_211b097d8_Else{._field_Scope=_9221_elif.get()._field_Scope});
				goto _iter_end_224eed48d;
			}
			_iter_next_224eed48d:;
			++it;
			_9214_i++;
			goto _iter_begin_224eed48d;
		}
		_iter_end_224eed48d:;
	};
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_211b095eb_If>* _10917_i = (&(_7642_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_211b095eb_If>* _11013_end = (&(_7642_c.get()._field_Elifs[(_7642_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_20e957da8_isUnreachableConditionalCase((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_225001859:;
	}
	_iter_end_225001859:;;
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_constCase))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_2250030ca:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_211b095eb_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_2250030ca:;
			++it;
			_12913_j++;
			goto _iter_begin_2250030ca;
		}
		_iter_end_2250030ca:;
	};
	if ((_12817_only != -1LL)) {
		_20e822e3d_setCurrentStmt(&(*_self_), jule::Any(_7642_c.get()._field_Elifs[_12817_only].get()._field_Scope));
	};
}



inline void _20e858429_buildDefaultConstatTrueCase(_20ea01baa_scopeOptimizer* _self_, jule::Ptr<_211b0b642_Case> _14550_case, jule::I64& _14568_i, jule::Ptr<_211b0b0e2_Match>& _14581_m) {
	_14550_case.get()._field_Exprs=nullptr;
	jule::I64 _14713_start = _14568_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14550_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_225005819;
			};
			jule::Any &_15322_stmt = _14550_case.get()._field_Scope.get()._field_Stmts[(_14550_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_211b0b961_FallSt>>()) {
					_case_begin_2250061dd:;
					{
						(_14568_i)++;
						if ((_14568_i >= _14581_m.get()._field_Cases.len())) {
							_15322_stmt=static_cast<jule::Any>(_14581_m.get()._field_Default.get()._field_Scope);
							goto _iter_end_225005819;
						};
						_14550_case=_14581_m.get()._field_Cases[_14568_i];
						_15322_stmt=static_cast<jule::Any>(_14550_case.get()._field_Scope);
					}
				}
				else {
					_case_begin_225007794:;
					{
						goto _iter_end_225005819;
					}
				}
				_match_end_2250076a6:;
			};
		}
	_iter_next_225005819:;
	}
	_iter_end_225005819:;;
	_14581_m.get()._field_Default=_14581_m.get()._field_Cases[_14713_start];
	_14581_m.get()._field_Cases=_14581_m.get()._field_Cases.slice(0LL,_14713_start);
}



inline void _20e85d0dd_optimizeMatch(_20ea01baa_scopeOptimizer* _self_, jule::Ptr<_211b0b0e2_Match> _17136_m) {
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_2250098ea:;
		if (it != expr.end()) {
			jule::Ptr<_211b0b642_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_22500a29c:;
					if (it != expr.end()) {
						jule::Ptr<_211b8a319_Data> _17325_expr = *it;
						{
							static__20e97c1b8_optimize(_17325_expr.get()._field_Model);
						}
						_iter_next_22500a29c:;
						++it;
						goto _iter_begin_22500a29c;
					}
					_iter_end_22500a29c:;
				};
				_20e949dcd_optimizeChild(&(*_self_), _17221_case.get()._field_Scope);
			}
			_iter_next_2250098ea:;
			++it;
			goto _iter_begin_2250098ea;
		}
		_iter_end_2250098ea:;
	};
	if ((_17136_m.get()._field_Default != nullptr)) {
		_20e949dcd_optimizeChild(&(*_self_), _17136_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_20e85998b_Cond))) {
		return;;
	};
	jule::Bool _18617_constCase = false;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_22500c0b2:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_211b0b642_Case> _18925_case = *it;
			{
				if ((!(_20e956b54_isConstantValidMatchCase(_18925_case)))) {
					goto _iter_next_22500c0b2;
				};
				_18617_constCase=true;
				_20e858429_buildDefaultConstatTrueCase(&(*_self_), _18925_case,_18918_i,_17136_m);
				goto _iter_end_22500c0b2;
			}
			_iter_next_22500c0b2:;
			++it;
			_18918_i++;
			goto _iter_begin_22500c0b2;
		}
		_iter_end_22500c0b2:;
	};
	if ((_17136_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_211b0b642_Case>* _20317_i = (&(_17136_m.get()._field_Cases[0LL]));;
	jule::Ptr<_211b0b642_Case>* _20413_end = (&(_17136_m.get()._field_Cases[(_17136_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_20e960b91_isUnreachableMatchCase((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_22500eec7:;
	}
	_iter_end_22500eec7:;;
	if ((!(_18617_constCase))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_225011171:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_211b0b642_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_225011171:;
			++it;
			_21913_j++;
			goto _iter_begin_225011171;
		}
		_iter_end_225011171:;
	};
	if ((_21817_only != -1LL)) {
		_20e822e3d_setCurrentStmt(&(*_self_), jule::Any(_17136_m.get()._field_Cases[_21817_only].get()._field_Scope));
	};
}



inline void _20e85ea3a_optimizeRangeIter(_20ea01baa_scopeOptimizer* _self_, jule::Ptr<_211b0a08b_RangeIter> _23540_it) {
	static__20e97c1b8_optimize(_23540_it.get()._field_Expr.get()._field_Model);
	_20e949dcd_optimizeChild(&(*_self_), _23540_it.get()._field_Scope);
}



inline void _20e85ee7a_optimizeWhileIter(_20ea01baa_scopeOptimizer* _self_, jule::Ptr<_211b09d9e_WhileIter> _24040_it) {
	static__20e97c1b8_optimize(_24040_it.get()._field_Expr);
	_20e9455d2_optimizeStmt(&(*_self_), _24040_it.get()._field_Next);
	_20e949dcd_optimizeChild(&(*_self_), _24040_it.get()._field_Scope);
}



inline jule::Bool _20e8927e8_substr(_20ea01baa_scopeOptimizer* _self_, jule::Ptr<_211b0ac18_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_211019545_SlicingExprModel>>()) {
			_case_begin_225015472:;
			{
				jule::Ptr<_211019545_SlicingExprModel> _24921_sem = _24629_a.get()._field_R.get()._field_Model.operator jule::Ptr<_211019545_SlicingExprModel>();;
				if ((_24921_sem.get()._field_Expr == _24629_a.get()._field_L.get()._field_Model)) {
					_20e822e3d_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_210bd39e5_MutSlicingExprModel>(_210bd39e5_MutSlicingExprModel{._field_Token=_24921_sem.get()._field_Token, ._field_Expr=_24921_sem.get()._field_Expr, ._field_Left=_24921_sem.get()._field_Left, ._field_Right=_24921_sem.get()._field_Right})));
					return true;
				};
			}
		}
		_match_end_22501541c:;
	};
	return false;
}



inline jule::Bool _20e89319a_strInsert(_20ea01baa_scopeOptimizer* _self_, jule::Ptr<_211b0ac18_Assign> _26332_a) {
	{
		auto &_match_expr{ _26332_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_211017c3b_BinopExprModel>>()) {
			_case_begin_22501795d:;
			{
				jule::Ptr<_211017c3b_BinopExprModel> _26621_m = _26332_a.get()._field_R.get()._field_Model.operator jule::Ptr<_211017c3b_BinopExprModel>();;
				if ((_26621_m.get()._field_Right.get()._field_Model == _26332_a.get()._field_L.get()._field_Model)) {
					_20e822e3d_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_20e858e96_StrInsertBeginExprModel>(_20e858e96_StrInsertBeginExprModel{._field_Dest=_26332_a.get()._field_L.get()._field_Model, ._field_Expr=_26621_m.get()._field_Left.get()._field_Model})));
					return true;
				};
			}
		}
		_match_end_225017908:;
	};
	return false;
}



inline jule::Bool _20e8a7dd5_strAssign(_20ea01baa_scopeOptimizer* _self_, jule::Ptr<_211b0ac18_Assign> _27832_a) {
	if ((_27832_a.get()._field_Op.get()._field_Kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_211bbae2c_Prim> _28213_lp = _211bb8567_Prim(_27832_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_211bbe161_IsStr(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_20e8927e8_substr(&(*_self_), _27832_a) || _20e89319a_strInsert(&(*_self_), _27832_a)) {
			_case_begin_22501b4cd:;
			{
				return true;
			}
		}
		_match_end_22501b445:;
	};
	return false;
}



inline void _20e9379ae_optimizeAssign(_20ea01baa_scopeOptimizer* _self_, jule::Ptr<_211b0ac18_Assign> _29437_assign) {
	if ((_20e82655c_Copy && _20e8a7dd5_strAssign(&(*_self_), _29437_assign))) {
		return;;
	};
	static__20e97c1b8_optimize(_29437_assign.get()._field_L.get()._field_Model);
	static__20e97c1b8_optimize(_29437_assign.get()._field_R.get()._field_Model);
	{
		auto &_match_expr{ _29437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_22501d579:;
			{
				if ((_20e832689_Math && (_211bb99b9_Struct(_29437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_29437_assign.get()._field_Op.get()._field_Kind=_29437_assign.get()._field_Op.get()._field_Kind.slice(0LL,(_29437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _30725_model = static_cast<jule::Any>(jule::new_ptr<_211017c3b_BinopExprModel>(_211017c3b_BinopExprModel{._field_Left=_29437_assign.get()._field_L, ._field_Right=_29437_assign.get()._field_R, ._field_Op=_29437_assign.get()._field_Op}));;
					static__20e97c1b8_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_211017c3b_BinopExprModel>>()) {
							_case_begin_22502078a:;
							{
								_29437_assign.get()._field_R=jule::new_ptr<_211017a4e_OperandExprModel>((*(_29437_assign.get()._field_R)));
								_29437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_29437_assign.get()._field_R.get()._field_Model=_30725_model;
								return;;
							}
						}
						_match_end_2250208ab:;
					};
					_29437_assign.get()._field_Op.get()._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_22501d524:;
	};
	if (_20e81523d_Append) {
		{
			auto &_match_expr{ _29437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_21101b646_BuiltinAppendCallExprModel>>()) {
				_case_begin_225022737:;
				{
					jule::Ptr<_21101b646_BuiltinAppendCallExprModel> _32825_m = _29437_assign.get()._field_R.get()._field_Model.operator jule::Ptr<_21101b646_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_Elements };
						
						if (_match_expr.type_is<jule::Ptr<_211018aa5_SliceExprModel>>()) {
							_case_begin_2250237d2:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_Dest };
									
									if (_match_expr.type_is<jule::Ptr<_211b43228_Var>>() || _match_expr.type_is<jule::Ptr<_211019b50_StructSubIdentExprModel>>()) {
										_case_begin_2250240c9:;
										{
											_20e822e3d_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_21073810a_PushToSliceExprModel>(_21073810a_PushToSliceExprModel{._field_Dest=_32825_m.get()._field_Dest, ._field_Elems=_32825_m.get()._field_Elements.operator jule::Ptr<_211018aa5_SliceExprModel>()})));
										}
									}
									_match_end_225024074:;
								};
							}
						}
						_match_end_225023617:;
					};
				}
			}
			_match_end_225022627:;
		};
	};
}



inline void _20e940b93_optimizeMultiAssign(_20ea01baa_scopeOptimizer* _self_, jule::Ptr<_211b0ae05_MultiAssign> _34442_assign) {
	{
		auto &expr = _34442_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_22501d997:;
		if (it != expr.end()) {
			jule::I64 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__20e97c1b8_optimize(_34521_l);
					_34442_assign.get()._field_L[_34514_i]=_34521_l;
				};
			}
			_iter_next_22501d997:;
			++it;
			_34514_i++;
			goto _iter_begin_22501d997;
		}
		_iter_end_22501d997:;
	};
	static__20e97c1b8_optimize(_34442_assign.get()._field_R);
}



inline void _20e943cb7_optimizeRet(_20ea01baa_scopeOptimizer* _self_, jule::Ptr<_211b0bb4d_RetSt> _35434_r) {
	static__20e97c1b8_optimize(_35434_r.get()._field_Expr);
}



inline void _20e9455d2_optimizeStmt(_20ea01baa_scopeOptimizer* _self_, jule::Any _35835_stmt) {
	{
		auto &_match_expr{ _35835_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_211b0940e_Scope>>()) {
			_case_begin_225026c8b:;
			{
				_20e949dcd_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_211b0940e_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b8a319_Data>>()) {
			_case_begin_225026d35:;
			{
				_20e82d08b_optimizeData(&(*_self_), _35835_stmt.operator jule::Ptr<_211b8a319_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b43228_Var>>()) {
			_case_begin_225026d9b:;
			{
				_20e83a593_optimizeVar(&(*_self_), _35835_stmt.operator jule::Ptr<_211b43228_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b099c5_Conditional>>()) {
			_case_begin_225026e12:;
			{
				_20e83b286_optimizeConditional(&(*_self_), _35835_stmt.operator jule::Ptr<_211b099c5_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0a08b_RangeIter>>()) {
			_case_begin_225026e89:;
			{
				_20e85ea3a_optimizeRangeIter(&(*_self_), _35835_stmt.operator jule::Ptr<_211b0a08b_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b09d9e_WhileIter>>()) {
			_case_begin_225027011:;
			{
				_20e85ee7a_optimizeWhileIter(&(*_self_), _35835_stmt.operator jule::Ptr<_211b09d9e_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b09bb2_InfIter>>()) {
			_case_begin_225027088:;
			{
				_20e949dcd_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_211b09bb2_InfIter>().get()._field_Scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0ac18_Assign>>()) {
			_case_begin_225027110:;
			{
				_20e9379ae_optimizeAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_211b0ac18_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0ae05_MultiAssign>>()) {
			_case_begin_225027187:;
			{
				_20e940b93_optimizeMultiAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_211b0ae05_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0b0e2_Match>>()) {
			_case_begin_22502720e:;
			{
				_20e85d0dd_optimizeMatch(&(*_self_), _35835_stmt.operator jule::Ptr<_211b0b0e2_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0bb4d_RetSt>>()) {
			_case_begin_225027286:;
			{
				_20e943cb7_optimizeRet(&(*_self_), _35835_stmt.operator jule::Ptr<_211b0bb4d_RetSt>());
			}
		}
		_match_end_225026b37:;
	};
}



inline void _20e949dcd_optimizeChild(_20ea01baa_scopeOptimizer* _self_, jule::Ptr<_211b0940e_Scope> _38536_child) {
	jule::Ptr<_20ea01baa_scopeOptimizer> _38617_so = static__20e813a33_new(_38536_child);;
	_20e9408eb_optimize(_38617_so.ptr());
}



inline void _20e9408eb_optimize(_20ea01baa_scopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_22502d754:;
		if (it != expr.end()) {
			jule::I64 _39214_i = it - expr.begin();
			jule::Any _39221_stmt = *it;
			{
				(*_self_)._field_i=_39214_i;
				_20e9455d2_optimizeStmt(&(*_self_), _39221_stmt);
			}
			_iter_next_22502d754:;
			++it;
			_39214_i++;
			goto _iter_begin_22502d754;
		}
		_iter_end_22502d754:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20ea01baa_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__20e97c1b8_optimize(jule::Any& _5529_model) {
	if (_21246054a_exprEnabled) {
		jule::Ptr<_20eb71225_exprOptimizer> _5821_exop = jule::new_ptr<_20eb71225_exprOptimizer>(_20eb71225_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5529_model))))});;
		_20ec9e3db_do(_5821_exop.ptr());
	};
}



inline jule::Bool _20e980919_strCond(_20eb71225_exprOptimizer* _self_, jule::Ptr<_211017c3b_BinopExprModel> _6526_m) {
	jule::Ptr<_211bbae2c_Prim> _6613_lp = _211bb8567_Prim(_6526_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6613_lp == nullptr) || (!(_211bbe161_IsStr(_6613_lp.ptr()))))) {
		return false;
	};
	if (((_6526_m.get()._field_Op.get()._field_Kind != jule::Str("==", 2)) && (_6526_m.get()._field_Op.get()._field_Kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6526_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_210ea46cd_Const>>()) {
			_case_begin_225037a49:;
			{
				std::tie(_6526_m.get()._field_Left,_6526_m.get()._field_Right) = std::make_tuple(_6526_m.get()._field_Right,_6526_m.get()._field_Left);
				goto _julec_label_opt;
			}
		}
		_match_end_2250379e4:;
	};
	{
		auto &_match_expr{ _6526_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_210ea46cd_Const>>()) {
			_case_begin_225038b16:;
			{
				goto _match_end_225038a4a;
			}
		}
		else {
			_case_begin_225038aa0:;
			{
				return true;
			}
		}
		_match_end_225038a4a:;
	};
	_julec_label_opt:;
	jule::Ptr<_210ea46cd_Const> _8513_c = _6526_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_210ea46cd_Const>();;
	if ((!(_211010dee_ReadStr(_8513_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6526_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_22503a3ba:;
			{
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_21101a403_CommonSubIdentExprModel>(_21101a403_CommonSubIdentExprModel{._field_ExprKind=_6526_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6526_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_22503a442:;
			{
				jule::Ptr<_20e7ddc0b_Token> _9721_op = _6526_m.get()._field_Op;;
				_9721_op.get()._field_Kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_211017e28_UnaryExprModel>(_211017e28_UnaryExprModel{._field_Expr=jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101a403_CommonSubIdentExprModel>(_21101a403_CommonSubIdentExprModel{._field_ExprKind=_6526_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6526_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)})), }), ._field_Op=_9721_op}));
			}
		}
		_match_end_22503a354:;
	};
	return true;
}



inline void _20e9812cc_binary(_20eb71225_exprOptimizer* _self_, jule::Ptr<_211017c3b_BinopExprModel> _11325_m) {
	static__20e97c1b8_optimize(_11325_m.get()._field_Left.get()._field_Model);
	static__20e97c1b8_optimize(_11325_m.get()._field_Right.get()._field_Model);
	{
		auto &_match_expr{ _11325_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_210ea46cd_Const>>()) {
			_case_begin_225036b14:;
			{
				goto _match_end_22503de90;
			}
		}
		else {
			_case_begin_22503e0e4:;
			{
				return;;
			}
		}
		_match_end_22503de90:;
	};
	if ((_20e85998b_Cond && _20e980919_strCond(&(*_self_), _11325_m))) {
		return;;
	};
	if ((!(_20e832689_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _11325_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_22504025a:;
			{
				jule::Bool _13318_ok;;
				jule::U64 _13322_x;;
				std::tie(_13318_ok,_13322_x) = _20ed506bd_checkForBitShiftOpt(_11325_m.get()._field_Left,_11325_m.get()._field_Right);
				if (_13318_ok) {
					_11325_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_210ea46cd_Const> _13625_c = _11325_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_210ea46cd_Const>();;
					_211011d9a_SetU64(_13625_c.ptr(), _13322_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_2250402c1:;
			{
				jule::Bool _14118_ok;;
				jule::U64 _14122_x;;
				std::tie(_14118_ok,_14122_x) = _20ed506bd_checkForBitShiftOpt(_11325_m.get()._field_Left,_11325_m.get()._field_Right);
				if (_14118_ok) {
					_11325_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_210ea46cd_Const> _14425_c = _11325_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_210ea46cd_Const>();;
					_211011d9a_SetU64(_14425_c.ptr(), _14122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_225040337:;
			{
				jule::Ptr<_210ea46cd_Const> _14921_c = _11325_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_210ea46cd_Const>();;
				jule::F64 _15017_d = _2110118a0_AsF64(_14921_c.ptr());;
				if ((_15017_d == 2LL)) {
					_11325_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_211011b25_SetI64(_14921_c.ptr(), 1LL);
				};
			}
		}
		_match_end_225040205:;
	};
	jule::Any _15617_model = jule::Any(jule::new_ptr<_20e81ad04_UnsafeBinopExprModel>(_20e81ad04_UnsafeBinopExprModel{._field_Node=_11325_m}));;
	(*((*_self_)._field_model))=(*(((jule::Any*)((&(_15617_model))))));
}



inline void _20e987e1b_unary(_20eb71225_exprOptimizer* _self_, jule::Ptr<_211017e28_UnaryExprModel> _16024_m) {
	static__20e97c1b8_optimize(_16024_m.get()._field_Expr.get()._field_Model);
	if ((_20e85956d_Ptr && (_16024_m.get()._field_Op.get()._field_Kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16024_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_211017e28_UnaryExprModel>>()) {
				_case_begin_2250477a1:;
				{
					jule::Ptr<_211017e28_UnaryExprModel> _16525_um = _16024_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_211017e28_UnaryExprModel>();;
					if ((_16525_um.get()._field_Op.get()._field_Kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16525_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_22504774b:;
		};
	};
}



inline void _20e9907e7_structureLit(_20eb71225_exprOptimizer* _self_, jule::Ptr<_211018302_StructLitExprModel> _17331_m) {
	{
		auto &expr = _17331_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_2250493a7:;
		if (it != expr.end()) {
			jule::Ptr<_211018115_StructArgExprModel> _17421_arg = *it;
			{
				static__20e97c1b8_optimize(_17421_arg.get()._field_Expr);
			}
			_iter_next_2250493a7:;
			++it;
			goto _iter_begin_2250493a7;
		}
		_iter_end_2250493a7:;
	};
}



inline void _20e991ee1_allocStructure(_20eb71225_exprOptimizer* _self_, jule::Ptr<_2110184de_AllocStructLitExprModel> _17933_m) {
	_20e9907e7_structureLit(&(*_self_), _17933_m.get()._field_Lit);
}



inline void _20e99e98d_casting(_20eb71225_exprOptimizer* _self_, jule::Ptr<_2110186cb_CastingExprModel> _18326_m) {
	static__20e97c1b8_optimize(_18326_m.get()._field_Expr);
}



inline void _20e9b15a4_args(_20eb71225_exprOptimizer* _self_, jule::Slice<jule::Any>& _18724_args) {
	{
		auto &expr = _18724_args;
		auto it = expr.begin();
		_iter_begin_22504ae36:;
		if (it != expr.end()) {
			jule::I64 _18814_i = it - expr.begin();
			jule::Any _18821_arg = *it;
			{
				static__20e97c1b8_optimize(_18821_arg);
				_18724_args[_18814_i]=_18821_arg;
			}
			_iter_next_22504ae36:;
			++it;
			_18814_i++;
			goto _iter_begin_22504ae36;
		}
		_iter_end_22504ae36:;
	};
}



inline void _20e9e5a8e_scope(_20eb71225_exprOptimizer* _self_, jule::Ptr<_211b0940e_Scope>& _19425_s) {
	jule::Ptr<_20ea01baa_scopeOptimizer> _19517_scopt = static__20e813a33_new(_19425_s);;
	_20e9408eb_optimize(_19517_scopt.ptr());
}



inline void _20e9e9576_funcCall(_20eb71225_exprOptimizer* _self_, jule::Ptr<_2110188b8_FnCallExprModel> _19927_m) {
	static__20e97c1b8_optimize(_19927_m.get()._field_Expr);
	_20e9b15a4_args(&(*_self_), _19927_m.get()._field_Args);
	if ((_19927_m.get()._field_Except != nullptr)) {
		_20e9e5a8e_scope(&(*_self_), _19927_m.get()._field_Except);
	};
}



inline void _20ea03409_slice(_20eb71225_exprOptimizer* _self_, jule::Ptr<_211018aa5_SliceExprModel> _20724_m) {
	_20e9b15a4_args(&(*_self_), _20724_m.get()._field_Elems);
}



inline void _20eb48b59_array(_20eb71225_exprOptimizer* _self_, jule::Ptr<_21101a029_ArrayExprModel> _21124_m) {
	if (((_21124_m.get()._field_Elems.len() == 2LL) && (_21124_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _21321_elem = _21124_m.get()._field_Elems[0LL];;
		static__20e97c1b8_optimize(_21321_elem);
		_21124_m.get()._field_Elems[0LL]=_21321_elem;
	};
	_20e9b15a4_args(&(*_self_), _21124_m.get()._field_Elems);
}



inline void _20eb5cb7e_indexing(_20eb71225_exprOptimizer* _self_, jule::Ptr<_211018c92_IndexingExprModel> _22027_m) {
	static__20e97c1b8_optimize(_22027_m.get()._field_Expr.get()._field_Model);
	static__20e97c1b8_optimize(_22027_m.get()._field_Index.get()._field_Model);
	if ((!(_20e84dd9d_Access))) {
		return;;
	};
	jule::Bool _22613_array = (_211bb927c_Arr(_22027_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_22613_array && _211b8abcc_IsConst(_22027_m.get()._field_Index.ptr()))) {
		jule::Any _22921_model = jule::Any(jule::new_ptr<_210340e22_UnsafeIndexingExprModel>(_210340e22_UnsafeIndexingExprModel{._field_Node=_22027_m}));;
		(*((*_self_)._field_model))=(*(((jule::Any*)((&(_22921_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22027_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_211b43228_Var>>()) {
			_case_begin_225054c75:;
			{
				jule::Ptr<_211b43228_Var> _23517_i = _22027_m.get()._field_Index.get()._field_Model.operator jule::Ptr<_211b43228_Var>();;
				if ((_23517_i.get()._field_Mutable || (_23517_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_225054c20;
				};
				{
					auto &_match_expr{ _22027_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_211b43228_Var>>()) {
						_case_begin_2250565a1:;
						{
							jule::Ptr<_211b43228_Var> _24121_r = _22027_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_211b43228_Var>();;
							if ((_23517_i.get()._field_IterRelation.get()._field_Range == _24121_r)) {
								jule::Any _24429_model = jule::Any(jule::new_ptr<_210340e22_UnsafeIndexingExprModel>(_210340e22_UnsafeIndexingExprModel{._field_Node=_22027_m}));;
								(*((*_self_)._field_model))=(*(((jule::Any*)((&(_24429_model))))));
							};
						}
					}
					_match_end_22505654b:;
				};
			}
		}
		_match_end_225054c20:;
	};
}



inline void _20eb66b22_anonFunc(_20eb71225_exprOptimizer* _self_, jule::Ptr<_211018e7e_AnonFnExprModel> _25127_m) {
	_20e9e5a8e_scope(&(*_self_), _25127_m.get()._field_Func.get()._field_Scope);
}



inline void _20eb6caa1_map(_20eb71225_exprOptimizer* _self_, jule::Ptr<_211019358_MapExprModel> _25522_m) {
	{
		auto &expr = _25522_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_225058c8a:;
		if (it != expr.end()) {
			jule::Ptr<_21101916b_KeyValPairExprModel> _25621_pair = *it;
			{
				static__20e97c1b8_optimize(_25621_pair.get()._field_Key);
				static__20e97c1b8_optimize(_25621_pair.get()._field_Val);
			}
			_iter_next_225058c8a:;
			++it;
			goto _iter_begin_225058c8a;
		}
		_iter_end_225058c8a:;
	};
}



inline void _20eb6db29_slicing(_20eb71225_exprOptimizer* _self_, jule::Ptr<_211019545_SlicingExprModel> _26226_m) {
	static__20e97c1b8_optimize(_26226_m.get()._field_Expr);
	static__20e97c1b8_optimize(_26226_m.get()._field_Left);
	if ((_26226_m.get()._field_Right != nullptr)) {
		static__20e97c1b8_optimize(_26226_m.get()._field_Right);
	};
}



inline void _20eb5c5b8_traitSub(_20eb71225_exprOptimizer* _self_, jule::Ptr<_211019732_TraitSubIdentExprModel> _27027_m) {
	static__20e97c1b8_optimize(_27027_m.get()._field_Expr);
}



inline void _20eb729c9_structureSub(_20eb71225_exprOptimizer* _self_, jule::Ptr<_211019b50_StructSubIdentExprModel> _27431_m) {
	static__20e97c1b8_optimize(_27431_m.get()._field_Expr.get()._field_Model);
}



inline void _20eb7ee15_commonSub(_20eb71225_exprOptimizer* _self_, jule::Ptr<_21101a403_CommonSubIdentExprModel> _27828_m) {
	static__20e97c1b8_optimize(_27828_m.get()._field_Expr);
}



inline void _20eb84a1e_tuple(_20eb71225_exprOptimizer* _self_, jule::Ptr<_21101a5e0_TupleExprModel> _28224_m) {
	{
		auto &expr = _28224_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_22505c2dd:;
		if (it != expr.end()) {
			jule::Ptr<_211b8a319_Data> _28321_d = *it;
			{
				static__20e97c1b8_optimize(_28321_d.get()._field_Model);
			}
			_iter_next_22505c2dd:;
			++it;
			goto _iter_begin_22505c2dd;
		}
		_iter_end_22505c2dd:;
	};
}



inline void _20eb8a1ea_newCall(_20eb71225_exprOptimizer* _self_, jule::Ptr<_21101ad93_BuiltinNewCallExprModel> _28826_m) {
	if ((_28826_m.get()._field_Init != nullptr)) {
		static__20e97c1b8_optimize(_28826_m.get()._field_Init);
	};
}



inline void _20eb8b608_outCall(_20eb71225_exprOptimizer* _self_, jule::Ptr<_21101a7cc_BuiltinOutCallExprModel> _29426_m) {
	static__20e97c1b8_optimize(_29426_m.get()._field_Expr);
}



inline void _20eb8c8b2_outlnCall(_20eb71225_exprOptimizer* _self_, jule::Ptr<_21101a9b9_BuiltinOutlnCallExprModel> _29828_m) {
	static__20e97c1b8_optimize(_29828_m.get()._field_Expr);
}



inline void _20eb8e155_panicCall(_20eb71225_exprOptimizer* _self_, jule::Ptr<_21101b080_BuiltinPanicCallExprModel> _30228_m) {
	static__20e97c1b8_optimize(_30228_m.get()._field_Expr);
}



inline void _20eb92b92_assertCall(_20eb71225_exprOptimizer* _self_, jule::Ptr<_21101b26c_BuiltinAssertCallExprModel> _30629_m) {
	static__20e97c1b8_optimize(_30629_m.get()._field_Expr);
}



inline void _20eb9e9e5_errorCall(_20eb71225_exprOptimizer* _self_, jule::Ptr<_21101ba20_BuiltinErrorCallExprModel> _31028_m) {
	static__20e97c1b8_optimize(_31028_m.get()._field_Err);
}



inline void _20ebab0c8_makeCall(_20eb71225_exprOptimizer* _self_, jule::Ptr<_21101b459_BuiltinMakeCallExprModel> _31427_m) {
	if ((_31427_m.get()._field_Len != nullptr)) {
		static__20e97c1b8_optimize(_31427_m.get()._field_Len);
	};
	if ((_31427_m.get()._field_Cap != nullptr)) {
		static__20e97c1b8_optimize(_31427_m.get()._field_Cap);
	};
}



inline void _20ebb5de6_appendCall(_20eb71225_exprOptimizer* _self_, jule::Ptr<_21101b646_BuiltinAppendCallExprModel> _32329_m) {
	static__20e97c1b8_optimize(_32329_m.get()._field_Dest);
	static__20e97c1b8_optimize(_32329_m.get()._field_Elements);
}



inline void _20ebdbbec_cloneCall(_20eb71225_exprOptimizer* _self_, jule::Ptr<_21101aba6_BuiltinCloneCallExprModel> _32828_m) {
	static__20e97c1b8_optimize(_32828_m.get()._field_Expr);
}



inline void _20ebde491_sizeof(_20eb71225_exprOptimizer* _self_, jule::Ptr<_21101991e_SizeofExprModel> _33225_m) {
	static__20e97c1b8_optimize(_33225_m.get()._field_Expr);
}



inline void _20ebe3aa0_alignof(_20eb71225_exprOptimizer* _self_, jule::Ptr<_21101c180_AlignofExprModel> _33626_m) {
	static__20e97c1b8_optimize(_33626_m.get()._field_Expr);
}



inline void _20ec0185a_integratedToStr(_20eb71225_exprOptimizer* _self_, jule::Ptr<_21101c559_IntegratedToStrExprModel> _34034_m) {
	static__20e97c1b8_optimize(_34034_m.get()._field_Expr);
}



inline void _20ec14a27_free(_20eb71225_exprOptimizer* _self_, jule::Ptr<_21101c933_FreeExprModel> _34423_m) {
	static__20e97c1b8_optimize(_34423_m.get()._field_Expr);
}



inline void _20ec5587b_backendEmit(_20eb71225_exprOptimizer* _self_, jule::Ptr<_21101c746_BackendEmitExprModel> _34830_m) {
	_20e9b15a4_args(&(*_self_), _34830_m.get()._field_Exprs);
}



inline void _20ec9e3db_do(_20eb71225_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_211017c3b_BinopExprModel>>()) {
			_case_begin_225064c63:;
			{
				_20e9812cc_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_211017c3b_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211017e28_UnaryExprModel>>()) {
			_case_begin_22506501b:;
			{
				_20e987e1b_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_211017e28_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211018302_StructLitExprModel>>()) {
			_case_begin_225065082:;
			{
				_20e9907e7_structureLit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_211018302_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2110184de_AllocStructLitExprModel>>()) {
			_case_begin_2250650e8:;
			{
				_20e991ee1_allocStructure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_2110184de_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2110186cb_CastingExprModel>>()) {
			_case_begin_225065170:;
			{
				_20e99e98d_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_2110186cb_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2110188b8_FnCallExprModel>>()) {
			_case_begin_2250651e7:;
			{
				_20e9e9576_funcCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_2110188b8_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211018aa5_SliceExprModel>>()) {
			_case_begin_22506526e:;
			{
				_20ea03409_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_211018aa5_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101a029_ArrayExprModel>>()) {
			_case_begin_2250652e6:;
			{
				_20eb48b59_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21101a029_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211018c92_IndexingExprModel>>()) {
			_case_begin_22506536d:;
			{
				_20eb5cb7e_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_211018c92_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211018e7e_AnonFnExprModel>>()) {
			_case_begin_2250653e5:;
			{
				_20eb66b22_anonFunc(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_211018e7e_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019358_MapExprModel>>()) {
			_case_begin_22506546c:;
			{
				_20eb6caa1_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_211019358_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019545_SlicingExprModel>>()) {
			_case_begin_2250654e4:;
			{
				_20eb6db29_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_211019545_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019732_TraitSubIdentExprModel>>()) {
			_case_begin_22506556b:;
			{
				_20eb5c5b8_traitSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_211019732_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019b50_StructSubIdentExprModel>>()) {
			_case_begin_2250655e3:;
			{
				_20eb729c9_structureSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_211019b50_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101a403_CommonSubIdentExprModel>>()) {
			_case_begin_22506566a:;
			{
				_20eb7ee15_commonSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21101a403_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101a5e0_TupleExprModel>>()) {
			_case_begin_2250656e2:;
			{
				_20eb84a1e_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21101a5e0_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101a7cc_BuiltinOutCallExprModel>>()) {
			_case_begin_225065769:;
			{
				_20eb8b608_outCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21101a7cc_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101a9b9_BuiltinOutlnCallExprModel>>()) {
			_case_begin_2250657e1:;
			{
				_20eb8c8b2_outlnCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21101a9b9_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101ad93_BuiltinNewCallExprModel>>()) {
			_case_begin_225065868:;
			{
				_20eb8a1ea_newCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21101ad93_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101b080_BuiltinPanicCallExprModel>>()) {
			_case_begin_2250658e0:;
			{
				_20eb8e155_panicCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21101b080_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101b26c_BuiltinAssertCallExprModel>>()) {
			_case_begin_225065967:;
			{
				_20eb92b92_assertCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21101b26c_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101ba20_BuiltinErrorCallExprModel>>()) {
			_case_begin_2250659de:;
			{
				_20eb9e9e5_errorCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21101ba20_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101b459_BuiltinMakeCallExprModel>>()) {
			_case_begin_225065a66:;
			{
				_20ebab0c8_makeCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21101b459_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101b646_BuiltinAppendCallExprModel>>()) {
			_case_begin_225065add:;
			{
				_20ebb5de6_appendCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21101b646_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101aba6_BuiltinCloneCallExprModel>>()) {
			_case_begin_225065b65:;
			{
				_20ebdbbec_cloneCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21101aba6_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101991e_SizeofExprModel>>()) {
			_case_begin_225065bdc:;
			{
				_20ebde491_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21101991e_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101c180_AlignofExprModel>>()) {
			_case_begin_225065c64:;
			{
				_20ebe3aa0_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21101c180_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101c559_IntegratedToStrExprModel>>()) {
			_case_begin_225065cdb:;
			{
				_20ec0185a_integratedToStr(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21101c559_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101c933_FreeExprModel>>()) {
			_case_begin_225065d63:;
			{
				_20ec14a27_free(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21101c933_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101c746_BackendEmitExprModel>>()) {
			_case_begin_225065dda:;
			{
				_20ec5587b_backendEmit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21101c746_BackendEmitExprModel>());
			}
		}
		_match_end_225064c0d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20eb71225_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_212528712_Optimizer> static__21248c005_New(jule::Ptr<_2120ac0a9_IR>& _2524_ir) {
	return jule::new_ptr<_212528712_Optimizer>(_212528712_Optimizer{._field_ir=_2524_ir});
}



inline void _212460c43_optimizeGlobal(_212528712_Optimizer* _self_, jule::Ptr<_211b43228_Var>& _3138_v) {
	if ((!(_3138_v.get()._field_CppLinked))) {
		static__20e97c1b8_optimize(_3138_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _2124baa8e_optimizeFunction(_212528712_Optimizer* _self_, jule::Ptr<_211020084_Fn>& _3740_func) {
	if (_3740_func.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _3740_func.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_22507c121:;
		if (it != expr.end()) {
			jule::Ptr<_211022c35_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_20ea01baa_scopeOptimizer> _4221_so = static__20e813a33_new(_4121_ins.get()._field_Scope);;
				_20e9408eb_optimize(_4221_so.ptr());
			}
			_iter_next_22507c121:;
			++it;
			goto _iter_begin_22507c121;
		}
		_iter_end_22507c121:;
	};
}



inline void _2124bae46_optimizeStruct(_212528712_Optimizer* _self_, jule::Ptr<_210e427d1_Struct>& _4738_s) {
	if (_4738_s.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _4738_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_22507d51d:;
		if (it != expr.end()) {
			jule::Ptr<_210e6db2b_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_22507dc7c:;
					if (it != expr.end()) {
						jule::Ptr<_210e49e48_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__20e97c1b8_optimize(_5225_f.get()._field_Default.get()._field_Model);
							};
						}
						_iter_next_22507dc7c:;
						++it;
						goto _iter_begin_22507dc7c;
					}
					_iter_end_22507dc7c:;
				};
				{
					auto &expr = _5121_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_22507e84e:;
					if (it != expr.end()) {
						jule::Ptr<_211020084_Fn> _5725_m = *it;
						{
							_2124baa8e_optimizeFunction(&(*_self_), _5725_m);
						}
						_iter_next_22507e84e:;
						++it;
						goto _iter_begin_22507e84e;
					}
					_iter_end_22507e84e:;
				};
			}
			_iter_next_22507d51d:;
			++it;
			goto _iter_begin_22507d51d;
		}
		_iter_end_22507d51d:;
	};
}



inline void _2124bc8c6_optimizeGlobals(_212528712_Optimizer* _self_, jule::Ptr<_211b202d2_Package>& _6339_p) {
	{
		auto &expr = _6339_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_225080245:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_225081037:;
					if (it != expr.end()) {
						jule::Ptr<_211b43228_Var> _6525_v = *it;
						{
							_212460c43_optimizeGlobal(&(*_self_), _6525_v);
						}
						_iter_next_225081037:;
						++it;
						goto _iter_begin_225081037;
					}
					_iter_end_225081037:;
				};
			}
			_iter_next_225080245:;
			++it;
			goto _iter_begin_225080245;
		}
		_iter_end_225080245:;
	};
}



inline void _2124c3a31_optimizeFunctions(_212528712_Optimizer* _self_, jule::Ptr<_211b202d2_Package>& _7141_p) {
	{
		auto &expr = _7141_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_22508160e:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_225082401:;
					if (it != expr.end()) {
						jule::Ptr<_211020084_Fn> _7325_func = *it;
						{
							_2124baa8e_optimizeFunction(&(*_self_), _7325_func);
						}
						_iter_next_225082401:;
						++it;
						goto _iter_begin_225082401;
					}
					_iter_end_225082401:;
				};
			}
			_iter_next_22508160e:;
			++it;
			goto _iter_begin_22508160e;
		}
		_iter_end_22508160e:;
	};
}



inline void _2124c9d89_optimizeStructs(_212528712_Optimizer* _self_, jule::Ptr<_211b202d2_Package>& _7939_p) {
	{
		auto &expr = _7939_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_2250829c8:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_2250837ba:;
					if (it != expr.end()) {
						jule::Ptr<_210e427d1_Struct> _8125_s = *it;
						{
							_2124bae46_optimizeStruct(&(*_self_), _8125_s);
						}
						_iter_next_2250837ba:;
						++it;
						goto _iter_begin_2250837ba;
					}
					_iter_end_2250837ba:;
				};
			}
			_iter_next_2250829c8:;
			++it;
			goto _iter_begin_2250829c8;
		}
		_iter_end_2250829c8:;
	};
}



inline void _2124d2ee6_optimizePackage(_212528712_Optimizer* _self_, jule::Ptr<_211b202d2_Package>& _8739_p) {
	_2124bc8c6_optimizeGlobals(&(*_self_), _8739_p);
	_2124c3a31_optimizeFunctions(&(*_self_), _8739_p);
	_2124c9d89_optimizeStructs(&(*_self_), _8739_p);
}



inline void _2124dd5ea_Optimize(_212528712_Optimizer* _self_) {
	_2124e3886_detectEnabled();
	if (_20e82aa8e_Deadcode) {
		_21254da34_EliminateDefines((*_self_)._field_ir);
	};
	if ((_2124616a0_scopeEnabled || _21246054a_exprEnabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_Used;
			auto it = expr.begin();
			_iter_begin_225085c51:;
			if (it != expr.end()) {
				jule::Ptr<_211b1c378_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_2124d2ee6_optimizePackage(&(*_self_), _10325_u.get()._field_Package);
					};
				}
				_iter_next_225085c51:;
				++it;
				goto _iter_begin_225085c51;
			}
			_iter_end_225085c51:;
		};
		_2124d2ee6_optimizePackage(&(*_self_), (*_self_)._field_ir.get()._field_Main);
	};
	if (_20e82aa8e_Deadcode) {
		_2125537d6_EliminateScopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _212528712_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__21255bc84_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__21255d04e_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__21255bc84_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _21255cd62_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__21255e704_LogFlat(_20e4ba377_Log& _1424_l) {
	jule::outln(_1424_l._field_Text);
}



inline void static__21255e913_LogError(_20e4ba377_Log& _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1925_l._field_Text);
	static__21255bc84_Reset();
	if ((_1925_l._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1925_l._field_Path);
	};
	if (((_1925_l._field_Row != 0LL) && (_1925_l._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_211b07275_Itoa(_1925_l._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_211b07275_Itoa(_1925_l._field_Column));
	};
	if ((_1925_l._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _20e44b4c3_TrimLeft(_1925_l._field_Line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1925_l._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_20e44b4c3_TrimLeft(_3621_line,jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _211b07275_Itoa(_1925_l._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_20e437ed7_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_20e437ed7_Repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1925_l._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1925_l._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_20e437ed7_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__21255d04e_Print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1925_l._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__21255eb22_Log(_20e4ba377_Log& _6520_l) {
	{
		auto &_match_expr{ _6520_l._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_2250961e5:;
			{
				static__21255e704_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_22509625b:;
			{
				static__21255e913_LogError(_6520_l);
			}
		}
		_match_end_2250960e6:;
	};
}



inline void static__21255ed31_PrintLogs(jule::Slice<_20e4ba377_Log>& _7526_logs) {
	{
		auto &expr = _7526_logs;
		auto it = expr.begin();
		_iter_begin_22508ae21:;
		if (it != expr.end()) {
			_20e4ba377_Log &_7616_l = *it;
			{
				static__21255eb22_Log(_7616_l);
			}
			_iter_next_22508ae21:;
			++it;
			goto _iter_begin_22508ae21;
		}
		_iter_end_22508ae21:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_211b07275_Itoa(static_cast<jule::I64>(_7526_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _21255e44b_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _212b39c13_Unix(_212b3985b_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _212b3ed28_unixYearToSeconds(_5717_y,_5617_leap);;
	_6817_t+=_212b401ad_unixMonthToSeconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_Hour);
	_6817_t+=(60LLU * (*_self_)._field_Minute);
	_6817_t+=(*_self_)._field_Second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _212b3985b_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _212b39eee_Time static__212b3a395_Unix(jule::U64 _9120_sec) {
	return _212b39eee_Time{._field_sec=_9120_sec};
}



inline _212b39eee_Time static__212b3a593_Now(void) {
	return static__212b3a395_Unix(static_cast<jule::U64>(_212b3e9d7_unix()));
}



inline jule::U64 _212b3a9e4_Unix(_212b39eee_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _212b3ac58_Day(_212b39eee_Time* _self_) {
	return _212b3bbd2_Abs(&(*_self_))._field_Day;
}



inline jule::U64 _212b3aebc_Month(_212b39eee_Time* _self_) {
	return _212b3bbd2_Abs(&(*_self_))._field_Month;
}



inline jule::U64 _212b3b231_Year(_212b39eee_Time* _self_) {
	return _212b3bbd2_Abs(&(*_self_))._field_Year;
}



inline jule::U64 _212b3b495_Second(_212b39eee_Time* _self_) {
	return _212b3bbd2_Abs(&(*_self_))._field_Second;
}



inline jule::U64 _212b3b709_Minute(_212b39eee_Time* _self_) {
	return _212b3bbd2_Abs(&(*_self_))._field_Minute;
}



inline jule::U64 _212b3b96d_Hour(_212b39eee_Time* _self_) {
	return _212b3bbd2_Abs(&(*_self_))._field_Hour;
}



inline _212b3985b_AbsTime _212b3bbd2_Abs(_212b39eee_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_212b38dee_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_212b38dee_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_2250c8942:;
	}
	_iter_end_2250c8942:;;
	_212b3985b_AbsTime _17417_t = _212b3985b_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _212b39eee_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_212aae7e2_scopeCoder> static__212aaee0d_new(jule::Ptr<_212b406ec_ObjectCoder>& _5524_oc) {
	return jule::new_ptr<_212aae7e2_scopeCoder>(_212aae7e2_scopeCoder{._field_oc=_5524_oc});
}



inline void _212ab0183_rangeIndexIter(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0a08b_RangeIter>& _6139_it) {
	jule::Str _6213_begin = static__212acb303_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	jule::Str _6313_next = static__212acb842_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	_212b23a54_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_212b242e6_addIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_20e82655c_Copy && _212ab4d47_isCopyOptimizable(_6139_it.get()._field_Expr))) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_212ac2706_model(_self_.get()._field_oc.get()._field_ec, _6139_it.get()._field_Expr.get()._field_Model);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, _6213_begin);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_212b242e6_addIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_212b42358_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_212b23a54_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_212b23a54_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_212b25a34_indent(_self_.get()._field_oc);
	};
	if ((_6139_it.get()._field_KeyB != nullptr)) {
		if (_20e82655c_Copy) {
			_6139_it.get()._field_KeyB.get()._field_Reference=_212ab51cc_isIterCopyOptimizable(_6139_it.get()._field_Expr,_6139_it.get()._field_KeyB);
		};
		_212b42358_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_212b23a54_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_212b23a54_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_212b25a34_indent(_self_.get()._field_oc);
	};
	_212ab4770_scope(_self_, _6139_it.get()._field_Scope);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, _6313_next);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_212b25a34_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_212b23a54_write(_self_.get()._field_oc, static__212acb05b_var(_6139_it.get()._field_KeyA));
		_212b23a54_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_212b25a34_indent(_self_.get()._field_oc);
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_212b23a54_write(_self_.get()._field_oc, _6213_begin);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_212b252d6_doneIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, static__212acb59a_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it))));
	_212b23a54_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_212b252d6_doneIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _212ab0408_rangeHashmapIter(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0a08b_RangeIter>& _12941_it) {
	jule::Str _13013_begin = static__212acb303_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	jule::Str _13113_next = static__212acb842_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	_212b23a54_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_212b242e6_addIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_20e82655c_Copy && _212ab4d47_isCopyOptimizable(_12941_it.get()._field_Expr))) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_212ac2706_model(_self_.get()._field_oc.get()._field_ec, _12941_it.get()._field_Expr.get()._field_Model);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, _13013_begin);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_212b242e6_addIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	if ((_12941_it.get()._field_KeyA != nullptr)) {
		if (_20e82655c_Copy) {
			_12941_it.get()._field_KeyA.get()._field_Reference=_212ab51cc_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyA);
		};
		_212b42358_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_212b23a54_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_212b23a54_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_212b25a34_indent(_self_.get()._field_oc);
	};
	if ((_12941_it.get()._field_KeyB != nullptr)) {
		if (_20e82655c_Copy) {
			_12941_it.get()._field_KeyB.get()._field_Reference=_212ab51cc_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyB);
		};
		_212b42358_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_212b23a54_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_212b23a54_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_212b25a34_indent(_self_.get()._field_oc);
	};
	_212ab4770_scope(_self_, _12941_it.get()._field_Scope);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, _13113_next);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_212b23a54_write(_self_.get()._field_oc, _13013_begin);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_212b252d6_doneIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, static__212acb59a_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it))));
	_212b23a54_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_212b252d6_doneIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _212ab067d_ifCase(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b095eb_If> _19530_i) {
	if ((_19530_i.get()._field_Expr != nullptr)) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_212ac297b_expr(_self_.get()._field_oc.get()._field_ec, _19530_i.get()._field_Expr);
		_212b23a54_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_212ab4770_scope(_self_, _19530_i.get()._field_Scope);
}



inline void _212ab0903_conditional(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b099c5_Conditional> _20435_c) {
	jule::Bool _20517_writed = false;;
	{
		auto &expr = _20435_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_225170423:;
		if (it != expr.end()) {
			jule::Ptr<_211b095eb_If> _20621_elif = *it;
			{
				if ((_20621_elif == nullptr)) {
					goto _iter_next_225170423;
				};
				if (_20517_writed) {
					_212b23a54_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_20517_writed=true;
				_212ab067d_ifCase(_self_, _20621_elif);
			}
			_iter_next_225170423:;
			++it;
			goto _iter_begin_225170423;
		}
		_iter_end_225170423:;
	};
	if ((_20435_c.get()._field_Default != nullptr)) {
		if (_20517_writed) {
			_212b23a54_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_212ab4770_scope(_self_, _20435_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _212ab0b78_infIter(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b09bb2_InfIter> _22431_it) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_212b242e6_addIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	_212ab4770_scope(_self_, _22431_it.get()._field_Scope);
	_212b252d6_doneIndent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, static__212acb842_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_212b23a54_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, static__212acb59a_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_212b23a54_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _212ab0ded_whileIter(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b09d9e_WhileIter> _24133_it) {
	if (((_24133_it.get()._field_Expr != nullptr) && (_24133_it.get()._field_Next == nullptr))) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_212ac297b_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		_212b23a54_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_24133_it.get()._field_Expr != nullptr)) {
			_212ac297b_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		};
		_212b23a54_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_24133_it.get()._field_Next != nullptr)) {
			_212ab4275_st(_self_, _24133_it.get()._field_Next);
		};
		_212b23a54_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_212b242e6_addIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	_212ab4770_scope(_self_, _24133_it.get()._field_Scope);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_212b252d6_doneIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, static__212acb842_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_212b23a54_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, static__212acb59a_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_212b23a54_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _212ab1173_rangeIter(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0a08b_RangeIter> _27433_it) {
	{
		
		if ((_211bb94e1_Slc(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_225181027:;
			{
				_212ab0183_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_211bb927c_Arr(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_225180be7:;
			{
				_212ab0183_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_211bb9e92_Map(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_225180c5d:;
			{
				_212ab0408_rangeHashmapIter(_self_, _27433_it);
			}
		}
		else {
			_case_begin_225180b81:;
			{
				_212ab0183_rangeIndexIter(_self_, _27433_it);
			}
		}
		_match_end_225180aa4:;
	};
}



inline void _212ab13e8_cont(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0a278_ContSt> _28724_c) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_212b23a54_write(_self_.get()._field_oc, static__212acb842_iterNext(_28724_c.get()._field_It));
}



inline void _212ab166d_label(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0a652_Label> _29225_l) {
	_212b23a54_write(_self_.get()._field_oc, static__212acbad9_label(_29225_l.get()._field_Ident));
	_212b23a54_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _212ab18e3_gotoSt(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0a83e_GotoSt> _29726_gt) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_212b23a54_write(_self_.get()._field_oc, static__212acbad9_label(_29726_gt.get()._field_Ident));
}



inline void _212ab1b68_postfix(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0aa2b_Postfix> _30231_p) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("(", 1));
	_212ac297b_expr(_self_.get()._field_oc.get()._field_ec, _30231_p.get()._field_Expr);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
	_212b23a54_write(_self_.get()._field_oc, _30231_p.get()._field_Op);
}



inline void _212ab1ddd_assign(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0ac18_Assign> _30930_a) {
	_212ac297b_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_L.get()._field_Model);
	_212b23a54_write(_self_.get()._field_oc, _30930_a.get()._field_Op.get()._field_Kind);
	_212ac297b_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_R.get()._field_Model);
}



inline void _212ab2163_multiAssign(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0ae05_MultiAssign> _31535_a) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _31535_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_22518a619:;
		if (it != expr.end()) {
			jule::I64 _31714_i = it - expr.begin();
			jule::Any _31721_l = *it;
			{
				if ((_31721_l == nullptr)) {
					_212b23a54_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_212ac297b_expr(_self_.get()._field_oc.get()._field_ec, _31721_l);
				};
				if (((_31535_a.get()._field_L.len() - _31714_i) > 1LL)) {
					_212b23a54_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_22518a619:;
			++it;
			_31714_i++;
			goto _iter_begin_22518a619;
		}
		_iter_end_22518a619:;
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_212ac297b_expr(_self_.get()._field_oc.get()._field_ec, _31535_a.get()._field_R);
}



inline jule::Fn<void(void)> _212ab2471_matchExpr(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0b0e2_Match> _33133_m) {
	if ((!(_211b8abcc_IsConst(_33133_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_212b23a54_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_211013033_IsBool(_33133_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_211010b8a_ReadBool(_33133_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_212ac2706_model(_self_.get()._field_oc.get()._field_ec, _33133_m.get()._field_Expr.get()._field_Model);
		});
	};
	return nullptr;
}



inline void _212ab2790_case(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0b0e2_Match> _34128_m, jule::Ptr<_211b0b642_Case> _34143_c) {
	if (((_34143_c.get()._field_Exprs.len() != 0LL) && (!(_211b0b510_IsGenericTypeMatch(_34128_m.ptr()))))) {
		if (((_34128_m.get()._field_Cases.len() > 0LL) && (_34128_m.get()._field_Cases[0LL] == _34143_c))) {
			_212b23a54_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_212b23a54_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _34143_c.get()._field_Exprs;
			auto it = expr.begin();
			_iter_begin_225193941:;
			if (it != expr.end()) {
				jule::I64 _34818_i = it - expr.begin();
				jule::Ptr<_211b8a319_Data> _34825_expr = *it;
				{
					{
						
						if ((!(_34128_m.get()._field_TypeMatch))) {
							_case_begin_225194b0c:;
							{
								jule::Fn<void(void)> _35125_caseExpr = _212ab2471_matchExpr(_self_, _34128_m);;
								if (_211b8aeda_GoodOperand(_34128_m.get()._field_Expr.ptr(), _34825_expr)) {
									if ((_35125_caseExpr != nullptr)) {
										_35125_caseExpr();
										_212b23a54_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_212ac297b_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_Model);
								} else {
									_212ac297b_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_Model);
									if ((_35125_caseExpr != nullptr)) {
										_212b23a54_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_35125_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_225194766:;
							{
								_212b23a54_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_212b23a54_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_212ac297b_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_Model);
								_212b23a54_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_225194689:;
					};
					if (((_34143_c.get()._field_Exprs.len() - _34818_i) > 1LL)) {
						_212b23a54_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_225193941:;
				++it;
				_34818_i++;
				goto _iter_begin_225193941;
			}
			_iter_end_225193941:;
		};
		_212b23a54_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_34128_m.get()._field_Default == _34143_c) && (_34128_m.get()._field_Cases.len() != 0LL))) {
		_212b25a34_indent(_self_.get()._field_oc);
		_212b23a54_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_212b242e6_addIndent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, static__212acc128_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_34143_c))));
	_212b23a54_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_34143_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_212b25a34_indent(_self_.get()._field_oc);
		_212ab4770_scope(_self_, _34143_c.get()._field_Scope);
		_212b23a54_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_212b252d6_doneIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _212ab2a15_matchSt(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0b0e2_Match> _40031_m) {
	if (((_40031_m.get()._field_Cases.len() == 0LL) && (_40031_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _40513_genericTypeMatch = _211b0b510_IsGenericTypeMatch(_40031_m.ptr());;
	if ((_40513_genericTypeMatch && ((_40031_m.get()._field_Default == nullptr) || (_40031_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_212b242e6_addIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	if (((!(_40513_genericTypeMatch)) && (!(_211b8abcc_IsConst(_40031_m.get()._field_Expr.ptr()))))) {
		if ((_20e82655c_Copy && _212ab4d47_isCopyOptimizable(_40031_m.get()._field_Expr))) {
			_212b23a54_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_212b23a54_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_212ac297b_expr(_self_.get()._field_oc.get()._field_ec, _40031_m.get()._field_Expr.get()._field_Model);
		_212b23a54_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_212b25a34_indent(_self_.get()._field_oc);
	};
	if ((_40031_m.get()._field_Cases.len() > 0LL)) {
		{
			auto &expr = _40031_m.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_2251a5dc6:;
			if (it != expr.end()) {
				jule::Ptr<_211b0b642_Case> _42925_c = *it;
				{
					if ((_42925_c == nullptr)) {
						goto _iter_next_2251a5dc6;
					};
					_212b23a54_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_212b25a34_indent(_self_.get()._field_oc);
					_212ab2790_case(_self_, _40031_m,_42925_c);
				}
				_iter_next_2251a5dc6:;
				++it;
				goto _iter_begin_2251a5dc6;
			}
			_iter_end_2251a5dc6:;
		};
	};
	if ((_40031_m.get()._field_Default != nullptr)) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_212ab2790_case(_self_, _40031_m,_40031_m.get()._field_Default);
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, static__212acbd81_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40031_m))));
	_212b23a54_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_212b23a54_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_212b252d6_doneIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _212ab2c8a_fallSt(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0b961_FallSt> _45626_f) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_212b23a54_write(_self_.get()._field_oc, static__212acc128_caseBegin(_45626_f.get()._field_DestCase));
}



inline void _212ab3010_breakSt(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0a465_BreakSt> _46127_b) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_46127_b.get()._field_It != 0LLU)) {
		_212b23a54_write(_self_.get()._field_oc, static__212acb59a_iterEnd(_46127_b.get()._field_It));
	} else {
		_212b23a54_write(_self_.get()._field_oc, static__212acbd81_matchEnd(_46127_b.get()._field_Mtch));
	};
}



inline void _212ab3285_retWithVars(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0bb4d_RetSt> _47035_r) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_47035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_47035_r.get()._field_Func.get()._field_Result));
		_212b23a54_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_47035_r.get()._field_Vars.len() > 1LL)) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _47035_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_2251b1156:;
		if (it != expr.end()) {
			jule::I64 _48014_i = it - expr.begin();
			jule::Ptr<_211b43228_Var> _48021_v = *it;
			{
				if (_20e7e14a0_IsIgnoreIdent(_48021_v.get()._field_Ident)) {
					_212ac2e76_initExpr(_self_.get()._field_oc.get()._field_ec, _48021_v.get()._field_Kind.get()._field_Kind);
				} else {
					_212b23a54_write(_self_.get()._field_oc, static__212acb05b_var(_48021_v));
				};
				if (((_47035_r.get()._field_Vars.len() - _48014_i) > 1LL)) {
					_212b23a54_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_2251b1156:;
			++it;
			_48014_i++;
			goto _iter_begin_2251b1156;
		}
		_iter_end_2251b1156:;
	};
	if ((_47035_r.get()._field_Vars.len() > 1LL)) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_47035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _212ab350a_retTuple(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0bb4d_RetSt> _50032_r) {
	jule::Slice<jule::Ptr<_211b8a319_Data>> _50117_datas = _50032_r.get()._field_Expr.operator jule::Ptr<_21101a5e0_TupleExprModel>().get()._field_Datas;;
	{
		auto &expr = _50032_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_2251b60a1:;
		if (it != expr.end()) {
			jule::I64 _50214_i = it - expr.begin();
			jule::Ptr<_211b43228_Var> _50221_v = *it;
			{
				if (_20e7e14a0_IsIgnoreIdent(_50221_v.get()._field_Ident)) {
					goto _iter_next_2251b60a1;
				};
				jule::Any _50621_model = _50117_datas[_50214_i].get()._field_Model;;
				if ((_50621_model == _50221_v)) {
					goto _iter_next_2251b60a1;
				};
				_212b23a54_write(_self_.get()._field_oc, static__212acb05b_var(_50221_v));
				_212b23a54_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_212ac297b_expr(_self_.get()._field_oc.get()._field_ec, _50621_model);
				_212b23a54_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_212b25a34_indent(_self_.get()._field_oc);
			}
			_iter_next_2251b60a1:;
			++it;
			_50214_i++;
			goto _iter_begin_2251b60a1;
		}
		_iter_end_2251b60a1:;
	};
	if (_50032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_50032_r.get()._field_Func.get()._field_Result));
		_212b23a54_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _50117_datas;
		auto it = expr.begin();
		_iter_begin_2251bb32b:;
		if (it != expr.end()) {
			jule::I64 _52714_i = it - expr.begin();
			jule::Ptr<_211b8a319_Data> _52721_d = *it;
			{
				jule::Ptr<_211b43228_Var> _52821_v = _50032_r.get()._field_Vars[_52714_i];;
				if (_20e7e14a0_IsIgnoreIdent(_52821_v.get()._field_Ident)) {
					_212ac297b_expr(_self_.get()._field_oc.get()._field_ec, _52721_d.get()._field_Model);
				} else {
					_212b23a54_write(_self_.get()._field_oc, static__212acb05b_var(_52821_v));
				};
				if (((_50117_datas.len() - _52714_i) > 1LL)) {
					_212b23a54_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_2251bb32b:;
			++it;
			_52714_i++;
			goto _iter_begin_2251bb32b;
		}
		_iter_end_2251bb32b:;
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_50032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _212ab3780_retWithExprs(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0bb4d_RetSt> _54536_r) {
	if ((_54536_r.get()._field_Vars.len() > 1LL)) {
		_212ab350a_retTuple(_self_, _54536_r);
		return;;
	};
	if ((_54536_r.get()._field_Vars.len() > 0LL)) {
		jule::Ptr<_211b43228_Var> _55321_v = _54536_r.get()._field_Vars[0LL];;
		if (((!(_20e7e14a0_IsIgnoreIdent(_55321_v.get()._field_Ident))) && (_54536_r.get()._field_Expr != _55321_v))) {
			jule::Str _55521_ident = static__212acb05b_var(_55321_v);;
			_212b23a54_write(_self_.get()._field_oc, _55521_ident);
			_212b23a54_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_212ac297b_expr(_self_.get()._field_oc.get()._field_ec, _54536_r.get()._field_Expr);
			_212b23a54_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_212b25a34_indent(_self_.get()._field_oc);
			if (_54536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
				_212b23a54_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_54536_r.get()._field_Func.get()._field_Result));
				_212b23a54_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_212b23a54_write(_self_.get()._field_oc, _55521_ident);
				_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_212b23a54_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_212b23a54_write(_self_.get()._field_oc, _55521_ident);
			};
			return;;
		};
	};
	if (_54536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_54536_r.get()._field_Func.get()._field_Result));
		_212b23a54_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_212ac297b_expr(_self_.get()._field_oc.get()._field_ec, _54536_r.get()._field_Expr);
		_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_212ac297b_expr(_self_.get()._field_oc.get()._field_ec, _54536_r.get()._field_Expr);
	return;;
}



inline void _212ab3a05_retSt(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0bb4d_RetSt> _58929_r) {
	if (((_58929_r.get()._field_Expr == nullptr) && (_58929_r.get()._field_Vars.len() == 0LL))) {
		if (_58929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_212b23a54_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_212b23a54_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_58929_r.get()._field_Expr == nullptr)) {
		_212ab3285_retWithVars(_self_, _58929_r);
		return;;
	};
	_212ab3780_retWithExprs(_self_, _58929_r);
}



inline void _212ab4000_var(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b43228_Var> _62427_v) {
	if ((!(_62427_v.get()._field_Constant))) {
		_212b425cd_var(_self_.get()._field_oc, _62427_v);
	};
}



inline void _212ab4275_st(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Any _63126_st) {
	if ((_63126_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _63126_st };
		
		if (_match_expr.type_is<jule::Ptr<_211b0940e_Scope>>()) {
			_case_begin_2251d2e9c:;
			{
				_212ab4770_scope(_self_, _63126_st.operator jule::Ptr<_211b0940e_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b43228_Var>>()) {
			_case_begin_2251d2b5b:;
			{
				_212ab4000_var(_self_, _63126_st.operator jule::Ptr<_211b43228_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b8a319_Data>>()) {
			_case_begin_2251d360c:;
			{
				_212ac297b_expr(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_211b8a319_Data>().get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b099c5_Conditional>>()) {
			_case_begin_2251d3673:;
			{
				_212ab0903_conditional(_self_, _63126_st.operator jule::Ptr<_211b099c5_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b09bb2_InfIter>>()) {
			_case_begin_2251d36d9:;
			{
				_212ab0b78_infIter(_self_, _63126_st.operator jule::Ptr<_211b09bb2_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b09d9e_WhileIter>>()) {
			_case_begin_2251d3750:;
			{
				_212ab0ded_whileIter(_self_, _63126_st.operator jule::Ptr<_211b09d9e_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0a08b_RangeIter>>()) {
			_case_begin_2251d37b6:;
			{
				_212ab1173_rangeIter(_self_, _63126_st.operator jule::Ptr<_211b0a08b_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0a278_ContSt>>()) {
			_case_begin_2251d382c:;
			{
				_212ab13e8_cont(_self_, _63126_st.operator jule::Ptr<_211b0a278_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0a652_Label>>()) {
			_case_begin_2251d3893:;
			{
				_212ab166d_label(_self_, _63126_st.operator jule::Ptr<_211b0a652_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0a83e_GotoSt>>()) {
			_case_begin_2251d3909:;
			{
				_212ab18e3_gotoSt(_self_, _63126_st.operator jule::Ptr<_211b0a83e_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0aa2b_Postfix>>()) {
			_case_begin_2251d3970:;
			{
				_212ab1b68_postfix(_self_, _63126_st.operator jule::Ptr<_211b0aa2b_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0ac18_Assign>>()) {
			_case_begin_2251d39d6:;
			{
				_212ab1ddd_assign(_self_, _63126_st.operator jule::Ptr<_211b0ac18_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0ae05_MultiAssign>>()) {
			_case_begin_2251d3a4c:;
			{
				_212ab2163_multiAssign(_self_, _63126_st.operator jule::Ptr<_211b0ae05_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0b0e2_Match>>()) {
			_case_begin_2251d3ab3:;
			{
				_212ab2a15_matchSt(_self_, _63126_st.operator jule::Ptr<_211b0b0e2_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0b961_FallSt>>()) {
			_case_begin_2251d3b3a:;
			{
				_212ab2c8a_fallSt(_self_, _63126_st.operator jule::Ptr<_211b0b961_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0a465_BreakSt>>()) {
			_case_begin_2251d3bb2:;
			{
				_212ab3010_breakSt(_self_, _63126_st.operator jule::Ptr<_211b0a465_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0bb4d_RetSt>>()) {
			_case_begin_2251d3c39:;
			{
				_212ab3a05_retSt(_self_, _63126_st.operator jule::Ptr<_211b0bb4d_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21073810a_PushToSliceExprModel>>()) {
			_case_begin_2251d3cb1:;
			{
				_212ac068d_pushToSlice(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_21073810a_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210bd39e5_MutSlicingExprModel>>()) {
			_case_begin_2251d3d38:;
			{
				_212ac220b_mutSlicing(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_210bd39e5_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20e858e96_StrInsertBeginExprModel>>()) {
			_case_begin_2251d3db0:;
			{
				_212ac2481_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_20e858e96_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_2251d28a3:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_2251d284d:;
	};
}



inline void _212ab44ea_scopeStmts(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0940e_Scope>& _68135_s) {
	{
		auto &expr = _68135_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_2251de030:;
		if (it != expr.end()) {
			jule::Any _68221_st = *it;
			{
				_212b25a34_indent(_self_.get()._field_oc);
				_212ab4275_st(_self_, _68221_st);
				_212b23a54_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_2251de030:;
			++it;
			goto _iter_begin_2251de030;
		}
		_iter_end_2251de030:;
	};
}



inline void _212ab4770_scope(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211b0940e_Scope> _69029_s) {
	_212b242e6_addIndent(_self_.get()._field_oc);
	if (_69029_s.get()._field_Deferred) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_212ab44ea_scopeStmts(_self_, _69029_s);
	_212b252d6_doneIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_69029_s.get()._field_Deferred) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _212ab49e5_funcScope(jule::Ptr<_212aae7e2_scopeCoder> _self_, jule::Ptr<_211022c35_FnIns> _70633_f) {
	if ((_70633_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_212b242e6_addIndent(_self_.get()._field_oc);
	if ((!(_2110204e6_IsVoid(_70633_f.get()._field_Decl.ptr())))) {
		jule::Slice<jule::Ptr<_211bb6455_TypeKind>> _71321_types = _211023d57_Types(_70633_f.ptr());;
		{
			auto &expr = _70633_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
			auto it = expr.begin();
			_iter_begin_2251e5025:;
			if (it != expr.end()) {
				jule::I64 _71417_i = it - expr.begin();
				jule::Ptr<_20e7ddc0b_Token> _71420_ident = *it;
				{
					if ((_20e7e14a0_IsIgnoreIdent(_71420_ident.get()._field_Kind) || _20e7e1747_IsAnonIdent(_71420_ident.get()._field_Kind))) {
						goto _iter_next_2251e5025;
					};
					_212b25a34_indent(_self_.get()._field_oc);
					_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_71321_types[_71417_i]));
					_212b23a54_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_212b23a54_write(_self_.get()._field_oc, static__212ac9950_toLocal(_71420_ident.get()._field_Row,_71420_ident.get()._field_Column,_71420_ident.get()._field_Kind));
					_212b23a54_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_212ac2e76_initExpr(_self_.get()._field_oc.get()._field_ec, _71321_types[_71417_i]);
					_212b23a54_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_2251e5025:;
				++it;
				_71417_i++;
				goto _iter_begin_2251e5025;
			}
			_iter_end_2251e5025:;
		};
	};
	_212ab44ea_scopeStmts(_self_, _70633_f.get()._field_Scope);
	if ((_70633_f.get()._field_Decl.get()._field_Exceptional && _2110204e6_IsVoid(_70633_f.get()._field_Decl.ptr()))) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_212b252d6_doneIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _212aae7e2_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_212ab7333_exprCoder> static__212ab772e_new(jule::Ptr<_212b406ec_ObjectCoder>& _9724_oc) {
	return jule::new_ptr<_212ab7333_exprCoder>(_212ab7333_exprCoder{._field_oc=_9724_oc});
}



inline void _212ab79a4_string(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_210ea46cd_Const>& _10327_c) {
	jule::Str _10413_content = _211010dee_ReadStr(_10327_c.ptr());;
	if ((_10413_content.len() == 0LL)) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _10913_bytes = static_cast<jule::Slice<jule::U8>>(_10413_content);;
	jule::Str _11013_len = _211b07143_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_10913_bytes.len())),10LL);;
	jule::Str _11113_lit = _212ac3b7a_cstrLit(_10913_bytes);;
	_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_212b23a54_write(_self_.get()._field_oc, jule::Str("(", 1));
	_212b23a54_write(_self_.get()._field_oc, _11113_lit);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_212b23a54_write(_self_.get()._field_oc, _11013_len);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _212ab7c29_boolean(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_210ea46cd_Const>& _12028_c) {
	if (_211010b8a_ReadBool(_12028_c.ptr())) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _212ab7e05_nilLit(jule::Ptr<_212ab7333_exprCoder> _self_) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _212ab8213_ftoaSpecialCases(jule::Ptr<_212ab7333_exprCoder> _self_, jule::F64& _13237_x) {
	{
		
		if (_211a4c4c8_IsNaN(_13237_x)) {
			_case_begin_22521b436:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_211a547cc_IsInf(_13237_x,1LL)) {
			_case_begin_22521abe9:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_211a547cc_IsInf(_13237_x,-1LL)) {
			_case_begin_22521ac60:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_22521ab83:;
			{
				return false;
			}
		}
		_match_end_22521aaa6:;
	};
	return true;
}



inline void _212ab8488_float32(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_210ea46cd_Const>& _14628_c) {
	jule::F64 _14713_x = _2110118a0_AsF64(_14628_c.ptr());;
	if (_212ab8213_ftoaSpecialCases(_self_, _14713_x)) {
		return;;
	};
	{
		
		if ((_14713_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_22521de83:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_14713_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_22521db86:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_22521d537:;
			{
				_212b23a54_write(_self_.get()._field_oc, _212ac3e88_ftoa(_14713_x,32LL));
				_212b23a54_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_22521d8cd:;
	};
}



inline void _212ab870d_float64(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_210ea46cd_Const>& _16528_c) {
	jule::F64 _16613_x = _2110118a0_AsF64(_16528_c.ptr());;
	if (_212ab8213_ftoaSpecialCases(_self_, _16613_x)) {
		return;;
	};
	{
		
		if ((_16613_x == jule::MAX_F64)) {
			_case_begin_22522275b:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_16613_x == jule::MIN_F64)) {
			_case_begin_225222085:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_225221639:;
			{
				_212b23a54_write(_self_.get()._field_oc, _212ac3e88_ftoa(_16613_x,64LL));
			}
		}
		_match_end_2252219d0:;
	};
}



inline void _212ab8a2c_constant(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_210ea46cd_Const> _18432_c, jule::Bool _18443_fx32) {
	{
		
		if (_211013297_IsStr(_18432_c.ptr())) {
			_case_begin_225224076:;
			{
				_212ab79a4_string(_self_, _18432_c);
			}
		}
		else if (_211013033_IsBool(_18432_c.ptr())) {
			_case_begin_2252240dc:;
			{
				_212ab7c29_boolean(_self_, _18432_c);
			}
		}
		else if (_21101350b_IsF64(_18432_c.ptr())) {
			_case_begin_225224153:;
			{
				{
					
					if (_18443_fx32) {
						_case_begin_22522660b:;
						{
							_212ab8488_float32(_self_, _18432_c);
						}
					}
					else {
						_case_begin_225226023:;
						{
							_212ab870d_float64(_self_, _18432_c);
						}
					}
					_match_end_225225e46:;
				};
			}
		}
		else if (_211012a5a_IsI64(_18432_c.ptr())) {
			_case_begin_2252241b9:;
			{
				_212b23a54_write(_self_.get()._field_oc, _212ac4230_itoa(static_cast<jule::I64>(_2110106b2_ReadI64(_18432_c.ptr()))));
			}
		}
		else if (_211012cbe_IsU64(_18432_c.ptr())) {
			_case_begin_225224a38:;
			{
				_212b23a54_write(_self_.get()._field_oc, _212ac44c7_utoa(static_cast<jule::U64>(_211010926_ReadU64(_18432_c.ptr()))));
			}
		}
		else if (_211013770_IsNil(_18432_c.ptr())) {
			_case_begin_225224a9e:;
			{
				_212ab7e05_nilLit(_self_);
			}
		}
		else {
			_case_begin_225224010:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_225223e33:;
	};
}



inline void _212ab8de5_divByZeroBinary(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_20e7ddc0b_Token>& _20836_op, jule::Ptr<_211017a4e_OperandExprModel>& _20853_l, jule::Ptr<_211017a4e_OperandExprModel>& _20880_r) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _20836_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_225229598:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_22522960e:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_2252294aa:;
	};
	if ((!(_20c5533ce_Production))) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_212b26e20_locInfo(_self_.get()._field_oc, _20836_op);
		_212b23a54_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_212ac297b_expr(_self_, _20853_l.get()._field_Model);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(",", 1));
	_212ac297b_expr(_self_, _20880_r.get()._field_Model);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _212ab916a_unsafeBinary(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_211017c3b_BinopExprModel> _23036_m) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("(", 1));
	_212ac2706_model(_self_, _23036_m.get()._field_Left.get()._field_Model);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_212b23a54_write(_self_.get()._field_oc, _23036_m.get()._field_Op.get()._field_Kind);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_212ac2706_model(_self_, _23036_m.get()._field_Right.get()._field_Model);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _212ab93e0_binary(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_211017c3b_BinopExprModel> _24030_m) {
	{
		auto &_match_expr{ _24030_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_225230eb7:;
			{
				if ((_211bb99b9_Struct(_24030_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_212ab8de5_divByZeroBinary(_self_, _24030_m.get()._field_Op,_24030_m.get()._field_Left,_24030_m.get()._field_Right);
					return;;
				};
			}
		}
		_match_end_225230e0c:;
	};
	_212ab916a_unsafeBinary(_self_, _24030_m);
}



inline void _212ab9665_var(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_211b43228_Var> _25227_m) {
	if (_25227_m.get()._field_CppLinked) {
		jule::Ptr<_210e1d8ab_Directive> _25417_d = _212b4d94c_findDirective(_25227_m.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_25417_d != nullptr)) {
			_212b23a54_write(_self_.get()._field_oc, _212b45526_concatAllParts(_25417_d.get()._field_Args));
			_212b23a54_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_212b23a54_write(_self_.get()._field_oc, static__212acb05b_var(_25227_m));
}



inline void _212ab98da_structureIns(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_210e6db2b_StructIns> _26336_m) {
	_212b23a54_write(_self_.get()._field_oc, static__212b499d1_structureIns(_26336_m));
}



inline void _212ab9b60_unary(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_211017e28_UnaryExprModel> _26729_m) {
	{
		auto &_match_expr{ _26729_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_225235bc0:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_212ac297b_expr(_self_, _26729_m.get()._field_Expr.get()._field_Model);
				_212b23a54_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_225235c47:;
			{
				if ((_20c5533ce_Production || (_211bb87cb_Sptr(_26729_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_225235b15;
				};
				_212ac297b_expr(_self_, _26729_m.get()._field_Expr.get()._field_Model);
				_212b23a54_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_212b26e20_locInfo(_self_.get()._field_oc, _26729_m.get()._field_Op);
				_212b23a54_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_225235b15:;
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("(", 1));
	_212b23a54_write(_self_.get()._field_oc, _26729_m.get()._field_Op.get()._field_Kind);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("(", 1));
	_212ac297b_expr(_self_, _26729_m.get()._field_Expr.get()._field_Model);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _212ab9dd5_structureLit(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_211018302_StructLitExprModel> _29136_m) {
	if (_29136_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_212b23a54_write(_self_.get()._field_oc, static__212acaa1c_structureIns(_29136_m.get()._field_Strct));
	if (_29136_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_29136_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _29136_m.get()._field_Strct.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_22523d4d0:;
			if (it != expr.end()) {
				jule::I64 _30417_i = it - expr.begin();
				jule::Ptr<_210e49e48_FieldIns> _30420_f = *it;
				{
					{
						auto &expr = _29136_m.get()._field_Args;
						auto it = expr.begin();
						_iter_begin_22523e28e:;
						if (it != expr.end()) {
							jule::Ptr<_211018115_StructArgExprModel> _30529_arg = *it;
							{
								if ((_30529_arg.get()._field_Field == _30420_f)) {
									_212b23a54_write(_self_.get()._field_oc, jule::Str(".", 1));
									_212b23a54_write(_self_.get()._field_oc, static__212acacb4_field(_30529_arg.get()._field_Field.get()._field_Decl));
									_212b23a54_write(_self_.get()._field_oc, jule::Str("=", 1));
									_212ac297b_expr(_self_, _30529_arg.get()._field_Expr);
									if (((_29136_m.get()._field_Strct.get()._field_Fields.len() - _30417_i) > 1LL)) {
										_212b23a54_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_22523d4d0;
								};
							}
							_iter_next_22523e28e:;
							++it;
							goto _iter_begin_22523e28e;
						}
						_iter_end_22523e28e:;
					};
				}
				_iter_next_22523d4d0:;
				++it;
				_30417_i++;
				goto _iter_begin_22523d4d0;
			}
			_iter_end_22523d4d0:;
		};
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _212aba15a_allocStructure(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_2110184de_AllocStructLitExprModel> _32238_m) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_212b23a54_write(_self_.get()._field_oc, static__212acaa1c_structureIns(_32238_m.get()._field_Lit.get()._field_Strct));
	_212b23a54_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_212ab9dd5_structureLit(_self_, _32238_m.get()._field_Lit);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _212aba3d0_casting(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_2110186cb_CastingExprModel> _33031_m) {
	{
		
		if (((_211bb8567_Prim(_33031_m.get()._field_Kind.ptr()) != nullptr) && _211bbe3c5_IsAny(_211bb8567_Prim(_33031_m.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_225245372:;
			{
				_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_33031_m.get()._field_Kind));
				_212b23a54_write(_self_.get()._field_oc, jule::Str("(", 1));
				_212ac2706_model(_self_, _33031_m.get()._field_Expr);
				_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_211bb8a40_Ptr(_33031_m.get()._field_ExprKind.ptr()) != nullptr) || (_211bb8a40_Ptr(_33031_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_225245042:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str("((", 2));
				_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_33031_m.get()._field_Kind));
				_212b23a54_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_212ac297b_expr(_self_, _33031_m.get()._field_Expr);
				_212b23a54_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_211bb9c2d_Trait(_33031_m.get()._field_ExprKind.ptr()) != nullptr) || ((_211bb8567_Prim(_33031_m.get()._field_ExprKind.ptr()) != nullptr) && _211bbe3c5_IsAny(_211bb8567_Prim(_33031_m.get()._field_ExprKind.ptr()).ptr())) || (_211bb9018_TypeEnum(_33031_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_2252450a8:;
			{
				_212ac2706_model(_self_, _33031_m.get()._field_Expr);
				_212b23a54_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_20c5533ce_Production) {
					_212b23a54_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_33031_m.get()._field_Kind));
					_212b23a54_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if ((_211bb87cb_Sptr(_33031_m.get()._field_Kind.ptr()) != nullptr)) {
						_212b23a54_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_211bb87cb_Sptr(_33031_m.get()._field_Kind.ptr()).get()._field_Elem));
					} else {
						_212b23a54_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_33031_m.get()._field_Kind));
					};
					_212b23a54_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_212b26e20_locInfo(_self_.get()._field_oc, _33031_m.get()._field_Token);
					_212b23a54_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_211bb9c2d_Trait(_33031_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_22524511e:;
			{
				_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_33031_m.get()._field_Kind));
				_212b23a54_write(_self_.get()._field_oc, jule::Str("(", 1));
				_212ac297b_expr(_self_, _33031_m.get()._field_Expr);
				_212b23a54_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_212b23a54_write(_self_.get()._field_oc, _211b07275_Itoa(static_cast<jule::I64>(_212b14da8_findTypeOffset(_self_.get()._field_oc.ptr(), _211bb9c2d_Trait(_33031_m.get()._field_Kind.ptr()),_33031_m.get()._field_ExprKind))));
				_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_225244ecb:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_33031_m.get()._field_Kind));
				_212b23a54_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_212ac297b_expr(_self_, _33031_m.get()._field_Expr);
				_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_225244dee:;
	};
}



inline void _212aba655_args(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Slice<jule::Any> _38128_args) {
	if ((_38128_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _38128_args;
		auto it = expr.begin();
		_iter_begin_225256174:;
		if (it != expr.end()) {
			jule::I64 _38514_i = it - expr.begin();
			jule::Any _38521_a = *it;
			{
				_212ac297b_expr(_self_, _38521_a);
				if (((_38128_args.len() - _38514_i) > 1LL)) {
					_212b23a54_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_225256174:;
			++it;
			_38514_i++;
			goto _iter_begin_225256174;
		}
		_iter_end_225256174:;
	};
}



inline void _212aba8ca_modelForCall(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Any _39336_expr) {
	{
		auto &_match_expr{ _39336_expr };
		
		if (_match_expr.type_is<jule::Ptr<_211022c35_FnIns>>()) {
			_case_begin_225258176:;
			{
				_212abd6ad_funcIns(_self_, _39336_expr.operator jule::Ptr<_211022c35_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019b50_StructSubIdentExprModel>>()) {
			_case_begin_2252581ed:;
			{
				jule::Ptr<_211019b50_StructSubIdentExprModel> _39921_ssie = _39336_expr.operator jule::Ptr<_211019b50_StructSubIdentExprModel>();;
				if ((_39921_ssie.get()._field_Method != nullptr)) {
					_212abd6ad_funcIns(_self_, _39921_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_225258066:;
	};
	_212ac2706_model(_self_, _39336_expr);
}



inline void _212abab50_pushCallInf(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_2110188b8_FnCallExprModel>& _40832_m) {
	if ((_20c5533ce_Production || ((!(_40832_m.get()._field_Func.get()._field_Anon)) && (!(_212ac4b48_isBuiltinCallHasDebuginf(_40832_m)))))) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_40832_m.get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ _40832_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_211019b50_StructSubIdentExprModel>>()) {
				_case_begin_22525b60d:;
				{
					if (_40832_m.get()._field_Expr.operator jule::Ptr<_211019b50_StructSubIdentExprModel>().get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_212b23a54_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_22525b7ea;
				}
			}
			else {
				_case_begin_22525b7ea:;
				{
					_212b23a54_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_22525b6a7:;
		};
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_212b26e20_locInfo(_self_.get()._field_oc, _40832_m.get()._field_Token);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_40832_m.get()._field_Args.len() != 0LL)) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _212abae5d_isWrapped(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_2110188b8_FnCallExprModel>& _43334_m) {
	if ((((!(_2110240bb_IsBuiltin(_43334_m.get()._field_Func.ptr()))) && (_43334_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _21101dd74_IsSelf(_43334_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _43334_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_211019b50_StructSubIdentExprModel>>()) {
				_case_begin_2252604be:;
				{
					jule::Ptr<_211019b50_StructSubIdentExprModel> _43725_ssie = _43334_m.get()._field_Expr.operator jule::Ptr<_211019b50_StructSubIdentExprModel>();;
					{
						
						if (_21101e0d8_IsRef(_43334_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_211bb87cb_Sptr(_43725_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_225260ce9:;
							{
								goto _match_end_22526139e;
							}
						}
						else {
							_case_begin_225261415:;
							{
								if ((_211bb99b9_Struct(_43725_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_43725_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_212b23a54_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_212ac2706_model(_self_, _43725_ssie.get()._field_Expr.get()._field_Model);
										_212b23a54_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_22526139e:;
					};
				}
			}
			_match_end_2252602b0:;
		};
	};
	return false;
}



inline void _212abb1d3_pureFuncCall(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_2110188b8_FnCallExprModel>& _45737_m) {
	jule::Bool _45813_wrapped = _212abae5d_isWrapped(_self_, _45737_m);;
	if (_45737_m.get()._field_IsCo) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("__JULE_CO(", 10));
	};
	_212aba8ca_modelForCall(_self_, _45737_m.get()._field_Expr);
	if ((!(_2110240bb_IsBuiltin(_45737_m.get()._field_Func.ptr())))) {
		if ((_45737_m.get()._field_Func.get()._field_Decl.get()._field_CppLinked && (_45737_m.get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_212b4dcd2_hasDirective(_45737_m.get()._field_Func.get()._field_Decl.get()._field_Directives,jule::Str("cdef", 4))))) {
				_212b23a54_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _45737_m.get()._field_Func.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_2252679c1:;
					if (it != expr.end()) {
						jule::I64 _46726_i = it - expr.begin();
						jule::Ptr<_211bb4c28_InsGeneric> _46733_g = *it;
						{
							_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_46733_g.get()._field_Kind));
							if (((_45737_m.get()._field_Func.get()._field_Generics.len() - _46726_i) > 1LL)) {
								_212b23a54_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_2252679c1:;
						++it;
						_46726_i++;
						goto _iter_begin_2252679c1;
					}
					_iter_end_2252679c1:;
				};
				_212b23a54_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_212abab50_pushCallInf(_self_, _45737_m);
	jule::Bool _47817_locinfo = false;;
	if ((((!(_2110240bb_IsBuiltin(_45737_m.get()._field_Func.ptr()))) && (_45737_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _21101dd74_IsSelf(_45737_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _45737_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_211019b50_StructSubIdentExprModel>>()) {
				_case_begin_22526b4ec:;
				{
					jule::Ptr<_211019b50_StructSubIdentExprModel> _48225_ssie = _45737_m.get()._field_Expr.operator jule::Ptr<_211019b50_StructSubIdentExprModel>();;
					{
						
						if (_21101e0d8_IsRef(_45737_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_22526de28:;
							{
								_212ac2706_model(_self_, _48225_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_211bb87cb_Sptr(_48225_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_22526de8e:;
							{
								_212ac2706_model(_self_, _48225_ssie.get()._field_Expr.get()._field_Model);
								_212b23a54_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_20c5533ce_Production))) {
									_212b23a54_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_212b26e20_locInfo(_self_.get()._field_oc, _45737_m.get()._field_Token);
									_212b23a54_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_22526c498:;
							{
								if ((_211bb99b9_Struct(_48225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_212b23a54_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_45813_wrapped) {
									_212b23a54_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_212ac2706_model(_self_, _48225_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_22526c432:;
					};
					if ((_45737_m.get()._field_Args.len() > 0LL)) {
						_212b23a54_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_211019732_TraitSubIdentExprModel>>()) {
				_case_begin_22526b563:;
				{
					_212ac2706_model(_self_, _45737_m.get()._field_Expr.operator jule::Ptr<_211019732_TraitSubIdentExprModel>().get()._field_Expr);
					if ((!(_20c5533ce_Production))) {
						_47817_locinfo=true;
					};
					if ((_45737_m.get()._field_Args.len() > 0LL)) {
						_212b23a54_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_2252666b2:;
		};
	};
	_212aba655_args(_self_, _45737_m.get()._field_Args);
	if (_47817_locinfo) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_212b26e20_locInfo(_self_.get()._field_oc, _45737_m.get()._field_Token);
		_212b23a54_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_45813_wrapped) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
	if (_45737_m.get()._field_IsCo) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _212abb458_funcCall(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_2110188b8_FnCallExprModel> _53632_m) {
	if (((_2110240bb_IsBuiltin(_53632_m.get()._field_Func.ptr()) || (!(_53632_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_53632_m.get()._field_Except != nullptr) && (_53632_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_212abb1d3_pureFuncCall(_self_, _53632_m);
		return;;
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_212b242e6_addIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_212abb1d3_pureFuncCall(_self_, _53632_m);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_212b25a34_indent(_self_.get()._field_oc);
	if ((_53632_m.get()._field_Except != nullptr)) {
		if (((_53632_m.get()._field_Func.get()._field_Result == nullptr) || (!(_53632_m.get()._field_Assigned)))) {
			_212b23a54_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_212ab4770_scope(_self_.get()._field_oc.get()._field_sc, _53632_m.get()._field_Except);
			_212b23a54_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _55821_forwarded = _212ac487e_isForwarded(_53632_m.get()._field_Except);;
			_212b23a54_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_55821_forwarded) {
				_212b23a54_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_212ab4770_scope(_self_.get()._field_oc.get()._field_sc, _53632_m.get()._field_Except);
			if (_55821_forwarded) {
				_212b23a54_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_212ac2e76_initExpr(_self_, _53632_m.get()._field_Func.get()._field_Result);
				_212b23a54_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_212b23a54_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_212b252d6_doneIndent(_self_.get()._field_oc);
	} else {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_212b26e20_locInfo(_self_.get()._field_oc, _53632_m.get()._field_Token);
		_212b23a54_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_2110204e6_IsVoid(_53632_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_212b25a34_indent(_self_.get()._field_oc);
			_212b23a54_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_212b252d6_doneIndent(_self_.get()._field_oc);
	};
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _212abb6cd_slice(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_211018aa5_SliceExprModel> _58729_m) {
	if ((_58729_m.get()._field_Elems.len() == 0LL)) {
		_212b23a54_write(_self_.get()._field_oc, static__212b48914_asSlice(_58729_m.get()._field_ElemKind));
		_212b23a54_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_212b23a54_write(_self_.get()._field_oc, static__212b48914_asSlice(_58729_m.get()._field_ElemKind));
	_212b23a54_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_212aba655_args(_self_, _58729_m.get()._field_Elems);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _212abb953_indexing(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_211018c92_IndexingExprModel> _59932_m) {
	_212ac2706_model(_self_, _59932_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_20c5533ce_Production || (_211bb8a40_Ptr(_59932_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_211bb9e92_Map(_59932_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _212ac4d79_isExprComesFromBind(_59932_m.get()._field_Expr)) {
			_case_begin_225287c77:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str("[", 1));
				_212ac297b_expr(_self_, _59932_m.get()._field_Index.get()._field_Model);
				_212b23a54_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_22528854c:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_212b26e20_locInfo(_self_.get()._field_oc, _59932_m.get()._field_Token);
				_212b23a54_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_212ac297b_expr(_self_, _59932_m.get()._field_Index.get()._field_Model);
				_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_2252884d6:;
	};
}



inline void _212abbbc8_unsafeIndexing(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_210340e22_UnsafeIndexingExprModel> _61938_m) {
	_212ac2706_model(_self_, _61938_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_20c5533ce_Production || (_211bb8a40_Ptr(_61938_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_211bb9e92_Map(_61938_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_22528b440:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str("[", 1));
				_212ac297b_expr(_self_, _61938_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_212b23a54_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_22528ced0:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_212ac297b_expr(_self_, _61938_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_22528ce69:;
	};
}



inline void _212abbe4d_anonFunc(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_211018e7e_AnonFnExprModel> _63632_m) {
	_212b23a54_write(_self_.get()._field_oc, static__212b4ad45_func(_63632_m.get()._field_Func));
	_212b23a54_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_212b42039_paramsIns(_self_.get()._field_oc, _63632_m.get()._field_Func.get()._field_Params);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_212b23a54_write(_self_.get()._field_oc, static__212b4a806_funcInsResult(_63632_m.get()._field_Func));
	_212b23a54_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_212ab49e5_funcScope(_self_.get()._field_oc.get()._field_sc, _63632_m.get()._field_Func);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _212abc1c3_map(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_211019358_MapExprModel> _64727_m) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_64727_m.get()._field_KeyKind));
	_212b23a54_write(_self_.get()._field_oc, jule::Str(",", 1));
	_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_64727_m.get()._field_ValKind));
	_212b23a54_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_64727_m.get()._field_Entries.len() > 0LL)) {
		{
			auto &expr = _64727_m.get()._field_Entries;
			auto it = expr.begin();
			_iter_begin_225296db8:;
			if (it != expr.end()) {
				jule::I64 _65418_i = it - expr.begin();
				jule::Ptr<_21101916b_KeyValPairExprModel> _65425_pair = *it;
				{
					_212b23a54_write(_self_.get()._field_oc, jule::Str("{", 1));
					_212ac297b_expr(_self_, _65425_pair.get()._field_Key);
					_212b23a54_write(_self_.get()._field_oc, jule::Str(",", 1));
					_212ac297b_expr(_self_, _65425_pair.get()._field_Val);
					_212b23a54_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_64727_m.get()._field_Entries.len() - _65418_i) > 1LL)) {
						_212b23a54_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_225296db8:;
				++it;
				_65418_i++;
				goto _iter_begin_225296db8;
			}
			_iter_end_225296db8:;
		};
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _212abc448_slicing(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_211019545_SlicingExprModel> _66831_m) {
	_212ac2706_model(_self_, _66831_m.get()._field_Expr);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_20c5533ce_Production))) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_212b26e20_locInfo(_self_.get()._field_oc, _66831_m.get()._field_Token);
		_212b23a54_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_212ac297b_expr(_self_, _66831_m.get()._field_Left);
	if ((_66831_m.get()._field_Right != nullptr)) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str(",", 1));
		_212ac297b_expr(_self_, _66831_m.get()._field_Right);
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _212abc6bd_traitSub(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_211019732_TraitSubIdentExprModel> _68432_m) {
	_212b23a54_write(_self_.get()._field_oc, static__212aca236_traitDecl(_68432_m.get()._field_Trt));
	_212b23a54_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_212b23a54_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_212ac2706_model(_self_, _68432_m.get()._field_Expr);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_212b23a54_write(_self_.get()._field_oc, static__212ac9be7_func(_68432_m.get()._field_Method));
}



inline void _212abc943_structureSub(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_211019b50_StructSubIdentExprModel> _69336_m) {
	_212ac2706_model(_self_, _69336_m.get()._field_Expr.get()._field_Model);
	if ((_69336_m.get()._field_Field != nullptr)) {
		if ((_211bb8a40_Ptr(_69336_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_212b23a54_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_211bb87cb_Sptr(_69336_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_212b23a54_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_20c5533ce_Production))) {
				_212b23a54_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_212b26e20_locInfo(_self_.get()._field_oc, _69336_m.get()._field_Token);
				_212b23a54_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_212b23a54_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_212b23a54_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_212b23a54_write(_self_.get()._field_oc, static__212acacb4_field(_69336_m.get()._field_Field.get()._field_Decl));
	};
}



inline void _212abcbb8_commonIdent(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101a216_CommonIdentExprModel> _71331_m) {
	_212b23a54_write(_self_.get()._field_oc, _71331_m.get()._field_Ident);
}



inline void _212abce3d_commonSub(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101a403_CommonSubIdentExprModel> _71733_m) {
	_212ac2706_model(_self_, _71733_m.get()._field_Expr);
	{
		
		if ((_211bb8a40_Ptr(_71733_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_2252a6834:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_211bb87cb_Sptr(_71733_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_2252a7082:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_20c5533ce_Production))) {
					_212b23a54_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_212b26e20_locInfo(_self_.get()._field_oc, _71733_m.get()._field_Token);
					_212b23a54_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_212b23a54_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_2252a701b:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_2252a6ea5:;
	};
	_212b23a54_write(_self_.get()._field_oc, _71733_m.get()._field_Ident);
}



inline void _212abd1b3_array(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101a029_ArrayExprModel> _73629_m) {
	_212b23a54_write(_self_.get()._field_oc, static__212b49c78_array(_73629_m.get()._field_Kind));
	if ((_73629_m.get()._field_Elems.len() == 0LL)) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_73629_m.get()._field_Elems.len() == 2LL) && (_73629_m.get()._field_Elems[1LL] == nullptr))) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("(", 1));
		_212ac297b_expr(_self_, _73629_m.get()._field_Elems[0LL]);
		_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("({", 2));
	_212aba655_args(_self_, _73629_m.get()._field_Elems);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _212abd438_funcInsCommon(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_211022c35_FnIns> _75937_m) {
	_212b23a54_write(_self_.get()._field_oc, static__212b4ad45_func(_75937_m));
	_212b23a54_write(_self_.get()._field_oc, jule::Str("(", 1));
	_212abd6ad_funcIns(_self_, _75937_m);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _212abd6ad_funcIns(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_211022c35_FnIns> _76631_m) {
	if (((_76631_m.get()._field_Decl != nullptr) && _76631_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_210e1d8ab_Directive> _76817_d = _212b4d94c_findDirective(_76631_m.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_76817_d != nullptr)) {
			_212b23a54_write(_self_.get()._field_oc, _212b45526_concatAllParts(_76817_d.get()._field_Args));
			_212b23a54_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_212b23a54_write(_self_.get()._field_oc, static__212ac9e8e_funcIns(_76631_m));
}



inline void _212abd933_tuple(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101a5e0_TupleExprModel> _77729_m) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _77729_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_2252b4b50:;
		if (it != expr.end()) {
			jule::I64 _77914_i = it - expr.begin();
			jule::Ptr<_211b8a319_Data> _77921_d = *it;
			{
				_212ac297b_expr(_self_, _77921_d.get()._field_Model);
				if (((_77729_m.get()._field_Datas.len() - _77914_i) > 1LL)) {
					_212b23a54_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_2252b4b50:;
			++it;
			_77914_i++;
			goto _iter_begin_2252b4b50;
		}
		_iter_end_2252b4b50:;
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _212abdba8_newCall(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101ad93_BuiltinNewCallExprModel> _78831_m) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_78831_m.get()._field_Kind));
	_212b23a54_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_78831_m.get()._field_Init != nullptr)) {
		_212ac297b_expr(_self_, _78831_m.get()._field_Init);
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _212abde2d_outCall(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101a7cc_BuiltinOutCallExprModel> _79831_m) {
	if ((_79831_m.get()._field_Debug && _20c5533ce_Production)) {
		return;;
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_212ac297b_expr(_self_, _79831_m.get()._field_Expr);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _212abe1a3_outlnCall(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101a9b9_BuiltinOutlnCallExprModel> _80733_m) {
	if ((_80733_m.get()._field_Debug && _20c5533ce_Production)) {
		return;;
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_212ac297b_expr(_self_, _80733_m.get()._field_Expr);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _212abe428_panicCall(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101b080_BuiltinPanicCallExprModel> _81633_m) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_212ac297b_expr(_self_, _81633_m.get()._field_Expr);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_212b26e20_locInfo(_self_.get()._field_oc, _81633_m.get()._field_Token);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _212abe69d_assertCall(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101b26c_BuiltinAssertCallExprModel> _82434_m) {
	if (_20c5533ce_Production) {
		return;;
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_212ac297b_expr(_self_, _82434_m.get()._field_Expr);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_212b23a54_write(_self_.get()._field_oc, _212ac3b7a_cstrLit(static_cast<jule::Slice<jule::U8>>(_82434_m.get()._field_Log)));
	_212b23a54_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_212b26e20_locInfo(_self_.get()._field_oc, _82434_m.get()._field_Token);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _212abe923_errorCall(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101ba20_BuiltinErrorCallExprModel> _83733_m) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_2110204e6_IsVoid(_83733_m.get()._field_Func.get()._field_Decl.ptr())) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_83733_m.get()._field_Func.get()._field_Result));
		_212b23a54_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_212ac297b_expr(_self_, _83733_m.get()._field_Err);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _212abeb98_copyCall(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101b833_BuiltinCopyCallExprModel> _85032_m) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_212ac2706_model(_self_, _85032_m.get()._field_Dest.get()._field_Model);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_211bb8567_Prim(_85032_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_212ac2706_model(_self_, _85032_m.get()._field_Src.get()._field_Model);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_211bb8567_Prim(_85032_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _212abee1d_makeCallSlice(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101b459_BuiltinMakeCallExprModel>& _86638_m) {
	jule::Ptr<_211bc011d_Slc> _86717_slice = _211bb94e1_Slc(_86638_m.get()._field_Kind.ptr());;
	_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_86638_m.get()._field_Kind));
	if ((_211bb8ca4_Enum(_86717_slice.get()._field_Elem.ptr()) != nullptr)) {
		if ((_86638_m.get()._field_Cap != nullptr)) {
			_212b23a54_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
		} else {
			_212b23a54_write(_self_.get()._field_oc, jule::Str("::alloc_def(", 12));
		};
	} else {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	};
	_212ac297b_expr(_self_, _86638_m.get()._field_Len);
	if ((_86638_m.get()._field_Cap != nullptr)) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str(",", 1));
		_212ac297b_expr(_self_, _86638_m.get()._field_Cap);
	};
	if ((_211bb8ca4_Enum(_86717_slice.get()._field_Elem.ptr()) != nullptr)) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str(",", 1));
		_212ac2e76_initExpr(_self_, _86717_slice.get()._field_Elem);
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _212ac0193_makeCallStr(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101b459_BuiltinMakeCallExprModel>& _89236_m) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_212b23a54_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_212ac297b_expr(_self_, _89236_m.get()._field_Len);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _212ac0418_makeCall(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101b459_BuiltinMakeCallExprModel> _89932_m) {
	if ((_211bb94e1_Slc(_89932_m.get()._field_Kind.ptr()) != nullptr)) {
		_212abee1d_makeCallSlice(_self_, _89932_m);
		return;;
	};
	_212ac0193_makeCallStr(_self_, _89932_m);
}



inline void _212ac068d_pushToSlice(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21073810a_PushToSliceExprModel> _90735_m) {
	jule::I64 _90813_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_212ac2706_model(_self_, _90735_m.get()._field_Dest);
	jule::Str _91013_dest = _self_.get()._field_oc.get()._field_Obj.slice(_90813_n);;
	_212b23a54_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_212b23a54_write(_self_.get()._field_oc, _91013_dest);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(",", 1));
	_212b23a54_write(_self_.get()._field_oc, _211b07275_Itoa(static_cast<jule::I64>(_90735_m.get()._field_Elems.get()._field_Elems.len())));
	_212b23a54_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _90735_m.get()._field_Elems.get()._field_Elems;
		auto it = expr.begin();
		_iter_begin_2252d5775:;
		if (it != expr.end()) {
			jule::Any _91721_e = *it;
			{
				_212b23a54_write(_self_.get()._field_oc, _91013_dest);
				_212b23a54_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_212ac2706_model(_self_, _91721_e);
				_212b23a54_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_2252d5775:;
			++it;
			goto _iter_begin_2252d5775;
		}
		_iter_end_2252d5775:;
	};
}



inline void _212ac0913_appendCall(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101b646_BuiltinAppendCallExprModel> _92634_m) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_212ac2706_model(_self_, _92634_m.get()._field_Dest);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(",", 1));
	_212ac2706_model(_self_, _92634_m.get()._field_Elements);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _212ac0b88_cloneCall(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101aba6_BuiltinCloneCallExprModel> _93433_m) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_212ac2706_model(_self_, _93433_m.get()._field_Expr);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _212ac0e0d_sizeof(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101991e_SizeofExprModel> _94030_m) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_212ac2706_model(_self_, _94030_m.get()._field_Expr);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _212ac1183_alignof(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101c180_AlignofExprModel> _94631_m) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_212ac2706_model(_self_, _94631_m.get()._field_Expr);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _212ac1491_runeLit(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101c36c_RuneExprModel> _95227_m) {
	if ((_95227_m.get()._field_Code <= 127LL)) {
		jule::Str _95421_b = _212ac35b4_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_95227_m.get()._field_Code)));;
		if ((_95421_b == jule::Str("'", 1))) {
			_95421_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _95421_b) + jule::Str("'", 1));
	};
	return _212ac4230_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_95227_m.get()._field_Code)));
}



inline void _212ac1716_structureStatic(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_211019d3c_StructStaticIdentExprModel> _96339_m) {
	_212b23a54_write(_self_.get()._field_oc, static__212ac9e8e_funcIns(_96339_m.get()._field_Method));
}



inline void _212ac198b_integratedToStr(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101c559_IntegratedToStrExprModel> _96739_m) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_212ac2706_model(_self_, _96739_m.get()._field_Expr);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _212ac1c11_backendEmit(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101c746_BackendEmitExprModel> _97335_m) {
	if ((_97335_m.get()._field_Exprs.len() == 0LL)) {
		_212b23a54_write(_self_.get()._field_oc, _97335_m.get()._field_Code);
		return;;
	};
	jule::I64 _97813_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _97917_args = jule::Slice<jule::Any>::alloc(_97335_m.get()._field_Exprs.len());;
	{
		auto &expr = _97335_m.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_2252e31bc:;
		if (it != expr.end()) {
			jule::I64 _98014_i = it - expr.begin();
			jule::Any _98021_expr = *it;
			{
				_212ac297b_expr(_self_, _98021_expr);
				_97917_args[_98014_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_97813_n));
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL,_97813_n);
			}
			_iter_next_2252e31bc:;
			++it;
			_98014_i++;
			goto _iter_begin_2252e31bc;
		}
		_iter_end_2252e31bc:;
	};
	_212b23a54_write(_self_.get()._field_oc, _211c6a32d_Format(_97335_m.get()._field_Code,jule::Any(_97917_args)));
}



inline void _212ac1e86_free(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_21101c933_FreeExprModel> _98828_m) {
	_212ac297b_expr(_self_, _98828_m.get()._field_Expr);
	if (_20c552ba3_RC) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _212ac220b_mutSlicing(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_210bd39e5_MutSlicingExprModel> _99734_m) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("(", 1));
	_212ac2706_model(_self_, _99734_m.get()._field_Expr);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_20c5533ce_Production))) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_212b26e20_locInfo(_self_.get()._field_oc, _99734_m.get()._field_Token);
		_212b23a54_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_212ac297b_expr(_self_, _99734_m.get()._field_Left);
	if ((_99734_m.get()._field_Right != nullptr)) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str(",", 1));
		_212ac297b_expr(_self_, _99734_m.get()._field_Right);
	};
	_212b23a54_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _212ac2481_strInsertBegin(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_20e858e96_StrInsertBeginExprModel> _101438_m) {
	_212b23a54_write(_self_.get()._field_oc, jule::Str("(", 1));
	_212ac2706_model(_self_, _101438_m.get()._field_Dest);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_212ac2706_model(_self_, _101438_m.get()._field_Expr);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _212ac2706_model(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Any _102229_m) {
	{
		auto &_match_expr{ _102229_m };
		
		if (_match_expr.type_is<jule::Ptr<_211bb6455_TypeKind>>()) {
			_case_begin_2252eca12:;
			{
				_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_102229_m.operator jule::Ptr<_211bb6455_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210ea46cd_Const>>()) {
			_case_begin_2252eccdc:;
			{
				_212ab8a2c_constant(_self_, _102229_m.operator jule::Ptr<_210ea46cd_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b43228_Var>>()) {
			_case_begin_2252ecd53:;
			{
				_212ab9665_var(_self_, _102229_m.operator jule::Ptr<_211b43228_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e6db2b_StructIns>>()) {
			_case_begin_2252ecdb9:;
			{
				_212ab98da_structureIns(_self_, _102229_m.operator jule::Ptr<_210e6db2b_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211022c35_FnIns>>()) {
			_case_begin_2252ece30:;
			{
				_212abd438_funcInsCommon(_self_, _102229_m.operator jule::Ptr<_211022c35_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20e81ad04_UnsafeBinopExprModel>>()) {
			_case_begin_2252ed969:;
			{
				_212ab916a_unsafeBinary(_self_, _102229_m.operator jule::Ptr<_20e81ad04_UnsafeBinopExprModel>().get()._field_Node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211017c3b_BinopExprModel>>()) {
			_case_begin_2252ed9d0:;
			{
				_212ab93e0_binary(_self_, _102229_m.operator jule::Ptr<_211017c3b_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211017e28_UnaryExprModel>>()) {
			_case_begin_2252eda46:;
			{
				_212ab9b60_unary(_self_, _102229_m.operator jule::Ptr<_211017e28_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211018302_StructLitExprModel>>()) {
			_case_begin_2252edaac:;
			{
				_212ab9dd5_structureLit(_self_, _102229_m.operator jule::Ptr<_211018302_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2110184de_AllocStructLitExprModel>>()) {
			_case_begin_2252edb23:;
			{
				_212aba15a_allocStructure(_self_, _102229_m.operator jule::Ptr<_2110184de_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2110186cb_CastingExprModel>>()) {
			_case_begin_2252edb89:;
			{
				_212aba3d0_casting(_self_, _102229_m.operator jule::Ptr<_2110186cb_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2110188b8_FnCallExprModel>>()) {
			_case_begin_2252edc00:;
			{
				_212abb458_funcCall(_self_, _102229_m.operator jule::Ptr<_2110188b8_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211018aa5_SliceExprModel>>()) {
			_case_begin_2252edc66:;
			{
				_212abb6cd_slice(_self_, _102229_m.operator jule::Ptr<_211018aa5_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101a029_ArrayExprModel>>()) {
			_case_begin_2252edccc:;
			{
				_212abd1b3_array(_self_, _102229_m.operator jule::Ptr<_21101a029_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210340e22_UnsafeIndexingExprModel>>()) {
			_case_begin_2252edd43:;
			{
				_212abbbc8_unsafeIndexing(_self_, _102229_m.operator jule::Ptr<_210340e22_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211018c92_IndexingExprModel>>()) {
			_case_begin_2252edda9:;
			{
				_212abb953_indexing(_self_, _102229_m.operator jule::Ptr<_211018c92_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211018e7e_AnonFnExprModel>>()) {
			_case_begin_2252ede20:;
			{
				_212abbe4d_anonFunc(_self_, _102229_m.operator jule::Ptr<_211018e7e_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019358_MapExprModel>>()) {
			_case_begin_2252ede86:;
			{
				_212abc1c3_map(_self_, _102229_m.operator jule::Ptr<_211019358_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019545_SlicingExprModel>>()) {
			_case_begin_2252edeec:;
			{
				_212abc448_slicing(_self_, _102229_m.operator jule::Ptr<_211019545_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019732_TraitSubIdentExprModel>>()) {
			_case_begin_2252ee063:;
			{
				_212abc6bd_traitSub(_self_, _102229_m.operator jule::Ptr<_211019732_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019b50_StructSubIdentExprModel>>()) {
			_case_begin_2252ee0da:;
			{
				_212abc943_structureSub(_self_, _102229_m.operator jule::Ptr<_211019b50_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101a216_CommonIdentExprModel>>()) {
			_case_begin_2252ee162:;
			{
				_212abcbb8_commonIdent(_self_, _102229_m.operator jule::Ptr<_21101a216_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101a403_CommonSubIdentExprModel>>()) {
			_case_begin_2252ee1d9:;
			{
				_212abce3d_commonSub(_self_, _102229_m.operator jule::Ptr<_21101a403_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101a5e0_TupleExprModel>>()) {
			_case_begin_2252ee261:;
			{
				_212abd933_tuple(_self_, _102229_m.operator jule::Ptr<_21101a5e0_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101a7cc_BuiltinOutCallExprModel>>()) {
			_case_begin_2252ee2d8:;
			{
				_212abde2d_outCall(_self_, _102229_m.operator jule::Ptr<_21101a7cc_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101a9b9_BuiltinOutlnCallExprModel>>()) {
			_case_begin_2252ee360:;
			{
				_212abe1a3_outlnCall(_self_, _102229_m.operator jule::Ptr<_21101a9b9_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101ad93_BuiltinNewCallExprModel>>()) {
			_case_begin_2252ee3d7:;
			{
				_212abdba8_newCall(_self_, _102229_m.operator jule::Ptr<_21101ad93_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101b080_BuiltinPanicCallExprModel>>()) {
			_case_begin_2252ee45e:;
			{
				_212abe428_panicCall(_self_, _102229_m.operator jule::Ptr<_21101b080_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101b26c_BuiltinAssertCallExprModel>>()) {
			_case_begin_2252ee4d6:;
			{
				_212abe69d_assertCall(_self_, _102229_m.operator jule::Ptr<_21101b26c_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101ba20_BuiltinErrorCallExprModel>>()) {
			_case_begin_2252ee55d:;
			{
				_212abe923_errorCall(_self_, _102229_m.operator jule::Ptr<_21101ba20_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101b459_BuiltinMakeCallExprModel>>()) {
			_case_begin_2252ee5d5:;
			{
				_212ac0418_makeCall(_self_, _102229_m.operator jule::Ptr<_21101b459_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101b646_BuiltinAppendCallExprModel>>()) {
			_case_begin_2252ee65c:;
			{
				_212ac0913_appendCall(_self_, _102229_m.operator jule::Ptr<_21101b646_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101aba6_BuiltinCloneCallExprModel>>()) {
			_case_begin_2252ee6d4:;
			{
				_212ac0b88_cloneCall(_self_, _102229_m.operator jule::Ptr<_21101aba6_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101b833_BuiltinCopyCallExprModel>>()) {
			_case_begin_2252ee75b:;
			{
				_212abeb98_copyCall(_self_, _102229_m.operator jule::Ptr<_21101b833_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101991e_SizeofExprModel>>()) {
			_case_begin_2252ee7d3:;
			{
				_212ac0e0d_sizeof(_self_, _102229_m.operator jule::Ptr<_21101991e_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101c180_AlignofExprModel>>()) {
			_case_begin_2252ee85a:;
			{
				_212ac1183_alignof(_self_, _102229_m.operator jule::Ptr<_21101c180_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101c36c_RuneExprModel>>()) {
			_case_begin_2252ee8d2:;
			{
				_212b23a54_write(_self_.get()._field_oc, _212ac1491_runeLit(_self_, _102229_m.operator jule::Ptr<_21101c36c_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019d3c_StructStaticIdentExprModel>>()) {
			_case_begin_2252ee959:;
			{
				_212ac1716_structureStatic(_self_, _102229_m.operator jule::Ptr<_211019d3c_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101c559_IntegratedToStrExprModel>>()) {
			_case_begin_2252ee9d1:;
			{
				_212ac198b_integratedToStr(_self_, _102229_m.operator jule::Ptr<_21101c559_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101c746_BackendEmitExprModel>>()) {
			_case_begin_2252eea58:;
			{
				_212ac1c11_backendEmit(_self_, _102229_m.operator jule::Ptr<_21101c746_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21101c933_FreeExprModel>>()) {
			_case_begin_2252eead0:;
			{
				_212ac1e86_free(_self_, _102229_m.operator jule::Ptr<_21101c933_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210bd39e5_MutSlicingExprModel>>()) {
			_case_begin_2252eeb57:;
			{
				_212ac220b_mutSlicing(_self_, _102229_m.operator jule::Ptr<_210bd39e5_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20e858e96_StrInsertBeginExprModel>>()) {
			_case_begin_2252eebce:;
			{
				_212ac2481_strInsertBegin(_self_, _102229_m.operator jule::Ptr<_20e858e96_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_2252ecb88:;
			{
				_212b23a54_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_2252ecaab:;
	};
}



inline void _212ac297b_expr(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Any _111528_e) {
	_212ac2706_model(_self_, _111528_e);
}



inline void _212ac2c01_val(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_211b8b392_Value> _111927_v) {
	if (_211b8abcc_IsConst(_111927_v.get()._field_Data.ptr())) {
		_212ab8a2c_constant(_self_, _111927_v.get()._field_Data.get()._field_Constant,((_111927_v.get()._field_Data.get()._field_Kind != nullptr) && _211bbd1d7_IsF32(_211bb8567_Prim(_111927_v.get()._field_Data.get()._field_Kind.ptr()).ptr())));
		return;;
	};
	_212ac297b_expr(_self_, _111927_v.get()._field_Data.get()._field_Model);
}



inline void _212ac2e76_initExpr(jule::Ptr<_212ab7333_exprCoder> _self_, jule::Ptr<_211bb6455_TypeKind> _112732_t) {
	if ((_211bb8a40_Ptr(_112732_t.ptr()) != nullptr)) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		return;;
	};
	jule::Ptr<_211034087_Enum> _113217_enm = _211bb8ca4_Enum(_112732_t.ptr());;
	if ((_113217_enm != nullptr)) {
		_212ac2c01_val(_self_, _113217_enm.get()._field_Items[0LL].get()._field_Value);
		return;;
	};
	_212b23a54_write(_self_.get()._field_oc, static__212b4b0dc_kind(_112732_t));
	_212b23a54_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _212ab7333_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__212ac5781_cloneFuncDecl(jule::Ptr<_210e427d1_Struct>& _1030_s) {
	jule::Str _1117_obj = static__212b49739_structure(_1030_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__212ac5a28_cloneFuncDef(jule::Ptr<_210e427d1_Struct>& _1629_s) {
	jule::Str _1717_obj = static__212b49739_structure(_1629_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _212ac5484_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_212ac6908_TestCoder> static__212ac6d7b_New(jule::Ptr<_212b406ec_ObjectCoder>& _2824_oc) {
	return jule::new_ptr<_212ac6908_TestCoder>(_212ac6908_TestCoder{._field_oc=_2824_oc});
}



inline jule::Ptr<_211b1c378_ImportInfo> _212ac70e0_findTestingPackage(jule::Ptr<_212ac6908_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_22531c46b:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_LinkPath == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_22531c46b:;
			++it;
			goto _iter_begin_22531c46b;
		}
		_iter_end_22531c46b:;
	};
	return nullptr;
}



inline void _212ac7365_appendTest(jule::Ptr<_212ac6908_TestCoder> _self_, jule::Ptr<_211022c35_FnIns> _4334_f) {
	_212b25a34_indent(_self_.get()._field_oc);
	_212ac7a2a_callTmReset(_self_);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_212b23a54_write(_self_.get()._field_oc, _212ac3b7a_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_212b23a54_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, static__212ac9e8e_funcIns(_4334_f));
	_212b23a54_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _212ac75da_appendPackageTests(jule::Ptr<_212ac6908_TestCoder> _self_, jule::Ptr<_211b202d2_Package>& _6043_p) {
	{
		auto &expr = _6043_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_225323461:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_225323d13:;
					if (it != expr.end()) {
						jule::Ptr<_211020084_Fn> _6225_f = *it;
						{
							if (_212b4dcd2_hasDirective(_6225_f.get()._field_Directives,jule::Str("test", 4))) {
								_212ac7365_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_225323d13:;
						++it;
						goto _iter_begin_225323d13;
					}
					_iter_end_225323d13:;
				};
			}
			_iter_next_225323461:;
			++it;
			goto _iter_begin_225323461;
		}
		_iter_end_225323461:;
	};
}



inline jule::Bool _212ac784e_readyTestingPackage(jule::Ptr<_212ac6908_TestCoder> _self_) {
	jule::Ptr<_211b1c378_ImportInfo> _7117_p = _212ac70e0_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_211b1d7b9_FindStruct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_210e4797e_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tmFailed=_210e4797e_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6),false);
	_self_.get()._field_tmSkipped=_210e4797e_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7),false);
	return true;
}



inline void _212ac7a2a_callTmReset(jule::Ptr<_212ac6908_TestCoder> _self_) {
	_212b23a54_write(_self_.get()._field_oc, static__212ac9be7_func(_self_.get()._field_tmReset));
	_212b23a54_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _212ac7c06_callTmFailed(jule::Ptr<_212ac6908_TestCoder> _self_) {
	_212b23a54_write(_self_.get()._field_oc, static__212ac9be7_func(_self_.get()._field_tmFailed));
	_212b23a54_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _212ac7dd2_callTmSkipped(jule::Ptr<_212ac6908_TestCoder> _self_) {
	_212b23a54_write(_self_.get()._field_oc, static__212ac9be7_func(_self_.get()._field_tmSkipped));
	_212b23a54_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _212ac80ad_Serialize(jule::Ptr<_212ac6908_TestCoder> _self_) {
	_212b449dc_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_212b44811_end(_self_.get()._field_oc);
	});;
	_212b23a54_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_212b242e6_addIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	if ((!(_212ac784e_readyTestingPackage(_self_)))) {
		_212b23a54_write(_self_.get()._field_oc, jule::Str("}", 1));
		_212b252d6_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_212b23a54_write(_self_.get()._field_oc, static__212b47847_asSptr(static__212b499d1_structureIns(_self_.get()._field_t)));
	_212b23a54_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_212b23a54_write(_self_.get()._field_oc, static__212b499d1_structureIns(_self_.get()._field_t));
	_212b23a54_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_212b242e6_addIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_212ac7c06_callTmFailed(_self_);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_212ac7dd2_callTmSkipped(_self_);
	_212b23a54_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_212b252d6_doneIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_212ac75da_appendPackageTests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_Main);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_212b252d6_doneIndent(_self_.get()._field_oc);
	_212b25a34_indent(_self_.get()._field_oc);
	_212b23a54_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _212ac6908_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__212ac9565_toOut(jule::Str& _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_211b07011_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3322_ident;
		return _3521_obj;
	};
	jule::Str _4217_obj = jule::Str::alloc((_3322_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3322_ident;
	return _4217_obj;
}



inline jule::Str static__212ac9950_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str& _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_211b07275_Itoa(_5423_row);
	_5517_obj+=_211b07275_Itoa(_5433_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5444_ident;
	return _5517_obj;
}



inline jule::Str static__212ac9be7_func(jule::Ptr<_211020084_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_CppLinked) {
			_case_begin_22533be5d:;
			{
				return _6521_f.get()._field_Ident;
			}
		}
		else if ((_6521_f.get()._field_Ident == jule::Str("main", 4))) {
			_case_begin_22533bec4:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_21102075a_IsMethod(_6521_f.ptr())) {
			_case_begin_22533b2e2:;
			{
				jule::Str _7221_obj = static__212ac9565_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;
				};
				return _7221_obj;
			}
		}
		else {
			_case_begin_22533b226:;
			{
				return static__212ac9565_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));
			}
		}
		_match_end_22533b149:;
	};
}



inline jule::Str static__212ac9e8e_funcIns(jule::Ptr<_211022c35_FnIns>& _8424_f) {
	if (_2110240bb_IsBuiltin(_8424_f.ptr())) {
		return (jule::Str("jule::", 6) + _8424_f.get()._field_Decl.get()._field_Ident);
	};
	if ((_8424_f.get()._field_Decl.get()._field_CppLinked || (_8424_f.get()._field_Generics.len() == 0LL))) {
		return static__212ac9be7_func(_8424_f.get()._field_Decl);
	};
	return static__212ac9565_toOut(_8424_f.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8424_f)));
}



inline jule::Str static__212aca236_traitDecl(jule::Ptr<_211031e42_Trait> _9525_t) {
	if (_2110329ae_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);
	};
	return static__212ac9565_toOut(_9525_t.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));
}



inline jule::Str static__212aca4cd_param(jule::Ptr<_21101d747_Param>& _10322_p) {
	if ((_20e7e1747_IsAnonIdent(_10322_p.get()._field_Ident) || _20e7e14a0_IsIgnoreIdent(_10322_p.get()._field_Ident))) {
		return jule::Str();
	};
	if (_21101dd74_IsSelf(_10322_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_10322_p.get()._field_Token == nullptr)) {
		return static__212ac9950_toLocal(0LL,0LL,_10322_p.get()._field_Ident);
	};
	return static__212ac9950_toLocal(_10322_p.get()._field_Token.get()._field_Row,_10322_p.get()._field_Token.get()._field_Column,_10322_p.get()._field_Ident);
}



inline jule::Str static__212aca775_structure(jule::Ptr<_210e427d1_Struct>& _11726_s) {
	if (_11726_s.get()._field_CppLinked) {
		if (_212b4dcd2_hasDirective(_11726_s.get()._field_Directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_Ident;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_Ident);
	};
	return static__212ac9565_toOut(_11726_s.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));
}



inline jule::Str static__212acaa1c_structureIns(jule::Ptr<_210e6db2b_StructIns>& _12829_s) {
	if ((_12829_s.get()._field_Decl.get()._field_CppLinked || (_12829_s.get()._field_Generics.len() == 0LL))) {
		return static__212aca775_structure(_12829_s.get()._field_Decl);
	};
	return static__212ac9565_toOut(_12829_s.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12829_s)));
}



inline jule::Str static__212acacb4_field(jule::Ptr<_210e34c9b_Field>& _13622_f) {
	if (_13622_f.get()._field_Owner.get()._field_CppLinked) {
		return _13622_f.get()._field_Ident;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_Ident);
}



inline jule::Str static__212acb05b_var(jule::Ptr<_211b43228_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_225347562:;
			{
				return _14423_v.get()._field_Ident;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("error", 5))) {
			_case_begin_2253475c8:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("self", 4))) {
			_case_begin_2253468a2:;
			{
				if ((_211bb87cb_Sptr(_14423_v.get()._field_Kind.get()._field_Kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_225346918:;
			{
				return static__212ac9950_toLocal(_14423_v.get()._field_Token.get()._field_Row,_14423_v.get()._field_Token.get()._field_Column,_14423_v.get()._field_Ident);
			}
		}
		else {
			_case_begin_22534683b:;
			{
				return static__212ac9565_toOut(_14423_v.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));
			}
		}
		_match_end_225346781:;
	};
}



inline jule::Str static__212acb303_iterBegin(jule::Uintptr _16325_it) {
	jule::Str _16417_obj = jule::Str::alloc(30LL);;
	_16417_obj+=jule::Str("_iter_begin_", 12);
	_16417_obj+=_211b07011_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16325_it)),15LL);
	return _16417_obj;
}



inline jule::Str static__212acb59a_iterEnd(jule::Uintptr _17123_it) {
	jule::Str _17217_obj = jule::Str::alloc(30LL);;
	_17217_obj+=jule::Str("_iter_end_", 10);
	_17217_obj+=_211b07011_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17123_it)),15LL);
	return _17217_obj;
}



inline jule::Str static__212acb842_iterNext(jule::Uintptr _17924_it) {
	jule::Str _18017_obj = jule::Str::alloc(30LL);;
	_18017_obj+=jule::Str("_iter_next_", 11);
	_18017_obj+=_211b07011_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17924_it)),15LL);
	return _18017_obj;
}



inline jule::Str static__212acbad9_label(jule::Str& _18722_ident) {
	jule::Str _18817_obj = jule::Str::alloc(30LL);;
	_18817_obj+=jule::Str("_julec_label_", 13);
	_18817_obj+=_18722_ident;
	return _18817_obj;
}



inline jule::Str static__212acbd81_matchEnd(jule::Uintptr _19524_m) {
	jule::Str _19617_obj = jule::Str::alloc(30LL);;
	_19617_obj+=jule::Str("_match_end_", 11);
	_19617_obj+=_211b07011_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19524_m)),15LL);
	return _19617_obj;
}



inline jule::Str static__212acc128_caseBegin(jule::Uintptr _20325_c) {
	jule::Str _20417_obj = jule::Str::alloc(30LL);;
	_20417_obj+=jule::Str("_case_begin_", 12);
	_20417_obj+=_211b07011_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20325_c)),15LL);
	return _20417_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _212ac9059_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _212b40323_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _212b40510_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _212b46505_Str(_212b4623b_customType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _212b46813_Equals(jule::Ptr<_212b4623b_customType> _self_, jule::Ptr<_211bb6455_TypeKind> _3922_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _212b4623b_customType _Src) {
	_Stream << _212b46505_Str(&_Src);
	return _Stream;
}



inline jule::Str static__212b47061_toType(jule::Str _6026_id) {
	if ((_6026_id != jule::Str("uintptr", 7))) {
		_6026_id=_21113a8b9_RealKindOf(_6026_id);
	};
	if (((97LL <= _6026_id[0LL]) && (_6026_id[0LL] <= 122LLU))) {
		_6026_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6026_id);
}



inline jule::Str static__212b47308_prim(jule::Ptr<_211bbae2c_Prim> _7120_p) {
	return static__212b47061_toType(_211bbb290_Str(_7120_p.ptr()));
}



inline jule::Str static__212b475a0_tuple(jule::Ptr<_211bc0b9b_Tuple> _7625_t) {
	jule::Str _7717_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7625_t.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_22542c35b:;
		if (it != expr.end()) {
			jule::Ptr<_211bb6455_TypeKind> _7821_tk = *it;
			{
				_7717_obj+=static__212b4b0dc_kind(_7821_tk);
				_7717_obj+=jule::Str(",", 1);
			}
			_iter_next_22542c35b:;
			++it;
			goto _iter_begin_22542c35b;
		}
		_iter_end_22542c35b:;
	};
	(_7717_obj).mut_slice(0LL,(_7717_obj.len() - 1LL));;
	_7717_obj+=jule::Str(">", 1);
	return _7717_obj;
}



inline jule::Str static__212b47847_asSptr(jule::Str _8822_elem) {
	jule::Str _8917_obj = jule::Str("jule::Ptr<", 10);;
	_8917_obj+=_8822_elem;
	_8917_obj+=jule::Str(">", 1);
	return _8917_obj;
}



inline jule::Str static__212b47ade_asPtr(jule::Str _9621_elem) {
	return (_9621_elem + jule::Str("*", 1));
}



inline jule::Str static__212b47d86_sptr(jule::Ptr<_211bbe6b1_Sptr> _10124_sptr) {
	return static__212b47847_asSptr(static__212b4b0dc_kind(_10124_sptr.get()._field_Elem));
}



inline jule::Str static__212b4812d_ptr(jule::Ptr<_211bc2c25_Ptr> _10623_p) {
	;
	if (_211bc36e8_IsUnsafe(_10623_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _11117_elem = static__212b4b0dc_kind(_10623_p.get()._field_Elem);;
	_11117_elem+=jule::Str("*", 1);
	return _11117_elem;
}



inline jule::Str static__212b483c5_enumDecl(jule::Ptr<_211034087_Enum> _11728_e) {
	return static__212b4b0dc_kind(_11728_e.get()._field_Kind.get()._field_Kind);
}



inline jule::Str static__212b4866c_typeEnumDecl(jule::Ptr<_211035682_TypeEnum> _12232_e) {
	return jule::Str("jule::Any", 9);
}



inline jule::Str static__212b48914_asSlice(jule::Ptr<_211bb6455_TypeKind> _12627_elem) {
	jule::Str _12717_obj = jule::Str("jule::Slice<", 12);;
	_12717_obj+=static__212b4b0dc_kind(_12627_elem);
	_12717_obj+=jule::Str(">", 1);
	return _12717_obj;
}



inline jule::Str static__212b48bab_slice(jule::Ptr<_211bc011d_Slc> _13425_s) {
	return static__212b48914_asSlice(_13425_s.get()._field_Elem);
}



inline jule::Str static__212b48e53_map(jule::Ptr<_211bc16c4_Map> _13923_m) {
	jule::Str _14017_obj = jule::Str("jule::Map<", 10);;
	_14017_obj+=static__212b4b0dc_kind(_13923_m.get()._field_Key);
	_14017_obj+=jule::Str(",", 1);
	_14017_obj+=static__212b4b0dc_kind(_13923_m.get()._field_Val);
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;
}



inline jule::Str static__212b491ea_traitIdent(jule::Str _14826_ident) {
	jule::Str _14917_obj = jule::Str("jule::Trait<", 12);;
	_14917_obj+=_14826_ident;
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;
}



inline jule::Str static__212b49492_traitDecl(jule::Ptr<_211031e42_Trait> _15625_t) {
	return static__212b491ea_traitIdent(static__212aca236_traitDecl(_15625_t));
}



inline jule::Str static__212b49739_structure(jule::Ptr<_210e427d1_Struct> _16125_s) {
	jule::Str _16217_rep = jule::Str();;
	if ((_16125_s.get()._field_CppLinked && (!(_212b4dcd2_hasDirective(_16125_s.get()._field_Directives,jule::Str("typedef", 7)))))) {
		_16217_rep+=jule::Str("struct ", 7);
	};
	_16217_rep+=static__212aca775_structure(_16125_s);
	return _16217_rep;
}



inline jule::Str static__212b499d1_structureIns(jule::Ptr<_210e6db2b_StructIns> _17132_s) {
	if (_17132_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _17321_ident = static__212acaa1c_structureIns(_17132_s);;
		if ((_17132_s.get()._field_Generics.len() > 0LL)) {
			_17321_ident+=jule::Str("<", 1);
			{
				auto &expr = _17132_s.get()._field_Generics;
				auto it = expr.begin();
				_iter_begin_2254377a6:;
				if (it != expr.end()) {
					jule::Ptr<_211bb4c28_InsGeneric> _17629_g = *it;
					{
						_17321_ident+=static__212b4b0dc_kind(_17629_g.get()._field_Kind);
						_17321_ident+=jule::Str(",", 1);
					}
					_iter_next_2254377a6:;
					++it;
					goto _iter_begin_2254377a6;
				}
				_iter_end_2254377a6:;
			};
			(_17321_ident).mut_slice(0LL,(_17321_ident.len() - 1LL));;
			_17321_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_210e1d8ab_Directive> _18317_d = _212b4d94c_findDirective(_17132_s.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_18317_d != nullptr)) {
			(_17321_ident).buffer.insert(0, ((_212b45526_concatAllParts(_18317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _17321_ident;
	};
	return static__212acaa1c_structureIns(_17132_s);
}



inline jule::Str static__212b49c78_array(jule::Ptr<_211bc22b8_Arr> _19325_a) {
	jule::Str _19417_obj = jule::Str("jule::Array<", 12);;
	_19417_obj+=static__212b4b0dc_kind(_19325_a.get()._field_Elem);
	_19417_obj+=jule::Str(",", 1);
	_19417_obj+=_211b07275_Itoa(_19325_a.get()._field_N);
	_19417_obj+=jule::Str(">", 1);
	return _19417_obj;
}



inline jule::Str static__212b4a2b7_paramIns(jule::Ptr<_211021d66_ParamIns>& _21929_p) {
	jule::Str _22017_obj = jule::Str();;
	if (_21929_p.get()._field_Decl.get()._field_Variadic) {
		_22017_obj+=jule::Str("jule::Slice<", 12);
		_22017_obj+=static__212b4b0dc_kind(_21929_p.get()._field_Kind);
		_22017_obj+=jule::Str(">", 1);
	} else {
		_22017_obj+=static__212b4b0dc_kind(_21929_p.get()._field_Kind);
	};
	if (_21929_p.get()._field_Decl.get()._field_Reference) {
		_22017_obj+=jule::Str("&", 1);
	};
	return _22017_obj;
}



inline jule::Str static__212b4a806_funcInsResult(jule::Ptr<_211022c35_FnIns>& _24934_f) {
	if (_2110204e6_IsVoid(_24934_f.get()._field_Decl.ptr())) {
		if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__212b4b0dc_kind(_24934_f.get()._field_Result)) + jule::Str(">", 1));
	};
	return static__212b4b0dc_kind(_24934_f.get()._field_Result);
}



inline jule::Str static__212b4aa9d_anonFunc(jule::Ptr<_211022c35_FnIns> _26228_f) {
	jule::Str _26317_decl = static__212b4a806_funcInsResult(_26228_f);;
	_26317_decl+=jule::Str("(", 1);
	if ((_26228_f.get()._field_Params.len() > 0LL)) {
		{
			auto &expr = _26228_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_2254443b7:;
			if (it != expr.end()) {
				jule::Ptr<_211021d66_ParamIns> _26625_param = *it;
				{
					if (_21101dd74_IsSelf(_26625_param.get()._field_Decl.ptr())) {
						goto _iter_next_2254443b7;
					};
					_26317_decl+=static__212b4a2b7_paramIns(_26625_param);
					_26317_decl+=jule::Str(",", 1);
				}
				_iter_next_2254443b7:;
				++it;
				goto _iter_begin_2254443b7;
			}
			_iter_end_2254443b7:;
		};
		(_26317_decl).mut_slice(0LL,(_26317_decl.len() - 1LL));;
	} else {
		_26317_decl+=jule::Str("void", 4);
	};
	_26317_decl+=jule::Str(")", 1);
	return _26317_decl;
}



inline jule::Str static__212b4ad45_func(jule::Ptr<_211022c35_FnIns> _28224_f) {
	jule::Str _28317_obj = jule::Str("jule::Fn<", 9);;
	_28317_obj+=static__212b4aa9d_anonFunc(_28224_f);
	_28317_obj+=jule::Str(">", 1);
	return _28317_obj;
}



inline jule::Str static__212b4b0dc_kind(jule::Ptr<_211bb6455_TypeKind> _29024_k) {
	{
		
		if (_211bb7115_CppLinked(_29024_k.ptr())) {
			_case_begin_225446e36:;
			{
				return _29024_k.get()._field_CppIdent;
			}
		}
		else if ((_211bb8567_Prim(_29024_k.ptr()) != nullptr)) {
			_case_begin_2254470bd:;
			{
				return static__212b47308_prim(_211bb8567_Prim(_29024_k.ptr()));
			}
		}
		else if ((_211bba206_Tup(_29024_k.ptr()) != nullptr)) {
			_case_begin_225447134:;
			{
				return static__212b475a0_tuple(_211bba206_Tup(_29024_k.ptr()));
			}
		}
		else if ((_211bb87cb_Sptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_2254471ab:;
			{
				return static__212b47d86_sptr(_211bb87cb_Sptr(_29024_k.ptr()));
			}
		}
		else if ((_211bb8a40_Ptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_225447233:;
			{
				return static__212b4812d_ptr(_211bb8a40_Ptr(_29024_k.ptr()));
			}
		}
		else if ((_211bb8ca4_Enum(_29024_k.ptr()) != nullptr)) {
			_case_begin_2254472aa:;
			{
				return static__212b483c5_enumDecl(_211bb8ca4_Enum(_29024_k.ptr()));
			}
		}
		else if ((_211bb9018_TypeEnum(_29024_k.ptr()) != nullptr)) {
			_case_begin_225447332:;
			{
				return static__212b4866c_typeEnumDecl(_211bb9018_TypeEnum(_29024_k.ptr()));
			}
		}
		else if ((_211bb94e1_Slc(_29024_k.ptr()) != nullptr)) {
			_case_begin_2254473a9:;
			{
				return static__212b48bab_slice(_211bb94e1_Slc(_29024_k.ptr()));
			}
		}
		else if ((_211bb9e92_Map(_29024_k.ptr()) != nullptr)) {
			_case_begin_225447431:;
			{
				return static__212b48e53_map(_211bb9e92_Map(_29024_k.ptr()));
			}
		}
		else if ((_211bb9c2d_Trait(_29024_k.ptr()) != nullptr)) {
			_case_begin_2254474a8:;
			{
				return static__212b49492_traitDecl(_211bb9c2d_Trait(_29024_k.ptr()));
			}
		}
		else if ((_211bb99b9_Struct(_29024_k.ptr()) != nullptr)) {
			_case_begin_225447530:;
			{
				return static__212b499d1_structureIns(_211bb99b9_Struct(_29024_k.ptr()));
			}
		}
		else if ((_211bb927c_Arr(_29024_k.ptr()) != nullptr)) {
			_case_begin_2254475a7:;
			{
				return static__212b49c78_array(_211bb927c_Arr(_29024_k.ptr()));
			}
		}
		else if ((_211bb9755_Fn(_29024_k.ptr()) != nullptr)) {
			_case_begin_22544762e:;
			{
				return static__212b4ad45_func(_211bb9755_Fn(_29024_k.ptr()));
			}
		}
		_match_end_225446d48:;
	};
	{
		auto &_match_expr{ _29024_k.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_212b4623b_customType>>()) {
			_case_begin_2254476d9:;
			{
				return _29024_k.get()._field_Kind.operator jule::Ptr<_212b4623b_customType>().get()._field_kind;
			}
		}
		else {
			_case_begin_22544e89a:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_22544ee2d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _212b46a33_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _22524257d_Name(_225450e0c_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _2252426b0_What(_225450e0c_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _225451292_Reset(_225450e0c_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _2254513c4_Short(_225450e0c_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _225450e0c_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _225454608_Name(_225454aae_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _225454d9a_What(_225454aae_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _225454ecc_Reset(_225454aae_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _22545510e_Short(_225454aae_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _225454aae_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _225458189_Name(_225458640_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _22545892b_What(_225458640_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _225458a5d_Reset(_225458640_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _225458b90_Short(_225458640_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _225458640_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _22545bc5e_Name(_22545c215_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _22545c501_What(_22545c215_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _22545c633_Reset(_22545c215_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _22545c765_Short(_22545c215_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _22545c215_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _2254607e0_Name(_225460c96_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _225461082_What(_225460c96_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _2254611b4_Reset(_225460c96_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _2254612e6_Short(_225460c96_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _225460c96_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_212b7bcdd_FlagSet> static__212b7c0c9_New(void) {
	return jule::new_ptr<_212b7bcdd_FlagSet>(_212b7bcdd_FlagSet{._field_flags=jule::Slice<jule::Trait<_2129e44e6_CommonFlag>>::alloc(0LL,20LL)});
}



inline jule::Trait<_2129e44e6_CommonFlag> _212b7c55d_FindFlag(_212b7bcdd_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_22546ba93:;
		if (it != expr.end()) {
			jule::Trait<_2129e44e6_CommonFlag> _7221_flag = *it;
			{
				if ((_2129e44e6_CommonFlag_mptr_data[(_7221_flag).type_offset]._2129e773b_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;
				};
			}
			_iter_next_22546ba93:;
			++it;
			goto _iter_begin_22546ba93;
		}
		_iter_end_22546ba93:;
	};
	return nullptr;
}



inline jule::Trait<_2129e44e6_CommonFlag> _212b7c86b_FindFlagShort(_212b7bcdd_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_22546c19d:;
		if (it != expr.end()) {
			jule::Trait<_2129e44e6_CommonFlag> _8221_flag = *it;
			{
				if ((_2129e44e6_CommonFlag_mptr_data[(_8221_flag).type_offset]._2129c3b9b_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;
				};
			}
			_iter_next_22546c19d:;
			++it;
			goto _iter_begin_22546c19d;
		}
		_iter_end_22546c19d:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_2129e44e6_CommonFlag>> _212b7cad0_Flags(_212b7bcdd_FlagSet* _self_) {
	return (*_self_)._field_flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _212b7cddd_Parse(_212b7bcdd_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_212b7e4b6_argParser _11617_ap = _212b7e4b6_argParser{._field_set=(*_self_), ._field_args=_11524_args, };;
	({
		auto except = _212b808a2_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _212b7d0b9_Reset(_212b7bcdd_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_22546eba6:;
		if (it != expr.end()) {
			jule::Trait<_2129e44e6_CommonFlag> _12616_f = *it;
			{
				_2129e44e6_CommonFlag_mptr_data[(_12616_f).type_offset]._212b7a35d_Reset(_12616_f);
			}
			_iter_next_22546eba6:;
			++it;
			goto _iter_begin_22546eba6;
		}
		_iter_end_22546eba6:;
	};
}



inline jule::Ptr<_225460c96_Flag> _2254da628_addFlagCommon(_212b7bcdd_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_2254dbd00:;
			{
				goto _match_end_2254dbc56;
			}
		}
		_match_end_2254dbc56:;
	};
	if ((_212b7c55d_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_212b7c86b_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_225460c96_Flag> _14817_flag = jule::new_ptr<_225460c96_Flag>(_225460c96_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_2129e44e6_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_22545c215_Flag> _2254e4302_addFlagCommon(_212b7bcdd_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_2254e5985:;
			{
				goto _match_end_2254e58db;
			}
		}
		_match_end_2254e58db:;
	};
	if ((_212b7c55d_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_212b7c86b_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_22545c215_Flag> _14817_flag = jule::new_ptr<_22545c215_Flag>(_22545c215_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_2129e44e6_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}



inline void _2254d856b_AddVar(_212b7bcdd_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_225460c96_Flag> _17617_flag = _2254da628_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _2254e2256_AddVar(_212b7bcdd_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_22545c215_Flag> _17617_flag = _2254e4302_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _212b7bcdd_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_2120ac0a9_IR>,jule::Slice<_20e4ba377_Log>> static__2107519c5_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	jule::Ptr<_211d89b78_JuleImporter> _2817_importer = static__211de8775_New(_212222bd1_buildCompileInfo());;
	jule::Slice<jule::Ptr<_210e1c811_Ast>> _2918_files;;
	jule::Slice<_20e4ba377_Log> _2929_logs;;
	std::tie(_2918_files,_2929_logs) = _212017aa3_ImportPackage(_2817_importer.ptr(), _2721_path,true);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_211b202d2_Package> _3918_pkg;;
	std::tie(_3918_pkg,_2929_logs) = _211bd3582_AnalyzePackage(_2918_files,jule::Trait<_211b1970a_Importer>(_2817_importer, 0),_2732_flags);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Ptr<_2120ac0a9_IR> _4417_ir = jule::new_ptr<_2120ac0a9_IR>(_2120ac0a9_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_211e09984_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_21220a47c_getAllUniquePasses(_4417_ir.get()._field_Main,_4417_ir.get()._field_Used);
	return std::make_tuple(_4417_ir,nullptr);
}



inline void _211c7ba59_appendStructs(_2120ac0a9_IR* _self_, jule::Ptr<_211b202d2_Package>& _5633_p, jule::Slice<jule::Ptr<_210e427d1_Struct>>& _5657_buffer) {
	{
		auto &expr = _5633_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_224dd5276:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _5721_f = *it;
			{
				{
					auto &expr = _5721_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_224dd5b28:;
					if (it != expr.end()) {
						jule::Ptr<_210e427d1_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								_5657_buffer = jule::alloc_for_append(_5657_buffer,1);_5657_buffer.__push(_5825_s);;
							};
						}
						_iter_next_224dd5b28:;
						++it;
						goto _iter_begin_224dd5b28;
					}
					_iter_end_224dd5b28:;
				};
			}
			_iter_next_224dd5276:;
			++it;
			goto _iter_begin_224dd5276;
		}
		_iter_end_224dd5276:;
	};
}



inline jule::Slice<jule::Ptr<_210e427d1_Struct>> _2120752c5_GetAllStructures(_2120ac0a9_IR* _self_) {
	jule::Slice<jule::Ptr<_210e427d1_Struct>> _6917_buffer = nullptr;;
	_211c7ba59_appendStructs(&(*_self_), (*_self_)._field_Main,_6917_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_224dd5892:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_211c7ba59_appendStructs(&(*_self_), _7121_u.get()._field_Package,_6917_buffer);
				};
			}
			_iter_next_224dd5892:;
			++it;
			goto _iter_begin_224dd5892;
		}
		_iter_end_224dd5892:;
	};
	return _6917_buffer;
}



inline void _21208874a_appendGlobals(_2120ac0a9_IR* _self_, jule::Ptr<_211b202d2_Package>& _7933_p, jule::Slice<jule::Ptr<_211b43228_Var>>& _7957_buffer) {
	{
		auto &expr = _7933_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_224dd84bb:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_224dd8d18:;
					if (it != expr.end()) {
						jule::Ptr<_211b43228_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								_7957_buffer = jule::alloc_for_append(_7957_buffer,1);_7957_buffer.__push(_8125_v);;
							};
						}
						_iter_next_224dd8d18:;
						++it;
						goto _iter_begin_224dd8d18;
					}
					_iter_end_224dd8d18:;
				};
			}
			_iter_next_224dd84bb:;
			++it;
			goto _iter_begin_224dd84bb;
		}
		_iter_end_224dd84bb:;
	};
}



inline jule::Slice<jule::Ptr<_211b43228_Var>> _21209c165_GetAllGlobals(_2120ac0a9_IR* _self_) {
	jule::Slice<jule::Ptr<_211b43228_Var>> _9217_buffer = nullptr;;
	_21208874a_appendGlobals(&(*_self_), (*_self_)._field_Main,_9217_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_224dda886:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_21208874a_appendGlobals(&(*_self_), _9421_u.get()._field_Package,_9217_buffer);
				};
			}
			_iter_next_224dda886:;
			++it;
			goto _iter_begin_224dda886;
		}
		_iter_end_224dda886:;
	};
	return _9217_buffer;
}



inline void _2120a3d3c_Order(_2120ac0a9_IR* _self_) {
	(*_self_)._field_Ordered._field_Structs=_2120752c5_GetAllStructures(&(*_self_));
	(*_self_)._field_Ordered._field_Globals=_21209c165_GetAllGlobals(&(*_self_));
	static__212245363_orderStructures((*_self_)._field_Ordered._field_Structs);
	static__21225a0c0_orderVars((*_self_)._field_Ordered._field_Globals);
}







std::ostream &operator<<(std::ostream &_Stream, _2120ac0a9_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _210e37c9e_Str(_210e6db2b_StructIns* _self_) {
	jule::Str _24917_kind = jule::Str();;
	_24917_kind+=(*_self_)._field_Decl.get()._field_Ident;
	if (((*_self_)._field_Generics.len() > 0LL)) {
		_24917_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_Generics;
			auto it = expr.begin();
			_iter_begin_223d7b98d:;
			if (it != expr.end()) {
				jule::Ptr<_211bb4c28_InsGeneric> &_25320_g = *it;
				{
					_24917_kind+=_211bb6851_Str(_25320_g.get()._field_Kind.ptr());
					_24917_kind+=jule::Str(",", 1);
				}
				_iter_next_223d7b98d:;
				++it;
				goto _iter_begin_223d7b98d;
			}
			_iter_end_223d7b98d:;
		};
		(_24917_kind).mut_slice(0LL,(_24917_kind.len() - 1LL));;
		_24917_kind+=jule::Str("]", 1);
	};
	return _24917_kind;
}



inline jule::Bool _210e444b4_Equals(jule::Ptr<_210e6db2b_StructIns> _self_, jule::Ptr<_211bb6455_TypeKind> _26422_other) {
	jule::Ptr<_210e6db2b_StructIns> _26513_s = _211bb99b9_Struct(_26422_other.ptr());;
	if ((_26513_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Decl != _26513_s.get()._field_Decl)) {
		return false;
	};
	if ((_self_.get()._field_Generics.len() != _26513_s.get()._field_Generics.len())) {
		return false;
	};
	jule::I64 _27817_i = 0LL;;
	for (; (_27817_i < _self_.get()._field_Generics.len()); (_27817_i)++) {
		{
			if ((!(_211bb6b5e_Equals(_self_.get()._field_Generics[_27817_i].get()._field_Kind, _26513_s.get()._field_Generics[_27817_i].get()._field_Kind)))) {
				return false;
			};
		}
	_iter_next_223d80255:;
	}
	_iter_end_223d80255:;;
	return true;
}



inline jule::Bool _210e4562a_Same(_210e6db2b_StructIns* _self_, jule::Ptr<_210e6db2b_StructIns> _29219_s) {
	if ((((*_self_)._field_Decl != _29219_s.get()._field_Decl) || (_29219_s.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_223d82785:;
		if (it != expr.end()) {
			jule::I64 _29613_i = it - expr.begin();
			jule::Ptr<_211bb4c28_InsGeneric> &_29616_g = *it;
			{
				if ((!(_211bb6b5e_Equals(_29616_g.get()._field_Kind, _29219_s.get()._field_Generics[_29613_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_223d82785:;
			++it;
			_29613_i++;
			goto _iter_begin_223d82785;
		}
		_iter_end_223d82785:;
	};
	return true;
}



inline jule::Ptr<_211020084_Fn> _210e4797e_FindMethod(_210e6db2b_StructIns* _self_, jule::Str _30629_ident, jule::Bool _30641_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_223d842c0:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> _30721_f = *it;
			{
				if (((_30721_f.get()._field_Statically == _30641_statically) && (_30721_f.get()._field_Ident == _30629_ident))) {
					return _30721_f;
				};
			}
			_iter_next_223d842c0:;
			++it;
			goto _iter_begin_223d842c0;
		}
		_iter_end_223d842c0:;
	};
	return nullptr;
}



inline jule::Ptr<_210e49e48_FieldIns> _210e48c9e_FindField(_210e6db2b_StructIns* _self_, jule::Str _31728_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_223d85579:;
		if (it != expr.end()) {
			jule::Ptr<_210e49e48_FieldIns> _31821_f = *it;
			{
				if ((_31821_f.get()._field_Decl.get()._field_Ident == _31728_ident)) {
					return _31821_f;
				};
			}
			_iter_next_223d85579:;
			++it;
			goto _iter_begin_223d85579;
		}
		_iter_end_223d85579:;
	};
	return nullptr;
}



inline jule::Ptr<_211b43228_Var> _210e4b7b8_FindStatic(_210e6db2b_StructIns* _self_, jule::Str _32829_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_223d85b73:;
		if (it != expr.end()) {
			jule::Ptr<_211b43228_Var> _32921_v = *it;
			{
				if ((_32921_v.get()._field_Ident == _32829_ident)) {
					return _32921_v;
				};
			}
			_iter_next_223d85b73:;
			++it;
			goto _iter_begin_223d85b73;
		}
		_iter_end_223d85b73:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _210e6db2b_StructIns _Src) {
	_Stream << _210e37c9e_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_21251d64c_ObjectDeadCode> static__21251da9d_new(jule::Ptr<_2120ac0a9_IR>& _3424_ir) {
	return jule::new_ptr<_21251d64c_ObjectDeadCode>(_21251d64c_ObjectDeadCode{._field_ir=_3424_ir});
}



inline jule::Bool _224e25c45_isLive(jule::Ptr<_21251d64c_ObjectDeadCode> _self_, jule::Ptr<_211031e42_Trait>& _4030_t) {
	jule::Slice<jule::Ptr<_211031e42_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_224e27cd0:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_224e279e4:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_224e284a6:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_224e284a6:;
			++it;
			_5213_i++;
			goto _iter_begin_224e284a6;
		}
		_iter_end_224e284a6:;
	};
	return false;
}

inline jule::Bool _224e2b19b_isLive(jule::Ptr<_21251d64c_ObjectDeadCode> _self_, jule::Ptr<_211022c35_FnIns>& _4030_t) {
	jule::Slice<jule::Ptr<_211022c35_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_224e2d412:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_224e2d357:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_224e2da94:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_224e2da94:;
			++it;
			_5213_i++;
			goto _iter_begin_224e2da94;
		}
		_iter_end_224e2da94:;
	};
	return false;
}

inline jule::Bool _224e35480_isLive(jule::Ptr<_21251d64c_ObjectDeadCode> _self_, jule::Ptr<_210e6db2b_StructIns>& _4030_t) {
	jule::Slice<jule::Ptr<_210e6db2b_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_224e3741b:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_224e37196:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_224e374e8:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_224e374e8:;
			++it;
			_5213_i++;
			goto _iter_begin_224e374e8;
		}
		_iter_end_224e374e8:;
	};
	return false;
}

inline jule::Bool _224e39d8b_isLive(jule::Ptr<_21251d64c_ObjectDeadCode> _self_, jule::Ptr<_211b43228_Var>& _4030_t) {
	jule::Slice<jule::Ptr<_211b43228_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_224e3bc17:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_224e3bae6:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_224e3bb4b:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_224e3bb4b:;
			++it;
			_5213_i++;
			goto _iter_begin_224e3bb4b;
		}
		_iter_end_224e3bb4b:;
	};
	return false;
}



inline void _224e262ea_pushLive(jule::Ptr<_21251d64c_ObjectDeadCode> _self_, jule::Ptr<_211031e42_Trait> _6035_t) {
	{
		
{
			_case_begin_224e2a024:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_224e29bc2:;
	};
}

inline void _224e30238_pushLive(jule::Ptr<_21251d64c_ObjectDeadCode> _self_, jule::Ptr<_211022c35_FnIns> _6035_t) {
	{
		
{
			_case_begin_224e30dc6:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_224e30b51:;
	};
}

inline void _224e33390_pushLive(jule::Ptr<_21251d64c_ObjectDeadCode> _self_, jule::Ptr<_210e6db2b_StructIns> _6035_t) {
	{
		
{
			_case_begin_224e34b77:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_224e3488b:;
	};
}

inline void _224e3d7a7_pushLive(jule::Ptr<_21251d64c_ObjectDeadCode> _self_, jule::Ptr<_211b43228_Var> _6035_t) {
	{
		
{
			_case_begin_224e3e29c:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_224e3e1c0:;
	};
}



inline void _21254bbec_setReferencesAsLive(jule::Ptr<_21251d64c_ObjectDeadCode> _self_, jule::Ptr<_211025b06_ReferenceStack>& _7344_rs) {
	if ((_7344_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _211026277_Len(_7344_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _211026585_At(_7344_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type_is<jule::Ptr<_211031e42_Trait>>()) {
					_case_begin_224e24c44:;
					{
						jule::Ptr<_211031e42_Trait> _8225_t = _7921_ref.operator jule::Ptr<_211031e42_Trait>();;
						if (_224e25c45_isLive(_self_, _8225_t)) {
							goto _iter_next_224e24084;
						};
						_224e262ea_pushLive(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_224e26718:;
							if (it != expr.end()) {
								jule::Ptr<_211020084_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_224e29c7c:;
										if (it != expr.end()) {
											jule::Ptr<_211022c35_FnIns> _8833_mins = *it;
											{
												if (_224e2b19b_isLive(_self_, _8833_mins)) {
													goto _iter_next_224e29c7c;
												};
												_224e30238_pushLive(_self_, _8833_mins);
												_21254bbec_setReferencesAsLive(_self_, _8833_mins.get()._field_Refers);
											}
											_iter_next_224e29c7c:;
											++it;
											goto _iter_begin_224e29c7c;
										}
										_iter_end_224e29c7c:;
									};
								}
								_iter_next_224e26718:;
								++it;
								goto _iter_begin_224e26718;
							}
							_iter_end_224e26718:;
						};
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_211022c35_FnIns>>()) {
					_case_begin_224e24caa:;
					{
						jule::Ptr<_211022c35_FnIns> _9725_f = _7921_ref.operator jule::Ptr<_211022c35_FnIns>();;
						if (_224e2b19b_isLive(_self_, _9725_f)) {
							goto _match_end_224e24b89;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_224e35480_isLive(_self_, _9725_f.get()._field_Owner)))) {
								_224e33390_pushLive(_self_, _9725_f.get()._field_Owner);
								_21254bbec_setReferencesAsLive(_self_, _9725_f.get()._field_Owner.get()._field_Refers);
							};
						};
						_224e30238_pushLive(_self_, _9725_f);
						_21254bbec_setReferencesAsLive(_self_, _9725_f.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_211b43228_Var>>()) {
					_case_begin_224e24ddc:;
					{
						jule::Ptr<_211b43228_Var> _11025_v = _7921_ref.operator jule::Ptr<_211b43228_Var>();;
						if (_224e39d8b_isLive(_self_, _11025_v)) {
							goto _match_end_224e24b89;
						};
						_224e3d7a7_pushLive(_self_, _11025_v);
						_21254bbec_setReferencesAsLive(_self_, _11025_v.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_210e6db2b_StructIns>>()) {
					_case_begin_224e24e53:;
					{
						jule::Ptr<_210e6db2b_StructIns> _11725_s = _7921_ref.operator jule::Ptr<_210e6db2b_StructIns>();;
						if (_224e35480_isLive(_self_, _11725_s)) {
							goto _match_end_224e24b89;
						};
						_224e33390_pushLive(_self_, _11725_s);
						_21254bbec_setReferencesAsLive(_self_, _11725_s.get()._field_Refers);
						{
							auto &expr = _11725_s.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_224e4765c:;
							if (it != expr.end()) {
								jule::Ptr<_211020084_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_224e47dcc:;
										if (it != expr.end()) {
											jule::Ptr<_211022c35_FnIns> _12433_mins = *it;
											{
												if (_224e2b19b_isLive(_self_, _12433_mins)) {
													goto _iter_next_224e47dcc;
												};
												_224e30238_pushLive(_self_, _12433_mins);
												_21254bbec_setReferencesAsLive(_self_, _12433_mins.get()._field_Refers);
											}
											_iter_next_224e47dcc:;
											++it;
											goto _iter_begin_224e47dcc;
										}
										_iter_end_224e47dcc:;
									};
								}
								_iter_next_224e4765c:;
								++it;
								goto _iter_begin_224e4765c;
							}
							_iter_end_224e4765c:;
						};
					}
				}
				_match_end_224e24b89:;
			};
		}
	_iter_next_224e24084:;
	}
	_iter_end_224e24084:;;
}



inline void _21254be72_inits(jule::Ptr<_21251d64c_ObjectDeadCode> _self_, jule::Ptr<_211b202d2_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_224e244a2:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_224e4a6b5:;
					if (it != expr.end()) {
						jule::Ptr<_211020084_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_Ident == jule::Str("init", 4))) {
								jule::Ptr<_211022c35_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_21254bbec_setReferencesAsLive(_self_, _14029_ins.get()._field_Refers);
							};
						}
						_iter_next_224e4a6b5:;
						++it;
						goto _iter_begin_224e4a6b5;
					}
					_iter_end_224e4a6b5:;
				};
			}
			_iter_next_224e244a2:;
			++it;
			goto _iter_begin_224e244a2;
		}
		_iter_end_224e244a2:;
	};
}



inline void _21254c1e7_collectLivePackage(jule::Ptr<_21251d64c_ObjectDeadCode> _self_, jule::Ptr<_211b202d2_Package>& _14843_pkg) {
	_21254be72_inits(_self_, _14843_pkg);
	if (_20c552895_Test) {
		{
			auto &expr = _14843_pkg.get()._field_Files;
			auto it = expr.begin();
			_iter_begin_224e4cc5b:;
			if (it != expr.end()) {
				jule::Ptr<_211b855ab_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_Funcs;
						auto it = expr.begin();
						_iter_begin_224e4d5ec:;
						if (it != expr.end()) {
							jule::Ptr<_211020084_Fn> _15529_f = *it;
							{
								if (_21254e20a_hasDirective(_15529_f.get()._field_Directives,jule::Str("test", 4))) {
									jule::Ptr<_211022c35_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_21254bbec_setReferencesAsLive(_self_, _15733_ins.get()._field_Refers);
								};
							}
							_iter_next_224e4d5ec:;
							++it;
							goto _iter_begin_224e4d5ec;
						}
						_iter_end_224e4d5ec:;
					};
				}
				_iter_next_224e4cc5b:;
				++it;
				goto _iter_begin_224e4cc5b;
			}
			_iter_end_224e4cc5b:;
		};
	};
}



inline void _21254c3c3_collectLive(jule::Ptr<_21251d64c_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_224e29650:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_21254c1e7_collectLivePackage(_self_, _16721_used.get()._field_Package);
				};
			}
			_iter_next_224e29650:;
			++it;
			goto _iter_begin_224e29650;
		}
		_iter_end_224e29650:;
	};
	_21254c1e7_collectLivePackage(_self_, _self_.get()._field_ir.get()._field_Main);
	jule::Ptr<_211020084_Fn> _17517_main = _211b21a86_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_211022c35_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_21254bbec_setReferencesAsLive(_self_, _17617_ins.get()._field_Refers);
}



inline void _21254c648_removeDeadGlobals(jule::Ptr<_21251d64c_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_211b43228_Var>>& _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18142_vars.len())) {
		{
			jule::Ptr<_211b43228_Var> _18417_v = _18142_vars[_18217_i];;
			if (_224e39d8b_isLive(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_224e53635;
			};
			_18142_vars=jule::append(_18142_vars.slice(0LL,_18217_i),_18142_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_224e53635:;
	}
	_iter_end_224e53635:;;
}



inline void _21254c8bd_removeDeadFns(jule::Ptr<_21251d64c_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_211020084_Fn>>& _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19338_funcs.len())) {
		{
			jule::Ptr<_211020084_Fn> _19621_f = _19338_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_211022c35_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_224e2b19b_isLive(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_224e56c76;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL,_19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_224e56c76:;
			}
			_iter_end_224e56c76:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				_19338_funcs=jule::append(_19338_funcs.slice(0LL,_19417_i),_19338_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_224e55549;
			};
			(_19417_i)++;
		}
	_iter_next_224e55549:;
	}
	_iter_end_224e55549:;;
}



inline void _21254cb43_removeDeadStructs(jule::Ptr<_21251d64c_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_210e427d1_Struct>>& _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21442_structs.len())) {
		{
			jule::Ptr<_210e427d1_Struct> _21721_s = _21442_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_210e6db2b_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_21254c8bd_removeDeadFns(_self_, _22025_ins.get()._field_Methods);
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _224e35480_isLive(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_224e5b022;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL,_21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_224e5b022:;
			}
			_iter_end_224e5b022:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				_21442_structs=jule::append(_21442_structs.slice(0LL,_21517_i),_21442_structs.slice((_21517_i + 1LL)));
				goto _iter_next_224e560b6;
			};
			(_21517_i)++;
		}
	_iter_next_224e560b6:;
	}
	_iter_end_224e560b6:;;
}



inline void _21254cdb8_removeDeadTraits(jule::Ptr<_21251d64c_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_211031e42_Trait>>& _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23641_traits.len())) {
		{
			jule::Ptr<_211031e42_Trait> _23921_t = _23641_traits[_23717_i];;
			if ((!(_224e25c45_isLive(_self_, _23921_t)))) {
				_23641_traits=jule::append(_23641_traits.slice(0LL,_23717_i),_23641_traits.slice((_23717_i + 1LL)));
				goto _iter_next_224e5d94d;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_210e427d1_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_224e606db;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL,_24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_224e606db:;
			}
			_iter_end_224e606db:;;
			(_23717_i)++;
		}
	_iter_next_224e5d94d:;
	}
	_iter_end_224e5d94d:;;
}



inline void _21254d13d_removeDeadsFile(jule::Ptr<_21251d64c_ObjectDeadCode> _self_, jule::Ptr<_211b855ab_SymbolTable>& _25740_file) {
	_21254c8bd_removeDeadFns(_self_, _25740_file.get()._field_Funcs);
	_21254cb43_removeDeadStructs(_self_, _25740_file.get()._field_Structs);
	_21254cdb8_removeDeadTraits(_self_, _25740_file.get()._field_Traits);
	_21254c648_removeDeadGlobals(_self_, _25740_file.get()._field_Vars);
}



inline void _21254d3b3_removeDeadsPackage(jule::Ptr<_21251d64c_ObjectDeadCode> _self_, jule::Ptr<_211b202d2_Package>& _26443_pkg) {
	{
		auto &expr = _26443_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_224e6536c:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _26521_file = *it;
			{
				_21254d13d_removeDeadsFile(_self_, _26521_file);
			}
			_iter_next_224e6536c:;
			++it;
			goto _iter_begin_224e6536c;
		}
		_iter_end_224e6536c:;
	};
}



inline void _21254d58e_removeDeads(jule::Ptr<_21251d64c_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_224e662a2:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_21254d3b3_removeDeadsPackage(_self_, _27121_used.get()._field_Package);
				};
			}
			_iter_next_224e662a2:;
			++it;
			goto _iter_begin_224e662a2;
		}
		_iter_end_224e662a2:;
	};
	_21254d3b3_removeDeadsPackage(_self_, _self_.get()._field_ir.get()._field_Main);
}



inline void _21254d76a_elimanate(jule::Ptr<_21251d64c_ObjectDeadCode> _self_) {
	_21254c3c3_collectLive(_self_);
	_21254d58e_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _21251d64c_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_212b406ec_ObjectCoder> static__212b23724_New(jule::Ptr<_2120ac0a9_IR>& _7224_ir, _212b40323_SerializationInfo _7233_info) {
	jule::Ptr<_212b406ec_ObjectCoder> _7317_oc = jule::new_ptr<_212b406ec_ObjectCoder>(_212b406ec_ObjectCoder{._field_ir=_7224_ir, ._field_info=_7233_info, });;
	_7317_oc.get()._field_ec=static__212ab772e_new(_7317_oc);
	_7317_oc.get()._field_sc=static__212aaee0d_new(_7317_oc);
	return _7317_oc;
}



inline void _212b23a54_write(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Str _8225_s) {
	_self_.get()._field_Obj+=_8225_s;
}



inline void _212b242e6_addIndent(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	;
	_self_.get()._field_indentBuffer+=jule::Str("\t", 1);
}



inline void _212b252d6_doneIndent(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL,(_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _212b25a34_indent(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _212b14da8_findTypeOffset(_212b406ec_ObjectCoder* _self_, jule::Ptr<_211031e42_Trait> _10229_t, jule::Ptr<_211bb6455_TypeKind> _10244_k) {
	if ((_10229_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_210e6db2b_StructIns> _10617_s = nullptr;;
	if ((_211bb87cb_Sptr(_10244_k.ptr()) != nullptr)) {
		_10244_k=_211bb87cb_Sptr(_10244_k.ptr()).get()._field_Elem;
	};
	if ((_211bb99b9_Struct(_10244_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10617_s=_211bb99b9_Struct(_10244_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_22535c2ad:;
		if (it != expr.end()) {
			jule::Ptr<_212b40510_traitHash> &_11416_hash = *it;
			{
				if (((_11416_hash.get()._field_t == _10229_t) && (_11416_hash.get()._field_s == _10617_s))) {
					return _11416_hash.get()._field_i;
				};
			}
			_iter_next_22535c2ad:;
			++it;
			goto _iter_begin_22535c2ad;
		}
		_iter_end_22535c2ad:;
	};
	return -1LL;
}



inline void _212b26e20_locInfo(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_20e7ddc0b_Token>& _12328_t) {
	jule::Str &_12414_loc = _12328_t.get()._field_File.get()._field_Path;;
	if (_20c5533ce_Production) {
		{
			
			if (_20e4446b9_HasPrefix(_12414_loc,_20e508aad_PathStdlib)) {
				_case_begin_22535e7aa:;
				{
					_212b23a54_write(_self_, _212ac385b_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_20d49e7d0_Dir(_20e508aad_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_20e4446b9_HasPrefix(_12414_loc,_self_.get()._field_ir.get()._field_Root)) {
				_case_begin_22535e47a:;
				{
					_212b23a54_write(_self_, _212ac385b_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_20d49e7d0_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_22535e414:;
				{
					_212b23a54_write(_self_, _212ac385b_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
				}
			}
			_match_end_22535e337:;
		};
	} else {
		_212b23a54_write(_self_, _212ac385b_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
	};
	_212b23a54_write(_self_, jule::Str(":", 1));
	_212b23a54_write(_self_, _211b07275_Itoa(_12328_t.get()._field_Row));
	_212b23a54_write(_self_, jule::Str(":", 1));
	_212b23a54_write(_self_, _211b07275_Itoa(_12328_t.get()._field_Column));
}



inline void _212b016e1_head(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	_212b39eee_Time _15013_time = static__212b3a593_Now();;
	_212b3985b_AbsTime _15113_abs = _212b3bbd2_Abs(&_15013_time);;
	_212b23a54_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_212b23a54_write(_self_, jule::Str("// JuleC version: ", 18));
	_212b23a54_write(_self_, jule::Str("jule0.0.12 @master", 18));
	_212b23a54_write(_self_, jule::Str("\n", 1));
	_212b23a54_write(_self_, jule::Str("// Date: ", 9));
	_212b23a54_write(_self_, _211b07011_FmtUint(_15113_abs._field_Day,10LL));
	_212b23a54_write(_self_, jule::Str("/", 1));
	_212b23a54_write(_self_, _211b07011_FmtUint(_15113_abs._field_Month,10LL));
	_212b23a54_write(_self_, jule::Str("/", 1));
	_212b23a54_write(_self_, _211b07011_FmtUint(_15113_abs._field_Year,10LL));
	_212b23a54_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_212b23a54_write(_self_, _self_.get()._field_info._field_Compiler);
	_212b23a54_write(_self_, jule::Str(" ", 1));
	_212b23a54_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_212b23a54_write(_self_, jule::Str("\n\n", 2));
	if (_20c5533ce_Production) {
		_212b23a54_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_20c552ba3_RC))) {
		_212b23a54_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_20c5530c1_Safety))) {
		_212b23a54_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_212b23a54_write(_self_, jule::Str("\n\n#include \"", 12));
	_212b23a54_write(_self_, _20e518848_PathApi);
	_212b23a54_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _212b24a44_links(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_225370865:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _18316_used = *it;
			{
				{
					
					if ((!(_18316_used.get()._field_CppLinked))) {
						_case_begin_22537238e:;
						{
							goto _iter_next_225370865;
						}
					}
					else if (_20e4ad755_IsStdHeaderPath(_18316_used.get()._field_Path)) {
						_case_begin_225371756:;
						{
							_212b23a54_write(_self_, jule::Str("#include ", 9));
							_212b23a54_write(_self_, _18316_used.get()._field_Path);
							_212b23a54_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_2253713b0:;
						{
							_212b23a54_write(_self_, jule::Str("#include \"", 10));
							_212b23a54_write(_self_, _18316_used.get()._field_Path);
							_212b23a54_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_2253712d3:;
				};
			}
			_iter_next_225370865:;
			++it;
			goto _iter_begin_225370865;
		}
		_iter_end_225370865:;
	};
}



inline void _212b0501e_prepareStructures(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_225371091:;
		if (it != expr.end()) {
			jule::Ptr<_210e427d1_Struct> _20021_s = *it;
			{
				if ((_20021_s.get()._field_Token != nullptr)) {
					_212b4527e_prepareStructure(_20021_s);
				};
			}
			_iter_next_225371091:;
			++it;
			goto _iter_begin_225371091;
		}
		_iter_end_225371091:;
	};
}



inline void _212b11bb8_iterPackages(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_211b202d2_Package>&)> _20732_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_22537413d:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _20821_used = *it;
			{
				if ((!(_20821_used.get()._field_CppLinked))) {
					_20732_f(_20821_used.get()._field_Package);
				};
			}
			_iter_next_22537413d:;
			++it;
			goto _iter_begin_22537413d;
		}
		_iter_end_22537413d:;
	};
	_20732_f(_self_.get()._field_ir.get()._field_Main);
}



inline void _212b1224b_buildTraitMap(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	_212b11bb8_iterPackages(_self_, jule::Fn<void(jule::Ptr<_211b202d2_Package>&)>([=](jule::Ptr<_211b202d2_Package>& _21735_pkg) mutable -> void {
		_212b4502b_iterFiles(_21735_pkg,jule::Fn<void(jule::Ptr<_211b855ab_SymbolTable>&)>([=](jule::Ptr<_211b855ab_SymbolTable>& _21836_file) mutable -> void {
			{
				auto &expr = _21836_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_225378043:;
				if (it != expr.end()) {
					jule::Ptr<_211031e42_Trait> _21929_t = *it;
					{
						if ((_21929_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_21929_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_212b40510_traitHash>(_212b40510_traitHash{._field_t=_21929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_225378043;
						};
						jule::I64 _23129_i = 0LL;;
						{
							auto &expr = _21929_t.get()._field_Implemented;
							auto it = expr.begin();
							_iter_begin_22537a1bb:;
							if (it != expr.end()) {
								jule::Ptr<_210e427d1_Struct> _23233_s = *it;
								{
									{
										auto &expr = _23233_s.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_22537a95d:;
										if (it != expr.end()) {
											jule::Ptr<_210e6db2b_StructIns> _23337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_212b40510_traitHash>(_212b40510_traitHash{._field_t=_21929_t, ._field_s=_23337_ins, ._field_i=_23129_i}));;
												(_23129_i)++;
											}
											_iter_next_22537a95d:;
											++it;
											goto _iter_begin_22537a95d;
										}
										_iter_end_22537a95d:;
									};
								}
								_iter_next_22537a1bb:;
								++it;
								goto _iter_begin_22537a1bb;
							}
							_iter_end_22537a1bb:;
						};
					}
					_iter_next_225378043:;
					++it;
					goto _iter_begin_225378043;
				}
				_iter_end_225378043:;
			};
		}));
	}));
}



inline void _212b1311a_traitDecls(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	_212b11bb8_iterPackages(_self_, jule::Fn<void(jule::Ptr<_211b202d2_Package>&)>([=](jule::Ptr<_211b202d2_Package>& _24835_pkg) mutable -> void {
		_212b4502b_iterFiles(_24835_pkg,jule::Fn<void(jule::Ptr<_211b855ab_SymbolTable>&)>([=](jule::Ptr<_211b855ab_SymbolTable>& _24936_file) mutable -> void {
			{
				auto &expr = _24936_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_22537cbb3:;
				if (it != expr.end()) {
					jule::Ptr<_211031e42_Trait> _25029_t = *it;
					{
						if ((_25029_t.get()._field_Token == nullptr)) {
							return;;
						};
						_212b25a34_indent(_self_);
						_212b23a54_write(_self_, jule::Str("struct ", 7));
						_212b23a54_write(_self_, static__212aca236_traitDecl(_25029_t));
						_212b23a54_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_22537cbb3:;
					++it;
					goto _iter_begin_22537cbb3;
				}
				_iter_end_22537cbb3:;
			};
		}));
	}));
}



inline void _212b137d0_structurePlainDecl(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_210e427d1_Struct>& _26343_s) {
	{
		auto &expr = _26343_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_22537c80b:;
		if (it != expr.end()) {
			jule::Ptr<_210e6db2b_StructIns> _26421_ins = *it;
			{
				_212b23a54_write(_self_, jule::Str("struct ", 7));
				_212b23a54_write(_self_, static__212acaa1c_structureIns(_26421_ins));
				_212b23a54_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_22537c80b:;
			++it;
			goto _iter_begin_22537c80b;
		}
		_iter_end_22537c80b:;
	};
}



inline void _212b13e95_structurePlainDecls(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_225380e3b:;
		if (it != expr.end()) {
			jule::Ptr<_210e427d1_Struct> _27221_s = *it;
			{
				if ((_27221_s.get()._field_Token != nullptr)) {
					_212b137d0_structurePlainDecl(_self_, _27221_s);
				};
			}
			_iter_next_225380e3b:;
			++it;
			goto _iter_begin_225380e3b;
		}
		_iter_end_225380e3b:;
	};
}



inline void _212b1465a_fieldDecl(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_210e49e48_FieldIns>& _27934_f) {
	_212b23a54_write(_self_, static__212b4b0dc_kind(_27934_f.get()._field_Kind));
	_212b23a54_write(_self_, jule::Str(" ", 1));
	_212b23a54_write(_self_, static__212acacb4_field(_27934_f.get()._field_Decl));
	_212b23a54_write(_self_, jule::Str(" = ", 3));
	if ((_27934_f.get()._field_Default == nullptr)) {
		_212ac2e76_initExpr(_self_.get()._field_ec, _27934_f.get()._field_Kind);
	} else {
		_212ac297b_expr(_self_.get()._field_ec, _27934_f.get()._field_Default.get()._field_Model);
	};
	_212b23a54_write(_self_, jule::Str(";", 1));
}



inline void _212b063d8_structureDestructor(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_210e6db2b_StructIns>& _29444_s) {
	;
	jule::Ptr<_211020084_Fn> _29713_disposeMethod = _210e4797e_FindMethod(_29444_s.ptr(), jule::Str("Dispose", 7),false);;
	jule::Bool _29817_disposed = static__211b443c2_Dispose(_29713_disposeMethod);;
	if ((!(_29817_disposed))) {
		return;;
	};
	_212b23a54_write(_self_, jule::Str("~", 1));
	_212b23a54_write(_self_, static__212acaa1c_structureIns(_29444_s));
	_212b23a54_write(_self_, jule::Str("(void) { ", 9));
	_212b23a54_write(_self_, static__212ac9be7_func(_29713_disposeMethod));
	_212b23a54_write(_self_, jule::Str("(this); }", 9));
}



inline void _212b40c91_structureDeriveDefsDecls(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_210e6db2b_StructIns>& _31045_s) {
	if (_210e3442c_IsDerives(_31045_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_212b25a34_indent(_self_);
		_212b23a54_write(_self_, static__212ac5781_cloneFuncDecl(_31045_s.get()._field_Decl));
		_212b23a54_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _212b40dc3_structureOperatorEq(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Str& _31840_ident, jule::Ptr<_210e6db2b_StructIns>& _31857_s) {
	if ((_31857_s.get()._field_Operators._field_Eq != nullptr)) {
		_212b41137_structureOperator(_self_, _31840_ident,_31857_s.get()._field_Operators._field_Eq,jule::Str("==", 2));
		return;;
	};
	_212b25a34_indent(_self_);
	if (_20e85659d_Inline) {
		_212b23a54_write(_self_, jule::Str("inline ", 7));
	};
	_212b23a54_write(_self_, jule::Str("bool operator==(", 16));
	_212b23a54_write(_self_, _31840_ident);
	_212b23a54_write(_self_, jule::Str(" _other) {", 10));
	if ((_31857_s.get()._field_Fields.len() > 0LL)) {
		_212b242e6_addIndent(_self_);
		_212b23a54_write(_self_, jule::Str("\n", 1));
		_212b25a34_indent(_self_);
		_212b23a54_write(_self_, jule::Str("return ", 7));
		_212b242e6_addIndent(_self_);
		jule::Bool _33821_writed = false;;
		{
			auto &expr = _31857_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_22538d7d9:;
			if (it != expr.end()) {
				jule::Ptr<_210e49e48_FieldIns> _33925_f = *it;
				{
					jule::Ptr<_210e6db2b_StructIns> _34121_strct = _211bb99b9_Struct(_33925_f.get()._field_Kind.ptr());;
					if ((((_34121_strct != nullptr) && (_34121_strct.get()._field_Decl != nullptr)) && _34121_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_22538d7d9;
					};
					if (_33821_writed) {
						_212b23a54_write(_self_, jule::Str(" &&", 3));
					};
					_33821_writed=true;
					_212b23a54_write(_self_, jule::Str("\n", 1));
					_212b25a34_indent(_self_);
					_212b23a54_write(_self_, jule::Str("this->", 6));
					jule::Str _35321_fIdent = static__212acacb4_field(_33925_f.get()._field_Decl);;
					_212b23a54_write(_self_, _35321_fIdent);
					_212b23a54_write(_self_, jule::Str(" == _other.", 11));
					_212b23a54_write(_self_, _35321_fIdent);
				}
				_iter_next_22538d7d9:;
				++it;
				goto _iter_begin_22538d7d9;
			}
			_iter_end_22538d7d9:;
		};
		_212b252d6_doneIndent(_self_);
		if ((!(_33821_writed))) {
			_212b23a54_write(_self_, jule::Str("true", 4));
		};
		_212b23a54_write(_self_, jule::Str(";\n", 2));
		_212b252d6_doneIndent(_self_);
		_212b25a34_indent(_self_);
		_212b23a54_write(_self_, jule::Str("}", 1));
	} else {
		_212b23a54_write(_self_, jule::Str(" return true; }", 15));
	};
	_212b23a54_write(_self_, jule::Str("\n\n", 2));
}



inline void _212b41005_structureOperatorNotEq(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Str& _37243_ident, jule::Ptr<_210e6db2b_StructIns>& _37260_s) {
	_212b25a34_indent(_self_);
	if (_20e85659d_Inline) {
		_212b23a54_write(_self_, jule::Str("inline ", 7));
	};
	_212b23a54_write(_self_, jule::Str("bool operator!=(", 16));
	_212b23a54_write(_self_, _37243_ident);
	_212b23a54_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _212b41137_structureOperator(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Str& _38338_ident, jule::Ptr<_211022c35_FnIns>& _38355_f, jule::Str _38366_op) {
	if ((_38355_f == nullptr)) {
		return;;
	};
	jule::Bool _38813_unary = (_38355_f.get()._field_Params.len() == 1LL);;
	jule::Bool _38913_assignment = _2110204e6_IsVoid(_38355_f.get()._field_Decl.ptr());;
	_212b25a34_indent(_self_);
	if (_20e85659d_Inline) {
		_212b23a54_write(_self_, jule::Str("inline ", 7));
	};
	if (_38913_assignment) {
		_212b23a54_write(_self_, _38338_ident);
		_212b23a54_write(_self_, jule::Str("&", 1));
	} else {
		if ((_211bb8567_Prim(_38355_f.get()._field_Result.ptr()) == nullptr)) {
			_212b23a54_write(_self_, _38338_ident);
		} else {
			_212b23a54_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_212b23a54_write(_self_, jule::Str(" operator", 9));
	_212b23a54_write(_self_, _38366_op);
	_212b23a54_write(_self_, jule::Str("(", 1));
	if ((!(_38813_unary))) {
		jule::Ptr<_211021d66_ParamIns> _41121_p = _38355_f.get()._field_Params[1LL];;
		_212b23a54_write(_self_, static__212b4a2b7_paramIns(_41121_p));
		_212b23a54_write(_self_, jule::Str(" _other", 7));
	};
	_212b23a54_write(_self_, jule::Str(") { ", 4));
	if ((!(_38913_assignment))) {
		_212b23a54_write(_self_, jule::Str("return ", 7));
	};
	_212b23a54_write(_self_, static__212ac9e8e_funcIns(_38355_f));
	if ((!(_38813_unary))) {
		_212b23a54_write(_self_, jule::Str("(this, _other); ", 16));
		if (_38913_assignment) {
			_212b23a54_write(_self_, jule::Str("return *this; ", 14));
		};
		_212b23a54_write(_self_, jule::Str("}", 1));
	} else {
		_212b23a54_write(_self_, jule::Str("(this); }", 9));
	};
	_212b23a54_write(_self_, jule::Str("\n\n", 2));
}



inline void _212b41269_structureOperators(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_210e6db2b_StructIns>& _43243_s) {
	jule::Str _43313_ident = static__212acaa1c_structureIns(_43243_s);;
	_212b40dc3_structureOperatorEq(_self_, _43313_ident,_43243_s);
	_212b41005_structureOperatorNotEq(_self_, _43313_ident,_43243_s);
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Gt,jule::Str(">", 1));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_GtEq,jule::Str(">=", 2));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Lt,jule::Str("<", 1));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_LtEq,jule::Str("<=", 2));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Shl,jule::Str("<<", 2));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Shr,jule::Str(">>", 2));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Add,jule::Str("+", 1));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Sub,jule::Str("-", 1));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Div,jule::Str("/", 1));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Mul,jule::Str("*", 1));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Mod,jule::Str("%", 1));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitAnd,jule::Str("&", 1));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitOr,jule::Str("|", 1));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitXor,jule::Str("^", 1));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Neg,jule::Str("-", 1));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Pos,jule::Str("+", 1));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitNot,jule::Str("~", 1));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_AddAssign,jule::Str("+=", 2));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_SubAssign,jule::Str("-=", 2));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_DivAssign,jule::Str("/=", 2));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_MulAssign,jule::Str("*=", 2));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ModAssign,jule::Str("%=", 2));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ShlAssign,jule::Str("<<=", 3));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ShrAssign,jule::Str(">>=", 3));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitOrAssign,jule::Str("|=", 2));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitAndAssign,jule::Str("&=", 2));
	_212b41137_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitXorAssign,jule::Str("^=", 2));
}



inline void _212b4139b_structureInsDecl(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_210e6db2b_StructIns>& _47141_s) {
	if ((_47141_s.get()._field_Methods.len() > 0LL)) {
		{
			auto &expr = _47141_s.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_2253ac176:;
			if (it != expr.end()) {
				jule::Ptr<_211020084_Fn> _47325_m = *it;
				{
					_212b419a6_funcDecl(_self_, _47325_m,false);
				}
				_iter_next_2253ac176:;
				++it;
				goto _iter_begin_2253ac176;
			}
			_iter_end_2253ac176:;
		};
	};
	_212b23a54_write(_self_, jule::Str("struct ", 7));
	jule::Str _47913_outIdent = static__212acaa1c_structureIns(_47141_s);;
	_212b23a54_write(_self_, _47913_outIdent);
	_212b23a54_write(_self_, jule::Str(" {\n", 3));
	_212b242e6_addIndent(_self_);
	{
		auto &expr = _47141_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_2253adb5b:;
		if (it != expr.end()) {
			jule::Ptr<_210e49e48_FieldIns> _48521_f = *it;
			{
				_212b25a34_indent(_self_);
				_212b1465a_fieldDecl(_self_, _48521_f);
				_212b23a54_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_2253adb5b:;
			++it;
			goto _iter_begin_2253adb5b;
		}
		_iter_end_2253adb5b:;
	};
	_212b25a34_indent(_self_);
	_212b063d8_structureDestructor(_self_, _47141_s);
	_212b23a54_write(_self_, jule::Str("\n\n", 2));
	_212b25a34_indent(_self_);
	_212b23a54_write(_self_, _47913_outIdent);
	_212b23a54_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_212b40c91_structureDeriveDefsDecls(_self_, _47141_s);
	_212b41269_structureOperators(_self_, _47141_s);
	_212b23a54_write(_self_, jule::Str("\n", 1));
	_212b252d6_doneIndent(_self_);
	_212b25a34_indent(_self_);
	_212b23a54_write(_self_, jule::Str("};", 2));
}



inline void _212b414cd_structureDecl(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_210e427d1_Struct>& _51038_s) {
	{
		auto &expr = _51038_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_2253b339c:;
		if (it != expr.end()) {
			jule::Ptr<_210e6db2b_StructIns> _51121_ins = *it;
			{
				_212b4139b_structureInsDecl(_self_, _51121_ins);
			}
			_iter_next_2253b339c:;
			++it;
			goto _iter_begin_2253b339c;
		}
		_iter_end_2253b339c:;
	};
}



inline void _212b41610_structureDecls(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_2253b42d2:;
		if (it != expr.end()) {
			jule::Ptr<_210e427d1_Struct> _51721_s = *it;
			{
				if ((_51721_s.get()._field_Token != nullptr)) {
					_212b414cd_structureDecl(_self_, _51721_s);
					_212b23a54_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_2253b42d2:;
			++it;
			goto _iter_begin_2253b42d2;
		}
		_iter_end_2253b42d2:;
	};
}



inline void _212b41742_paramsDecls(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Slice<jule::Ptr<_211021d66_ParamIns>>& _52536_params) {
	if ((_52536_params.len() == 0LL)) {
		_212b23a54_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_212b23a54_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _52536_params;
		auto it = expr.begin();
		_iter_begin_2253b64d2:;
		if (it != expr.end()) {
			jule::I64 _53214_i = it - expr.begin();
			jule::Ptr<_211021d66_ParamIns> _53221_p = *it;
			{
				_212b23a54_write(_self_, static__212b4a2b7_paramIns(_53221_p));
				if (((_52536_params.len() - _53214_i) > 1LL)) {
					_212b23a54_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_2253b64d2:;
			++it;
			_53214_i++;
			goto _iter_begin_2253b64d2;
		}
		_iter_end_2253b64d2:;
	};
	_212b23a54_write(_self_, jule::Str(")", 1));
}



inline void _212b41874_funcHead(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_211022c35_FnIns>& _54233_f, jule::Bool _54244_ptr) {
	if ((((!(_54244_ptr)) && _20e85659d_Inline) && (!(_2110209be_IsEntryPoint(_54233_f.get()._field_Decl.ptr()))))) {
		_212b23a54_write(_self_, jule::Str("inline ", 7));
	};
	_212b23a54_write(_self_, static__212b4a806_funcInsResult(_54233_f));
	if (_54244_ptr) {
		_212b23a54_write(_self_, jule::Str("(*", 2));
		_212b23a54_write(_self_, static__212ac9e8e_funcIns(_54233_f));
		_212b23a54_write(_self_, jule::Str(")", 1));
	} else {
		_212b23a54_write(_self_, jule::Str(" ", 1));
		_212b23a54_write(_self_, static__212ac9e8e_funcIns(_54233_f));
	};
}



inline void _212b419a6_funcDecl(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_211020084_Fn>& _55733_f, jule::Bool _55741_ptr) {
	{
		auto &expr = _55733_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_2253bb98d:;
		if (it != expr.end()) {
			jule::Ptr<_211022c35_FnIns> _55821_c = *it;
			{
				_212b25a34_indent(_self_);
				_212b41874_funcHead(_self_, _55821_c,_55741_ptr);
				_212b41742_paramsDecls(_self_, _55821_c.get()._field_Params);
				_212b23a54_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_2253bb98d:;
			++it;
			goto _iter_begin_2253bb98d;
		}
		_iter_end_2253bb98d:;
	};
}



inline void _212b41ad8_funcDecls(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	_212b11bb8_iterPackages(_self_, jule::Fn<void(jule::Ptr<_211b202d2_Package>&)>([=](jule::Ptr<_211b202d2_Package>& _56735_pkg) mutable -> void {
		_212b4502b_iterFiles(_56735_pkg,jule::Fn<void(jule::Ptr<_211b855ab_SymbolTable>&)>([=](jule::Ptr<_211b855ab_SymbolTable>& _56836_file) mutable -> void {
			{
				auto &expr = _56836_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_2253c00e0:;
				if (it != expr.end()) {
					jule::Ptr<_211020084_Fn> _56929_f = *it;
					{
						if (((!(_56929_f.get()._field_CppLinked)) && (_56929_f.get()._field_Token != nullptr))) {
							_212b419a6_funcDecl(_self_, _56929_f,false);
						};
					}
					_iter_next_2253c00e0:;
					++it;
					goto _iter_begin_2253c00e0;
				}
				_iter_end_2253c00e0:;
			};
		}));
	}));
}



inline void _212b41c1a_traitDataTypes(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	_212b11bb8_iterPackages(_self_, jule::Fn<void(jule::Ptr<_211b202d2_Package>&)>([=](jule::Ptr<_211b202d2_Package>& _57935_pkg) mutable -> void {
		_212b4502b_iterFiles(_57935_pkg,jule::Fn<void(jule::Ptr<_211b855ab_SymbolTable>&)>([=](jule::Ptr<_211b855ab_SymbolTable>& _58036_file) mutable -> void {
			{
				auto &expr = _58036_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_2253c2e28:;
				if (it != expr.end()) {
					jule::Ptr<_211031e42_Trait> _58129_t = *it;
					{
						if ((_58129_t.get()._field_Token == nullptr)) {
							return;;
						};
						_212b23a54_write(_self_, jule::Str("struct ", 7));
						_212b23a54_write(_self_, static__212aca236_traitDecl(_58129_t));
						_212b23a54_write(_self_, jule::Str("MptrData", 8));
						_212b23a54_write(_self_, jule::Str(" {\n", 3));
						_212b242e6_addIndent(_self_);
						{
							auto &expr = _58129_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_2253c4c3d:;
							if (it != expr.end()) {
								jule::Ptr<_211020084_Fn> _59033_m = *it;
								{
									jule::Ptr<_211022c35_FnIns> _59133_ins = _59033_m.get()._field_Instances[0LL];;
									jule::Ptr<_211021d66_ParamIns> _59233_p = _59133_ins.get()._field_Params[0LL];;
									_59233_p.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_58129_t, 2)});
									{
										auto expr = _59133_ins.get()._field_Params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_2253c625b:;
										if (it != expr.end()) {
											jule::I64 _59630_i = it - expr.begin();
											jule::Ptr<_211021d66_ParamIns> _59637_ip = *it;
											{
												if (_20e7e1747_IsAnonIdent(_59637_ip.get()._field_Decl.get()._field_Ident)) {
													_59637_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _211b07275_Itoa(_59630_i));
												};
											}
											_iter_next_2253c625b:;
											++it;
											_59630_i++;
											goto _iter_begin_2253c625b;
										}
										_iter_end_2253c625b:;
									};
									if ((!(_20c5533ce_Production))) {
										_59133_ins.get()._field_Params = jule::alloc_for_append(_59133_ins.get()._field_Params,1);_59133_ins.get()._field_Params.__push(jule::new_ptr<_211021d66_ParamIns>(_211021d66_ParamIns{._field_Decl=jule::new_ptr<_21101d747_Param>(_21101d747_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_212b4623b_customType>(_212b4623b_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_212b419a6_funcDecl(_self_, _59033_m,true);
								}
								_iter_next_2253c4c3d:;
								++it;
								goto _iter_begin_2253c4c3d;
							}
							_iter_end_2253c4c3d:;
						};
						_212b252d6_doneIndent(_self_);
						_212b25a34_indent(_self_);
						_212b23a54_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_2253c2e28:;
					++it;
					goto _iter_begin_2253c2e28;
				}
				_iter_end_2253c2e28:;
			};
		}));
	}));
}



inline void _212b41d4c_paramIns(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_211021d66_ParamIns>& _62333_p) {
	_212b23a54_write(_self_, static__212b4a2b7_paramIns(_62333_p));
	_212b23a54_write(_self_, jule::Str(" ", 1));
	_212b23a54_write(_self_, static__212aca4cd_param(_62333_p.get()._field_Decl));
}



inline void _212b42039_paramsIns(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Slice<jule::Ptr<_211021d66_ParamIns>>& _62934_params) {
	if ((_62934_params.len() == 0LL)) {
		_212b23a54_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_212b23a54_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _62934_params;
		auto it = expr.begin();
		_iter_begin_2253cbae1:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_211021d66_ParamIns> _63521_p = *it;
			{
				_212b41d4c_paramIns(_self_, _63521_p);
				if (((_62934_params.len() - _63514_i) > 1LL)) {
					_212b23a54_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_2253cbae1:;
			++it;
			_63514_i++;
			goto _iter_begin_2253cbae1;
		}
		_iter_end_2253cbae1:;
	};
	_212b23a54_write(_self_, jule::Str(")", 1));
}



inline void _212b42358_varInitExpr(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_211b43228_Var>& _64436_v, jule::Fn<void(void)> _64445_init) {
	if (_64436_v.get()._field_Statically) {
		_212b23a54_write(_self_, jule::Str("static ", 7));
	};
	_212b23a54_write(_self_, static__212b4b0dc_kind(_64436_v.get()._field_Kind.get()._field_Kind));
	_212b23a54_write(_self_, jule::Str(" ", 1));
	if (_64436_v.get()._field_Reference) {
		_212b23a54_write(_self_, jule::Str("&", 1));
	};
	_212b23a54_write(_self_, static__212acb05b_var(_64436_v));
	if ((_64445_init != nullptr)) {
		_212b23a54_write(_self_, jule::Str(" = ", 3));
		_64445_init();
	};
	_212b23a54_write(_self_, jule::Str(";", 1));
}



inline void _212b425cd_var(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_211b43228_Var> _66227_v) {
	if (_20e7e14a0_IsIgnoreIdent(_66227_v.get()._field_Ident)) {
		return;;
	};
	if (((_66227_v.get()._field_Value != nullptr) && (_66227_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_66227_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			_212b42358_varInitExpr(_self_, _66227_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_212ac2c01_val(_self_.get()._field_ec, _66227_v.get()._field_Value);
			}));
			return;;
		};
		_212b42358_varInitExpr(_self_, _66227_v,nullptr);
		return;;
	};
	_212b42358_varInitExpr(_self_, _66227_v,jule::Fn<void(void)>([=](void) mutable -> void {
		_212ac2e76_initExpr(_self_.get()._field_ec, _66227_v.get()._field_Kind.get()._field_Kind);
	}));
}



inline void _212b42853_func(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_211020084_Fn>& _67729_f) {
	{
		auto &expr = _67729_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_2253d5c1b:;
		if (it != expr.end()) {
			jule::Ptr<_211022c35_FnIns> _67821_ins = *it;
			{
				_212b41874_funcHead(_self_, _67821_ins,false);
				_212b42039_paramsIns(_self_, _67821_ins.get()._field_Params);
				_212b23a54_write(_self_, jule::Str(" ", 1));
				_212ab49e5_funcScope(_self_.get()._field_sc, _67821_ins);
				if ((_67821_ins.get()._field_Scope != nullptr)) {
					_212b23a54_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_2253d5c1b:;
			++it;
			goto _iter_begin_2253d5c1b;
		}
		_iter_end_2253d5c1b:;
	};
}



inline void _212b42a2e_traitWrappers(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_2253d6502:;
		if (it != expr.end()) {
			jule::Ptr<_212b40510_traitHash> _69021_hash = *it;
			{
				{
					auto &expr = _69021_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_2253d8856:;
					if (it != expr.end()) {
						jule::Ptr<_211020084_Fn> _69125_m = *it;
						{
							jule::Str _69221_ident = _69125_m.get()._field_Ident;;
							_69125_m.get()._field_Instances[0LL].get()._field_Scope=nullptr;
							_69125_m.get()._field_Ident=((_69221_ident + jule::Str("_", 1)) + _211b07275_Itoa(_69021_hash.get()._field_i));
							_212b42853_func(_self_, _69125_m);
							_69125_m.get()._field_Ident=_69221_ident;
							if ((_69021_hash.get()._field_s == nullptr)) {
								if (_20c5533ce_Production) {
									_212b23a54_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_212b23a54_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_2253d8856;
							};
							jule::Bool _70821_ptr = (!(_21101e0d8_IsRef(_69125_m.get()._field_Params[0LL].ptr())));;
							jule::Ptr<_211020084_Fn> _71025_sm = _210e4797e_FindMethod(_69021_hash.get()._field_s.ptr(), _69125_m.get()._field_Ident,false);;
							if (((_71025_sm == nullptr) || (_71025_sm.get()._field_Instances.len() == 0LL))) {
								goto _iter_next_2253d8856;
							};
							_212b242e6_addIndent(_self_);
							_212b23a54_write(_self_, jule::Str("{\n", 2));
							_212b25a34_indent(_self_);
							if ((_71025_sm.get()._field_Exceptional || (!(_2110204e6_IsVoid(_71025_sm.ptr()))))) {
								_212b23a54_write(_self_, jule::Str("return ", 7));
							};
							_212b23a54_write(_self_, static__212ac9be7_func(_71025_sm));
							_212b23a54_write(_self_, jule::Str("(", 1));
							if (_70821_ptr) {
								_212b23a54_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_212b23a54_write(_self_, static__212b499d1_structureIns(_69021_hash.get()._field_s));
								_212b23a54_write(_self_, jule::Str(">(", 2));
								if ((!(_20c5533ce_Production))) {
									_212b23a54_write(_self_, jule::Str("_00___file", 10));
								};
								_212b23a54_write(_self_, jule::Str(")", 1));
							} else {
								_212b23a54_write(_self_, jule::Str("_self_.data.as<", 15));
								_212b23a54_write(_self_, static__212b49739_structure(_71025_sm.get()._field_Owner));
								_212b23a54_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _69125_m.get()._field_Params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_2253e0a6c:;
								if (it != expr.end()) {
									jule::Ptr<_21101d747_Param> _73624_mp = *it;
									{
										_212b23a54_write(_self_, jule::Str(", ", 2));
										_212b23a54_write(_self_, static__212aca4cd_param(_73624_mp));
									}
									_iter_next_2253e0a6c:;
									++it;
									goto _iter_begin_2253e0a6c;
								}
								_iter_end_2253e0a6c:;
							};
							_212b23a54_write(_self_, jule::Str(");\n}\n", 5));
							_212b252d6_doneIndent(_self_);
						}
						_iter_next_2253d8856:;
						++it;
						goto _iter_begin_2253d8856;
					}
					_iter_end_2253d8856:;
				};
			}
			_iter_next_2253d6502:;
			++it;
			goto _iter_begin_2253d6502;
		}
		_iter_end_2253d6502:;
	};
}



inline void _212b42c0a_traitDatas(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	jule::Ptr<_211031e42_Trait> _74717_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_2253e490b:;
		if (it != expr.end()) {
			jule::Ptr<_212b40510_traitHash> _74821_hash = *it;
			{
				jule::Str _74917_ident = static__212aca236_traitDecl(_74821_hash.get()._field_t);;
				if ((_74821_hash.get()._field_t != _74717_old)) {
					if ((_74717_old != nullptr)) {
						_212b252d6_doneIndent(_self_);
						_212b25a34_indent(_self_);
						_212b23a54_write(_self_, jule::Str("};\n", 3));
					};
					_212b23a54_write(_self_, jule::Str("static ", 7));
					_212b23a54_write(_self_, _74917_ident);
					_212b23a54_write(_self_, jule::Str("MptrData ", 9));
					_212b23a54_write(_self_, _74917_ident);
					_212b23a54_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_74717_old=_74821_hash.get()._field_t;
					_212b242e6_addIndent(_self_);
				};
				_212b25a34_indent(_self_);
				_212b23a54_write(_self_, jule::Str("{\n", 2));
				_212b242e6_addIndent(_self_);
				{
					auto &expr = _74821_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_2253e8866:;
					if (it != expr.end()) {
						jule::Ptr<_211020084_Fn> _76725_m = *it;
						{
							jule::Str _76821_mIdent = static__212ac9be7_func(_76725_m);;
							_212b25a34_indent(_self_);
							_212b23a54_write(_self_, jule::Str(".", 1));
							_212b23a54_write(_self_, _76821_mIdent);
							_212b23a54_write(_self_, jule::Str("=", 1));
							_212b23a54_write(_self_, _76821_mIdent);
							_212b23a54_write(_self_, jule::Str("_", 1));
							_212b23a54_write(_self_, _211b07275_Itoa(_74821_hash.get()._field_i));
							_212b23a54_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_2253e8866:;
						++it;
						goto _iter_begin_2253e8866;
					}
					_iter_end_2253e8866:;
				};
				_212b252d6_doneIndent(_self_);
				_212b25a34_indent(_self_);
				_212b23a54_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_2253e490b:;
			++it;
			goto _iter_begin_2253e490b;
		}
		_iter_end_2253e490b:;
	};
	if ((_74717_old != nullptr)) {
		_212b252d6_doneIndent(_self_);
		_212b25a34_indent(_self_);
		_212b23a54_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _212b42dd6_globals(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Globals;
		auto it = expr.begin();
		_iter_begin_2253ed261:;
		if (it != expr.end()) {
			jule::Ptr<_211b43228_Var> _79021_v = *it;
			{
				_212b23a54_write(_self_, static__212b4b0dc_kind(_79021_v.get()._field_Kind.get()._field_Kind));
				_212b23a54_write(_self_, jule::Str(" ", 1));
				if (_79021_v.get()._field_Reference) {
					_212b23a54_write(_self_, jule::Str("&", 1));
				};
				_212b23a54_write(_self_, static__212acb05b_var(_79021_v));
				_212b23a54_write(_self_, jule::Str(" = ", 3));
				_212ac2c01_val(_self_.get()._field_ec, _79021_v.get()._field_Value);
				_212b23a54_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_2253ed261:;
			++it;
			goto _iter_begin_2253ed261;
		}
		_iter_end_2253ed261:;
	};
}



inline void _212b430b2_decls(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	_212b1311a_traitDecls(_self_);
	_212b13e95_structurePlainDecls(_self_);
	_212b41610_structureDecls(_self_);
	_212b41ad8_funcDecls(_self_);
	_212b23a54_write(_self_, jule::Str("\n\n", 2));
	_212b41c1a_traitDataTypes(_self_);
	_212b23a54_write(_self_, jule::Str("\n\n", 2));
	_212b42a2e_traitWrappers(_self_);
	_212b23a54_write(_self_, jule::Str("\n\n", 2));
	_212b42c0a_traitDatas(_self_);
	_212b23a54_write(_self_, jule::Str("\n\n", 2));
	_212b42dd6_globals(_self_);
}



inline void _212b43337_structureMethods(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_210e6db2b_StructIns>& _81841_s) {
	{
		auto &expr = _81841_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_225404036:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> _81921_f = *it;
			{
				_212b42853_func(_self_, _81921_f);
				_212b23a54_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_225404036:;
			++it;
			goto _iter_begin_225404036;
		}
		_iter_end_225404036:;
	};
}



inline void _212b435ac_structureDeriveDefs(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_210e6db2b_StructIns>& _82544_s) {
	if (_210e3442c_IsDerives(_82544_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_212b23a54_write(_self_, static__212ac5a28_cloneFuncDef(_82544_s.get()._field_Decl));
		_212b23a54_write(_self_, jule::Str("{\n", 2));
		_212b242e6_addIndent(_self_);
		_212b25a34_indent(_self_);
		_212b23a54_write(_self_, static__212b499d1_structureIns(_82544_s));
		_212b23a54_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _82544_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_225406e07:;
			if (it != expr.end()) {
				jule::Ptr<_210e49e48_FieldIns> _83320_f = *it;
				{
					jule::Str _83421_ident = static__212acacb4_field(_83320_f.get()._field_Decl);;
					_212b25a34_indent(_self_);
					_212b23a54_write(_self_, jule::Str("clone.", 6));
					_212b23a54_write(_self_, _83421_ident);
					_212b23a54_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_212b23a54_write(_self_, _83421_ident);
					_212b23a54_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_225406e07:;
				++it;
				goto _iter_begin_225406e07;
			}
			_iter_end_225406e07:;
		};
		_212b25a34_indent(_self_);
		_212b23a54_write(_self_, jule::Str("return clone;\n", 14));
		_212b252d6_doneIndent(_self_);
		_212b23a54_write(_self_, jule::Str("}", 1));
	};
}



inline void _212b43832_structureOstream(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_210e6db2b_StructIns>& _84941_s) {
	_212b25a34_indent(_self_);
	_212b23a54_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_212b23a54_write(_self_, static__212acaa1c_structureIns(_84941_s));
	_212b23a54_write(_self_, jule::Str(" _Src) {\n", 9));
	_212b242e6_addIndent(_self_);
	_212b25a34_indent(_self_);
	jule::Ptr<_211020084_Fn> _85717_fts = _210e4797e_FindMethod(_84941_s.ptr(), jule::Str("Str", 3),false);;
	if (static__211b44669_Str(_85717_fts)) {
		_212b23a54_write(_self_, jule::Str("_Stream << ", 11));
		_212b23a54_write(_self_, static__212ac9be7_func(_85717_fts));
		_212b23a54_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_212b23a54_write(_self_, jule::Str("_Stream << \"", 12));
		_212b23a54_write(_self_, _84941_s.get()._field_Decl.get()._field_Ident);
		_212b23a54_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _84941_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_22540e55d:;
			if (it != expr.end()) {
				jule::I64 _86718_i = it - expr.begin();
				jule::Ptr<_210e49e48_FieldIns> _86725_f = *it;
				{
					_212b25a34_indent(_self_);
					_212b23a54_write(_self_, jule::Str("_Stream << \"", 12));
					_212b23a54_write(_self_, _86725_f.get()._field_Decl.get()._field_Ident);
					_212b23a54_write(_self_, jule::Str(":", 1));
					jule::Ptr<_210e6db2b_StructIns> _87421_strct = _211bb99b9_Struct(_86725_f.get()._field_Kind.ptr());;
					if ((((_87421_strct != nullptr) && (_87421_strct.get()._field_Decl != nullptr)) && _87421_strct.get()._field_Decl.get()._field_CppLinked)) {
						_212b23a54_write(_self_, jule::Str(" cpp.", 5));
						_212b23a54_write(_self_, static__212acacb4_field(_86725_f.get()._field_Decl));
						_212b23a54_write(_self_, jule::Str("\"", 1));
					} else {
						_212b23a54_write(_self_, jule::Str("\" << _Src.", 10));
						_212b23a54_write(_self_, static__212acacb4_field(_86725_f.get()._field_Decl));
					};
					if (((_86718_i + 1LL) < _84941_s.get()._field_Fields.len())) {
						_212b23a54_write(_self_, jule::Str(" << \", \"", 8));
					};
					_212b23a54_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_22540e55d:;
				++it;
				_86718_i++;
				goto _iter_begin_22540e55d;
			}
			_iter_end_22540e55d:;
		};
		_212b25a34_indent(_self_);
		_212b23a54_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_212b25a34_indent(_self_);
	_212b23a54_write(_self_, jule::Str("return _Stream;\n", 16));
	_212b252d6_doneIndent(_self_);
	_212b23a54_write(_self_, jule::Str("}", 1));
}



inline void _212b43aa7_structureIns(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_210e6db2b_StructIns>& _90037_s) {
	_212b43337_structureMethods(_self_, _90037_s);
	_212b23a54_write(_self_, jule::Str("\n\n", 2));
	_212b435ac_structureDeriveDefs(_self_, _90037_s);
	_212b23a54_write(_self_, jule::Str("\n\n", 2));
	_212b43832_structureOstream(_self_, _90037_s);
}



inline void _212b43d2c_structure(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_210e427d1_Struct>& _90834_s) {
	{
		auto &expr = _90834_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_225417b82:;
		if (it != expr.end()) {
			jule::Ptr<_210e6db2b_StructIns> _90921_ins = *it;
			{
				_212b43aa7_structureIns(_self_, _90921_ins);
				_212b23a54_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_225417b82:;
			++it;
			goto _iter_begin_225417b82;
		}
		_iter_end_225417b82:;
	};
}



inline void _212b44008_structures(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_225418d09:;
		if (it != expr.end()) {
			jule::Ptr<_210e427d1_Struct> _91621_s = *it;
			{
				if ((_91621_s.get()._field_Token != nullptr)) {
					_212b43d2c_structure(_self_, _91621_s);
					_212b23a54_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_225418d09:;
			++it;
			goto _iter_begin_225418d09;
		}
		_iter_end_225418d09:;
	};
}



inline void _212b441d4_funcs(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	_212b11bb8_iterPackages(_self_, jule::Fn<void(jule::Ptr<_211b202d2_Package>&)>([=](jule::Ptr<_211b202d2_Package>& _92535_pkg) mutable -> void {
		_212b4502b_iterFiles(_92535_pkg,jule::Fn<void(jule::Ptr<_211b855ab_SymbolTable>&)>([=](jule::Ptr<_211b855ab_SymbolTable>& _92636_file) mutable -> void {
			{
				auto &expr = _92636_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_22541c25d:;
				if (it != expr.end()) {
					jule::Ptr<_211020084_Fn> _92729_f = *it;
					{
						if (((!(_20c552895_Test)) && _212b4dcd2_hasDirective(_92729_f.get()._field_Directives,jule::Str("test", 4)))) {
							goto _iter_next_22541c25d;
						};
						if (((!(_92729_f.get()._field_CppLinked)) && (_92729_f.get()._field_Token != nullptr))) {
							_212b42853_func(_self_, _92729_f);
							_212b23a54_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_22541c25d:;
					++it;
					goto _iter_begin_22541c25d;
				}
				_iter_end_22541c25d:;
			};
		}));
	}));
}



inline void _212b44459_pushInit(jule::Ptr<_212b406ec_ObjectCoder> _self_, jule::Ptr<_211b202d2_Package>& _94033_pkg) {
	_212b4502b_iterFiles(_94033_pkg,jule::Fn<void(jule::Ptr<_211b855ab_SymbolTable>&)>([=](jule::Ptr<_211b855ab_SymbolTable>& _94132_file) mutable -> void {
		{
			auto &expr = _94132_file.get()._field_Funcs;
			auto it = expr.begin();
			_iter_begin_22541eb78:;
			if (it != expr.end()) {
				jule::Ptr<_211020084_Fn> _94220_f = *it;
				{
					if ((_94220_f.get()._field_Ident == jule::Str("init", 4))) {
						_212b25a34_indent(_self_);
						_212b23a54_write(_self_, static__212ac9be7_func(_94220_f));
						_212b23a54_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_22541eb78:;
				++it;
				goto _iter_begin_22541eb78;
			}
			_iter_end_22541eb78:;
		};
	}));
}



inline void _212b44635_initCaller(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	_212b23a54_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_212b242e6_addIndent(_self_);
	_212b11bb8_iterPackages(_self_, jule::Fn<void(jule::Ptr<_211b202d2_Package>&)>([=](jule::Ptr<_211b202d2_Package>& _95535_pkg) mutable -> void {
		_212b44459_pushInit(_self_, _95535_pkg);
	}));
	_212b252d6_doneIndent(_self_);
	_212b23a54_write(_self_, jule::Str("\n}", 2));
}



inline void _212b44811_end(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	_212b23a54_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_20c552895_Test) {
		_212b23a54_write(_self_, jule::Str("test_point();", 13));
	} else {
		_212b23a54_write(_self_, jule::Str("entry_point();", 14));
	};
	_212b23a54_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _212b449dc_serializeHead(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	_212b0501e_prepareStructures(_self_);
	_212b1224b_buildTraitMap(_self_);
	_212b016e1_head(_self_);
	_212b24a44_links(_self_);
	_212b23a54_write(_self_, jule::Str("\n", 1));
	_212b430b2_decls(_self_);
	_212b23a54_write(_self_, jule::Str("\n", 1));
	_212b44008_structures(_self_);
	_212b441d4_funcs(_self_);
	_212b44635_initCaller(_self_);
	_212b23a54_write(_self_, jule::Str("\n\n", 2));
}



inline void _212b44bb8_Serialize(jule::Ptr<_212b406ec_ObjectCoder> _self_) {
	_212b449dc_serializeHead(_self_);
	_212b44811_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _212b406ec_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _225474eca_parseInteger(_212b7e4b6_argParser* _self_, jule::Str& _19031_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19039_parser) {
	jule::I64 _19083_x = jule::I64();
	jule::Bool _19089_ok = jule::Bool();
	{
		
		if (_19031_s.empty()) {
			_case_begin_225477be2:;
			{
				_19083_x = 0LL;
				_19089_ok = false;
				return std::make_tuple(_19083_x,_19089_ok);
			}
		}
		else if (_20e4446b9_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_2254781ba:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),16LL);
			}
		}
		else if (_20e4446b9_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_225478055:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),2LL);
			}
		}
		else if (_20e4446b9_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_2254782a8:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),8LL);
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_22547831e:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_22547784b:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s,10LL);
			}
		}
		_match_end_22547776e:;
	};
	return std::make_tuple(_19083_x,_19089_ok);
}

inline std::tuple<jule::U64,jule::Bool> _22547d0b0_parseInteger(_212b7e4b6_argParser* _self_, jule::Str& _19031_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19039_parser) {
	jule::U64 _19083_x = jule::U64();
	jule::Bool _19089_ok = jule::Bool();
	{
		
		if (_19031_s.empty()) {
			_case_begin_225480c83:;
			{
				_19083_x = 0LLU;
				_19089_ok = false;
				return std::make_tuple(_19083_x,_19089_ok);
			}
		}
		else if (_20e4446b9_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_22548125b:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),16LL);
			}
		}
		else if (_20e4446b9_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_2254810e6:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),2LL);
			}
		}
		else if (_20e4446b9_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_225481349:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),8LL);
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_2254813b0:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_2254808dc:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s,10LL);
			}
		}
		_match_end_225480810:;
	};
	return std::make_tuple(_19083_x,_19089_ok);
}



inline jule::Str _212b7ecad_getData(_212b7e4b6_argParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _212b80000_processFlag(_212b7e4b6_argParser* _self_, jule::Trait<_2129e44e6_CommonFlag>& _21735_flag) {
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_22545c215_Flag>>()) {
			_case_begin_2254721b4:;
			{
				jule::Ptr<_22545c215_Flag> _22021_bf = _21735_flag.operator jule::Ptr<_22545c215_Flag>();;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_22547214d:;
	};
	jule::Str _22513_data = _212b7ecad_getData(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _2129e44e6_CommonFlag_mptr_data[(_21735_flag).type_offset]._2129e773b_Name(_21735_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_225450e0c_Flag>>()) {
			_case_begin_225473803:;
			{
				jule::Ptr<_225450e0c_Flag> _23221_intf = _21735_flag.operator jule::Ptr<_225450e0c_Flag>();;
				jule::Bool _23332_ok;;
				std::tie((*(_23221_intf.get()._field_data)),_23332_ok) = _225474eca_parseInteger(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _21180b1ee_ParseInt(_23370_s,_23378_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _2129e44e6_CommonFlag_mptr_data[(_21735_flag).type_offset]._2129e773b_Name(_21735_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_225454aae_Flag>>()) {
			_case_begin_22547423d:;
			{
				jule::Ptr<_225454aae_Flag> _24021_uintf = _21735_flag.operator jule::Ptr<_225454aae_Flag>();;
				jule::Bool _24133_ok;;
				std::tie((*(_24021_uintf.get()._field_data)),_24133_ok) = _22547d0b0_parseInteger(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _21177e56d_ParseUint(_24171_s,_24179_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _2129e44e6_CommonFlag_mptr_data[(_21735_flag).type_offset]._2129e773b_Name(_21735_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_225458640_Flag>>()) {
			_case_begin_2254742a4:;
			{
				jule::Ptr<_225458640_Flag> _24821_ff = _21735_flag.operator jule::Ptr<_225458640_Flag>();;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _211969ba9_ParseFloat(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _2129e44e6_CommonFlag_mptr_data[(_21735_flag).type_offset]._2129e773b_Name(_21735_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_225460c96_Flag>>()) {
			_case_begin_22547431a:;
			{
				(*(_21735_flag.operator jule::Ptr<_225460c96_Flag>().get()._field_data))=_22513_data;
			}
		}
		_match_end_2254741c7:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _212b80275_singleDash(_212b7e4b6_argParser* _self_, jule::Str& _25730_arg) {
	if ((_25730_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25730_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25730_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_22548765d:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_2129e44e6_CommonFlag> _26321_flag = _212b7c86b_FindFlagShort(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25730_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _212b80000_processFlag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_22548765d:;
			++it;
			goto _iter_begin_22548765d;
		}
		_iter_end_22548765d:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _212b804ea_doubleDash(_212b7e4b6_argParser* _self_, jule::Str& _27230_arg) {
	if ((_27230_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27230_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_2129e44e6_CommonFlag> _27617_flag = _212b7c55d_FindFlag(&(*_self_)._field_set, _27230_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27230_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _212b80000_processFlag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _212b806c6_tryArg(_212b7e4b6_argParser* _self_) {
	jule::Str _28413_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _212b804ea_doubleDash(&(*_self_), _28413_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _212b80275_singleDash(&(*_self_), _28413_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28413_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _212b808a2_parse(_212b7e4b6_argParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _212b806c6_tryArg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_22548de39:;
	}
	_iter_end_22548de39:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _212b7e4b6_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _20c746094_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _20d380749_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();
	};
	{
		return static_cast<jule::Str>(_6924_s);
	};
}



inline jule::I64 _20c5516da_GetLastErrno(void) {
	return errno;
}



inline jule::I64 _20d380eca_Stat(jule::U8* _3916_path, struct stat* _3933_stat) {
	return static_cast<jule::I64>(stat(((char*)(_3916_path)), _3933_stat));
}



inline jule::I64 _20d38110c_Open(jule::U8* _4416_path, jule::I64 _4429_flag, jule::I64 _4440_mode) {
	return static_cast<jule::I64>(open(((char*)(_4416_path)),_4429_flag,_4440_mode));
}



inline jule::U8* _20d38123e_Getcwd(jule::U8* _5018_buff, jule::U64 _5031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5018_buff)),_5031_bufflen)));
}



inline DIR* _20d381371_Opendir(jule::U8* _5519_path) {
	return opendir(((char*)(_5519_path)));
}



inline struct dirent* _20d3814a3_Readdir(DIR* _5823_dir) {
	return readdir(_5823_dir);
}



inline jule::I64 _20d381816_Closedir(DIR* _6124_dir) {
	return static_cast<jule::I64>(closedir(_6124_dir));
}



inline jule::I64 _20d381bac_Mkdir(jule::U8* _7017_path, jule::I64 _7030_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_7017_path)),_7030_mode));
}



inline jule::I64 _20d381cde_Rmdir(jule::U8* _7517_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_7517_path))));
}



inline jule::I64 _20d381e21_Unlink(jule::U8* _7818_path) {
	return static_cast<jule::I64>(unlink(((char*)(_7818_path))));
}



inline jule::I64 _20d3be04b_Seek(jule::I64 _269_handle, jule::I64 _2622_offset, jule::I64 _2635_origin) {
	return static_cast<jule::I64>(lseek(_269_handle,_2622_offset,_2635_origin));
}



inline jule::I64 _20d3be436_Read(jule::I64 _3116_handle, void* _3133_buff, jule::U64 _3148_n) {
	return static_cast<jule::I64>(read(_3116_handle,_3133_buff,_3148_n));
}



inline jule::I64 _20d3be7aa_Close(jule::I64 _3610_handle) {
	return static_cast<jule::I64>(close(_3610_handle));
}



inline jule::I64 _20d3beb95_Write(jule::I64 _3917_handle, void* _3930_buff, jule::U64 _3945_n) {
	return static_cast<jule::I64>(write(_3917_handle,_3930_buff,_3945_n));
}



inline void _20d3beda4_Exit(jule::I64 _449_code) {
	exit(_449_code);
}



inline jule::I64 _20d42d9b2_getLastOsError(void) {
	jule::I64 _309_err = _20c5516da_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_212c040eb:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_212c04162:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_212c041c8:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_212c0423e:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_212c04481:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_212c044e7:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_212c0455d:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else {
			_case_begin_212c03e64:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_212c03e0e:;
	};
}



inline jule::Slice<jule::Str> _20d4546ca_Args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _20d454b4d_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _20d455a94_getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _20d455a94_getwd(void) {
	jule::U8* _1113_buff = _20d38123e_Getcwd(nullptr,0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(_20d42d9b2_getLastOsError());
	};
	jule::Str _159_pwd = _20d380749_BytePtrToStr(_1113_buff);;
	{
		_20c746094_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_159_pwd);
}



inline jule::Bool _20e2e9409_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_20e3638e6__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);
	};
	return _20e36c3a0_isExcludingLatin(_20e30437b_Letter,_7613_r);
}



inline jule::Bool _20e36b7bc_is16(jule::Slice<_20e369c0a_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_2134e3ed4:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_20e369c0a_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_2134e3ed4:;
				++it;
				_19313_i++;
				goto _iter_begin_2134e3ed4;
			}
			_iter_end_2134e3ed4:;
		};
		return false;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_20e369c0a_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_2134e3742:;
	}
	_iter_end_2134e3742:;;
	return false;
}



inline jule::Bool _20e36bb0d_is32(jule::Slice<_20e36a17d_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_2134ea86a:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_20e36a17d_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_2134ea86a:;
				++it;
				_23013_i++;
				goto _iter_begin_2134ea86a;
			}
			_iter_end_2134ea86a:;
		};
		return false;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_20e36a17d_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_2134e73d3:;
	}
	_iter_end_2134e73d3:;;
	return false;
}



inline jule::Bool _20e36c3a0_isExcludingLatin(jule::Ptr<_20e36a601_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_20e369c0a_Range16> &_28014_R16 = _27821_rangeTab.get()._field_R16;;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if (((_28014_R16.len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>(_28014_R16[(_28014_R16.len() - 1LL)]._field_Hi)))) {
			return _20e36b7bc_is16(_28014_R16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));
		};
	};
	jule::Slice<_20e36a17d_Range32> &_28710_R32 = _27821_rangeTab.get()._field_R32;;
	if (((_28710_R32.len() > 0LL) && (_27844_r >= static_cast<jule::I32>(_28710_R32[0LL]._field_Lo)))) {
		return _20e36bb0d_is32(_28710_R32,static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));
	};
	return false;
}



inline jule::Bool _20e36c647_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_20e3638e6__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);
	};
	return _20e36c3a0_isExcludingLatin(_20e30b41b_Upper,_29512_r);
}



inline std::tuple<jule::I32,jule::I64> _20e430e69_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	jule::I32 _18228_r = jule::I32();
	jule::I64 _18237_size = jule::I64();
	if ((_18215_p.len() < 1LL)) {
		_18228_r = 65533LL;
		_18237_size = 0LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _20e42ed14_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18228_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_20e430386_acceptRange _1969_accept = _20e4306e9_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18228_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18237_size = 2LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18228_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18237_size = 3LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	_18228_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18237_size = 4LL;
	return std::make_tuple(_18228_r,_18237_size);
}



inline std::tuple<jule::I32,jule::I64> _20e431288_DecodeRuneStr(jule::Str _22918_s) {
	jule::I32 _22928_r = jule::I32();
	jule::I64 _22937_size = jule::I64();
	if ((_22918_s.len() < 1LL)) {
		_22928_r = 65533LL;
		_22937_size = 0LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _20e42ed14_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		_22928_r = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_20e430386_acceptRange _2439_accept = _20e4306e9_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	if ((_2429_sz <= 2LL)) {
		_22928_r = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		_22937_size = 2LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	if ((_2429_sz <= 3LL)) {
		_22928_r = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		_22937_size = 3LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	_22928_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	_22937_size = 4LL;
	return std::make_tuple(_22928_r,_22937_size);
}



inline std::tuple<jule::I32,jule::I64> _20e431530_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	jule::I32 _27632_r = jule::I32();
	jule::I64 _27641_size = jule::I64();
	if ((_27619_p.len() == 0LL)) {
		_27632_r = 65533LL;
		_27641_size = 0LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	_27632_r=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((_27632_r < 128LL)) {
		_27641_size = 1LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_20e432e05_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_2135424c7;
			};
		}
	_iter_next_2135424c7:;
	}
	_iter_end_2135424c7:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27632_r,_27641_size) = _20e430e69_DecodeRune(_27619_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27641_size) != _2809_end)) {
		_27632_r = 65533LL;
		_27641_size = 1LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	return std::make_tuple(_27632_r,_27641_size);
}



inline jule::Slice<jule::U8> _20e4322cd_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));
	};
	return _20e43261e_appendRuneNonASCII(_40519_p,_40530_r);
}



inline jule::Slice<jule::U8> _20e43261e_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_213557be6:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_213556387:;
			{
				_41242_r=128LL;
				goto _case_begin_2135563ed;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_2135563ed:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_213555870:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		_match_end_21355581a:;
	};
}



inline jule::I64 _20e432b5d_RuneCountStr(jule::Str _47317_s) {
	jule::I64 _47327_n = jule::I64();
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (_47327_n)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_21356014e;
			};
			jule::U8 _48213_x = _20e42ed14_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_21356014e;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_21356014e;
			};
			_20e430386_acceptRange _49213_accept = _20e4306e9_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_21356014e:;
	}
	_iter_end_21356014e:;;
	return _47327_n;
}



inline jule::Bool _20e432e05_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);
}



inline jule::Slice<jule::U8> _20e4439e8_Stobs(jule::Str& _911_s) {
	return _911_s.fake_slice();
}



inline void _20e444147_PushToStrBuffer(jule::Str& _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		(_2825_s).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline jule::I64 _20e442e26_FindLastByte(jule::Slice<jule::U8> _2617_s, jule::U8 _2628_b) {
	jule::U8* _279_first = (&(_2617_s[0LL]));;
	jule::U8* _2813_it = (&(_2617_s[(_2617_s.len() - 1LL)]));;
	for (; (_2813_it >= _279_first); (_2813_it)--) {
		{
			{
				if (((*(_2813_it)) == _2628_b)) {
					return static_cast<jule::I64>(((jule::I64)((_2813_it - _279_first))));
				};
			};
		}
	_iter_next_2135880bc:;
	}
	_iter_end_2135880bc:;;
	return -1LL;
}



inline jule::I64 _20e444554_FindLastByteStr(jule::Str& _4521_s, jule::U8 _4529_b) {
	return static_cast<jule::I64>(_20e442e26_FindLastByte(_20e4439e8_Stobs(_4521_s),_4529_b));
}



inline jule::Str _20e437ed7_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc((_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_21359d07c:;
	}
	_iter_end_21359d07c:;;
	return _2013_ss;
}



inline jule::Bool _20e434511_hasPrefix(jule::Str& _2715_s, jule::Str& _2724_sub, jule::I64 _2738_start) {
	if (((_2724_sub.len() == 0LL) || ((_2715_s.len() - _2738_start) < _2724_sub.len()))) {
		return false;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < _2724_sub.len()); std::tie(_3213_i,_2738_start) = std::make_tuple(static_cast<jule::I64>((_3213_i + 1LL)),static_cast<jule::I64>((_2738_start + 1LL)))) {
		{
			if ((_2715_s[_2738_start] != _2724_sub[_3213_i])) {
				return false;
			};
		}
	_iter_next_2135a114b:;
	}
	_iter_end_2135a114b:;;
	return true;
}



inline jule::Bool _20e4446b9_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _20e434511_hasPrefix(_4214_s,_4222_sub,0LL);
}



inline jule::Bool _20e444884_hasSuffix(jule::Str& _4615_s, jule::Str& _4624_sub, jule::I64 _4638_start) {
	if (((_4624_sub.len() == 0LL) || ((_4615_s.len() - _4638_start) < _4624_sub.len()))) {
		return false;
	};
	_4638_start=static_cast<jule::I64>((_4615_s.len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < _4624_sub.len()); (_5213_i)++) {
		{
			if ((_4615_s[((_4638_start - _5213_i) - 1LL)] != _4624_sub[((_4624_sub.len() - _5213_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_2135a315e:;
	}
	_iter_end_2135a315e:;;
	return true;
}



inline jule::Bool _20e444b92_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _20e444884_hasSuffix(_6214_s,_6222_sub,0LL);
}



inline jule::I64 _20e44507c_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_20e434511_hasPrefix(_7011_s,_7019_sub,_7033_i)) {
				return _7033_i;
			};
		}
	_iter_next_2135a6b13:;
	}
	_iter_end_2135a6b13:;;
	return -1LL;
}



inline jule::I64 _20e4458b8_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); std::tie(_10017_k,_10117_z) = std::make_tuple(static_cast<jule::I64>((_10017_k + 1LL)),static_cast<jule::I64>((_10117_z + 1LL)))) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_214cc79b4;
					};
				}
			_iter_next_214cc87d9:;
			}
			_iter_end_214cc87d9:;;
			return _9413_j;
		}
	_iter_next_214cc79b4:;
	}
	_iter_end_214cc79b4:;;
	return -1LL;
}



inline jule::I64 _20e445c09_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_20e4458b8_FindLastAt(_11513_s,_11521_sub,static_cast<jule::I64>((_11513_s.len() - 1LL))));
}



inline jule::I64 _20e446ea2_findRune(jule::Slice<jule::U8>& _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < _17114_s.len())) {
		{
			jule::I32 _17414_br;;
			jule::I64 _17418_n;;
			std::tie(_17414_br,_17418_n) = _20e430e69_DecodeRune(_17114_s.slice(_17213_i));
			if ((_17125_r == _17414_br)) {
				return _17213_i;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_214cd12a3:;
	}
	_iter_end_214cd12a3:;;
	return -1LL;
}



inline jule::I64 _20e4477dd_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_20e444554_FindLastByteStr(_19317_s,_19325_b));
}



inline jule::I64 _20e448602_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _20e4439e8_Stobs(_22812_s);;
	jule::Slice<jule::U8> _23013_rb = _20e4439e8_Stobs(_22820_runes);;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r;;
			jule::I64 _23317_n;;
			std::tie(_23314_r,_23317_n) = _20e430e69_DecodeRune(_2299_sb.slice(_23113_i));
			if ((_20e446ea2_findRune(_23013_rb,_23314_r) != -1LL)) {
				return _23113_i;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_214cd7265:;
	}
	_iter_end_214cd7265:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _20e448d2d_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL,_26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _20e44507c_FindAt(_26210_s,_26218_sub,_27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_214cdde3c;
			};
			_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i,_27613_j));;
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_214cdde3c:;
	}
	_iter_end_214cdde3c:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i));;
	};
	return _26713_parts;
}



inline jule::Bool _20e44916e_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_20e44507c_FindAt(_29013_s,_29021_sub,0LL) != -1LL);
}



inline jule::Bool _20e449b42_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_20e448602_FindAny(_30616_s,_30624_runes) != -1LL);
}



inline jule::I64 _20e449e83_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _20e44507c_FindAt(_31210_s,_31218_sub,_31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_214ce485a;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_214ce485a:;
	}
	_iter_end_214ce485a:;;
	return _31613_n;
}



inline jule::Str _20e44a417_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;
	};
	jule::I64 _3379_m = _20e449e83_Count(_33212_s,_33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc((_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _20e44507c_FindAt(_33212_s,_33220_sub,_34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_214ce885e;
			};
			_34513_ss+=_33212_s.slice(_34613_i,_34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_214ce885e:;
	}
	_iter_end_214ce885e:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;
}



inline void _20e44747a_trimLeft(jule::Slice<jule::U8>& _38818_s, jule::Slice<jule::U8>& _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < _38818_s.len())) {
		{
			jule::I32 _39114_r;;
			jule::I64 _39117_n;;
			std::tie(_39114_r,_39117_n) = _20e430e69_DecodeRune(_38818_s.slice(_38913_i));
			if ((_20e446ea2_findRune(_38830_cutset,_39114_r) == -1LL)) {
				_38818_s=_38818_s.slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_214ced721:;
	}
	_iter_end_214ced721:;;
	_38818_s=nullptr;
}



inline jule::Str _20e44b4c3_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _20e4439e8_Stobs(_40313_s);;
	jule::Slice<jule::U8> _4059_bcutset = _20e4439e8_Stobs(_40321_cutset);;
	_20e44747a_trimLeft(_40413_bytes,_4059_bcutset);
	return static_cast<jule::Str>(_40413_bytes);
}



inline void _20e44b77b_trimRight(jule::Slice<jule::U8>& _41019_s, jule::Slice<jule::U8>& _41031_cutset) {
	jule::I64 _41113_i = _41019_s.len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r;;
			jule::I64 _41317_n;;
			std::tie(_41314_r,_41317_n) = _20e431530_DecodeLastRune(_41019_s.slice(0LL,_41113_i));
			if ((_20e446ea2_findRune(_41031_cutset,_41314_r) == -1LL)) {
				_41019_s=_41019_s.slice(0LL,_41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_214d01b75:;
	}
	_iter_end_214d01b75:;;
	_41019_s=nullptr;
}



inline jule::Str _20e44be0d_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _20e4439e8_Stobs(_4349_s);;
	jule::Slice<jule::U8> _4369_bcutset = _20e4439e8_Stobs(_43417_cutset);;
	_20e44747a_trimLeft(_43513_bytes,_4369_bcutset);
	_20e44b77b_trimRight(_43513_bytes,_4369_bcutset);
	return static_cast<jule::Str>(_43513_bytes);
}



inline jule::Str _20e44c24e_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_214d06086:;
			{
				return jule::Str();
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_214d0610d:;
			{
				return _4449_parts[0LL];
			}
		}
		_match_end_214d05dee:;
	};
	jule::Str _45113_s = _4449_parts[0LL];;
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		_iter_begin_214d07274:;
		if (it != expr.end()) {
			jule::Str &_45212_part = *it;
			{
				_45113_s+=_44423_sep;
				_45113_s+=_45212_part;
			}
			_iter_next_214d07274:;
			++it;
			goto _iter_begin_214d07274;
		}
		_iter_end_214d07274:;
	};
	return _45113_s;
}



inline jule::Str _20d4a8e38_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _20d4a2173_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _20d4d0712_IsPathSep(_1099_originalPath[0LL])) && _20d4d0712_IsPathSep(_1099_originalPath[1LL]))) {
			return _20d4ac58a_FromSlash(_1099_originalPath);
		};
		return (_1099_originalPath + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _20d4d0712_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_20d48bc95_lazyBuff _12713_out = _20d48bc95_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0LL;;
	jule::I64 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_20d493461_append(&_12713_out, 47LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_20d4d0712_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_214d1675b:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _20d4d0712_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_214d1950b:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _20d4d0712_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_214d19572:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_214d1c465:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_20d4d0712_IsPathSep(static_cast<jule::U8>(_20d492c57_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_214d1c762:;
									}
									_iter_end_214d1c762:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_214d1c4cb:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_20d493461_append(&_12713_out, 47LLU);
									};
									_20d493461_append(&_12713_out, '.');
									_20d493461_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_214d1c09c:;
						};
					}
				}
				else {
					_case_begin_214d14a9a:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_20d493461_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_20d4d0712_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_20d493461_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_214d1621c:;
						}
						_iter_end_214d1621c:;;
					}
				}
				_match_end_214d149bd:;
			};
		}
	_iter_next_214d14292:;
	}
	_iter_end_214d14292:;;
	if ((_12713_out._field_w == 0LL)) {
		_20d493461_append(&_12713_out, '.');
	};
	return _20d4ac58a_FromSlash(_20d496013_string(&_12713_out));
}



inline jule::Str _20d4ac58a_FromSlash(jule::Str _21114_path) {
	{
		return _21114_path;
	};
}



inline jule::Str _20d4b1cdc_Join(jule::Slice<jule::Str> _2259_elem) {
	return _20d4a87a6_join(_2259_elem);
}



inline jule::Str _20d4be2a0_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_20d4d0712_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);
			};
		}
	_iter_next_214d221e5:;
	}
	_iter_end_214d221e5:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _20d4c0cb8_Abs(jule::Str _2458_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _20d4a5c48_abs(_2458_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _20d499d6e_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25413_path.len() > 0LL) && _20d4d0712_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL,(_25413_path.len() - 1LL));;
		}
	_iter_next_214d23ec7:;
	}
	_iter_end_214d23ec7:;;
	(_25413_path).mut_slice(_20d4a311e_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_20d4d0712_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_214d25e96:;
	}
	_iter_end_214d25e96:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return static_cast<jule::Str>(47LL);
	};
	return _25413_path;
}



inline jule::Str _20d49e7d0_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _20d4a311e_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_20d4d0712_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_214d2841b:;
	}
	_iter_end_214d2841b:;;
	jule::Str _2919_dir = _20d4a8e38_Clean(_2858_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _20d4a311e_VolumeName(jule::Str _30315_path) {
	return _20d4ac58a_FromSlash(_30315_path.slice(0LL,_20d4a2173_volumeNameLen(_30315_path)));
}



inline jule::Bool _20d4d0712_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);
}



inline jule::Bool _20d4d420a_IsAbs(jule::Str _5310_path) {
	return _20e4446b9_HasPrefix(_5310_path,jule::Str("/", 1));
}



inline jule::I64 _20d4a2173_volumeNameLen(jule::Str _5918_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _20d4a5c48_abs(jule::Str _638_path) {
	jule::Bool _6326_ok = jule::Bool();
	if (_20d4d420a_IsAbs(_638_path)) {
		_6326_ok = true;
		return std::make_tuple(_20d4a8e38_Clean(_638_path),_6326_ok);
	};
	jule::Str _679_wd = ({
		auto except = _20d454b4d_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			_6326_ok = false;
			return std::make_tuple(jule::Str(),_6326_ok);
		} jule::Str();});
	});;
	_6326_ok = true;
	return std::make_tuple(_20d4a87a6_join(jule::Slice<jule::Str>::make({_679_wd,_638_path})),_6326_ok);
}



inline jule::Str _20d4a87a6_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto &expr = _739_elem;
		auto it = expr.begin();
		_iter_begin_214d3338d:;
		if (it != expr.end()) {
			jule::I64 _749_i = it - expr.begin();
			jule::Str &_7412_e = *it;
			{
				if ((!(_7412_e.empty()))) {
					return _20d4a8e38_Clean(_20e44c24e_Join(_739_elem.slice(_749_i),static_cast<jule::Str>(47LL)));
				};
			}
			_iter_next_214d3338d:;
			++it;
			_749_i++;
			goto _iter_begin_214d3338d;
		}
		_iter_end_214d3338d:;
	};
	return jule::Str();
}



inline jule::I64 _20c60157b_getLastFsError(void) {
	jule::I64 _729_err = _20c5516da_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_214d413e0:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_214d408c8:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_214d40d4b:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_214d40db2:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_214d40e28:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_214d40e8e:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_214d415ee:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_214d41665:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_214d416cb:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_214d41742:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_214d417a8:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_214d4181e:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_214d41885:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_214d4190c:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_214d41984:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_214d41a0b:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_214d41a83:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_214d41b0a:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_214d41b82:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_214d41c09:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_214d41c81:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_214d41d08:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_214d41d80:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_214d41e07:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_214d41e7e:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_214d42006:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_214d4207d:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_214d42105:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_214d40bb4:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_214d40b5e:;
	};
}



inline jule::I64 _20e519c67_getLastProcessError(void) {
	jule::I64 _429_err = _20c5516da_GetLastErrno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_214d68060:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_214d684d3:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_214d68549:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_214d685b0:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_214d68626:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_214d68868:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_214d688ce:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_214d68945:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_214d689ab:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 67LL) {
			_case_begin_214d68a22:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_214d68a88:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_214d6834b:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_214d682e6:;
	};
}



inline jule::Slice<char*> _20e51cebd_strSliceToCstrSlice(jule::Slice<jule::Str> _2024_s) {
	jule::Slice<char*> _2113_cs = jule::Slice<char*>::alloc(0LL,(_2024_s.len() + 1LL));;
	{
		auto &expr = _2024_s;
		auto it = expr.begin();
		_iter_begin_214d755ab:;
		if (it != expr.end()) {
			jule::I64 _229_i = it - expr.begin();
			{
				_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(((char*)((&(_2024_s[_229_i][0LL])))));;
			}
			_iter_next_214d755ab:;
			++it;
			_229_i++;
			goto _iter_begin_214d755ab;
		}
		_iter_end_214d755ab:;
	};
	_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(nullptr);;
	return _2113_cs;
}



inline jule::I64 _20e51d41e_execvp(jule::Str _2911_file, jule::Slice<jule::Str> _2922_argv) {
	jule::Slice<char*> _309_cargv = _20e51cebd_strSliceToCstrSlice(_2922_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&(_2911_file[0LL])))), (char*const*)(&(_309_cargv[0LL]))));
	};
}



inline jule::I64 _20e51d809_execve(jule::Str _3611_file, jule::Slice<jule::Str> _3622_argv, jule::Slice<jule::Str> _3635_env) {
	jule::Slice<char*> _379_cargv = _20e51cebd_strSliceToCstrSlice(_3622_argv);;
	jule::Slice<char*> _389_cenv = _20e51cebd_strSliceToCstrSlice(_3635_env);;
	{
		return static_cast<jule::I64>(execve(((char*)((&(_3611_file[0LL])))), (char*const*)(&(_379_cargv[0LL])), (char*const*)((&(_389_cenv[0LL])))));
	};
}



inline void _20e51e420_Exit(jule::I64 _129_code) {
	_20d3beda4_Exit(_129_code);
}



inline jule::Str _20e51e61d_Executable(void) {
	return jule::executable();
}



inline jule::Bool _20e4ad755_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));
}



inline jule::Bool _20e4ad887_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto &expr = _20c55bd55_CppHeaderExts;
		auto it = expr.begin();
		_iter_begin_214da8ee6:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3121_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_214da8ee6:;
			++it;
			goto _iter_begin_214da8ee6;
		}
		_iter_end_214da8ee6:;
	};
	return false;
}



inline jule::Bool _20e4adada_IsValidCppExt(jule::Str _4218_ext) {
	if ((_4218_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _20e4ac138_CppExts;
		auto it = expr.begin();
		_iter_begin_214daaed7:;
		if (it != expr.end()) {
			jule::Str &_4612_e = *it;
			{
				if ((_4218_ext == _4612_e)) {
					return true;
				};
			}
			_iter_next_214daaed7:;
			++it;
			goto _iter_begin_214daaed7;
		}
		_iter_end_214daaed7:;
	};
	{
		auto &expr = _20e4ad667_ObjectiveCppExts;
		auto it = expr.begin();
		_iter_begin_214dabc30:;
		if (it != expr.end()) {
			jule::Str &_5112_e = *it;
			{
				if ((_4218_ext == _5112_e)) {
					return true;
				};
			}
			_iter_next_214dabc30:;
			++it;
			goto _iter_begin_214dabc30;
		}
		_iter_end_214dabc30:;
	};
	return false;
}



inline jule::Str _20e4ba7b7_Logf(jule::Str _2959_fmt, jule::Slice<jule::Any> _29522_args) {
	return _20e4bb1d0_applyFmt(_2959_fmt,jule::Any(_29522_args));
}



inline jule::Str _20e4baaa3_argToStr(jule::Any _29913_arg) {
	{
		auto &_match_expr{ _29913_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_214dace0c:;
			{
				return _29913_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_214dace73:;
			{
				return static_cast<jule::Str>(_29913_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_214daced9:;
			{
				return static_cast<jule::Str>(_29913_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_214dac0a4:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_214daca00:;
	};
}



inline jule::I64 _20e4bad4a_findNextFmt(jule::Str _31216_fmt) {
	{
		auto &expr = _31216_fmt;
		auto it = expr.begin();
		_iter_begin_214dae23d:;
		if (it != expr.end()) {
			jule::I64 _3139_i = it - expr.begin();
			jule::U8 &_31312_b = *it;
			{
				if ((_31312_b == '@')) {
					return _3139_i;
				};
			}
			_iter_next_214dae23d:;
			++it;
			_3139_i++;
			goto _iter_begin_214dae23d;
		}
		_iter_end_214dae23d:;
	};
	return -1LL;
}



inline jule::Str _20e4bb1d0_applyFmt(jule::Str _32117_fmt, jule::Slice<jule::Any> _32127_args) {
	jule::Str _32213_s = jule::Str();;
	{
		auto &expr = _32127_args;
		auto it = expr.begin();
		_iter_begin_214db0a69:;
		if (it != expr.end()) {
			jule::Any &_32312_arg = *it;
			{
				jule::I64 _32413_i = _20e4bad4a_findNextFmt(_32117_fmt);;
				if ((_32413_i == -1LL)) {
					goto _iter_end_214db0a69;
				};
				_32213_s+=_32117_fmt.slice(0LL,_32413_i);
				_32213_s+=_20e4baaa3_argToStr(jule::Any(_32312_arg));
				(_32117_fmt).mut_slice((_32413_i + 1LL));;
			}
			_iter_next_214db0a69:;
			++it;
			goto _iter_begin_214db0a69;
		}
		_iter_end_214db0a69:;
	};
	_32213_s+=_32117_fmt;
	return _32213_s;
}



inline jule::Bool _20e4bc29c_IsTopDirective(jule::Str _2819_directive) {
	return ((_2819_directive == jule::Str("pass", 4)) || (_2819_directive == jule::Str("build", 5)));
}



inline jule::Bool _20e4bd6cc_IsWindows(jule::Str _3714_os) {
	return (_3714_os == jule::Str("windows", 7));
}



inline jule::Bool _20e4bd985_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == jule::Str("darwin", 6));
}



inline jule::Bool _20e4bdc2c_IsLinux(jule::Str _4312_os) {
	return (_4312_os == jule::Str("linux", 5));
}



inline jule::Bool _20e4be04b_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == jule::Str("i386", 4));
}



inline jule::Bool _20e4be2e3_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == jule::Str("amd64", 5));
}



inline jule::Bool _20e4be58a_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == jule::Str("arm64", 5));
}



inline jule::Bool _20e4be832_IsUnix(jule::Str _5511_os) {
	return (_20e4bd985_IsDarwin(_5511_os) || _20e4bdc2c_IsLinux(_5511_os));
}



inline jule::Bool _20e4beba6_Is32Bit(jule::Str _5812_arch) {
	return _20e4be04b_IsI386(_5812_arch);
}



inline jule::Bool _20e4bee4d_Is64Bit(jule::Str _6112_arch) {
	return (_20e4be2e3_IsAmd64(_6112_arch) || _20e4be58a_IsArm64(_6112_arch));
}



inline void _20e4cc06a_init(void) {
	jule::Str _2513_path = _20e51e61d_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_20e50d0bd_PathWd=({
			auto except = _20d454b4d_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_20e50a96c_PathExec=_20d49e7d0_Dir(_2513_path);
		_20e508aad_PathStdlib=_20d4b1cdc_Join(jule::Slice<jule::Str>::make({_20e50a96c_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_20e518848_PathApi=_20d4b1cdc_Join(jule::Slice<jule::Str>::make({_20e50a96c_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _20e7de415_IsUnaryOp(jule::Str _31014_kind) {
	{
		auto &expr = _20e73edd2_UnaryOps;
		auto it = expr.begin();
		_iter_begin_214e096c8:;
		if (it != expr.end()) {
			jule::Str &_31112_op = *it;
			{
				if ((_31014_kind == _31112_op)) {
					return true;
				};
			}
			_iter_next_214e096c8:;
			++it;
			goto _iter_begin_214e096c8;
		}
		_iter_end_214e096c8:;
	};
	return false;
}



inline jule::Bool _20e7de701_IsBinOp(jule::Str _32012_kind) {
	{
		auto &expr = _20e740223_BinOps;
		auto it = expr.begin();
		_iter_begin_214e0a0d0:;
		if (it != expr.end()) {
			jule::Str &_32112_op = *it;
			{
				if ((_32012_kind == _32112_op)) {
					return true;
				};
			}
			_iter_next_214e0a0d0:;
			++it;
			goto _iter_begin_214e0a0d0;
		}
		_iter_end_214e0a0d0:;
	};
	return false;
}



inline jule::Bool _20e7decb7_IsStr(jule::Str _34010_k) {
	return ((!(_34010_k.empty())) && ((_34010_k[0LL] == '\"') || _20e7e005e_IsRawStr(_34010_k)));
}



inline jule::Bool _20e7e005e_IsRawStr(jule::Str _34313_k) {
	return ((!(_34313_k.empty())) && (_34313_k[0LL] == '`'));
}



inline jule::Bool _20e7e0306_IsRune(jule::Str _34711_k) {
	return ((!(_34711_k.empty())) && (_34711_k[0LL] == '\''));
}



inline jule::Bool _20e7e0922_IsBool(jule::Str _35311_k) {
	return ((_35311_k == jule::Str("true", 4)) || (_35311_k == jule::Str("false", 5)));
}



inline jule::Bool _20e7e0bb9_IsFloat(jule::Str _35612_k) {
	if (_20e4446b9_HasPrefix(_35612_k,jule::Str("0x", 2))) {
		return _20e449b42_ContainsAny(_35612_k,jule::Str(".pP", 3));
	};
	return _20e449b42_ContainsAny(_35612_k,jule::Str(".eE", 3));
}



inline jule::Bool _20e7e0e61_IsNum(jule::Str _36410_k) {
	if (_36410_k.empty()) {
		return false;
	};
	jule::U8 _3699_b = _36410_k[0LL];;
	return ((_3699_b == '.') || (('0' <= _3699_b) && (_3699_b <= '9')));
}



inline jule::Bool _20e7e14a0_IsIgnoreIdent(jule::Str _37918_ident) {
	return (_37918_ident == jule::Str("_", 1));
}



inline jule::Bool _20e7e1747_IsAnonIdent(jule::Str _38216_ident) {
	return (_38216_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _20e7e1c86_IsSpace(jule::I32 _39512_r) {
	{
		auto &expr = _20e73eb6d_Spaces;
		auto it = expr.begin();
		_iter_begin_214e13ea7:;
		if (it != expr.end()) {
			jule::I32 &_39612_cr = *it;
			{
				if ((_39512_r == _39612_cr)) {
					return true;
				};
			}
			_iter_next_214e13ea7:;
			++it;
			goto _iter_begin_214e13ea7;
		}
		_iter_end_214e13ea7:;
	};
	return false;
}



inline jule::Bool _20e7e21d7_IsLetter(jule::I32 _40513_r) {
	return _20e2e9409_IsLetter(_40513_r);
}



inline jule::Bool _20e7e2726_IsDecimal(jule::U8 _42514_b) {
	return (('0' <= _42514_b) && (_42514_b <= '9'));
}



inline jule::Bool _20e7e29bd_IsBinary(jule::U8 _42813_b) {
	return ((_42813_b == '0') || (_42813_b == '1'));
}



inline jule::Bool _20e7e2c65_IsOctal(jule::U8 _43112_b) {
	return (('0' <= _43112_b) && (_43112_b <= '7'));
}



inline jule::Bool _20e7e300c_IsHex(jule::U8 _43410_b) {
	{
		
		if ((('0' <= _43410_b) && (_43410_b <= '9'))) {
			_case_begin_214e18d14:;
			{
				return true;
			}
		}
		else if ((('a' <= _43410_b) && (_43410_b <= 'f'))) {
			_case_begin_214e185e9:;
			{
				return true;
			}
		}
		else if ((('A' <= _43410_b) && (_43410_b <= 'F'))) {
			_case_begin_214e18660:;
			{
				return true;
			}
		}
		else {
			_case_begin_214e18583:;
			{
				return false;
			}
		}
		_match_end_214e184c8:;
	};
}



inline jule::Bool _20e7e32a4_IsAssign(jule::U64 _44913_id) {
	return (((((((_44913_id == static_cast<jule::U64>(2LLU)) || (_44913_id == static_cast<jule::U64>(30LLU))) || (_44913_id == static_cast<jule::U64>(33LLU))) || (_44913_id == static_cast<jule::U64>(20LLU))) || (_44913_id == static_cast<jule::U64>(27LLU))) || (_44913_id == static_cast<jule::U64>(3LLU))) || (_44913_id == static_cast<jule::U64>(7LLU)));
}



inline jule::Bool _20e7e354b_IsPostfixOp(jule::Str _46016_kind) {
	{
		auto &expr = _20e7d82cc_PostfixOps;
		auto it = expr.begin();
		_iter_begin_214e1a761:;
		if (it != expr.end()) {
			jule::Str &_46112_op = *it;
			{
				if ((_46016_kind == _46112_op)) {
					return true;
				};
			}
			_iter_next_214e1a761:;
			++it;
			goto _iter_begin_214e1a761;
		}
		_iter_end_214e1a761:;
	};
	return false;
}



inline jule::Bool _20e7e37e3_IsAssignOp(jule::Str _47015_kind) {
	if (_20e7e354b_IsPostfixOp(_47015_kind)) {
		return true;
	};
	{
		auto &expr = _20e7d861d_AssignOps;
		auto it = expr.begin();
		_iter_begin_214e1d269:;
		if (it != expr.end()) {
			jule::Str &_47412_op = *it;
			{
				if ((_47015_kind == _47412_op)) {
					return true;
				};
			}
			_iter_next_214e1d269:;
			++it;
			goto _iter_begin_214e1d269;
		}
		_iter_end_214e1d269:;
	};
	return false;
}



inline jule::Ptr<_20e7e4096_File> _20e7e55c5_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_20e7e4096_File>(_20e7e4096_File{._field_Path=_6315_path, });
}



inline _20e4ba377_Log _20e7e6e01_makeErr(jule::I64 _11012_row, jule::I64 _11022_col, jule::Ptr<_20e7e4096_File>& _11033_f, jule::Str _11043_fmt, jule::Slice<jule::Any> _11056_args) {
	return _20e4ba377_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_11012_row, ._field_Column=_11022_col, ._field_Path=_11033_f.get()._field_Path, ._field_Text=_20e4ba7b7_Logf(_11043_fmt,jule::Any(_11056_args)), };
}



inline jule::Bool _20e7e7286_bytesHasPrefix(jule::Slice<jule::U8>& _12020_bytes, jule::Str _12035_prefix) {
	if ((_12020_bytes.len() < _12035_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12035_prefix;
		auto it = expr.begin();
		_iter_begin_214e28939:;
		if (it != expr.end()) {
			jule::I64 _1249_i = it - expr.begin();
			{
				if ((_12020_bytes[_1249_i] != _12035_prefix[_1249_i])) {
					return false;
				};
			}
			_iter_next_214e28939:;
			++it;
			_1249_i++;
			goto _iter_begin_214e28939;
		}
		_iter_end_214e28939:;
	};
	return true;
}



inline jule::Str _20e7e75c7_floatFmtE(jule::Slice<jule::U8>& _13215_txt, jule::I64 _13232_i) {
	jule::Str _13242_lit = jule::Str();
	(_13232_i)++;
	if ((_13232_i >= _13215_txt.len())) {
		return _13242_lit;
	};
	jule::U8 _13813_b = _13215_txt[_13232_i];;
	if ((_13813_b == '_')) {
		return _13242_lit;
	};
	if (((_13813_b == '+') || (_13813_b == '-'))) {
		(_13232_i)++;
		if ((_13232_i >= _13215_txt.len())) {
			return _13242_lit;
		};
		if ((_13215_txt[_13232_i] == '_')) {
			return _13242_lit;
		};
	};
	jule::I64 _1529_first = _13232_i;;
	for (; (_13232_i < _13215_txt.len()); (_13232_i)++) {
		{
			_13813_b=_13215_txt[_13232_i];
			if (((_13813_b != '_') && (!(_20e7e2726_IsDecimal(_13813_b))))) {
				goto _iter_end_214e2c19b;
			};
		}
	_iter_next_214e2c19b:;
	}
	_iter_end_214e2c19b:;;
	if ((_13232_i == _1529_first)) {
		_13242_lit = jule::Str();
		return _13242_lit;
	};
	_13242_lit = static_cast<jule::Str>(_13215_txt.slice(0LL,_13232_i));
	return _13242_lit;
}



inline jule::Str _20e7e795c_floatFmtP(jule::Slice<jule::U8>& _16615_txt, jule::I64 _16628_i) {
	return _20e7e75c7_floatFmtE(_16615_txt,_16628_i);
}



inline jule::Str _20e7e7c9d_floatFmtDotnp(jule::Slice<jule::U8>& _17019_txt, jule::I64 _17036_i) {
	if ((_17019_txt[_17036_i] != '.')) {
		return jule::Str();
	};
	(_17036_i)++;
	_julec_label_loop:;
	for (; (_17036_i < _17019_txt.len()); (_17036_i)++) {
		{
			jule::U8 _17813_b = _17019_txt[_17036_i];;
			{
				
				if ((_17813_b == '_') || _20e7e2726_IsDecimal(_17813_b)) {
					_case_begin_214e352c5:;
					{
						goto _iter_next_214e33a87;
					}
				}
				else if (_20e7e9552_isFloatFmtP(_17813_b,_17036_i)) {
					_case_begin_214e3533b:;
					{
						return _20e7e795c_floatFmtP(_17019_txt,_17036_i);
					}
				}
				else {
					_case_begin_214e3525e:;
					{
						goto _iter_end_214e33a87;
					}
				}
				_match_end_214e351e8:;
			};
		}
	_iter_next_214e33a87:;
	}
	_iter_end_214e33a87:;;
	return jule::Str();
}



inline jule::Str _20e7e80de_floatFmtDotfp(jule::Slice<jule::U8>& _19119_txt, jule::I64 _19136_i) {
	_19136_i+=2LL;
	return _20e7e75c7_floatFmtE(_19119_txt,_19136_i);
}



inline jule::Str _20e7e8430_floatFmtDotp(jule::Slice<jule::U8>& _19618_txt, jule::I64 _19635_i) {
	(_19635_i)++;
	return _20e7e75c7_floatFmtE(_19618_txt,_19635_i);
}



inline jule::Str _20e7e8881_floatNum(jule::Slice<jule::U8>& _20114_txt, jule::I64 _20131_i) {
	jule::Str _20141_lit = jule::Str();
	(_20131_i)++;
	if ((_20131_i >= _20114_txt.len())) {
		_20141_lit = static_cast<jule::Str>(_20114_txt);
		return _20141_lit;
	};
	if ((_20114_txt[_20131_i] == '_')) {
		(_20131_i)--;
		_20141_lit = static_cast<jule::Str>(_20114_txt.slice(0LL,_20131_i));
		return _20141_lit;
	};
	for (; (_20131_i < _20114_txt.len()); (_20131_i)++) {
		{
			jule::U8 _21113_b = _20114_txt[_20131_i];;
			if (((_20131_i > 1LL) && ((_21113_b == 'e') || (_21113_b == 'E')))) {
				_20141_lit = _20e7e75c7_floatFmtE(_20114_txt,_20131_i);
				return _20141_lit;
			};
			if (((_21113_b != '_') && (!(_20e7e2726_IsDecimal(_21113_b))))) {
				goto _iter_end_214e37ae1;
			};
		}
	_iter_next_214e37ae1:;
	}
	_iter_end_214e37ae1:;;
	if ((_20131_i == 1LL)) {
		return _20141_lit;
	};
	_20141_lit = static_cast<jule::Str>(_20114_txt.slice(0LL,_20131_i));
	return _20141_lit;
}



inline jule::Str _20e7e8b28_commonNum(jule::Slice<jule::U8>& _22615_txt) {
	jule::Str _22630_lit = jule::Str();
	jule::I64 _22713_i = 0LL;;
	_julec_label_loop:;
	for (; (_22713_i < _22615_txt.len()); (_22713_i)++) {
		{
			jule::U8 _23013_b = _22615_txt[_22713_i];;
			{
				
				if ((_23013_b == '.')) {
					_case_begin_214e3c332:;
					{
						_22630_lit = _20e7e8881_floatNum(_22615_txt,_22713_i);
						return _22630_lit;
					}
				}
				else if ((_23013_b == '_')) {
					_case_begin_214e3c3a9:;
					{
						goto _iter_next_214e3b5b7;
					}
				}
				else if (_20e7e9211_isFloatFmtE(_23013_b,_22713_i)) {
					_case_begin_214e3c431:;
					{
						_22630_lit = _20e7e75c7_floatFmtE(_22615_txt,_22713_i);
						return _22630_lit;
					}
				}
				else if ((!(_20e7e2726_IsDecimal(_23013_b)))) {
					_case_begin_214e3c4a8:;
					{
						goto _iter_end_214e3b5b7;
					}
				}
				_match_end_214e3c255:;
			};
		}
	_iter_next_214e3b5b7:;
	}
	_iter_end_214e3b5b7:;;
	if ((_22713_i == 0LL)) {
		return _22630_lit;
	};
	_22630_lit = static_cast<jule::Str>(_22615_txt.slice(0LL,_22713_i));
	return _22630_lit;
}



inline jule::Str _20e7e8dc0_binaryNum(jule::Slice<jule::U8>& _24915_txt) {
	jule::Str _24930_lit = jule::Str();
	if ((!(_20e7e7286_bytesHasPrefix(_24915_txt,jule::Str("0b", 2))))) {
		_24930_lit = jule::Str();
		return _24930_lit;
	};
	if ((_24915_txt.len() < 2LL)) {
		return _24930_lit;
	};
	;
	jule::I64 _25813_i = 2LL;;
	for (; (_25813_i < _24915_txt.len()); (_25813_i)++) {
		{
			if (((_24915_txt[_25813_i] != '_') && (!(_20e7e29bd_IsBinary(_24915_txt[_25813_i]))))) {
				goto _iter_end_214e40a94;
			};
		}
	_iter_next_214e40a94:;
	}
	_iter_end_214e40a94:;;
	if ((_25813_i == 2LL)) {
		return _24930_lit;
	};
	_24930_lit = static_cast<jule::Str>(_24915_txt.slice(0LL,_25813_i));
	return _24930_lit;
}



inline jule::Bool _20e7e9211_isFloatFmtE(jule::U8 _27116_b, jule::I64 _27125_i) {
	return ((_27125_i > 0LL) && ((_27116_b == 'e') || (_27116_b == 'E')));
}



inline jule::Bool _20e7e9552_isFloatFmtP(jule::U8 _27516_b, jule::I64 _27525_i) {
	return ((_27525_i > 0LL) && ((_27516_b == 'p') || (_27516_b == 'P')));
}



inline jule::Bool _20e7e9893_isFloatFmtDotnp(jule::Slice<jule::U8>& _27921_txt, jule::I64 _27938_i) {
	if ((_27921_txt[_27938_i] != '.')) {
		return false;
	};
	(_27938_i)++;
	_julec_label_loop:;
	for (; (_27938_i < _27921_txt.len()); (_27938_i)++) {
		{
			jule::U8 _28613_b = _27921_txt[_27938_i];;
			{
				
				if ((_28613_b == '_') || _20e7e2726_IsDecimal(_28613_b)) {
					_case_begin_214e4548e:;
					{
						goto _iter_next_214e434ae;
					}
				}
				else if (_20e7e9552_isFloatFmtP(_28613_b,_27938_i)) {
					_case_begin_214e45505:;
					{
						return true;
					}
				}
				else {
					_case_begin_214e45428:;
					{
						goto _iter_end_214e434ae;
					}
				}
				_match_end_214e453b2:;
			};
		}
	_iter_next_214e434ae:;
	}
	_iter_end_214e434ae:;;
	return false;
}



inline jule::Bool _20e7e9bd4_isFloatFmtDotp(jule::Slice<jule::U8>& _30020_txt, jule::I64 _30033_i) {
	{
		
		if ((_30020_txt.len() < 3LL)) {
			_case_begin_214e47293:;
			{
				goto _case_begin_214e46a56;
			}
		}
		else if ((_30020_txt[_30033_i] != '.')) {
			_case_begin_214e46a56:;
			{
				goto _case_begin_214e46abc;
			}
		}
		else if (((_30020_txt[(_30033_i + 1LL)] != 'p') && (_30020_txt[(_30033_i + 1LL)] != 'P'))) {
			_case_begin_214e46abc:;
			{
				return false;
			}
		}
		else {
			_case_begin_214e469e0:;
			{
				return true;
			}
		}
		_match_end_214e46913:;
	};
}



inline jule::Bool _20e7ea025_isFloatFmtDotfp(jule::Slice<jule::U8>& _31321_txt, jule::I64 _31334_i) {
	{
		
		if ((_31321_txt.len() < 4LL)) {
			_case_begin_214e495a3:;
			{
				goto _case_begin_214e48ddd;
			}
		}
		else if ((_31321_txt[_31334_i] != '.')) {
			_case_begin_214e48ddd:;
			{
				goto _case_begin_214e48e54;
			}
		}
		else if (((_31321_txt[(_31334_i + 1LL)] != 'f') && (_31321_txt[(_31334_i + 1LL)] != 'F'))) {
			_case_begin_214e48e54:;
			{
				goto _case_begin_214e48eba;
			}
		}
		else if (((_31321_txt[(_31334_i + 2LL)] != 'p') && (_31321_txt[(_31334_i + 1LL)] != 'P'))) {
			_case_begin_214e48eba:;
			{
				return false;
			}
		}
		else {
			_case_begin_214e4889e:;
			{
				return true;
			}
		}
		_match_end_214e487c2:;
	};
}



inline jule::Str _20e7ea476_octalNum(jule::Slice<jule::U8>& _32814_txt) {
	jule::Str _32829_lit = jule::Str();
	if ((_32814_txt[0LL] != '0')) {
		_32829_lit = jule::Str();
		return _32829_lit;
	};
	if ((_32814_txt.len() < 2LL)) {
		return _32829_lit;
	};
	jule::I64 _33613_octalStart = 1LL;;
	jule::Bool _33813_o = false;;
	if ((_32814_txt[1LL] == 'o')) {
		if ((_32814_txt.len() < 3LL)) {
			return _32829_lit;
		};
		(_33613_octalStart)++;
		_33813_o=true;
	};
	jule::I64 _34713_i = _33613_octalStart;;
	for (; (_34713_i < _32814_txt.len()); (_34713_i)++) {
		{
			jule::U8 _34913_b = _32814_txt[_34713_i];;
			if ((_34913_b == '.')) {
				if (_33813_o) {
					_32829_lit = jule::Str();
					return _32829_lit;
				};
				_32829_lit = _20e7e8881_floatNum(_32814_txt,_34713_i);
				return _32829_lit;
			};
			if (_20e7e9211_isFloatFmtE(_34913_b,_34713_i)) {
				_32829_lit = _20e7e75c7_floatFmtE(_32814_txt,_34713_i);
				return _32829_lit;
			};
			if (((_34913_b != '_') && (!(_20e7e2c65_IsOctal(_34913_b))))) {
				goto _iter_end_214e4e3cc;
			};
		}
	_iter_next_214e4e3cc:;
	}
	_iter_end_214e4e3cc:;;
	if ((_34713_i == _33613_octalStart)) {
		return _32829_lit;
	};
	_32829_lit = static_cast<jule::Str>(_32814_txt.slice(0LL,_34713_i));
	return _32829_lit;
}



inline jule::Str _20e7ea71d_hexNum(jule::Slice<jule::U8>& _37012_txt) {
	jule::Str _37027_lit = jule::Str();
	if ((_37012_txt.len() < 3LL)) {
		return _37027_lit;
	};
	if (((_37012_txt[0LL] != '0') || ((_37012_txt[1LL] != 'x') && (_37012_txt[1LL] != 'X')))) {
		return _37027_lit;
	};
	;
	jule::I64 _37913_i = 2LL;;
	_julec_label_loop:;
	for (; (_37913_i < _37012_txt.len()); (_37913_i)++) {
		{
			jule::U8 _38213_b = _37012_txt[_37913_i];;
			{
				
				if (_20e7e9bd4_isFloatFmtDotp(_37012_txt,_37913_i)) {
					_case_begin_214e5502b:;
					{
						_37027_lit = _20e7e8430_floatFmtDotp(_37012_txt,_37913_i);
						return _37027_lit;
					}
				}
				else if (_20e7ea025_isFloatFmtDotfp(_37012_txt,_37913_i)) {
					_case_begin_214e550a3:;
					{
						_37027_lit = _20e7e80de_floatFmtDotfp(_37012_txt,_37913_i);
						return _37027_lit;
					}
				}
				else if (_20e7e9552_isFloatFmtP(_38213_b,_37913_i)) {
					_case_begin_214e5512a:;
					{
						_37027_lit = _20e7e795c_floatFmtP(_37012_txt,_37913_i);
						return _37027_lit;
					}
				}
				else if (_20e7e9893_isFloatFmtDotnp(_37012_txt,_37913_i)) {
					_case_begin_214e551a2:;
					{
						_37027_lit = _20e7e7c9d_floatFmtDotnp(_37012_txt,_37913_i);
						return _37027_lit;
					}
				}
				else if (((_38213_b != '_') && (!(_20e7e300c_IsHex(_38213_b))))) {
					_case_begin_214e55229:;
					{
						goto _iter_end_214e54239;
					}
				}
				_match_end_214e54e3d:;
			};
		}
	_iter_next_214e54239:;
	}
	_iter_end_214e54239:;;
	if ((_37913_i == 2LL)) {
		return _37027_lit;
	};
	_37027_lit = static_cast<jule::Str>(_37012_txt.slice(0LL,_37913_i));
	return _37027_lit;
}



inline jule::Str _20e7eaa5e_hexEscape(jule::Slice<jule::U8>& _40315_txt, jule::I64 _40328_n) {
	jule::Str _40338_seq = jule::Str();
	if ((_40315_txt.len() < _40328_n)) {
		return _40338_seq;
	};
	;
	jule::I64 _40913_i = 2LL;;
	for (; (_40913_i < _40328_n); (_40913_i)++) {
		{
			if ((!(_20e7e300c_IsHex(_40315_txt[_40913_i])))) {
				return _40338_seq;
			};
		}
	_iter_next_214e57d42:;
	}
	_iter_end_214e57d42:;;
	_40338_seq=static_cast<jule::Str>(_40315_txt.slice(0LL,_40328_n));
	return _40338_seq;
}



inline jule::Str _20e7ead06_bigUnicodePointEscape(jule::Slice<jule::U8>& _42127_txt) {
	return _20e7eaa5e_hexEscape(_42127_txt,10LL);
}



inline jule::Str _20e7eb0c0_littleUnicodePointEscape(jule::Slice<jule::U8>& _42630_txt) {
	return _20e7eaa5e_hexEscape(_42630_txt,6LL);
}



inline jule::Str _20e7eb279_hexByteEscape(jule::Slice<jule::U8>& _43119_txt) {
	return _20e7eaa5e_hexEscape(_43119_txt,4LL);
}



inline jule::Str _20e7eb510_byteEscape(jule::Slice<jule::U8>& _43616_txt) {
	jule::Str _43631_seq = jule::Str();
	if ((_43616_txt.len() < 4LL)) {
		return _43631_seq;
	};
	if ((((!(_20e7e2c65_IsOctal(_43616_txt[1LL]))) || (!(_20e7e2c65_IsOctal(_43616_txt[2LL])))) || (!(_20e7e2c65_IsOctal(_43616_txt[3LL]))))) {
		return _43631_seq;
	};
	_43631_seq = static_cast<jule::Str>(_43616_txt.slice(0LL,4LL));
	return _43631_seq;
}



inline jule::Slice<_20e4ba377_Log> _20e801009_Lex(jule::Ptr<_20e7e4096_File> _82512_f, jule::I64 _82522_mode) {
	if ((_82512_f == nullptr)) {
		return nullptr;
	};
	_20e7ebbe7_lex _83013_lex = _20e7ebbe7_lex{._field_mode=_82522_mode, ._field_file=_82512_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_20e7ee788_newLine(&_83013_lex);
	_20e7ec786_lex(&_83013_lex);
	if ((_83013_lex._field_errors.len() > 0LL)) {
		return _83013_lex._field_errors;
	};
	_82512_f.get()._field_Tokens=_83013_lex._field_tokens;
	return nullptr;
}



inline void _2110175dc_lshiftUnsig(_210ea46cd_Const& _58721_c, _210ea46cd_Const& _58732_x) {
	jule::U64 _5889_l = _21101163b_AsU64(&_58721_c);;
	jule::U64 _5899_r = _21101163b_AsU64(&_58732_x);;
	_211011d9a_SetU64(&_58721_c, static_cast<jule::U64>((_5889_l << _5899_r)));
}



inline void _2110178d9_rshiftUnsig(_210ea46cd_Const& _59321_c, _210ea46cd_Const& _59332_x) {
	jule::U64 _5949_l = _21101163b_AsU64(&_59321_c);;
	jule::U64 _5959_r = _21101163b_AsU64(&_59332_x);;
	_211011d9a_SetU64(&_59321_c, static_cast<jule::U64>((_5949_l >> _5959_r)));
}



inline jule::I64 _211aaea68_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _211ab7279_Len64(_6119_x)));
}



inline jule::I64 _211ab0abe_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_211ab175c_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));
}



inline jule::I64 _211ab14b5_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_211ab021c__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _211ab175c_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_211ab086b__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _211ab6ed2_Len32(jule::U32 _35214_x) {
	jule::I64 _35224_n = jule::I64();
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		_35224_n=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		_35224_n+=8LL;
	};
	_35224_n = static_cast<jule::I64>((_35224_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return _35224_n;
}



inline jule::I64 _211ab7279_Len64(jule::U64 _36614_x) {
	jule::I64 _36624_n = jule::I64();
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		_36624_n=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		_36624_n+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		_36624_n+=8LL;
	};
	_36624_n = static_cast<jule::I64>((_36624_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return _36624_n;
}



inline std::tuple<jule::U64,jule::U64> _211ab7e39_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	jule::U64 _41540_sum = jule::U64();
	jule::U64 _41550_carryout = jule::U64();
	_41540_sum=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	_41550_carryout=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(_41540_sum)))) >> 63LLU));
	return std::make_tuple(_41540_sum,_41550_carryout);
}



inline std::tuple<jule::U64,jule::U64> _211ab95bc_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	jule::U64 _49928_hi = jule::U64();
	jule::U64 _49937_lo = jule::U64();
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49928_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49937_lo=static_cast<jule::U64>((_49910_x * _49918_y));
	return std::make_tuple(_49928_hi,_49937_lo);
}



inline jule::U32 _2119daca2_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));
}



inline jule::F32 _2119db08d_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));
}



inline jule::U64 _2119db335_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));
}



inline jule::F64 _2119db654_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));
}



inline std::tuple<jule::F64,jule::I64> _2119ddc61_Frexp(jule::F64 _4714_f) {
	jule::F64 _4724_frac = jule::F64();
	jule::I64 _4735_exp = jule::I64();
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_215151810:;
			{
				_4724_frac = _4714_f;
				_4735_exp = 0LL;
				return std::make_tuple(_4724_frac,_4735_exp);
			}
		}
		else if (_211a547cc_IsInf(_4714_f,0LL) || _211a4c4c8_IsNaN(_4714_f)) {
			_case_begin_215151887:;
			{
				_4724_frac = _4714_f;
				_4735_exp = 0LL;
				return std::make_tuple(_4724_frac,_4735_exp);
			}
		}
		_match_end_215151722:;
	};
	std::tie(_4714_f,_4735_exp) = _211a55dd8_normalize(_4714_f);
	jule::U64 _5613_x = _2119db335_F64Bits(_4714_f);;
	_4735_exp+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4724_frac=static_cast<jule::F64>(_2119db654_F64FromBits(_5613_x));
	return std::make_tuple(_4724_frac,_4735_exp);
}



inline jule::F64 _211a4b593_NaN(void) {
	return static_cast<jule::F64>(_2119db654_F64FromBits(9221120237041090561LLU));
}



inline jule::Bool _211a4c4c8_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);
}



inline jule::F64 _211a4de69_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_2119db654_F64FromBits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_2119db654_F64FromBits(18442240474082181120LLU));
}



inline jule::Bool _211a547cc_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I64> _211a55dd8_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	;
	if ((_211a6ca26_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _211a660a2_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_211a4c4c8_IsNaN(_1118_x) || _211a547cc_IsInf(_1118_x,1LL)) {
			_case_begin_215194d1a:;
			{
				return _1118_x;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_215194d92:;
			{
				return static_cast<jule::F64>(_211a4b593_NaN());
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_215194e19:;
			{
				return static_cast<jule::F64>(_211a4de69_Inf(-1LL));
			}
		}
		_match_end_215194c4e:;
	};
	jule::F64 _13314_f1;;
	jule::I64 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _2119ddc61_Frexp(_1118_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _211a6ca26_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_2119db654_F64FromBits(static_cast<jule::U64>((_2119db335_F64Bits(_438_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _211ac2e66_Modf(jule::F64 _449_f) {
	jule::F64 _4419_integer = jule::F64();
	jule::F64 _4433_frac = jule::F64();
	;
	jule::F64 _469_absF = _211a6ca26_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_215217046:;
		}
		_iter_end_215217046:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4419_integer = _4713_i;
	_4433_frac = static_cast<jule::F64>((_449_f - _4713_i));
	return std::make_tuple(_4419_integer,_4433_frac);
}



inline jule::F64 _211ac372a_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac;;
	jule::I64 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _2119ddc61_Frexp(_449_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_211a660a2_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _2115327e9_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_211546ea1_genericFtoa(jule::Slice<jule::U8>::alloc(0LL,_2116d1316_max(static_cast<jule::I64>((_7832_prec + 4LL)),24LL)),_7813_f,_7821_fmt,_7832_prec,_7843_bit_size));
}



inline jule::Slice<jule::U8> _211546ea1_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_2116c9dd1_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_21542a688:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_2119daca2_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_2116c9dd1_floatInfo>)((&(_211522773_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_21542a875:;
			{
				_8313_bits=static_cast<jule::U64>(_2119db335_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_2116c9dd1_floatInfo>)((&(_211527c0c_f64info))));
			}
		}
		else {
			_case_begin_21542a05b:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_215428c19:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_21542e071:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_21543157e:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_215431716:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_21543057d:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));
						}
					}
					_match_end_2154304a1:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_21542eacc:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_21542a468:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_21542e01b:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _2115ddc90_fmtB(_8220_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _2116a2848_fmtX(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_20e36ca21_decimalSlice _13213_digs = _20e36ca21_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_211675ce4_ryuFtoaShortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_21543575e:;
				{
					_8258_prec=static_cast<jule::I64>(_2116d1316_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_2154357d6:;
				{
					_8258_prec=static_cast<jule::I64>(_2116d1316_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_215435880:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_215434a38:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_215437e37:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_215437794:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_215437970:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_21543782c:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_2119c62cb_ryuFtoaFixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_2119ccb1d_ryuFtoaFixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _2115a498c_bigFtoa(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _2115cb387_fmtDigits(_8220_dst,_1359_shortest,_969_neg,_13213_digs,_8258_prec,_8243_fmt);
}



inline jule::Slice<jule::U8> _2115a498c_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _2116c9dd1_floatInfo& _18327_flt) {
	_211b0544e_decimal _18413_d = _211b0544e_decimal{};;
	_211b0563b_assign(&_18413_d, _1835_mant);
	_211b0576d_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_20e36ca21_decimalSlice _18713_digs = _20e36ca21_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_2115cd554_roundShortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_20e36ca21_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_21543cbea:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_21544058d:;
				{
					_18233_prec=static_cast<jule::I64>(_2116d1316_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_215440604:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_21543ebec:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_21543e614:;
				{
					_211b05b14_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_21543e67a:;
				{
					_211b05b14_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_21543e702:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_211b05b14_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_21543e559:;
		};
		_18713_digs=_20e36ca21_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _2115cb387_fmtDigits(_18216_dst,_1889_shortest,_18255_neg,_18713_digs,_18233_prec,_18244_fmt);
}



inline jule::Slice<jule::U8> _2115cb387_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _20e36ca21_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_215445708:;
			{
				return _2115dc651_fmtE(_21918_dst,_21947_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_21544576e:;
			{
				return _2115dcd05_fmtF(_21918_dst,_21947_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_2154457d5:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _2115dc651_fmtE(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _2115dcd05_fmtF(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>(_2116d1316_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_2154455b5:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));
}



inline void _2115cd554_roundShortest(_211b0544e_decimal& _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _2116c9dd1_floatInfo& _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		_25723_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25757_flt._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * (_25723_d._field_dp - _25723_d._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)))))) {
		return;;
	};
	_211b0544e_decimal _28713_upper = _211b0544e_decimal{};;
	_211b0563b_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_211b0576d_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << _25757_flt._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_211b0544e_decimal _30613_lower = _211b0544e_decimal{};;
	_211b0563b_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_211b0576d_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25723_d._field_dp);;
			if ((_33513_mi >= _25723_d._field_nd)) {
				goto _iter_end_215453969;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25723_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_215458d7b:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_215458e03:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_215458e7a:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_215458cb0:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_21545c126:;
					{
						_211b05b14_round(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_21545c19d:;
					{
						_211b058a0_roundDown(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_21545c225:;
					{
						_211b059d2_roundUp(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_21545c06b:;
			};
		}
	_iter_next_215453969:;
	}
	_iter_end_215453969:;;
}



inline jule::Slice<jule::U8> _2115dc651_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _20e36ca21_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _2116cae37_min(_39637_d._field_nd,static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_215461b20:;
		}
		_iter_end_215461b20:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_215464b9a:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_215465e65:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_2154642d7:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_215462a77:;
	};
	return _39613_dst;
}



inline jule::Slice<jule::U8> _2115dcd05_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _20e36ca21_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _2116cae37_min(_45137_d._field_nd,_45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_215468ab1:;
		}
		_iter_end_215468ab1:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_21546a376:;
		}
		_iter_end_21546a376:;;
	};
	return _45113_dst;
}



inline jule::Slice<jule::U8> _2115ddc90_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _2116c9dd1_floatInfo& _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	std::tie(_48413_dst,std::ignore) = _211b0761b_fmtBits(_48413_dst,_48437_mant,10LL,false,true);
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>(_48463_flt._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	std::tie(_48413_dst,std::ignore) = _211b0761b_fmtBits(_48413_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)),10LL,(_48452_exp < 0LL),true);
	return _48413_dst;
}



inline jule::Slice<jule::U8> _2116a2848_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _2116c9dd1_floatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_215470667:;
	}
	_iter_end_215470667:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_21547555c:;
		}
		_iter_end_21547555c:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_215477d78:;
		}
		_iter_end_215477d78:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _21173c086_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_21547a2ba:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_21547c982:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_21547a52e:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_2154784a5:;
	};
	return _50613_dst;
}



inline jule::I64 _2116cae37_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I64 _2116d1316_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _21173c086_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));
}



inline std::tuple<jule::U64,jule::I64> _21175bec9_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	if (_5118_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_215482602:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_21548249d:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_21173c086_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_21548436d:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_21173c086_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_215484181:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_21173c086_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_215484208:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_215483cda:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_215483c0d:;
					};
				};
			}
		}
		else {
			_case_begin_215481700:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_21548169a:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_215489043:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_215488680:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_215488949:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_2154887c3:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_215488a37:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_21548a1dc:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_21548a187:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5118_s;
		auto it = expr.begin();
		_iter_begin_21548b1ee:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_21548c84e:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _21173c086_lower(_10912_c)) && (_21173c086_lower(_10912_c) <= 'z'))) {
						_case_begin_21548c71c:;
						{
							_11017_d=static_cast<jule::U8>(((_21173c086_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_21548c783:;
						{
							goto _iter_next_21548b1ee;
						}
					}
					else {
						_case_begin_21548c288:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_21548c222:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_21548b1ee:;
			++it;
			goto _iter_begin_21548b1ee;
		}
		_iter_end_21548b1ee:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _21177e56d_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un;;
	jule::I64 _14714_err;;
	std::tie(_14710_un,_14714_err) = _21175bec9_parseUint(_14618_s,_14630_base,_14645_bit_size);
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _21180b1ee_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I64 _18718_err;;
	std::tie(_18714_un,_18718_err) = _21175bec9_parseUint(_17217_s,_17225_base,_17240_bitSize);
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _2118cb214_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	jule::F64 _4157_f = jule::F64();
	jule::Bool _4165_ok = jule::Bool();
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			_4157_f=static_cast<jule::F64>(_2119db654_F64FromBits(9223372036854775808LLU));
		};
		_4165_ok = true;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::I64 _579_clz = _211aaea68_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi;;
	jule::U64 _6323_xLo;;
	std::tie(_6314_xHi,_6323_xLo) = _211ab95bc_Mul64(_4122_man,_2115b796c_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi;;
		jule::U64 _6719_yLo;;
		std::tie(_6714_yHi,_6719_yLo) = _211ab95bc_Mul64(_4122_man,_2115b796c_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
		jule::U64 _6818_mergedHi = _6314_xHi;;
		jule::U64 _6828_mergedLo = (_6323_xLo + _6714_yHi);;
		std::tie(_6818_mergedHi,_6828_mergedLo) = std::make_tuple(_6314_xHi,(_6323_xLo + _6714_yHi));
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			_4157_f = 0LL;
			_4165_ok = false;
			return std::make_tuple(_4157_f,_4165_ok);
		};
		std::tie(_6314_xHi,_6323_xLo) = std::make_tuple(_6818_mergedHi,_6828_mergedLo);
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	_4157_f = static_cast<jule::F64>(_2119db654_F64FromBits(_10313_retBits));
	_4165_ok = true;
	return std::make_tuple(_4157_f,_4165_ok);
}



inline std::tuple<jule::F32,jule::Bool> _2119196a3_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	jule::F32 _11057_f = jule::F32();
	jule::Bool _11065_ok = jule::Bool();
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			_11057_f=static_cast<jule::F32>(_2119db08d_F32FromBits(2147483648LLU));
		};
		_11065_ok = true;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::I64 _1329_clz = _211aaea68_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _211ab95bc_Mul64(_11022_man,_2115b796c_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _211ab95bc_Mul64(_11022_man,_2115b796c_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			_11057_f = 0LL;
			_11065_ok = false;
			return std::make_tuple(_11057_f,_11065_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	_11057_f = static_cast<jule::F32>(_2119db08d_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	_11065_ok = true;
	return std::make_tuple(_11057_f,_11065_ok);
}



inline jule::I64 _2116db145_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_2154b9b34:;
	}
	_iter_end_2154b9b34:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _211523851_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_2154be3ca:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_2154be452;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_2154be452:;
			{
				jule::I64 _8317_caseN = _2116db145_commonPrefixLenIgnoreCase(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					_6826_f = static_cast<jule::F64>(_211a4de69_Inf(_7213_sign));
					_6834_n = static_cast<jule::I64>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_2154be4c9:;
			{
				if ((_2116db145_commonPrefixLenIgnoreCase(_6816_s,jule::Str("NaN", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_211a4b593_NaN());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_2154be30e:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _21196801a_readFloat(jule::Str _10314_s) {
	jule::U64 _10324_mantissa = jule::U64();
	jule::I64 _10339_exp = jule::I64();
	jule::Bool _10349_neg = jule::Bool();
	jule::Bool _10360_trunc = jule::Bool();
	jule::Bool _10373_hex = jule::Bool();
	jule::I64 _10384_i = jule::I64();
	jule::Bool _10392_ok = jule::Bool();
	if ((_10384_i >= _10314_s.len())) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	{
		
		if ((_10314_s[_10384_i] == '+')) {
			_case_begin_2154c5623:;
			{
				(_10384_i)++;
			}
		}
		else if ((_10314_s[_10384_i] == '-')) {
			_case_begin_2154c5689:;
			{
				_10349_neg=true;
				(_10384_i)++;
			}
		}
		_match_end_2154c5447:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((_10384_i + 2LL) < _10314_s.len()) && (_10314_s[_10384_i] == '0')) && (_21173c086_lower(_10314_s[(_10384_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		_10384_i+=2LL;
		_11913_expChar='p';
		_10373_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (_10384_i < _10314_s.len()); (_10384_i)++) {
		{
			jule::U8 _13313_c = _10314_s[_10384_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_2154cba9c:;
					{
						goto _iter_next_2154cae97;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_2154cbb24:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_2154cae97;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_2154cbb9b:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_2154cae97;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=_11713_base;
							_10324_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							_10360_trunc=true;
						};
						goto _iter_next_2154cae97;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _21173c086_lower(_13313_c))) && (_21173c086_lower(_13313_c) <= 'f'))) {
					_case_begin_2154cbc23:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=16LLU;
							_10324_mantissa+=static_cast<jule::U64>(((_21173c086_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							_10360_trunc=true;
						};
						goto _iter_next_2154cae97;
					}
				}
				_match_end_2154cb9c0:;
			};
			goto _iter_end_2154cae97;
		}
	_iter_next_2154cae97:;
	}
	_iter_end_2154cae97:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((_10384_i < _10314_s.len()) && (_21173c086_lower(_10314_s[_10384_i]) == _11913_expChar))) {
		(_10384_i)++;
		if ((_10384_i >= _10314_s.len())) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[_10384_i] == '+')) {
			(_10384_i)++;
		} else if ((_10314_s[_10384_i] == '-')) {
			(_10384_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10384_i >= _10314_s.len()) || (_10314_s[_10384_i] < '0')) || (_10314_s[_10384_i] > '9'))) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((_10384_i < _10314_s.len()) && ((('0' <= _10314_s[_10384_i]) && (_10314_s[_10384_i] <= '9')) || (_10314_s[_10384_i] == '_'))); (_10384_i)++) {
			{
				if ((_10314_s[_10384_i] == '_')) {
					goto _iter_next_2154d66bc;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[_10384_i])) - '0'));
				};
			}
		_iter_next_2154d66bc:;
		}
		_iter_end_2154d66bc:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((_10324_mantissa != 0LLU)) {
		_10339_exp=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	_10392_ok=true;
	return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
}



inline std::tuple<jule::F64,jule::Bool> _2115b2b43_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _211527c0c_f64info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_2154e1d7b:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_2154e1e03:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_21161ac23_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _21161ac23_f64pow10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_2154e1e7a:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_21161ac23_f64pow10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_2154e1cc1:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _211612687_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _211522773_f32info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_2154e6eb3:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_2154e703a:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_211632993_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000LL) || (_51562_f < -10000000LL))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _211632993_f32pow10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_2154e70b2:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_211632993_f32pow10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_2154e6e08:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _211785c5b_atofHex(jule::Str _55112_s, _2116c9dd1_floatInfo& _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << _55121_flt._field_expbits)) + _55121_flt._field_bias) - 2LL);;
	jule::I64 _5539_minExp = (_55121_flt._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>(_55121_flt._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> (_55121_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_2154eca46:;
	}
	_iter_end_2154eca46:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + _55121_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_2154ed00d:;
	}
	_iter_end_2154ed00d:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_2154eeb7a:;
	}
	_iter_end_2154eeb7a:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + _55121_flt._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> _55121_flt._field_mantbits) == 0LLU)) {
		_55160_exp=_55121_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55121_flt._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << _55121_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - _55121_flt._field_bias) & static_cast<jule::I64>(((1LL << _55121_flt._field_expbits) - 1LL)))) << _55121_flt._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << _55121_flt._field_mantbits) << _55121_flt._field_expbits);
	};
	if ((_55121_flt == _211522773_f32info)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_2119db08d_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_2119db654_F64FromBits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _21180b81a_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I64 _61629_n = jule::I64();
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I64 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _211523851_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I64 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I64 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _21196801a_readFloat(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _211785c5b_atofHex(_61611_s.slice(0LL,_61629_n),_211522773_f32info,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _211612687_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _2119196a3_eiselLemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_fUp = 0LL;;
			std::tie(_65321_fUp,_62450_ok) = _2119196a3_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_fUp))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_211b0544e_decimal _66213_d = _211b0544e_decimal{};;
	if ((!(_2115dbe36_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _211547a40_floatBits(&_66213_d, _211522773_f32info);
	_61621_f=static_cast<jule::F32>(_2119db08d_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _21185c096_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I64 _67429_n = jule::I64();
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I64 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _211523851_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I64 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I64 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _21196801a_readFloat(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _211785c5b_atofHex(_67411_s.slice(0LL,_67429_n),_211527c0c_f64info,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _2115b2b43_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _2118cb214_eiselLemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_fUp = 0LL;;
			std::tie(_71021_fUp,_68250_ok) = _2118cb214_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_fUp))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_211b0544e_decimal _71913_d = _211b0544e_decimal{};;
	if ((!(_2115dbe36_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _211547a40_floatBits(&_71913_d, _211527c0c_f64info);
	_67421_f=static_cast<jule::F64>(_2119db654_F64FromBits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _211899d1a_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I64 _73317_n;;
		jule::I64 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _21180b81a_atof32(_73121_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I64 _73713_n;;
	jule::I64 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _21185c096_atof64(_73121_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _211969ba9_ParseFloat(jule::Str _76515_s, jule::I64 _76523_bit_size) {
	jule::F64 _76610_f;;
	jule::I64 _76613_n;;
	jule::I64 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _211899d1a_parseFloatPrefix(_76515_s,_76523_bit_size);
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _2119c62cb_ryuFtoaFixed32(_20e36ca21_decimalSlice& _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		std::tie(_4924_d._field_nd,_4924_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _211ab6ed2_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_211707cee_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I64 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _211b0463a_mult64bitPow10(_4945_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _211b0489e_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extraMask)));
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_211592a24_formatDecimal(_4924_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_roundUp,_4966_prec);
	_4924_d._field_dp-=_749_q;
}



inline void _2119ccb1d_ryuFtoaFixed64(_20e36ca21_decimalSlice& _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		std::tie(_12124_d._field_nd,_12124_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _211ab7279_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_211707cee_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I64 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _211b0476c_mult128bitPow10(_12145_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _211b0489e_divisibleByPow5(_12145_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extraMask)));
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_211592a24_formatDecimal(_12124_d,_15314_di,(!(_15329_d0)),_17113_roundUp,_12166_prec);
	_12124_d._field_dp-=_1469_q;
}



inline void _211592a24_formatDecimal(_20e36ca21_decimalSlice& _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _2116ca3ba_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20044_m / 10LLU);;
			jule::U64 _20417_b = (_20044_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20044_m / 10LLU),(_20044_m % 10LL));
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_21563340c:;
	}
	_iter_end_21563340c:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	_20023_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_215636e8d:;
	}
	_iter_end_215636e8d:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20023_d._field_d[(_20023_d._field_nd - 1LL)] == '0')) {
		{
			(_20023_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_21563c58c:;
	}
	_iter_end_21563c58c:;;
	_20023_d._field_dp=static_cast<jule::I64>((_20023_d._field_nd + _20213_trimmed));
}



inline void _211675ce4_ryuFtoaShortest(_20e36ca21_decimalSlice& _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _2116c9dd1_floatInfo& _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		std::tie(_26125_d._field_nd,_26125_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26157_exp <= 0LL) && (_211ab175c_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_211b043c6_ryuDigits(_26125_d,_26146_mant,_26146_mant,_26146_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I64 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _211b04184_computeBounds(_26146_mant,_26157_exp,_26168_flt);
	if ((_27326_e2 == 0LL)) {
		_211b043c6_ryuDigits(_26125_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_211707cee_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26168_flt == _211522773_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _211b0463a_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _211b0463a_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _211b0463a_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _211b0476c_mult128bitPow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _211b0476c_mult128bitPow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _211b0476c_mult128bitPow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_211b0489e_divisibleByPow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_211b0489e_divisibleByPow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_211b0489e_divisibleByPow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extraMask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extraMask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extraMask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_211b043c6_ryuDigits(_26125_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26125_d._field_dp-=_2799_q;
}



inline jule::I64 _211707cee_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));
}



inline jule::I64 _211b04052_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _211b04184_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _2116c9dd1_floatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I64 _39662_e2 = jule::I64();
	if (((_39518_mant != (1LLU << _3966_flt._field_mantbits)) || (_39529_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LLU * _39518_mant) - 1LLU)),static_cast<jule::U64>((2LLU * _39518_mant)),static_cast<jule::U64>(((2LLU * _39518_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LLU * _39518_mant) - 1LLU)),static_cast<jule::U64>((4LLU * _39518_mant)),static_cast<jule::U64>(((4LLU * _39518_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _211b043c6_ryuDigits(_20e36ca21_decimalSlice& _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _211b049d1_divmod1e9(_40936_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _211b049d1_divmod1e9(_40948_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _211b049d1_divmod1e9(_40962_upper);
	if ((_41210_uhi == 0LLU)) {
		_211b04508_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_211b04508_ryuDigits32(_40919_d,_41014_lhi,_41110_chi,_41210_uhi,_40978_c0,_40992_cup,8LL);
		_40919_d._field_dp+=9LL;
	} else {
		_40919_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40919_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_21565ce2b:;
		}
		_iter_end_21565ce2b:;;
		_40919_d._field_d=_40919_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40919_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_211b04508_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,static_cast<jule::I64>((_40919_d._field_nd + 8LL)));
	};
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[(_40919_d._field_nd - 1LL)] == '0'))) {
		{
			(_40919_d._field_nd)--;
		}
	_iter_next_21565dc62:;
	}
	_iter_end_21565dc62:;;
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[0LL] == '0'))) {
		{
			(_40919_d._field_nd)--;
			(_40919_d._field_dp)--;
			_40919_d._field_d=_40919_d._field_d.slice(1LL);
		}
	_iter_next_2156613d5:;
	}
	_iter_end_2156613d5:;;
}



inline void _211b04508_ryuDigits32(_20e36ca21_decimalSlice& _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45421_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45458_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45458_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45458_central / 10LLU),(_45458_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_215663c01;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45442_lower,_45458_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_215663c01:;
	}
	_iter_end_215663c01:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45421_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45421_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45421_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_21566a840:;
	}
	_iter_end_21566a840:;;
	if ((_51013_n == _45421_d._field_nd)) {
		_45421_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45421_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45421_d._field_dp=static_cast<jule::I64>((_45421_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _211b0463a_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	jule::U32 _53450_resM = jule::U32();
	jule::I64 _53461_resE = jule::I64();
	jule::Bool _53472_exact = jule::Bool();
	if ((_53440_q == 0LL)) {
		_53450_resM = static_cast<jule::U32>((_53419_m << 6LLU));
		_53461_resE = static_cast<jule::I64>((_53431_e2 - 6LL));
		_53472_exact = true;
		return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _2115b796c_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _211ab95bc_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)),_54313_pow);
	_53431_e2+=((_211b04052_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	_53450_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53461_resE = _53431_e2;
	_53472_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _211b0476c_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	jule::U64 _56251_resM = jule::U64();
	jule::I64 _56262_resE = jule::I64();
	jule::Bool _56273_exact = jule::Bool();
	if ((_56241_q == 0LL)) {
		_56251_resM = static_cast<jule::U64>((_56220_m << 8LLU));
		_56262_resE = static_cast<jule::I64>((_56232_e2 - 8LL));
		_56273_exact = true;
		return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _2115b796c_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_211b04052_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _211ab95bc_Mul64(_56220_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _211ab95bc_Mul64(_56220_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _211ab7e39_Add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56251_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56262_resE = _56232_e2;
	_56273_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
}



inline jule::Bool _211b0489e_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;
			};
			_58624_m/=5LLU;
		}
	_iter_next_21567a366:;
	}
	_iter_end_21567a366:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _211b049d1_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
}



inline void _211b05eaa_trim(_211b0544e_decimal& _45314_a) {
	while (((_45314_a._field_nd > 0LL) && (_45314_a._field_d[(_45314_a._field_nd - 1LL)] == '0'))) {
		{
			(_45314_a._field_nd)--;
		}
	_iter_next_21567e8a9:;
	}
	_iter_end_21567e8a9:;;
	if ((_45314_a._field_nd == 0LL)) {
		_45314_a._field_dp=0LL;
	};
}



inline void _211b060dc_rightShift(_211b0544e_decimal& _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= _46320_a._field_nd)) {
				if ((_46813_n == 0LLU)) {
					_46320_a._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_215682cb9:;
				}
				_iter_end_215682cb9:;;
				goto _iter_end_215681746;
			};
			jule::U64 _48213_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_215681746:;
	}
	_iter_end_215681746:;;
	_46320_a._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < _46320_a._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_2156855d5:;
	}
	_iter_end_2156855d5:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				_46320_a._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_215686b9c:;
	}
	_iter_end_215686b9c:;;
	_46320_a._field_nd=_46513_w;
	_211b05eaa_trim(_46320_a);
}



inline jule::Bool _211b0621e_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);
			};
		}
	_iter_next_21568a0ce:;
	}
	_iter_end_21568a0ce:;;
	return false;
}



inline void _211b06351_leftShift(_211b0544e_decimal& _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _2116cbe05_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_211b0621e_prefixIsLessThan(_53119_a._field_d,_53119_a._field_nd,_2116cbe05_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = _53119_a._field_nd;;
	jule::I64 _53813_w = (_53119_a._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>(_53119_a._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_21568d9ea:;
	}
	_iter_end_21568d9ea:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_21569137c:;
	}
	_iter_end_21569137c:;;
	_53119_a._field_nd+=_53213_delta;
	if ((_53119_a._field_nd >= 800LL)) {
		_53119_a._field_nd=800LL;
	};
	_53119_a._field_dp+=_53213_delta;
	_211b05eaa_trim(_53119_a);
}



inline jule::Bool _211b06483_shouldRoundUp(_211b0544e_decimal& _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= _57819_a._field_nd))) {
		return false;
	};
	if (((_57819_a._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == _57819_a._field_nd))) {
		if (_57819_a._field_trunc) {
			return true;
		};
		return ((_57831_nd > 0LL) && (((_57819_a._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_57819_a._field_d[_57831_nd] >= '5');
}



inline jule::Str _211b07011_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _211b073a7_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _211b0761b_fmtBits(nullptr,_6012_i,_6020_base,false,false);
	return _6413_s;
}



inline jule::Str _211b07143_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _211b073a7_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _211b0761b_fmtBits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)),_7119_base,(_7111_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _211b07275_Itoa(jule::I64 _809_i) {
	return _211b07143_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)),10LL);
}



inline jule::Str _211b073a7_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _211b074d9_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _211b0761b_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	jule::Slice<jule::U8> _10180_d = jule::Slice<jule::U8>();
	jule::Str _10191_s = jule::Str();
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_2156d0b80:;
		}
		_iter_end_2156d0b80:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_211b074d9_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_211ab0abe_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_2156d979e:;
		}
		_iter_end_2156d979e:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_2156dc53d:;
		}
		_iter_end_2156dc53d:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		_10180_d=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10180_d,_10191_s);
	};
	_10191_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10180_d,_10191_s);
}



inline jule::Str _21113a8b9_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_215707ab9:;
			{
				return _211114145_SysInt;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_215707b30:;
			{
				return _21115d579_SysUint;
			}
		}
		else {
			_case_begin_21570804d:;
			{
				return _4515_kind;
			}
		}
		_match_end_215705149:;
	};
}



inline jule::I64 _2111420eb_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_215709637:;
			{
				return 8LLU;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_21570969d:;
			{
				return 16LLU;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_215708e94:;
			{
				return 32LLU;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_21570900a:;
			{
				return 64LLU;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_215709071:;
			{
				return _211113b17_BitSize;
			}
		}
		else {
			_case_begin_215708e2d:;
			{
				return -1LL;
			}
		}
		_match_end_215708b86:;
	};
}



inline jule::Str _211166384_IntFromBits(jule::I64 _8616_bits) {
	{
		auto &_match_expr{ _8616_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_21570b260:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_21570b2c6:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_21570b33c:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_21570b43b:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_21570ab22:;
			{
				return jule::Str();
			}
		}
		_match_end_21570b13e:;
	};
}



inline jule::Str _211178297_UintFromBits(jule::I64 _10417_bits) {
	{
		auto &_match_expr{ _10417_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_21570c5c4:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_21570c63a:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_21570c6a1:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_21570c99d:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_21570c45e:;
			{
				return jule::Str();
			}
		}
		_match_end_21570c31b:;
	};
}



inline jule::Str _2111a22b0_FloatFromBits(jule::I64 _12218_bits) {
	{
		auto &_match_expr{ _12218_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_21570daae:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_21570db25:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_21570d99e:;
			{
				return jule::Str();
			}
		}
		_match_end_21570d85b:;
	};
}



inline jule::Bool _21133d2e7_CheckBitFloat(jule::Str _15018_val, jule::I64 _15028_bit) {
	({
		auto except = _211969ba9_ParseFloat(_15018_val,_15028_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _21135c37c_BitsizeOfFloat(jule::F64 _16019_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16019_x) && (_16019_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_215714587:;
			{
				return 32LLU;
			}
		}
		else {
			_case_begin_215713597:;
			{
				return 64LLU;
			}
		}
		_match_end_2157138e9:;
	};
}



inline jule::I64 _211412b2a_BitsizeOfInt(jule::I64 _17617_x) {
	{
		
		if (((-128LL <= _17617_x) && (_17617_x <= 127LL))) {
			_case_begin_21571549a:;
			{
				return 8LLU;
			}
		}
		else if (((-32768LL <= _17617_x) && (_17617_x <= 32767LL))) {
			_case_begin_215715511:;
			{
				return 16LLU;
			}
		}
		else if (((-2147483648LL <= _17617_x) && (_17617_x <= 2147483647LL))) {
			_case_begin_215715577:;
			{
				return 32LLU;
			}
		}
		else {
			_case_begin_215714862:;
			{
				return 64LLU;
			}
		}
		_match_end_215714796:;
	};
}



inline jule::I64 _21142a8bd_BitsizeOfUint(jule::U64 _19618_x) {
	{
		
		if ((_19618_x <= 255LLU)) {
			_case_begin_215717414:;
			{
				return 8LLU;
			}
		}
		else if ((_19618_x <= 65535LLU)) {
			_case_begin_21571747a:;
			{
				return 16LLU;
			}
		}
		else if ((_19618_x <= 4294967295LLU)) {
			_case_begin_2157174e1:;
			{
				return 32LLU;
			}
		}
		else {
			_case_begin_215716864:;
			{
				return 64LLU;
			}
		}
		_match_end_215716457:;
	};
}



inline void _21142b0e9_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _20e508728_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_215718668:;
				{
					_211113b17_BitSize=64LLU;
					_211114145_SysInt=jule::Str("i64", 3);
					_21115d579_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_215717667:;
				{
					_211113b17_BitSize=32LLU;
					_211114145_SysInt=jule::Str("i32", 3);
					_21115d579_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_215717e70:;
		};
	};
}



inline void _2114386ab_init(void) {
	_21142b0e9_UpdateTarget();
}



inline jule::F64 _2114b2a10_Min(jule::Str _6112_k) {
	_6112_k=_21113a8b9_RealKindOf(_6112_k);
	{
		auto &_match_expr{ _6112_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_21571aeea:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_21571b061:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_21571a99a:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_21571aa22:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_21571aa99:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_21571ab21:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_2157189ed:;
			{
				return 0LL;
			}
		}
		_match_end_215718811:;
	};
}



inline jule::F64 _2114ba83c_Max(jule::Str _8312_k) {
	_8312_k=_21113a8b9_RealKindOf(_8312_k);
	{
		auto &_match_expr{ _8312_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_21571ac97:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_21571c6e4:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_21571c75a:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_21571c7c1:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_21571c837:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_21571ca9b:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_21571cb12:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_21571cb78:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_21571cc00:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_21571cc77:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_21571c55c:;
			{
				return 0LL;
			}
		}
		_match_end_21571b4b2:;
	};
}



inline jule::Bool _2114c734e_IsI8Compatible(jule::Str _623_k) {
	return (_623_k == jule::Str("i8", 2));
}



inline jule::Bool _2114d3844_IsI16Compatible(jule::Str _1124_k) {
	return ((_1124_k == jule::Str("i8", 2)) || (_1124_k == jule::Str("i16", 3)));
}



inline jule::Bool _21150390d_IsI32Compatible(jule::Str _1724_k) {
	return ((((_1724_k == jule::Str("i8", 2)) || (_1724_k == jule::Str("i16", 3))) || (_1724_k == jule::Str("i32", 3))) || (_1724_k == jule::Str("u8", 2)));
}



inline jule::Bool _211509eca_IsI64Compatible(jule::Str _2524_k) {
	return ((((_2524_k == jule::Str("i8", 2)) || (_2524_k == jule::Str("i16", 3))) || (_2524_k == jule::Str("i32", 3))) || (_2524_k == jule::Str("i64", 3)));
}



inline jule::Bool _211112ce2_IsU8Compatible(jule::Str _3323_k) {
	return (_3323_k == jule::Str("u8", 2));
}



inline jule::Bool _2110b8dec_IsU16Compatible(jule::Str _3824_k) {
	return ((_3824_k == jule::Str("u8", 2)) || (_3824_k == jule::Str("u16", 3)));
}



inline jule::Bool _21118eed4_IsU32Compatible(jule::Str _4324_k) {
	return (((_4324_k == jule::Str("u8", 2)) || (_4324_k == jule::Str("u16", 3))) || (_4324_k == jule::Str("u32", 3)));
}



inline jule::Bool _211190a51_IsU64Compatible(jule::Str _5024_k) {
	return ((((_5024_k == jule::Str("u8", 2)) || (_5024_k == jule::Str("u16", 3))) || (_5024_k == jule::Str("u32", 3))) || (_5024_k == jule::Str("u64", 3)));
}



inline jule::Bool _21137d205_IsF32Compatible(jule::Str _5824_k) {
	return (_5824_k == jule::Str("f32", 3));
}



inline jule::Bool _21137e338_IsF64Compatible(jule::Str _6324_k) {
	return (_6324_k == jule::Str("f64", 3));
}



inline jule::Bool _211384492_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_215726269:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_2157264cd:;
			{
				return (_7036_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_215726544:;
			{
				return (_7036_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_2157265aa:;
			{
				return (_7036_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_215726621:;
			{
				return _2114c734e_IsI8Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_215726687:;
			{
				return _2114d3844_IsI16Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_2157266ed:;
			{
				return _21150390d_IsI32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_215726764:;
			{
				return _211509eca_IsI64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_2157267db:;
			{
				return _211112ce2_IsU8Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_215726852:;
			{
				return _2110b8dec_IsU16Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_2157268c9:;
			{
				return _21118eed4_IsU32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_215726951:;
			{
				return _211190a51_IsU64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_2157269c8:;
			{
				return _21137d205_IsF32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_215726a50:;
			{
				return _21137e338_IsF64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_215726ac7:;
			{
				return (_7036_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_215726b4e:;
			{
				return (_7036_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_215726027:;
			{
				return false;
			}
		}
		_match_end_215725e5b:;
	};
}



inline jule::Bool _2113895eb_IsI16Greater(jule::Str _11021_k) {
	return (_11021_k == jule::Str("i8", 2));
}



inline jule::Bool _211503d70_IsI32Greater(jule::Str _11521_k) {
	return ((_11521_k == jule::Str("i8", 2)) || (_11521_k == jule::Str("i16", 3)));
}



inline jule::Bool _211114d8d_IsI64Greater(jule::Str _12021_k) {
	return (((_12021_k == jule::Str("i8", 2)) || (_12021_k == jule::Str("i16", 3))) || (_12021_k == jule::Str("i32", 3)));
}



inline jule::Bool _21133cb54_IsU16Greater(jule::Str _12721_k) {
	return (_12721_k == jule::Str("u8", 2));
}



inline jule::Bool _211b080cd_IsU32Greater(jule::Str _13221_k) {
	return ((_13221_k == jule::Str("u8", 2)) || (_13221_k == jule::Str("u16", 3)));
}



inline jule::Bool _211b08210_IsU64Greater(jule::Str _13821_k) {
	return (((_13821_k == jule::Str("u8", 2)) || (_13821_k == jule::Str("u16", 3))) || (_13821_k == jule::Str("u32", 3)));
}



inline jule::Bool _211b08342_IsF32Greater(jule::Str _14517_k) {
	return (_14517_k != jule::Str("f64", 3));
}



inline jule::Bool _211b08474_IsF64Greater(jule::Str _15017_k) {
	return true;
}



inline jule::Bool _211b085a6_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_21572ea69:;
			{
				return _211b089e6_IsSigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_21572ead0:;
			{
				return _211b08b28_IsUnsigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_21572eccd:;
			{
				return _211b08b28_IsUnsigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_21572ed44:;
			{
				return _2113895eb_IsI16Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_21572edaa:;
			{
				return _211503d70_IsI32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_21572ee32:;
			{
				return _211114d8d_IsI64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_21572eea9:;
			{
				return _21133cb54_IsU16Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_215730031:;
			{
				return _211b080cd_IsU32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_21573010d:;
			{
				return _211b08210_IsU64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_215730174:;
			{
				return _211b08342_IsF32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_2157301da:;
			{
				return _211b08474_IsF64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_215730251:;
			{
				return true;
			}
		}
		else {
			_case_begin_21572e827:;
			{
				return false;
			}
		}
		_match_end_21572e20b:;
	};
}



inline jule::Bool _211b089e6_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == jule::Str("i8", 2)) || (_2717_k == jule::Str("i16", 3))) || (_2717_k == jule::Str("i32", 3))) || (_2717_k == jule::Str("i64", 3))) || (_2717_k == jule::Str("int", 3)));
}



inline jule::Bool _211b08b28_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == jule::Str("u8", 2)) || (_3619_k == jule::Str("u16", 3))) || (_3619_k == jule::Str("u32", 3))) || (_3619_k == jule::Str("u64", 3))) || (_3619_k == jule::Str("uint", 4))) || (_3619_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _211b08c5a_IsInt(jule::Str _4610_k) {
	return (_211b089e6_IsSigInt(_4610_k) || _211b08b28_IsUnsigInt(_4610_k));
}



inline jule::Bool _211b08d8c_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == jule::Str("f32", 3)) || (_5112_k == jule::Str("f64", 3)));
}



inline jule::Bool _211b08ebe_IsNum(jule::Str _5610_k) {
	return (_211b08c5a_IsInt(_5610_k) || _211b08d8c_IsFloat(_5610_k));
}



inline jule::Bool _211b09101_IsSigNum(jule::Str _6113_k) {
	return (_211b089e6_IsSigInt(_6113_k) || _211b08d8c_IsFloat(_6113_k));
}



inline jule::Bool _211b5b2c9_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);
}



inline jule::I32 _211b5b40b_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_211b73a83_runeFromEsqSeq(_1811_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _20e430e69_DecodeRune(_1811_bytes);
	};
	return _2313_r;
}



inline jule::Str _211b73225_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);
}



inline jule::Str _211b734cd_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,_4210_bytes.len());;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_211b73dc4_strEsqSeq(_4210_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I64 _5421_size;;
				std::tie(_5418_r,_5421_size) = _20e430e69_DecodeRune(_4210_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_20e4322cd_AppendRune(_4713_s,_5418_r);
			};
		}
	_iter_next_21573cc86:;
	}
	_iter_end_21573cc86:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _211b73775_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	jule::U8 _6238_seq = jule::U8();
	jule::Bool _6249_ok = jule::Bool();
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6238_seq,_6249_ok);
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_2157428a1:;
			{
				_6238_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_215742917:;
			{
				_6238_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_21574297d:;
			{
				_6238_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_2157429e4:;
			{
				_6238_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_215742a6b:;
			{
				_6238_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_215742ae3:;
			{
				_6238_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_215742b6a:;
			{
				_6238_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_215742be2:;
			{
				_6238_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_215742c69:;
			{
				_6238_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_215742ce1:;
			{
				_6238_seq='\v';
			}
		}
		_match_end_215742780:;
	};
	_6249_ok=(_6238_seq != 0LLU);
	return std::make_tuple(_6238_seq,_6249_ok);
}



inline jule::I32 _211b73a83_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64& _9239_i) {
	jule::U8 _9310_b;;
	jule::Bool _9313_ok;;
	std::tie(_9310_b,_9313_ok) = _211b73775_tryBtoaCommonEsq(_9219_bytes.slice(_9239_i));
	(_9239_i)++;
	if (_9313_ok) {
		(_9239_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));
	};
	{
		auto &_match_expr{ _9219_bytes[_9239_i] };
		
		if (_match_expr == 'u') {
			_case_begin_215748577:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _21177e56d_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				_9239_i+=5LL;
				return _10313_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_215748632:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _21177e56d_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				_9239_i+=9LL;
				return _10813_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_215748698:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice((_9239_i + 1LL),(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _21177e56d_ParseUint(static_cast<jule::Str>(_11313_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_215747455:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice(_9239_i,(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _21177e56d_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));
			}
		}
		_match_end_215747400:;
	};
}



inline jule::Slice<jule::U8> _211b73dc4_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64& _12434_i) {
	jule::I32 _1259_r = _211b73a83_runeFromEsqSeq(_12414_bytes,_12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));
}



inline jule::I64 _211c4b6d8_findFormatPrefix(jule::Slice<jule::U8>& _1022_bytes, jule::I64& _1038_start) {
	jule::I64 _1113_i = _1038_start;;
	while ((_1113_i < _1022_bytes.len())) {
		{
			jule::I32 _1314_r;;
			jule::I64 _1317_size;;
			std::tie(_1314_r,_1317_size) = _20e430e69_DecodeRune(_1022_bytes.slice(_1113_i));
			if ((_1314_r == '{')) {
				return _1113_i;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_2157907de:;
	}
	_iter_end_2157907de:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _211c4be9c_getFormatRange(jule::I64& _2724_i, jule::Slice<jule::U8>& _2737_bytes) {
	jule::I64 _289_start = _2724_i;;
	jule::I64 _2913_braces = 0LL;;
	while ((_2724_i < _2737_bytes.len())) {
		{
			jule::I32 _3114_r;;
			jule::I64 _3117_size;;
			std::tie(_3114_r,_3117_size) = _20e430e69_DecodeRune(_2737_bytes.slice(_2724_i));
			_2724_i+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_215793616:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_21579368d:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return _2737_bytes.slice(_289_start,_2724_i);
						};
					}
				}
				_match_end_215793209:;
			};
		}
	_iter_next_215792758:;
	}
	_iter_end_215792758:;;
	return nullptr;
}



inline void _211c2d2d0_fmtByDefault(jule::Str& _4622_buf, jule::Any& _4633_arg) {
	if ((_4633_arg == nullptr)) {
		_4622_buf+=jule::Str("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ _4633_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_215794ace:;
			{
				_4622_buf+=_2115327e9_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>(_4633_arg.operator jule::F32())),'g',-1LL,32LL);
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_215794e64:;
			{
				_4622_buf+=_2115327e9_FmtFloat(static_cast<jule::F64>(_4633_arg.operator jule::F64()),'g',-1LL,64LL);
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_215794eca:;
			{
				_4622_buf+=_211b07143_FmtInt(static_cast<jule::I64>(_4633_arg.operator jule::I8()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_215795041:;
			{
				_4622_buf+=_211b07143_FmtInt(static_cast<jule::I64>(_4633_arg.operator jule::I16()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_2157950a7:;
			{
				_4622_buf+=_211b07143_FmtInt(static_cast<jule::I64>(_4633_arg.operator jule::I32()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_2157955a2:;
			{
				_4622_buf+=_211b07143_FmtInt(static_cast<jule::I64>(_4633_arg.operator jule::I64()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_215795618:;
			{
				_4622_buf+=_211b07011_FmtUint(static_cast<jule::U64>(_4633_arg.operator jule::U8()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_21579567e:;
			{
				_4622_buf+=_211b07011_FmtUint(static_cast<jule::U64>(_4633_arg.operator jule::U16()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_2157956e5:;
			{
				_4622_buf+=_211b07011_FmtUint(static_cast<jule::U64>(_4633_arg.operator jule::U32()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_21579575b:;
			{
				_4622_buf+=_211b07011_FmtUint(static_cast<jule::U64>(_4633_arg.operator jule::U64()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_2157957c2:;
			{
				_4622_buf+=_4633_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_215795838:;
			{
				if (_4633_arg.operator jule::Bool()) {
					_4622_buf+=jule::Str("true", 4);
				} else {
					_4622_buf+=jule::Str("false", 5);
				};
			}
		}
		else {
			_case_begin_215794d87:;
			{
				_4622_buf+=jule::to_str(_4633_arg);
			}
		}
		_match_end_215794d32:;
	};
}



inline void _211c2cab5_applyFmtByDefault(jule::Str& _8627_buf, jule::I64& _8642_j, jule::Slice<jule::Any>& _8651_args) {
	jule::Any _879_arg = _8651_args[_8642_j];;
	(_8642_j)++;
	_211c2d2d0_fmtByDefault(_8627_buf,_879_arg);
}



inline void _211c3138d_applyFmt(jule::Slice<jule::U8>& _9418_fmt, jule::Str& _9436_buf, jule::I64& _9451_j, jule::Slice<jule::Any>& _9460_args) {
	if ((_9418_fmt.len() == 2LL)) {
		_211c2cab5_applyFmtByDefault(_9436_buf,_9451_j,_9460_args);
		return;;
	};
	if (((_9418_fmt.len() == 4LL) && (_9418_fmt == jule::Slice<jule::U8>::make({'{','{','}','}'})))) {
		_9436_buf+=jule::Str("{}", 2);
		return;;
	};
	_20e444147_PushToStrBuffer(_9436_buf,_9418_fmt);
}



inline jule::Str _211c43889_format(jule::Str& _11012_fmt, jule::Slice<jule::Any> _11022_args) {
	if ((_11022_args.len() == 0LL)) {
		return _11012_fmt;
	};
	jule::Slice<jule::U8> _11513_fmtBytes = _20e4439e8_Stobs(_11012_fmt);;
	jule::Str _11613_buf = jule::Str::alloc(_11012_fmt.len());;
	jule::I64 _11813_j = 0LL;;
	jule::I64 _11913_last = 0LL;;
	jule::I64 _12013_i = _211c4b6d8_findFormatPrefix(_11513_fmtBytes,_11913_last);;
	for (; (_12013_i != -1LL); _12013_i=static_cast<jule::I64>(_211c4b6d8_findFormatPrefix(_11513_fmtBytes,_12013_i))) {
		{
			_20e444147_PushToStrBuffer(_11613_buf,_11513_fmtBytes.slice(_11913_last,_12013_i));
			jule::Slice<jule::U8> _12317_format = _211c4be9c_getFormatRange(_12013_i,_11513_fmtBytes);;
			if ((_12317_format == nullptr)) {
				goto _iter_next_21579ee2a;
			};
			_211c3138d_applyFmt(_12317_format,_11613_buf,_11813_j,_11022_args);
			if ((_11813_j >= _11022_args.len())) {
				_20e444147_PushToStrBuffer(_11613_buf,_11513_fmtBytes.slice(_12013_i));
				_11913_last=static_cast<jule::I64>(_11513_fmtBytes.len());
				goto _iter_end_21579ee2a;
			};
			_11913_last=_12013_i;
		}
	_iter_next_21579ee2a:;
	}
	_iter_end_21579ee2a:;;
	if ((_11913_last < _11513_fmtBytes.len())) {
		_20e444147_PushToStrBuffer(_11613_buf,_11513_fmtBytes.slice(_11913_last));
	};
	return _11613_buf;
}



inline jule::Str _211c6a32d_Format(jule::Str _16911_fmt, jule::Slice<jule::Any> _16921_args) {
	return _211c43889_format(_16911_fmt,jule::Any(_16921_args));
}



inline jule::Bool _211024d47_parameterUsesGenerics(jule::Ptr<_21101d747_Param>& _37427_p, jule::Slice<jule::Ptr<_210e5e688_GenericDecl>>& _37439_generics) {
	if (_21101dd74_IsSelf(_37427_p.ptr())) {
		return false;
	};
	return _211bccd1d_kindUsesGenerics(_37427_p.get()._field_Kind.get()._field_Decl.get()._field_Kind,_37439_generics);
}



inline jule::Ptr<_211bba5ad_TypeSymbol> _211027322_buildType(jule::Ptr<_210e520a4_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_211bba5ad_TypeSymbol>(_211bba5ad_TypeSymbol{._field_Decl=_9418_t, });
}



inline jule::Ptr<_211b8b392_Value> _21102760d_buildExpr(jule::Ptr<_210e565c5_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_211b8b392_Value>(_211b8b392_Value{._field_Expr=_10318_expr, });
}



inline jule::Ptr<_211bb5762_TypeAlias> _2110278a5_buildTypeAlias(jule::Ptr<_210e68708_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_211bb5762_TypeAlias>(_211bb5762_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_211027322_buildType(_11223_decl.get()._field_Kind), });
}



inline jule::Ptr<_210e34c9b_Field> _211027bc4_buildField(jule::Ptr<_210e6bce4_FieldDecl> _12319_decl) {
	return jule::new_ptr<_210e34c9b_Field>(_210e34c9b_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_211027322_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});
}



inline jule::Slice<jule::Ptr<_210e34c9b_Field>> _211027e6b_buildFields(jule::Slice<jule::Ptr<_210e6bce4_FieldDecl>>& _13421_decls) {
	jule::Slice<jule::Ptr<_210e34c9b_Field>> _13513_fields = jule::Slice<jule::Ptr<_210e34c9b_Field>>::alloc(0LL,_13421_decls.len());;
	{
		auto &expr = _13421_decls;
		auto it = expr.begin();
		_iter_begin_223db30ac:;
		if (it != expr.end()) {
			jule::Ptr<_210e6bce4_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_211027bc4_buildField(_13617_decl));;
			}
			_iter_next_223db30ac:;
			++it;
			goto _iter_begin_223db30ac;
		}
		_iter_end_223db30ac:;
	};
	return _13513_fields;
}



inline jule::Ptr<_210e427d1_Struct> _211028213_buildStruct(jule::Ptr<_210e6c652_StructDecl> _14220_decl) {
	return jule::new_ptr<_210e427d1_Struct>(_210e427d1_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_211027e6b_buildFields(_14220_decl.get()._field_Fields), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });
}



inline jule::Ptr<_21101d747_Param> _2110284aa_buildParam(jule::Ptr<_210e62a98_ParamDecl> _15419_decl) {
	return jule::new_ptr<_21101d747_Param>(_21101d747_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_211027322_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});
}



inline jule::Slice<jule::Ptr<_21101d747_Param>> _21102882e_buildParams(jule::Slice<jule::Ptr<_210e62a98_ParamDecl>>& _16521_decls) {
	jule::Slice<jule::Ptr<_21101d747_Param>> _16613_params = jule::Slice<jule::Ptr<_21101d747_Param>>::alloc(0LL,_16521_decls.len());;
	{
		auto &expr = _16521_decls;
		auto it = expr.begin();
		_iter_begin_223db6104:;
		if (it != expr.end()) {
			jule::Ptr<_210e62a98_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_2110284aa_buildParam(_16717_decl));;
			}
			_iter_next_223db6104:;
			++it;
			goto _iter_begin_223db6104;
		}
		_iter_end_223db6104:;
	};
	return _16613_params;
}



inline jule::Ptr<_21101d082_RetType> _211028ac6_buildRetType(jule::Ptr<_210e551b7_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_21101d082_RetType>(_21101d082_RetType{._field_Kind=_211027322_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});
}



inline jule::Ptr<_211020084_Fn> _211028d6d_buildFn(jule::Ptr<_210e63db8_FnDecl> _18316_decl) {
	return jule::new_ptr<_211020084_Fn>(_211020084_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_211028ac6_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_21102882e_buildParams(_18316_decl.get()._field_Params), });
}



inline jule::Slice<jule::Ptr<_211020084_Fn>> _211029115_buildMethods(jule::Slice<jule::Ptr<_210e63db8_FnDecl>>& _20122_decls) {
	jule::Slice<jule::Ptr<_211020084_Fn>> _20213_methods = jule::Slice<jule::Ptr<_211020084_Fn>>::alloc(0LL,_20122_decls.len());;
	{
		auto &expr = _20122_decls;
		auto it = expr.begin();
		_iter_begin_223db9bda:;
		if (it != expr.end()) {
			jule::Ptr<_210e63db8_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_211028d6d_buildFn(_20317_decl));;
			}
			_iter_next_223db9bda:;
			++it;
			goto _iter_begin_223db9bda;
		}
		_iter_end_223db9bda:;
	};
	return _20213_methods;
}



inline jule::Ptr<_211031e42_Trait> _2110293ac_buildTrait(jule::Ptr<_210e6cc5c_TraitDecl> _20919_decl) {
	return jule::new_ptr<_211031e42_Trait>(_211031e42_Trait{._field_Token=_20919_decl.get()._field_Token, ._field_Ident=_20919_decl.get()._field_Ident, ._field_Public=_20919_decl.get()._field_Public, ._field_Methods=_211029115_buildMethods(_20919_decl.get()._field_Methods), });
}



inline jule::Ptr<_211033592_EnumItem> _211029654_buildEnumItem(jule::Ptr<_210e6a067_EnumItemDecl> _21822_decl) {
	return jule::new_ptr<_211033592_EnumItem>(_211033592_EnumItem{._field_Token=_21822_decl.get()._field_Token, ._field_Ident=_21822_decl.get()._field_Ident, ._field_Value=_21102760d_buildExpr(_21822_decl.get()._field_Expr)});
}



inline jule::Slice<jule::Ptr<_211033592_EnumItem>> _2110298eb_buildEnumItems(jule::Slice<jule::Ptr<_210e6a067_EnumItemDecl>>& _22624_decls) {
	jule::Slice<jule::Ptr<_211033592_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_211033592_EnumItem>>::alloc(0LL,_22624_decls.len());;
	{
		auto &expr = _22624_decls;
		auto it = expr.begin();
		_iter_begin_223dbc2e7:;
		if (it != expr.end()) {
			jule::Ptr<_210e6a067_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_211029654_buildEnumItem(_22817_decl));;
			}
			_iter_next_223dbc2e7:;
			++it;
			goto _iter_begin_223dbc2e7;
		}
		_iter_end_223dbc2e7:;
	};
	return _22713_items;
}



inline jule::Ptr<_211034087_Enum> _211029b93_buildEnum(jule::Ptr<_210e6aa90_EnumDecl> _23418_decl) {
	return jule::new_ptr<_211034087_Enum>(_211034087_Enum{._field_Token=_23418_decl.get()._field_Token, ._field_Public=_23418_decl.get()._field_Public, ._field_Ident=_23418_decl.get()._field_Ident, ._field_Kind=_211027322_buildType(_23418_decl.get()._field_Kind), ._field_Items=_2110298eb_buildEnumItems(_23418_decl.get()._field_Items)});
}



inline jule::Ptr<_2110350bb_TypeEnumItem> _21102a0e4_buildTypeEnumItem(jule::Ptr<_210e6b596_TypeEnumItemDecl> _24426_decl) {
	return jule::new_ptr<_2110350bb_TypeEnumItem>(_2110350bb_TypeEnumItem{._field_Token=_24426_decl.get()._field_Token, ._field_Ident=_24426_decl.get()._field_Ident, ._field_Kind=_211027322_buildType(_24426_decl.get()._field_Kind)});
}



inline jule::Slice<jule::Ptr<_2110350bb_TypeEnumItem>> _21102a38b_buildTypeEnumItems(jule::Slice<jule::Ptr<_210e6b596_TypeEnumItemDecl>>& _25228_decls) {
	jule::Slice<jule::Ptr<_2110350bb_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_2110350bb_TypeEnumItem>>::alloc(0LL,_25228_decls.len());;
	{
		auto &expr = _25228_decls;
		auto it = expr.begin();
		_iter_begin_223dbeb57:;
		if (it != expr.end()) {
			jule::Ptr<_210e6b596_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_21102a0e4_buildTypeEnumItem(_25417_decl));;
			}
			_iter_next_223dbeb57:;
			++it;
			goto _iter_begin_223dbeb57;
		}
		_iter_end_223dbeb57:;
	};
	return _25313_items;
}



inline jule::Ptr<_211035682_TypeEnum> _21102a633_buildTypeEnum(jule::Ptr<_210e6b794_TypeEnumDecl> _26022_decl) {
	return jule::new_ptr<_211035682_TypeEnum>(_211035682_TypeEnum{._field_Token=_26022_decl.get()._field_Token, ._field_Public=_26022_decl.get()._field_Public, ._field_Ident=_26022_decl.get()._field_Ident, ._field_Items=_21102a38b_buildTypeEnumItems(_26022_decl.get()._field_Items)});
}



inline jule::Ptr<_211b43228_Var> _21102a8ca_buildVar(jule::Ptr<_210e64d97_VarDecl> _26917_decl) {
	return jule::new_ptr<_211b43228_Var>(_211b43228_Var{._field_Token=_26917_decl.get()._field_Token, ._field_Ident=_26917_decl.get()._field_Ident, ._field_CppLinked=_26917_decl.get()._field_CppLinked, ._field_Constant=_26917_decl.get()._field_Constant, ._field_Mutable=_26917_decl.get()._field_Mutable, ._field_Public=_26917_decl.get()._field_Public, ._field_Statically=_26917_decl.get()._field_Statically, ._field_Reference=_26917_decl.get()._field_Reference, ._field_Kind=_211027322_buildType(_26917_decl.get()._field_Kind), ._field_Value=_21102760d_buildExpr(_26917_decl.get()._field_Expr), ._field_Refers=static__211025de2_new(), ._field_Directives=_26917_decl.get()._field_Directives, });
}



inline jule::Slice<jule::Ptr<_211b43228_Var>> _21102ab72_buildVars(jule::Slice<jule::Ptr<_210e64d97_VarDecl>> _28618_decls) {
	jule::Slice<jule::Ptr<_211b43228_Var>> _28713_vars = jule::Slice<jule::Ptr<_211b43228_Var>>::alloc(0LL,_28618_decls.len());;
	{
		auto &expr = _28618_decls;
		auto it = expr.begin();
		_iter_begin_223dc3023:;
		if (it != expr.end()) {
			jule::Ptr<_210e64d97_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_21102a8ca_buildVar(_28817_decl));;
			}
			_iter_next_223dc3023:;
			++it;
			goto _iter_begin_223dc3023;
		}
		_iter_end_223dc3023:;
	};
	return _28713_vars;
}



inline jule::Ptr<_2110b6658_Impl> _21102ae19_buildImpl(jule::Ptr<_210e6d367_Impl> _29418_decl) {
	return jule::new_ptr<_2110b6658_Impl>(_2110b6658_Impl{._field_Base=_29418_decl.get()._field_Base, ._field_Dest=_29418_decl.get()._field_Dest, ._field_Methods=_211029115_buildMethods(_29418_decl.get()._field_Methods), ._field_Statics=_21102ab72_buildVars(_29418_decl.get()._field_Statics)});
}



inline jule::Bool _211093811_matchConstraint(jule::Str& _14221_c, jule::Ptr<_211bb6455_TypeKind>& _14234_g) {
	{
		auto &_match_expr{ _14221_c };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_223e3552a:;
			{
				jule::Ptr<_211bbae2c_Prim> _14513_prim = _211bb8567_Prim(_14234_g.ptr());;
				if ((_14513_prim == nullptr)) {
					return false;
				};
				return _211b09101_IsSigNum(_14513_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_223e35591:;
			{
				jule::Ptr<_211bbae2c_Prim> _15113_prim = _211bb8567_Prim(_14234_g.ptr());;
				if ((_15113_prim == nullptr)) {
					return false;
				};
				return _211b08b28_IsUnsigInt(_15113_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_223e356d4:;
			{
				jule::Ptr<_211bbae2c_Prim> _15713_prim = _211bb8567_Prim(_14234_g.ptr());;
				if ((_15713_prim == nullptr)) {
					return false;
				};
				return _211b08d8c_IsFloat(_15713_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_223e3574a:;
			{
				jule::Ptr<_211bbae2c_Prim> _16313_prim = _211bb8567_Prim(_14234_g.ptr());;
				if ((_16313_prim == nullptr)) {
					return false;
				};
				return _211b08ebe_IsNum(_16313_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_223e357b1:;
			{
				return _211bb7852_Mutable(_14234_g.ptr());
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_223e35827:;
			{
				return (!(_211bb7852_Mutable(_14234_g.ptr())));
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_223e3588d:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_223e35904:;
			{
				jule::Ptr<_211bbae2c_Prim> _17513_prim = _211bb8567_Prim(_14234_g.ptr());;
				if ((_17513_prim != nullptr)) {
					return (_211b08ebe_IsNum(_17513_prim.get()._field_Kind) || _211bbe161_IsStr(_17513_prim.ptr()));
				};
				if ((_211bb8a40_Ptr(_14234_g.ptr()) != nullptr)) {
					return true;
				};
				jule::Ptr<_210e6db2b_StructIns> _18213_s = _211bb99b9_Struct(_14234_g.ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));
				};
				jule::Ptr<_211034087_Enum> _18913_enm = _211bb8ca4_Enum(_14234_g.ptr());;
				if ((_18913_enm != nullptr)) {
					return _211b08ebe_IsNum(_211bb6851_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));
				};
				return false;
			}
		}
		else {
			_case_begin_223e35261:;
			{
				return false;
			}
		}
		_match_end_223e34925:;
	};
}



inline jule::Bool _211095406_isBuiltinConstraint(jule::Str& _19925_ident) {
	{
		auto &expr = _21104db1d_builtinConstraints;
		auto it = expr.begin();
		_iter_begin_223e3ea84:;
		if (it != expr.end()) {
			jule::Str &_20012_bc = *it;
			{
				if ((_19925_ident == _20012_bc)) {
					return true;
				};
			}
			_iter_next_223e3ea84:;
			++it;
			goto _iter_begin_223e3ea84;
		}
		_iter_end_223e3ea84:;
	};
	return false;
}



inline jule::Ptr<_211b0c214_scopeChecker> _21109e6c9_newScopeCheckerBase(jule::Ptr<_211b254c4_Sema>& _5929_s, jule::Ptr<_211022c35_FnIns> _5943_owner) {
	return jule::new_ptr<_211b0c214_scopeChecker>(_211b0c214_scopeChecker{._field_s=_5929_s, ._field_owner=_5943_owner, ._field_table=jule::new_ptr<_211b855ab_SymbolTable>(), });
}



inline jule::Ptr<_211b0c214_scopeChecker> _2110a0257_newScopeChecker(jule::Ptr<_211b254c4_Sema>& _6725_s, jule::Ptr<_211022c35_FnIns> _6739_owner) {
	jule::Ptr<_211b0c214_scopeChecker> _6813_base = _21109e6c9_newScopeCheckerBase(_6725_s,_6739_owner);;
	_6813_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_211b0bd3a_scopeLabel>>>(nullptr);
	_6813_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_211b0c027_scopeGoto>>>(nullptr);
	return _6813_base;
}



inline jule::Ptr<_211b0bd3a_scopeLabel> _2110a1115_findLabelParent(jule::Str _7720_ident, jule::Ptr<_211b0c214_scopeChecker> _7736_scope) {
	jule::Ptr<_211b0bd3a_scopeLabel> _7813_label = _211b0d985_findLabelScope(_7736_scope, _7720_ident);;
	while ((_7813_label == nullptr)) {
		{
			if (((_7736_scope.get()._field_parent == nullptr) || (_7736_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_7736_scope=_7736_scope.get()._field_parent;
			_7813_label=_211b0d985_findLabelScope(_7736_scope, _7720_ident);
		}
	_iter_next_223e55308:;
	}
	_iter_end_223e55308:;;
	return _7813_label;
}



inline jule::Bool _21109525d_modelIsGotoScope(jule::Any _9121_Model, jule::Ptr<_211b0940e_Scope>& _9134_sc) {
	{
		auto &_match_expr{ _9121_Model };
		
		if (_match_expr.type_is<jule::Ptr<_2110188b8_FnCallExprModel>>()) {
			_case_begin_223e5720b:;
			{
				jule::Ptr<_2110188b8_FnCallExprModel> _9413_fcem = _9121_Model.operator jule::Ptr<_2110188b8_FnCallExprModel>();;
				if ((_9413_fcem.get()._field_Except == _9134_sc)) {
					return true;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b8a319_Data>>()) {
			_case_begin_223e57283:;
			{
				jule::Ptr<_211b8a319_Data> _9913_d = _9121_Model.operator jule::Ptr<_211b8a319_Data>();;
				return _21109525d_modelIsGotoScope(jule::Any(_9913_d.get()._field_Model),_9134_sc);
			}
		}
		_match_end_223e571a6:;
	};
	return false;
}



inline jule::Bool _2110a20d3_stmtIsGotoScope(jule::Any& _10521_stmt, jule::Ptr<_211b0940e_Scope>& _10534_sc) {
	{
		auto &_match_expr{ _10521_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_211b0940e_Scope>>()) {
			_case_begin_223e5943e:;
			{
				return (_10521_stmt.operator jule::Ptr<_211b0940e_Scope>() == _10534_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b09bb2_InfIter>>()) {
			_case_begin_223e594a5:;
			{
				return (_10521_stmt.operator jule::Ptr<_211b09bb2_InfIter>().get()._field_Scope == _10534_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0a08b_RangeIter>>()) {
			_case_begin_223e5951b:;
			{
				jule::Ptr<_211b0a08b_RangeIter> _11213_it = _10521_stmt.operator jule::Ptr<_211b0a08b_RangeIter>();;
				return ((_11213_it.get()._field_Scope == _10534_sc) || _21109525d_modelIsGotoScope(jule::Any(_11213_it.get()._field_Expr.get()._field_Model),_10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b09d9e_WhileIter>>()) {
			_case_begin_223e59609:;
			{
				jule::Ptr<_211b09d9e_WhileIter> _11513_it = _10521_stmt.operator jule::Ptr<_211b09d9e_WhileIter>();;
				return (((_11513_it.get()._field_Scope == _10534_sc) || _21109525d_modelIsGotoScope(jule::Any(_11513_it.get()._field_Expr),_10534_sc)) || _21109525d_modelIsGotoScope(jule::Any(_11513_it.get()._field_Next),_10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b0b0e2_Match>>()) {
			_case_begin_223e59681:;
			{
				jule::Ptr<_211b0b0e2_Match> _12013_m = _10521_stmt.operator jule::Ptr<_211b0b0e2_Match>();;
				{
					auto &expr = _12013_m.get()._field_Cases;
					auto it = expr.begin();
					_iter_begin_223e5d2cd:;
					if (it != expr.end()) {
						jule::Ptr<_211b0b642_Case> &_12116_c = *it;
						{
							if ((_12116_c.get()._field_Scope == _10534_sc)) {
								return true;
							};
							{
								auto &expr = _12116_c.get()._field_Exprs;
								auto it = expr.begin();
								_iter_begin_223e5e2ac:;
								if (it != expr.end()) {
									jule::Ptr<_211b8a319_Data> &_12520_expr = *it;
									{
										if (_21109525d_modelIsGotoScope(jule::Any(_12520_expr.get()._field_Model),_10534_sc)) {
											return true;
										};
									}
									_iter_next_223e5e2ac:;
									++it;
									goto _iter_begin_223e5e2ac;
								}
								_iter_end_223e5e2ac:;
							};
						}
						_iter_next_223e5d2cd:;
						++it;
						goto _iter_begin_223e5d2cd;
					}
					_iter_end_223e5d2cd:;
				};
				return ((_12013_m.get()._field_Default != nullptr) && (_12013_m.get()._field_Default.get()._field_Scope == _10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b099c5_Conditional>>()) {
			_case_begin_223e59708:;
			{
				jule::Ptr<_211b099c5_Conditional> _13313_c = _10521_stmt.operator jule::Ptr<_211b099c5_Conditional>();;
				{
					auto &expr = _13313_c.get()._field_Elifs;
					auto it = expr.begin();
					_iter_begin_223e6090c:;
					if (it != expr.end()) {
						jule::Ptr<_211b095eb_If> &_13416_elif = *it;
						{
							if (((_13416_elif.get()._field_Scope == _10534_sc) || _21109525d_modelIsGotoScope(jule::Any(_13416_elif.get()._field_Expr),_10534_sc))) {
								return true;
							};
						}
						_iter_next_223e6090c:;
						++it;
						goto _iter_begin_223e6090c;
					}
					_iter_end_223e6090c:;
				};
				return ((_13313_c.get()._field_Default != nullptr) && (_13313_c.get()._field_Default.get()._field_Scope == _10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b8a319_Data>>()) {
			_case_begin_223e59780:;
			{
				jule::Ptr<_211b8a319_Data> _14113_d = _10521_stmt.operator jule::Ptr<_211b8a319_Data>();;
				return _21109525d_modelIsGotoScope(jule::Any(_14113_d.get()._field_Model),_10534_sc);
			}
		}
		else {
			_case_begin_223e57706:;
			{
				return false;
			}
		}
		_match_end_223e576a1:;
	};
}



inline jule::I64 _2110a2e91_countMatchType(jule::Ptr<_211b0b0e2_Match>& _14820_m, jule::Ptr<_211bb6455_TypeKind>& _14832_t) {
	jule::I64 _14913_n = 0LL;;
	jule::Str _1509_kind = _211bb6851_Str(_14832_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14820_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_223e6349d:;
		if (it != expr.end()) {
			jule::Ptr<_211b0b642_Case> &_15212_c = *it;
			{
				if ((_15212_c == nullptr)) {
					goto _iter_next_223e6349d;
				};
				{
					auto &expr = _15212_c.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_223e644b0:;
					if (it != expr.end()) {
						jule::Ptr<_211b8a319_Data> &_15716_expr = *it;
						{
							if ((_15716_expr == nullptr)) {
								goto _iter_end_223e6349d;
							};
							if ((_1509_kind == _211bb6851_Str(_15716_expr.get()._field_Model.operator jule::Ptr<_211bb6455_TypeKind>().ptr()))) {
								(_14913_n)++;
							};
						}
						_iter_next_223e644b0:;
						++it;
						goto _iter_begin_223e644b0;
					}
					_iter_end_223e644b0:;
				};
			}
			_iter_next_223e6349d:;
			++it;
			goto _iter_begin_223e6349d;
		}
		_iter_end_223e6349d:;
	};
	return _14913_n;
}



inline jule::Slice<jule::Ptr<_211b8a319_Data>> _2110b0c4b_getDatasFromTupleData(jule::Ptr<_211b8a319_Data>& _17231_d) {
	if ((_211bba206_Tup(_17231_d.get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17231_d.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_21101a5e0_TupleExprModel>>()) {
				_case_begin_223e685a2:;
				{
					return _17231_d.get()._field_Model.operator jule::Ptr<_21101a5e0_TupleExprModel>().get()._field_Datas;
				}
			}
			else {
				_case_begin_223e6600b:;
				{
					jule::Ptr<_211bc0b9b_Tuple> _17821_t = _211bba206_Tup(_17231_d.get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_211b8a319_Data>> _17921_r = jule::Slice<jule::Ptr<_211b8a319_Data>>::alloc(0LL,_17821_t.get()._field_Types.len());;
					{
						auto &expr = _17821_t.get()._field_Types;
						auto it = expr.begin();
						_iter_begin_223e6755c:;
						if (it != expr.end()) {
							jule::Ptr<_211bb6455_TypeKind> _18025_kind = *it;
							{
								_17921_r = jule::alloc_for_append(_17921_r,1);_17921_r.__push(jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=_18025_kind, ._field_Mutable=true, }));;
							}
							_iter_next_223e6755c:;
							++it;
							goto _iter_begin_223e6755c;
						}
						_iter_end_223e6755c:;
					};
					return _17921_r;
				}
			}
			_match_end_223e65d74:;
		};
	} else {
		return jule::Slice<jule::Ptr<_211b8a319_Data>>::make({_17231_d});
	};
}



inline jule::Slice<jule::Any> _2110b3b94_getExprModels(jule::Any& _19323_m) {
	{
		auto &_match_expr{ _19323_m };
		
		if (_match_expr.type_is<jule::Ptr<_210e57252_TupleExpr>>()) {
			_case_begin_223e68abe:;
			{
				jule::Ptr<_210e57252_TupleExpr> _19617_tup = _19323_m.operator jule::Ptr<_210e57252_TupleExpr>();;
				jule::Slice<jule::Any> _19717_models = jule::Slice<jule::Any>::alloc(0LL,_19617_tup.get()._field_Expr.len());;
				{
					auto &expr = _19617_tup.get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_223e6a164:;
					if (it != expr.end()) {
						jule::Ptr<_210e565c5_Expr> _19821_expr = *it;
						{
							_19717_models = jule::alloc_for_append(_19717_models,1);_19717_models.__push(_19821_expr.get()._field_Kind);;
						}
						_iter_next_223e6a164:;
						++it;
						goto _iter_begin_223e6a164;
					}
					_iter_end_223e6a164:;
				};
				return _19717_models;
			}
		}
		else {
			_case_begin_223e6888d:;
			{
				return jule::Slice<jule::Any>::make({_19323_m});
			}
		}
		_match_end_223e68838:;
	};
}



inline jule::Bool _2110b46cd_checkMut(jule::Ptr<_211b254c4_Sema>& _20718_s, jule::Ptr<_211b8a319_Data>& _20729_left, jule::Ptr<_211b8a319_Data> _20746_right, jule::Ptr<_20e7ddc0b_Token> _20760_op) {
	jule::Bool _20774_ok = jule::Bool();
	{
		
		if ((!(_20729_left.get()._field_Mutable))) {
			_case_begin_223e6b8e6:;
			{
				_211b28186_pushErr(_20718_s.ptr(), _20760_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_20774_ok = false;
				return _20774_ok;
			}
		}
		else if ((((_20746_right != nullptr) && (!(_20746_right.get()._field_Mutable))) && _211bb7852_Mutable(_20746_right.get()._field_Kind.ptr()))) {
			_case_begin_223e6ba28:;
			{
				if (((_20760_op.get()._field_Kind != jule::Str("=", 1)) && (_211bb99b9_Struct(_20746_right.get()._field_Kind.ptr()) != nullptr))) {
					_20774_ok = true;
					return _20774_ok;
				};
				_211b28186_pushErr(_20718_s.ptr(), _20760_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_20746_right.get()._field_Kind.ptr()))}));
				_20774_ok = false;
				return _20774_ok;
			}
		}
		else {
			_case_begin_223e6b30d:;
			{
				_20774_ok = true;
				return _20774_ok;
			}
		}
		_match_end_223e6b253:;
	};
}



inline jule::Bool _2110b525b_checkAssign(jule::Ptr<_211b254c4_Sema>& _22621_s, jule::Ptr<_211b8a319_Data>& _22636_left, jule::Ptr<_211b8a319_Data> _22653_right, jule::Ptr<_20e7ddc0b_Token> _22667_op) {
	jule::Bool _22681_ok = jule::Bool();
	jule::Ptr<_211022c35_FnIns> _2279_f = _211bb9755_Fn(_22636_left.get()._field_Kind.ptr());;
	if ((((_2279_f != nullptr) && (_2279_f.get()._field_Decl != nullptr)) && _2279_f.get()._field_Decl.get()._field_Global)) {
		_211b28186_pushErr(_22621_s.ptr(), _22667_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_22681_ok = false;
		return _22681_ok;
	};
	{
		
		if (_211b8abcc_IsConst(_22636_left.ptr())) {
			_case_begin_223e71a61:;
			{
				_211b28186_pushErr(_22621_s.ptr(), _22667_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_211b284a5_pushSugggestion(_22621_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else if ((!(_22636_left.get()._field_Lvalue))) {
			_case_begin_223e71b3d:;
			{
				_211b28186_pushErr(_22621_s.ptr(), _22667_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else if ((!(_2110b46cd_checkMut(_22621_s,_22636_left,_22653_right,_22667_op)))) {
			_case_begin_223e71bb5:;
			{
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else {
			_case_begin_223e71412:;
			{
				_22681_ok = true;
				return _22681_ok;
			}
		}
		_match_end_223e712ad:;
	};
}



inline jule::Bool _2110b08c7_isValidAstStForNextSt(jule::Any& _24831_n) {
	{
		auto &_match_expr{ _24831_n };
		
		if (_match_expr.type_is<jule::Ptr<_210e60d2c_AssignSt>>()) {
			_case_begin_223e735e0:;
			{
				return (!(_24831_n.operator jule::Ptr<_210e60d2c_AssignSt>().get()._field_Declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e565c5_Expr>>()) {
			_case_begin_223e73656:;
			{
				return true;
			}
		}
		else {
			_case_begin_223e71e29:;
			{
				return false;
			}
		}
		_match_end_223e71dc4:;
	};
}



inline jule::Bool _2110626d1_isValidStForNextSt(jule::Any& _25924_st) {
	{
		auto &_match_expr{ _25924_st };
		
		if (_match_expr.type_is<jule::Ptr<_211b0aa2b_Postfix>>() || _match_expr.type_is<jule::Ptr<_211b0ac18_Assign>>() || _match_expr.type_is<jule::Ptr<_211b0ae05_MultiAssign>>()) {
			_case_begin_223e740a2:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211b8a319_Data>>()) {
			_case_begin_223e74118:;
			{
				{
					auto &_match_expr{ _25924_st.operator jule::Ptr<_211b8a319_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_2110188b8_FnCallExprModel>>()) {
						_case_begin_223e75b75:;
						{
							return true;
						}
					}
					else {
						_case_begin_223e75b0e:;
						{
							return false;
						}
					}
					_match_end_223e758ab:;
				};
			}
		}
		else {
			_case_begin_223e7403b:;
			{
				return false;
			}
		}
		_match_end_223e74800:;
	};
}



inline jule::Bool _21109de8c_stmtIsDef(jule::Any& _27715_st) {
	{
		auto &_match_expr{ _27715_st };
		
		if (_match_expr.type_is<jule::Ptr<_211b43228_Var>>()) {
			_case_begin_223e76824:;
			{
				return true;
			}
		}
		else {
			_case_begin_223e7579b:;
			{
				return false;
			}
		}
		_match_end_223e75746:;
	};
}



inline jule::Ptr<_211b43228_Var> _211b19a90_findVarInPackage(jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>& _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto &expr = _4626_files;
		auto it = expr.begin();
		_iter_begin_2240dd271:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_211b43228_Var> _4817_v = _211b8628d_FindVar(_4717_f.ptr(), _4649_ident,_4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_2240dd271:;
			++it;
			goto _iter_begin_2240dd271;
		}
		_iter_end_2240dd271:;
	};
	return nullptr;
}



inline jule::Ptr<_211bb5762_TypeAlias> _211b19ebe_findTypeAliasInPackage(jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>& _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto &expr = _5832_files;
		auto it = expr.begin();
		_iter_begin_2240de838:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_211bb5762_TypeAlias> _6017_ta = _211b86645_FindTypeAlias(_5917_f.ptr(), _5855_ident,_5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_2240de838:;
			++it;
			goto _iter_begin_2240de838;
		}
		_iter_end_2240de838:;
	};
	return nullptr;
}



inline jule::Ptr<_210e427d1_Struct> _211b1a3a9_findStructInPackage(jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>& _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto &expr = _7029_files;
		auto it = expr.begin();
		_iter_begin_2240e0dde:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_210e427d1_Struct> _7217_s = _211b869ec_FindStruct(_7117_f.ptr(), _7052_ident,_7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_2240e0dde:;
			++it;
			goto _iter_begin_2240e0dde;
		}
		_iter_end_2240e0dde:;
	};
	return nullptr;
}



inline jule::Ptr<_211020084_Fn> _211b1a81b_findFnInPackage(jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>& _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto &expr = _8225_files;
		auto it = expr.begin();
		_iter_begin_2240e2495:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_211020084_Fn> _8417_f = _211b86da4_FindFn(_8317_file.ptr(), _8248_ident,_8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_2240e2495:;
			++it;
			goto _iter_begin_2240e2495;
		}
		_iter_end_2240e2495:;
	};
	return nullptr;
}



inline jule::Ptr<_211031e42_Trait> _211b1ab29_findTraitInPackage(jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>& _9428_files, jule::Str _9451_ident) {
	{
		auto &expr = _9428_files;
		auto it = expr.begin();
		_iter_begin_2240e2a8e:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_211031e42_Trait> _9617_t = _211b871b2_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_2240e2a8e:;
			++it;
			goto _iter_begin_2240e2a8e;
		}
		_iter_end_2240e2a8e:;
	};
	return nullptr;
}



inline jule::Ptr<_211034087_Enum> _211b1ae6a_findEnumInPackage(jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>& _10627_files, jule::Str _10650_ident) {
	{
		auto &expr = _10627_files;
		auto it = expr.begin();
		_iter_begin_2240e3e58:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_211034087_Enum> _10817_e = _211b874c0_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_2240e3e58:;
			++it;
			goto _iter_begin_2240e3e58;
		}
		_iter_end_2240e3e58:;
	};
	return nullptr;
}



inline jule::Ptr<_211035682_TypeEnum> _211b1b2ab_findTypeEnumInPackage(jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>& _11831_files, jule::Str _11854_ident) {
	{
		auto &expr = _11831_files;
		auto it = expr.begin();
		_iter_begin_2240e5333:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_211035682_TypeEnum> _12017_e = _211b877cd_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;
				};
			}
			_iter_next_2240e5333:;
			++it;
			goto _iter_begin_2240e5333;
		}
		_iter_end_2240e5333:;
	};
	return nullptr;
}



inline jule::Any _211b1b7a6_defByIdentPackage(jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>& _12927_files, jule::Str& _12951_ident, jule::Bool _12963_cppLinked) {
	{
		auto &expr = _12927_files;
		auto it = expr.begin();
		_iter_begin_2240e770e:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _211b88658_defByIdent(_13017_file.ptr(), _12951_ident,_12963_cppLinked);;
				if ((_13117_def != nullptr)) {
					return jule::Any(_13117_def);
				};
			}
			_iter_next_2240e770e:;
			++it;
			goto _iter_begin_2240e770e;
		}
		_iter_end_2240e770e:;
	};
	return nullptr;
}



inline jule::Bool _211b228ab_isStdPackage(jule::Str _36117_f, jule::Str _36125_p) {
	return _20e4446b9_HasPrefix(_36117_f,_20d4b1cdc_Join(jule::Slice<jule::Str>::make({_20e508aad_PathStdlib,_36125_p})));
}



inline jule::Bool _211b23615_isValidModelForRef(jule::Any& _1228_m) {
	{
		auto &_match_expr{ _1228_m };
		
		if (_match_expr.type_is<jule::Ptr<_211b43228_Var>>()) {
			_case_begin_224108e5c:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019b50_StructSubIdentExprModel>>()) {
			_case_begin_224108ec3:;
			{
				jule::Ptr<_211019b50_StructSubIdentExprModel> _1717_model = _1228_m.operator jule::Ptr<_211019b50_StructSubIdentExprModel>();;
				return _211b23615_isValidModelForRef(_1717_model.get()._field_Expr.get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019732_TraitSubIdentExprModel>>()) {
			_case_begin_224109039:;
			{
				jule::Ptr<_211019732_TraitSubIdentExprModel> _2017_model = _1228_m.operator jule::Ptr<_211019732_TraitSubIdentExprModel>();;
				return _211b23615_isValidModelForRef(_2017_model.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211017e28_UnaryExprModel>>()) {
			_case_begin_2241091c1:;
			{
				jule::Ptr<_211017e28_UnaryExprModel> _2317_unary = _1228_m.operator jule::Ptr<_211017e28_UnaryExprModel>();;
				if ((_2317_unary.get()._field_Op.get()._field_Kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_211bb8a40_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_211bb87cb_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;
				};
				return _211b23615_isValidModelForRef(_2317_unary.get()._field_Expr.get()._field_Model);
			}
		}
		else {
			_case_begin_2241087ca:;
			{
				return false;
			}
		}
		_match_end_2241086dc:;
	};
}



inline _20e4ba377_Log _211b23aaa_compilerErr(jule::Ptr<_20e7ddc0b_Token>& _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_20e4ba377_Log _4213_log = _20e4ba377_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_4117_token.get()._field_Row, ._field_Column=_4117_token.get()._field_Column, ._field_Path=_4117_token.get()._field_File.get()._field_Path, ._field_Text=_20e4ba7b7_Logf(_4144_fmt,jule::Any(_4157_args)), };;
	if (_4132_line) {
		_4213_log._field_Line=_20e7e5273_GetRow(_4117_token.get()._field_File.ptr(), _4117_token.get()._field_Row);
	};
	return _4213_log;
}



inline jule::Bool _211b23deb_impIsLookupable(jule::Ptr<_211b1c378_ImportInfo>& _5521_i, jule::Str _5537_ident) {
	if (_5521_i.get()._field_CppLinked) {
		return false;
	};
	if ((!(_5521_i.get()._field_ImportAll))) {
		if ((_5521_i.get()._field_Selected.len() > 0LL)) {
			return _211b1ec4e_existIdent(_5521_i.ptr(), _5537_ident);
		};
	};
	return _5521_i.get()._field_ImportAll;
}



inline void _211b241e8_appendRetVars(jule::Slice<jule::Ptr<_211b43228_Var>>& _6723_dest, jule::Ptr<_211022c35_FnIns>& _6742_f) {
	if ((_2110204e6_IsVoid(_6742_f.get()._field_Decl.ptr()) || (_6742_f.get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_211bb6455_TypeKind>> _7213_types = _211023d57_Types(_6742_f.ptr());;
	{
		auto &expr = _6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_224112a7b:;
		if (it != expr.end()) {
			jule::I64 _7310_i = it - expr.begin();
			jule::Ptr<_20e7ddc0b_Token> _7317_ident = *it;
			{
				if ((_20e7e14a0_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _20e7e1747_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_224112a7b;
				};
				_6723_dest = jule::alloc_for_append(_6723_dest,1);_6723_dest.__push(jule::new_ptr<_211b43228_Var>(_211b43228_Var{._field_Scope=_6742_f.get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_211bba5ad_TypeSymbol>(_211bba5ad_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_211b8b392_Value>(_211b8b392_Value{._field_Data=jule::new_ptr<_211b8a319_Data>()}), }));;
			}
			_iter_next_224112a7b:;
			++it;
			_7310_i++;
			goto _iter_begin_224112a7b;
		}
		_iter_end_224112a7b:;
	};
}



inline void _211b244a1_appendParamVars(jule::Slice<jule::Ptr<_211b43228_Var>>& _9325_dest, jule::Ptr<_211022c35_FnIns>& _9344_f) {
	if ((_9344_f.get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9344_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_224115540:;
		if (it != expr.end()) {
			jule::Ptr<_211021d66_ParamIns> _9817_p = *it;
			{
				if ((_20e7e14a0_IsIgnoreIdent(_9817_p.get()._field_Decl.get()._field_Ident) || _20e7e1747_IsAnonIdent(_9817_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_224115540;
				};
				jule::Ptr<_211b43228_Var> _10317_v = jule::new_ptr<_211b43228_Var>(_211b43228_Var{._field_Scope=_9344_f.get()._field_Scope, ._field_Token=_9817_p.get()._field_Decl.get()._field_Token, ._field_Ident=_9817_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_9817_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_9817_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_211bba5ad_TypeSymbol>(), ._field_Value=jule::new_ptr<_211b8b392_Value>(_211b8b392_Value{._field_Data=jule::new_ptr<_211b8a319_Data>()}), });;
				{
					
					if (_21101dd74_IsSelf(_9817_p.get()._field_Decl.ptr())) {
						_case_begin_224118488:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_211bb6026_Kind>(_9344_f.get()._field_Owner, 0)});
							_10317_v.get()._field_Reference=(!(_21101e0d8_IsRef(_9817_p.get()._field_Decl.ptr())));
							if (_21101e0d8_IsRef(_9817_p.get()._field_Decl.ptr())) {
								_10317_v.get()._field_Ident=_10317_v.get()._field_Ident.slice(1LL);
								_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_211bbe6b1_Sptr>(_211bbe6b1_Sptr{._field_Elem=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_CppIdent=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_9817_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_22411817a:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_211bc011d_Slc>(_211bc011d_Slc{._field_Elem=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_CppIdent=_9817_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_9817_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_22411693c:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=_9817_p.get()._field_Kind;
						}
					}
					_match_end_224117c18:;
				};
				_9325_dest = jule::alloc_for_append(_9325_dest,1);_9325_dest.__push(_10317_v);;
			}
			_iter_next_224115540:;
			++it;
			goto _iter_begin_224115540;
		}
		_iter_end_224115540:;
	};
}



inline void _211b2477b_appendGenericTypeAliases(jule::Slice<jule::Ptr<_211bb5762_TypeAlias>>& _15334_dest, jule::Ptr<_211022c35_FnIns>& _15359_f) {
	jule::I64 _15413_size = _15359_f.get()._field_Generics.len();;
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_15413_size+=_15359_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15413_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15359_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_22411d647:;
		if (it != expr.end()) {
			jule::I64 _16310_i = it - expr.begin();
			jule::Ptr<_211bb4c28_InsGeneric> _16317_g = *it;
			{
				jule::Ptr<_210e5e688_GenericDecl> _16417_decl = _15359_f.get()._field_Decl.get()._field_Generics[_16310_i];;
				_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_211bb5762_TypeAlias>(_211bb5762_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16417_decl.get()._field_Token, ._field_Ident=_16417_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_211bba5ad_TypeSymbol>(_211bba5ad_TypeSymbol{._field_Kind=_16317_g.get()._field_Kind}), }));;
			}
			_iter_next_22411d647:;
			++it;
			_16310_i++;
			goto _iter_begin_22411d647;
		}
		_iter_end_22411d647:;
	};
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_210e6db2b_StructIns> _17617_owner = _15359_f.get()._field_Owner;;
		{
			auto &expr = _17617_owner.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_224120c76:;
			if (it != expr.end()) {
				jule::I64 _17714_i = it - expr.begin();
				jule::Ptr<_211bb4c28_InsGeneric> _17721_g = *it;
				{
					jule::Ptr<_210e5e688_GenericDecl> _17821_decl = _17617_owner.get()._field_Decl.get()._field_Generics[_17714_i];;
					_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_211bb5762_TypeAlias>(_211bb5762_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_17821_decl.get()._field_Token, ._field_Ident=_17821_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_211bba5ad_TypeSymbol>(_211bba5ad_TypeSymbol{._field_Kind=_17721_g.get()._field_Kind}), }));;
				}
				_iter_next_224120c76:;
				++it;
				_17714_i++;
				goto _iter_begin_224120c76;
			}
			_iter_end_224120c76:;
		};
	};
}



inline jule::Ptr<_211b855ab_SymbolTable> _211b24acd_findFile(jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>& _19118_files, jule::Ptr<_20e7e4096_File>& _19142_handler) {
	{
		auto &expr = _19118_files;
		auto it = expr.begin();
		_iter_begin_2241216d3:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _19217_fl = *it;
			{
				if ((_19217_fl.get()._field_File == _19142_handler)) {
					return _19217_fl;
				};
			}
			_iter_next_2241216d3:;
			++it;
			goto _iter_begin_2241216d3;
		}
		_iter_end_2241216d3:;
	};
	return nullptr;
}



inline void _211b25040_pushSugggestion(_20e4ba377_Log* _20031_log, jule::Str _20042_fmt, jule::Slice<jule::Any> _20055_args) {
	_20031_log->_field_Suggestion=_20e4ba7b7_Logf(_20042_fmt,jule::Any(_20055_args));
}



inline jule::Bool _211b646bc_traitHasReferenceReceiver(jule::Ptr<_211031e42_Trait>& _2631_t) {
	{
		auto &expr = _2631_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_224376e77:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_Statically) {
					goto _iter_next_224376e77;
				};
				jule::Ptr<_21101d747_Param> _3313_p = _2712_f.get()._field_Params[0LL];;
				if ((_21101e0d8_IsRef(_3313_p.ptr()) && _21101dd74_IsSelf(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_224376e77:;
			++it;
			goto _iter_begin_224376e77;
		}
		_iter_end_224376e77:;
	};
	return false;
}



inline jule::Bool _211b5b6e7_floatAssignable(jule::Str _4120_kind, jule::Ptr<_211b8a319_Data>& _4132_d) {
	jule::Str _429_value = _2115327e9_FmtFloat(static_cast<jule::F64>(_2110118a0_AsF64(_4132_d.get()._field_Constant.ptr())),'g',-1LL,64LL);;
	return _21133d2e7_CheckBitFloat(_429_value,static_cast<jule::I64>(_2111420eb_BitsizeOf(_4120_kind)));
}



inline jule::Bool _211b5b829_sigAssignable(jule::Str _4618_kind, jule::Ptr<_211b8a319_Data>& _4630_d) {
	jule::F64 _479_min = _2114b2a10_Min(_4618_kind);;
	jule::F64 _489_max = _2114ba83c_Max(_4618_kind);;
	{
		
		if (_21101350b_IsF64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_22437dc1a:;
			{
				jule::F64 _5113_x = _211011163_ReadF64(_4630_d.get()._field_Constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _211ac2e66_Modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_211012cbe_IsU64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_22437dc81:;
			{
				jule::F64 _5813_x = _2110118a0_AsF64(_4630_d.get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_211012a5a_IsI64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_22437dce7:;
			{
				jule::F64 _6313_x = _2110118a0_AsF64(_4630_d.get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_22437dac7:;
	};
	return false;
}



inline jule::Bool _211b72e17_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_211b8a319_Data>& _6932_d) {
	jule::F64 _709_max = _2114ba83c_Max(_6920_kind);;
	if ((_6932_d.get()._field_IsRune && (_6920_kind == jule::Str("u8", 2)))) {
		return _211b5b2c9_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_2110106b2_ReadI64(_6932_d.get()._field_Constant.ptr()))));
	};
	{
		
		if (_21101350b_IsF64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_224384061:;
			{
				jule::F64 _7713_x = _211011163_ReadF64(_6932_d.get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _211ac2e66_Modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_211012cbe_IsU64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_2243840c7:;
			{
				jule::F64 _8713_x = _2110118a0_AsF64(_6932_d.get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_211012a5a_IsI64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_22438413d:;
			{
				jule::F64 _9213_x = _2110118a0_AsF64(_6932_d.get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_224383428:;
	};
	return false;
}



inline jule::Bool _211b73049_intAssignable(jule::Str _9818_kind, jule::Ptr<_211b8a319_Data>& _9830_d) {
	{
		
		if (_211b089e6_IsSigInt(_9818_kind)) {
			_case_begin_224388b8c:;
			{
				return _211b5b829_sigAssignable(_9818_kind,_9830_d);
			}
		}
		else if (_211b08b28_IsUnsigInt(_9818_kind)) {
			_case_begin_22438850a:;
			{
				return _211b72e17_unsigAssignable(_9818_kind,_9830_d);
			}
		}
		else {
			_case_begin_22438477b:;
			{
				return false;
			}
		}
		_match_end_22438469e:;
	};
}



inline jule::Ptr<_210e1d8ab_Directive> _211bb0b03_findDirective(jule::Slice<jule::Ptr<_210e1d8ab_Directive>>& _420423_directives, jule::Str _420454_d) {
	{
		auto &expr = _420423_directives;
		auto it = expr.begin();
		_iter_begin_2155eaa67:;
		if (it != expr.end()) {
			jule::Ptr<_210e1d8ab_Directive> _420517_dr = *it;
			{
				if ((_420517_dr.get()._field_Tag.get()._field_Kind == _420454_d)) {
					return _420517_dr;
				};
			}
			_iter_next_2155eaa67:;
			++it;
			goto _iter_begin_2155eaa67;
		}
		_iter_end_2155eaa67:;
	};
	return nullptr;
}



inline jule::Any _211bb0e88_findBuiltinsImport(jule::Str _421323_ident, jule::Ptr<_211b1c378_ImportInfo> _421335_imp) {
	return jule::Any(_211c69140_findPackageBuiltinDef(_421335_imp.get()._field_LinkPath,_421323_ident));
}



inline void _211bb1197_fitBitsize(jule::Ptr<_211b8a319_Data>& _422020_d) {
	jule::Ptr<_211bbae2c_Prim> _422113_prim = _211bb8567_Prim(_422020_d.get()._field_Kind.ptr());;
	jule::I64 _42229_z = _2111420eb_BitsizeOf(_211bbb290_Str(_422113_prim.ptr()));;
	if ((_42229_z == 64LLU)) {
		return;;
	};
	jule::I64 _422713_k = 0LL;;
	{
		
		if (_211012a5a_IsI64(_422020_d.get()._field_Constant.ptr())) {
			_case_begin_2155ed927:;
			{
				_422713_k=static_cast<jule::I64>(_211412b2a_BitsizeOfInt(static_cast<jule::I64>(_2110106b2_ReadI64(_422020_d.get()._field_Constant.ptr()))));
				if ((_422713_k > _42229_z)) {
					_422113_prim.get()._field_Kind=_211166384_IntFromBits(_422713_k);
				};
			}
		}
		else if (_211012cbe_IsU64(_422020_d.get()._field_Constant.ptr())) {
			_case_begin_2155ed99e:;
			{
				_422713_k=static_cast<jule::I64>(_21142a8bd_BitsizeOfUint(static_cast<jule::U64>(_211010926_ReadU64(_422020_d.get()._field_Constant.ptr()))));
				if ((_422713_k > _42229_z)) {
					_422113_prim.get()._field_Kind=_211178297_UintFromBits(_422713_k);
				};
			}
		}
		else if (_21101350b_IsF64(_422020_d.get()._field_Constant.ptr())) {
			_case_begin_2155eda26:;
			{
				_422713_k=static_cast<jule::I64>(_21135c37c_BitsizeOfFloat(static_cast<jule::F64>(_211011163_ReadF64(_422020_d.get()._field_Constant.ptr()))));
				if ((_422713_k > _42229_z)) {
					_422113_prim.get()._field_Kind=_2111a22b0_FloatFromBits(_422713_k);
				};
			}
		}
		_match_end_2155ed85b:;
	};
}



inline void _211bb1494_makeStructLitAlloc(jule::Ptr<_211b8a319_Data>& _424728_d, jule::Ptr<_211018302_StructLitExprModel>& _424743_lit) {
	_424728_d.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_211bbe6b1_Sptr>(_211bbe6b1_Sptr{._field_Elem=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_424743_lit.get()._field_Strct, 0)})}), 7)});
	_424728_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_2110184de_AllocStructLitExprModel>(_2110184de_AllocStructLitExprModel{._field_Lit=_424743_lit}));
}



inline jule::Ptr<_211b43228_Var> _211bb17d5_buildErrorVar(jule::Ptr<_211b0940e_Scope>& _425823_s, jule::Ptr<_210e5a893_FnCallExpr>& _425839_fc) {
	return jule::new_ptr<_211b43228_Var>(_211b43228_Var{._field_Scope=_425823_s, ._field_Token=_425839_fc.get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_211bba5ad_TypeSymbol>(_211bba5ad_TypeSymbol{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_211b8b392_Value>(_211b8b392_Value{._field_Data=jule::new_ptr<_211b8a319_Data>()}), });
}



inline jule::Any _211bb1b26_findBuiltinsSema(jule::Str _427721_ident, jule::Ptr<_211b254c4_Sema> _427737_s) {
	{
		auto &expr = _427737_s.get()._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_21560460e:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _427817_imp = *it;
			{
				if ((_427817_imp.get()._field_ImportAll || _211b1ec4e_existIdent(_427817_imp.ptr(), _427721_ident))) {
					jule::Any _428021_def = _211bb0e88_findBuiltinsImport(_427721_ident,_427817_imp);;
					if ((_428021_def != nullptr)) {
						return jule::Any(_428021_def);
					};
				};
			}
			_iter_next_21560460e:;
			++it;
			goto _iter_begin_21560460e;
		}
		_iter_end_21560460e:;
	};
	jule::Str _428813_ppath = _20e7e498c_Dir(_427737_s.get()._field_file.get()._field_File.ptr());;
	if (_20e4446b9_HasPrefix(_428813_ppath,_20e508aad_PathStdlib)) {
		(_428813_ppath).mut_slice(_20e508aad_PathStdlib.len());;
		_428813_ppath=(jule::Str("std", 3) + _20e44a417_Replace(_428813_ppath,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
		return jule::Any(_211c69140_findPackageBuiltinDef(_428813_ppath,_427721_ident));
	};
	return nullptr;
}



inline jule::Bool _211bb1dbd_isOkForShifting(jule::Ptr<_211b8a319_Data>& _430225_d) {
	if (_211b8abcc_IsConst(_430225_d.ptr())) {
		{
			
			if (_211012a5a_IsI64(_430225_d.get()._field_Constant.ptr())) {
				_case_begin_2156084e2:;
				{
					return (_2110106b2_ReadI64(_430225_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else if (_211012cbe_IsU64(_430225_d.get()._field_Constant.ptr())) {
				_case_begin_215607ca5:;
				{
					return true;
				}
			}
			else if (_21101350b_IsF64(_430225_d.get()._field_Constant.ptr())) {
				_case_begin_215607d1b:;
				{
					return (_211011163_ReadF64(_430225_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_215607c3e:;
				{
					return false;
				}
			}
			_match_end_215607b62:;
		};
	};
	jule::Ptr<_211bbae2c_Prim> _43159_prim = _211bb8567_Prim(_430225_d.get()._field_Kind.ptr());;
	return ((_43159_prim != nullptr) && _211b08c5a_IsInt(_211bbb290_Str(_43159_prim.ptr())));
}



inline jule::Bool _211bb2275_isInstancedStruct(jule::Ptr<_210e6db2b_StructIns> _431922_s) {
	return (_431922_s.get()._field_Decl.get()._field_Generics.len() == _431922_s.get()._field_Generics.len());
}



inline jule::Bool _211bb25d8_isPtrArithmeticCompatible(jule::Ptr<_211b8a319_Data>& _432335_l, jule::Ptr<_211b8a319_Data>& _432350_r) {
	jule::Ptr<_211bc2c25_Ptr> _43249_ptr = _211bb8a40_Ptr(_432350_r.get()._field_Kind.ptr());;
	if ((_43249_ptr != nullptr)) {
		return _211bb6b5e_Equals(_211bb8a40_Ptr(_432335_l.get()._field_Kind.ptr()).get()._field_Elem, _43249_ptr.get()._field_Elem);
	};
	if (_211b8abcc_IsConst(_432350_r.ptr())) {
		return _211b73049_intAssignable(jule::Str("int", 3),_432350_r);
	};
	_211b7427b_typeCompatibilityChecker _433113_tcc = _211b7427b_typeCompatibilityChecker{._field_dest=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=_432350_r.get()._field_Kind, };;
	return _211b75865_check(&_433113_tcc);
}



inline void _211bb282a_applyCastKindModel(jule::Ptr<_211b8a319_Data>& _434028_d, jule::Ptr<_211bb6455_TypeKind>& _434043_t) {
	_434028_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_2110186cb_CastingExprModel>(_2110186cb_CastingExprModel{._field_Expr=_434028_d.get()._field_Model, ._field_Kind=_434043_t, ._field_ExprKind=_434028_d.get()._field_Kind}));
}



inline void _211bb2ad3_applyCastKind(jule::Ptr<_211b8a319_Data>& _434823_d, jule::Ptr<_211bb6455_TypeKind>& _434838_t) {
	_211bb282a_applyCastKindModel(_434823_d,_434838_t);
	_434823_d.get()._field_Kind=_434838_t;
}



inline jule::Ptr<_211b8a319_Data> _211bb2cd1_buildVoidData(void) {
	return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("void", 4)), 6)}), });
}



inline jule::Str _211bb309a_checkDataForIntegerIndexing(jule::Ptr<_211b8a319_Data>& _436137_d) {
	jule::Str _436149_err_fmt = jule::Str();
	if ((_436137_d == nullptr)) {
		_436149_err_fmt = jule::Str();
		return _436149_err_fmt;
	};
	{
		
		if ((_211bb8567_Prim(_436137_d.get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_21561065e:;
			{
				_436149_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _436149_err_fmt;
			}
		}
		else if ((!(_211b08c5a_IsInt(_211bbb290_Str(_211bb8567_Prim(_436137_d.get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_2156106c5:;
			{
				_436149_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _436149_err_fmt;
			}
		}
		else if (_211b8abcc_IsConst(_436137_d.ptr())) {
			_case_begin_21561073b:;
			{
				if ((_2110118a0_AsF64(_436137_d.get()._field_Constant.ptr()) < 0LL)) {
					_436149_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _436149_err_fmt;
				};
			}
		}
		else if ((_211bb8567_Prim(_436137_d.get()._field_Kind.ptr()) == nullptr) || _211b8abcc_IsConst(_436137_d.ptr()) || (_21113a8b9_RealKindOf(_211bbb290_Str(_211bb8567_Prim(_436137_d.get()._field_Kind.ptr()).ptr())) != _21113a8b9_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_2156107a2:;
			{
				jule::Ptr<_211bb6455_TypeKind> _437817_t = jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)});;
				_211bb2ad3_applyCastKind(_436137_d,_437817_t);
			}
		}
		_match_end_215610c36:;
	};
	_436149_err_fmt = jule::Str();
	return _436149_err_fmt;
}



inline void _211bb3364_applyCastModelByEnum(jule::Ptr<_211b8a319_Data>& _438730_d, jule::Ptr<_211034087_Enum> _438744_e) {
	if ((_438744_e == nullptr)) {
		return;;
	};
	jule::Ptr<_211bbae2c_Prim> _43919_p = _211bb8567_Prim(_438744_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_211bbe161_IsStr(_43919_p.ptr())) {
		return;;
	};
	_211bb282a_applyCastKindModel(_438730_d,_438744_e.get()._field_Kind.get()._field_Kind);
}



inline void _211bb361c_castConstByType(jule::Str& _439821_t, jule::Ptr<_211b8a319_Data>& _439834_d) {
	{
		
		if (_211b089e6_IsSigInt(_439821_t)) {
			_case_begin_215616698:;
			{
				{
					auto _match_expr{ _2111420eb_BitsizeOf(_21113a8b9_RealKindOf(_439821_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_22449630a:;
						{
							_211011b25_SetI64(_439834_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_2110113c7_AsI64(_439834_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_224496371:;
						{
							_211011b25_SetI64(_439834_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_2110113c7_AsI64(_439834_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_2244963d7:;
						{
							_211011b25_SetI64(_439834_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_2110113c7_AsI64(_439834_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_22449644d:;
						{
							_211011b25_SetI64(_439834_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_2110113c7_AsI64(_439834_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_224495e42:;
				};
			}
		}
		else if (_211b08b28_IsUnsigInt(_439821_t)) {
			_case_begin_215616720:;
			{
				{
					auto _match_expr{ _2111420eb_BitsizeOf(_21113a8b9_RealKindOf(_439821_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_224499a8e:;
						{
							_211011d9a_SetU64(_439834_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_21101163b_AsU64(_439834_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_224499b05:;
						{
							_211011d9a_SetU64(_439834_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_21101163b_AsU64(_439834_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_224499b6b:;
						{
							_211011d9a_SetU64(_439834_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_21101163b_AsU64(_439834_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_224499bd2:;
						{
							_211011d9a_SetU64(_439834_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_21101163b_AsU64(_439834_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_2244980dc:;
				};
			}
		}
		else if (_211b08d8c_IsFloat(_439821_t)) {
			_case_begin_215616797:;
			{
				{
					auto _match_expr{ _2111420eb_BitsizeOf(_21113a8b9_RealKindOf(_439821_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_22449d2e0:;
						{
							_21101261a_SetF64(_439834_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_2110118a0_AsF64(_439834_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_22449d356:;
						{
							_21101261a_SetF64(_439834_d.get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_2110118a0_AsF64(_439834_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_22449b83d:;
				};
			}
		}
		_match_end_215616566:;
	};
}



inline void _211bb3b28_updateModelToGenericIns(jule::Any& _443233_m, jule::Ptr<_211022c35_FnIns>& _443252_f) {
	{
		auto &_match_expr{ _443233_m };
		
		if (_match_expr.type_is<jule::Ptr<_211022c35_FnIns>>()) {
			_case_begin_22449e4cd:;
			{
				_443233_m=static_cast<jule::Any>(_443252_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019b50_StructSubIdentExprModel>>()) {
			_case_begin_22449e544:;
			{
				_443233_m.operator jule::Ptr<_211019b50_StructSubIdentExprModel>().get()._field_Method=_443252_f;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019d3c_StructStaticIdentExprModel>>()) {
			_case_begin_22449e5aa:;
			{
				_443233_m.operator jule::Ptr<_211019d3c_StructStaticIdentExprModel>().get()._field_Method=_443252_f;
			}
		}
		_match_end_22449d763:;
	};
}



inline jule::Bool _211bb3d6a_pushSubIdentFromExpr(jule::Any _444329_expr, jule::Ptr<_210e52cb9_SubIdentTypeDecl>& _444350_t) {
	{
		auto &_match_expr{ _444329_expr };
		
		if (_match_expr.type_is<jule::Ptr<_210e5863d_IdentExpr>>()) {
			_case_begin_2244a1766:;
			{
				jule::Ptr<_210e5863d_IdentExpr> _444617_e = _444329_expr.operator jule::Ptr<_210e5863d_IdentExpr>();;
				_444350_t.get()._field_Idents = jule::alloc_for_append(_444350_t.get()._field_Idents,1);_444350_t.get()._field_Idents.__push(jule::new_ptr<_210e5266a_IdentTypeDecl>(_210e5266a_IdentTypeDecl{._field_Token=_444617_e.get()._field_Token, ._field_Ident=_444617_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e59dd1_SubIdentExpr>>()) {
			_case_begin_2244a17cc:;
			{
				jule::Ptr<_210e59dd1_SubIdentExpr> _445217_e = _444329_expr.operator jule::Ptr<_210e59dd1_SubIdentExpr>();;
				if ((!(_211bb3d6a_pushSubIdentFromExpr(_445217_e.get()._field_Expr.get()._field_Kind,_444350_t)))) {
					return false;
				};
				_444350_t.get()._field_Idents = jule::alloc_for_append(_444350_t.get()._field_Idents,1);_444350_t.get()._field_Idents.__push(jule::new_ptr<_210e5266a_IdentTypeDecl>(_210e5266a_IdentTypeDecl{._field_Token=_445217_e.get()._field_Ident, ._field_Ident=_445217_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_2244a169a:;
			{
				return false;
			}
		}
		_match_end_2244a1645:;
	};
	return true;
}



inline jule::Bool _211bccd1d_kindUsesGenerics(jule::Any& _157222_k, jule::Slice<jule::Ptr<_210e5e688_GenericDecl>>& _157240_generics) {
	{
		auto &expr = _157240_generics;
		auto it = expr.begin();
		_iter_begin_212c915d9:;
		if (it != expr.end()) {
			jule::Ptr<_210e5e688_GenericDecl> &_157312_g = *it;
			{
				if (static__211bcc922_exist(_157312_g.get()._field_Ident,_157222_k)) {
					return true;
				};
			}
			_iter_next_212c915d9:;
			++it;
			goto _iter_begin_212c915d9;
		}
		_iter_end_212c915d9:;
	};
	return false;
}



inline jule::Bool _211bcd1a3_hasDirective(jule::Slice<jule::Ptr<_210e1d8ab_Directive>>& _158222_directives, jule::Str _158253_tag) {
	{
		auto &expr = _158222_directives;
		auto it = expr.begin();
		_iter_begin_212c9272d:;
		if (it != expr.end()) {
			jule::Ptr<_210e1d8ab_Directive> _158317_dr = *it;
			{
				if ((_158317_dr.get()._field_Tag.get()._field_Kind == _158253_tag)) {
					return true;
				};
			}
			_iter_next_212c9272d:;
			++it;
			goto _iter_begin_212c9272d;
		}
		_iter_end_212c9272d:;
	};
	return false;
}



inline jule::Bool _211bcd44a_canGetPtr(jule::Ptr<_211b8a319_Data>& _159119_d) {
	if (((!(_159119_d.get()._field_Lvalue)) || _211b8abcc_IsConst(_159119_d.ptr()))) {
		return false;
	};
	{
		
		if (((_211bb9755_Fn(_159119_d.get()._field_Kind.ptr()) != nullptr) || (_211bb8ca4_Enum(_159119_d.get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_212c943de:;
			{
				return false;
			}
		}
		else {
			_case_begin_212c93bd5:;
			{
				return true;
			}
		}
		_match_end_212c93b80:;
	};
}



inline jule::Bool _211bcd769_isValidForSptrType(jule::Ptr<_211bb6455_TypeKind>& _160428_t) {
	jule::Ptr<_210e6db2b_StructIns> _160513_s = _211bb99b9_Struct(_160428_t.ptr());;
	if ((((_160513_s != nullptr) && (_160513_s.get()._field_Decl != nullptr)) && _160513_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;
	};
	return true;
}



inline jule::Bool _211bcda11_isValidForRef(jule::Ptr<_211bb6455_TypeKind>& _161323_t) {
	return (_211bb9755_Fn(_161323_t.ptr()) == nullptr);
}



inline jule::Bool _211bcdcca_isBuiltinStrConvertable(jule::Ptr<_211bb6455_TypeKind>& _161633_t) {
	return (((!(_211bb75dd_Void(_161633_t.ptr()))) && (_211bb9755_Fn(_161633_t.ptr()) == nullptr)) && (_211bba206_Tup(_161633_t.ptr()) == nullptr));
}



inline jule::Str _211bce050_buildLinkPathByTokens(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _162027_tokens) {
	jule::Str _162113_s = _162027_tokens[0LL].get()._field_Kind;;
	{
		auto expr = _162027_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_212c98239:;
		if (it != expr.end()) {
			jule::Ptr<_20e7ddc0b_Token> &_162212_token = *it;
			{
				_162113_s+=jule::Str("::", 2);
				_162113_s+=_162212_token.get()._field_Kind;
			}
			_iter_next_212c98239:;
			++it;
			goto _iter_begin_212c98239;
		}
		_iter_end_212c98239:;
	};
	return _162113_s;
}



inline jule::Ptr<_211bbae2c_Prim> _211bce407_buildPrimType(jule::Str _162918_kind) {
	return jule::new_ptr<_211bbae2c_Prim>(_211bbae2c_Prim{._field_Kind=_162918_kind});
}



inline jule::Ptr<_210e427d1_Struct> _211bce69e_getStructFromKind(jule::Ptr<_211bb6455_TypeKind> _163526_k) {
	{
		
		if ((_163526_k == nullptr)) {
			_case_begin_212c99559:;
			{
				return nullptr;
			}
		}
		else if ((_211bb99b9_Struct(_163526_k.ptr()) != nullptr)) {
			_case_begin_212c995c0:;
			{
				return _211bb99b9_Struct(_163526_k.ptr()).get()._field_Decl;
			}
		}
		else if ((_211bb87cb_Sptr(_163526_k.ptr()) != nullptr)) {
			_case_begin_212c99636:;
			{
				return _211bce69e_getStructFromKind(_211bb87cb_Sptr(_163526_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_211bb94e1_Slc(_163526_k.ptr()) != nullptr)) {
			_case_begin_212c9969c:;
			{
				return _211bce69e_getStructFromKind(_211bb94e1_Slc(_163526_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_211bb927c_Arr(_163526_k.ptr()) != nullptr)) {
			_case_begin_212c99955:;
			{
				return _211bce69e_getStructFromKind(_211bb927c_Arr(_163526_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_211bb8a40_Ptr(_163526_k.ptr()) != nullptr)) {
			_case_begin_212c999bb:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_212c994e3:;
			{
				return nullptr;
			}
		}
		_match_end_212c9926d:;
	};
}



inline jule::Bool _211bce946_isPrim(jule::Str _165811_kind) {
	return ((((((((((((((((_165811_kind == jule::Str("i8", 2)) || (_165811_kind == jule::Str("i16", 3))) || (_165811_kind == jule::Str("i32", 3))) || (_165811_kind == jule::Str("i64", 3))) || (_165811_kind == jule::Str("u8", 2))) || (_165811_kind == jule::Str("u16", 3))) || (_165811_kind == jule::Str("u32", 3))) || (_165811_kind == jule::Str("u64", 3))) || (_165811_kind == jule::Str("f32", 3))) || (_165811_kind == jule::Str("f64", 3))) || (_165811_kind == jule::Str("int", 3))) || (_165811_kind == jule::Str("uint", 4))) || (_165811_kind == jule::Str("uintptr", 7))) || (_165811_kind == jule::Str("bool", 4))) || (_165811_kind == jule::Str("str", 3))) || (_165811_kind == jule::Str("any", 3)));
}



inline void _211bcebee_applyImplicitCast(jule::Ptr<_211bb6455_TypeKind>& _167727_dest, jule::Ptr<_211b8a319_Data>& _167749_d) {
	if (_211bb7379_IsNil(_167749_d.get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_211bbae2c_Prim> _16819_destPrim = _211bb8567_Prim(_167727_dest.ptr());;
	jule::Ptr<_211bbae2c_Prim> _16829_prim = _211bb8567_Prim(_167749_d.get()._field_Kind.ptr());;
	if ((_16819_destPrim != nullptr)) {
		if (_211bbe3c5_IsAny(_16819_destPrim.ptr())) {
			_211bb2ad3_applyCastKind(_167749_d,_167727_dest);
			return;;
		};
		if (((((((!(_211bb7115_CppLinked(_167749_d.get()._field_Kind.ptr()))) && (!(_167749_d.get()._field_Kind.get()._field_Variadic))) && (!(_167749_d.get()._field_Lvalue))) && (!(_211b8abcc_IsConst(_167749_d.ptr())))) && (_16829_prim != nullptr)) && _211b08ebe_IsNum(_16829_prim.get()._field_Kind))) {
			_211bb2ad3_applyCastKind(_167749_d,_167727_dest);
		};
		return;;
	};
	if (((_211bb9c2d_Trait(_167727_dest.ptr()) != nullptr) && (_211bb9c2d_Trait(_167749_d.get()._field_Kind.ptr()) == nullptr))) {
		_211bb282a_applyCastKindModel(_167749_d,_167727_dest);
		return;;
	};
	if (((_211bb9018_TypeEnum(_167727_dest.ptr()) != nullptr) && (_211bb9018_TypeEnum(_167749_d.get()._field_Kind.ptr()) == nullptr))) {
		_211bb282a_applyCastKindModel(_167749_d,_167727_dest);
		return;;
	};
}



inline std::tuple<jule::Ptr<_211b855ab_SymbolTable>,jule::Slice<_20e4ba377_Log>> _211bd2c68_buildSymbols(jule::Ptr<_210e1c811_Ast>& _1622_ast, jule::Trait<_211b1970a_Importer>& _1638_importer, jule::Ptr<_21102b469_symbolBuilder> _1662_owner) {
	jule::Ptr<_21102b469_symbolBuilder> _1713_sb = jule::new_ptr<_21102b469_symbolBuilder>(_21102b469_symbolBuilder{._field_owner=_1662_owner, ._field_importer=_1638_importer, ._field_ast=_1622_ast, });;
	_211031419_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1713_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1713_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_211b202d2_Package>,jule::Slice<_20e4ba377_Log>> _211bd3197_analyzePackage(jule::Slice<jule::Ptr<_210e1c811_Ast>>& _3024_files, jule::Trait<_211b1970a_Importer>& _3044_importer, jule::I64& _3065_flags) {
	jule::Slice<jule::Ptr<_211b855ab_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_211b855ab_SymbolTable>>::alloc(0LL,_3024_files.len());;
	{
		auto &expr = _3024_files;
		auto it = expr.begin();
		_iter_begin_212da0000:;
		if (it != expr.end()) {
			jule::Ptr<_210e1c811_Ast> _3317_f = *it;
			{
				jule::Ptr<_211b855ab_SymbolTable> _3418_table;;
				jule::Slice<_20e4ba377_Log> _3429_errors;;
				std::tie(_3418_table,_3429_errors) = _211bd2c68_buildSymbols(_3317_f,_3044_importer,nullptr);
				if ((_3429_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3429_errors);
				};
				_3213_tables = jule::alloc_for_append(_3213_tables,1);_3213_tables.__push(_3418_table);;
			}
			_iter_next_212da0000:;
			++it;
			goto _iter_begin_212da0000;
		}
		_iter_end_212da0000:;
	};
	jule::Ptr<_211b254c4_Sema> _4113_sema = jule::new_ptr<_211b254c4_Sema>(_211b254c4_Sema{._field_flags=_3065_flags});;
	_211b40247_check(_4113_sema, _3213_tables);
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4113_sema.get()._field_errors);
	};
	jule::Ptr<_211b202d2_Package> _4913_pkg = jule::new_ptr<_211b202d2_Package>(_211b202d2_Package{._field_Files=_4113_sema.get()._field_files});;
	return std::make_tuple(_4913_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_211b202d2_Package>,jule::Slice<_20e4ba377_Log>> _211bd3582_AnalyzePackage(jule::Slice<jule::Ptr<_210e1c811_Ast>> _7323_files, jule::Trait<_211b1970a_Importer> _7342_importer, jule::I64 _7362_flags) {
	if ((_7323_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_211b202d2_Package> _7714_package;;
	jule::Slice<_20e4ba377_Log> _7727_logs;;
	std::tie(_7714_package,_7727_logs) = _211bd3197_analyzePackage(_7323_files,_7342_importer,_7362_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_211022c35_FnIns> _211bddd1d_findBuiltinFn(jule::Str _2218_ident) {
	{
		auto &_match_expr{ _2218_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_212da9933:;
			{
				static jule::Ptr<_211022c35_FnIns> _2520_f = jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c43e3e_builtinCallerOut), });;
				return _2520_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_212da9999:;
			{
				static jule::Ptr<_211022c35_FnIns> _2820_f = jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c655d1_builtinCallerOutln), });;
				return _2820_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_212da9ba8:;
			{
				static jule::Ptr<_211022c35_FnIns> _3120_f = jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c67ec9_builtinCallerNew), });;
				return _3120_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_212da9c1e:;
			{
				static jule::Ptr<_211022c35_FnIns> _3420_f = jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c2c5dc_builtinCallerPanic), });;
				return _3420_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_212da9c85:;
			{
				static jule::Ptr<_211022c35_FnIns> _3720_f = jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c4ad25_builtinCallerMake), });;
				return _3720_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_212da9ceb:;
			{
				static jule::Ptr<_211022c35_FnIns> _4020_f = jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c4425d_builtinCallerAppend), });;
				return _4020_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_212da9d62:;
			{
				static jule::Ptr<_211022c35_FnIns> _4320_f = jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c42beb_builtinCallerCopy), });;
				return _4320_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_212da9dc8:;
			{
				static jule::Ptr<_211022c35_FnIns> _4620_f = jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211be45c6_builtinCallerClone), });;
				return _4620_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_212da9e94:;
			{
				static jule::Ptr<_211022c35_FnIns> _4920_f = jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211bdb722_builtinCallerAssert), });;
				return _4920_f;
			}
		}
		else {
			_case_begin_212da9724:;
			{
				return nullptr;
			}
		}
		_match_end_212da9180:;
	};
}



inline jule::Ptr<_211bb5762_TypeAlias> _211be1084_findBuiltinTypeAlias(jule::Str _5625_ident) {
	{
		auto &_match_expr{ _5625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_212db0708:;
			{
				static jule::Ptr<_211bb5762_TypeAlias> _5920_t = jule::new_ptr<_211bb5762_TypeAlias>(_211bb5762_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_211bba5ad_TypeSymbol>(_211bba5ad_TypeSymbol{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _5920_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_212db076e:;
			{
				static jule::Ptr<_211bb5762_TypeAlias> _6920_t = jule::new_ptr<_211bb5762_TypeAlias>(_211bb5762_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_211bba5ad_TypeSymbol>(_211bba5ad_TypeSymbol{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _6920_t;
			}
		}
		else {
			_case_begin_212daed9a:;
			{
				return nullptr;
			}
		}
		_match_end_212daa33a:;
	};
}



inline jule::Any _211c0bd19_findBuiltinDef(jule::Str _8319_ident) {
	jule::Ptr<_211022c35_FnIns> _8413_f = _211bddd1d_findBuiltinFn(_8319_ident);;
	if ((_8413_f != nullptr)) {
		return jule::Any(_8413_f);
	};
	jule::Ptr<_211bb5762_TypeAlias> _8813_ta = _211be1084_findBuiltinTypeAlias(_8319_ident);;
	if ((_8813_ta != nullptr)) {
		return jule::Any(_8813_ta);
	};
	return nullptr;
}



inline jule::Any _211be1b45_findBuiltinDefStdDebug(jule::Str _9527_ident) {
	{
		auto &_match_expr{ _9527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_212db41ce:;
			{
				static jule::Ptr<_211022c35_FnIns> _9820_f = jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c788ad_builtinCallerStdDebugOut), });;
				return jule::Any(_9820_f);
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_212db4245:;
			{
				static jule::Ptr<_211022c35_FnIns> _10120_f = jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c78c98_builtinCallerStdDebugOutln), });;
				return jule::Any(_10120_f);
			}
		}
		else {
			_case_begin_212db3cc2:;
			{
				return nullptr;
			}
		}
		_match_end_212db3b7e:;
	};
}



inline jule::Any _211be265c_findBuiltinDefStdMem(jule::Str _10825_ident) {
	{
		auto &_match_expr{ _10825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_212db4630:;
			{
				static jule::Ptr<_211022c35_FnIns> _11120_f = jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c06e46_builtinCallerStdMemSizeOf), });;
				return jule::Any(_11120_f);
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_212db4696:;
			{
				static jule::Ptr<_211022c35_FnIns> _11420_f = jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c7778b_builtinCallerStdMemAlignOf), });;
				return jule::Any(_11420_f);
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_212db470c:;
			{
				static jule::Ptr<_211022c35_FnIns> _11720_f = jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c77b21_builtinCallerStdMemFree), });;
				return jule::Any(_11720_f);
			}
		}
		else {
			_case_begin_212db51be:;
			{
				return nullptr;
			}
		}
		_match_end_212db5c3b:;
	};
}



inline jule::Any _211c171dc_findBuiltinDefStdJuleIntegrated(jule::Str _12436_ident) {
	{
		auto &_match_expr{ _12436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_212db6115:;
			{
				static jule::Ptr<_211022c35_FnIns> _12720_f = jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c78050_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_12720_f);
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_212db617b:;
			{
				static jule::Ptr<_211022c35_FnIns> _13020_f = jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_Decl=jule::new_ptr<_211020084_Fn>(_211020084_Fn{._field_Generics=jule::Slice<jule::Ptr<_210e5e688_GenericDecl>>::alloc(1LL), }), ._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c7846d_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_13020_f);
			}
		}
		else {
			_case_begin_212db8304:;
			{
				return nullptr;
			}
		}
		_match_end_212db81b1:;
	};
}



inline jule::Any _211c69140_findPackageBuiltinDef(jule::Str _14226_link_path, jule::Str _14242_ident) {
	{
		auto &_match_expr{ _14226_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_212dba34a:;
			{
				return jule::Any(_211be1b45_findBuiltinDefStdDebug(_14242_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_212dba3b1:;
			{
				return jule::Any(_211be265c_findBuiltinDefStdMem(_14242_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_212dba427:;
			{
				return jule::Any(_211c171dc_findBuiltinDefStdJuleIntegrated(_14242_ident));
			}
		}
		else {
			_case_begin_212db8502:;
			{
				return nullptr;
			}
		}
		_match_end_212db9107:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211c0771b_builtinCallerCommonPlain(jule::Ptr<_211b8bd87_Eval>& _15534_e, jule::Ptr<_210e5a893_FnCallExpr>& _15549_fc, jule::Ptr<_211b8a319_Data>& _15571_d) {
	jule::Ptr<_211022c35_FnIns> _15613_f = _211bb9755_Fn(_15571_d.get()._field_Kind.ptr());;
	_211b7c0b9_fnCallArgChecker _15813_fcac = _211b7c0b9_fnCallArgChecker{._field_e=_15534_e, ._field_args=_15549_fc.get()._field_Args, ._field_errorToken=_15549_fc.get()._field_Token, ._field_f=_15613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_211b7e484_check(&_15813_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_2110188b8_FnCallExprModel> _16913_model = jule::new_ptr<_2110188b8_FnCallExprModel>(_2110188b8_FnCallExprModel{._field_Token=_15549_fc.get()._field_Token, ._field_Func=_15613_f, ._field_Expr=_15571_d.get()._field_Model, ._field_Args=_15813_fcac._field_argModels, });;
	if ((_15613_f.get()._field_Result == nullptr)) {
		_15571_d=_211bb2cd1_buildVoidData();
	} else {
		_15571_d=jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=_15613_f.get()._field_Result, });
	};
	_15571_d.get()._field_Model=static_cast<jule::Any>(_16913_model);
	return _15571_d;
}



inline jule::Ptr<_211b8a319_Data> _211c43290_builtinCallerCommon(jule::Ptr<_211b8bd87_Eval>& _18829_e, jule::Ptr<_210e5a893_FnCallExpr>& _18844_fc, jule::Ptr<_211b8a319_Data>& _18866_d) {
	return _211c0771b_builtinCallerCommonPlain(_18829_e,_18844_fc,_18866_d);
}



inline jule::Ptr<_211b8a319_Data> _211c4c94d_builtinCallerCommonMut(jule::Ptr<_211b8bd87_Eval>& _19232_e, jule::Ptr<_210e5a893_FnCallExpr>& _19247_fc, jule::Ptr<_211b8a319_Data>& _19269_d) {
	if ((!(_19269_d.get()._field_Mutable))) {
		_211b8c393_pushErr(_19232_e.ptr(), _19247_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _211c43290_builtinCallerCommon(_19232_e,_19247_fc,_19269_d);
}



inline jule::Ptr<_211b8a319_Data> _211c68b01_builtinCallerError(jule::Ptr<_211b8bd87_Eval>& _19928_e, jule::Ptr<_210e5a893_FnCallExpr>& _19943_fc) {
	if ((_19943_fc.get()._field_Args.len() < 1LL)) {
		_211b8c393_pushErr(_19928_e.ptr(), _19943_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_19943_fc.get()._field_Args.len() > 1LL)) {
		_211b8c393_pushErr(_19928_e.ptr(), _19943_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_211b8a319_Data> _20713_expr = _211ba7b50_evalExpr(_19928_e, _19943_fc.get()._field_Args[0LL]);;
	if ((_20713_expr == nullptr)) {
		return nullptr;
	};
	if (_211b8a704_IsNil(_20713_expr.ptr())) {
		_211b8c393_pushErr(_19928_e.ptr(), _19943_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_211b8a319_Data> _21613_d = _211bb2cd1_buildVoidData();;
	_21613_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101ba20_BuiltinErrorCallExprModel>(_21101ba20_BuiltinErrorCallExprModel{._field_Err=_20713_expr.get()._field_Model}));
	return _21613_d;
}



inline jule::Ptr<_211b8a319_Data> _211c43e3e_builtinCallerOut(jule::Ptr<_211b8bd87_Eval>& _22426_e, jule::Ptr<_210e5a893_FnCallExpr>& _22441_fc, jule::Ptr<_211b8a319_Data>& ) {
	if ((_22441_fc.get()._field_Args.len() < 1LL)) {
		_211b8c393_pushErr(_22426_e.ptr(), _22441_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_22441_fc.get()._field_Args.len() > 1LL)) {
		_211b8c393_pushErr(_22426_e.ptr(), _22441_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_211b8a319_Data> _23313_expr = _211ba7b50_evalExpr(_22426_e, _22441_fc.get()._field_Args[0LL]);;
	if ((_23313_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_211bcdcca_isBuiltinStrConvertable(_23313_expr.get()._field_Kind)))) {
		_211b8c393_pushErr(_22426_e.ptr(), _22441_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_211b8a319_Data> _24313_d = _211bb2cd1_buildVoidData();;
	_24313_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101a7cc_BuiltinOutCallExprModel>(_21101a7cc_BuiltinOutCallExprModel{._field_Expr=_23313_expr.get()._field_Model, }));
	return _24313_d;
}



inline jule::Ptr<_211b8a319_Data> _211c655d1_builtinCallerOutln(jule::Ptr<_211b8bd87_Eval>& _24828_e, jule::Ptr<_210e5a893_FnCallExpr>& _24843_fc, jule::Ptr<_211b8a319_Data>& _24865_d) {
	_24865_d=_211c43e3e_builtinCallerOut(_24828_e,_24843_fc,_24865_d);
	if ((_24865_d == nullptr)) {
		return nullptr;
	};
	_24865_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101a9b9_BuiltinOutlnCallExprModel>(_21101a9b9_BuiltinOutlnCallExprModel{._field_Expr=_24865_d.get()._field_Model.operator jule::Ptr<_21101a7cc_BuiltinOutCallExprModel>().get()._field_Expr, }));
	return _24865_d;
}



inline jule::Ptr<_211b8a319_Data> _211c67ec9_builtinCallerNew(jule::Ptr<_211b8bd87_Eval>& _26026_e, jule::Ptr<_210e5a893_FnCallExpr>& _26041_fc, jule::Ptr<_211b8a319_Data>& _26063_d) {
	if ((_26041_fc.get()._field_Args.len() < 1LL)) {
		_211b8c393_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_26041_fc.get()._field_Args.len() > 2LL)) {
		_211b8c393_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_211b8a319_Data> _26913_t = _211ba7534_evalExprKind(_26026_e, _26041_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_26913_t == nullptr)) {
		return nullptr;
	};
	if ((!(_26913_t.get()._field_Decl))) {
		_211b8c393_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_211bcd769_isValidForSptrType(_26913_t.get()._field_Kind)))) {
		jule::Ptr<_210e6db2b_StructIns> _28017_s = _211bb99b9_Struct(_26913_t.get()._field_Kind.ptr());;
		if ((((_28017_s != nullptr) && (_28017_s.get()._field_Decl != nullptr)) && _28017_s.get()._field_Decl.get()._field_CppLinked)) {
			_211b8c393_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_26063_d.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_211bbe6b1_Sptr>(_211bbe6b1_Sptr{._field_Elem=_26913_t.get()._field_Kind}), 7)});
	if ((_26041_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_211bb6455_TypeKind> _29417_old = _26026_e.get()._field_prefix;;
		_26026_e.get()._field_prefix=_26913_t.get()._field_Kind;
		jule::Ptr<_211b8a319_Data> _29717_init = _211ba7b50_evalExpr(_26026_e, _26041_fc.get()._field_Args[1LL]);;
		_26026_e.get()._field_prefix=_29417_old;
		if ((_29717_init != nullptr)) {
			jule::Ptr<_20e7ddc0b_Token> _30221_token = _26041_fc.get()._field_Args[1LL].get()._field_Token;;
			;
			_211b32ca6_checkValidityForInitExpr(_26026_e.get()._field_s, (!(_26026_e.get()._field_immutable)),false,_26913_t.get()._field_Kind,_29717_init,_30221_token);
			_211b3006c_checkAssignType(_26026_e.get()._field_s, false,_26913_t.get()._field_Kind,_29717_init,_30221_token);
			_26063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101ad93_BuiltinNewCallExprModel>(_21101ad93_BuiltinNewCallExprModel{._field_Kind=_26913_t.get()._field_Kind, ._field_Init=_29717_init.get()._field_Model}));
		};
	} else {
		_26063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101ad93_BuiltinNewCallExprModel>(_21101ad93_BuiltinNewCallExprModel{._field_Kind=_26913_t.get()._field_Kind, }));
	};
	return _26063_d;
}



inline jule::Ptr<_211b8a319_Data> _211c2c5dc_builtinCallerPanic(jule::Ptr<_211b8bd87_Eval>& _32228_e, jule::Ptr<_210e5a893_FnCallExpr>& _32243_fc, jule::Ptr<_211b8a319_Data>& ) {
	if ((_32243_fc.get()._field_Args.len() < 1LL)) {
		_211b8c393_pushErr(_32228_e.ptr(), _32243_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_32243_fc.get()._field_Args.len() > 1LL)) {
		_211b8c393_pushErr(_32228_e.ptr(), _32243_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_211b8a319_Data> _33113_expr = _211ba7b50_evalExpr(_32228_e, _32243_fc.get()._field_Args[0LL]);;
	if ((_33113_expr == nullptr)) {
		return nullptr;
	};
	if (((_211bb8567_Prim(_33113_expr.get()._field_Kind.ptr()) == nullptr) || (!(_211bbe161_IsStr(_211bb8567_Prim(_33113_expr.get()._field_Kind.ptr()).ptr()))))) {
		_211b8c393_pushErr(_32228_e.ptr(), _32243_fc.get()._field_Token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_211b8a319_Data> _34013_d = _211bb2cd1_buildVoidData();;
	_34013_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101b080_BuiltinPanicCallExprModel>(_21101b080_BuiltinPanicCallExprModel{._field_Token=_32243_fc.get()._field_Token, ._field_Expr=_33113_expr.get()._field_Model}));
	return _34013_d;
}



inline jule::Ptr<_211b8a319_Data> _211c4ad25_builtinCallerMake(jule::Ptr<_211b8bd87_Eval>& _34827_e, jule::Ptr<_210e5a893_FnCallExpr>& _34842_fc, jule::Ptr<_211b8a319_Data>& _34864_d) {
	if ((_34842_fc.get()._field_Args.len() < 2LL)) {
		if ((_34842_fc.get()._field_Args.len() == 1LL)) {
			_211b8c393_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_211b8c393_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	jule::Ptr<_211b8a319_Data> _35813_t = _211ba7534_evalExprKind(_34827_e, _34842_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_35813_t == nullptr)) {
		return nullptr;
	};
	{
		
		if ((!(_35813_t.get()._field_Decl))) {
			_case_begin_2248d554b:;
			{
				goto _match_end_2248d5837;
			}
		}
		else if ((_211bb94e1_Slc(_35813_t.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2248d55b2:;
			{
				if ((_34842_fc.get()._field_Args.len() > 3LL)) {
					_211b8c393_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Args[3LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		else if (((_211bb8567_Prim(_35813_t.get()._field_Kind.ptr()) != nullptr) && _211bbe161_IsStr(_211bb8567_Prim(_35813_t.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_2248d5628:;
			{
				if ((_34842_fc.get()._field_Args.len() > 2LL)) {
					_211b8c393_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		_match_end_2248d5837:;
	};
	_211b8c393_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	return nullptr;
	_julec_label_cont:;
	_34864_d.get()._field_Kind=_35813_t.get()._field_Kind;
	jule::Ptr<_211b8a319_Data> _38213_len = _211ba7b50_evalExpr(_211b2e764_evalp(_34827_e.get()._field_s, _34827_e.get()._field_lookup,_35813_t.get()._field_Kind), _34842_fc.get()._field_Args[1LL]);;
	if ((_38213_len == nullptr)) {
		return nullptr;
	};
	_211b95984_checkIntegerIndexingByData(_34827_e.ptr(), _38213_len,_34842_fc.get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_21101b459_BuiltinMakeCallExprModel> _38913_model = jule::new_ptr<_21101b459_BuiltinMakeCallExprModel>(_21101b459_BuiltinMakeCallExprModel{._field_Kind=_35813_t.get()._field_Kind, ._field_Len=_38213_len.get()._field_Model, });;
	_34864_d.get()._field_Model=static_cast<jule::Any>(_38913_model);
	if ((_34842_fc.get()._field_Args.len() == 3LL)) {
		jule::Ptr<_211b8a319_Data> _39517_cap = _211ba7b50_evalExpr(_211b2e764_evalp(_34827_e.get()._field_s, _34827_e.get()._field_lookup,_35813_t.get()._field_Kind), _34842_fc.get()._field_Args[2LL]);;
		if ((_39517_cap == nullptr)) {
			return _34864_d;
		};
		_211b95984_checkIntegerIndexingByData(_34827_e.ptr(), _39517_cap,_34842_fc.get()._field_Args[2LL].get()._field_Token);
		_38913_model.get()._field_Cap=_39517_cap.get()._field_Model;
	};
	return _34864_d;
}



inline jule::Ptr<_211b8a319_Data> _211c4425d_builtinCallerAppend(jule::Ptr<_211b8bd87_Eval>& _40529_e, jule::Ptr<_210e5a893_FnCallExpr>& _40544_fc, jule::Ptr<_211b8a319_Data>& _40566_d) {
	if ((_40544_fc.get()._field_Args.len() < 2LL)) {
		if ((_40544_fc.get()._field_Args.len() == 1LL)) {
			_211b8c393_pushErr(_40529_e.ptr(), _40544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_211b8c393_pushErr(_40529_e.ptr(), _40544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_211b8a319_Data> _41513_t = _211ba7b50_evalExpr(_40529_e, _40544_fc.get()._field_Args[0LL]);;
	if ((_41513_t == nullptr)) {
		return nullptr;
	};
	if ((_211bb94e1_Slc(_41513_t.get()._field_Kind.ptr()) == nullptr)) {
		_211b8c393_pushErr(_40529_e.ptr(), _40544_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_211022c35_FnIns> _42513_f = jule::new_ptr<_211022c35_FnIns>(_211022c35_FnIns{._field_Params=jule::Slice<jule::Ptr<_211021d66_ParamIns>>::make({jule::new_ptr<_211021d66_ParamIns>(_211021d66_ParamIns{._field_Decl=jule::new_ptr<_21101d747_Param>(_21101d747_Param{._field_Mutable=true, }), ._field_Kind=_41513_t.get()._field_Kind}),jule::new_ptr<_211021d66_ParamIns>(_211021d66_ParamIns{._field_Decl=jule::new_ptr<_21101d747_Param>(_21101d747_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_211bb94e1_Slc(_41513_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41513_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_211b8a319_Data>(jule::Ptr<_211b8bd87_Eval>&,jule::Ptr<_210e5a893_FnCallExpr>&,jule::Ptr<_211b8a319_Data>&)>(_211c0771b_builtinCallerCommonPlain), });;
	_40566_d.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_42513_f, 1)});
	_40566_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101a216_CommonIdentExprModel>(_21101a216_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}));
	_40566_d=_211c0771b_builtinCallerCommonPlain(_40529_e,_40544_fc,_40566_d);
	if ((_40566_d != nullptr)) {
		jule::Ptr<_2110188b8_FnCallExprModel> _45317_model = _40566_d.get()._field_Model.operator jule::Ptr<_2110188b8_FnCallExprModel>();;
		_40566_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101b646_BuiltinAppendCallExprModel>(_21101b646_BuiltinAppendCallExprModel{._field_Dest=_45317_model.get()._field_Args[0LL], ._field_Elements=_45317_model.get()._field_Args[1LL]}));
	};
	return _40566_d;
}



inline jule::Ptr<_211b8a319_Data> _211c64c84_callerCopySlice(jule::Ptr<_211b8a319_Data>& _46225_dest, jule::Ptr<_211b8bd87_Eval>& _46243_e, jule::Ptr<_210e5a893_FnCallExpr>& _46258_fc, jule::Ptr<_211b8a319_Data>& _46280_d) {
	if ((!(_46225_dest.get()._field_Mutable))) {
		_211b8c393_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_211b8a319_Data> _46713_src = _211ba7b50_evalExpr(_46243_e, _46258_fc.get()._field_Args[1LL]);;
	if ((_46713_src == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_211bc011d_Slc> _47113_slc = _211bb94e1_Slc(_46713_src.get()._field_Kind.ptr());;
	if ((_47113_slc != nullptr)) {
		if (((!(_46713_src.get()._field_Mutable)) && _211bb7852_Mutable(_47113_slc.get()._field_Elem.ptr()))) {
			_211b8c393_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_211bb6b5e_Equals(_46225_dest.get()._field_Kind, _46713_src.get()._field_Kind)))) {
			_211b8c393_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_46225_dest.get()._field_Kind.ptr())),jule::Any(_211bb6851_Str(_46713_src.get()._field_Kind.ptr()))}));
		};
	} else {
		jule::Ptr<_211bbae2c_Prim> _48113_destPrim = _211bb8567_Prim(_211bb94e1_Slc(_46225_dest.get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_211bbae2c_Prim> _48213_prim = _211bb8567_Prim(_46713_src.get()._field_Kind.ptr());;
		if (((((_48113_destPrim == nullptr) || (_48213_prim == nullptr)) || (!(_211bbe161_IsStr(_48213_prim.ptr())))) || (!(_211bbc736_IsU8(_48113_destPrim.ptr()))))) {
			_211b8c393_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_46225_dest.get()._field_Kind.ptr())),jule::Any(_211bb6851_Str(_46713_src.get()._field_Kind.ptr()))}));
		};
	};
	_46280_d.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)});
	_46280_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101b833_BuiltinCopyCallExprModel>(_21101b833_BuiltinCopyCallExprModel{._field_Dest=_46225_dest, ._field_Src=_46713_src}));
	return _46280_d;
}



inline jule::Ptr<_211b8a319_Data> _211c57e0e_callerCopyStr(jule::Ptr<_211b8a319_Data>& _49623_dest, jule::Ptr<_211b8bd87_Eval>& _49641_e, jule::Ptr<_210e5a893_FnCallExpr>& _49656_fc, jule::Ptr<_211b8a319_Data>& _49678_d) {
	if ((!(_49623_dest.get()._field_Mutable))) {
		_211b8c393_pushErr(_49641_e.ptr(), _49656_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_211b8a319_Data> _50113_src = _211ba7b50_evalExpr(_49641_e, _49656_fc.get()._field_Args[1LL]);;
	if ((_50113_src == nullptr)) {
		return nullptr;
	};
	{
		
		if ((_211bb8567_Prim(_50113_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2249045e2:;
			{
				if (_211bbe161_IsStr(_211bb8567_Prim(_50113_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_211bb94e1_Slc(_50113_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_224904658:;
			{
				jule::Ptr<_211bc011d_Slc> _51117_slc = _211bb94e1_Slc(_50113_src.get()._field_Kind.ptr());;
				if (((_211bb8567_Prim(_51117_slc.get()._field_Elem.ptr()) != nullptr) && _211bbc736_IsU8(_211bb8567_Prim(_51117_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_224904a76:;
	};
	_211b8c393_pushErr(_49641_e.ptr(), _49656_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_49623_dest.get()._field_Kind.ptr())),jule::Any(_211bb6851_Str(_50113_src.get()._field_Kind.ptr()))}));
	_julec_label_end:;
	_49678_d.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("int", 3)), 6)});
	_49678_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101b833_BuiltinCopyCallExprModel>(_21101b833_BuiltinCopyCallExprModel{._field_Dest=_49623_dest, ._field_Src=_50113_src}));
	return _49678_d;
}



inline jule::Ptr<_211b8a319_Data> _211c42beb_builtinCallerCopy(jule::Ptr<_211b8bd87_Eval>& _52627_e, jule::Ptr<_210e5a893_FnCallExpr>& _52642_fc, jule::Ptr<_211b8a319_Data>& _52664_d) {
	if ((_52642_fc.get()._field_Args.len() < 2LL)) {
		if ((_52642_fc.get()._field_Args.len() == 1LL)) {
			_211b8c393_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_211b8c393_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_52642_fc.get()._field_Args.len() > 2LL)) {
		_211b8c393_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_211b8a319_Data> _53913_dest = _211ba7b50_evalExpr(_52627_e, _52642_fc.get()._field_Args[0LL]);;
	{
		
		if ((_53913_dest == nullptr)) {
			_case_begin_22490e1ce:;
			{
				return nullptr;
			}
		}
		else if ((_211bb94e1_Slc(_53913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_22490e245:;
			{
				return _211c64c84_callerCopySlice(_53913_dest,_52627_e,_52642_fc,_52664_d);
			}
		}
		else if (((_211bb8567_Prim(_53913_dest.get()._field_Kind.ptr()) != nullptr) && _211bbe161_IsStr(_211bb8567_Prim(_53913_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_22490e2ab:;
			{
				return _211c57e0e_callerCopyStr(_53913_dest,_52627_e,_52642_fc,_52664_d);
			}
		}
		else {
			_case_begin_22490e168:;
			{
				_211b8c393_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_22490e113:;
	};
}



inline jule::Ptr<_211b8a319_Data> _211be45c6_builtinCallerClone(jule::Ptr<_211b8bd87_Eval>& _55328_e, jule::Ptr<_210e5a893_FnCallExpr>& _55343_fc, jule::Ptr<_211b8a319_Data>& ) {
	if ((_55343_fc.get()._field_Args.len() < 1LL)) {
		_211b8c393_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_55343_fc.get()._field_Args.len() > 1LL)) {
		_211b8c393_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_211b8a319_Data> _56213_d = _211ba7534_evalExprKind(_55328_e, _55343_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_56213_d == nullptr)) {
		return nullptr;
	};
	if ((!(_211bb808e_SupportsCloning(_56213_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_211bb94e1_Slc(_56213_d.get()._field_Kind.ptr()) != nullptr) || (_211bb9e92_Map(_56213_d.get()._field_Kind.ptr()) != nullptr) || (_211bb927c_Arr(_56213_d.get()._field_Kind.ptr()) != nullptr) || (_211bb87cb_Sptr(_56213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_224915746:;
				{
					{
						_211b8c393_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_56213_d.get()._field_Kind.ptr()))}));
					};
				}
			}
			else if ((_211bb99b9_Struct(_56213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_2249150b4:;
				{
					{
						_211b8c393_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_56213_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_22491503c:;
				{
					{
						_211b8c393_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_211bb6851_Str(_56213_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_224914b74:;
		};
	};
	_56213_d.get()._field_Mutable=true;
	_56213_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101aba6_BuiltinCloneCallExprModel>(_21101aba6_BuiltinCloneCallExprModel{._field_Expr=_56213_d.get()._field_Model}));
	return _56213_d;
}



inline jule::Ptr<_211b8a319_Data> _211bdb722_builtinCallerAssert(jule::Ptr<_211b8bd87_Eval>& _59529_e, jule::Ptr<_210e5a893_FnCallExpr>& _59544_fc, jule::Ptr<_211b8a319_Data>& ) {
	if ((_59544_fc.get()._field_Args.len() < 1LL)) {
		_211b8c393_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_59544_fc.get()._field_Args.len() > 2LL)) {
		_211b8c393_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_211b8a319_Data> _60413_expr = _211ba7b50_evalExpr(_59529_e, _59544_fc.get()._field_Args[0LL]);;
	if ((_60413_expr == nullptr)) {
		return nullptr;
	};
	if (((_211bb8567_Prim(_60413_expr.get()._field_Kind.ptr()) == nullptr) || (!(_211bbddec_IsBool(_211bb8567_Prim(_60413_expr.get()._field_Kind.ptr()).ptr()))))) {
		_211b8c393_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_21101b26c_BuiltinAssertCallExprModel> _61313_model = jule::new_ptr<_21101b26c_BuiltinAssertCallExprModel>(_21101b26c_BuiltinAssertCallExprModel{._field_Token=_59544_fc.get()._field_Token, ._field_Expr=_60413_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if ((_59544_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_211b8a319_Data> _62117_log = _211ba7b50_evalExpr(_59529_e, _59544_fc.get()._field_Args[1LL]);;
		if ((_62117_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_211b8abcc_IsConst(_62117_log.ptr()))) || (_211bb8567_Prim(_62117_log.get()._field_Kind.ptr()) == nullptr)) || (!(_211bbe161_IsStr(_211bb8567_Prim(_62117_log.get()._field_Kind.ptr()).ptr()))))) {
			_211b8c393_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_211bb6851_Str(_62117_log.get()._field_Kind.ptr()))}));
			return nullptr;
		};
		_61313_model.get()._field_Log=_211010dee_ReadStr(_62117_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_211b8a319_Data> _63413_d = _211bb2cd1_buildVoidData();;
	_63413_d.get()._field_Model=static_cast<jule::Any>(_61313_model);
	return _63413_d;
}



inline jule::Ptr<_211b8a319_Data> _211c06e46_builtinCallerStdMemSizeOf(jule::Ptr<_211b8bd87_Eval>& _63935_e, jule::Ptr<_210e5a893_FnCallExpr>& _63950_fc, jule::Ptr<_211b8a319_Data>& ) {
	jule::Ptr<_211b8a319_Data> _64013_result = jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_63950_fc.get()._field_Args.len() < 1LL)) {
		_211b8c393_pushErr(_63935_e.ptr(), _63950_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _64013_result;
	};
	if ((_63950_fc.get()._field_Args.len() > 1LL)) {
		_211b8c393_pushErr(_63935_e.ptr(), _63950_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_211b8a319_Data> _65213_d = _211ba7534_evalExprKind(_63935_e, _63950_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_65213_d == nullptr)) {
		return _64013_result;
	};
	_64013_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101991e_SizeofExprModel>(_21101991e_SizeofExprModel{._field_Expr=_65213_d.get()._field_Model}));
	return _64013_result;
}



inline jule::Ptr<_211b8a319_Data> _211c7778b_builtinCallerStdMemAlignOf(jule::Ptr<_211b8bd87_Eval>& _66136_e, jule::Ptr<_210e5a893_FnCallExpr>& _66151_fc, jule::Ptr<_211b8a319_Data>& ) {
	jule::Ptr<_211b8a319_Data> _66213_result = jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_66151_fc.get()._field_Args.len() < 1LL)) {
		_211b8c393_pushErr(_66136_e.ptr(), _66151_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _66213_result;
	};
	if ((_66151_fc.get()._field_Args.len() > 1LL)) {
		_211b8c393_pushErr(_66136_e.ptr(), _66151_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_211b8a319_Data> _67413_d = _211ba7534_evalExprKind(_66136_e, _66151_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_67413_d == nullptr)) {
		return _66213_result;
	};
	_66213_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101c180_AlignofExprModel>(_21101c180_AlignofExprModel{._field_Expr=_67413_d.get()._field_Model}));
	return _66213_result;
}



inline jule::Ptr<_211b8a319_Data> _211c77b21_builtinCallerStdMemFree(jule::Ptr<_211b8bd87_Eval>& _68333_e, jule::Ptr<_210e5a893_FnCallExpr>& _68348_fc, jule::Ptr<_211b8a319_Data>& ) {
	if ((_68348_fc.get()._field_Args.len() < 1LL)) {
		_211b8c393_pushErr(_68333_e.ptr(), _68348_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_68348_fc.get()._field_Args.len() > 1LL)) {
		_211b8c393_pushErr(_68333_e.ptr(), _68348_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_211b8a319_Data> _69213_d = _211ba7534_evalExprKind(_68333_e, _68348_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_69213_d == nullptr)) {
		return nullptr;
	};
	if ((!(_211bb7d2a_PerformsRC(_69213_d.get()._field_Kind.ptr())))) {
		_211b8c393_pushErr(_68333_e.ptr(), _68348_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_211b8a319_Data> _70113_result = _211bb2cd1_buildVoidData();;
	_70113_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101c933_FreeExprModel>(_21101c933_FreeExprModel{._field_Expr=_69213_d.get()._field_Model}));
	return _70113_result;
}



inline jule::Ptr<_211b8a319_Data> _211c78050_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_211b8bd87_Eval>& _70645_e, jule::Ptr<_210e5a893_FnCallExpr>& _70660_fc, jule::Ptr<_211b8a319_Data>& ) {
	if ((_70660_fc.get()._field_Args.len() < 1LL)) {
		_211b8c393_pushErr(_70645_e.ptr(), _70660_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_70660_fc.get()._field_Args.len() > 1LL)) {
		_211b8c393_pushErr(_70645_e.ptr(), _70660_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_211b8a319_Data> _71513_d = _211ba7534_evalExprKind(_70645_e, _70660_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_71513_d == nullptr)) {
		return nullptr;
	};
	if ((!(_211bcdcca_isBuiltinStrConvertable(_71513_d.get()._field_Kind)))) {
		_211b8c393_pushErr(_70645_e.ptr(), _70660_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_211b8a319_Data>(_211b8a319_Data{._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(_211bce407_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_21101c559_IntegratedToStrExprModel>(_21101c559_IntegratedToStrExprModel{._field_Expr=_71513_d.get()._field_Model})), });
}



inline jule::Ptr<_211b8a319_Data> _211c7846d_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_211b8bd87_Eval>& _73344_e, jule::Ptr<_210e5a893_FnCallExpr>& _73359_fc, jule::Ptr<_211b8a319_Data>& _73381_d) {
	if ((!(_211b8cccd_isUnsafe(_73344_e.ptr())))) {
		_211b8c393_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_73359_fc.get()._field_Args.len() < 1LL)) {
		_211b8c393_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_211b8a319_Data> _74313_argd = _211ba7b50_evalExpr(_73344_e, _73359_fc.get()._field_Args[0LL]);;
	if ((_74313_argd == nullptr)) {
		return nullptr;
	};
	if (((_211bb8567_Prim(_74313_argd.get()._field_Kind.ptr()) == nullptr) || (!(_211bbe161_IsStr(_211bb8567_Prim(_74313_argd.get()._field_Kind.ptr()).ptr()))))) {
		_211b8c393_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_211bb6851_Str(_74313_argd.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	if (((!(_211b8abcc_IsConst(_74313_argd.ptr()))) || (!(_211013297_IsStr(_74313_argd.get()._field_Constant.ptr()))))) {
		_211b8c393_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_211b8a319_Data> _75813_r = _211bb2cd1_buildVoidData();;
	jule::Ptr<_211022c35_FnIns> _76013_f = _211bb9755_Fn(_73381_d.get()._field_Kind.ptr());;
	if ((_76013_f.get()._field_Generics.len() > 0LL)) {
		_75813_r.get()._field_Kind=_76013_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_21101c746_BackendEmitExprModel> _76513_model = jule::new_ptr<_21101c746_BackendEmitExprModel>(_21101c746_BackendEmitExprModel{._field_Code=_211010dee_ReadStr(_74313_argd.get()._field_Constant.ptr()), });;
	if ((_73359_fc.get()._field_Args.len() > 1LL)) {
		_76513_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL,(_73359_fc.get()._field_Args.len() - 1LL));
		{
			auto expr = _73359_fc.get()._field_Args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_2249401dd:;
			if (it != expr.end()) {
				jule::Ptr<_210e565c5_Expr> _77121_arg = *it;
				{
					_74313_argd=_211ba7534_evalExprKind(_73344_e, _77121_arg.get()._field_Kind);
					if ((_74313_argd == nullptr)) {
						return nullptr;
					};
					_76513_model.get()._field_Exprs = jule::alloc_for_append(_76513_model.get()._field_Exprs,1);_76513_model.get()._field_Exprs.__push(_74313_argd.get()._field_Model);;
				}
				_iter_next_2249401dd:;
				++it;
				goto _iter_begin_2249401dd;
			}
			_iter_end_2249401dd:;
		};
	};
	_75813_r.get()._field_Model=static_cast<jule::Any>(_76513_model);
	return _75813_r;
}



inline jule::Ptr<_211b8a319_Data> _211c788ad_builtinCallerStdDebugOut(jule::Ptr<_211b8bd87_Eval>& _78434_e, jule::Ptr<_210e5a893_FnCallExpr>& _78449_fc, jule::Ptr<_211b8a319_Data>& _78471_d) {
	_78471_d=_211c43e3e_builtinCallerOut(_78434_e,_78449_fc,_78471_d);
	if ((_78471_d == nullptr)) {
		return nullptr;
	};
	_78471_d.get()._field_Model.operator jule::Ptr<_21101a7cc_BuiltinOutCallExprModel>().get()._field_Debug=true;
	return _78471_d;
}



inline jule::Ptr<_211b8a319_Data> _211c78c98_builtinCallerStdDebugOutln(jule::Ptr<_211b8bd87_Eval>& _79336_e, jule::Ptr<_210e5a893_FnCallExpr>& _79351_fc, jule::Ptr<_211b8a319_Data>& _79373_d) {
	_79373_d=_211c655d1_builtinCallerOutln(_79336_e,_79351_fc,_79373_d);
	if ((_79373_d == nullptr)) {
		return nullptr;
	};
	_79373_d.get()._field_Model.operator jule::Ptr<_21101a9b9_BuiltinOutlnCallExprModel>().get()._field_Debug=true;
	return _79373_d;
}



inline jule::Bool _211ca65de_FindModuleFile(jule::Slice<jule::Ptr<_20c697db4_DirEntry>>& _1220_dirents) {
	{
		auto &expr = _1220_dirents;
		auto it = expr.begin();
		_iter_begin_224945c71:;
		if (it != expr.end()) {
			jule::Ptr<_20c697db4_DirEntry> &_1312_d = *it;
			{
				if (((!(_20c6d15e5_IsDir(_1312_d.get()._field_Stat.ptr()))) && (_1312_d.get()._field_Name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_224945c71:;
			++it;
			goto _iter_begin_224945c71;
		}
		_iter_end_224945c71:;
	};
	return false;
}



inline jule::Str _211ca6721_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_20c697db4_DirEntry>> _2617_dirents = ({
				auto except = static__20d422665_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_224946029;
				} jule::Slice<jule::Ptr<_20c697db4_DirEntry>>();});
			});;
			jule::Bool _3013_exist = _211ca65de_FindModuleFile(_2617_dirents);;
			if (_3013_exist) {
				return _2427_path;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_20d49e7d0_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_224946029;
			};
		}
	_iter_next_224946029:;
	}
	_iter_end_224946029:;;
	return jule::Str();
}



inline jule::Slice<_20e4ba377_Log> _211ca69a7_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__20c6a5be6_Read(_20d4b1cdc_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_20e4ba377_Log>::make({_20e4ba377_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});
		} jule::Slice<jule::U8>();});
	});;
	jule::Str _539_s = _20e44be0d_Trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_20e4ba377_Log>::make({_20e4ba377_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});
	};
	return nullptr;
}



inline jule::Ptr<_2123c73a2_FileInfo> _2123ce057_ParseFile(jule::Ptr<_20e7e4096_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_2123c73a2_FileInfo> _2713_finf = jule::new_ptr<_2123c73a2_FileInfo>();;
	std::tie(_2713_finf.get()._field_Ast,_2713_finf.get()._field_Errors) = _21242a3d3_parseFileset(_2318_f);
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;
}



inline std::tuple<jule::Ptr<_210e1c811_Ast>,jule::Slice<_20e4ba377_Log>> _21242a3d3_parseFileset(jule::Ptr<_20e7e4096_File> _5521_f) {
	jule::Ptr<_212448d80_parser> _5613_p = jule::new_ptr<_212448d80_parser>();;
	_212458752_parse(_5613_p, _5521_f);
	return std::make_tuple(_5613_p.get()._field_ast,_5613_p.get()._field_errors);
}



inline jule::Ptr<_210e623c2_ScopeTree> _21242acda_newScope(void) {
	return jule::new_ptr<_210e623c2_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _21242b0e8_isSt(jule::Ptr<_20e7ddc0b_Token> _509_current, jule::Ptr<_20e7ddc0b_Token> _5026_prev) {
	jule::Bool _5042_ok = jule::Bool();
	jule::Bool _5052_terminated = jule::Bool();
	_5042_ok=((_509_current.get()._field_Id == static_cast<jule::U64>(5LLU)) || (_5026_prev.get()._field_Row < _509_current.get()._field_Row));
	_5052_terminated=(_509_current.get()._field_Id == static_cast<jule::U64>(5LLU));
	return std::make_tuple(_5042_ok,_5052_terminated);
}



inline jule::Bool _21242b439_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _5626_tokens, jule::I64& _5645_i) {
	if (((_5645_i > 1LL) && (_5626_tokens[(_5645_i - 2LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return false;
	};
	{
		jule::Ptr<_20e7ddc0b_Token> _6213_prev = _5626_tokens[(_5645_i - 1LL)];;
		return ((_6213_prev.get()._field_Id == static_cast<jule::U64>(20LLU)) || (((_6213_prev.get()._field_Id == static_cast<jule::U64>(7LLU)) && _20e7de701_IsBinOp(_6213_prev.get()._field_Kind)) && (_6213_prev.get()._field_Row < _5626_tokens[_5645_i].get()._field_Row)));
	};
}



inline std::tuple<jule::I64,jule::Bool> _21242b7be_nextStPos(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _7115_tokens, jule::I64 _7133_start) {
	jule::I64 _7213_braceN = 0LL;;
	jule::I64 _7313_i = _7133_start;;
	for (; (_7313_i < _7115_tokens.len()); (_7313_i)++) {
		{
			jule::Bool _7517_ok = false;;
			jule::Bool _7617_terminated = false;;
			jule::Ptr<_20e7ddc0b_Token> _7713_tok = _7115_tokens[_7313_i];;
			{
				auto &_match_expr{ _7713_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_2249cc753:;
					{
						{
							auto &_match_expr{ _7713_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_2249ce3ae:;
								{
									if (((_7213_braceN == 0LL) && (_7313_i > _7133_start))) {
										if ((!(_21242b439_prevIsIncompleteExpr(_7115_tokens,_7313_i)))) {
											std::tie(_7517_ok,_7617_terminated) = _21242b0e8_isSt(_7713_tok,_7115_tokens[(_7313_i - 1LL)]);
											if (_7517_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7213_braceN)++;
								}
							}
							else {
								_case_begin_2249cd028:;
								{
									(_7213_braceN)--;
									if (((_7213_braceN == 0LL) && ((_7313_i + 1LL) < _7115_tokens.len()))) {
										std::tie(_7517_ok,_7617_terminated) = _21242b0e8_isSt(_7115_tokens[(_7313_i + 1LL)],_7713_tok);
										if (_7517_ok) {
											(_7313_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_2249ccd5d:;
						};
						goto _iter_next_2249cad28;
					}
				}
				_match_end_2249cc698:;
			};
			if ((_7213_braceN != 0LL)) {
				goto _iter_next_2249cad28;
			};
			if ((_7313_i > _7133_start)) {
				if (_21242b439_prevIsIncompleteExpr(_7115_tokens,_7313_i)) {
					goto _iter_next_2249cad28;
				};
				std::tie(_7517_ok,_7617_terminated) = _21242b0e8_isSt(_7713_tok,_7115_tokens[(_7313_i - 1LL)]);
			} else {
				std::tie(_7517_ok,_7617_terminated) = _21242b0e8_isSt(_7713_tok,_7713_tok);
			};
			if ((!(_7517_ok))) {
				goto _iter_next_2249cad28;
			};
			_julec_label_return:;
			if (_7617_terminated) {
				(_7313_i)++;
			};
			return std::make_tuple(_7313_i,_7617_terminated);
		}
	_iter_next_2249cad28:;
	}
	_iter_end_2249cad28:;;
	return std::make_tuple(_7313_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>,jule::Bool> _21242bb10_skipSt(jule::I64& _13316_i, jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _13328_tokens) {
	jule::I64 _1349_start = _13316_i;;
	jule::Bool _13513_terminated = false;;
	std::tie(_13316_i,_13513_terminated) = _21242b7be_nextStPos(_13328_tokens,_1349_start);
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _13713_stTokens = _13328_tokens.slice(_1349_start,_13316_i);;
	if (_13513_terminated) {
		if ((_13713_stTokens.len() == 1LL)) {
			std::tie(_13713_stTokens,_13513_terminated) = _21242bb10_skipSt(_13316_i,_13328_tokens);
			return std::make_tuple(_13713_stTokens,_13513_terminated);
		};
		_13713_stTokens=_13713_stTokens.slice(0LL,(_13713_stTokens.len() - 1LL));
	};
	return std::make_tuple(_13713_stTokens,_13513_terminated);
}



inline jule::Slice<jule::Ptr<_21242be0c_stmt>> _21242c2a3_splitStmts(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _15520_tokens) {
	jule::Slice<jule::Ptr<_21242be0c_stmt>> _15613_stmts = jule::Slice<jule::Ptr<_21242be0c_stmt>>::alloc(0LL,20LL);;
	jule::I64 _15713_pos = 0LL;;
	while ((_15713_pos < _15520_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _15918_stmt;;
			jule::Bool _15924_terminated;;
			std::tie(_15918_stmt,_15924_terminated) = _21242bb10_skipSt(_15713_pos,_15520_tokens);
			_15613_stmts = jule::alloc_for_append(_15613_stmts,1);_15613_stmts.__push(jule::new_ptr<_21242be0c_stmt>(_21242be0c_stmt{._field_tokens=_15918_stmt, ._field_terminated=_15924_terminated}));;
		}
	_iter_next_2249d6e55:;
	}
	_iter_end_2249d6e55:;;
	return _15613_stmts;
}



inline jule::Bool _212443990_isTypeOp(jule::Str& _89314_kind) {
	return (((_89314_kind == jule::Str("&", 1)) || (_89314_kind == jule::Str("&&", 2))) || (_89314_kind == jule::Str("*", 1)));
}



inline jule::Bool _212443c7b_isTypeRange(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _90021_tokens) {
	jule::Bool _90113_op = false;;
	{
		auto &expr = _90021_tokens;
		auto it = expr.begin();
		_iter_begin_2243c9095:;
		if (it != expr.end()) {
			jule::I64 _9029_i = it - expr.begin();
			jule::Ptr<_20e7ddc0b_Token> _90212_token = *it;
			{
				if ((_90212_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					if ((_90212_token.get()._field_Kind == jule::Str("[", 1))) {
						if (_90113_op) {
							return true;
						};
						jule::I64 _90825_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _90925_lTokens = _90021_tokens.slice(_9029_i);;
						{
							auto &expr = _90925_lTokens;
							auto it = expr.begin();
							_iter_begin_2243ca4c5:;
							if (it != expr.end()) {
								jule::Ptr<_20e7ddc0b_Token> _91024_lToken = *it;
								{
									{
										auto &_match_expr{ _91024_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U64>(3LLU)) {
											_case_begin_2243cbc8a:;
											{
												{
													auto &_match_expr{ _91024_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_2243cc61a:;
														{
															(_90825_rangeN)++;
															goto _iter_next_2243ca4c5;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_2243cc692:;
														{
															(_90825_rangeN)--;
															goto _iter_next_2243ca4c5;
														}
													}
													_match_end_2243cc42d:;
												};
											}
										}
										_match_end_2243cba59:;
									};
									if ((_90825_rangeN == 0LL)) {
										return _212443990_isTypeOp(_91024_lToken.get()._field_Kind);
									};
								}
								_iter_next_2243ca4c5:;
								++it;
								goto _iter_begin_2243ca4c5;
							}
							_iter_end_2243ca4c5:;
						};
						return true;
					};
				};
				if ((!(_212443990_isTypeOp(_90212_token.get()._field_Kind)))) {
					return false;
				};
				_90113_op=true;
			}
			_iter_next_2243c9095:;
			++it;
			_9029_i++;
			goto _iter_begin_2243c9095;
		}
		_iter_end_2243c9095:;
	};
	return true;
}



inline jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _212444023_getBlockExpr(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _93822_tokens) {
	jule::I64 _93913_braceN = 0LL;;
	jule::I64 _94013_skipToNextBraceClose = 0LL;;
	{
		auto &expr = _93822_tokens;
		auto it = expr.begin();
		_iter_begin_2243ce089:;
		if (it != expr.end()) {
			jule::I64 _9419_i = it - expr.begin();
			jule::Ptr<_20e7ddc0b_Token> _94112_tok = *it;
			{
				{
					auto &_match_expr{ _94112_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_2243cee36:;
						{
							(_94013_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_2243ceead:;
						{
							{
								auto &_match_expr{ _94112_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_2243d0c17:;
									{
										if (((_93913_braceN > 0LL) || (_94013_skipToNextBraceClose > 0LL))) {
											if ((_94013_skipToNextBraceClose > 0LL)) {
												(_94013_skipToNextBraceClose)--;
											};
											(_93913_braceN)++;
											goto _match_end_2243d0d5a;
										};
										return _93822_tokens.slice(0LL,_9419_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_2243d13ee:;
									{
										(_93913_braceN)++;
									}
								}
								else {
									_case_begin_2243d0e59:;
									{
										(_93913_braceN)--;
									}
								}
								_match_end_2243d0d5a:;
							};
						}
					}
					_match_end_2243cec49:;
				};
			}
			_iter_next_2243ce089:;
			++it;
			_9419_i++;
			goto _iter_begin_2243ce089;
		}
		_iter_end_2243ce089:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>,jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _2124443a8_splitDelim(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _96920_tokens, jule::U64 _96938_delim) {
	jule::I64 _97013_rangeN = 0LL;;
	{
		auto &expr = _96920_tokens;
		auto it = expr.begin();
		_iter_begin_2243d2b3c:;
		if (it != expr.end()) {
			jule::I64 _9719_i = it - expr.begin();
			jule::Ptr<_20e7ddc0b_Token> _97112_token = *it;
			{
				{
					auto &_match_expr{ _97112_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_2243d3731:;
						{
							{
								auto &_match_expr{ _97112_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_2243d3d80:;
									{
										(_97013_rangeN)++;
										goto _iter_next_2243d2b3c;
									}
								}
								else {
									_case_begin_2243d4116:;
									{
										(_97013_rangeN)--;
									}
								}
								_match_end_2243d3e4b:;
							};
						}
					}
					else if (_match_expr == _96938_delim) {
						_case_begin_2243d37a8:;
						{
							if ((_97013_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _98525_l = _96920_tokens.slice(0LL,_9719_i);;
								jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _98625_r = _96920_tokens.slice((_9719_i + 1LL));;
								return std::make_tuple(_98525_l,_98625_r);
							};
						}
					}
					_match_end_2243d34de:;
				};
			}
			_iter_next_2243d2b3c:;
			++it;
			_9719_i++;
			goto _iter_begin_2243d2b3c;
		}
		_iter_end_2243d2b3c:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _212444650_findLowestPrecOp(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _99622_tokens) {
	jule::U8 _100113_prec = 255LLU;;
	jule::I64 _100213_precPos = -1LL;;
	jule::I64 _100413_braceN = 0LL;;
	jule::Bool _100513_skipToNextBraceOpen = false;;
	{
		auto &expr = _99622_tokens;
		auto it = expr.begin();
		_iter_begin_2243d702b:;
		if (it != expr.end()) {
			jule::I64 _10069_i = it - expr.begin();
			jule::Ptr<_20e7ddc0b_Token> &_100612_token = *it;
			{
				{
					
					if ((_100612_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
						_case_begin_2243d7d40:;
						{
							{
								auto &_match_expr{ _100612_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_2243d8989:;
									{
										_100513_skipToNextBraceOpen=false;
										goto _case_begin_2243d91d7;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_2243d91d7:;
									{
										(_100413_braceN)++;
									}
								}
								else {
									_case_begin_2243d8c20:;
									{
										(_100413_braceN)--;
									}
								}
								_match_end_2243d8a55:;
							};
							goto _iter_next_2243d702b;
						}
					}
					else if (_100513_skipToNextBraceOpen) {
						_case_begin_2243d7db7:;
						{
							goto _iter_next_2243d702b;
						}
					}
					else if ((_100612_token.get()._field_Id == static_cast<jule::U64>(16LLU))) {
						_case_begin_2243d7e3e:;
						{
							_100513_skipToNextBraceOpen=true;
							goto _iter_next_2243d702b;
						}
					}
					else if ((_10069_i == 0LL)) {
						_case_begin_2243d7eb6:;
						{
							goto _iter_next_2243d702b;
						}
					}
					else if ((_100612_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_2243d803d:;
						{
							goto _iter_next_2243d702b;
						}
					}
					else if ((_100413_braceN > 0LL)) {
						_case_begin_2243d80b5:;
						{
							goto _iter_next_2243d702b;
						}
					}
					_match_end_2243d7bca:;
				};
				jule::Ptr<_20e7ddc0b_Token> _103313_left = _99622_tokens[(_10069_i - 1LL)];;
				if (((_103313_left.get()._field_Id == static_cast<jule::U64>(7LLU)) || (_103313_left.get()._field_Id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_2243d702b;
				};
				if ((((_10069_i > 1LL) && (_103313_left.get()._field_Id == static_cast<jule::U64>(3LLU))) && (_103313_left.get()._field_Kind == jule::Str("]", 1)))) {
					jule::Ptr<_20e7ddc0b_Token> _104117_lleft = _99622_tokens[(_10069_i - 2LL)];;
					if (((_104117_lleft.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_104117_lleft.get()._field_Kind == jule::Str("[", 1)))) {
						if (((_100612_token.get()._field_Kind == jule::Str("&", 1)) || (_100612_token.get()._field_Kind == jule::Str("*", 1)))) {
							goto _iter_next_2243d702b;
						};
					};
				};
				jule::U8 _105013_p = _20e7de0b3_Prec(_100612_token.ptr());;
				if (((_105013_p != 0LLU) && (_105013_p <= _100113_prec))) {
					_100113_prec=_105013_p;
					_100213_precPos=_10069_i;
				};
			}
			_iter_next_2243d702b:;
			++it;
			_10069_i++;
			goto _iter_begin_2243d702b;
		}
		_iter_end_2243d702b:;
	};
	return _100213_precPos;
}



inline jule::Ptr<_210e5863d_IdentExpr> _2124448e7_buildIdentExpr(jule::Ptr<_20e7ddc0b_Token>& _105924_token) {
	return jule::new_ptr<_210e5863d_IdentExpr>(_210e5863d_IdentExpr{._field_Token=_105924_token, ._field_Ident=_105924_token.get()._field_Kind, ._field_CppLinked=false});
}



inline std::tuple<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>,jule::I64> _212444b8e_getRangeExprTokens(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _106728_tokens) {
	jule::I64 _106813_rangeN = 0LL;;
	jule::I64 _106913_i = (_106728_tokens.len() - 1LL);;
	for (; (_106913_i >= 0LL); (_106913_i)--) {
		{
			jule::Ptr<_20e7ddc0b_Token> _107113_tok = _106728_tokens[_106913_i];;
			if ((_107113_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _107113_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_2243e1aa2:;
						{
							(_106813_rangeN)++;
						}
					}
					else {
						_case_begin_2243e2465:;
						{
							(_106813_rangeN)--;
						}
					}
					_match_end_2243e2256:;
				};
			};
			if ((_106813_rangeN == 0LL)) {
				return std::make_tuple(_106728_tokens.slice(0LL,_106913_i),_106813_rangeN);
			};
		}
	_iter_next_2243e13a9:;
	}
	_iter_end_2243e13a9:;;
	return std::make_tuple(nullptr,_106813_rangeN);
}



inline jule::Bool _2124458e8_checkAssignTokens(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _1623_tokens) {
	if (((_1623_tokens.len() == 0LL) || (!(_20e7e32a4_IsAssign(_1623_tokens[0LL].get()._field_Id))))) {
		return false;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto &expr = _1623_tokens;
		auto it = expr.begin();
		_iter_begin_2244880ee:;
		if (it != expr.end()) {
			jule::Ptr<_20e7ddc0b_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_224488c26:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_224489001:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_224488ce2:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_2244880ee;
				} else if (((_2112_t.get()._field_Id == static_cast<jule::U64>(7LLU)) && _20e7e37e3_IsAssignOp(_2112_t.get()._field_Kind))) {
					return true;
				};
			}
			_iter_next_2244880ee:;
			++it;
			goto _iter_begin_2244880ee;
		}
		_iter_end_2244880ee:;
	};
	return false;
}



inline _20e4ba377_Log _212446b19_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_20e7e4096_File>& _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _20e4ba377_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=_5233_f.get()._field_Path, ._field_Text=_20e4ba7b7_Logf(_5243_fmt,jule::Any(_5256_args)), };
}



inline jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _2124470e2_range(jule::I64& _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _7163_tokens) {
	if ((_7115_i >= _7163_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_20e7ddc0b_Token> _769_tok = _7163_tokens[_7115_i];;
	if (((_769_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_769_tok.get()._field_Kind != _7123_open))) {
		return nullptr;
	};
	(_7115_i)++;
	jule::I64 _8213_rangeN = 1LL;;
	jule::I64 _839_start = _7115_i;;
	for (; ((_8213_rangeN != 0LL) && (_7115_i < _7163_tokens.len())); (_7115_i)++) {
		{
			jule::Ptr<_20e7ddc0b_Token> _8513_token = _7163_tokens[_7115_i];;
			if ((_8513_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8513_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_2244900d4:;
						{
							(_8213_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_22449015b:;
						{
							(_8213_rangeN)--;
						}
					}
					_match_end_22448ed92:;
				};
			};
		}
	_iter_next_22448d8a7:;
	}
	_iter_end_22448d8a7:;;
	return _7163_tokens.slice(_839_start,(_7115_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>,jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _212447389_rangeLast(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _10619_tokens) {
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _10639_cutted = jule::Slice<jule::Ptr<_20e7ddc0b_Token>>();
	jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _10657_cut = jule::Slice<jule::Ptr<_20e7ddc0b_Token>>();
	if ((_10619_tokens.len() == 0LL)) {
		_10639_cutted = _10619_tokens;
		_10657_cut = nullptr;
		return std::make_tuple(_10639_cutted,_10657_cut);
	} else if ((_10619_tokens[(_10619_tokens.len() - 1LL)].get()._field_Id != static_cast<jule::U64>(3LLU))) {
		_10639_cutted = _10619_tokens;
		_10657_cut = nullptr;
		return std::make_tuple(_10639_cutted,_10657_cut);
	};
	jule::I64 _11313_braceN = 0LL;;
	jule::I64 _11413_i = (_10619_tokens.len() - 1LL);;
	for (; (_11413_i >= 0LL); (_11413_i)--) {
		{
			jule::Ptr<_20e7ddc0b_Token> _11613_token = _10619_tokens[_11413_i];;
			if ((_11613_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11613_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_224b81cc0:;
						{
							(_11313_braceN)++;
							goto _iter_next_224b7e691;
						}
					}
					else {
						_case_begin_224b826c7:;
						{
							(_11313_braceN)--;
						}
					}
					_match_end_224b824b8:;
				};
			};
			if ((_11313_braceN == 0LL)) {
				_10639_cutted = _10619_tokens.slice(0LL,_11413_i);
				_10657_cut = _10619_tokens.slice(_11413_i);
				return std::make_tuple(_10639_cutted,_10657_cut);
			};
		}
	_iter_next_224b7e691:;
	}
	_iter_end_224b7e691:;;
	_10639_cutted = _10619_tokens;
	_10657_cut = nullptr;
	return std::make_tuple(_10639_cutted,_10657_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>>,jule::Slice<_20e4ba377_Log>> _212447774_partsKind(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _13819_tokens, jule::Str _13837_kind, jule::Bool _13854_expr_must) {
	if ((_13819_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _14313_parts = nullptr;;
	jule::Slice<_20e4ba377_Log> _14413_errors = nullptr;;
	jule::I64 _14613_rangeN = 0LL;;
	jule::I64 _14713_last = 0LL;;
	{
		auto &expr = _13819_tokens;
		auto it = expr.begin();
		_iter_begin_224b85dd4:;
		if (it != expr.end()) {
			jule::I64 _1489_i = it - expr.begin();
			jule::Ptr<_20e7ddc0b_Token> _14812_token = *it;
			{
				if ((_14812_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14812_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_224b86e29:;
							{
								(_14613_rangeN)++;
								goto _iter_next_224b85dd4;
							}
						}
						else {
							_case_begin_224b87204:;
							{
								(_14613_rangeN)--;
							}
						}
						_match_end_224b86ee5:;
					};
				};
				if ((_14613_rangeN > 0LL)) {
					goto _iter_next_224b85dd4;
				};
				if ((_14812_token.get()._field_Kind == _13837_kind)) {
					if ((_13854_expr_must && ((_1489_i - _14713_last) <= 0LL))) {
						_20e4ba377_Log _16721_err = _212446b19_makeErr(_14812_token.get()._field_Row,_14812_token.get()._field_Column,_14812_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_14413_errors = jule::alloc_for_append(_14413_errors,1);_14413_errors.__push(_16721_err);;
					};
					_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(_13819_tokens.slice(_14713_last,_1489_i));;
					_14713_last=static_cast<jule::I64>((_1489_i + 1LL));
				};
			}
			_iter_next_224b85dd4:;
			++it;
			_1489_i++;
			goto _iter_begin_224b85dd4;
		}
		_iter_end_224b85dd4:;
	};
	if ((_14713_last < _13819_tokens.len())) {
		_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(_13819_tokens.slice(_14713_last));;
	} else if ((!(_13854_expr_must))) {
		_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>());;
	};
	return std::make_tuple(_14313_parts,_14413_errors);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>>,jule::Slice<_20e4ba377_Log>> _212447b5e_parts(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _19015_tokens, jule::U64 _19033_id, jule::Bool _19046_expr_must) {
	if ((_19015_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_20e7ddc0b_Token>>> _19513_parts = nullptr;;
	jule::Slice<_20e4ba377_Log> _19613_errors = nullptr;;
	jule::I64 _19813_rangeN = 0LL;;
	jule::I64 _19913_last = 0LL;;
	{
		auto &expr = _19015_tokens;
		auto it = expr.begin();
		_iter_begin_224b8c968:;
		if (it != expr.end()) {
			jule::I64 _2009_i = it - expr.begin();
			jule::Ptr<_20e7ddc0b_Token> _20012_token = *it;
			{
				if ((_20012_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _20012_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_224b8d9ad:;
							{
								(_19813_rangeN)++;
								goto _iter_next_224b8c968;
							}
						}
						else {
							_case_begin_224b8dc88:;
							{
								(_19813_rangeN)--;
							}
						}
						_match_end_224b8da79:;
					};
				};
				if ((_19813_rangeN > 0LL)) {
					goto _iter_next_224b8c968;
				};
				if ((_20012_token.get()._field_Id == _19033_id)) {
					if ((_19046_expr_must && ((_2009_i - _19913_last) <= 0LL))) {
						_20e4ba377_Log _21921_err = _212446b19_makeErr(_20012_token.get()._field_Row,_20012_token.get()._field_Column,_20012_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_19613_errors = jule::alloc_for_append(_19613_errors,1);_19613_errors.__push(_21921_err);;
					};
					_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(_19015_tokens.slice(_19913_last,_2009_i));;
					_19913_last=static_cast<jule::I64>((_2009_i + 1LL));
				};
			}
			_iter_next_224b8c968:;
			++it;
			_2009_i++;
			goto _iter_begin_224b8c968;
		}
		_iter_end_224b8c968:;
	};
	if ((_19913_last < _19015_tokens.len())) {
		_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(_19015_tokens.slice(_19913_last));;
	} else if ((!(_19046_expr_must))) {
		_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>());;
	};
	return std::make_tuple(_19513_parts,_19613_errors);
}



inline jule::Str _212447e06_getCloseKindOfBrace(jule::Str _23624_left) {
	{
		auto &_match_expr{ _23624_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_224b8d392:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_224b8d408:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_224b8d46e:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_224b8d2d7:;
			{
				return jule::Str();
			}
		}
		_match_end_224b92088:;
	};
}



inline _20e4ba377_Log _2124482e1_compilerErr(jule::Ptr<_20e7ddc0b_Token>& _24917_token, jule::Str& _24933_fmt, jule::Slice<jule::Any> _24946_args) {
	return _20e4ba377_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_24917_token.get()._field_Row, ._field_Column=_24917_token.get()._field_Column, ._field_Path=_24917_token.get()._field_File.get()._field_Path, ._field_Text=_20e4ba7b7_Logf(_24933_fmt,jule::Any(_24946_args)), ._field_Line=_20e7e5273_GetRow(_24917_token.get()._field_File.ptr(), _24917_token.get()._field_Row), };
}



inline void _212448720_pushSuggestion(_20e4ba377_Log* _26030_log, jule::Str _26041_fmt, jule::Slice<jule::Any> _26054_args) {
	_26030_log->_field_Suggestion=_20e4ba7b7_Logf(_26041_fmt,jule::Any(_26054_args));
}



inline jule::Str _2124489b7_tokstoa(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _26413_tokens) {
	jule::I64 _26513_n = 0LL;;
	{
		auto &expr = _26413_tokens;
		auto it = expr.begin();
		_iter_begin_224b95850:;
		if (it != expr.end()) {
			jule::Ptr<_20e7ddc0b_Token> &_26612_token = *it;
			{
				_26513_n+=_26612_token.get()._field_Kind.len();
			}
			_iter_next_224b95850:;
			++it;
			goto _iter_begin_224b95850;
		}
		_iter_end_224b95850:;
	};
	jule::Str _26913_s = jule::Str::alloc(_26513_n);;
	{
		auto &expr = _26413_tokens;
		auto it = expr.begin();
		_iter_begin_224b96532:;
		if (it != expr.end()) {
			jule::Ptr<_20e7ddc0b_Token> &_27012_token = *it;
			{
				_26913_s+=_27012_token.get()._field_Kind;
			}
			_iter_next_224b96532:;
			++it;
			goto _iter_begin_224b96532;
		}
		_iter_end_224b96532:;
	};
	return _26913_s;
}



inline jule::Bool _212458a2c_isPub(jule::Str& _204111_ident) {
	jule::I32 _204210_r;;
	std::tie(_204210_r,std::ignore) = _20e431288_DecodeRuneStr(_204111_ident);
	return _20e36c647_IsUpper(_204210_r);
}



inline jule::Ptr<_210e520a4_TypeDecl> _21245939b_buildVoidType(void) {
	return jule::new_ptr<_210e520a4_TypeDecl>();
}



inline jule::Ptr<_210e520a4_TypeDecl> _212459610_buildPrimType(jule::Ptr<_20e7ddc0b_Token> _2322_t) {
	return jule::new_ptr<_210e520a4_TypeDecl>(_210e520a4_TypeDecl{._field_Token=_2322_t, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_210e5266a_IdentTypeDecl>(_210e5266a_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }))});
}



inline jule::I64 _212459951_mapColon(jule::Slice<jule::Ptr<_20e7ddc0b_Token>>& _3618_tokens, jule::I64& _3641_i) {
	jule::I64 _3651_delim = jule::I64();
	_3651_delim=-1LL;
	jule::I64 _3813_rangeN = 0LL;;
	for (; (_3641_i < _3618_tokens.len()); (_3641_i)++) {
		{
			jule::Ptr<_20e7ddc0b_Token> _4013_token = _3618_tokens[_3641_i];;
			if ((_4013_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4013_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_224d31c72:;
						{
							(_3813_rangeN)++;
							goto _iter_next_224d31568;
						}
					}
					else {
						_case_begin_224d32635:;
						{
							(_3813_rangeN)--;
						}
					}
					_match_end_224d32426:;
				};
			};
			if ((_3813_rangeN == 0LL)) {
				if (((_3618_tokens.len() - _3641_i) == 1LL)) {
					return _3651_delim;
				};
				if ((_3618_tokens[(_3641_i + 1LL)].get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_3651_delim = static_cast<jule::I64>((_3641_i + 1LL));
					return _3651_delim;
				};
				goto _iter_end_224d31568;
			};
		}
	_iter_next_224d31568:;
	}
	_iter_end_224d31568:;;
	return _3651_delim;
}



inline std::tuple<jule::Bool,jule::Bool> _211c7b152_checkOs(jule::Str _912_arg) {
	jule::Bool _924_ok = jule::Bool();
	jule::Bool _934_exist = jule::Bool();
	_924_ok=false;
	_934_exist=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_224d86aeb:;
			{
				_924_ok=_20e4bd6cc_IsWindows(_20e51912e_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_224d86700:;
			{
				_924_ok=_20e4bd985_IsDarwin(_20e51912e_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_224d864d0:;
			{
				_924_ok=_20e4bdc2c_IsLinux(_20e51912e_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_224d86546:;
			{
				_924_ok=_20e4be832_IsUnix(_20e51912e_Os);
			}
		}
		else {
			_case_begin_224d85ca4:;
			{
				_924_ok=true;
				_934_exist=false;
			}
		}
		_match_end_224d861b1:;
	};
	return std::make_tuple(_924_ok,_934_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _211c7b284_checkArch(jule::Str _2814_arg) {
	jule::Bool _2826_ok = jule::Bool();
	jule::Bool _2836_exist = jule::Bool();
	_2826_ok=false;
	_2836_exist=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_224d88c74:;
			{
				_2826_ok=_20e4be04b_IsI386(_20e508728_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_224d88a54:;
			{
				_2826_ok=_20e4be2e3_IsAmd64(_20e508728_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_224d88aba:;
			{
				_2826_ok=_20e4be58a_IsArm64(_20e508728_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_224d88b31:;
			{
				_2826_ok=_20e4bee4d_Is64Bit(_20e508728_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_224d88b97:;
			{
				_2826_ok=_20e4beba6_Is32Bit(_20e508728_Arch);
			}
		}
		else {
			_case_begin_224d88328:;
			{
				_2826_ok=true;
				_2836_exist=false;
			}
		}
		_match_end_224d88735:;
	};
	return std::make_tuple(_2826_ok,_2836_exist);
}



inline jule::Bool _211c7b3b6_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_20d499d6e_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL,(_529_n - _20d4be2a0_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _20e4477dd_FindLastByte(_5029_p,'_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok;;
		jule::Bool _6726_exist;;
		std::tie(_6718_ok,_6726_exist) = _211c7b152_checkOs(_5029_p);
		if (_6726_exist) {
			return _6718_ok;
		};
		std::tie(_6718_ok,_6726_exist) = _211c7b284_checkArch(_5029_p);
		return ((!(_6726_exist)) || _6718_ok);
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL,_6413_i);;
	_6413_i=static_cast<jule::I64>(_20e4477dd_FindLastByte(_5029_p,'_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok;;
		jule::Bool _8826_exist;;
		std::tie(_8818_ok,_8826_exist) = _211c7b152_checkOs(_5813_a1);
		if (_8826_exist) {
			return _8818_ok;
		};
		std::tie(_8818_ok,_8826_exist) = _211c7b284_checkArch(_5813_a1);
		return ((!(_8826_exist)) || _8818_ok);
	};
	jule::Bool _9614_ok;;
	jule::Bool _9622_exist;;
	std::tie(_9614_ok,_9622_exist) = _211c7b284_checkArch(_5813_a1);
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;
		};
		std::tie(_9614_ok,_9622_exist) = _211c7b152_checkOs(_6113_a2);
		return ((!(_9622_exist)) || _9614_ok);
	};
	std::tie(_9614_ok,_9622_exist) = _211c7b152_checkOs(_5813_a1);
	return ((!(_9622_exist)) || _9614_ok);
}



inline void _211c958b9_setOsVars(jule::Slice<jule::Str>& _3619_vars) {
	_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(_20e51912e_Os);;
	if (_20e4be832_IsUnix(_20e51912e_Os)) {
		_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _211c95b1c_setArchVars(jule::Slice<jule::Str>& _4421_vars) {
	_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(_20e508728_Arch);;
	if (_20e4bee4d_Is64Bit(_20e508728_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x64", 3));;
	};
	if (_20e4beba6_Is32Bit(_20e508728_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _211c95dc5_initVars(jule::Slice<jule::Str>& _5518_vars, _211c955ab_CompileInfo& _5532_info) {
	_211c958b9_setOsVars(_5518_vars);
	_211c95b1c_setArchVars(_5518_vars);
	if (_5532_info._field_Prod) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("production", 10));;
	};
	if (_5532_info._field_Test) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5532_info._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_224d94bc5:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_224d94dc3:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_224d94b70:;
	};
	{
		auto &_match_expr{ _5532_info._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_224d966bb:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_224d96732:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_224d96468:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_224d95555:;
	};
}



inline jule::Slice<jule::U8> _211d67c55_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__20c6a5be6_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_20e51e420_Exit(1LL);
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _20e4ba377_Log _211d84337_flatCompilerErr(jule::Str _4120_text) {
	return _20e4ba377_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };
}



inline void _212201253_pushPasses(jule::Ptr<_211b202d2_Package>& _11120_p, jule::Slice<jule::Str>& _11144_passes) {
	{
		auto &expr = _11120_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_224dc9369:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11217_f.get()._field_Passes;
					auto it = expr.begin();
					_iter_begin_224dc9d5e:;
					if (it != expr.end()) {
						_211026ec0_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_224dc9d5e;
							};
							{
								auto &expr = _11144_passes;
								auto it = expr.begin();
								_iter_begin_224dcad71:;
								if (it != expr.end()) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_224dc9d5e;
										};
									}
									_iter_next_224dcad71:;
									++it;
									goto _iter_begin_224dcad71;
								}
								_iter_end_224dcad71:;
							};
							_11144_passes = jule::alloc_for_append(_11144_passes,1);_11144_passes.__push(_11416_pass._field_Text);;
						}
						_iter_next_224dc9d5e:;
						++it;
						goto _iter_begin_224dc9d5e;
					}
					_iter_end_224dc9d5e:;
				};
			}
			_iter_next_224dc9369:;
			++it;
			goto _iter_begin_224dc9369;
		}
		_iter_end_224dc9369:;
	};
}



inline jule::Slice<jule::Str> _21220a47c_getAllUniquePasses(jule::Ptr<_211b202d2_Package>& _12828_pkg, jule::Slice<jule::Ptr<_211b1c378_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_212201253_pushPasses(_12828_pkg,_12913_passes);
	{
		auto &expr = _12853_uses;
		auto it = expr.begin();
		_iter_begin_224dcc14c:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_212201253_pushPasses(_13217_u.get()._field_Package,_12913_passes);
				};
			}
			_iter_next_224dcc14c:;
			++it;
			goto _iter_begin_224dcc14c;
		}
		_iter_end_224dcc14c:;
	};
	return _12913_passes;
}



inline _211c955ab_CompileInfo _212222bd1_buildCompileInfo(void) {
	_211c955ab_CompileInfo _14213_info = _211c955ab_CompileInfo{._field_Prod=_20c5533ce_Production, ._field_Test=_20c552895_Test, };;
	{
		auto &_match_expr{ _20c50ba3b_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_224dcd99a:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_224dcda11:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_224dcd923:;
	};
	{
		auto &_match_expr{ _20c5520d1_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_224dcc34a:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_224dcddc9:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_224dcde40:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_224dcdc97:;
	};
	return _14213_info;
}



inline void _21254da34_EliminateDefines(jule::Ptr<_2120ac0a9_IR>& _28526_ir) {
	jule::Ptr<_21251d64c_ObjectDeadCode> _28613_ocd = static__21251da9d_new(_28526_ir);;
	_21254d76a_elimanate(_28613_ocd);
}



inline jule::Ptr<_210e1d8ab_Directive> _21254ddb9_findDirective(jule::Slice<jule::Ptr<_210e1d8ab_Directive>>& _29123_directives, jule::Str _29154_tag) {
	{
		auto &expr = _29123_directives;
		auto it = expr.begin();
		_iter_begin_224e21a98:;
		if (it != expr.end()) {
			jule::Ptr<_210e1d8ab_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;
				};
			}
			_iter_next_224e21a98:;
			++it;
			goto _iter_begin_224e21a98;
		}
		_iter_end_224e21a98:;
	};
	return nullptr;
}



inline jule::Bool _21254e20a_hasDirective(jule::Slice<jule::Ptr<_210e1d8ab_Directive>>& _30118_directives, jule::Str _30149_tag) {
	return (_21254ddb9_findDirective(_30118_directives,_30149_tag) != nullptr);
}



inline void _212552d57_eliminateDeadCodeOfScope(jule::Ptr<_211b0940e_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_211b0a652_Label>> _2429_labels = jule::Slice<jule::Ptr<_211b0a652_Label>>::alloc(0LL,16LLU);;
	jule::Slice<jule::Ptr<_211b0a83e_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_211b0a83e_GotoSt>>::alloc(0LL,16LLU);;
	jule::Ptr<_21254ee53_scopeDeadCode> _24413_sdc = jule::new_ptr<_21254ee53_scopeDeadCode>(_21254ee53_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_211b0a652_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_211b0a83e_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_212552a6b_optimizeStmts(_24413_sdc);
	};
}



inline void _2125530dd_eliminateScopeFunctions(jule::Slice<jule::Ptr<_211020084_Fn>>& _25433_funcs) {
	{
		auto &expr = _25433_funcs;
		auto it = expr.begin();
		_iter_begin_224e6a74b:;
		if (it != expr.end()) {
			jule::Ptr<_211020084_Fn> _25517_func = *it;
			{
				{
					auto &expr = _25517_func.get()._field_Instances;
					auto it = expr.begin();
					_iter_begin_224e6ad78:;
					if (it != expr.end()) {
						jule::Ptr<_211022c35_FnIns> _25621_ins = *it;
						{
							_212552d57_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_224e6ad78:;
						++it;
						goto _iter_begin_224e6ad78;
					}
					_iter_end_224e6ad78:;
				};
			}
			_iter_next_224e6a74b:;
			++it;
			goto _iter_begin_224e6a74b;
		}
		_iter_end_224e6a74b:;
	};
}



inline void _212553330_eliminateFunctionsScopePackage(jule::Ptr<_211b202d2_Package>& _26240_pkg) {
	{
		auto &expr = _26240_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_224e6b32e:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _26317_f = *it;
			{
				_2125530dd_eliminateScopeFunctions(_26317_f.get()._field_Funcs);
			}
			_iter_next_224e6b32e:;
			++it;
			goto _iter_begin_224e6b32e;
		}
		_iter_end_224e6b32e:;
	};
}



inline void _2125535c7_eliminateScopePackage(jule::Ptr<_211b202d2_Package>& _26831_pkg) {
	_212553330_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _2125537d6_EliminateScopes(jule::Ptr<_2120ac0a9_IR>& _27325_ir) {
	jule::I64 _27413_i = (_27325_ir.get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_211b1c378_ImportInfo> _27617_u = _27325_ir.get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_2125535c7_eliminateScopePackage(_27617_u.get()._field_Package);
			};
		}
	_iter_next_224e6ce57:;
	}
	_iter_end_224e6ce57:;;
	_2125535c7_eliminateScopePackage(_27325_ir.get()._field_Main);
}



inline jule::Bool _20e94ee7c_isStdPackage(jule::Str _39917_f, jule::Str _39925_p) {
	return _20e4446b9_HasPrefix(_39917_f,_20d4b1cdc_Join(jule::Slice<jule::Str>::make({_20e508aad_PathStdlib,_39925_p})));
}



inline jule::Bool _20e9529da_isConstantValidConditionalCase(jule::Ptr<_211b095eb_If>& _40336_i) {
	{
		auto &_match_expr{ _40336_i.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_210ea46cd_Const>>()) {
			_case_begin_224ee02c6:;
			{
				jule::Ptr<_210ea46cd_Const> _40613_c = _40336_i.get()._field_Expr.operator jule::Ptr<_210ea46cd_Const>();;
				return (_211013033_IsBool(_40613_c.ptr()) && _211010b8a_ReadBool(_40613_c.ptr()));
			}
		}
		_match_end_224ee010b:;
	};
	return false;
}



inline jule::Bool _20e9540e6_isUnreachableExpr(jule::Any& _41223_expr) {
	{
		auto &_match_expr{ _41223_expr };
		
		if (_match_expr.type_is<jule::Ptr<_210ea46cd_Const>>()) {
			_case_begin_224ee0c11:;
			{
				jule::Ptr<_210ea46cd_Const> _41513_c = _41223_expr.operator jule::Ptr<_210ea46cd_Const>();;
				return (_211013033_IsBool(_41513_c.ptr()) && (!(_211010b8a_ReadBool(_41513_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211017c3b_BinopExprModel>>()) {
			_case_begin_224ee0c77:;
			{
				jule::Ptr<_211017c3b_BinopExprModel> _41813_m = _41223_expr.operator jule::Ptr<_211017c3b_BinopExprModel>();;
				if ((_41813_m.get()._field_Op.get()._field_Kind == jule::Str("&&", 2))) {
					return (_20e9540e6_isUnreachableExpr(_41813_m.get()._field_Left.get()._field_Model) || _20e9540e6_isUnreachableExpr(_41813_m.get()._field_Right.get()._field_Model));
				};
			}
		}
		_match_end_224ee0bab:;
	};
	return false;
}



inline jule::Bool _20e956b54_isConstantValidMatchCase(jule::Ptr<_211b0b642_Case>& _42730_case) {
	{
		auto &expr = _42730_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_224ee38e5:;
		if (it != expr.end()) {
			jule::Ptr<_211b8a319_Data> &_42812_expr = *it;
			{
				if (((_211b8abcc_IsConst(_42812_expr.ptr()) && _211013033_IsBool(_42812_expr.get()._field_Constant.ptr())) && _211010b8a_ReadBool(_42812_expr.get()._field_Constant.ptr()))) {
					return true;
				};
			}
			_iter_next_224ee38e5:;
			++it;
			goto _iter_begin_224ee38e5;
		}
		_iter_end_224ee38e5:;
	};
	return false;
}



inline jule::Bool _20e957da8_isUnreachableConditionalCase(jule::Ptr<_211b095eb_If>& _43634_i) {
	return _20e9540e6_isUnreachableExpr(_43634_i.get()._field_Expr);
}



inline jule::Bool _20e960b91_isUnreachableMatchCase(jule::Ptr<_211b0b642_Case>& _44028_case) {
	{
		auto &expr = _44028_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_224ee59a2:;
		if (it != expr.end()) {
			jule::Ptr<_211b8a319_Data> &_44112_expr = *it;
			{
				if ((!(_20e9540e6_isUnreachableExpr(_44112_expr.get()._field_Model)))) {
					return false;
				};
			}
			_iter_next_224ee59a2:;
			++it;
			goto _iter_begin_224ee59a2;
		}
		_iter_end_224ee59a2:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _20ed506bd_checkForBitShiftOpt(jule::Ptr<_211017a4e_OperandExprModel>& _42725_l, jule::Ptr<_211017a4e_OperandExprModel>& _42748_r) {
	jule::Bool _42772_ok = jule::Bool();
	jule::U64 _42782_x = jule::U64();
	if (((!(_211b08c5a_IsInt(_211bb6851_Str(_42725_l.get()._field_Kind.ptr())))) || (!(_211b08c5a_IsInt(_211bb6851_Str(_42748_r.get()._field_Kind.ptr())))))) {
		_42772_ok = false;
		_42782_x = 0LLU;
		return std::make_tuple(_42772_ok,_42782_x);
	};
	{
		auto &_match_expr{ _42748_r.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_210ea46cd_Const>>()) {
			_case_begin_22503047b:;
			{
				goto _match_end_225030e82;
			}
		}
		else {
			_case_begin_2250310d6:;
			{
				_42772_ok = false;
				_42782_x = 0LLU;
				return std::make_tuple(_42772_ok,_42782_x);
			}
		}
		_match_end_225030e82:;
	};
	_42782_x=static_cast<jule::U64>(_21101163b_AsU64(_42748_r.get()._field_Model.operator jule::Ptr<_210ea46cd_Const>().ptr()));
	if (((_42782_x == 0LLU) || ((_42782_x & 1LL) != 0LLU))) {
		_42772_ok = false;
		_42782_x = 0LLU;
		return std::make_tuple(_42772_ok,_42782_x);
	};
	jule::F64 _4419_j = _211ac372a_Log2(static_cast<jule::F64>(static_cast<jule::F64>(_42782_x)));;
	jule::U64 _4429_z = static_cast<jule::U64>(_4419_j);;
	if ((static_cast<jule::F64>(_4429_z) != _4419_j)) {
		_42772_ok = false;
		_42782_x = 0LLU;
		return std::make_tuple(_42772_ok,_42782_x);
	};
	_42772_ok = true;
	_42782_x = _4429_z;
	return std::make_tuple(_42772_ok,_42782_x);
}



inline void _20ed5343a_PushOptLevel(jule::I64 _3217_level) {
	_20e82655c_Copy=(_3217_level >= static_cast<jule::I64>(1LL));
	_20e82aa8e_Deadcode=(_3217_level >= static_cast<jule::I64>(1LL));
	_20e81523d_Append=(_3217_level >= static_cast<jule::I64>(1LL));
	_20e832689_Math=(_3217_level >= static_cast<jule::I64>(1LL));
	_20e84dd9d_Access=(_3217_level >= static_cast<jule::I64>(1LL));
	_20e85659d_Inline=(_3217_level >= static_cast<jule::I64>(1LL));
	_20e85956d_Ptr=(_3217_level >= static_cast<jule::I64>(1LL));
	_20e85998b_Cond=(_3217_level >= static_cast<jule::I64>(1LL));
}



inline void _2124e3886_detectEnabled(void) {
	_21246054a_exprEnabled=(((_20e85956d_Ptr || _20e832689_Math) || _20e84dd9d_Access) || _20e85998b_Cond);
	_2124616a0_scopeEnabled=((_20e85998b_Cond || _20e81523d_Append) || _20e82655c_Copy);
}



inline void _21256079e_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_20e51e420_Exit(1LL);
}



inline jule::U64 _212b3e9d7_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _212b3ed28_unixYearToSeconds(jule::U64 _26222_y, jule::Bool& _26240_leap) {
	if (((_26222_y - 2LLU) <= 136LLU)) {
		jule::U64 _26417_leaps = ((_26222_y - 68LLU) >> 2LLU);;
		_26240_leap=(((_26222_y - 68LLU) & 3LLU) == 0LLU);
		if (_26240_leap) {
			(_26417_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_26222_y - 70LLU)) + (86400LLU * _26417_leaps)));
	};
	jule::U64 _27213_leaps = 0LLU;;
	jule::U64 _27313_centuries = 0LLU;;
	jule::U64 _27413_cycles = ((_26222_y - 100LLU) / 400LLU);;
	jule::U64 _27513_rem = ((_26222_y - 100LLU) % 400LL);;
	if ((_27513_rem < 0LLU)) {
		(_27413_cycles)--;
		_27513_rem+=400LLU;
	};
	if ((_27513_rem == 0LLU)) {
		_26240_leap=true;
		_27313_centuries=0LLU;
		_27213_leaps=0LLU;
	} else {
		if ((_27513_rem >= 200LLU)) {
			if ((_27513_rem >= 300LLU)) {
				_27313_centuries=3LLU;
				_27513_rem-=300LLU;
			} else {
				_27313_centuries=2LLU;
				_27513_rem-=200LLU;
			};
		} else {
			if ((_27513_rem >= 100LLU)) {
				_27313_centuries=1LLU;
				_27513_rem-=100LLU;
			} else {
				_27313_centuries=0LLU;
			};
		};
		if ((_27513_rem == 0LLU)) {
			_26240_leap=false;
			_27213_leaps=0LLU;
		} else {
			_27213_leaps=static_cast<jule::U64>((_27513_rem >> 2LLU));
			_27513_rem%=4LL;
			_26240_leap=(_27513_rem == 0LLU);
		};
	};
	_27213_leaps+=((97LLU * _27413_cycles) + (24LLU * _27313_centuries));
	if (_26240_leap) {
		(_27213_leaps)++;
	};
	return static_cast<jule::U64>((((((_26222_y - 100LLU) * 31536000LLU) + (_27213_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _212b401ad_unixMonthToSeconds(jule::U64 _31923_m, jule::Bool _31936_leap) {
	jule::U64 _32113_t = 0LLU;;
	{
		auto &_match_expr{ _31923_m };
		
		if (_match_expr == 1LL) {
			_case_begin_2250b4cd5:;
			{
				_32113_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_2250b4e39:;
			{
				_32113_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_2250b4ea0:;
			{
				_32113_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_2250b5016:;
			{
				_32113_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_2250b507c:;
			{
				_32113_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_2250b50e3:;
			{
				_32113_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_2250b5159:;
			{
				_32113_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_2250b51c0:;
			{
				_32113_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_2250b5236:;
			{
				_32113_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_2250b529c:;
			{
				_32113_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_2250b5324:;
			{
				_32113_t=28857600LLU;
			}
		}
		_match_end_2250b4c80:;
	};
	if ((_31936_leap && (_31923_m >= 2LLU))) {
		_32113_t+=86400LLU;
	};
	return _32113_t;
}



inline jule::Bool _212ab4d47_isCopyOptimizable(jule::Ptr<_211b8a319_Data>& _74123_expr) {
	if ((!(_74123_expr.get()._field_Lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _74123_expr.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_211019545_SlicingExprModel>>()) {
			_case_begin_22514651a:;
			{
				return false;
			}
		}
		_match_end_2251464b5:;
	};
	return true;
}



inline jule::Bool _212ab51cc_isIterCopyOptimizable(jule::Ptr<_211b8a319_Data>& _75227_expr, jule::Ptr<_211b43228_Var>& _75241_v) {
	if (((!(_75227_expr.get()._field_Lvalue)) && (!(_211bb7852_Mutable(_75227_expr.get()._field_Kind.ptr()))))) {
		return true;
	};
	return ((!(_75241_v.get()._field_Mutable)) && (!(_75227_expr.get()._field_Mutable)));
}



inline jule::Str _212ac32c8_decomposeCommonEsq(jule::U8 _114223_b) {
	{
		auto &_match_expr{ _114223_b };
		
		if (_match_expr == '\\') {
			_case_begin_2251eb37d:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_2251eb3e4:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_2251eb647:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_2251eb6ad:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_2251eb724:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_2251eb78a:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_2251eb801:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_2251eb878:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_2251eb900:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_2251eb977:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_2251eb1c4:;
			{
				return jule::Str();
			}
		}
		_match_end_2251eb081:;
	};
}



inline jule::Str _212ac35b4_sbtoa(jule::U8 _116910_b) {
	if ((_116910_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_116910_b < 128LLU)) {
		jule::Str _117413_seq = _212ac32c8_decomposeCommonEsq(_116910_b);;
		if ((!(_117413_seq.empty()))) {
			return _117413_seq;
		};
		if (((32LL <= _116910_b) && (_116910_b <= 126LLU))) {
			return static_cast<jule::Str>(_116910_b);
		};
	};
	jule::Str _11829_seq = _211b07011_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_116910_b)),8LL);;
	if ((_11829_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _11829_seq);
	};
	return (jule::Str("\\", 1) + _11829_seq);
}



inline jule::Str _212ac385b_cstrBytes(jule::Slice<jule::U8> _118914_bytes) {
	jule::Str _119013_lit = jule::Str::alloc(_118914_bytes.len());;
	{
		auto &expr = _118914_bytes;
		auto it = expr.begin();
		_iter_begin_225202010:;
		if (it != expr.end()) {
			jule::U8 &_119112_b = *it;
			{
				_119013_lit+=_212ac35b4_sbtoa(_119112_b);
			}
			_iter_next_225202010:;
			++it;
			goto _iter_begin_225202010;
		}
		_iter_end_225202010:;
	};
	return _119013_lit;
}



inline jule::Str _212ac3b7a_cstrLit(jule::Slice<jule::U8> _119712_bytes) {
	return ((jule::Str("\"", 1) + _212ac385b_cstrBytes(_119712_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _212ac3e88_ftoa(jule::F64 _12019_f, jule::I64 _120117_bitsize) {
	if ((_120117_bitsize != 32LL)) {
		if ((_12019_f == static_cast<jule::F64>(static_cast<jule::I64>(_12019_f)))) {
			return _212ac4230_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12019_f)));
		};
		if ((_12019_f == static_cast<jule::F64>(static_cast<jule::U64>(_12019_f)))) {
			return _212ac44c7_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12019_f)));
		};
	};
	jule::Str _121013_m = _2115327e9_FmtFloat(_12019_f,'f',-1LL,_120117_bitsize);;
	if ((!(_20e44916e_Contains(_121013_m,jule::Str(".", 1))))) {
		_121013_m+=jule::Str(".0", 2);
	};
	return _121013_m;
}



inline jule::Str _212ac4230_itoa(jule::I64 _12179_x) {
	{
		
		if ((_12179_x == jule::MAX_I64)) {
			_case_begin_225206179:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12179_x == jule::MIN_I64)) {
			_case_begin_225206212:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_225206058:;
	};
	jule::Str _12259_fmt = _211b07143_FmtInt(_12179_x,10LL);;
	if (_20e4bee4d_Is64Bit(jule::Str("amd64", 5))) {
		return (_12259_fmt + jule::Str("LL", 2));
	};
	return (_12259_fmt + jule::Str("L", 1));
}



inline jule::Str _212ac44c7_utoa(jule::U64 _12329_x) {
	{
		
		if ((_12329_x == jule::MAX_U64)) {
			_case_begin_22520cd0c:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_22520cbec:;
	};
	jule::Str _12389_fmt = _211b07011_FmtUint(_12329_x,10LL);;
	if (_20e4bee4d_Is64Bit(jule::Str("amd64", 5))) {
		return (_12389_fmt + jule::Str("LLU", 3));
	};
	return (_12389_fmt + jule::Str("LU", 2));
}



inline jule::Bool _212ac487e_isForwarded(jule::Ptr<_211b0940e_Scope>& _124517_s) {
	jule::Any _12469_last = _124517_s.get()._field_Stmts[(_124517_s.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _12469_last };
		
		if (_match_expr.type_is<jule::Ptr<_211b8a319_Data>>()) {
			_case_begin_225210150:;
			{
				{
					auto &_match_expr{ _12469_last.operator jule::Ptr<_211b8a319_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_21101ba20_BuiltinErrorCallExprModel>>()) {
						_case_begin_225210c22:;
						{
							return true;
						}
					}
					else {
						_case_begin_225210bab:;
						{
							return false;
						}
					}
					_match_end_225210903:;
				};
			}
		}
		else {
			_case_begin_22520eeeb:;
			{
				return true;
			}
		}
		_match_end_22520ee1e:;
	};
}



inline jule::Bool _212ac4b48_isBuiltinCallHasDebuginf(jule::Ptr<_2110188b8_FnCallExprModel>& _126030_m) {
	if ((!(_2110240bb_IsBuiltin(_126030_m.get()._field_Func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _126030_m.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_21101a403_CommonSubIdentExprModel>>()) {
			_case_begin_225211a25:;
			{
				jule::Ptr<_21101a403_CommonSubIdentExprModel> _126613_csie = _126030_m.get()._field_Expr.operator jule::Ptr<_21101a403_CommonSubIdentExprModel>();;
				return (_126613_csie.get()._field_Ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_2252106e4:;
			{
				return false;
			}
		}
		_match_end_22521068e:;
	};
}



inline jule::Bool _212ac4d79_isExprComesFromBind(jule::Ptr<_211b8a319_Data>& _127325_d) {
	{
		auto &_match_expr{ _127325_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_211b43228_Var>>()) {
			_case_begin_2252129e3:;
			{
				return _127325_d.get()._field_Model.operator jule::Ptr<_211b43228_Var>().get()._field_CppLinked;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211019b50_StructSubIdentExprModel>>()) {
			_case_begin_225212a59:;
			{
				return _127325_d.get()._field_Model.operator jule::Ptr<_211019b50_StructSubIdentExprModel>().get()._field_Owner.get()._field_Decl.get()._field_CppLinked;
			}
		}
		else {
			_case_begin_225212042:;
			{
				return false;
			}
		}
		_match_end_225211abe:;
	};
}



inline void _212b4502b_iterFiles(jule::Ptr<_211b202d2_Package>& _100219_pkg, jule::Fn<void(jule::Ptr<_211b855ab_SymbolTable>&)> _100234_f) {
	{
		auto &expr = _100219_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_225350290:;
		if (it != expr.end()) {
			jule::Ptr<_211b855ab_SymbolTable> _100317_file = *it;
			{
				_100234_f(_100317_file);
			}
			_iter_next_225350290:;
			++it;
			goto _iter_begin_225350290;
		}
		_iter_end_225350290:;
	};
}



inline void _212b4527e_prepareStructure(jule::Ptr<_210e427d1_Struct>& _100826_s) {
	{
		auto &expr = _100826_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_225350988:;
		if (it != expr.end()) {
			jule::Ptr<_210e6db2b_StructIns> _100917_ins = *it;
			{
				{
					auto &expr = _100917_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_2253515e3:;
					if (it != expr.end()) {
						jule::Ptr<_211020084_Fn> _101021_m = *it;
						{
							if (_101021_m.get()._field_Statically) {
								goto _iter_next_2253515e3;
							};
							{
								auto &expr = _101021_m.get()._field_Instances;
								auto it = expr.begin();
								_iter_begin_2253523c4:;
								if (it != expr.end()) {
									jule::Ptr<_211022c35_FnIns> _101425_mins = *it;
									{
										jule::Ptr<_211021d66_ParamIns> _101525_p = _101425_mins.get()._field_Params[0LL];;
										if ((!(_21101e0d8_IsRef(_101525_p.get()._field_Decl.ptr())))) {
											_101525_p.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_212b4623b_customType>(_212b4623b_customType{._field_kind=static__212b47ade_asPtr(static__212b4b0dc_kind(_101525_p.get()._field_Kind))}), 13)});
										} else {
											_101525_p.get()._field_Kind=jule::new_ptr<_211bb6455_TypeKind>(_211bb6455_TypeKind{._field_Kind=jule::Trait<_211bb6026_Kind>(jule::new_ptr<_212b4623b_customType>(_212b4623b_customType{._field_kind=static__212b4b0dc_kind(_101525_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_2253523c4:;
									++it;
									goto _iter_begin_2253523c4;
								}
								_iter_end_2253523c4:;
							};
						}
						_iter_next_2253515e3:;
						++it;
						goto _iter_begin_2253515e3;
					}
					_iter_end_2253515e3:;
				};
			}
			_iter_next_225350988:;
			++it;
			goto _iter_begin_225350988;
		}
		_iter_end_225350988:;
	};
}



inline jule::Str _212b45526_concatAllParts(jule::Slice<jule::Ptr<_20e7ddc0b_Token>> _103519_parts) {
	jule::I64 _103613_n = 0LL;;
	{
		auto &expr = _103519_parts;
		auto it = expr.begin();
		_iter_begin_225351c31:;
		if (it != expr.end()) {
			jule::Ptr<_20e7ddc0b_Token> &_103712_part = *it;
			{
				_103613_n+=_103712_part.get()._field_Kind.len();
			}
			_iter_next_225351c31:;
			++it;
			goto _iter_begin_225351c31;
		}
		_iter_end_225351c31:;
	};
	if ((_103613_n == 0LL)) {
		return jule::Str();
	};
	jule::Str _104313_s = jule::Str::alloc(_103613_n);;
	{
		auto &expr = _103519_parts;
		auto it = expr.begin();
		_iter_begin_225355e44:;
		if (it != expr.end()) {
			jule::Ptr<_20e7ddc0b_Token> &_104412_p = *it;
			{
				_104313_s+=_104412_p.get()._field_Kind;
			}
			_iter_next_225355e44:;
			++it;
			goto _iter_begin_225355e44;
		}
		_iter_end_225355e44:;
	};
	return _104313_s;
}



inline jule::Ptr<_210e1d8ab_Directive> _212b4d94c_findDirective(jule::Slice<jule::Ptr<_210e1d8ab_Directive>>& _32923_directives, jule::Str _32954_tag) {
	{
		auto &expr = _32923_directives;
		auto it = expr.begin();
		_iter_begin_225427c91:;
		if (it != expr.end()) {
			jule::Ptr<_210e1d8ab_Directive> _33017_dr = *it;
			{
				if ((_33017_dr.get()._field_Tag.get()._field_Kind == _32954_tag)) {
					return _33017_dr;
				};
			}
			_iter_next_225427c91:;
			++it;
			goto _iter_begin_225427c91;
		}
		_iter_end_225427c91:;
	};
	return nullptr;
}



inline jule::Bool _212b4dcd2_hasDirective(jule::Slice<jule::Ptr<_210e1d8ab_Directive>>& _33918_directives, jule::Str _33949_tag) {
	return (_212b4d94c_findDirective(_33918_directives,_33949_tag) != nullptr);
}



inline void _20e489544_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _20e49cbb7_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_20e489544_printErrorMessage((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _20e48cc84_HelpMap[0LL][0LL].len();;
	{
		auto &expr = _20e48cc84_HelpMap;
		auto it = expr.begin();
		_iter_begin_22549e620:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_22549e620:;
			++it;
			goto _iter_begin_22549e620;
		}
		_iter_end_22549e620:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _20e48cc84_HelpMap;
		auto it = expr.begin();
		_iter_begin_2254a2469:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_20e437ed7_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_2254a2469:;
			++it;
			_519_i++;
			goto _iter_begin_2254a2469;
		}
		_iter_end_2254a2469:;
	};
	jule::outln(_4913_s);
}



inline void _20e49d415_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_20e489544_printErrorMessage((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.12 @master", 18));
}



inline void _20e49ecb8_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _20e4a0516_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _20e4a0c64_tool(jule::Slice<jule::Str>& _9410_args) {
	if ((_9410_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9410_args.len() > 3LL)) {
		_20e489544_printErrorMessage((jule::Str("invalid command: ", 17) + _9410_args[3LL]));
		return;;
	};
	jule::Str _1059_cmd = _9410_args[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_2254a964c:;
			{
				_20e49ecb8_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_2254a933e:;
			{
				_20e4a0516_toolDistarch();
			}
		}
		else {
			_case_begin_2254a7b12:;
			{
				_20e489544_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_2254a9174:;
	};
}



inline void _20e48a446_julenv(jule::Slice<jule::Str>& _11712_args) {
	if ((_11712_args.len() > 2LL)) {
		_20e489544_printErrorMessage((jule::Str("invalid command: ", 17) + _11712_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.12 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: linux", 23));
	jule::outln((jule::Str("default compiler: ", 18) + _20c50ba3b_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _20c5520d1_CppStd));
}



inline void _20e4ac622_mod(jule::Slice<jule::Str>& _1309_args) {
	if ((_1309_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1309_args.len() > 3LL)) {
		_20e489544_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1309_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_2254adbb2:;
			{
				({
					auto except = static__20c6cd78a_Write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_20e489544_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_2254ac4da:;
			{
				_20e489544_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[2LL]));
			}
		}
		_match_end_2254ad750:;
	};
}



inline jule::Bool _20d42ee9c_processCommand(jule::Slice<jule::Str>& _15320_args) {
	{
		auto &_match_expr{ _15320_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_2254aee16:;
			{
				_20e49cbb7_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_2254aee7c:;
			{
				_20e49d415_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_2254aeee3:;
			{
				_20e4a0c64_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_2254b06ca:;
			{
				_20e48a446_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_2254b0741:;
			{
				_20e4ac622_mod(_15320_args);
			}
		}
		else {
			_case_begin_2254aed39:;
			{
				return false;
			}
		}
		_match_end_2254aec6d:;
	};
	return true;
}



inline void _20e4a179d_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _20d4546ca_Args();;
	if ((_18913_args.len() < 2LL)) {
		_20e4a179d_showInfo();
		return;;
	};
	if (_20d42ee9c_processCommand(_18913_args)) {
		return;;
	};
	_212b81540_compileCommand(_18913_args);
}



inline void _212b523ce_init(void) {
	_20c50ba3b_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_20d3beed6_File> _212b53e80_openOutput(jule::Str& _4316_path) {
	jule::Str _449_dir = _20d49e7d0_Dir(_4316_path);;
	({
		auto except = static__20c606d67_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__20d42e3ca_Create(_449_dir);
				if (!except.ok()) {
					_21256079e_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__20c6a45c9_Create(_4316_path);
		(except.ok()) ? (except.result) : ({
			_21256079e_Throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _212b60167_clearObjects(void) {
	({
		auto except = static__20c603171_Remove(_212a8eae1_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__20d40b2ec_Remove(_212b5018a_OutDir);
}



inline void _212b50740_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_20e51a4e8_Cmd> _7313_cmd = static__20e51a927_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=jule::Slice<jule::Str>::make({_7214_compiler});
	_7313_cmd.get()._field_Args=jule::append(_7313_cmd.get()._field_Args,_20e448d2d_Split(_7229_compilerCmd,jule::Str(" ", 1),-1LL));
	jule::I64 _769_status = ({
		auto except = _20e51ab8b_Spawn(_7313_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_2254b810b:;
					{
						static__21255d04e_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_2254b78d0:;
					{
						static__21255d04e_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_2254b7b44:;
					{
						static__21255d04e_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_2254b7baa:;
					{
						static__21255d04e_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_2254b7a23:;
					{
						static__21255d04e_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_2254b7968:;
			};
			_21256079e_Throw(jule::Str());
			0LL;
		});
	});;
	if ((_769_status != 0LL)) {
		jule::Str _9313_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _20c50ba3b_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__21255d04e_Print(jule::Str("\033[31m", 5),_9313_errorMessage);
		_21256079e_Throw(jule::Str());
	};
	_212b60167_clearObjects();
}



inline jule::Bool _212b70c5a_isCppSourceFile(jule::Str _10420_path) {
	jule::I64 _1059_offset = _20e4477dd_FindLastByte(_10420_path,'.');;
	if ((_1059_offset == -1LL)) {
		return false;
	};
	return _20e4adada_IsValidCppExt(_10420_path.slice(_1059_offset));
}



inline void _212b73d4b_pushCompCmdClang(jule::Str& _11226_cmd) {
	_11226_cmd+=jule::Str("-Wno-everything ", 16);
	_11226_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _20c5520d1_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_2254bca17:;
			{
				_11226_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_2254bca7d:;
			{
				_11226_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2254bcbd2:;
			{
				_11226_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_2254bc8c4:;
	};
	_11226_cmd+=jule::Str(" ", 1);
	if (_20c5533ce_Production) {
		_11226_cmd+=jule::Str("-O3 ", 4);
		_11226_cmd+=jule::Str("-flto ", 6);
		_11226_cmd+=jule::Str("-DNDEBUG ", 9);
		_11226_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11226_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _212986653_pushCompCmdGcc(jule::Str& _13824_cmd) {
	_13824_cmd+=jule::Str("-w ", 3);
	_13824_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _20c5520d1_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_2254c50b3:;
			{
				_13824_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_2254c5129:;
			{
				_13824_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2254c527d:;
			{
				_13824_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_2254c4e70:;
	};
	_13824_cmd+=jule::Str(" ", 1);
	if (_20c5533ce_Production) {
		_13824_cmd+=jule::Str("-O3 ", 4);
		_13824_cmd+=jule::Str("-DNDEBUG ", 9);
		_13824_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_13824_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _2129b594b_genCompileCmd(jule::Str _16418_sourcePath, jule::Ptr<_2120ac0a9_IR>& _16436_ir) {
	jule::Str &_16510_compiler = _20c55094d_CompilerPath;;
	jule::Str _16613_cmd = jule::Str::alloc(64LLU);;
	{
		auto &_match_expr{ _20c50ba3b_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_2254c7c53:;
			{
				_212986653_pushCompCmdGcc(_16613_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_2254c7cb9:;
			{
				_212b73d4b_pushCompCmdClang(_16613_cmd);
			}
		}
		_match_end_2254c7b87:;
	};
	{
		auto &expr = _16436_ir.get()._field_Passes;
		auto it = expr.begin();
		_iter_begin_2254c836e:;
		if (it != expr.end()) {
			jule::Str &_17612_pass = *it;
			{
				_16613_cmd+=_17612_pass;
				_16613_cmd+=jule::Str(" ", 1);
			}
			_iter_next_2254c836e:;
			++it;
			goto _iter_begin_2254c836e;
		}
		_iter_end_2254c836e:;
	};
	{
		auto &expr = _16436_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_2254c7d30:;
		if (it != expr.end()) {
			jule::Ptr<_211b1c378_ImportInfo> &_18212_u = *it;
			{
				if ((_18212_u.get()._field_CppLinked && _212b70c5a_isCppSourceFile(_18212_u.get()._field_Path))) {
					_16613_cmd+=_18212_u.get()._field_Path;
					_16613_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_2254c7d30:;
			++it;
			goto _iter_begin_2254c7d30;
		}
		_iter_end_2254c7d30:;
	};
	if ((!(_212b5613b_Out.empty()))) {
		_16613_cmd+=jule::Str("-o ", 3);
		_16613_cmd+=_212b5613b_Out;
		_16613_cmd+=jule::Str(" ", 1);
	};
	_16613_cmd+=_16418_sourcePath;
	return std::make_tuple(_16510_compiler,_16613_cmd);
}



inline jule::Str _212a8eae1_getCompilePath(void) {
	return _20d4b1cdc_Join(jule::Slice<jule::Str>::make({_212b5018a_OutDir,_212b54645_OutName}));
}



inline void _212a7d371_applyTargetIndependentOptimizations(jule::Ptr<_2120ac0a9_IR>& _20545_ir) {
	jule::Ptr<_212528712_Optimizer> _20713_opt = static__21248c005_New(_20545_ir);;
	_2124dd5ea_Optimize(_20713_opt.ptr());
}



inline void _212b5ae21_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _20c50ba3b_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_2254cb174:;
			{
				_21256079e_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_2254cbebb:;
			{
				if (_20c55094d_CompilerPath.empty()) {
					_20c55094d_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_2254cc032:;
			{
				if (_20c55094d_CompilerPath.empty()) {
					_20c55094d_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_2254cbe55:;
			{
				_21256079e_Throw((jule::Str("invalid option value for --compiler: ", 37) + _20c50ba3b_Compiler));
			}
		}
		_match_end_2254cbb58:;
	};
}



inline void _212b4e992_checkTargetArch(jule::Str _22820_arch) {
	if ((((_22820_arch != jule::Str("amd64", 5)) && (_22820_arch != jule::Str("arm64", 5))) && (_22820_arch != jule::Str("i386", 4)))) {
		_21256079e_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22820_arch));
	};
}



inline void _212b4eac4_checkTargetOs(jule::Str _23618_os) {
	if ((((_23618_os != jule::Str("windows", 7)) && (_23618_os != jule::Str("linux", 5))) && (_23618_os != jule::Str("darwin", 6)))) {
		_21256079e_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23618_os));
	};
}



inline void _212b80ac2_checkTargetFlag(jule::Str& _24421_target) {
	if (_24421_target.empty()) {
		_21256079e_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2499_parts = _20e448d2d_Split(_24421_target,jule::Str("-", 1),-1LL);;
	if ((_2499_parts.len() != 2LL)) {
		_21256079e_Throw((jule::Str("--target: undefined platform target format: ", 44) + _24421_target));
	};
	jule::Str _25410_os = _2499_parts[0LL];;
	jule::Str _25414_arch = _2499_parts[1LL];;
	std::tie(_25410_os,_25414_arch) = std::make_tuple(_2499_parts[0LL],_2499_parts[1LL]);
	if ((_25410_os != jule::Str("native", 6))) {
		_212b4eac4_checkTargetOs(_25410_os);
		_20e51912e_Os=_25410_os;
	};
	if ((_25414_arch != jule::Str("native", 6))) {
		_212b4e992_checkTargetArch(_25414_arch);
		_20e508728_Arch=_25414_arch;
	};
	_21142b0e9_UpdateTarget();
}



inline void _212b80c04_checkOptFlag(jule::Str& _26718_opt) {
	if (_26718_opt.empty()) {
		_21256079e_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _26718_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_2254d4ac8:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_2254d5128:;
			{
				_20ed5343a_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_2254d48a8:;
			{
				_21256079e_Throw((jule::Str("--opt: invalid optimization level: ", 35) + _26718_opt));
			}
		}
		_match_end_2254d4853:;
	};
}



inline void _212b81067_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _20c5520d1_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2254d518e:;
			{
				goto _match_end_2254d5e92;
			}
		}
		else {
			_case_begin_2254d5aa7:;
			{
				_21256079e_Throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _20c5520d1_CppStd));
			}
		}
		_match_end_2254d5e92:;
	};
}



inline jule::Slice<jule::Str> _212b81199_checkFlags(jule::Slice<jule::Str>& _29216_args) {
	jule::Str _29313_opt = jule::Str("L0", 2);;
	jule::Str _29413_target = jule::Str("native-native", 13);;
	jule::Ptr<_212b7bcdd_FlagSet> _29613_fs = static__212b7c0c9_New();;
	_2254d856b_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_2254d856b_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_2254d856b_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_212b5613b_Out)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_2254e2256_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20c552345_Shadowing)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_2254e2256_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20c5525a9_Transpilation)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_2254d856b_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_20c50ba3b_Compiler)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_2254d856b_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_20c55094d_CompilerPath)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_2254e2256_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20c5533ce_Production)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_2254e2256_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20c552ba3_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_2254e2256_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20c5530c1_Safety)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_2254d856b_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_20c5520d1_CppStd)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_2254e2256_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e82655c_Copy)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_2254e2256_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e82aa8e_Deadcode)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_2254e2256_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e81523d_Append)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_2254e2256_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e832689_Math)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_2254e2256_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e84dd9d_Access)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_2254e2256_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e85659d_Inline)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_2254e2256_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e85956d_Ptr)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_2254e2256_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e85998b_Cond)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _212b7cddd_Parse(_29613_fs.ptr(), _29216_args);
		(except.ok()) ? (except.result) : ({
			_21256079e_Throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_212b5ae21_checkCompilerFlag();
	_212b81067_checkCppStdFlag();
	_212b80ac2_checkTargetFlag(_29413_target);
	_212b80c04_checkOptFlag(_29313_opt);
	return _31813_content;
}



inline void _212b812cb_setupSemaFlags(jule::I64& _33124_flags) {
	if (_20c552345_Shadowing) {
		_33124_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_2120ac0a9_IR> _212b8140d_buildIr(jule::Slice<jule::Str>& _33713_args) {
	jule::Slice<jule::Str> _3389_content = _212b81199_checkFlags(_33713_args);;
	jule::I64 _34013_semaFlags = static_cast<jule::I64>(0LL);;
	_212b812cb_setupSemaFlags(_34013_semaFlags);
	if ((_3389_content.len() == 0LL)) {
		_21256079e_Throw(_20e4ba7b7_Logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_21256079e_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok;;
	std::tie(_34814_path,_34820_ok) = _20d4c0cb8_Abs(_3389_content[0LL]);
	if ((!(_34820_ok))) {
		_21256079e_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_20d3c039e_Status> _3549_inf = ({
		auto except = static__20c606d67_Of(_20e508aad_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_21256079e_Throw(_20e4ba7b7_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
		} jule::Ptr<_20d3c039e_Status>();});
	});;
	if ((!(_20c6d15e5_IsDir(_3549_inf.ptr())))) {
		_21256079e_Throw(_20e4ba7b7_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_2120ac0a9_IR> _36214_ir;;
	jule::Slice<_20e4ba377_Log> _36218_logs;;
	std::tie(_36214_ir,_36218_logs) = static__2107519c5_Build(_34814_path,_34013_semaFlags);
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_21256079e_Throw(_20e4ba7b7_Logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_34814_path)})));
	};
	if ((_36218_logs != nullptr)) {
		static__21255ed31_PrintLogs(_36218_logs);
		_21256079e_Throw(jule::Str());
	};
	return _36214_ir;
}



inline void _212b81540_compileCommand(jule::Slice<jule::Str>& _37724_args) {
	_37724_args=_37724_args.slice(1LL);
	if ((_37724_args[0LL] == jule::Str("test", 4))) {
		_20c552895_Test=true;
		_37724_args=_37724_args.slice(1LL);
	};
	jule::Ptr<_2120ac0a9_IR> _38313_ir = _212b8140d_buildIr(_37724_args);;
	;
	if ((!(_20c552895_Test))) {
		jule::Ptr<_211020084_Fn> _38817_main = _211b21a86_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
		if ((_38817_main == nullptr)) {
			_21256079e_Throw(_20e4ba7b7_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_212a7d371_applyTargetIndependentOptimizations(_38313_ir);
	_2120a3d3c_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	std::tie(_39910_compiler,_39920_compilerCmd) = _2129b594b_genCompileCmd(_212a8eae1_getCompilePath(),_38313_ir);
	jule::Ptr<_212b406ec_ObjectCoder> _40113_oc = static__212b23724_New(_38313_ir,_212b40323_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_20c552895_Test) {
		jule::Ptr<_212ac6908_TestCoder> _40617_tc = static__212ac6d7b_New(_40113_oc);;
		_212ac80ad_Serialize(_40617_tc);
	} else {
		_212b44bb8_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _212a8eae1_getCompilePath();;
	jule::Ptr<_20d3beed6_File> _41313_file = _212b53e80_openOutput(_4129_path);;
	({
		auto except = _20c604c00_Write(_41313_file.ptr(), static_cast<jule::Slice<jule::U8>>(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_21256079e_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _20c6d0a01_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_20c5525a9_Transpilation))) {
		_212b50740_compileIr(_39910_compiler,_39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_20e4cc06a_init();
	_2114386ab_init();
	_212b523ce_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}