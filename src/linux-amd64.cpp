// Auto generated by JuleC.
// JuleC version: jule0.0.12 @master
// Date: 8/5/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>

struct _249c0d50d_Importer{};
struct _249cb035c_Kind{};
struct _249ccb3bc_Lookup{};
struct _24aac840a_CommonFlag{};
struct _23a745d24_Range16;
struct _23a746297_Range32;
struct _23a74671a_RangeTable;
struct _23a808de8_acceptRange;
struct _2398636b2_lazyBuff;
struct _238ac31c5_DirEntry;
struct _2389b31d6_Directory;
struct _238993eec_File;
struct _2389b2d0c_Status;
struct _23a901540_Cmd;
struct _23a8a5ca8_Log;
struct _23abd3d83_Token;
struct _23abd921d_File;
struct _23abdb275_kindPair;
struct _23abe1d6e_lex;
struct _24900ba82_Ast;
struct _24900c731_Node;
struct _24900cb2c_Directive;
struct _2490463c4_TypeDecl;
struct _24904698a_IdentTypeDecl;
struct _2490470d9_SubIdentTypeDecl;
struct _249047491_NamespaceTypeDecl;
struct _24904777c_SptrTypeDecl;
struct _249047b78_SlcTypeDecl;
struct _249047e64_TupleTypeDecl;
struct _249048250_PtrTypeDecl;
struct _2490488d2_ArrTypeDecl;
struct _249049130_MapTypeDecl;
struct _2490494d7_RetTypeDecl;
struct _24904a8e5_Expr;
struct _24904abd1_RangeExpr;
struct _24904b286_UseExpr;
struct _24904b572_TupleExpr;
struct _24904b929_LitExpr;
struct _24904c133_UnsafeExpr;
struct _24904c4da_CoExpr;
struct _24904c95d_IdentExpr;
struct _24904d167_UnaryExpr;
struct _24904d51e_VariadicExpr;
struct _24904d8c6_CastExpr;
struct _24904dc7d_NsSelectionExpr;
struct _24904e201_SubIdentExpr;
struct _24904e674_BinopExpr;
struct _24904ebb3_FnCallExpr;
struct _249050642_FieldExprPair;
struct _249050d90_StructLit;
struct _249051313_BraceLit;
struct _249051d2a_KeyValPair;
struct _24905229d_SliceExpr;
struct _249052b3e_IndexingExpr;
struct _249053249_SlicingExpr;
struct _249053535_Constraint;
struct _2490539a8_GenericDecl;
struct _249053d60_LabelSt;
struct _249054217_GotoSt;
struct _249054503_FallSt;
struct _249054b0d_AssignLeft;
struct _24905514c_AssignSt;
struct _2490560d7_Stmt;
struct _2490566e2_ScopeTree;
struct _249056db8_ParamDecl;
struct _2490581d8_FnDecl;
struct _2490591b7_VarDecl;
struct _24905956e_RetSt;
struct _249059bce_Iter;
struct _24905a4a4_WhileKind;
struct _24905ad45_RangeKind;
struct _24905b1ec_BreakSt;
struct _24905b5a4_ContSt;
struct _24905ba27_If;
struct _24905bdce_Else;
struct _24905c352_Conditional;
struct _24905ca28_TypeAliasDecl;
struct _24905ce9b_Case;
struct _24905d672_MatchCase;
struct _24905de14_UseDecl;
struct _24905e387_EnumItemDecl;
struct _24905edb0_EnumDecl;
struct _2490608b6_TypeEnumItemDecl;
struct _249060ab4_TypeEnumDecl;
struct _249061114_FieldDecl;
struct _249061972_StructDecl;
struct _24906207c_TraitDecl;
struct _249062687_Impl;
struct _24979546e_floatInfo;
struct _2398213c8_decimalSlice;
struct _249bc0679_leftCheat;
struct _249bc09dc_decimal;
struct _2491152a6_Const;
struct _24902413d_Field;
struct _24903852b_Operators;
struct _249036b01_Struct;
struct _24903e268_FieldIns;
struct _249bc61eb_OperandExprModel;
struct _249bc63d8_BinopExprModel;
struct _249bc65c5_UnaryExprModel;
struct _249bc67b2_StructArgExprModel;
struct _249bc699e_StructLitExprModel;
struct _249bc6b8b_AllocStructLitExprModel;
struct _249bc6d78_CastingExprModel;
struct _249bc7065_FnCallExprModel;
struct _249bc7252_SliceExprModel;
struct _249bc743e_IndexingExprModel;
struct _249bc762b_AnonFnExprModel;
struct _249bc7818_KeyValPairExprModel;
struct _249bc7a05_MapExprModel;
struct _249bc7be2_SlicingExprModel;
struct _249bc7dce_TraitSubIdentExprModel;
struct _249bc82ec_StructSubIdentExprModel;
struct _249bc84d9_StructStaticIdentExprModel;
struct _249bc86c6_ArrayExprModel;
struct _249bc88b3_CommonIdentExprModel;
struct _249bc8aa0_CommonSubIdentExprModel;
struct _249bc8c8c_TupleExprModel;
struct _249bc8e79_BuiltinOutCallExprModel;
struct _249bc9166_BuiltinOutlnCallExprModel;
struct _249bc9353_BuiltinCloneCallExprModel;
struct _249bc9540_BuiltinNewCallExprModel;
struct _249bc972c_BuiltinPanicCallExprModel;
struct _249bc9919_BuiltinAssertCallExprModel;
struct _249bc9b06_BuiltinMakeCallExprModel;
struct _249bc9ce3_BuiltinAppendCallExprModel;
struct _249bc9ed0_BuiltinLenCallExprModel;
struct _249bca1bc_BuiltinCapCallExprModel;
struct _249bc80bb_BuiltinDeleteCallExprModel;
struct _249bca82c_BuiltinCopyCallExprModel;
struct _249bcaa19_BuiltinErrorCallExprModel;
struct _249bcac06_SizeofExprModel;
struct _249bcade3_AlignofExprModel;
struct _249bcb0d0_RuneExprModel;
struct _249bcb2bc_IntegratedToStrExprModel;
struct _249bcb4a9_BackendEmitExprModel;
struct _249bcb696_FreeExprModel;
struct _249bcba5e_RetType;
struct _249bcbc4b_Param;
struct _249bcbe38_Fn;
struct _249bcc125_ParamIns;
struct _249bcc312_FnIns;
struct _249bcccd5_ReferenceStack;
struct _249bcd5cc_Pass;
struct _249bd0557_symbolBuilder;
struct _249bd48d0_Trait;
struct _249bd6030_EnumItem;
struct _249bd6a25_Enum;
struct _249bd7a59_TypeEnumItem;
struct _249bd8120_TypeEnum;
struct _249bda694_constraintChecker;
struct _249bdc5ca_Impl;
struct _249be2635_Scope;
struct _249be2a31_If;
struct _249be2d1c_Else;
struct _249be3191_Conditional;
struct _249be347c_InfIter;
struct _249be3900_WhileIter;
struct _249be42d5_RangeIter;
struct _249be46d1_ContSt;
struct _249be4a88_BreakSt;
struct _249be4d74_Label;
struct _249be5160_GotoSt;
struct _249be5517_Postfix;
struct _249be598a_Assign;
struct _249be5d42_MultiAssign;
struct _249be6381_Match;
struct _249be6dcb_Case;
struct _249be7481_FallSt;
struct _249be7904_RetSt;
struct _249be800e_scopeLabel;
struct _249be8482_scopeGoto;
struct _249be9296_scopeChecker;
struct _249c0a0ed_directiveChecker;
struct _249c1117b_ImportInfo;
struct _249c140d5_Package;
struct _249c192c7_Sema;
struct _249c34402_missingRetChecker;
struct _249c360b3_IterRelation;
struct _249c3702b_Var;
struct _249c37cc9_FuncPattern;
struct _249c68bea_typeCompatibilityChecker;
struct _249c6a823_assignTypeChecker;
struct _249c6c23c_dynamicTypeAnnotation;
struct _249c71a38_fnCallArgChecker;
struct _249c74442_structLitChecker;
struct _249c76026_rangeChecker;
struct _249c7817c_retTypeChecker;
struct _249c7a228_SymbolTable;
struct _249c80052_Data;
struct _249c810ca_Value;
struct _249c81ac0_Eval;
struct _249ca2409_unaryEval;
struct _249ca4197_binaryEval;
struct _249cae05e_InsGeneric;
struct _249caea98_TypeAlias;
struct _249cb078b_TypeKind;
struct _249cb48e4_TypeSymbol;
struct _249cb5263_Prim;
struct _249cb89e7_Sptr;
struct _249cb9454_Slc;
struct _249cb9ed2_Tuple;
struct _249cbaa0a_Map;
struct _249cbb5ee_Arr;
struct _249cbc05b_Ptr;
struct _249cbcea2_referencer;
struct _249cbdcb6_typeChecker;
struct _249cc64c7_identTypeLookup;
struct _24a4e45eb_FileInfo;
struct _24a541170_stmt;
struct _24a54199a_scopeParser;
struct _24a54ce5c_exprBuilder;
struct _24a5597b5_assignInfo;
struct _24a55d0e3_parser;
struct _24a56dd07_typeBuilder;
struct _249d9196b_CompileInfo;
struct _249d92cbe_directiveEval;
struct _249e8d958_JuleImporter;
struct _24a52c964_OrderedDefines;
struct _249e80e12_defineOrderer;
struct _24a63ce1a_liveTable;
struct _24a67411b_scopeDeadCode;
struct _24a678076_exprDeadCode;
struct _23ac114cb_UnsafeBinopExprModel;
struct _23b73d601_UnsafeIndexingExprModel;
struct _2487dbd57_PushToSliceExprModel;
struct _248c8054d_MutSlicingExprModel;
struct _23ac51d57_StrInsertBeginExprModel;
struct _23b0684c0_scopeOptimizer;
struct _23b5ccd20_exprOptimizer;
struct _24a648497_Optimizer;
struct _24a682a31_AnsiEscape;
struct _24a68411a_Logger;
struct _24aca8bd4_AbsTime;
struct _24aca9377_Time;
struct _24ac041d4_scopeCoder;
struct _24ac0c099_exprCoder;
struct _24ac1a8c1_deriveCoder;
struct _24ac1bd45_TestCoder;
struct _24ac1e496_identCoder;
struct _24ac272e5_SerializationInfo;
struct _24acb13d4_traitHash;
struct _24acb5581_customType;
struct _24acb5d78_typeCoder;
struct _2512892e1_Flag;
struct _25128d13b_Flag;
struct _251291c77_Flag;
struct _251295907_Flag;
struct _251299543_Flag;
struct _24ad00e5c_FlagSet;
struct _24a1bc659_IR;
struct _249062e4b_StructIns;
struct _24a63d1d4_ObjectDeadCode;
struct _24acb15c1_ObjectCoder;
struct _24ad03635_argParser;
struct _23a745d24_Range16 {
	jule::U16 _field_Lo = jule::U16();
	jule::U16 _field_Hi = jule::U16();
	jule::U16 _field_Stride = jule::U16();
	

	_23a745d24_Range16(void) = default;

	inline bool operator==(_23a745d24_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_23a745d24_Range16 _other) { return !this->operator==(_other); }


};
struct _23a746297_Range32 {
	jule::U32 _field_Lo = jule::U32();
	jule::U32 _field_Hi = jule::U32();
	jule::U32 _field_Stride = jule::U32();
	

	_23a746297_Range32(void) = default;

	inline bool operator==(_23a746297_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_23a746297_Range32 _other) { return !this->operator==(_other); }


};
struct _23a74671a_RangeTable {
	jule::Slice<_23a745d24_Range16> _field_R16 = jule::Slice<_23a745d24_Range16>();
	jule::Slice<_23a746297_Range32> _field_R32 = jule::Slice<_23a746297_Range32>();
	jule::I64 _field_LatinOffset = jule::I64();
	

	_23a74671a_RangeTable(void) = default;

	inline bool operator==(_23a74671a_RangeTable _other) {
		return 
			this->_field_R16 == _other._field_R16 &&
			this->_field_R32 == _other._field_R32 &&
			this->_field_LatinOffset == _other._field_LatinOffset;
	}

	inline bool operator!=(_23a74671a_RangeTable _other) { return !this->operator==(_other); }


};
struct _23a808de8_acceptRange {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();
	

	_23a808de8_acceptRange(void) = default;

	inline bool operator==(_23a808de8_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_23a808de8_acceptRange _other) { return !this->operator==(_other); }


};
inline jule::U8 _239869e38_index(_2398636b2_lazyBuff*, jule::I64);
inline void _23986a642_append(_2398636b2_lazyBuff*, jule::U8);
inline jule::Str _23986d8ba_string(_2398636b2_lazyBuff*);
struct _2398636b2_lazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_volAndPath = jule::Str();
	jule::I64 _field_volLen = jule::I64();
	

	_2398636b2_lazyBuff(void) = default;

	inline bool operator==(_2398636b2_lazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_volAndPath == _other._field_volAndPath &&
			this->_field_volLen == _other._field_volLen;
	}

	inline bool operator!=(_2398636b2_lazyBuff _other) { return !this->operator==(_other); }


};
struct _238ac31c5_DirEntry {
	jule::Str _field_Name = jule::Str();
	jule::Ptr<_2389b2d0c_Status> _field_Stat = jule::Ptr<_2389b2d0c_Status>();
	

	_238ac31c5_DirEntry(void) = default;

	inline bool operator==(_238ac31c5_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_238ac31c5_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_238ac31c5_DirEntry>>> static__2397e2234_Read(jule::Str);
inline jule::VoidExceptional static__2397ee9d3_Create(jule::Str);
inline jule::VoidExceptional static__2397cab79_Remove(jule::Str);
struct _2389b31d6_Directory {
	

	_2389b31d6_Directory(void) = default;

	inline bool operator==(_2389b31d6_Directory _other) { return true; }

	inline bool operator!=(_2389b31d6_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_238993eec_File>> static__238999a19_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__23899b9d8_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _23899c698_Write(_238993eec_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _23899dcb5_Read(_238993eec_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_238993eec_File> static__2389b7eaa_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_238993eec_File>> static__2389b9b9e_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__2389ba95d_Read(jule::Str);
inline jule::VoidExceptional static__2389bb794_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _2389bd323_Seek(_238993eec_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _2389bdd07_Close(_238993eec_File*);
struct _238993eec_File {
	jule::Uintptr _field_handle = jule::Uintptr();
	

	_238993eec_File(void) = default;

	inline bool operator==(_238993eec_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_238993eec_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_2389b2d0c_Status>> static__2389b50d9_Of(jule::Str);
inline jule::Bool _2389c048a_IsDir(_2389b2d0c_Status*);
inline jule::Bool _238a9276b_IsReg(_2389b2d0c_Status*);
struct _2389b2d0c_Status {
	jule::U64 _field_Mode = jule::U64();
	jule::U64 _field_Size = jule::U64();
	

	_2389b2d0c_Status(void) = default;

	inline bool operator==(_2389b2d0c_Status _other) {
		return 
			this->_field_Mode == _other._field_Mode &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_2389b2d0c_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_23a901540_Cmd> static__23a90196e_New(jule::Str);
inline jule::Exceptional<jule::I64> _23a901bd3_Spawn(_23a901540_Cmd*);
inline jule::Exceptional<jule::I64> _23a904b3c_spawn(_23a901540_Cmd*);
struct _23a901540_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_Args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_Env = jule::Slice<jule::Str>();
	

	_23a901540_Cmd(void) = default;

	inline bool operator==(_23a901540_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_Args == _other._field_Args &&
			this->_field_Env == _other._field_Env;
	}

	inline bool operator!=(_23a901540_Cmd _other) { return !this->operator==(_other); }


};
struct _23a8a5ca8_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = jule::I64();
	jule::I64 _field_Column = jule::I64();
	jule::Str _field_Path = jule::Str();
	jule::Str _field_Text = jule::Str();
	jule::Str _field_Line = jule::Str();
	jule::Str _field_Suggestion = jule::Str();
	

	_23a8a5ca8_Log(void) = default;

	inline bool operator==(_23a8a5ca8_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_23a8a5ca8_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _23abd423a_Prec(_23abd3d83_Token*);
struct _23abd3d83_Token {
	jule::Ptr<_23abd921d_File> _field_File = jule::Ptr<_23abd921d_File>();
	jule::I64 _field_Row = jule::I64();
	jule::I64 _field_Column = jule::I64();
	jule::Str _field_Kind = jule::Str();
	jule::U64 _field_Id = 0LLU;
	

	_23abd3d83_Token(void) = default;

	inline bool operator==(_23abd3d83_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_23abd3d83_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _23abd962a_IsOk(_23abd921d_File*);
inline void _23abd98a0_Fill(_23abd921d_File*, jule::Slice<jule::U8>);
inline jule::Str _23abd9b14_Dir(_23abd921d_File*);
inline jule::Str _23abd9d78_Name(_23abd921d_File*);
inline jule::Uintptr _23abda0dc_Addr(_23abd921d_File*);
inline jule::Str _23abda3ea_GetRow(_23abd921d_File*, jule::I64);
struct _23abd921d_File {
	jule::Str _field_Path = jule::Str();
	jule::Slice<jule::U8> _field_Data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _field_Tokens = jule::Slice<jule::Ptr<_23abd3d83_Token>>();
	

	_23abd921d_File(void) = default;

	inline bool operator==(_23abd921d_File _other) {
		return 
			this->_field_Path == _other._field_Path &&
			this->_field_Data == _other._field_Data &&
			this->_field_Tokens == _other._field_Tokens;
	}

	inline bool operator!=(_23abd921d_File _other) { return !this->operator==(_other); }


};
struct _23abdb275_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_23abdb275_kindPair(void) = default;

	inline bool operator==(_23abdb275_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_23abdb275_kindPair _other) { return !this->operator==(_other); }


};
inline void _23abe2413_pushErr(_23abe1d6e_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _23abe2732_pushErrTok(_23abe1d6e_lex*, jule::Ptr<_23abd3d83_Token>&, jule::Str);
inline void _23abe290d_lex(_23abe1d6e_lex*);
inline jule::Str _23abe2c1b_id(_23abe1d6e_lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _23abe2e80_resume(_23abe1d6e_lex*);
inline void _23abe3205_lexLineComment(_23abe1d6e_lex*, jule::Ptr<_23abd3d83_Token>&);
inline void _23abe347a_lexRangeComment(_23abe1d6e_lex*, jule::Ptr<_23abd3d83_Token>&);
inline jule::Str _23abe3788_num(_23abe1d6e_lex*, jule::Slice<jule::U8>&);
inline jule::Str _23abe3a96_escapeSeq(_23abe1d6e_lex*, jule::Slice<jule::U8>&);
inline jule::Str _23abe3e4d_getRune(_23abe1d6e_lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _23abe425b_lexRune(_23abe1d6e_lex*, jule::Slice<jule::U8>&);
inline jule::Str _23abe44c0_lexStr(_23abe1d6e_lex*);
inline jule::Bool _23abe4734_isFirstTokenOfLine(_23abe1d6e_lex*);
inline void _23abe4910_newLine(_23abe1d6e_lex*);
inline jule::Bool _23abe4e0a_isOp(_23abe1d6e_lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_23abd3d83_Token>&);
inline jule::Bool _23abe52b2_lexBasicOps(_23abe1d6e_lex*, jule::Slice<jule::U8>, jule::Ptr<_23abd3d83_Token>&);
inline jule::Bool _23abe5669_lexId(_23abe1d6e_lex*, jule::Slice<jule::U8>&, jule::Ptr<_23abd3d83_Token>&);
inline jule::Bool _23abe5a21_lexNum(_23abe1d6e_lex*, jule::Slice<jule::U8>&, jule::Ptr<_23abd3d83_Token>&);
inline jule::Ptr<_23abd3d83_Token> _23abe5c85_token(_23abe1d6e_lex*);
struct _23abe1d6e_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _field_tokens = jule::Slice<jule::Ptr<_23abd3d83_Token>>();
	jule::Ptr<_23abd921d_File> _field_file = jule::Ptr<_23abd921d_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_23a8a5ca8_Log> _field_errors = jule::Slice<_23a8a5ca8_Log>();
	

	_23abe1d6e_lex(void) = default;

	inline bool operator==(_23abe1d6e_lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_23abe1d6e_lex _other) { return !this->operator==(_other); }


};
struct _24900ba82_Ast {
	jule::Ptr<_23abd921d_File> _field_File = jule::Ptr<_23abd921d_File>();
	jule::Slice<jule::Ptr<_24900cb2c_Directive>> _field_TopDirectives = jule::Slice<jule::Ptr<_24900cb2c_Directive>>();
	jule::Slice<jule::Ptr<_24905de14_UseDecl>> _field_UseDecls = jule::Slice<jule::Ptr<_24905de14_UseDecl>>();
	jule::Slice<_24900c731_Node> _field_Nodes = jule::Slice<_24900c731_Node>();
	

	_24900ba82_Ast(void) = default;

	inline bool operator==(_24900ba82_Ast _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_TopDirectives == _other._field_TopDirectives &&
			this->_field_UseDecls == _other._field_UseDecls &&
			this->_field_Nodes == _other._field_Nodes;
	}

	inline bool operator!=(_24900ba82_Ast _other) { return !this->operator==(_other); }


};
struct _24900c731_Node {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Any _field_Data = jule::Any();
	

	_24900c731_Node(void) = default;

	inline bool operator==(_24900c731_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_24900c731_Node _other) { return !this->operator==(_other); }


};
struct _24900cb2c_Directive {
	jule::Ptr<_23abd3d83_Token> _field_Tag = jule::Ptr<_23abd3d83_Token>();
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _field_Args = jule::Slice<jule::Ptr<_23abd3d83_Token>>();
	

	_24900cb2c_Directive(void) = default;

	inline bool operator==(_24900cb2c_Directive _other) {
		return 
			this->_field_Tag == _other._field_Tag &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_24900cb2c_Directive _other) { return !this->operator==(_other); }


};
struct _2490463c4_TypeDecl {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Any _field_Kind = jule::Any();
	

	_2490463c4_TypeDecl(void) = default;

	inline bool operator==(_2490463c4_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2490463c4_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _249046ced_IsPrim(_24904698a_IdentTypeDecl*);
struct _24904698a_IdentTypeDecl {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_2490463c4_TypeDecl>> _field_Generics = jule::Slice<jule::Ptr<_2490463c4_TypeDecl>>();
	

	_24904698a_IdentTypeDecl(void) = default;

	inline bool operator==(_24904698a_IdentTypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_24904698a_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _2490470d9_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_24904698a_IdentTypeDecl>> _field_Idents = jule::Slice<jule::Ptr<_24904698a_IdentTypeDecl>>();
	

	_2490470d9_SubIdentTypeDecl(void) = default;

	inline bool operator==(_2490470d9_SubIdentTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_2490470d9_SubIdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _249047491_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _field_Idents = jule::Slice<jule::Ptr<_23abd3d83_Token>>();
	jule::Ptr<_2490463c4_TypeDecl> _field_Kind = jule::Ptr<_2490463c4_TypeDecl>();
	

	_249047491_NamespaceTypeDecl(void) = default;

	inline bool operator==(_249047491_NamespaceTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_249047491_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _24904777c_SptrTypeDecl {
	jule::Ptr<_2490463c4_TypeDecl> _field_Elem = jule::Ptr<_2490463c4_TypeDecl>();
	

	_24904777c_SptrTypeDecl(void) = default;

	inline bool operator==(_24904777c_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_24904777c_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _249047b78_SlcTypeDecl {
	jule::Ptr<_2490463c4_TypeDecl> _field_Elem = jule::Ptr<_2490463c4_TypeDecl>();
	

	_249047b78_SlcTypeDecl(void) = default;

	inline bool operator==(_249047b78_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_249047b78_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _249047e64_TupleTypeDecl {
	jule::Slice<jule::Ptr<_2490463c4_TypeDecl>> _field_Types = jule::Slice<jule::Ptr<_2490463c4_TypeDecl>>();
	

	_249047e64_TupleTypeDecl(void) = default;

	inline bool operator==(_249047e64_TupleTypeDecl _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_249047e64_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _2490485a2_IsUnsafe(_249048250_PtrTypeDecl*);
struct _249048250_PtrTypeDecl {
	jule::Ptr<_2490463c4_TypeDecl> _field_Elem = jule::Ptr<_2490463c4_TypeDecl>();
	

	_249048250_PtrTypeDecl(void) = default;

	inline bool operator==(_249048250_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_249048250_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _249048cab_AutoSized(_2490488d2_ArrTypeDecl*);
struct _2490488d2_ArrTypeDecl {
	jule::Ptr<_2490463c4_TypeDecl> _field_Elem = jule::Ptr<_2490463c4_TypeDecl>();
	jule::Ptr<_24904a8e5_Expr> _field_Size = jule::Ptr<_24904a8e5_Expr>();
	

	_2490488d2_ArrTypeDecl(void) = default;

	inline bool operator==(_2490488d2_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_2490488d2_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _249049130_MapTypeDecl {
	jule::Ptr<_2490463c4_TypeDecl> _field_Key = jule::Ptr<_2490463c4_TypeDecl>();
	jule::Ptr<_2490463c4_TypeDecl> _field_Val = jule::Ptr<_2490463c4_TypeDecl>();
	

	_249049130_MapTypeDecl(void) = default;

	inline bool operator==(_249049130_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_249049130_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _2490494d7_RetTypeDecl {
	jule::Ptr<_2490463c4_TypeDecl> _field_Kind = jule::Ptr<_2490463c4_TypeDecl>();
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _field_Idents = jule::Slice<jule::Ptr<_23abd3d83_Token>>();
	

	_2490494d7_RetTypeDecl(void) = default;

	inline bool operator==(_2490494d7_RetTypeDecl _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_2490494d7_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _24904a8e5_Expr {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_23abd3d83_Token> _field_End = jule::Ptr<_23abd3d83_Token>();
	jule::Any _field_Kind = jule::Any();
	

	_24904a8e5_Expr(void) = default;

	inline bool operator==(_24904a8e5_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_24904a8e5_Expr _other) { return !this->operator==(_other); }


};
struct _24904abd1_RangeExpr {
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	

	_24904abd1_RangeExpr(void) = default;

	inline bool operator==(_24904abd1_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24904abd1_RangeExpr _other) { return !this->operator==(_other); }


};
struct _24904b286_UseExpr {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	

	_24904b286_UseExpr(void) = default;

	inline bool operator==(_24904b286_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24904b286_UseExpr _other) { return !this->operator==(_other); }


};
struct _24904b572_TupleExpr {
	jule::Slice<jule::Ptr<_24904a8e5_Expr>> _field_Expr = jule::Slice<jule::Ptr<_24904a8e5_Expr>>();
	

	_24904b572_TupleExpr(void) = default;

	inline bool operator==(_24904b572_TupleExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24904b572_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _24904bc7b_IsNil(_24904b929_LitExpr*);
struct _24904b929_LitExpr {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Value = jule::Str();
	

	_24904b929_LitExpr(void) = default;

	inline bool operator==(_24904b929_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_24904b929_LitExpr _other) { return !this->operator==(_other); }


};
struct _24904c133_UnsafeExpr {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	

	_24904c133_UnsafeExpr(void) = default;

	inline bool operator==(_24904c133_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24904c133_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _24904c4da_CoExpr {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	

	_24904c4da_CoExpr(void) = default;

	inline bool operator==(_24904c4da_CoExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24904c4da_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _24904ccb0_IsSelf(_24904c95d_IdentExpr*);
struct _24904c95d_IdentExpr {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	

	_24904c95d_IdentExpr(void) = default;

	inline bool operator==(_24904c95d_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_24904c95d_IdentExpr _other) { return !this->operator==(_other); }


};
struct _24904d167_UnaryExpr {
	jule::Ptr<_23abd3d83_Token> _field_Op = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	

	_24904d167_UnaryExpr(void) = default;

	inline bool operator==(_24904d167_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24904d167_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _24904d51e_VariadicExpr {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	

	_24904d51e_VariadicExpr(void) = default;

	inline bool operator==(_24904d51e_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24904d51e_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _24904d8c6_CastExpr {
	jule::Ptr<_2490463c4_TypeDecl> _field_Kind = jule::Ptr<_2490463c4_TypeDecl>();
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	

	_24904d8c6_CastExpr(void) = default;

	inline bool operator==(_24904d8c6_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24904d8c6_CastExpr _other) { return !this->operator==(_other); }


};
struct _24904dc7d_NsSelectionExpr {
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _field_Ns = jule::Slice<jule::Ptr<_23abd3d83_Token>>();
	jule::Ptr<_23abd3d83_Token> _field_Ident = jule::Ptr<_23abd3d83_Token>();
	

	_24904dc7d_NsSelectionExpr(void) = default;

	inline bool operator==(_24904dc7d_NsSelectionExpr _other) {
		return 
			this->_field_Ns == _other._field_Ns &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_24904dc7d_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _24904e201_SubIdentExpr {
	jule::Bool _field_IsSelf = jule::Bool();
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	jule::Ptr<_23abd3d83_Token> _field_Ident = jule::Ptr<_23abd3d83_Token>();
	

	_24904e201_SubIdentExpr(void) = default;

	inline bool operator==(_24904e201_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_24904e201_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _24904e674_BinopExpr {
	jule::Ptr<_24904a8e5_Expr> _field_Left = jule::Ptr<_24904a8e5_Expr>();
	jule::Ptr<_24904a8e5_Expr> _field_Right = jule::Ptr<_24904a8e5_Expr>();
	jule::Ptr<_23abd3d83_Token> _field_Op = jule::Ptr<_23abd3d83_Token>();
	

	_24904e674_BinopExpr(void) = default;

	inline bool operator==(_24904e674_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_24904e674_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _249050026_Unhandled(_24904ebb3_FnCallExpr*);
inline jule::Bool _24905028a_Ignored(_24904ebb3_FnCallExpr*);
struct _24904ebb3_FnCallExpr {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	jule::Slice<jule::Ptr<_24904a8e5_Expr>> _field_Args = jule::Slice<jule::Ptr<_24904a8e5_Expr>>();
	jule::Ptr<_2490566e2_ScopeTree> _field_Exception = jule::Ptr<_2490566e2_ScopeTree>();
	

	_24904ebb3_FnCallExpr(void) = default;

	inline bool operator==(_24904ebb3_FnCallExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Exception == _other._field_Exception;
	}

	inline bool operator!=(_24904ebb3_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _249050994_IsTargeted(_249050642_FieldExprPair*);
struct _249050642_FieldExprPair {
	jule::Ptr<_23abd3d83_Token> _field_Field = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	

	_249050642_FieldExprPair(void) = default;

	inline bool operator==(_249050642_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_249050642_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _249050d90_StructLit {
	jule::Ptr<_23abd3d83_Token> _field_End = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_2490463c4_TypeDecl> _field_Kind = jule::Ptr<_2490463c4_TypeDecl>();
	jule::Slice<jule::Ptr<_24904a8e5_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_24904a8e5_Expr>>();
	

	_249050d90_StructLit(void) = default;

	inline bool operator==(_249050d90_StructLit _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_249050d90_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _249051984_IsEmpty(_249051313_BraceLit*);
struct _249051313_BraceLit {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_23abd3d83_Token> _field_End = jule::Ptr<_23abd3d83_Token>();
	jule::Slice<jule::Ptr<_24904a8e5_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_24904a8e5_Expr>>();
	

	_249051313_BraceLit(void) = default;

	inline bool operator==(_249051313_BraceLit _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_249051313_BraceLit _other) { return !this->operator==(_other); }


};
struct _249051d2a_KeyValPair {
	jule::Ptr<_24904a8e5_Expr> _field_Key = jule::Ptr<_24904a8e5_Expr>();
	jule::Ptr<_24904a8e5_Expr> _field_Val = jule::Ptr<_24904a8e5_Expr>();
	jule::Ptr<_23abd3d83_Token> _field_Colon = jule::Ptr<_23abd3d83_Token>();
	

	_249051d2a_KeyValPair(void) = default;

	inline bool operator==(_249051d2a_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_249051d2a_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _249052600_IsEmpty(_24905229d_SliceExpr*);
struct _24905229d_SliceExpr {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_23abd3d83_Token> _field_End = jule::Ptr<_23abd3d83_Token>();
	jule::Slice<jule::Ptr<_24904a8e5_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_24904a8e5_Expr>>();
	

	_24905229d_SliceExpr(void) = default;

	inline bool operator==(_24905229d_SliceExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_24905229d_SliceExpr _other) { return !this->operator==(_other); }


};
struct _249052b3e_IndexingExpr {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_23abd3d83_Token> _field_End = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	jule::Ptr<_24904a8e5_Expr> _field_Index = jule::Ptr<_24904a8e5_Expr>();
	

	_249052b3e_IndexingExpr(void) = default;

	inline bool operator==(_249052b3e_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_249052b3e_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _249053249_SlicingExpr {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_23abd3d83_Token> _field_End = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	jule::Ptr<_24904a8e5_Expr> _field_Start = jule::Ptr<_24904a8e5_Expr>();
	jule::Ptr<_24904a8e5_Expr> _field_To = jule::Ptr<_24904a8e5_Expr>();
	

	_249053249_SlicingExpr(void) = default;

	inline bool operator==(_249053249_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_249053249_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _249053535_Constraint {
	jule::Slice<jule::Ptr<_2490463c4_TypeDecl>> _field_Mask = jule::Slice<jule::Ptr<_2490463c4_TypeDecl>>();
	

	_249053535_Constraint(void) = default;

	inline bool operator==(_249053535_Constraint _other) {
		return 
			this->_field_Mask == _other._field_Mask;
	}

	inline bool operator!=(_249053535_Constraint _other) { return !this->operator==(_other); }


};
struct _2490539a8_GenericDecl {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_249053535_Constraint> _field_Constraint = jule::Ptr<_249053535_Constraint>();
	

	_2490539a8_GenericDecl(void) = default;

	inline bool operator==(_2490539a8_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_2490539a8_GenericDecl _other) { return !this->operator==(_other); }


};
struct _249053d60_LabelSt {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Ident = jule::Str();
	

	_249053d60_LabelSt(void) = default;

	inline bool operator==(_249053d60_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_249053d60_LabelSt _other) { return !this->operator==(_other); }


};
struct _249054217_GotoSt {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_23abd3d83_Token> _field_Label = jule::Ptr<_23abd3d83_Token>();
	

	_249054217_GotoSt(void) = default;

	inline bool operator==(_249054217_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_249054217_GotoSt _other) { return !this->operator==(_other); }


};
struct _249054503_FallSt {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	

	_249054503_FallSt(void) = default;

	inline bool operator==(_249054503_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_249054503_FallSt _other) { return !this->operator==(_other); }


};
struct _249054b0d_AssignLeft {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	

	_249054b0d_AssignLeft(void) = default;

	inline bool operator==(_249054b0d_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_249054b0d_AssignLeft _other) { return !this->operator==(_other); }


};
struct _24905514c_AssignSt {
	jule::Bool _field_Declarative = jule::Bool();
	jule::Ptr<_23abd3d83_Token> _field_Setter = jule::Ptr<_23abd3d83_Token>();
	jule::Slice<jule::Ptr<_249054b0d_AssignLeft>> _field_Left = jule::Slice<jule::Ptr<_249054b0d_AssignLeft>>();
	jule::Ptr<_24904a8e5_Expr> _field_Right = jule::Ptr<_24904a8e5_Expr>();
	

	_24905514c_AssignSt(void) = default;

	inline bool operator==(_24905514c_AssignSt _other) {
		return 
			this->_field_Declarative == _other._field_Declarative &&
			this->_field_Setter == _other._field_Setter &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_24905514c_AssignSt _other) { return !this->operator==(_other); }


};
struct _2490560d7_Stmt {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Any _field_Data = jule::Any();
	

	_2490560d7_Stmt(void) = default;

	inline bool operator==(_2490560d7_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_2490560d7_Stmt _other) { return !this->operator==(_other); }


};
struct _2490566e2_ScopeTree {
	jule::Ptr<_2490566e2_ScopeTree> _field_Parent = jule::Ptr<_2490566e2_ScopeTree>();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Deferred = jule::Bool();
	jule::Slice<_2490560d7_Stmt> _field_Stmts = jule::Slice<_2490560d7_Stmt>();
	jule::Ptr<_23abd3d83_Token> _field_End = jule::Ptr<_23abd3d83_Token>();
	

	_2490566e2_ScopeTree(void) = default;

	inline bool operator==(_2490566e2_ScopeTree _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_2490566e2_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _24905722b_IsSelf(_249056db8_ParamDecl*);
inline jule::Bool _249057490_IsRef(_249056db8_ParamDecl*);
struct _249056db8_ParamDecl {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_2490463c4_TypeDecl> _field_Kind = jule::Ptr<_2490463c4_TypeDecl>();
	jule::Str _field_Ident = jule::Str();
	

	_249056db8_ParamDecl(void) = default;

	inline bool operator==(_249056db8_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_249056db8_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _24905853a_IsAnon(_2490581d8_FnDecl*);
struct _2490581d8_FnDecl {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Bool _field_Global = jule::Bool();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Exceptional = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_24900cb2c_Directive>> _field_Directives = jule::Slice<jule::Ptr<_24900cb2c_Directive>>();
	jule::Ptr<_2490566e2_ScopeTree> _field_Scope = jule::Ptr<_2490566e2_ScopeTree>();
	jule::Slice<jule::Ptr<_2490539a8_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_2490539a8_GenericDecl>>();
	jule::Ptr<_2490494d7_RetTypeDecl> _field_Result = jule::Ptr<_2490494d7_RetTypeDecl>();
	jule::Slice<jule::Ptr<_249056db8_ParamDecl>> _field_Params = jule::Slice<jule::Ptr<_249056db8_ParamDecl>>();
	

	_2490581d8_FnDecl(void) = default;

	inline bool operator==(_2490581d8_FnDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params;
	}

	inline bool operator!=(_2490581d8_FnDecl _other) { return !this->operator==(_other); }


};
struct _2490591b7_VarDecl {
	jule::Ptr<_2490566e2_ScopeTree> _field_Scope = jule::Ptr<_2490566e2_ScopeTree>();
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Constant = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Slice<jule::Ptr<_24900cb2c_Directive>> _field_Directives = jule::Slice<jule::Ptr<_24900cb2c_Directive>>();
	jule::Ptr<_2490463c4_TypeDecl> _field_Kind = jule::Ptr<_2490463c4_TypeDecl>();
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	

	_2490591b7_VarDecl(void) = default;

	inline bool operator==(_2490591b7_VarDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2490591b7_VarDecl _other) { return !this->operator==(_other); }


};
struct _24905956e_RetSt {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	

	_24905956e_RetSt(void) = default;

	inline bool operator==(_24905956e_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24905956e_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _24905a031_IsInf(_249059bce_Iter*);
struct _249059bce_Iter {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Any _field_Kind = jule::Any();
	jule::Ptr<_2490566e2_ScopeTree> _field_Scope = jule::Ptr<_2490566e2_ScopeTree>();
	

	_249059bce_Iter(void) = default;

	inline bool operator==(_249059bce_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_249059bce_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _24905a806_IsWhileNext(_24905a4a4_WhileKind*);
struct _24905a4a4_WhileKind {
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	jule::Any _field_Next = jule::Any();
	jule::Ptr<_23abd3d83_Token> _field_NextToken = jule::Ptr<_23abd3d83_Token>();
	

	_24905a4a4_WhileKind(void) = default;

	inline bool operator==(_24905a4a4_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_24905a4a4_WhileKind _other) { return !this->operator==(_other); }


};
struct _24905ad45_RangeKind {
	jule::Ptr<_23abd3d83_Token> _field_InToken = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	jule::Ptr<_2490591b7_VarDecl> _field_KeyA = jule::Ptr<_2490591b7_VarDecl>();
	jule::Ptr<_2490591b7_VarDecl> _field_KeyB = jule::Ptr<_2490591b7_VarDecl>();
	

	_24905ad45_RangeKind(void) = default;

	inline bool operator==(_24905ad45_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_24905ad45_RangeKind _other) { return !this->operator==(_other); }


};
struct _24905b1ec_BreakSt {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_23abd3d83_Token> _field_Label = jule::Ptr<_23abd3d83_Token>();
	

	_24905b1ec_BreakSt(void) = default;

	inline bool operator==(_24905b1ec_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_24905b1ec_BreakSt _other) { return !this->operator==(_other); }


};
struct _24905b5a4_ContSt {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_23abd3d83_Token> _field_Label = jule::Ptr<_23abd3d83_Token>();
	

	_24905b5a4_ContSt(void) = default;

	inline bool operator==(_24905b5a4_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_24905b5a4_ContSt _other) { return !this->operator==(_other); }


};
struct _24905ba27_If {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	jule::Ptr<_2490566e2_ScopeTree> _field_Scope = jule::Ptr<_2490566e2_ScopeTree>();
	

	_24905ba27_If(void) = default;

	inline bool operator==(_24905ba27_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_24905ba27_If _other) { return !this->operator==(_other); }


};
struct _24905bdce_Else {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_2490566e2_ScopeTree> _field_Scope = jule::Ptr<_2490566e2_ScopeTree>();
	

	_24905bdce_Else(void) = default;

	inline bool operator==(_24905bdce_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_24905bdce_Else _other) { return !this->operator==(_other); }


};
struct _24905c352_Conditional {
	jule::Ptr<_24905ba27_If> _field_Head = jule::Ptr<_24905ba27_If>();
	jule::Slice<jule::Ptr<_24905ba27_If>> _field_Tail = jule::Slice<jule::Ptr<_24905ba27_If>>();
	jule::Ptr<_24905bdce_Else> _field_Default = jule::Ptr<_24905bdce_Else>();
	

	_24905c352_Conditional(void) = default;

	inline bool operator==(_24905c352_Conditional _other) {
		return 
			this->_field_Head == _other._field_Head &&
			this->_field_Tail == _other._field_Tail &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_24905c352_Conditional _other) { return !this->operator==(_other); }


};
struct _24905ca28_TypeAliasDecl {
	jule::Ptr<_2490566e2_ScopeTree> _field_Scope = jule::Ptr<_2490566e2_ScopeTree>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_2490463c4_TypeDecl> _field_Kind = jule::Ptr<_2490463c4_TypeDecl>();
	

	_24905ca28_TypeAliasDecl(void) = default;

	inline bool operator==(_24905ca28_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_24905ca28_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _24905ce9b_Case {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_2490566e2_ScopeTree> _field_Scope = jule::Ptr<_2490566e2_ScopeTree>();
	jule::Slice<jule::Ptr<_24904a8e5_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_24904a8e5_Expr>>();
	

	_24905ce9b_Case(void) = default;

	inline bool operator==(_24905ce9b_Case _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_24905ce9b_Case _other) { return !this->operator==(_other); }


};
struct _24905d672_MatchCase {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_23abd3d83_Token> _field_End = jule::Ptr<_23abd3d83_Token>();
	jule::Bool _field_TypeMatch = jule::Bool();
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	jule::Slice<jule::Ptr<_24905ce9b_Case>> _field_Cases = jule::Slice<jule::Ptr<_24905ce9b_Case>>();
	jule::Ptr<_24905bdce_Else> _field_Default = jule::Ptr<_24905bdce_Else>();
	

	_24905d672_MatchCase(void) = default;

	inline bool operator==(_24905d672_MatchCase _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_24905d672_MatchCase _other) { return !this->operator==(_other); }


};
struct _24905de14_UseDecl {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_LinkPath = jule::Str();
	jule::Str _field_Alias = jule::Str();
	jule::Bool _field_Full = jule::Bool();
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _field_Selected = jule::Slice<jule::Ptr<_23abd3d83_Token>>();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Std = jule::Bool();
	

	_24905de14_UseDecl(void) = default;

	inline bool operator==(_24905de14_UseDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Full == _other._field_Full &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std;
	}

	inline bool operator!=(_24905de14_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _24905e6d9_AutoExpr(_24905e387_EnumItemDecl*);
struct _24905e387_EnumItemDecl {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	

	_24905e387_EnumItemDecl(void) = default;

	inline bool operator==(_24905e387_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24905e387_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _249060443_DefaultTyped(_24905edb0_EnumDecl*);
struct _24905edb0_EnumDecl {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_2490463c4_TypeDecl> _field_Kind = jule::Ptr<_2490463c4_TypeDecl>();
	jule::Slice<jule::Ptr<_24905e387_EnumItemDecl>> _field_Items = jule::Slice<jule::Ptr<_24905e387_EnumItemDecl>>();
	jule::Ptr<_23abd3d83_Token> _field_End = jule::Ptr<_23abd3d83_Token>();
	

	_24905edb0_EnumDecl(void) = default;

	inline bool operator==(_24905edb0_EnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_24905edb0_EnumDecl _other) { return !this->operator==(_other); }


};
struct _2490608b6_TypeEnumItemDecl {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_2490463c4_TypeDecl> _field_Kind = jule::Ptr<_2490463c4_TypeDecl>();
	

	_2490608b6_TypeEnumItemDecl(void) = default;

	inline bool operator==(_2490608b6_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2490608b6_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _249060ab4_TypeEnumDecl {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_2490608b6_TypeEnumItemDecl>> _field_Items = jule::Slice<jule::Ptr<_2490608b6_TypeEnumItemDecl>>();
	jule::Ptr<_23abd3d83_Token> _field_End = jule::Ptr<_23abd3d83_Token>();
	

	_249060ab4_TypeEnumDecl(void) = default;

	inline bool operator==(_249060ab4_TypeEnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_249060ab4_TypeEnumDecl _other) { return !this->operator==(_other); }


};
struct _249061114_FieldDecl {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_2490463c4_TypeDecl> _field_Kind = jule::Ptr<_2490463c4_TypeDecl>();
	jule::Ptr<_24904a8e5_Expr> _field_Default = jule::Ptr<_24904a8e5_Expr>();
	

	_249061114_FieldDecl(void) = default;

	inline bool operator==(_249061114_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_249061114_FieldDecl _other) { return !this->operator==(_other); }


};
struct _249061972_StructDecl {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_23abd3d83_Token> _field_End = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_249061114_FieldDecl>> _field_Fields = jule::Slice<jule::Ptr<_249061114_FieldDecl>>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_24900cb2c_Directive>> _field_Directives = jule::Slice<jule::Ptr<_24900cb2c_Directive>>();
	jule::Slice<jule::Ptr<_2490539a8_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_2490539a8_GenericDecl>>();
	

	_249061972_StructDecl(void) = default;

	inline bool operator==(_249061972_StructDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_249061972_StructDecl _other) { return !this->operator==(_other); }


};
struct _24906207c_TraitDecl {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_23abd3d83_Token> _field_End = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_Public = jule::Bool();
	jule::Slice<jule::Ptr<_2490581d8_FnDecl>> _field_Methods = jule::Slice<jule::Ptr<_2490581d8_FnDecl>>();
	

	_24906207c_TraitDecl(void) = default;

	inline bool operator==(_24906207c_TraitDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Methods == _other._field_Methods;
	}

	inline bool operator!=(_24906207c_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _2490629ea_IsTraitImpl(_249062687_Impl*);
inline jule::Bool _249062c5e_IsStructImpl(_249062687_Impl*);
struct _249062687_Impl {
	jule::Ptr<_23abd3d83_Token> _field_End = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_2490463c4_TypeDecl> _field_Base = jule::Ptr<_2490463c4_TypeDecl>();
	jule::Ptr<_2490463c4_TypeDecl> _field_Dest = jule::Ptr<_2490463c4_TypeDecl>();
	jule::Slice<jule::Ptr<_2490581d8_FnDecl>> _field_Methods = jule::Slice<jule::Ptr<_2490581d8_FnDecl>>();
	jule::Slice<jule::Ptr<_2490591b7_VarDecl>> _field_Statics = jule::Slice<jule::Ptr<_2490591b7_VarDecl>>();
	

	_249062687_Impl(void) = default;

	inline bool operator==(_249062687_Impl _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_249062687_Impl _other) { return !this->operator==(_other); }


};
struct _24979546e_floatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();
	

	_24979546e_floatInfo(void) = default;

	inline bool operator==(_24979546e_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_24979546e_floatInfo _other) { return !this->operator==(_other); }


};
struct _2398213c8_decimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	

	_2398213c8_decimalSlice(void) = default;

	inline bool operator==(_2398213c8_decimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_2398213c8_decimalSlice _other) { return !this->operator==(_other); }


};
struct _249bc0679_leftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();
	

	_249bc0679_leftCheat(void) = default;

	inline bool operator==(_249bc0679_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_249bc0679_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _2496a74c4_set(_249bc09dc_decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _249617e3a_floatBits(_249bc09dc_decimal*, _24979546e_floatInfo&);
inline void _249bc0bc9_assign(_249bc09dc_decimal*, jule::U64);
inline void _249bc0d0b_shift(_249bc09dc_decimal*, jule::I64);
inline void _249bc0e3d_roundDown(_249bc09dc_decimal*, jule::I64);
inline void _249bc1070_roundUp(_249bc09dc_decimal*, jule::I64);
inline void _249bc11a2_round(_249bc09dc_decimal*, jule::I64);
inline jule::U64 _249bc12d4_roundedInteger(_249bc09dc_decimal*);
struct _249bc09dc_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();
	

	_249bc09dc_decimal(void) = default;

	inline bool operator==(_249bc09dc_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_249bc09dc_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2491152a6_Const> static__2491257e4_NewI64(jule::I64);
inline jule::Ptr<_2491152a6_Const> static__24913c82d_NewU64(jule::U64);
inline jule::Ptr<_2491152a6_Const> static__2491571c7_NewBool(jule::Bool);
inline jule::Ptr<_2491152a6_Const> static__249159020_NewStr(jule::Str);
inline jule::Ptr<_2491152a6_Const> static__24915a20d_NewF64(jule::F64);
inline jule::Ptr<_2491152a6_Const> static__24915a95b_NewNil(void);
inline jule::I64 _24915c551_ReadI64(_2491152a6_Const*);
inline jule::U64 _24915d73e_ReadU64(_2491152a6_Const*);
inline jule::Bool _24915de8c_ReadBool(_2491152a6_Const*);
inline jule::Str _249166824_ReadStr(_2491152a6_Const*);
inline jule::F64 _2491673a2_ReadF64(_2491152a6_Const*);
inline jule::I64 _249168260_AsI64(_2491152a6_Const*);
inline jule::U64 _24915c3a8_AsU64(_2491152a6_Const*);
inline jule::F64 _24916922d_AsF64(_2491152a6_Const*);
inline void _24916a0db_SetI64(_2491152a6_Const*, jule::I64);
inline void _24917646b_SetU64(_2491152a6_Const*, jule::U64);
inline void _249177d96_SetBool(_2491152a6_Const*, jule::Bool);
inline void _24917acde_SetStr(_2491152a6_Const*, jule::Str);
inline void _24917b828_SetF64(_2491152a6_Const*, jule::F64);
inline void _24917c3a6_SetNil(_2491152a6_Const*);
inline jule::Bool _24916a839_IsI64(_2491152a6_Const*);
inline jule::Bool _249177a22_IsU64(_2491152a6_Const*);
inline jule::Bool _2491273d9_IsBool(_2491152a6_Const*);
inline jule::Bool _24912982b_IsStr(_2491152a6_Const*);
inline jule::Bool _2491660d7_IsF64(_2491152a6_Const*);
inline jule::Bool _2491773c3_IsNil(_2491152a6_Const*);
inline jule::Bool _249bc47c1_AreSameTypes(_2491152a6_Const*, _2491152a6_Const);
inline jule::Bool _249bc4903_And(_2491152a6_Const*, _2491152a6_Const);
inline jule::Bool _249bc4a35_Or(_2491152a6_Const*, _2491152a6_Const);
inline jule::Bool _249bc4b67_Eq(_2491152a6_Const*, _2491152a6_Const);
inline jule::Bool _249bc4c99_Lt(_2491152a6_Const*, _2491152a6_Const);
inline jule::Bool _249bc4dcb_LtEq(_2491152a6_Const*, _2491152a6_Const);
inline jule::Bool _249bc500d_Gt(_2491152a6_Const*, _2491152a6_Const);
inline jule::Bool _249bc5140_GtEq(_2491152a6_Const*, _2491152a6_Const);
inline jule::Bool _249bc5272_Add(_2491152a6_Const*, _2491152a6_Const);
inline jule::Bool _249bc53a4_Sub(_2491152a6_Const*, _2491152a6_Const);
inline jule::Bool _249bc54d6_Mul(_2491152a6_Const*, _2491152a6_Const);
inline jule::Bool _249bc5618_Div(_2491152a6_Const*, _2491152a6_Const);
inline jule::Bool _249bc574a_Mod(_2491152a6_Const*, _2491152a6_Const);
inline jule::Bool _249bc587c_BitwiseAnd(_2491152a6_Const*, _2491152a6_Const);
inline jule::Bool _249bc59ae_BitwiseOr(_2491152a6_Const*, _2491152a6_Const);
inline jule::Bool _249bc5ae1_Xor(_2491152a6_Const*, _2491152a6_Const);
inline jule::Bool _249bc5c23_Lshift(_2491152a6_Const*, _2491152a6_Const);
inline jule::Bool _249bc5d55_Rshift(_2491152a6_Const*, _2491152a6_Const);
struct _2491152a6_Const {
	jule::Str _field_Kind = jule::Str();
	jule::Any _field_data = jule::Any();
	

	_2491152a6_Const(void) = default;

	inline jule::Bool operator==(_2491152a6_Const _other) { return _249bc4b67_Eq(this, _other); }

	inline bool operator!=(_2491152a6_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_2491152a6_Const _other) { return _249bc500d_Gt(this, _other); }

	inline jule::Bool operator>=(_2491152a6_Const _other) { return _249bc5140_GtEq(this, _other); }

	inline jule::Bool operator<(_2491152a6_Const _other) { return _249bc4c99_Lt(this, _other); }

	inline jule::Bool operator<=(_2491152a6_Const _other) { return _249bc4dcb_LtEq(this, _other); }


};
inline jule::Ptr<_24903e268_FieldIns> _248e13824_instance(jule::Ptr<_24902413d_Field>);
struct _24902413d_Field {
	jule::Ptr<_249036b01_Struct> _field_Owner = jule::Ptr<_249036b01_Struct>();
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_249cb48e4_TypeSymbol> _field_Kind = jule::Ptr<_249cb48e4_TypeSymbol>();
	jule::Ptr<_24904a8e5_Expr> _field_Default = jule::Ptr<_24904a8e5_Expr>();
	

	_24902413d_Field(void) = default;

	inline bool operator==(_24902413d_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_24902413d_Field _other) { return !this->operator==(_other); }


};
struct _24903852b_Operators {
	jule::Ptr<_249bcc312_FnIns> _field_Eq = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_Gt = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_GtEq = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_Lt = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_LtEq = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_Shl = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_Shr = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_Add = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_Sub = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_Div = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_Mul = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_Mod = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_BitAnd = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_BitOr = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_BitXor = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_Neg = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_Pos = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_BitNot = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_AddAssign = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_SubAssign = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_DivAssign = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_MulAssign = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_ModAssign = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_ShlAssign = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_ShrAssign = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_BitOrAssign = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_BitAndAssign = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc312_FnIns> _field_BitXorAssign = jule::Ptr<_249bcc312_FnIns>();
	

	_24903852b_Operators(void) = default;

	inline bool operator==(_24903852b_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_24903852b_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_249062e4b_StructIns> _249012d63_instance(jule::Ptr<_249036b01_Struct>);
inline jule::Ptr<_249062e4b_StructIns> _249018e57_appendInstance(_249036b01_Struct*, jule::Ptr<_249062e4b_StructIns>&);
inline jule::Ptr<_249bcbe38_Fn> _24901d1c0_FindMethod(_249036b01_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_249c3702b_Var> _249020e70_FindStatic(_249036b01_Struct*, jule::Str);
inline jule::Ptr<_24902413d_Field> _249021e82_FindField(_249036b01_Struct*, jule::Str);
inline jule::Bool _2490213c1_IsImplements(_249036b01_Struct*, jule::Ptr<_249bd48d0_Trait>);
inline jule::Bool _2490237be_IsDerives(_249036b01_Struct*, jule::Str);
inline jule::Bool _249022aa9_IsUses(_249036b01_Struct*, jule::Ptr<_249036b01_Struct>);
inline jule::Bool _249026a9c_HasRefAccessible(_249036b01_Struct*);
struct _249036b01_Struct {
	jule::Ptr<_249c192c7_Sema> _field_sema = jule::Ptr<_249c192c7_Sema>();
	jule::Slice<jule::Ptr<_249036b01_Struct>> _field_Depends = jule::Slice<jule::Ptr<_249036b01_Struct>>();
	jule::Slice<jule::Ptr<_249036b01_Struct>> _field_Uses = jule::Slice<jule::Ptr<_249036b01_Struct>>();
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_24902413d_Field>> _field_Fields = jule::Slice<jule::Ptr<_24902413d_Field>>();
	jule::Slice<jule::Ptr<_249bcbe38_Fn>> _field_Methods = jule::Slice<jule::Ptr<_249bcbe38_Fn>>();
	jule::Slice<jule::Ptr<_249c3702b_Var>> _field_Statics = jule::Slice<jule::Ptr<_249c3702b_Var>>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_24900cb2c_Directive>> _field_Directives = jule::Slice<jule::Ptr<_24900cb2c_Directive>>();
	jule::Slice<jule::Ptr<_2490539a8_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_2490539a8_GenericDecl>>();
	jule::Slice<jule::Ptr<_249bd48d0_Trait>> _field_Implements = jule::Slice<jule::Ptr<_249bd48d0_Trait>>();
	jule::Slice<jule::Ptr<_249062e4b_StructIns>> _field_Instances = jule::Slice<jule::Ptr<_249062e4b_StructIns>>();
	

	_249036b01_Struct(void) = default;

	inline bool operator==(_249036b01_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Depends == _other._field_Depends &&
			this->_field_Uses == _other._field_Uses &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Implements == _other._field_Implements &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_249036b01_Struct _other) { return !this->operator==(_other); }


};
struct _24903e268_FieldIns {
	jule::Ptr<_24902413d_Field> _field_Decl = jule::Ptr<_24902413d_Field>();
	jule::Ptr<_249cb078b_TypeKind> _field_Kind = jule::Ptr<_249cb078b_TypeKind>();
	jule::Ptr<_249c80052_Data> _field_Default = jule::Ptr<_249c80052_Data>();
	

	_24903e268_FieldIns(void) = default;

	inline bool operator==(_24903e268_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_24903e268_FieldIns _other) { return !this->operator==(_other); }


};
struct _249bc61eb_OperandExprModel {
	jule::Ptr<_249cb078b_TypeKind> _field_Kind = jule::Ptr<_249cb078b_TypeKind>();
	jule::Any _field_Model = jule::Any();
	

	_249bc61eb_OperandExprModel(void) = default;

	inline bool operator==(_249bc61eb_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_249bc61eb_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _249bc63d8_BinopExprModel {
	jule::Ptr<_249bc61eb_OperandExprModel> _field_Left = jule::Ptr<_249bc61eb_OperandExprModel>();
	jule::Ptr<_249bc61eb_OperandExprModel> _field_Right = jule::Ptr<_249bc61eb_OperandExprModel>();
	jule::Ptr<_23abd3d83_Token> _field_Op = jule::Ptr<_23abd3d83_Token>();
	

	_249bc63d8_BinopExprModel(void) = default;

	inline bool operator==(_249bc63d8_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_249bc63d8_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _249bc65c5_UnaryExprModel {
	jule::Ptr<_249c80052_Data> _field_Expr = jule::Ptr<_249c80052_Data>();
	jule::Ptr<_23abd3d83_Token> _field_Op = jule::Ptr<_23abd3d83_Token>();
	

	_249bc65c5_UnaryExprModel(void) = default;

	inline bool operator==(_249bc65c5_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_249bc65c5_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _249bc67b2_StructArgExprModel {
	jule::Ptr<_24903e268_FieldIns> _field_Field = jule::Ptr<_24903e268_FieldIns>();
	jule::Any _field_Expr = jule::Any();
	

	_249bc67b2_StructArgExprModel(void) = default;

	inline bool operator==(_249bc67b2_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_249bc67b2_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _249bc699e_StructLitExprModel {
	jule::Ptr<_249062e4b_StructIns> _field_Strct = jule::Ptr<_249062e4b_StructIns>();
	jule::Slice<jule::Ptr<_249bc67b2_StructArgExprModel>> _field_Args = jule::Slice<jule::Ptr<_249bc67b2_StructArgExprModel>>();
	

	_249bc699e_StructLitExprModel(void) = default;

	inline bool operator==(_249bc699e_StructLitExprModel _other) {
		return 
			this->_field_Strct == _other._field_Strct &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_249bc699e_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _249bc6b8b_AllocStructLitExprModel {
	jule::Ptr<_249bc699e_StructLitExprModel> _field_Lit = jule::Ptr<_249bc699e_StructLitExprModel>();
	

	_249bc6b8b_AllocStructLitExprModel(void) = default;

	inline bool operator==(_249bc6b8b_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_249bc6b8b_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _249bc6d78_CastingExprModel {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_249cb078b_TypeKind> _field_Kind = jule::Ptr<_249cb078b_TypeKind>();
	jule::Ptr<_249cb078b_TypeKind> _field_ExprKind = jule::Ptr<_249cb078b_TypeKind>();
	

	_249bc6d78_CastingExprModel(void) = default;

	inline bool operator==(_249bc6d78_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_249bc6d78_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _249bc7065_FnCallExprModel {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_249bcc312_FnIns> _field_Func = jule::Ptr<_249bcc312_FnIns>();
	jule::Bool _field_IsCo = jule::Bool();
	jule::Any _field_Expr = jule::Any();
	jule::Slice<jule::Any> _field_Args = jule::Slice<jule::Any>();
	jule::Ptr<_249be2635_Scope> _field_Except = jule::Ptr<_249be2635_Scope>();
	jule::Bool _field_Assigned = jule::Bool();
	

	_249bc7065_FnCallExprModel(void) = default;

	inline bool operator==(_249bc7065_FnCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Func == _other._field_Func &&
			this->_field_IsCo == _other._field_IsCo &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Except == _other._field_Except &&
			this->_field_Assigned == _other._field_Assigned;
	}

	inline bool operator!=(_249bc7065_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _249bc7252_SliceExprModel {
	jule::Ptr<_249cb078b_TypeKind> _field_ElemKind = jule::Ptr<_249cb078b_TypeKind>();
	jule::Slice<jule::Any> _field_Elems = jule::Slice<jule::Any>();
	

	_249bc7252_SliceExprModel(void) = default;

	inline bool operator==(_249bc7252_SliceExprModel _other) {
		return 
			this->_field_ElemKind == _other._field_ElemKind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_249bc7252_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _249bc743e_IndexingExprModel {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_249c80052_Data> _field_Expr = jule::Ptr<_249c80052_Data>();
	jule::Ptr<_249c80052_Data> _field_Index = jule::Ptr<_249c80052_Data>();
	

	_249bc743e_IndexingExprModel(void) = default;

	inline bool operator==(_249bc743e_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_249bc743e_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _249bc762b_AnonFnExprModel {
	jule::Ptr<_249bcc312_FnIns> _field_Func = jule::Ptr<_249bcc312_FnIns>();
	jule::Bool _field_Global = jule::Bool();
	

	_249bc762b_AnonFnExprModel(void) = default;

	inline bool operator==(_249bc762b_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_249bc762b_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _249bc7818_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any();
	jule::Any _field_Val = jule::Any();
	

	_249bc7818_KeyValPairExprModel(void) = default;

	inline bool operator==(_249bc7818_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_249bc7818_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _249bc7a05_MapExprModel {
	jule::Ptr<_249cb078b_TypeKind> _field_KeyKind = jule::Ptr<_249cb078b_TypeKind>();
	jule::Ptr<_249cb078b_TypeKind> _field_ValKind = jule::Ptr<_249cb078b_TypeKind>();
	jule::Slice<jule::Ptr<_249bc7818_KeyValPairExprModel>> _field_Entries = jule::Slice<jule::Ptr<_249bc7818_KeyValPairExprModel>>();
	

	_249bc7a05_MapExprModel(void) = default;

	inline bool operator==(_249bc7a05_MapExprModel _other) {
		return 
			this->_field_KeyKind == _other._field_KeyKind &&
			this->_field_ValKind == _other._field_ValKind &&
			this->_field_Entries == _other._field_Entries;
	}

	inline bool operator!=(_249bc7a05_MapExprModel _other) { return !this->operator==(_other); }


};
struct _249bc7be2_SlicingExprModel {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Left = jule::Any();
	jule::Any _field_Right = jule::Any();
	

	_249bc7be2_SlicingExprModel(void) = default;

	inline bool operator==(_249bc7be2_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_249bc7be2_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _249bc7dce_TraitSubIdentExprModel {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_249bcbe38_Fn> _field_Method = jule::Ptr<_249bcbe38_Fn>();
	jule::Ptr<_249bd48d0_Trait> _field_Trt = jule::Ptr<_249bd48d0_Trait>();
	

	_249bc7dce_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_249bc7dce_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_249bc7dce_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _249bc82ec_StructSubIdentExprModel {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_249c80052_Data> _field_Expr = jule::Ptr<_249c80052_Data>();
	jule::Ptr<_249cb078b_TypeKind> _field_ExprKind = jule::Ptr<_249cb078b_TypeKind>();
	jule::Ptr<_249bcc312_FnIns> _field_Method = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_24903e268_FieldIns> _field_Field = jule::Ptr<_24903e268_FieldIns>();
	jule::Ptr<_249062e4b_StructIns> _field_Owner = jule::Ptr<_249062e4b_StructIns>();
	

	_249bc82ec_StructSubIdentExprModel(void) = default;

	inline bool operator==(_249bc82ec_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_249bc82ec_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _249bc84d9_StructStaticIdentExprModel {
	jule::Ptr<_249062e4b_StructIns> _field_Structure = jule::Ptr<_249062e4b_StructIns>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_249bcc312_FnIns> _field_Method = jule::Ptr<_249bcc312_FnIns>();
	

	_249bc84d9_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_249bc84d9_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_249bc84d9_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _249bc86c6_ArrayExprModel {
	jule::Ptr<_249cbb5ee_Arr> _field_Kind = jule::Ptr<_249cbb5ee_Arr>();
	jule::Slice<jule::Any> _field_Elems = jule::Slice<jule::Any>();
	

	_249bc86c6_ArrayExprModel(void) = default;

	inline bool operator==(_249bc86c6_ArrayExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_249bc86c6_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _249bc88b3_CommonIdentExprModel {
	jule::Str _field_Ident = jule::Str();
	

	_249bc88b3_CommonIdentExprModel(void) = default;

	inline bool operator==(_249bc88b3_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_249bc88b3_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _249bc8aa0_CommonSubIdentExprModel {
	jule::Ptr<_249cb078b_TypeKind> _field_ExprKind = jule::Ptr<_249cb078b_TypeKind>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Ident = jule::Str();
	

	_249bc8aa0_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_249bc8aa0_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_249bc8aa0_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _249bc8c8c_TupleExprModel {
	jule::Slice<jule::Ptr<_249c80052_Data>> _field_Datas = jule::Slice<jule::Ptr<_249c80052_Data>>();
	

	_249bc8c8c_TupleExprModel(void) = default;

	inline bool operator==(_249bc8c8c_TupleExprModel _other) {
		return 
			this->_field_Datas == _other._field_Datas;
	}

	inline bool operator!=(_249bc8c8c_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _249bc8e79_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any();
	jule::Bool _field_Debug = jule::Bool();
	

	_249bc8e79_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_249bc8e79_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_249bc8e79_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _249bc9166_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any();
	jule::Bool _field_Debug = jule::Bool();
	

	_249bc9166_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_249bc9166_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_249bc9166_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _249bc9353_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_249bc9353_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_249bc9353_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_249bc9353_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _249bc9540_BuiltinNewCallExprModel {
	jule::Ptr<_249cb078b_TypeKind> _field_Kind = jule::Ptr<_249cb078b_TypeKind>();
	jule::Any _field_Init = jule::Any();
	

	_249bc9540_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_249bc9540_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_249bc9540_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _249bc972c_BuiltinPanicCallExprModel {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Any _field_Expr = jule::Any();
	

	_249bc972c_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_249bc972c_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_249bc972c_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _249bc9919_BuiltinAssertCallExprModel {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Str _field_Log = jule::Str();
	

	_249bc9919_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_249bc9919_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_249bc9919_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _249bc9b06_BuiltinMakeCallExprModel {
	jule::Ptr<_249cb078b_TypeKind> _field_Kind = jule::Ptr<_249cb078b_TypeKind>();
	jule::Any _field_Len = jule::Any();
	jule::Any _field_Cap = jule::Any();
	

	_249bc9b06_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_249bc9b06_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_249bc9b06_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _249bc9ce3_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Any _field_Elements = jule::Any();
	

	_249bc9ce3_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_249bc9ce3_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_249bc9ce3_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _249bc9ed0_BuiltinLenCallExprModel {
	jule::Ptr<_249c80052_Data> _field_Expr = jule::Ptr<_249c80052_Data>();
	

	_249bc9ed0_BuiltinLenCallExprModel(void) = default;

	inline bool operator==(_249bc9ed0_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_249bc9ed0_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _249bca1bc_BuiltinCapCallExprModel {
	jule::Ptr<_249c80052_Data> _field_Expr = jule::Ptr<_249c80052_Data>();
	

	_249bca1bc_BuiltinCapCallExprModel(void) = default;

	inline bool operator==(_249bca1bc_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_249bca1bc_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _249bc80bb_BuiltinDeleteCallExprModel {
	jule::Ptr<_249c80052_Data> _field_Dest = jule::Ptr<_249c80052_Data>();
	jule::Ptr<_249c80052_Data> _field_Key = jule::Ptr<_249c80052_Data>();
	

	_249bc80bb_BuiltinDeleteCallExprModel(void) = default;

	inline bool operator==(_249bc80bb_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_249bc80bb_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _249bca82c_BuiltinCopyCallExprModel {
	jule::Ptr<_249c80052_Data> _field_Dest = jule::Ptr<_249c80052_Data>();
	jule::Ptr<_249c80052_Data> _field_Src = jule::Ptr<_249c80052_Data>();
	

	_249bca82c_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_249bca82c_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_249bca82c_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _249bcaa19_BuiltinErrorCallExprModel {
	jule::Ptr<_249bcc312_FnIns> _field_Func = jule::Ptr<_249bcc312_FnIns>();
	jule::Any _field_Err = jule::Any();
	

	_249bcaa19_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_249bcaa19_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_249bcaa19_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _249bcac06_SizeofExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_249bcac06_SizeofExprModel(void) = default;

	inline bool operator==(_249bcac06_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_249bcac06_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _249bcade3_AlignofExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_249bcade3_AlignofExprModel(void) = default;

	inline bool operator==(_249bcade3_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_249bcade3_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _249bcb0d0_RuneExprModel {
	jule::I32 _field_Code = jule::I32();
	

	_249bcb0d0_RuneExprModel(void) = default;

	inline bool operator==(_249bcb0d0_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_249bcb0d0_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _249bcb2bc_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_249bcb2bc_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_249bcb2bc_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_249bcb2bc_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _249bcb4a9_BackendEmitExprModel {
	jule::Str _field_Code = jule::Str();
	jule::Slice<jule::Any> _field_Exprs = jule::Slice<jule::Any>();
	

	_249bcb4a9_BackendEmitExprModel(void) = default;

	inline bool operator==(_249bcb4a9_BackendEmitExprModel _other) {
		return 
			this->_field_Code == _other._field_Code &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_249bcb4a9_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _249bcb696_FreeExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_249bcb696_FreeExprModel(void) = default;

	inline bool operator==(_249bcb696_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_249bcb696_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _249bcba5e_RetType {
	jule::Ptr<_249cb48e4_TypeSymbol> _field_Kind = jule::Ptr<_249cb48e4_TypeSymbol>();
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _field_Idents = jule::Slice<jule::Ptr<_23abd3d83_Token>>();
	

	_249bcba5e_RetType(void) = default;

	inline bool operator==(_249bcba5e_RetType _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_249bcba5e_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_249bcc125_ParamIns> _2490d9ba4_instance(jule::Ptr<_249bcbc4b_Param>);
inline jule::Bool _24909ab54_IsSelf(_249bcbc4b_Param*);
inline jule::Bool _24909be1e_IsRef(_249bcbc4b_Param*);
struct _249bcbc4b_Param {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_249cb48e4_TypeSymbol> _field_Kind = jule::Ptr<_249cb48e4_TypeSymbol>();
	jule::Str _field_Ident = jule::Str();
	

	_249bcbc4b_Param(void) = default;

	inline bool operator==(_249bcbc4b_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_249bcbc4b_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _2490aaa43_IsVoid(_249bcbe38_Fn*);
inline jule::Bool _2490ab25d_IsMethod(_249bcbe38_Fn*);
inline jule::Bool _2490ab978_IsEntryPoint(_249bcbe38_Fn*);
inline jule::Bool _2490ac803_IsInit(_249bcbe38_Fn*);
inline jule::Bool _24909a24c_IsAnon(_249bcbe38_Fn*);
inline jule::Bool _2490a02da_AnyVar(_249bcbe38_Fn*);
inline jule::Ptr<_249bcc312_FnIns> _2490a1dbe_instanceForce(jule::Ptr<_249bcbe38_Fn>);
inline jule::Ptr<_249bcc312_FnIns> _2490a2b8e_instance(jule::Ptr<_249bcbe38_Fn>);
inline jule::Ptr<_249bcc312_FnIns> _2490999bb_appendInstance(_249bcbe38_Fn*, jule::Ptr<_249bcc312_FnIns>&);
struct _249bcbe38_Fn {
	jule::Ptr<_249c192c7_Sema> _field_sema = jule::Ptr<_249c192c7_Sema>();
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Bool _field_Global = jule::Bool();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Exceptional = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_24900cb2c_Directive>> _field_Directives = jule::Slice<jule::Ptr<_24900cb2c_Directive>>();
	jule::Ptr<_2490566e2_ScopeTree> _field_Scope = jule::Ptr<_2490566e2_ScopeTree>();
	jule::Slice<jule::Ptr<_2490539a8_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_2490539a8_GenericDecl>>();
	jule::Ptr<_249bcba5e_RetType> _field_Result = jule::Ptr<_249bcba5e_RetType>();
	jule::Slice<jule::Ptr<_249bcbc4b_Param>> _field_Params = jule::Slice<jule::Ptr<_249bcbc4b_Param>>();
	jule::Ptr<_249036b01_Struct> _field_Owner = jule::Ptr<_249036b01_Struct>();
	jule::Slice<jule::Ptr<_249bcc312_FnIns>> _field_Instances = jule::Slice<jule::Ptr<_249bcc312_FnIns>>();
	

	_249bcbe38_Fn(void) = default;

	inline bool operator==(_249bcbe38_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params &&
			this->_field_Owner == _other._field_Owner &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_249bcbe38_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _249099438_Str(_249bcc125_ParamIns*);
struct _249bcc125_ParamIns {
	jule::Ptr<_249bcbc4b_Param> _field_Decl = jule::Ptr<_249bcbc4b_Param>();
	jule::Ptr<_249cb078b_TypeKind> _field_Kind = jule::Ptr<_249cb078b_TypeKind>();
	

	_249bcc125_ParamIns(void) = default;

	inline bool operator==(_249bcc125_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_249bcc125_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _24909b517_Str(_249bcc312_FnIns*);
inline jule::Bool _249099c74_Equals(jule::Ptr<_249bcc312_FnIns>, jule::Ptr<_249cb078b_TypeKind>);
inline jule::Bool _2490ac193_EqualsFn(jule::Ptr<_249bcc312_FnIns>, jule::Ptr<_249bcc312_FnIns>&);
inline jule::Bool _24909e4c6_equalsTrait(jule::Ptr<_249bcc312_FnIns>, jule::Ptr<_249bcc312_FnIns>&);
inline jule::Slice<jule::Ptr<_249cb078b_TypeKind>> _2490ca227_Types(_249bcc312_FnIns*);
inline jule::Bool _249bcc4ee_IsBuiltin(_249bcc312_FnIns*);
inline jule::Bool _249bcc631_IsAnon(_249bcc312_FnIns*);
inline jule::Bool _249bcc763_Same(_249bcc312_FnIns*, jule::Ptr<_249bcc312_FnIns>);
inline jule::Str _249bcc895_GetKindStr(_249bcc312_FnIns*, jule::Bool);
struct _249bcc312_FnIns {
	jule::Ptr<_249062e4b_StructIns> _field_Owner = jule::Ptr<_249062e4b_StructIns>();
	jule::Ptr<_249bcbe38_Fn> _field_Decl = jule::Ptr<_249bcbe38_Fn>();
	jule::Slice<jule::Ptr<_249cae05e_InsGeneric>> _field_Generics = jule::Slice<jule::Ptr<_249cae05e_InsGeneric>>();
	jule::Slice<jule::Ptr<_249bcc125_ParamIns>> _field_Params = jule::Slice<jule::Ptr<_249bcc125_ParamIns>>();
	jule::Ptr<_249cb078b_TypeKind> _field_Result = jule::Ptr<_249cb078b_TypeKind>();
	jule::Ptr<_249be2635_Scope> _field_Scope = jule::Ptr<_249be2635_Scope>();
	jule::Ptr<_249bcccd5_ReferenceStack> _field_Refers = jule::Ptr<_249bcccd5_ReferenceStack>();
	jule::Bool _field_Anon = jule::Bool();
	jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)> _field_caller = jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	

	_249bcc312_FnIns(void) = default;

	inline bool operator==(_249bcc312_FnIns _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Params == _other._field_Params &&
			this->_field_Result == _other._field_Result &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Anon == _other._field_Anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_249bcc312_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_249bcccd5_ReferenceStack> static__249bccec2_new(void);
inline jule::I64 _249bcd104_Len(_249bcccd5_ReferenceStack*);
inline jule::Any _249bcd236_At(_249bcccd5_ReferenceStack*, jule::I64);
inline void _249bcd368_Push(_249bcccd5_ReferenceStack*, jule::Any);
inline jule::Bool _250041d36_Exist(_249bcccd5_ReferenceStack*, jule::Ptr<_249bcc312_FnIns>);
inline jule::Bool _25005791d_Exist(_249bcccd5_ReferenceStack*, jule::Ptr<_249c3702b_Var>);
inline jule::Bool _250103942_Exist(_249bcccd5_ReferenceStack*, jule::Ptr<_249062e4b_StructIns>);
inline jule::Bool _25104670d_Exist(_249bcccd5_ReferenceStack*, jule::Ptr<_249bd48d0_Trait>);
struct _249bcccd5_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();
	

	_249bcccd5_ReferenceStack(void) = default;

	inline bool operator==(_249bcccd5_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_249bcccd5_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _249bcd5cc_Pass {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Text = jule::Str();
	

	_249bcd5cc_Pass(void) = default;

	inline bool operator==(_249bcd5cc_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_249bcd5cc_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_249bd0557_symbolBuilder> _249bd090e_getRoot(jule::Ptr<_249bd0557_symbolBuilder>);
inline void _249bd0a41_pushErr(_249bd0557_symbolBuilder*, jule::Ptr<_23abd3d83_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _249bd0b73_pushErrText(_249bd0557_symbolBuilder*, jule::Ptr<_23abd3d83_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _249bd0ca5_pushSuggestion(_249bd0557_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _249bd0dd7_checkCppUseDeclPath(_249bd0557_symbolBuilder*, jule::Ptr<_24905de14_UseDecl>&, jule::Str);
inline jule::Ptr<_249c1117b_ImportInfo> _249bd1019_buildCppHeaderImport(_249bd0557_symbolBuilder*, jule::Ptr<_24905de14_UseDecl>&);
inline jule::Ptr<_249c1117b_ImportInfo> _249bd114b_buildStdImport(_249bd0557_symbolBuilder*, jule::Ptr<_24905de14_UseDecl>&);
inline jule::Ptr<_249c1117b_ImportInfo> _249bd127d_buildIdentImport(jule::Ptr<_249bd0557_symbolBuilder>, jule::Ptr<_24905de14_UseDecl>&);
inline jule::Ptr<_249c1117b_ImportInfo> _249bd13b0_buildImport(jule::Ptr<_249bd0557_symbolBuilder>, jule::Ptr<_24905de14_UseDecl>&);
inline jule::Bool _249bd14e2_checkDuplicateUseDecl(_249bd0557_symbolBuilder*, jule::Ptr<_249c1117b_ImportInfo>&);
inline void _249bd1668_implImportSelections(_249bd0557_symbolBuilder*, jule::Ptr<_249c1117b_ImportInfo>&, jule::Ptr<_24905de14_UseDecl>&);
inline jule::Str _249bd1954_getAsLinkPath(jule::Ptr<_249bd0557_symbolBuilder>, jule::Str);
inline void _249bd1d1c_pushCycleError(jule::Ptr<_249bd0557_symbolBuilder>, jule::Ptr<_249bd0557_symbolBuilder>&, jule::Str, jule::Str&);
inline void _249bd21d5_pushCrossCycleError(jule::Ptr<_249bd0557_symbolBuilder>, jule::Ptr<_249bd0557_symbolBuilder>&, jule::Ptr<_249c1117b_ImportInfo>&, jule::Ptr<_23abd3d83_Token>&);
inline jule::Bool _249bd258c_checkImportCycles(jule::Ptr<_249bd0557_symbolBuilder>, jule::Ptr<_249c1117b_ImportInfo>, jule::Ptr<_24905de14_UseDecl>&);
inline void _249bd2977_checkPackageAccessibility(_249bd0557_symbolBuilder*, jule::Ptr<_24905de14_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _249bd2d40_importPackage(jule::Ptr<_249bd0557_symbolBuilder>, jule::Ptr<_249c1117b_ImportInfo>&, jule::Ptr<_24905de14_UseDecl>&);
inline jule::Ptr<_249c1117b_ImportInfo> _249bd314d_importUseDecl(jule::Ptr<_249bd0557_symbolBuilder>, jule::Ptr<_24905de14_UseDecl>&);
inline void _249bd3329_importUseDecls(jule::Ptr<_249bd0557_symbolBuilder>);
inline void _249bd359e_appendNode(_249bd0557_symbolBuilder*, _24900c731_Node&);
inline void _249bd377a_appendNodes(_249bd0557_symbolBuilder*);
inline void _249bd3a00_pushDirectivePass(_249bd0557_symbolBuilder*, jule::Ptr<_24900cb2c_Directive>&);
inline void _249bd3bcb_appendTopDirectives(_249bd0557_symbolBuilder*);
inline void _249bd3da7_build(jule::Ptr<_249bd0557_symbolBuilder>);
struct _249bd0557_symbolBuilder {
	jule::Ptr<_249bd0557_symbolBuilder> _field_owner = jule::Ptr<_249bd0557_symbolBuilder>();
	jule::Trait<_249c0d50d_Importer> _field_importer = jule::Trait<_249c0d50d_Importer>();
	jule::Slice<_23a8a5ca8_Log> _field_errors = jule::Slice<_23a8a5ca8_Log>();
	jule::Ptr<_24900ba82_Ast> _field_ast = jule::Ptr<_24900ba82_Ast>();
	jule::Ptr<_249c7a228_SymbolTable> _field_table = jule::Ptr<_249c7a228_SymbolTable>();
	

	_249bd0557_symbolBuilder(void) = default;

	inline bool operator==(_249bd0557_symbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_249bd0557_symbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _249bd4ccb_Str(_249bd48d0_Trait*);
inline jule::Bool _249bd50d9_Equals(jule::Ptr<_249bd48d0_Trait>, jule::Ptr<_249cb078b_TypeKind>);
inline jule::Bool _249bd544c_IsBuiltin(_249bd48d0_Trait*);
inline jule::Ptr<_249bcbe38_Fn> _249bd575a_FindMethod(_249bd48d0_Trait*, jule::Str);
struct _249bd48d0_Trait {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Slice<jule::Ptr<_249bcbe38_Fn>> _field_Methods = jule::Slice<jule::Ptr<_249bcbe38_Fn>>();
	jule::Slice<jule::Ptr<_249036b01_Struct>> _field_Implemented = jule::Slice<jule::Ptr<_249036b01_Struct>>();
	

	_249bd48d0_Trait(void) = default;

	inline bool operator==(_249bd48d0_Trait _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Implemented == _other._field_Implemented;
	}

	inline bool operator!=(_249bd48d0_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _249bd641a_AutoExpr(_249bd6030_EnumItem*);
struct _249bd6030_EnumItem {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_249c810ca_Value> _field_Value = jule::Ptr<_249c810ca_Value>();
	

	_249bd6030_EnumItem(void) = default;

	inline bool operator==(_249bd6030_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_249bd6030_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _249bd6d88_Str(_249bd6a25_Enum*);
inline jule::Bool _249bd7196_Equals(jule::Ptr<_249bd6a25_Enum>, jule::Ptr<_249cb078b_TypeKind>);
inline jule::Ptr<_249bd6030_EnumItem> _249bd75d6_FindItem(_249bd6a25_Enum*, jule::Str);
struct _249bd6a25_Enum {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_249cb48e4_TypeSymbol> _field_Kind = jule::Ptr<_249cb48e4_TypeSymbol>();
	jule::Slice<jule::Ptr<_249bd6030_EnumItem>> _field_Items = jule::Slice<jule::Ptr<_249bd6030_EnumItem>>();
	

	_249bd6a25_Enum(void) = default;

	inline bool operator==(_249bd6a25_Enum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_249bd6a25_Enum _other) { return !this->operator==(_other); }


};
struct _249bd7a59_TypeEnumItem {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_249cb48e4_TypeSymbol> _field_Kind = jule::Ptr<_249cb48e4_TypeSymbol>();
	

	_249bd7a59_TypeEnumItem(void) = default;

	inline bool operator==(_249bd7a59_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_249bd7a59_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _249bd8450_Str(_249bd8120_TypeEnum*);
inline jule::Bool _249bd875d_Equals(jule::Ptr<_249bd8120_TypeEnum>, jule::Ptr<_249cb078b_TypeKind>);
inline jule::Ptr<_249bd7a59_TypeEnumItem> _249bd8b59_FindItem(_249bd8120_TypeEnum*, jule::Str);
struct _249bd8120_TypeEnum {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_249bd7a59_TypeEnumItem>> _field_Items = jule::Slice<jule::Ptr<_249bd7a59_TypeEnumItem>>();
	

	_249bd8120_TypeEnum(void) = default;

	inline bool operator==(_249bd8120_TypeEnum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_249bd8120_TypeEnum _other) { return !this->operator==(_other); }


};
inline jule::Fn<jule::Bool(jule::Ptr<_249c192c7_Sema>&,jule::Slice<jule::Ptr<_249caea98_TypeAlias>>&)> _249bdaac3_readyFn(jule::Ptr<_249bda694_constraintChecker>);
inline jule::Bool _249bdad37_readyFi(jule::Ptr<_249bda694_constraintChecker>);
inline jule::Bool _249bdb09b_readySi(jule::Ptr<_249bda694_constraintChecker>);
inline jule::Bool _249bdb310_ready(jule::Ptr<_249bda694_constraintChecker>);
inline jule::Bool _249bdb574_check(jule::Ptr<_249bda694_constraintChecker>);
struct _249bda694_constraintChecker {
	jule::Ptr<_249c192c7_Sema> _field_s = jule::Ptr<_249c192c7_Sema>();
	jule::Slice<jule::Ptr<_2490539a8_GenericDecl>> _field_genericsD = jule::Slice<jule::Ptr<_2490539a8_GenericDecl>>();
	jule::Slice<jule::Ptr<_249cae05e_InsGeneric>> _field_generics = jule::Slice<jule::Ptr<_249cae05e_InsGeneric>>();
	jule::Slice<jule::Ptr<_249caea98_TypeAlias>> _field_genericsA = jule::Slice<jule::Ptr<_249caea98_TypeAlias>>();
	jule::Ptr<_249bcc312_FnIns> _field_fi = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249062e4b_StructIns> _field_si = jule::Ptr<_249062e4b_StructIns>();
	jule::Ptr<_23abd3d83_Token> _field_et = jule::Ptr<_23abd3d83_Token>();
	jule::Bool _field_uniq = jule::Bool();
	

	_249bda694_constraintChecker(void) = default;

	inline bool operator==(_249bda694_constraintChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_genericsD == _other._field_genericsD &&
			this->_field_generics == _other._field_generics &&
			this->_field_genericsA == _other._field_genericsA &&
			this->_field_fi == _other._field_fi &&
			this->_field_si == _other._field_si &&
			this->_field_et == _other._field_et &&
			this->_field_uniq == _other._field_uniq;
	}

	inline bool operator!=(_249bda694_constraintChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _249bdc9c6_IsTraitImpl(_249bdc5ca_Impl*);
inline jule::Bool _249bdcc3a_IsStructImpl(_249bdc5ca_Impl*);
struct _249bdc5ca_Impl {
	jule::Ptr<_2490463c4_TypeDecl> _field_Base = jule::Ptr<_2490463c4_TypeDecl>();
	jule::Ptr<_2490463c4_TypeDecl> _field_Dest = jule::Ptr<_2490463c4_TypeDecl>();
	jule::Slice<jule::Ptr<_249bcbe38_Fn>> _field_Methods = jule::Slice<jule::Ptr<_249bcbe38_Fn>>();
	jule::Slice<jule::Ptr<_249c3702b_Var>> _field_Statics = jule::Slice<jule::Ptr<_249c3702b_Var>>();
	

	_249bdc5ca_Impl(void) = default;

	inline bool operator==(_249bdc5ca_Impl _other) {
		return 
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_249bdc5ca_Impl _other) { return !this->operator==(_other); }


};
struct _249be2635_Scope {
	jule::Ptr<_249be2635_Scope> _field_Parent = jule::Ptr<_249be2635_Scope>();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Deferred = jule::Bool();
	jule::Slice<jule::Any> _field_Stmts = jule::Slice<jule::Any>();
	

	_249be2635_Scope(void) = default;

	inline bool operator==(_249be2635_Scope _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts;
	}

	inline bool operator!=(_249be2635_Scope _other) { return !this->operator==(_other); }


};
struct _249be2a31_If {
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_249be2635_Scope> _field_Scope = jule::Ptr<_249be2635_Scope>();
	

	_249be2a31_If(void) = default;

	inline bool operator==(_249be2a31_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_249be2a31_If _other) { return !this->operator==(_other); }


};
struct _249be2d1c_Else {
	jule::Ptr<_249be2635_Scope> _field_Scope = jule::Ptr<_249be2635_Scope>();
	

	_249be2d1c_Else(void) = default;

	inline bool operator==(_249be2d1c_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_249be2d1c_Else _other) { return !this->operator==(_other); }


};
struct _249be3191_Conditional {
	jule::Slice<jule::Ptr<_249be2a31_If>> _field_Elifs = jule::Slice<jule::Ptr<_249be2a31_If>>();
	jule::Ptr<_249be2d1c_Else> _field_Default = jule::Ptr<_249be2d1c_Else>();
	

	_249be3191_Conditional(void) = default;

	inline bool operator==(_249be3191_Conditional _other) {
		return 
			this->_field_Elifs == _other._field_Elifs &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_249be3191_Conditional _other) { return !this->operator==(_other); }


};
struct _249be347c_InfIter {
	jule::Ptr<_249be2635_Scope> _field_Scope = jule::Ptr<_249be2635_Scope>();
	

	_249be347c_InfIter(void) = default;

	inline bool operator==(_249be347c_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_249be347c_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _249be3c96_IsWhileNext(_249be3900_WhileIter*);
struct _249be3900_WhileIter {
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Next = jule::Any();
	jule::Ptr<_249be2635_Scope> _field_Scope = jule::Ptr<_249be2635_Scope>();
	

	_249be3900_WhileIter(void) = default;

	inline bool operator==(_249be3900_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_249be3900_WhileIter _other) { return !this->operator==(_other); }


};
struct _249be42d5_RangeIter {
	jule::Ptr<_249c80052_Data> _field_Expr = jule::Ptr<_249c80052_Data>();
	jule::Ptr<_249be2635_Scope> _field_Scope = jule::Ptr<_249be2635_Scope>();
	jule::Ptr<_249c3702b_Var> _field_KeyA = jule::Ptr<_249c3702b_Var>();
	jule::Ptr<_249c3702b_Var> _field_KeyB = jule::Ptr<_249c3702b_Var>();
	

	_249be42d5_RangeIter(void) = default;

	inline bool operator==(_249be42d5_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_249be42d5_RangeIter _other) { return !this->operator==(_other); }


};
struct _249be46d1_ContSt {
	jule::Uintptr _field_It = jule::Uintptr();
	

	_249be46d1_ContSt(void) = default;

	inline bool operator==(_249be46d1_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_249be46d1_ContSt _other) { return !this->operator==(_other); }


};
struct _249be4a88_BreakSt {
	jule::Uintptr _field_It = jule::Uintptr();
	jule::Uintptr _field_Mtch = jule::Uintptr();
	

	_249be4a88_BreakSt(void) = default;

	inline bool operator==(_249be4a88_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_249be4a88_BreakSt _other) { return !this->operator==(_other); }


};
struct _249be4d74_Label {
	jule::Str _field_Ident = jule::Str();
	

	_249be4d74_Label(void) = default;

	inline bool operator==(_249be4d74_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_249be4d74_Label _other) { return !this->operator==(_other); }


};
struct _249be5160_GotoSt {
	jule::Str _field_Ident = jule::Str();
	

	_249be5160_GotoSt(void) = default;

	inline bool operator==(_249be5160_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_249be5160_GotoSt _other) { return !this->operator==(_other); }


};
struct _249be5517_Postfix {
	jule::Any _field_Expr = jule::Any();
	jule::Str _field_Op = jule::Str();
	

	_249be5517_Postfix(void) = default;

	inline bool operator==(_249be5517_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_249be5517_Postfix _other) { return !this->operator==(_other); }


};
struct _249be598a_Assign {
	jule::Ptr<_249bc61eb_OperandExprModel> _field_L = jule::Ptr<_249bc61eb_OperandExprModel>();
	jule::Ptr<_249bc61eb_OperandExprModel> _field_R = jule::Ptr<_249bc61eb_OperandExprModel>();
	jule::Ptr<_23abd3d83_Token> _field_Op = jule::Ptr<_23abd3d83_Token>();
	

	_249be598a_Assign(void) = default;

	inline bool operator==(_249be598a_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_249be598a_Assign _other) { return !this->operator==(_other); }


};
struct _249be5d42_MultiAssign {
	jule::Slice<jule::Any> _field_L = jule::Slice<jule::Any>();
	jule::Any _field_R = jule::Any();
	

	_249be5d42_MultiAssign(void) = default;

	inline bool operator==(_249be5d42_MultiAssign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R;
	}

	inline bool operator!=(_249be5d42_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _249be688c_IsGenericTypeMatch(_249be6381_Match*);
struct _249be6381_Match {
	jule::Ptr<_249c80052_Data> _field_Expr = jule::Ptr<_249c80052_Data>();
	jule::Bool _field_TypeMatch = jule::Bool();
	jule::Slice<jule::Ptr<_249be6dcb_Case>> _field_Cases = jule::Slice<jule::Ptr<_249be6dcb_Case>>();
	jule::Ptr<_249be6dcb_Case> _field_Default = jule::Ptr<_249be6dcb_Case>();
	

	_249be6381_Match(void) = default;

	inline bool operator==(_249be6381_Match _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_249be6381_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _249be7195_isDefault(_249be6dcb_Case*);
struct _249be6dcb_Case {
	jule::Ptr<_249be6381_Match> _field_Owner = jule::Ptr<_249be6381_Match>();
	jule::Ptr<_249be2635_Scope> _field_Scope = jule::Ptr<_249be2635_Scope>();
	jule::Slice<jule::Ptr<_249c80052_Data>> _field_Exprs = jule::Slice<jule::Ptr<_249c80052_Data>>();
	jule::Ptr<_249be6dcb_Case> _field_Next = jule::Ptr<_249be6dcb_Case>();
	

	_249be6dcb_Case(void) = default;

	inline bool operator==(_249be6dcb_Case _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs &&
			this->_field_Next == _other._field_Next;
	}

	inline bool operator!=(_249be6dcb_Case _other) { return !this->operator==(_other); }


};
struct _249be7481_FallSt {
	jule::Uintptr _field_DestCase = jule::Uintptr();
	

	_249be7481_FallSt(void) = default;

	inline bool operator==(_249be7481_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_249be7481_FallSt _other) { return !this->operator==(_other); }


};
struct _249be7904_RetSt {
	jule::Ptr<_249bcc312_FnIns> _field_Func = jule::Ptr<_249bcc312_FnIns>();
	jule::Slice<jule::Ptr<_249c3702b_Var>> _field_Vars = jule::Slice<jule::Ptr<_249c3702b_Var>>();
	jule::Any _field_Expr = jule::Any();
	

	_249be7904_RetSt(void) = default;

	inline bool operator==(_249be7904_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_249be7904_RetSt _other) { return !this->operator==(_other); }


};
struct _249be800e_scopeLabel {
	jule::Ptr<_23abd3d83_Token> _field_token = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_249be4d74_Label> _field_label = jule::Ptr<_249be4d74_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_249be9296_scopeChecker> _field_scope = jule::Ptr<_249be9296_scopeChecker>();
	jule::Bool _field_used = jule::Bool();
	

	_249be800e_scopeLabel(void) = default;

	inline bool operator==(_249be800e_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_249be800e_scopeLabel _other) { return !this->operator==(_other); }


};
struct _249be8482_scopeGoto {
	jule::Ptr<_249054217_GotoSt> _field_gt = jule::Ptr<_249054217_GotoSt>();
	jule::Ptr<_249be9296_scopeChecker> _field_scope = jule::Ptr<_249be9296_scopeChecker>();
	jule::I64 _field_pos = jule::I64();
	

	_249be8482_scopeGoto(void) = default;

	inline bool operator==(_249be8482_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_249be8482_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_249c1117b_ImportInfo> _249be96e7_FindPackage(_249be9296_scopeChecker*, jule::Str);
inline jule::Ptr<_249c1117b_ImportInfo> _249be9a05_SelectPackage(_249be9296_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_249c1117b_ImportInfo>)>);
inline jule::Ptr<_249c3702b_Var> _249be9dac_FindVar(_249be9296_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_249caea98_TypeAlias> _249bea264_FindTypeAlias(_249be9296_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_249036b01_Struct> _249bea61b_FindStruct(_249be9296_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_249bcbe38_Fn> _249bea9c3_FindFn(_249be9296_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_249bd48d0_Trait> _249beacd1_FindTrait(_249be9296_scopeChecker*, jule::Str);
inline jule::Ptr<_249bd6a25_Enum> _249beb0de_FindEnum(_249be9296_scopeChecker*, jule::Str);
inline jule::Ptr<_249bd8120_TypeEnum> _249beb3ec_FindTypeEnum(_249be9296_scopeChecker*, jule::Str);
inline jule::Bool _249beb72c_isUnsafe(jule::Ptr<_249be9296_scopeChecker>);
inline jule::Bool _249beb991_isRoot(_249be9296_scopeChecker*);
inline void _249bebb6c_stop(_249be9296_scopeChecker*);
inline jule::Bool _249bebdd1_stopped(_249be9296_scopeChecker*);
inline jule::Bool _249bec145_isDeferred(jule::Ptr<_249be9296_scopeChecker>);
inline jule::Ptr<_249be9296_scopeChecker> _249bec3a9_getRoot(jule::Ptr<_249be9296_scopeChecker>);
inline jule::Ptr<_249be9296_scopeChecker> _249bec61d_getHardRoot(jule::Ptr<_249be9296_scopeChecker>);
inline jule::Ptr<_249be4d74_Label> _249bec92b_findLabel(_249be9296_scopeChecker*, jule::Str);
inline jule::Ptr<_249be800e_scopeLabel> _249becc39_findLabelScope(jule::Ptr<_249be9296_scopeChecker>, jule::Str);
inline jule::Ptr<_249be800e_scopeLabel> _249bed047_findLabelAll(_249be9296_scopeChecker*, jule::Str);
inline jule::Bool _249bed3ee_isDuplicatedIdent(_249be9296_scopeChecker*, jule::Uintptr, jule::Str);
inline void _249bed674_checkVarDecl(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_2490591b7_VarDecl>);
inline void _249bed8e9_checkTypeAliasDecl(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24905ca28_TypeAliasDecl>);
inline jule::Ptr<_249be2635_Scope> _249bedb5d_getChild(_249be9296_scopeChecker*);
inline void _249bee026_checkChildSsc(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_2490566e2_ScopeTree>&, jule::Ptr<_249be2635_Scope>&, jule::Ptr<_249be9296_scopeChecker>&);
inline jule::Ptr<_249be2635_Scope> _249bee3cd_checkChildSc(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_2490566e2_ScopeTree>&, jule::Ptr<_249be9296_scopeChecker>&);
inline jule::Ptr<_249be2635_Scope> _249bee6db_checkChild(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_2490566e2_ScopeTree>&);
inline void _249bee961_checkAnonScope(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_2490566e2_ScopeTree>);
inline void _249beec80_processErrorCall(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel>&, jule::Ptr<_23abd3d83_Token>);
inline void _249c00005_checkExpr(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24904a8e5_Expr>);
inline void _249c0027a_checkCoExpr(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24904c4da_CoExpr>);
inline jule::Ptr<_249be2a31_If> _249c00588_checkIf(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24905ba27_If>);
inline jule::Ptr<_249be2d1c_Else> _249c00896_checkElse(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24905bdce_Else>);
inline void _249c00b1b_checkConditional(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24905c352_Conditional>);
inline void _249c0107d_checkIterScopeSsc(jule::Ptr<_249be9296_scopeChecker>, jule::Uintptr, jule::Ptr<_2490566e2_ScopeTree>, jule::Ptr<_249be2635_Scope>&, jule::Ptr<_249be9296_scopeChecker>);
inline jule::Ptr<_249be2635_Scope> _249c014ce_checkIterScopeSc(jule::Ptr<_249be9296_scopeChecker>, jule::Uintptr, jule::Ptr<_2490566e2_ScopeTree>, jule::Ptr<_249be9296_scopeChecker>);
inline jule::Ptr<_249be2635_Scope> _249c01886_checkIterScope(jule::Ptr<_249be9296_scopeChecker>, jule::Uintptr, jule::Ptr<_2490566e2_ScopeTree>&);
inline void _249c01b0b_checkInfIter(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_249059bce_Iter>&);
inline void _249c01d81_checkWhileIter(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_249059bce_Iter>&);
inline void _249c02106_checkRangeIter(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_249059bce_Iter>&);
inline void _249c0237b_checkIter(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_249059bce_Iter>);
inline jule::Bool _249c02689_checkValidContLabel(jule::Ptr<_249be9296_scopeChecker>, jule::Uintptr);
inline jule::Bool _249c02997_checkValidBreakLabel(jule::Ptr<_249be9296_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_249be46d1_ContSt> _249c02ca5_checkContValidScope(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24905b5a4_ContSt>);
inline void _249c0302a_checkCont(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24905b5a4_ContSt>);
inline void _249c032a0_checkLabel(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_249053d60_LabelSt>);
inline void _249c03525_pushGoto(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_249054217_GotoSt>);
inline void _249c0379a_checkPostfix(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24905514c_AssignSt>);
inline jule::Bool _249c03aa8_isNewAssignIdent(_249be9296_scopeChecker*, jule::Str);
inline jule::Bool _249c04009_checkStructureAssignOp(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_249062e4b_StructIns>&, jule::Ptr<_24905514c_AssignSt>&, jule::Ptr<_249c80052_Data>&);
inline void _249c0427e_checkSingleAssign(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24905514c_AssignSt>&);
inline void _249c047ac_processEndPartOfMultiAssign(_249be9296_scopeChecker*, jule::Ptr<_249be5d42_MultiAssign>&, jule::Ptr<_24905514c_AssignSt>&, jule::Ptr<_249054b0d_AssignLeft>&, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&);
inline void _249c04a43_checkMultiAssign(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24905514c_AssignSt>&);
inline void _249c04cb8_checkAssignSt(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24905514c_AssignSt>);
inline jule::Ptr<_249be2635_Scope> _249c05170_checkCaseScope(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_249be6dcb_Case>&, jule::Ptr<_2490566e2_ScopeTree>&);
inline jule::Ptr<_249be6dcb_Case> _249c0566a_checkCase(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_249be6381_Match>, jule::I64, jule::Ptr<_24905ce9b_Case>, jule::Ptr<_249c80052_Data>);
inline void _249c05a33_checkCases(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24905d672_MatchCase>&, jule::Ptr<_249be6381_Match>, jule::Ptr<_249c80052_Data>);
inline jule::Ptr<_249be6dcb_Case> _249c05dda_checkDefault(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_249be6381_Match>, jule::Ptr<_24905bdce_Else>);
inline void _249c06160_checkComptimePanic(_249be9296_scopeChecker*, jule::Ptr<_249be2635_Scope>&);
inline void _249c0647e_pushTypeMatch(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_249be6381_Match>, jule::Ptr<_24905d672_MatchCase>&);
inline void _249c06704_checkTypeMatch(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24905d672_MatchCase>&);
inline void _249c06979_checkCommonMatch(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24905d672_MatchCase>&);
inline void _249c06bee_checkMatch(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24905d672_MatchCase>);
inline void _249c06e74_checkFall(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_249054503_FallSt>);
inline jule::Ptr<_249be4a88_BreakSt> _249c07282_checkBreakWithLabel(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24905b1ec_BreakSt>);
inline jule::Ptr<_249be4a88_BreakSt> _249c07590_checkPlainBreak(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24905b1ec_BreakSt>);
inline void _249c07815_checkBreak(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24905b1ec_BreakSt>);
inline void _249c07a8a_checkRet(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24905956e_RetSt>);
inline void _249c07d10_checkUseExpr(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_24904b286_UseExpr>);
inline void _249c08085_checkNode(jule::Ptr<_249be9296_scopeChecker>, jule::Any&);
inline void _249c08261_checkResult(jule::Ptr<_249be9296_scopeChecker>);
inline void _249c0843c_checkTree(jule::Ptr<_249be9296_scopeChecker>);
inline void _249c0875b_checkGoto(_249be9296_scopeChecker*, jule::Ptr<_249be8482_scopeGoto>&, jule::Ptr<_249be800e_scopeLabel>&);
inline void _249c08937_checkGotos(_249be9296_scopeChecker*);
inline void _249c08b13_checkLabels(_249be9296_scopeChecker*);
inline void _249c08cde_checkVars(_249be9296_scopeChecker*);
inline void _249c08eba_checkAliases(_249be9296_scopeChecker*);
inline void _249c092d9_check(jule::Ptr<_249be9296_scopeChecker>, jule::Ptr<_2490566e2_ScopeTree>&, jule::Ptr<_249be2635_Scope>&);
inline jule::Ptr<_249be9296_scopeChecker> _249c0954d_newChildChecker(jule::Ptr<_249be9296_scopeChecker>);
struct _249be9296_scopeChecker {
	jule::Ptr<_23abd3d83_Token> _field_calledFrom = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_249c192c7_Sema> _field_s = jule::Ptr<_249c192c7_Sema>();
	jule::Ptr<_249bcc312_FnIns> _field_owner = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249be9296_scopeChecker> _field_parent = jule::Ptr<_249be9296_scopeChecker>();
	jule::I64 _field_childIndex = jule::I64();
	jule::Ptr<_249c7a228_SymbolTable> _field_table = jule::Ptr<_249c7a228_SymbolTable>();
	jule::Ptr<_249be2635_Scope> _field_scope = jule::Ptr<_249be2635_Scope>();
	jule::Ptr<_2490566e2_ScopeTree> _field_tree = jule::Ptr<_2490566e2_ScopeTree>();
	jule::Ptr<_249bcc312_FnIns> _field_result = jule::Ptr<_249bcc312_FnIns>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_249be800e_scopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_249be800e_scopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_249be8482_scopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_249be8482_scopeGoto>>>();
	jule::I64 _field_i = jule::I64();
	

	_249be9296_scopeChecker(void) = default;

	inline bool operator==(_249be9296_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_249be9296_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _249c0a53d_checkCdef(_249c0a0ed_directiveChecker*, jule::Ptr<_24900cb2c_Directive>&);
inline void _249c0a7b3_checkTypedef(_249c0a0ed_directiveChecker*, jule::Ptr<_24900cb2c_Directive>&);
inline void _249c0aa38_checkDerive(_249c0a0ed_directiveChecker*, jule::Ptr<_24900cb2c_Directive>&);
inline void _249c0acad_checkNamespace(_249c0a0ed_directiveChecker*, jule::Ptr<_24900cb2c_Directive>&);
inline void _249c0b033_checkDeprecated(_249c0a0ed_directiveChecker*, jule::Ptr<_24900cb2c_Directive>&);
inline void _249c0b2a8_checkTest(_249c0a0ed_directiveChecker*, jule::Ptr<_24900cb2c_Directive>&);
inline void _249c0b52d_checkDirective(_249c0a0ed_directiveChecker*, jule::Ptr<_24900cb2c_Directive>&);
inline void _249c0b709_check(_249c0a0ed_directiveChecker*);
struct _249c0a0ed_directiveChecker {
	jule::Ptr<_249c192c7_Sema> _field_s = jule::Ptr<_249c192c7_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_24900cb2c_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_24900cb2c_Directive>>>();
	jule::Any _field_o = jule::Any();
	

	_249c0a0ed_directiveChecker(void) = default;

	inline bool operator==(_249c0a0ed_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_249c0a0ed_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_249c1117b_ImportInfo> _249c11698_FindPackage(_249c1117b_ImportInfo*, jule::Str);
inline jule::Ptr<_249c1117b_ImportInfo> _249c119a6_SelectPackage(_249c1117b_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_249c1117b_ImportInfo>)>);
inline jule::Ptr<_249c3702b_Var> _249c11d5d_FindVar(_249c1117b_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_249caea98_TypeAlias> _249c12215_FindTypeAlias(_249c1117b_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_249036b01_Struct> _249c125bc_FindStruct(_249c1117b_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_249bcbe38_Fn> _249c12974_FindFn(_249c1117b_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_249bd48d0_Trait> _249c12c82_FindTrait(_249c1117b_ImportInfo*, jule::Str);
inline jule::Ptr<_249bd6a25_Enum> _249c13090_FindEnum(_249c1117b_ImportInfo*, jule::Str);
inline jule::Ptr<_249bd8120_TypeEnum> _249c1339d_FindTypeEnum(_249c1117b_ImportInfo*, jule::Str);
inline jule::Bool _249c13744_isLookupable(_249c1117b_ImportInfo*, jule::Str);
inline jule::Bool _249c13a52_existIdent(_249c1117b_ImportInfo*, jule::Str);
inline jule::Bool _249c13cd8_isAccessibleViaSelection(_249c1117b_ImportInfo*);
struct _249c1117b_ImportInfo {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Path = jule::Str();
	jule::Str _field_LinkPath = jule::Str();
	jule::Str _field_Ident = jule::Str();
	jule::Str _field_Alias = jule::Str();
	jule::Bool _field_Duplicate = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Std = jule::Bool();
	jule::Bool _field_ImportAll = jule::Bool();
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _field_Selected = jule::Slice<jule::Ptr<_23abd3d83_Token>>();
	jule::Ptr<_249c140d5_Package> _field_Package = jule::Ptr<_249c140d5_Package>();
	jule::I64 _field_ModId = jule::I64();
	

	_249c1117b_ImportInfo(void) = default;

	inline bool operator==(_249c1117b_ImportInfo _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Path == _other._field_Path &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Duplicate == _other._field_Duplicate &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std &&
			this->_field_ImportAll == _other._field_ImportAll &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_Package == _other._field_Package &&
			this->_field_ModId == _other._field_ModId;
	}

	inline bool operator!=(_249c1117b_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_249c1117b_ImportInfo> _249c145ad_FindPackage(_249c140d5_Package*, jule::Str);
inline jule::Ptr<_249c1117b_ImportInfo> _249c148bb_SelectPackage(_249c140d5_Package*, jule::Fn<jule::Bool(jule::Ptr<_249c1117b_ImportInfo>)>);
inline jule::Ptr<_249c3702b_Var> _249c14c73_FindVar(_249c140d5_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_249caea98_TypeAlias> _249c1512a_FindTypeAlias(_249c140d5_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_249036b01_Struct> _249c154d2_FindStruct(_249c140d5_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_249bcbe38_Fn> _249c15889_FindFn(_249c140d5_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_249bd48d0_Trait> _249c15b97_FindTrait(_249c140d5_Package*, jule::Str);
inline jule::Ptr<_249bd6a25_Enum> _249c15ea5_FindEnum(_249c140d5_Package*, jule::Str);
inline jule::Ptr<_249bd8120_TypeEnum> _249c162b3_FindTypeEnum(_249c140d5_Package*, jule::Str);
struct _249c140d5_Package {
	jule::Slice<jule::Ptr<_249c7a228_SymbolTable>> _field_Files = jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>();
	

	_249c140d5_Package(void) = default;

	inline bool operator==(_249c140d5_Package _other) {
		return 
			this->_field_Files == _other._field_Files;
	}

	inline bool operator!=(_249c140d5_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_249c1117b_ImportInfo> _249c197e4_FindPackage(_249c192c7_Sema*, jule::Str);
inline jule::Ptr<_249c1117b_ImportInfo> _249c19b02_SelectPackage(_249c192c7_Sema*, jule::Fn<jule::Bool(jule::Ptr<_249c1117b_ImportInfo>)>);
inline jule::Ptr<_249c3702b_Var> _249c19ea9_FindVar(_249c192c7_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_249caea98_TypeAlias> _249c1a361_FindTypeAlias(_249c192c7_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_249036b01_Struct> _249c1a718_FindStruct(_249c192c7_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_249bcbe38_Fn> _249c1aac0_FindFn(_249c192c7_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_249bd48d0_Trait> _249c1adcd_FindTrait(_249c192c7_Sema*, jule::Str);
inline jule::Ptr<_249bd6a25_Enum> _249c1b1db_FindEnum(_249c192c7_Sema*, jule::Str);
inline jule::Ptr<_249bd8120_TypeEnum> _249c1b4e9_FindTypeEnum(_249c192c7_Sema*, jule::Str);
inline jule::Bool _249c1b84b_isFlag(_249c192c7_Sema*, jule::I64);
inline void _249c1bac1_setCurrentFile(_249c192c7_Sema*, jule::Ptr<_249c7a228_SymbolTable>);
inline void _249c1be89_pushErr(_249c192c7_Sema*, jule::Ptr<_23abd3d83_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _249c1c2a8_pushSugggestion(_249c192c7_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _249c1c660_isAccessibleDefine(_249c192c7_Sema*, jule::Bool, jule::Ptr<_23abd3d83_Token>);
inline jule::Bool _249c1cab1_isDuplicatedIdent(_249c192c7_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _249c1cdd0_checkDirectives(jule::Ptr<_249c192c7_Sema>, jule::Slice<jule::Ptr<_24900cb2c_Directive>>&, jule::Any);
inline jule::Bool _249c1d331_checkGenericQuantity(_249c192c7_Sema*, jule::I64, jule::I64, jule::Ptr<_23abd3d83_Token>);
inline jule::Bool _249c1d70a_isDuplicatedImportSelection(_249c192c7_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _249c1dac3_getImportDef(_249c192c7_Sema*, jule::Str, jule::Ptr<_249c1117b_ImportInfo>&);
inline jule::Bool _24ea3285a_checkImportSelection(_249c192c7_Sema*, jule::Ptr<_23abd3d83_Token>&, jule::Ptr<_249c3702b_Var>&);
inline jule::Bool _24ea36dd1_checkImportSelection(_249c192c7_Sema*, jule::Ptr<_23abd3d83_Token>&, jule::Ptr<_249caea98_TypeAlias>&);
inline jule::Bool _24ea3b3e1_checkImportSelection(_249c192c7_Sema*, jule::Ptr<_23abd3d83_Token>&, jule::Ptr<_249036b01_Struct>&);
inline jule::Bool _24ea40c86_checkImportSelection(_249c192c7_Sema*, jule::Ptr<_23abd3d83_Token>&, jule::Ptr<_249bd48d0_Trait>&);
inline jule::Bool _24ea452b8_checkImportSelection(_249c192c7_Sema*, jule::Ptr<_23abd3d83_Token>&, jule::Ptr<_249bd6a25_Enum>&);
inline jule::Bool _24ea497ea_checkImportSelection(_249c192c7_Sema*, jule::Ptr<_23abd3d83_Token>&, jule::Ptr<_249bd8120_TypeEnum>&);
inline jule::Bool _24ea4dd2c_checkImportSelection(_249c192c7_Sema*, jule::Ptr<_23abd3d83_Token>&, jule::Ptr<_249bcbe38_Fn>&);
inline jule::Bool _249c1e2aa_checkImportSelectedSelections(_249c192c7_Sema*, jule::Ptr<_249c1117b_ImportInfo>&);
inline jule::Bool _24ea5387b_checkImportsAllSelectionsFromCollection(_249c192c7_Sema*, jule::Slice<jule::Ptr<_249c3702b_Var>>&, jule::Ptr<_23abd3d83_Token>&);
inline jule::Bool _24ea54cde_checkImportsAllSelectionsFromCollection(_249c192c7_Sema*, jule::Slice<jule::Ptr<_249caea98_TypeAlias>>&, jule::Ptr<_23abd3d83_Token>&);
inline jule::Bool _24ea57462_checkImportsAllSelectionsFromCollection(_249c192c7_Sema*, jule::Slice<jule::Ptr<_249036b01_Struct>>&, jule::Ptr<_23abd3d83_Token>&);
inline jule::Bool _24ea5b9e9_checkImportsAllSelectionsFromCollection(_249c192c7_Sema*, jule::Slice<jule::Ptr<_249bcbe38_Fn>>&, jule::Ptr<_23abd3d83_Token>&);
inline jule::Bool _24ea5d4bd_checkImportsAllSelectionsFromCollection(_249c192c7_Sema*, jule::Slice<jule::Ptr<_249bd48d0_Trait>>&, jule::Ptr<_23abd3d83_Token>&);
inline jule::Bool _24ea6148d_checkImportsAllSelectionsFromCollection(_249c192c7_Sema*, jule::Slice<jule::Ptr<_249bd6a25_Enum>>&, jule::Ptr<_23abd3d83_Token>&);
inline jule::Bool _24ea6445d_checkImportsAllSelectionsFromCollection(_249c192c7_Sema*, jule::Slice<jule::Ptr<_249bd8120_TypeEnum>>&, jule::Ptr<_23abd3d83_Token>&);
inline jule::Bool _249c1e9d6_checkImportAllSelections(_249c192c7_Sema*, jule::Ptr<_249c1117b_ImportInfo>&);
inline jule::Bool _249c1ed05_checkImportSelections(_249c192c7_Sema*, jule::Ptr<_249c1117b_ImportInfo>&);
inline jule::Bool _249c20113_isUseAliasDuplication(_249c192c7_Sema*, jule::Ptr<_249c1117b_ImportInfo>&);
inline jule::Bool _249c20421_checkImport(_249c192c7_Sema*, jule::Ptr<_249c1117b_ImportInfo>&);
inline void _249c205ec_checkImports(_249c192c7_Sema*);
inline void _249c207c8_implFileImpls(jule::Ptr<_249c192c7_Sema>);
inline void _249c209a4_implImpls(jule::Ptr<_249c192c7_Sema>);
inline void _249c20b80_checkEnums(jule::Ptr<_249c192c7_Sema>);
inline _249cbdcb6_typeChecker _249c210d1_typeChecker(jule::Ptr<_249c192c7_Sema>, jule::Trait<_249ccb3bc_Lookup>, jule::Slice<jule::Ptr<_249caea98_TypeAlias>>, jule::Ptr<_249cbcea2_referencer>);
inline jule::Ptr<_249cb078b_TypeKind> _249c215cb_buildTypeWithRefers(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_2490463c4_TypeDecl>&, jule::Trait<_249ccb3bc_Lookup>, jule::Slice<jule::Ptr<_249caea98_TypeAlias>>, jule::Ptr<_249cbcea2_referencer>);
inline jule::Bool _249c21ac6_checkTypeWithRefers(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249cb48e4_TypeSymbol>&, jule::Trait<_249ccb3bc_Lookup>, jule::Slice<jule::Ptr<_249caea98_TypeAlias>>, jule::Ptr<_249cbcea2_referencer>);
inline jule::Ptr<_249bda694_constraintChecker> _249c21d3a_constraintChecker(jule::Ptr<_249c192c7_Sema>);
inline jule::Bool _249c221e2_checkType(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249cb48e4_TypeSymbol>&, jule::Trait<_249ccb3bc_Lookup>);
inline jule::Ptr<_249cb078b_TypeKind> _249c22643_buildTypeWithGenerics(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_2490463c4_TypeDecl>&, jule::Slice<jule::Ptr<_249caea98_TypeAlias>>, jule::Ptr<_249bcccd5_ReferenceStack>);
inline jule::Ptr<_249cb078b_TypeKind> _249c22951_buildType(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_2490463c4_TypeDecl>&);
inline jule::Ptr<_249cb078b_TypeKind> _249c22c5e_selectType(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_2490463c4_TypeDecl>&);
inline jule::Ptr<_249c81ac0_Eval> _249c231b0_evalpd(jule::Ptr<_249c192c7_Sema>, jule::Trait<_249ccb3bc_Lookup>, jule::Ptr<_249cb078b_TypeKind>, jule::Ptr<_249c3702b_Var>);
inline jule::Ptr<_249c81ac0_Eval> _249c23567_evalp(jule::Ptr<_249c192c7_Sema>, jule::Trait<_249ccb3bc_Lookup>, jule::Ptr<_249cb078b_TypeKind>);
inline jule::Ptr<_249c81ac0_Eval> _249c23875_eval(jule::Ptr<_249c192c7_Sema>, jule::Trait<_249ccb3bc_Lookup>);
inline jule::Bool _249c23d70_checkAssignType(jule::Ptr<_249c192c7_Sema>, jule::Bool, jule::Ptr<_249cb078b_TypeKind>&, jule::Ptr<_249c80052_Data>&, jule::Ptr<_23abd3d83_Token>);
inline jule::Bool _249c242c1_checkTypeCompatibility(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249cb078b_TypeKind>&, jule::Ptr<_249cb078b_TypeKind>&, jule::Ptr<_23abd3d83_Token>&);
inline jule::Ptr<_249cb078b_TypeKind> _249c2469a_buildNonGenericTypeKind(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_2490463c4_TypeDecl>&, jule::Slice<jule::Ptr<_2490539a8_GenericDecl>>&);
inline void _249c24953_buildFnNonGenericTypeKinds(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bcc312_FnIns>&);
inline jule::Ptr<_249bcc312_FnIns> _249c24c72_getTraitCheckFnKind(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bcbe38_Fn>&);
inline jule::Bool _249c251c3_checkConstraintsFn(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bcc312_FnIns>&, jule::Ptr<_23abd3d83_Token>&, jule::Ptr<_249bcc312_FnIns>);
inline jule::Bool _249c25624_checkConstraintsStruct(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249062e4b_StructIns>&, jule::Ptr<_23abd3d83_Token>&, jule::Ptr<_249062e4b_StructIns>);
inline jule::Bool _249c259cb_fnEnvironment(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bcc312_FnIns>&, jule::Fn<jule::Bool(jule::Ptr<_249c192c7_Sema>&,jule::Slice<jule::Ptr<_249caea98_TypeAlias>>&)>);
inline void _249c25c51_checkFnParamKind(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bcc125_ParamIns>&);
inline jule::Bool _249c2605e_reloadFnInsTypes(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bcc312_FnIns>);
inline jule::Bool _249c264d2_checkRefValidityForInitExpr(jule::Ptr<_249c192c7_Sema>, jule::Bool, jule::Ptr<_249c80052_Data>&, jule::Ptr<_23abd3d83_Token>&);
inline jule::Bool _249c26aa9_checkValidityForInitExpr(jule::Ptr<_249c192c7_Sema>, jule::Bool, jule::Bool, jule::Ptr<_249cb078b_TypeKind>&, jule::Ptr<_249c80052_Data>&, jule::Ptr<_23abd3d83_Token>&);
inline jule::Bool _249c26e72_checkTypeAliasDeclKind(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249caea98_TypeAlias>&, jule::Trait<_249ccb3bc_Lookup>);
inline void _249c27291_checkTypeAliasDecl(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249caea98_TypeAlias>&, jule::Trait<_249ccb3bc_Lookup>);
inline void _249c27516_checkTypeAliasDeclDup(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249caea98_TypeAlias>&);
inline jule::Bool _249c2777a_checkTypeAliasDecls(jule::Ptr<_249c192c7_Sema>);
inline void _24eade263_checkEnumItemsDup(_249c192c7_Sema*, jule::Slice<jule::Ptr<_249bd6030_EnumItem>>);
inline void _24ec2eeca_checkEnumItemsDup(_249c192c7_Sema*, jule::Slice<jule::Ptr<_249bd7a59_TypeEnumItem>>);
inline void _249c27c75_checkEnumItemsStr(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bd6a25_Enum>&);
inline void _249c27eea_checkEnumItemsInt(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bd6a25_Enum>&);
inline void _249c28270_checkEnumDecl(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bd6a25_Enum>&);
inline void _249c284e5_checkTypeEnumDecl(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bd8120_TypeEnum>&);
inline jule::Bool _249c28759_checkEnumDecls(jule::Ptr<_249c192c7_Sema>);
inline jule::Bool _249c289bd_checkTypeEnumDecls(jule::Ptr<_249c192c7_Sema>);
inline jule::Bool _249c28ccb_checkDeclGenerics(_249c192c7_Sema*, jule::Slice<jule::Ptr<_2490539a8_GenericDecl>>&);
inline jule::Bool _249c290d9_checkFnDeclParamsDup(_249c192c7_Sema*, jule::Ptr<_249bcbe38_Fn>&);
inline jule::Bool _249c293e7_checkFnDeclResultDup(_249c192c7_Sema*, jule::Ptr<_249bcbe38_Fn>&);
inline void _249c2966c_checkFnDeclPrototype(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bcbe38_Fn>&);
inline void _249c298e2_checkTraitDeclMethod(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bcbe38_Fn>&);
inline void _249c29b67_checkTraitDeclMethods(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bd48d0_Trait>&);
inline void _249c29ddc_checkTraitDecl(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bd48d0_Trait>&);
inline jule::Bool _249c2a151_checkTraitDecls(jule::Ptr<_249c192c7_Sema>);
inline jule::Bool _249c2a508_checkTraitImplMethods(_249c192c7_Sema*, jule::Ptr<_249bd48d0_Trait>&, jule::Ptr<_249bdc5ca_Impl>&);
inline jule::Bool _249c2a8b0_implToStruct(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249036b01_Struct>&, jule::Ptr<_249bdc5ca_Impl>&);
inline void _249c2ab35_implTrait(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bdc5ca_Impl>&);
inline void _249c2adaa_implStruct(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bdc5ca_Impl>&);
inline void _249c2b130_implImpl(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bdc5ca_Impl>&);
inline void _249c2b44e_checkVarDecl(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249c3702b_Var>&, jule::Trait<_249ccb3bc_Lookup>);
inline void _249c2b6c4_checkGlobalVarDecl(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249c3702b_Var>&);
inline jule::Bool _249c2b938_checkGlobalDecls(jule::Ptr<_249c192c7_Sema>);
inline jule::Bool _249c2bce0_checkStructTraitImpl(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249036b01_Struct>&, jule::Ptr<_249bd48d0_Trait>&);
inline jule::Bool _249c2c0ed_checkStructImpls(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249036b01_Struct>&);
inline jule::Bool _249c2c40b_checkStructFields(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249036b01_Struct>&);
inline void _249c2c681_checkStructDecl(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249036b01_Struct>&);
inline jule::Bool _249c2c8e5_checkStructDecls(jule::Ptr<_249c192c7_Sema>);
inline void _249c2cb6a_checkFnDecl(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bcbe38_Fn>&);
inline jule::Bool _249c2cdce_checkFnDecls(jule::Ptr<_249c192c7_Sema>);
inline void _249c2d297_pushCycleError(_249c192c7_Sema*, jule::Ptr<_249036b01_Struct>&, jule::Ptr<_249036b01_Struct>&, jule::Str&);
inline jule::Bool _249c2d6e8_checkCrossCycle(_249c192c7_Sema*, jule::Ptr<_249036b01_Struct>&, jule::Ptr<_249036b01_Struct>&, jule::Str&);
inline jule::Bool _249c2db6b_checkStructDeriveIllegalCycles(_249c192c7_Sema*, jule::Str, jule::Ptr<_249036b01_Struct>&, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249c2deac_checkStructInsDeriveClone(_249c192c7_Sema*, jule::Ptr<_249062e4b_StructIns>);
inline void _249c2e199_checkPackageDecls(jule::Ptr<_249c192c7_Sema>);
inline void _249c2e4da_checkDataForTypeInference(_249c192c7_Sema*, jule::Ptr<_249c80052_Data>&, jule::Ptr<_23abd3d83_Token>&);
inline void _249c2e771_checkVar(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249c3702b_Var>&);
inline void _249c2ea90_checkTypeVar(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249c3702b_Var>&, jule::Trait<_249ccb3bc_Lookup>);
inline void _249c2ec6b_checkGlobalTypes(jule::Ptr<_249c192c7_Sema>);
inline jule::Ptr<_249bcc312_FnIns> _249c30123_readyToCheckFn(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249062e4b_StructIns>&, jule::Ptr<_249bcbe38_Fn>&);
inline void _249c30442_checkTypeMethod(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249062e4b_StructIns>&, jule::Ptr<_249bcbe38_Fn>&);
inline jule::Ptr<_249bcc312_FnIns> _249c30893_checkStructInsOp(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249062e4b_StructIns>&, jule::Ptr<_249bcbe38_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>);
inline jule::Bool _249c30c4a_checkStructEnv(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249062e4b_StructIns>&, jule::Ptr<_23abd3d83_Token>);
inline jule::Bool _249c31102_precheckStructIns(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249062e4b_StructIns>&, jule::Ptr<_23abd3d83_Token>);
inline void _249c31377_checkStructIns(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249062e4b_StructIns>&);
inline void _249c315ec_checkTypeStruct(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249036b01_Struct>&);
inline void _249c317c8_checkStructTypes(jule::Ptr<_249c192c7_Sema>);
inline void _249c31a70_checkStructInsOperators(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249062e4b_StructIns>);
inline void _249c31d06_precheckStructType(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249036b01_Struct>&);
inline void _249c31ed2_precheckStructTypes(jule::Ptr<_249c192c7_Sema>);
inline void _249c32257_checkRets(_249c192c7_Sema*, jule::Ptr<_249bcc312_FnIns>&);
inline void _249c32576_checkFnInsSc(_249c192c7_Sema*, jule::Ptr<_249bcc312_FnIns>&, jule::Ptr<_249be9296_scopeChecker>&);
inline void _249c32895_checkFnInsCaller(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bcc312_FnIns>&, jule::Ptr<_23abd3d83_Token>);
inline void _249c32b1a_checkFnIns(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bcc312_FnIns>&);
inline void _249c32d90_checkTypeFn(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bcbe38_Fn>&);
inline void _249c33115_checkTestFn(_249c192c7_Sema*, jule::Ptr<_249bcc312_FnIns>&);
inline void _249c3338a_precheckTypeFn(jule::Ptr<_249c192c7_Sema>, jule::Ptr<_249bcbe38_Fn>&);
inline void _249c33566_precheckFnTypes(jule::Ptr<_249c192c7_Sema>);
inline void _249c33742_checkFnTypes(jule::Ptr<_249c192c7_Sema>);
inline void _249c3391d_checkPackageTypes(jule::Ptr<_249c192c7_Sema>);
inline void _249c33ae9_setFileSemaFields(jule::Ptr<_249c192c7_Sema>);
inline void _249c33cc5_setSemaFields(jule::Ptr<_249c192c7_Sema>);
inline void _249c3404a_check(jule::Ptr<_249c192c7_Sema>, jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>&);
struct _249c192c7_Sema {
	jule::Slice<_23a8a5ca8_Log> _field_errors = jule::Slice<_23a8a5ca8_Log>();
	jule::Slice<jule::Ptr<_249c7a228_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>();
	jule::Ptr<_249c7a228_SymbolTable> _field_file = jule::Ptr<_249c7a228_SymbolTable>();
	jule::I64 _field_flags = 0LL;
	

	_249c192c7_Sema(void) = default;

	inline bool operator==(_249c192c7_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_249c192c7_Sema _other) { return !this->operator==(_other); }


};
inline _249c34402_missingRetChecker static__249c347ba_new(void);
inline jule::Bool _249c34a95_checkConditional(_249c34402_missingRetChecker*, jule::Ptr<_249be3191_Conditional>);
inline jule::Bool _249c34da3_checkMatch(_249c34402_missingRetChecker*, jule::Ptr<_249be6381_Match>);
inline jule::Bool _249c351b1_checkInfIter(_249c34402_missingRetChecker*, jule::Ptr<_249be347c_InfIter>);
inline jule::Bool _249c354be_checkScope(_249c34402_missingRetChecker*, jule::Ptr<_249be2635_Scope>);
inline jule::Bool _249c357cc_check(_249c34402_missingRetChecker*, jule::Ptr<_249be2635_Scope>);
struct _249c34402_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked = jule::Slice<jule::Uintptr>();
	jule::Bool _field_falled = jule::Bool();
	

	_249c34402_missingRetChecker(void) = default;

	inline bool operator==(_249c34402_missingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_249c34402_missingRetChecker _other) { return !this->operator==(_other); }


};
struct _249c360b3_IterRelation {
	jule::Ptr<_249c3702b_Var> _field_Range = jule::Ptr<_249c3702b_Var>();
	

	_249c360b3_IterRelation(void) = default;

	inline bool operator==(_249c360b3_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_249c360b3_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _249c373e4_IsInitialized(_249c3702b_Var*);
inline jule::Bool _249c37658_IsTypeInferred(_249c3702b_Var*);
inline jule::Bool _249c378bc_untypedConstant(_249c3702b_Var*);
struct _249c3702b_Var {
	jule::Ptr<_249be2635_Scope> _field_Scope = jule::Ptr<_249be2635_Scope>();
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Constant = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Used = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_249cb48e4_TypeSymbol> _field_Kind = jule::Ptr<_249cb48e4_TypeSymbol>();
	jule::Ptr<_249c810ca_Value> _field_Value = jule::Ptr<_249c810ca_Value>();
	jule::Ptr<_249bcccd5_ReferenceStack> _field_Refers = jule::Ptr<_249bcccd5_ReferenceStack>();
	jule::Slice<jule::Ptr<_24900cb2c_Directive>> _field_Directives = jule::Slice<jule::Ptr<_24900cb2c_Directive>>();
	jule::Ptr<_249c360b3_IterRelation> _field_IterRelation = jule::Ptr<_249c360b3_IterRelation>();
	jule::Slice<jule::Ptr<_249c3702b_Var>> _field_Depends = jule::Slice<jule::Ptr<_249c3702b_Var>>();
	

	_249c3702b_Var(void) = default;

	inline bool operator==(_249c3702b_Var _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Public == _other._field_Public &&
			this->_field_Used == _other._field_Used &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Value == _other._field_Value &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_IterRelation == _other._field_IterRelation &&
			this->_field_Depends == _other._field_Depends;
	}

	inline bool operator!=(_249c3702b_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__249c3844a_Dispose(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c386e2_Str(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c38a33_logical(jule::Ptr<_249bcbe38_Fn>&, jule::Str);
inline jule::Bool static__249c38cca_Eq(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c39072_Gt(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c39319_GtEq(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c395b1_Lt(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c39858_LtEq(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c39b99_result(jule::Ptr<_249bcbe38_Fn>&, jule::Str);
inline jule::Bool static__249c39e41_Shl(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3a1d8_Shr(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3a480_Add(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3a727_Sub(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3a9be_Div(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3ac66_Mul(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3b00d_Mod(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3b2a5_BitAnd(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3b54c_BitOr(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3b7e4_BitXor(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3bb35_unary(jule::Ptr<_249bcbe38_Fn>&, jule::Str);
inline jule::Bool static__249c3bdcc_Neg(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3c174_Pos(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3c41b_BitNot(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3c75c_assign(jule::Ptr<_249bcbe38_Fn>&, jule::Str);
inline jule::Bool static__249c3ca04_AddAssign(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3cc9b_SubAssign(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3d043_DivAssign(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3d2da_MulAssign(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3d582_ModAssign(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3d829_ShlAssign(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3dac1_ShrAssign(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3dd68_BitOrAssign(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3e110_BitAndAssign(jule::Ptr<_249bcbe38_Fn>);
inline jule::Bool static__249c3e3a7_BitXorAssign(jule::Ptr<_249bcbe38_Fn>);
struct _249c37cc9_FuncPattern {
	

	_249c37cc9_FuncPattern(void) = default;

	inline bool operator==(_249c37cc9_FuncPattern _other) { return true; }

	inline bool operator!=(_249c37cc9_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _249c69217_pushErr(_249c68bea_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _249c6947b_checkTrait(_249c68bea_typeCompatibilityChecker*);
inline jule::Bool _249c696e0_checkPtr(_249c68bea_typeCompatibilityChecker*);
inline jule::Bool _249c69954_checkPrim(_249c68bea_typeCompatibilityChecker*);
inline jule::Bool _249c69d0b_typeEnum(_249c68bea_typeCompatibilityChecker*, jule::Ptr<_249bd8120_TypeEnum>&, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249c6a070_checkTypeEnum(_249c68bea_typeCompatibilityChecker*);
inline jule::Bool _249c6a2d4_check(_249c68bea_typeCompatibilityChecker*);
struct _249c68bea_typeCompatibilityChecker {
	jule::Ptr<_249c192c7_Sema> _field_s = jule::Ptr<_249c192c7_Sema>();
	jule::Ptr<_249cb078b_TypeKind> _field_dest = jule::Ptr<_249cb078b_TypeKind>();
	jule::Ptr<_249cb078b_TypeKind> _field_src = jule::Ptr<_249cb078b_TypeKind>();
	jule::Ptr<_23abd3d83_Token> _field_errorToken = jule::Ptr<_23abd3d83_Token>();
	

	_249c68bea_typeCompatibilityChecker(void) = default;

	inline bool operator==(_249c68bea_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_249c68bea_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _249c6ac85_pushErr(_249c6a823_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _249c6aee9_checkValidity(_249c6a823_assignTypeChecker*);
inline jule::Bool _249c6b25d_checkConst(_249c6a823_assignTypeChecker*);
inline jule::Bool _249c6b4c2_isPrim(_249c6a823_assignTypeChecker*);
inline jule::Bool _249c6b736_checkCompatibility(_249c6a823_assignTypeChecker*);
inline jule::Bool _249c6b99a_check(_249c6a823_assignTypeChecker*);
struct _249c6a823_assignTypeChecker {
	jule::Ptr<_249c192c7_Sema> _field_s = jule::Ptr<_249c192c7_Sema>();
	jule::Ptr<_249cb078b_TypeKind> _field_dest = jule::Ptr<_249cb078b_TypeKind>();
	jule::Ptr<_249c80052_Data> _field_d = jule::Ptr<_249c80052_Data>();
	jule::Ptr<_23abd3d83_Token> _field_errorToken = jule::Ptr<_23abd3d83_Token>();
	

	_249c6a823_assignTypeChecker(void) = default;

	inline bool operator==(_249c6a823_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_249c6a823_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _24edd7ca9_annotateConstraintElem(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _24edd744b_annotateConstraintElem(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _24edd7737_annotateConstraintElem(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _24ede1037_annotateConstraintElem(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249c6cb22_annotateConstraintMap(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249c6ce30_annotateConstraintTup(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249c6d23d_annotateConstraintFn(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249c6d56d_annotateConstraintIdent(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249c6d88c_annotateConstraint(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&);
inline void _249c6dbab_pushGeneric(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&, jule::I64);
inline jule::Bool _249c6deb9_annotatePrim(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249c6e2c7_annotateArr(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249c6e5d5_annotateSlc(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249c6e98c_checkMapKey(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249c6ec9a_annotateMap(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249c700a8_annotateFn(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249c703b6_annotatePtr(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249c706c4_annotateSptr(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249c709d2_annotateStruct(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249c70ce0_annotateAny(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249c710ed_annotateKind(_249c6c23c_dynamicTypeAnnotation*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249c71362_annotate(_249c6c23c_dynamicTypeAnnotation*);
struct _249c6c23c_dynamicTypeAnnotation {
	jule::Ptr<_249c81ac0_Eval> _field_e = jule::Ptr<_249c81ac0_Eval>();
	jule::Ptr<_249bcc312_FnIns> _field_f = jule::Ptr<_249bcc312_FnIns>();
	jule::Ptr<_249bcc125_ParamIns> _field_p = jule::Ptr<_249bcc125_ParamIns>();
	jule::Ptr<_249c80052_Data> _field_a = jule::Ptr<_249c80052_Data>();
	jule::Ptr<_23abd3d83_Token> _field_errorToken = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_249cb078b_TypeKind>* _field_k = nullptr;
	jule::Ptr<_2490463c4_TypeDecl> _field_c = jule::Ptr<_2490463c4_TypeDecl>();
	

	_249c6c23c_dynamicTypeAnnotation(void) = default;

	inline bool operator==(_249c6c23c_dynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_k == _other._field_k &&
			this->_field_c == _other._field_c;
	}

	inline bool operator!=(_249c6c23c_dynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _249c72088_pushErrToken(_249c71a38_fnCallArgChecker*, jule::Ptr<_23abd3d83_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _249c723a7_pushErr(_249c71a38_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_249bcc125_ParamIns>> _249c7261b_getParams(_249c71a38_fnCallArgChecker*);
inline jule::Bool _249c72929_checkCounts(_249c71a38_fnCallArgChecker*, jule::Slice<jule::Ptr<_249bcc125_ParamIns>>&);
inline jule::Bool _249c72d7a_checkArg(_249c71a38_fnCallArgChecker*, jule::Ptr<_249bcc125_ParamIns>&, jule::Ptr<_249c80052_Data>&, jule::Ptr<_23abd3d83_Token>&);
inline jule::Bool _249c73232_push(_249c71a38_fnCallArgChecker*, jule::Ptr<_249bcc125_ParamIns>&, jule::Ptr<_24904a8e5_Expr>);
inline jule::Bool _249c735d9_pushVariadic(_249c71a38_fnCallArgChecker*, jule::Ptr<_249bcc125_ParamIns>&, jule::I64);
inline jule::Bool _249c738e7_checkArgs(_249c71a38_fnCallArgChecker*, jule::Slice<jule::Ptr<_249bcc125_ParamIns>>&);
inline jule::Bool _249c73b7d_checkDynamicTypeAnnotation(_249c71a38_fnCallArgChecker*);
inline jule::Bool _249c73e03_check(_249c71a38_fnCallArgChecker*);
struct _249c71a38_fnCallArgChecker {
	jule::Ptr<_249c81ac0_Eval> _field_e = jule::Ptr<_249c81ac0_Eval>();
	jule::Slice<jule::Ptr<_24904a8e5_Expr>> _field_args = jule::Slice<jule::Ptr<_24904a8e5_Expr>>();
	jule::Ptr<_23abd3d83_Token> _field_errorToken = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_249bcc312_FnIns> _field_f = jule::Ptr<_249bcc312_FnIns>();
	jule::Bool _field_dynamicAnnotation = jule::Bool();
	jule::Slice<jule::Any> _field_argModels = jule::Slice<jule::Any>();
	

	_249c71a38_fnCallArgChecker(void) = default;

	inline bool operator==(_249c71a38_fnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_f == _other._field_f &&
			this->_field_dynamicAnnotation == _other._field_dynamicAnnotation &&
			this->_field_argModels == _other._field_argModels;
	}

	inline bool operator!=(_249c71a38_fnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _249c7494d_pushErr(_249c74442_structLitChecker*, jule::Ptr<_23abd3d83_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _249c74c6c_pushSugggestion(_249c74442_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _249c75135_pushMatch(_249c74442_structLitChecker*, jule::Ptr<_24903e268_FieldIns>&, jule::Ptr<_249c80052_Data>&, jule::Ptr<_23abd3d83_Token>&);
inline void _249c75454_checkPair(_249c74442_structLitChecker*, jule::Ptr<_249050642_FieldExprPair>&, jule::Slice<jule::Ptr<_24904a8e5_Expr>>&);
inline jule::Bool _249c75762_readyExprs(_249c74442_structLitChecker*, jule::Slice<jule::Ptr<_24904a8e5_Expr>>&);
inline void _249c759d7_check(_249c74442_structLitChecker*, jule::Slice<jule::Ptr<_24904a8e5_Expr>>&);
struct _249c74442_structLitChecker {
	jule::Ptr<_249c81ac0_Eval> _field_e = jule::Ptr<_249c81ac0_Eval>();
	jule::Ptr<_23abd3d83_Token> _field_errorToken = jule::Ptr<_23abd3d83_Token>();
	jule::Ptr<_249062e4b_StructIns> _field_s = jule::Ptr<_249062e4b_StructIns>();
	jule::Slice<jule::Ptr<_249bc67b2_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_249bc67b2_StructArgExprModel>>();
	

	_249c74442_structLitChecker(void) = default;

	inline bool operator==(_249c74442_structLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_249c74442_structLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_249c3702b_Var> _249c764bb_buildVar(_249c76026_rangeChecker*, jule::Ptr<_2490591b7_VarDecl>&);
inline void _249c76697_setSizeKey(_249c76026_rangeChecker*);
inline void _249c76a60_checkRangeExprValidity(_249c76026_rangeChecker*, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c3702b_Var>&, jule::Ptr<_249cb078b_TypeKind>&);
inline void _249c76c3b_checkSlice(_249c76026_rangeChecker*);
inline void _249c76e17_checkArray(_249c76026_rangeChecker*);
inline void _249c770e3_checkMapKeyA(_249c76026_rangeChecker*);
inline void _249c772be_checkMapKeyB(_249c76026_rangeChecker*);
inline void _249c7749a_checkMap(_249c76026_rangeChecker*);
inline void _249c77676_checkStr(_249c76026_rangeChecker*);
inline jule::Bool _249c778da_check(_249c76026_rangeChecker*);
struct _249c76026_rangeChecker {
	jule::Ptr<_249be9296_scopeChecker> _field_sc = jule::Ptr<_249be9296_scopeChecker>();
	jule::Ptr<_24905ad45_RangeKind> _field_rang = jule::Ptr<_24905ad45_RangeKind>();
	jule::Ptr<_249be42d5_RangeIter> _field_Kind = jule::Ptr<_249be42d5_RangeIter>();
	jule::Ptr<_249c80052_Data> _field_d = jule::Ptr<_249c80052_Data>();
	

	_249c76026_rangeChecker(void) = default;

	inline bool operator==(_249c76026_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_249c76026_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _249c78633_prepareTypes(_249c7817c_retTypeChecker*);
inline void _249c788a8_prepareExprs(_249c7817c_retTypeChecker*, jule::Ptr<_24904a8e5_Expr>&);
inline void _249c78a84_retVars(_249c7817c_retTypeChecker*);
inline void _249c78c60_checkExprs(_249c7817c_retTypeChecker*);
inline jule::Bool _249c7906d_check(_249c7817c_retTypeChecker*, jule::Ptr<_24904a8e5_Expr>&);
struct _249c7817c_retTypeChecker {
	jule::Ptr<_249be9296_scopeChecker> _field_sc = jule::Ptr<_249be9296_scopeChecker>();
	jule::Ptr<_249bcc312_FnIns> _field_f = jule::Ptr<_249bcc312_FnIns>();
	jule::Slice<jule::Ptr<_249cb078b_TypeKind>> _field_types = jule::Slice<jule::Ptr<_249cb078b_TypeKind>>();
	jule::Slice<jule::Ptr<_24904a8e5_Expr>> _field_exprs = jule::Slice<jule::Ptr<_24904a8e5_Expr>>();
	jule::Slice<jule::Ptr<_249c3702b_Var>> _field_vars = jule::Slice<jule::Ptr<_249c3702b_Var>>();
	jule::Ptr<_23abd3d83_Token> _field_errorToken = jule::Ptr<_23abd3d83_Token>();
	jule::Any _field_model = jule::Any();
	

	_249c7817c_retTypeChecker(void) = default;

	inline bool operator==(_249c7817c_retTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_249c7817c_retTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_249c1117b_ImportInfo> _249c7a745_FindPackage(_249c7a228_SymbolTable*, jule::Str);
inline jule::Ptr<_249c1117b_ImportInfo> _249c7aa53_SelectPackage(_249c7a228_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_249c1117b_ImportInfo>)>);
inline jule::Ptr<_249c3702b_Var> _249c7ae0a_FindVar(_249c7a228_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_249caea98_TypeAlias> _249c7b2b2_FindTypeAlias(_249c7a228_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_249036b01_Struct> _249c7b669_FindStruct(_249c7a228_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_249bcbe38_Fn> _249c7ba21_FindFn(_249c7a228_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_249bd48d0_Trait> _249c7bd2e_FindTrait(_249c7a228_SymbolTable*, jule::Str);
inline jule::Ptr<_249bd6a25_Enum> _249c7c13c_FindEnum(_249c7a228_SymbolTable*, jule::Str);
inline jule::Ptr<_249bd8120_TypeEnum> _249c7c44a_FindTypeEnum(_249c7a228_SymbolTable*, jule::Str);
inline jule::Ptr<_249c3702b_Var> _249c7c9bc_findVar(_249c7a228_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_249caea98_TypeAlias> _249c7ce1d_findTypeAlias(_249c7a228_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _249c7d2c5_defByIdent(_249c7a228_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _249c7d726_isDuplicatedIdent(_249c7a228_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _249c7a228_SymbolTable {
	jule::Ptr<_23abd921d_File> _field_File = jule::Ptr<_23abd921d_File>();
	jule::Slice<_249bcd5cc_Pass> _field_Passes = jule::Slice<_249bcd5cc_Pass>();
	jule::Slice<jule::Ptr<_249c1117b_ImportInfo>> _field_Imports = jule::Slice<jule::Ptr<_249c1117b_ImportInfo>>();
	jule::Slice<jule::Ptr<_249c3702b_Var>> _field_Vars = jule::Slice<jule::Ptr<_249c3702b_Var>>();
	jule::Slice<jule::Ptr<_249caea98_TypeAlias>> _field_TypeAliases = jule::Slice<jule::Ptr<_249caea98_TypeAlias>>();
	jule::Slice<jule::Ptr<_249036b01_Struct>> _field_Structs = jule::Slice<jule::Ptr<_249036b01_Struct>>();
	jule::Slice<jule::Ptr<_249bcbe38_Fn>> _field_Funcs = jule::Slice<jule::Ptr<_249bcbe38_Fn>>();
	jule::Slice<jule::Ptr<_249bd48d0_Trait>> _field_Traits = jule::Slice<jule::Ptr<_249bd48d0_Trait>>();
	jule::Slice<jule::Ptr<_249bd6a25_Enum>> _field_Enums = jule::Slice<jule::Ptr<_249bd6a25_Enum>>();
	jule::Slice<jule::Ptr<_249bd8120_TypeEnum>> _field_TypeEnums = jule::Slice<jule::Ptr<_249bd8120_TypeEnum>>();
	jule::Slice<jule::Ptr<_249bdc5ca_Impl>> _field_Impls = jule::Slice<jule::Ptr<_249bdc5ca_Impl>>();
	

	_249c7a228_SymbolTable(void) = default;

	inline bool operator==(_249c7a228_SymbolTable _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Imports == _other._field_Imports &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_TypeAliases == _other._field_TypeAliases &&
			this->_field_Structs == _other._field_Structs &&
			this->_field_Funcs == _other._field_Funcs &&
			this->_field_Traits == _other._field_Traits &&
			this->_field_Enums == _other._field_Enums &&
			this->_field_TypeEnums == _other._field_TypeEnums &&
			this->_field_Impls == _other._field_Impls;
	}

	inline bool operator!=(_249c7a228_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _249c8043c_IsNil(_249c80052_Data*);
inline jule::Bool _249c806a1_IsVoid(_249c80052_Data*);
inline jule::Bool _249c80915_IsConst(_249c80052_Data*);
inline jule::Bool _249c80c23_GoodOperand(_249c80052_Data*, jule::Ptr<_249c80052_Data>&);
struct _249c80052_Data {
	jule::Bool _field_untyped = jule::Bool();
	jule::Ptr<_249cb078b_TypeKind> _field_Kind = jule::Ptr<_249cb078b_TypeKind>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Bool _field_Lvalue = jule::Bool();
	jule::Bool _field_IsRune = jule::Bool();
	jule::Any _field_Model = jule::Any();
	jule::Bool _field_Decl = jule::Bool();
	jule::Ptr<_2491152a6_Const> _field_Constant = jule::Ptr<_2491152a6_Const>();
	

	_249c80052_Data(void) = default;

	inline bool operator==(_249c80052_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_249c80052_Data _other) { return !this->operator==(_other); }


};
struct _249c810ca_Value {
	jule::Ptr<_24904a8e5_Expr> _field_Expr = jule::Ptr<_24904a8e5_Expr>();
	jule::Ptr<_249c80052_Data> _field_Data = jule::Ptr<_249c80052_Data>();
	

	_249c810ca_Value(void) = default;

	inline bool operator==(_249c810ca_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_249c810ca_Value _other) { return !this->operator==(_other); }


};
inline void _249c820cb_pushErr(_249c81ac0_Eval*, jule::Ptr<_23abd3d83_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _249c823ea_pushSugggestion(_249c81ac0_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _249c825c6_allowBuiltin(_249c81ac0_Eval*);
inline void _249c827a2_disallowBuiltin(_249c81ac0_Eval*);
inline jule::Bool _249c82a16_isUnsafe(_249c81ac0_Eval*);
inline jule::Bool _249c82c7a_isGlobal(_249c81ac0_Eval*);
inline jule::Bool _249c83055_applyNumericPrefix(_249c81ac0_Eval*, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249c832b9_litNil(_249c81ac0_Eval*);
inline jule::Ptr<_249c80052_Data> _249c835c7_litStr(_249c81ac0_Eval*, jule::Ptr<_24904b929_LitExpr>&);
inline jule::Ptr<_249c80052_Data> _249c838d5_litBool(_249c81ac0_Eval*, jule::Ptr<_24904b929_LitExpr>&);
inline jule::Ptr<_249c80052_Data> _249c83be3_litRune(_249c81ac0_Eval*, jule::Ptr<_24904b929_LitExpr>&);
inline jule::Ptr<_249c80052_Data> _249c84001_litFloat(_249c81ac0_Eval*, jule::Ptr<_24904b929_LitExpr>&);
inline jule::Ptr<_249c80052_Data> _249c8430e_litInt(_249c81ac0_Eval*, jule::Ptr<_24904b929_LitExpr>&);
inline jule::Ptr<_249c80052_Data> _249c8461c_litNum(_249c81ac0_Eval*, jule::Ptr<_24904b929_LitExpr>&);
inline jule::Ptr<_249c80052_Data> _249c8492a_evalLit(_249c81ac0_Eval*, jule::Ptr<_24904b929_LitExpr>);
inline jule::Any _249c84c38_findBuiltins(_249c81ac0_Eval*, jule::Str);
inline jule::Any _249c850e0_getDef(_249c81ac0_Eval*, jule::Str, jule::Bool);
inline void _25003e3e9_pushReference(_249c81ac0_Eval*, jule::Ptr<_249bcc312_FnIns>&);
inline void _2500551ac_pushReference(_249c81ac0_Eval*, jule::Ptr<_249c3702b_Var>&);
inline void _250101115_pushReference(_249c81ac0_Eval*, jule::Ptr<_249062e4b_StructIns>&);
inline jule::Ptr<_249c80052_Data> _249c85673__evalEnum(_249c81ac0_Eval*, jule::Ptr<_249bd6a25_Enum>);
inline jule::Ptr<_249c80052_Data> _249c85a2a_evalEnum(_249c81ac0_Eval*, jule::Ptr<_249bd6a25_Enum>, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c85d38__evalTypeEnum(_249c81ac0_Eval*, jule::Ptr<_249bd8120_TypeEnum>);
inline jule::Ptr<_249c80052_Data> _249c861e0_evalTypeEnum(_249c81ac0_Eval*, jule::Ptr<_249bd8120_TypeEnum>, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c864ed__evalStruct(_249c81ac0_Eval*, jule::Ptr<_249062e4b_StructIns>);
inline jule::Ptr<_249c80052_Data> _249c868a5_evalStruct(_249c81ac0_Eval*, jule::Ptr<_249062e4b_StructIns>, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c86bb3_evalFnIns(_249c81ac0_Eval*, jule::Ptr<_249bcc312_FnIns>);
inline void _249c86ed2_checkDeprecated(_249c81ac0_Eval*, jule::Slice<jule::Ptr<_24900cb2c_Directive>>&, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c87389_evalFn(_249c81ac0_Eval*, jule::Ptr<_249bcbe38_Fn>, jule::Ptr<_23abd3d83_Token>);
inline void _249c87752_pushIllegalCycleError(_249c81ac0_Eval*, jule::Ptr<_249c3702b_Var>&, jule::Ptr<_249c3702b_Var>&, jule::Str&);
inline jule::Bool _249c87b09_checkCrossCycle(_249c81ac0_Eval*, jule::Ptr<_249c3702b_Var>&, jule::Str&);
inline jule::Bool _249c87eb1_checkIllegalCycles(_249c81ac0_Eval*, jule::Ptr<_249c3702b_Var>&, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c88368_evalVar(_249c81ac0_Eval*, jule::Ptr<_249c3702b_Var>, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c88720_evalTypeAlias(_249c81ac0_Eval*, jule::Ptr<_249caea98_TypeAlias>, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c88ac7_evalDef(_249c81ac0_Eval*, jule::Any, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c88dd5_evalIdent(_249c81ac0_Eval*, jule::Ptr<_24904c95d_IdentExpr>);
inline jule::Ptr<_249c80052_Data> _249c891e3_evalUnary(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_24904d167_UnaryExpr>);
inline jule::Ptr<_249c80052_Data> _249c89501_evalVariadic(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_24904d51e_VariadicExpr>);
inline jule::Ptr<_249c80052_Data> _249c8980e_evalUnsafe(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_24904c133_UnsafeExpr>);
inline jule::Ptr<_249c80052_Data> _249c89b1c_evalArr(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_24905229d_SliceExpr>);
inline jule::Ptr<_249c80052_Data> _249c8a06d_evalExpSlc(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_24905229d_SliceExpr>, jule::Ptr<_249cb078b_TypeKind>, jule::Any);
inline jule::Ptr<_249c80052_Data> _249c8a37b_evalSliceExpr(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_24905229d_SliceExpr>);
inline void _249c8a6bc_checkIntegerIndexingByData(_249c81ac0_Eval*, jule::Ptr<_249c80052_Data>&, jule::Ptr<_23abd3d83_Token>);
inline void _249c8aa96_indexingPtr(_249c81ac0_Eval*, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249052b3e_IndexingExpr>&);
inline void _249c8ae5e_indexingArr(_249c81ac0_Eval*, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249052b3e_IndexingExpr>&);
inline void _249c8b327_indexingSlc(_249c81ac0_Eval*, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249052b3e_IndexingExpr>&);
inline void _249c8b6e0_indexingMap(_249c81ac0_Eval*, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249052b3e_IndexingExpr>&);
inline void _249c8baa8_indexingStr(_249c81ac0_Eval*, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249052b3e_IndexingExpr>&);
inline void _249c8be71_toIndexing(_249c81ac0_Eval*, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249052b3e_IndexingExpr>&);
inline jule::Bool _249c8c3e4_pushGenericsFromExprSubIdent(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_24904e201_SubIdentExpr>&, jule::Slice<jule::Ptr<_2490463c4_TypeDecl>>&, jule::Ptr<_24904a8e5_Expr>&);
inline jule::Bool _249c8c7ac_pushGenericsFromData(jule::Ptr<_249c81ac0_Eval>, jule::Slice<jule::Ptr<_2490463c4_TypeDecl>>&, jule::Ptr<_24904a8e5_Expr>&);
inline void _249c8caed_evalIdentDeclFromIndexing(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249052b3e_IndexingExpr>&);
inline jule::Bool _249c8d060_checkGenericFn(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_249bcc312_FnIns>&, jule::Ptr<_23abd3d83_Token>&, jule::Any&);
inline void _249c8d3a1_evalFnGenericFromIndexing(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249052b3e_IndexingExpr>&);
inline jule::Ptr<_249c80052_Data> _249c8d6c0_evalIndexing(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_249052b3e_IndexingExpr>);
inline std::tuple<jule::Ptr<_249c80052_Data>,jule::Ptr<_249c80052_Data>> _249c8d9cd_evalSlicingExprs(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_249053249_SlicingExpr>&);
inline void _249c8dc53_slicingArr(_249c81ac0_Eval*, jule::Ptr<_249c80052_Data>&);
inline void _249c8e11b_slicingStr(_249c81ac0_Eval*, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&);
inline void _249c8e57d_checkSlicing(_249c81ac0_Eval*, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249053249_SlicingExpr>&);
inline jule::Ptr<_249c80052_Data> _249c8e88b_evalSlicing(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_249053249_SlicingExpr>);
inline void _249c8ec54_castPtr(_249c81ac0_Eval*, jule::Ptr<_249cb078b_TypeKind>, jule::Ptr<_249c80052_Data>, jule::Ptr<_23abd3d83_Token>);
inline void _249c9011c_castStruct(_249c81ac0_Eval*, jule::Ptr<_249cb078b_TypeKind>, jule::Ptr<_249c80052_Data>, jule::Ptr<_23abd3d83_Token>);
inline void _249c904d5_castRef(_249c81ac0_Eval*, jule::Ptr<_249cb078b_TypeKind>, jule::Ptr<_249c80052_Data>, jule::Ptr<_23abd3d83_Token>);
inline void _249c9089d_castSlc(_249c81ac0_Eval*, jule::Ptr<_249cb078b_TypeKind>, jule::Ptr<_249c80052_Data>, jule::Ptr<_23abd3d83_Token>);
inline void _249c90bbc_castStr(_249c81ac0_Eval*, jule::Ptr<_249c80052_Data>, jule::Ptr<_23abd3d83_Token>);
inline void _249c91085_castInt(_249c81ac0_Eval*, jule::Ptr<_249cb078b_TypeKind>, jule::Ptr<_249c80052_Data>, jule::Ptr<_23abd3d83_Token>);
inline void _249c9144d_castNum(_249c81ac0_Eval*, jule::Ptr<_249cb078b_TypeKind>, jule::Ptr<_249c80052_Data>, jule::Ptr<_23abd3d83_Token>);
inline void _249c91816_castPrim(_249c81ac0_Eval*, jule::Ptr<_249cb078b_TypeKind>, jule::Ptr<_249c80052_Data>, jule::Ptr<_23abd3d83_Token>);
inline void _249c91b35_castConstant(_249c81ac0_Eval*, jule::Ptr<_249cb078b_TypeKind>&, jule::Ptr<_249c80052_Data>&);
inline void _249c96d5a_castTypeEnum(_249c81ac0_Eval*, jule::Ptr<_249cb078b_TypeKind>&, jule::Ptr<_249c80052_Data>&, jule::Ptr<_23abd3d83_Token>&);
inline jule::Ptr<_249c80052_Data> _249c972ab_evalCastByTypeNData(_249c81ac0_Eval*, jule::Ptr<_249cb078b_TypeKind>, jule::Ptr<_249c80052_Data>, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9770c_evalCastT(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_249cb078b_TypeKind>&, jule::Ptr<_24904a8e5_Expr>&, jule::Ptr<_23abd3d83_Token>&);
inline jule::Ptr<_249c80052_Data> _249c97a1a_evalCast(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_24904d8c6_CastExpr>);
inline jule::Ptr<_249c80052_Data> _249c97d28_evalNsSelection(_249c81ac0_Eval*, jule::Ptr<_24904dc7d_NsSelectionExpr>);
inline jule::Ptr<_249c80052_Data> _249c98279_evalStructLitExplicit(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_249062e4b_StructIns>, jule::Slice<jule::Ptr<_24904a8e5_Expr>>, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c98587_evalStructLit(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_249050d90_StructLit>);
inline _249cbdcb6_typeChecker _249c987eb_typeChecker(_249c81ac0_Eval*);
inline jule::Ptr<_249c80052_Data> _249c98b09_evalType(_249c81ac0_Eval*, jule::Ptr<_2490463c4_TypeDecl>);
inline void _249c98e28_callTypeFn(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline void _249c99247_callBuiltinFn(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline void _249c99588_checkFnOfConcurrentCall(_249c81ac0_Eval*, jule::Ptr<_249bcc312_FnIns>&, jule::Ptr<_23abd3d83_Token>);
inline void _249c99984_processExceptionalHandler(_249c81ac0_Eval*, jule::Ptr<_249bcc312_FnIns>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline void _249c99cb4_callFn(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249c9a0c2_evalFnCall(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_24904ebb3_FnCallExpr>);
inline jule::Ptr<_249c80052_Data> _249c9a479_evalEnumStatic(_249c81ac0_Eval*, jule::Ptr<_249bd6a25_Enum>, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9a831_evalTypeEnumStatic(_249c81ac0_Eval*, jule::Ptr<_249bd8120_TypeEnum>, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9abd8_evalStructStatic(_249c81ac0_Eval*, jule::Ptr<_249062e4b_StructIns>, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9b139_evalTraitSubIdent(_249c81ac0_Eval*, jule::Ptr<_249c80052_Data>, jule::Ptr<_249bd48d0_Trait>, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9b634_evalStructSubIdent(_249c81ac0_Eval*, jule::Ptr<_249c80052_Data>, jule::Ptr<_249062e4b_StructIns>, jule::Ptr<_24904e201_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_249c80052_Data> _249c9b9db_evalSliceSubIdent(_249c81ac0_Eval*, jule::Ptr<_249c80052_Data>, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9bd93_evalArraySubIdent(_249c81ac0_Eval*, jule::Ptr<_249c80052_Data>, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9c1a1_evalIntTypeStatic(_249c81ac0_Eval*, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9c4ae_evalUintTypeStatic(_249c81ac0_Eval*, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9c7bc_evalI8TypeStatic(_249c81ac0_Eval*, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9caca_evalI16TypeStatic(_249c81ac0_Eval*, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9cdd8_evalI32TypeStatic(_249c81ac0_Eval*, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9d1e6_evalI64TypeStatic(_249c81ac0_Eval*, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9d504_evalU8TypeStatic(_249c81ac0_Eval*, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9d812_evalU16TypeStatic(_249c81ac0_Eval*, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9db20_evalU32TypeStatic(_249c81ac0_Eval*, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9de2d_evalU64TypeStatic(_249c81ac0_Eval*, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9e23b_evalF32TypeStatic(_249c81ac0_Eval*, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9e549_evalF64TypeStatic(_249c81ac0_Eval*, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9e901_evalPrimStatic(_249c81ac0_Eval*, jule::Str, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249c80052_Data> _249c9eca8_evalTypeStatic(_249c81ac0_Eval*, jule::Ptr<_249c80052_Data>, jule::Ptr<_24904e201_SubIdentExpr>);
inline jule::Ptr<_249c80052_Data> _249ca0160_evalObjSubIdent(_249c81ac0_Eval*, jule::Ptr<_249c80052_Data>, jule::Ptr<_24904e201_SubIdentExpr>);
inline jule::Ptr<_249c80052_Data> _249ca046d_evalSubIdent(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_24904e201_SubIdentExpr>);
inline jule::Ptr<_249c80052_Data> _249ca077b_evalTuple(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_24904b572_TupleExpr>);
inline jule::Ptr<_249c80052_Data> _249ca0b33_evalMap(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_249cbaa0a_Map>, jule::Ptr<_249051313_BraceLit>);
inline jule::Ptr<_249c80052_Data> _249ca0e41_evalBraceLit(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_249051313_BraceLit>);
inline jule::Ptr<_249c80052_Data> _249ca124e_evalAnonFn(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_2490581d8_FnDecl>);
inline jule::Ptr<_249c80052_Data> _249ca155c_evalBinop(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_24904e674_BinopExpr>);
inline jule::Ptr<_249c80052_Data> _249ca186a_evalExprKind(jule::Ptr<_249c81ac0_Eval>, jule::Any);
inline jule::Ptr<_249c80052_Data> _249ca1b78_eval(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_24904a8e5_Expr>);
inline jule::Ptr<_249c80052_Data> _249ca1e86_evalExpr(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_24904a8e5_Expr>);
struct _249c81ac0_Eval {
	jule::Ptr<_249c192c7_Sema> _field_s = jule::Ptr<_249c192c7_Sema>();
	jule::Trait<_249ccb3bc_Lookup> _field_lookup = jule::Trait<_249ccb3bc_Lookup>();
	jule::Ptr<_249cb078b_TypeKind> _field_prefix = jule::Ptr<_249cb078b_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_disBuiltin = jule::Bool();
	jule::Ptr<_249c3702b_Var> _field_owner = jule::Ptr<_249c3702b_Var>();
	jule::Ptr<_24903e268_FieldIns> _field_field = jule::Ptr<_24903e268_FieldIns>();
	jule::Bool _field_arg = jule::Bool();
	

	_249c81ac0_Eval(void) = default;

	inline bool operator==(_249c81ac0_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_249c81ac0_Eval _other) { return !this->operator==(_other); }


};
inline _249ca2409_unaryEval static__249ca28b0_new(jule::Ptr<_249c81ac0_Eval>);
inline void _249ca2a8b_minus(_249ca2409_unaryEval*);
inline void _249ca2c67_plus(_249ca2409_unaryEval*);
inline void _249ca2e43_caret(_249ca2409_unaryEval*);
inline void _249ca311e_excl(_249ca2409_unaryEval*);
inline void _249ca32ea_star(_249ca2409_unaryEval*);
inline void _249ca34c6_amper(_249ca2409_unaryEval*);
inline void _249ca36a2_typeDecl(_249ca2409_unaryEval*);
inline void _249ca387d_evalData(_249ca2409_unaryEval*);
inline jule::Ptr<_249c80052_Data> _249ca3b58_eval(_249ca2409_unaryEval*, jule::Ptr<_24904d167_UnaryExpr>);
struct _249ca2409_unaryEval {
	jule::Ptr<_249c81ac0_Eval> _field_e = jule::Ptr<_249c81ac0_Eval>();
	jule::Ptr<_249c80052_Data> _field_d = jule::Ptr<_249c80052_Data>();
	jule::Ptr<_24904d167_UnaryExpr> _field_u = jule::Ptr<_24904d167_UnaryExpr>();
	

	_249ca2409_unaryEval(void) = default;

	inline bool operator==(_249ca2409_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_249ca2409_unaryEval _other) { return !this->operator==(_other); }


};
inline _249ca4197_binaryEval static__249ca475d_newPlain(jule::Ptr<_249c81ac0_Eval>);
inline _249ca4197_binaryEval static__249ca4a9e_new(jule::Ptr<_249c81ac0_Eval>, jule::Ptr<_23abd3d83_Token>);
inline jule::Bool _249ca4d13_checkTypeCompatibility(_249ca4197_binaryEval*);
inline jule::Bool _249ca50aa_checkStructCommonOperatorCompatibility(_249ca4197_binaryEval*);
inline jule::Ptr<_249c80052_Data> _249ca5352_evalNil(_249ca4197_binaryEval*);
inline jule::Ptr<_249c80052_Data> _249ca55b6_evalEnum(_249ca4197_binaryEval*);
inline jule::Ptr<_249c80052_Data> _249ca582a_evalTypeEnum(_249ca4197_binaryEval*);
inline jule::Ptr<_249c80052_Data> _249ca5a8e_evalSptr(_249ca4197_binaryEval*);
inline jule::Ptr<_249c80052_Data> _249ca5d03_evalPtr(_249ca4197_binaryEval*);
inline jule::Ptr<_249c80052_Data> _249ca6067_evalArr(_249ca4197_binaryEval*);
inline jule::Ptr<_249c80052_Data> _249ca62cb_evalSlc(_249ca4197_binaryEval*);
inline jule::Ptr<_249c80052_Data> _249ca6540_evalFn(_249ca4197_binaryEval*);
inline jule::Ptr<_249c80052_Data> _249ca67a4_evalStruct(_249ca4197_binaryEval*);
inline jule::Ptr<_249c80052_Data> _249ca6a18_evalTrait(_249ca4197_binaryEval*);
inline jule::Ptr<_249c80052_Data> _249ca6c7c_evalAny(_249ca4197_binaryEval*);
inline jule::Ptr<_249c80052_Data> _249ca6ee1_evalBool(_249ca4197_binaryEval*);
inline jule::Ptr<_249c80052_Data> _249ca7255_evalStr(_249ca4197_binaryEval*);
inline void _249ca7431_setTypeToGreater(_249ca4197_binaryEval*);
inline void _249ca7673_checkModData(_249ca4197_binaryEval*, jule::Ptr<_249c80052_Data>&);
inline void _249ca784e_mod(_249ca4197_binaryEval*);
inline jule::Bool _249ca7c06_numbersAreCompatibile(_249ca4197_binaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_249c80052_Data> _249ca7e6a_evalFloat(_249ca4197_binaryEval*);
inline jule::Ptr<_249c80052_Data> _249ca81ce_evalInt(_249ca4197_binaryEval*);
inline jule::Ptr<_249c80052_Data> _249ca8443_evalPrim(_249ca4197_binaryEval*);
inline jule::Ptr<_249c80052_Data> _249ca86a7_evalOp(_249ca4197_binaryEval*);
inline void _249ca892c_evalConst(_249ca4197_binaryEval*, jule::Ptr<_249c80052_Data>&);
inline void _249ca8ba2_checkData(_249ca4197_binaryEval*, jule::Ptr<_249c80052_Data>&);
inline void _249ca8d7d_checkDatas(_249ca4197_binaryEval*);
inline void _249ca9103_setModel(_249ca4197_binaryEval*, jule::Ptr<_249c80052_Data>&);
inline void _249ca9378_postEval(_249ca4197_binaryEval*, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249ca9730_solveExplicit(_249ca4197_binaryEval*, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249ca9a3d_eval(_249ca4197_binaryEval*, jule::Ptr<_24904e674_BinopExpr>&);
struct _249ca4197_binaryEval {
	jule::Ptr<_249c81ac0_Eval> _field_e = jule::Ptr<_249c81ac0_Eval>();
	jule::Ptr<_249c80052_Data> _field_l = jule::Ptr<_249c80052_Data>();
	jule::Ptr<_249c80052_Data> _field_r = jule::Ptr<_249c80052_Data>();
	jule::Ptr<_23abd3d83_Token> _field_op = jule::Ptr<_23abd3d83_Token>();
	

	_249ca4197_binaryEval(void) = default;

	inline bool operator==(_249ca4197_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_249ca4197_binaryEval _other) { return !this->operator==(_other); }


};
struct _249cae05e_InsGeneric {
	jule::Ptr<_249cb078b_TypeKind> _field_Kind = jule::Ptr<_249cb078b_TypeKind>();
	jule::Slice<jule::Ptr<_249cb078b_TypeKind>> _field_Constraint = jule::Slice<jule::Ptr<_249cb078b_TypeKind>>();
	

	_249cae05e_InsGeneric(void) = default;

	inline bool operator==(_249cae05e_InsGeneric _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_249cae05e_InsGeneric _other) { return !this->operator==(_other); }


};
struct _249caea98_TypeAlias {
	jule::Ptr<_2490566e2_ScopeTree> _field_Scope = jule::Ptr<_2490566e2_ScopeTree>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Used = jule::Bool();
	jule::Bool _field_Generic = jule::Bool();
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_249cb48e4_TypeSymbol> _field_Kind = jule::Ptr<_249cb48e4_TypeSymbol>();
	jule::Slice<jule::Any> _field_Refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_249caea98_TypeAlias>> _field_Generics = jule::Slice<jule::Ptr<_249caea98_TypeAlias>>();
	

	_249caea98_TypeAlias(void) = default;

	inline bool operator==(_249caea98_TypeAlias _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Used == _other._field_Used &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_249caea98_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _249cb0b87_Str(_249cb078b_TypeKind*);
inline jule::Bool _249cb0e95_Equals(jule::Ptr<_249cb078b_TypeKind>, jule::Ptr<_249cb078b_TypeKind>);
inline jule::Bool _249cb144b_CppLinked(_249cb078b_TypeKind*);
inline jule::Bool _249cb16b0_IsNil(_249cb078b_TypeKind*);
inline jule::Bool _249cb1924_Void(_249cb078b_TypeKind*);
inline jule::Bool _249cb1b88_Mutable(_249cb078b_TypeKind*);
inline jule::Bool _249cb1dec_NilCompatible(_249cb078b_TypeKind*);
inline jule::Bool _249cb2161_PerformsRC(_249cb078b_TypeKind*);
inline jule::Bool _249cb23c5_SupportsCloning(_249cb078b_TypeKind*);
inline jule::Bool _249cb2639_Variadicable(_249cb078b_TypeKind*);
inline jule::Ptr<_249cb5263_Prim> _249cb289d_Prim(_249cb078b_TypeKind*);
inline jule::Ptr<_249cb89e7_Sptr> _249cb2b12_Sptr(_249cb078b_TypeKind*);
inline jule::Ptr<_249cbc05b_Ptr> _249cb2d76_Ptr(_249cb078b_TypeKind*);
inline jule::Ptr<_249bd6a25_Enum> _249cb30da_Enum(_249cb078b_TypeKind*);
inline jule::Ptr<_249bd8120_TypeEnum> _249cb334e_TypeEnum(_249cb078b_TypeKind*);
inline jule::Ptr<_249cbb5ee_Arr> _249cb35b3_Arr(_249cb078b_TypeKind*);
inline jule::Ptr<_249cb9454_Slc> _249cb3827_Slc(_249cb078b_TypeKind*);
inline jule::Ptr<_249bcc312_FnIns> _249cb3a8b_Fn(_249cb078b_TypeKind*);
inline jule::Ptr<_249062e4b_StructIns> _249cb3d00_Struct(_249cb078b_TypeKind*);
inline jule::Ptr<_249bd48d0_Trait> _249cb4064_Trait(_249cb078b_TypeKind*);
inline jule::Ptr<_249cbaa0a_Map> _249cb42c8_Map(_249cb078b_TypeKind*);
inline jule::Ptr<_249cb9ed2_Tuple> _249cb453c_Tup(_249cb078b_TypeKind*);
struct _249cb078b_TypeKind {
	jule::Str _field_CppIdent = jule::Str();
	jule::Bool _field_Generic = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Trait<_249cb035c_Kind> _field_Kind = jule::Trait<_249cb035c_Kind>();
	

	_249cb078b_TypeKind(void) = default;

	inline bool operator==(_249cb078b_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_249cb078b_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _249cb4c9b_checked(_249cb48e4_TypeSymbol*);
inline void _249cb4e77_removeKind(_249cb48e4_TypeSymbol*);
struct _249cb48e4_TypeSymbol {
	jule::Ptr<_2490463c4_TypeDecl> _field_Decl = jule::Ptr<_2490463c4_TypeDecl>();
	jule::Ptr<_249cb078b_TypeKind> _field_Kind = jule::Ptr<_249cb078b_TypeKind>();
	

	_249cb48e4_TypeSymbol(void) = default;

	inline bool operator==(_249cb48e4_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_249cb48e4_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _249cb55c6_Str(_249cb5263_Prim*);
inline jule::Bool _249cb58d4_Equals(jule::Ptr<_249cb5263_Prim>, jule::Ptr<_249cb078b_TypeKind>);
inline jule::Bool _249cb5d57_IsConstraint(_249cb5263_Prim*);
inline jule::Bool _249cb60bb_IsI8(_249cb5263_Prim*);
inline jule::Bool _249cb6330_IsI16(_249cb5263_Prim*);
inline jule::Bool _249cb6594_IsI32(_249cb5263_Prim*);
inline jule::Bool _249cb6808_IsI64(_249cb5263_Prim*);
inline jule::Bool _249cb6a6c_IsU8(_249cb5263_Prim*);
inline jule::Bool _249cb6cd1_IsU16(_249cb5263_Prim*);
inline jule::Bool _249cb7045_IsU32(_249cb5263_Prim*);
inline jule::Bool _249cb72a9_IsU64(_249cb5263_Prim*);
inline jule::Bool _249cb751d_IsF32(_249cb5263_Prim*);
inline jule::Bool _249cb7782_IsF64(_249cb5263_Prim*);
inline jule::Bool _249cb79e6_IsInt(_249cb5263_Prim*);
inline jule::Bool _249cb7c5a_IsUint(_249cb5263_Prim*);
inline jule::Bool _249cb7ebe_IsUintptr(_249cb5263_Prim*);
inline jule::Bool _249cb8233_IsBool(_249cb5263_Prim*);
inline jule::Bool _249cb8497_IsStr(_249cb5263_Prim*);
inline jule::Bool _249cb870b_IsAny(_249cb5263_Prim*);
struct _249cb5263_Prim {
	jule::Str _field_Kind = jule::Str();
	

	_249cb5263_Prim(void) = default;

	inline bool operator==(_249cb5263_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_249cb5263_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _249cb8d5a_Str(_249cb89e7_Sptr*);
inline jule::Bool _249cb9168_Equals(jule::Ptr<_249cb89e7_Sptr>, jule::Ptr<_249cb078b_TypeKind>);
struct _249cb89e7_Sptr {
	jule::Ptr<_249cb078b_TypeKind> _field_Elem = jule::Ptr<_249cb078b_TypeKind>();
	

	_249cb89e7_Sptr(void) = default;

	inline bool operator==(_249cb89e7_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_249cb89e7_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _249cb9960_Str(_249cb9454_Slc*);
inline jule::Bool _249cb9c6d_Equals(jule::Ptr<_249cb9454_Slc>, jule::Ptr<_249cb078b_TypeKind>);
struct _249cb9454_Slc {
	jule::Ptr<_249cb078b_TypeKind> _field_Elem = jule::Ptr<_249cb078b_TypeKind>();
	

	_249cb9454_Slc(void) = default;

	inline bool operator==(_249cb9454_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_249cb9454_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _249cba345_Str(_249cb9ed2_Tuple*);
inline jule::Bool _249cba653_Equals(jule::Ptr<_249cb9ed2_Tuple>, jule::Ptr<_249cb078b_TypeKind>);
struct _249cb9ed2_Tuple {
	jule::Slice<jule::Ptr<_249cb078b_TypeKind>> _field_Types = jule::Slice<jule::Ptr<_249cb078b_TypeKind>>();
	

	_249cb9ed2_Tuple(void) = default;

	inline bool operator==(_249cb9ed2_Tuple _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_249cb9ed2_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _249cbad6d_Str(_249cbaa0a_Map*);
inline jule::Bool _249cbb17b_Equals(jule::Ptr<_249cbaa0a_Map>, jule::Ptr<_249cb078b_TypeKind>);
struct _249cbaa0a_Map {
	jule::Ptr<_249cb078b_TypeKind> _field_Key = jule::Ptr<_249cb078b_TypeKind>();
	jule::Ptr<_249cb078b_TypeKind> _field_Val = jule::Ptr<_249cb078b_TypeKind>();
	

	_249cbaa0a_Map(void) = default;

	inline bool operator==(_249cbaa0a_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_249cbaa0a_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _249cbb962_Str(_249cbb5ee_Arr*);
inline jule::Bool _249cbbc70_Equals(jule::Ptr<_249cbb5ee_Arr>, jule::Ptr<_249cb078b_TypeKind>);
struct _249cbb5ee_Arr {
	jule::Bool _field_Auto = jule::Bool();
	jule::I64 _field_N = jule::I64();
	jule::Ptr<_249cb078b_TypeKind> _field_Elem = jule::Ptr<_249cb078b_TypeKind>();
	

	_249cbb5ee_Arr(void) = default;

	inline bool operator==(_249cbb5ee_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_249cbb5ee_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _249cbc3be_Str(_249cbc05b_Ptr*);
inline jule::Bool _249cbc6cc_Equals(jule::Ptr<_249cbc05b_Ptr>, jule::Ptr<_249cb078b_TypeKind>);
inline jule::Bool _249cbca2e_IsUnsafe(_249cbc05b_Ptr*);
struct _249cbc05b_Ptr {
	jule::Ptr<_249cb078b_TypeKind> _field_Elem = jule::Ptr<_249cb078b_TypeKind>();
	

	_249cbc05b_Ptr(void) = default;

	inline bool operator==(_249cbc05b_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_249cbc05b_Ptr _other) { return !this->operator==(_other); }


};
struct _249cbcea2_referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_249cbcea2_referencer(void) = default;

	inline bool operator==(_249cbcea2_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_249cbcea2_referencer _other) { return !this->operator==(_other); }


};
inline void _249cbe4c0_pushErr(_249cbdcb6_typeChecker*, jule::Ptr<_23abd3d83_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _249cbe69b_allowBuiltin(_249cbdcb6_typeChecker*);
inline void _249cbe877_disallowBuiltin(_249cbdcb6_typeChecker*);
inline jule::Ptr<_249cb5263_Prim> _249cbeb85_buildPrim(_249cbdcb6_typeChecker*, jule::Ptr<_24904698a_IdentTypeDecl>&);
inline void _251041681_pushReference(_249cbdcb6_typeChecker*, jule::Ptr<_249062e4b_StructIns>&);
inline void _2510448d7_pushReference(_249cbdcb6_typeChecker*, jule::Ptr<_249bd48d0_Trait>&);
inline void _249cc0180_pushReferenceByKind(_249cbdcb6_typeChecker*, jule::Ptr<_249cb078b_TypeKind>&);
inline void _249cc0548_pushCycleError(_249cbdcb6_typeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _249cc0900_checkCrossCycle(_249cbdcb6_typeChecker*, jule::Any, jule::Str&);
inline jule::Bool _249cc0ca7_checkIllegalCycles(_249cbdcb6_typeChecker*, jule::Ptr<_24904698a_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_249cb035c_Kind> _249cc115e_fromTypeAlias(_249cbdcb6_typeChecker*, jule::Ptr<_24904698a_IdentTypeDecl>&, jule::Ptr<_249caea98_TypeAlias>&);
inline jule::Ptr<_249bd6a25_Enum> _249cc1516_fromEnum(_249cbdcb6_typeChecker*, jule::Ptr<_24904698a_IdentTypeDecl>&, jule::Ptr<_249bd6a25_Enum>&);
inline jule::Ptr<_249bd8120_TypeEnum> _249cc18bd_fromTypeEnum(_249cbdcb6_typeChecker*, jule::Ptr<_24904698a_IdentTypeDecl>&, jule::Ptr<_249bd8120_TypeEnum>&);
inline jule::Ptr<_249bd48d0_Trait> _249cc1c75_fromTrait(_249cbdcb6_typeChecker*, jule::Ptr<_24904698a_IdentTypeDecl>&, jule::Ptr<_249bd48d0_Trait>&);
inline jule::Bool _249cc212c_checkStructIns(_249cbdcb6_typeChecker*, jule::Ptr<_249062e4b_StructIns>&, jule::Ptr<_23abd3d83_Token>&);
inline void _249cc23c4_appendUsedStructReference(_249cbdcb6_typeChecker*, jule::Ptr<_249036b01_Struct>&);
inline jule::Ptr<_249062e4b_StructIns> _249cc278c_buildStructInstance(_249cbdcb6_typeChecker*, jule::Ptr<_24904698a_IdentTypeDecl>&, jule::Ptr<_249036b01_Struct>&);
inline jule::Ptr<_249062e4b_StructIns> _249cc2b44_fromStruct(_249cbdcb6_typeChecker*, jule::Ptr<_24904698a_IdentTypeDecl>&, jule::Ptr<_249036b01_Struct>&);
inline jule::Trait<_249cb035c_Kind> _249cc2e52_getDef(_249cbdcb6_typeChecker*, jule::Ptr<_24904698a_IdentTypeDecl>&);
inline jule::Trait<_249cb035c_Kind> _249cc3260_buildIdent(_249cbdcb6_typeChecker*, jule::Ptr<_24904698a_IdentTypeDecl>);
inline jule::Trait<_249cb035c_Kind> _249cc356d_buildSubIdent(_249cbdcb6_typeChecker*, jule::Ptr<_2490470d9_SubIdentTypeDecl>);
inline jule::Ptr<_249cb89e7_Sptr> _249cc387b_buildSptrFromType(_249cbdcb6_typeChecker*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Ptr<_249cb89e7_Sptr> _249cc3b89_buildSptr(_249cbdcb6_typeChecker*, jule::Ptr<_24904777c_SptrTypeDecl>);
inline jule::Ptr<_249cbc05b_Ptr> _249cc3e97_buildPtrFromType(_249cbdcb6_typeChecker*, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Ptr<_249cbc05b_Ptr> _249cc42a5_buildPtr(_249cbdcb6_typeChecker*, jule::Ptr<_249048250_PtrTypeDecl>);
inline jule::Ptr<_249cb9454_Slc> _249cc45b3_buildSlc(_249cbdcb6_typeChecker*, jule::Ptr<_249047b78_SlcTypeDecl>);
inline jule::Ptr<_249cbb5ee_Arr> _249cc48c1_buildArr(_249cbdcb6_typeChecker*, jule::Ptr<_2490488d2_ArrTypeDecl>);
inline jule::Ptr<_249cbaa0a_Map> _249cc4bce_buildMap(_249cbdcb6_typeChecker*, jule::Ptr<_249049130_MapTypeDecl>);
inline jule::Ptr<_249cb9ed2_Tuple> _249cc4edc_buildTuple(_249cbdcb6_typeChecker*, jule::Ptr<_249047e64_TupleTypeDecl>);
inline jule::Bool _249cc52ea_checkFnTypes(_249cbdcb6_typeChecker*, jule::Ptr<_249bcc312_FnIns>&);
inline jule::Ptr<_249bcc312_FnIns> _249cc5608_buildFn(_249cbdcb6_typeChecker*, jule::Ptr<_2490581d8_FnDecl>);
inline jule::Trait<_249cb035c_Kind> _249cc5916_buildByNamespace(_249cbdcb6_typeChecker*, jule::Ptr<_249047491_NamespaceTypeDecl>);
inline jule::Ptr<_249cb078b_TypeKind> _249cc5c24_build(_249cbdcb6_typeChecker*, jule::Any&);
inline jule::Ptr<_249cb078b_TypeKind> _249cc6032_checkDecl(_249cbdcb6_typeChecker*, jule::Ptr<_2490463c4_TypeDecl>&);
inline void _249cc62a7_check(_249cbdcb6_typeChecker*, jule::Ptr<_249cb48e4_TypeSymbol>&);
struct _249cbdcb6_typeChecker {
	jule::Ptr<_249c192c7_Sema> _field_s = jule::Ptr<_249c192c7_Sema>();
	jule::Trait<_249ccb3bc_Lookup> _field_rootLookup = jule::Trait<_249ccb3bc_Lookup>();
	jule::Trait<_249ccb3bc_Lookup> _field_lookup = jule::Trait<_249ccb3bc_Lookup>();
	jule::Ptr<_249cbcea2_referencer> _field_referencer = jule::Ptr<_249cbcea2_referencer>();
	jule::Ptr<_249bcccd5_ReferenceStack> _field_refers = jule::Ptr<_249bcccd5_ReferenceStack>();
	jule::Ptr<_23abd3d83_Token> _field_errorToken = jule::Ptr<_23abd3d83_Token>();
	jule::Slice<jule::Ptr<_2490539a8_GenericDecl>> _field_ignoreGenerics = jule::Slice<jule::Ptr<_2490539a8_GenericDecl>>();
	jule::Slice<jule::Ptr<_249caea98_TypeAlias>> _field_useGenerics = jule::Slice<jule::Ptr<_249caea98_TypeAlias>>();
	jule::Bool _field_notPlain = jule::Bool();
	jule::Bool _field_disBuiltin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_249caea98_TypeAlias> _field_ownerAlias = jule::Ptr<_249caea98_TypeAlias>();
	jule::Slice<jule::Ptr<_249caea98_TypeAlias>> _field_bannedGenerics = jule::Slice<jule::Ptr<_249caea98_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();
	

	_249cbdcb6_typeChecker(void) = default;

	inline bool operator==(_249cbdcb6_typeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_rootLookup == _other._field_rootLookup &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_refers == _other._field_refers &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_ignoreGenerics == _other._field_ignoreGenerics &&
			this->_field_useGenerics == _other._field_useGenerics &&
			this->_field_notPlain == _other._field_notPlain &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_selection == _other._field_selection &&
			this->_field_ownerAlias == _other._field_ownerAlias &&
			this->_field_bannedGenerics == _other._field_bannedGenerics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_249cbdcb6_typeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool static__249cc6917_identTypeDecl(jule::Str&, jule::Ptr<_24904698a_IdentTypeDecl>);
inline jule::Bool static__249cc6c58_exist(jule::Str&, jule::Any&);
struct _249cc64c7_identTypeLookup {
	

	_249cc64c7_identTypeLookup(void) = default;

	inline bool operator==(_249cc64c7_identTypeLookup _other) { return true; }

	inline bool operator!=(_249cc64c7_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _24a4e45eb_FileInfo {
	jule::Ptr<_24900ba82_Ast> _field_Ast = jule::Ptr<_24900ba82_Ast>();
	jule::Slice<_23a8a5ca8_Log> _field_Errors = jule::Slice<_23a8a5ca8_Log>();
	

	_24a4e45eb_FileInfo(void) = default;

	inline bool operator==(_24a4e45eb_FileInfo _other) {
		return 
			this->_field_Ast == _other._field_Ast &&
			this->_field_Errors == _other._field_Errors;
	}

	inline bool operator!=(_24a4e45eb_FileInfo _other) { return !this->operator==(_other); }


};
struct _24a541170_stmt {
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _field_tokens = jule::Slice<jule::Ptr<_23abd3d83_Token>>();
	jule::Bool _field_terminated = jule::Bool();
	

	_24a541170_stmt(void) = default;

	inline bool operator==(_24a541170_stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_24a541170_stmt _other) { return !this->operator==(_other); }


};
inline void _24a54212c_stop(_24a54199a_scopeParser*);
inline jule::Bool _24a542391_stopped(_24a54199a_scopeParser*);
inline jule::Bool _24a542605_finished(_24a54199a_scopeParser*);
inline jule::Bool _24a542869_isLastSt(_24a54199a_scopeParser*);
inline void _24a542b88_pushErr(_24a54199a_scopeParser*, jule::Ptr<_23abd3d83_Token>, jule::Str);
inline void _24a542ea7_pushSuggestion(_24a54199a_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _24a54322c_insertAsNext(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_24a541170_stmt> _24a543491_next(_24a54199a_scopeParser*);
inline jule::Ptr<_2490566e2_ScopeTree> _24a543848_buildScope(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_2490591b7_VarDecl> _24a543b56_buildVarSt(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_24905956e_RetSt> _24a543e64_buildRetSt(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_249059bce_Iter> _24a544272_buildWhileNextIter(_24a54199a_scopeParser*, jule::Ptr<_24a541170_stmt>&);
inline jule::Ptr<_24905a4a4_WhileKind> _24a544580_buildWhileIterKind(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _24a54488d_getRangeKindKeysTokens(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_2490591b7_VarDecl> _24a544b9b_buildRangeKindKey(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Slice<jule::Ptr<_2490591b7_VarDecl>> _24a544ea9_buildRangeKindKeys(_24a54199a_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>>&);
inline void _24a5452ea_setupRangeKindKeysPlain(_24a54199a_scopeParser*, jule::Ptr<_24905ad45_RangeKind>&, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline void _24a54564c_setupRangeKindKeysExplicit(_24a54199a_scopeParser*, jule::Ptr<_24905ad45_RangeKind>&, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline void _24a54597c_setupRangeKindKeys(_24a54199a_scopeParser*, jule::Ptr<_24905ad45_RangeKind>&, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_24905ad45_RangeKind> _24a545dcd_buildRangeIterKind(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::Ptr<_23abd3d83_Token>&);
inline jule::Any _24a546285_buildCommonIterKind(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::Ptr<_23abd3d83_Token>&);
inline jule::Ptr<_249059bce_Iter> _24a546593_buildCommonIter(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_249059bce_Iter> _24a5468a1_buildIterSt(_24a54199a_scopeParser*, jule::Ptr<_24a541170_stmt>&);
inline jule::Ptr<_24905b1ec_BreakSt> _24a546bae_buildBreakSt(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_24905b5a4_ContSt> _24a546ebc_buildContSt(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_24905ba27_If> _24a5472ca_buildIf(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_24905bdce_Else> _24a5475d8_buildElse(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_24905c352_Conditional> _24a5478e6_buildIfElseChain(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_24904c4da_CoExpr> _24a547c04_buildCoCallSt(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_249054217_GotoSt> _24a548012_buildGotoSt(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_249054503_FallSt> _24a548320_buildFallSt(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_24905ca28_TypeAliasDecl> _24a54862d_buildTypeAliasSt(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline void _24a548a90_pushCaseExpr(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>, jule::Ptr<_23abd3d83_Token>, jule::Bool, jule::Slice<jule::Ptr<_24904a8e5_Expr>>&);
inline jule::Slice<jule::Ptr<_24904a8e5_Expr>> _24a548ee1_buildCaseExprs(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::Ptr<_23abd3d83_Token>&, jule::Bool);
inline jule::Ptr<_2490566e2_ScopeTree> _24a5492ee_buildCaseScope(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline std::tuple<jule::Ptr<_24905ce9b_Case>,jule::Bool> _24a5496a6_buildCase(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_24905ce9b_Case>>,jule::Ptr<_24905bdce_Else>> _24a549a5d_buildCases(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>, jule::Bool);
inline jule::Ptr<_24905d672_MatchCase> _24a549d6b_buildMatchCase(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_2490566e2_ScopeTree> _24a54a179_buildScopeSt(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_249053d60_LabelSt> _24a54a487_buildLabelSt(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _24a54a795_buildIdSt(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_24a5597b5_assignInfo> _24a54aaa3_buildAssignInfo(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_249054b0d_AssignLeft> _24a54adb1_buildAssignL(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Slice<jule::Ptr<_249054b0d_AssignLeft>> _24a54b1be_buildAssignLs(_24a54199a_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>>&);
inline std::tuple<jule::Ptr<_24905514c_AssignSt>,jule::Bool> _24a54b4cc_buildPlainAssign(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline std::tuple<jule::Ptr<_24905514c_AssignSt>,jule::Bool> _24a54b7da_buildDeclAssign(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline std::tuple<jule::Ptr<_24905514c_AssignSt>,jule::Bool> _24a54bae8_buildAssignSt(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_24904b286_UseExpr> _24a54be06_buildUseExpr(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Any _24a54c214_buildSt(_24a54199a_scopeParser*, jule::Ptr<_24a541170_stmt>&);
inline void _24a54c533_build(_24a54199a_scopeParser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::Ptr<_2490566e2_ScopeTree>&);
struct _24a54199a_scopeParser {
	jule::Ptr<_24a55d0e3_parser> _field_p = jule::Ptr<_24a55d0e3_parser>();
	jule::Ptr<_2490566e2_ScopeTree> _field_s = jule::Ptr<_2490566e2_ScopeTree>();
	jule::Slice<jule::Ptr<_24a541170_stmt>> _field_stmts = jule::Slice<jule::Ptr<_24a541170_stmt>>();
	jule::I64 _field_pos = jule::I64();
	

	_24a54199a_scopeParser(void) = default;

	inline bool operator==(_24a54199a_scopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_24a54199a_scopeParser _other) { return !this->operator==(_other); }


};
inline void _24a54d754_pushErr(_24a54ce5c_exprBuilder*, jule::Ptr<_23abd3d83_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _24a54da73_pushSuggestion(_24a54ce5c_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_24904b572_TupleExpr> _24a54dd81_buildTuple(_24a54ce5c_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>>&);
inline jule::Ptr<_24904b929_LitExpr> _24a54e18e_buildLit(_24a54ce5c_exprBuilder*, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_2490463c4_TypeDecl> _24a54e49c_buildPrimitiveType(_24a54ce5c_exprBuilder*, jule::Ptr<_23abd3d83_Token>&);
inline jule::Any _24a54e7aa_buildSingle(_24a54ce5c_exprBuilder*, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_24904c95d_IdentExpr> _24a54eab8_buildCppLinkedIdent(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_24904d167_UnaryExpr> _24a54edc6_buildUnary(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_24904e201_SubIdentExpr> _24a5501d4_buildObjSubIdent(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_24904dc7d_NsSelectionExpr> _24a5504e2_buildNsSubIdent(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_2490463c4_TypeDecl> _24a550800_buildType(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Any _24a550b0d_buildSubIdent(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_24904d51e_VariadicExpr> _24a550e1b_buildVariadic(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Any _24a551229_buildOpRight(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_24904abd1_RangeExpr> _24a551559_buildBetweenParentheses(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_24904d8c6_CastExpr> _24a551878_tryBuildCast(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline void _24a551c41_pushArg(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_24904a8e5_Expr>>&, jule::Slice<jule::Ptr<_23abd3d83_Token>>, jule::Ptr<_23abd3d83_Token>);
inline jule::Slice<jule::Ptr<_24904a8e5_Expr>> _24a55204e_buildArgs(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Slice<jule::Ptr<_2490463c4_TypeDecl>> _24a55235c_buildCallGenerics(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_24904ebb3_FnCallExpr> _24a5527ad_buildFnCall(_24a54ce5c_exprBuilder*, jule::Ptr<_23abd3d83_Token>&, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Any _24a552abb_buildParenthesesRange(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_24904c133_UnsafeExpr> _24a552dc9_buildUnsafeExpr(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_2490581d8_FnDecl> _24a5531d7_buildAnonFn(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Any _24a5534e5_buildUnsafe(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline void _24a5538ad_pushRangeLitPart(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>, jule::Ptr<_23abd3d83_Token>, jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _24a553bdd_getBraceRangeLitExprParts(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_249050642_FieldExprPair> _24a55400c_buildFieldExprPair(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_24904a8e5_Expr> _24a55431a_buildStructLitExpr(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Slice<jule::Ptr<_24904a8e5_Expr>> _24a554628_buildStructLitExprs(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_249050d90_StructLit> _24a554958_buildTypedStructLiteral(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_24904a8e5_Expr> _24a554c77_buildBraceLitPart(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_249051313_BraceLit> _24a555085_buildBraceLit(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Any _24a555393_buildBraceRange(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _24a5556a1_getEnumerableParts(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_24905229d_SliceExpr> _24a5559ae_buildSlice(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_249052b3e_IndexingExpr> _24a555e10_buildIndexing(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>, jule::Slice<jule::Ptr<_23abd3d83_Token>>, jule::Ptr<_23abd3d83_Token>);
inline jule::Ptr<_249053249_SlicingExpr> _24a5564a4_buildSlicing(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::Ptr<_23abd3d83_Token>&, jule::Ptr<_23abd3d83_Token>);
inline jule::Any _24a5567b2_buildBracketRange(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Any _24a556ac0_buildData(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Any _24a556e77_buildBinop(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::I64);
inline jule::Any _24a557285_build(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Any _24a557593_buildKind(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_24904a8e5_Expr> _24a5578a1_buildFromTokens(_24a54ce5c_exprBuilder*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
struct _24a54ce5c_exprBuilder {
	jule::Ptr<_24a55d0e3_parser> _field_p = jule::Ptr<_24a55d0e3_parser>();
	

	_24a54ce5c_exprBuilder(void) = default;

	inline bool operator==(_24a54ce5c_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_24a54ce5c_exprBuilder _other) { return !this->operator==(_other); }


};
struct _24a5597b5_assignInfo {
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _field_l = jule::Slice<jule::Ptr<_23abd3d83_Token>>();
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _field_r = jule::Slice<jule::Ptr<_23abd3d83_Token>>();
	jule::Ptr<_23abd3d83_Token> _field_setter = jule::Ptr<_23abd3d83_Token>();
	jule::Bool _field_ok = jule::Bool();
	

	_24a5597b5_assignInfo(void) = default;

	inline bool operator==(_24a5597b5_assignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_24a5597b5_assignInfo _other) { return !this->operator==(_other); }


};
inline void _24a55d423_stop(_24a55d0e3_parser*);
inline jule::Bool _24a55d687_stopped(_24a55d0e3_parser*);
inline void _24a55da50_pushErr(_24a55d0e3_parser*, jule::Ptr<_23abd3d83_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _24a55dd6e_pushSuggestion(_24a55d0e3_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_24904a8e5_Expr> _24a55e17c_buildExpr(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_24900cb2c_Directive> _24a55e48a_buildDirective(_24a55d0e3_parser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline void _24a55e710_pushDirective(_24a55d0e3_parser*, jule::Ptr<_24900cb2c_Directive>);
inline jule::Ptr<_2490566e2_ScopeTree> _24a55eab7_buildScope(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::Ptr<_23abd3d83_Token>);
inline std::tuple<jule::Ptr<_2490463c4_TypeDecl>,jule::Bool> _24a560018__buildType(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::I64*, jule::Bool);
inline std::tuple<jule::Ptr<_2490463c4_TypeDecl>,jule::Bool> _24a560469_buildType(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_24905ca28_TypeAliasDecl> _24a560777_buildTypeAliasDecl(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline void _24a560a96_buildVarTypeAndExpr(jule::Ptr<_24a55d0e3_parser>, jule::Ptr<_2490591b7_VarDecl>&, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline void _24a560db5_buildVarCommon(jule::Ptr<_24a55d0e3_parser>, jule::Ptr<_2490591b7_VarDecl>&, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline void _24a56127d_buildVarBegin(_24a55d0e3_parser*, jule::Ptr<_2490591b7_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_2490591b7_VarDecl> _24a56158b_buildVar(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_2490539a8_GenericDecl> _24a561899_buildGeneric(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Slice<jule::Ptr<_2490539a8_GenericDecl>> _24a561c51_buildGenerics(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::Ptr<_23abd3d83_Token>&);
inline jule::Ptr<_249056db8_ParamDecl> _24a56205e_buildSelfParam(_24a55d0e3_parser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline void _24a562427_paramTypeBegin(_24a55d0e3_parser*, jule::Ptr<_249056db8_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline void _24a562746_buildParamType(jule::Ptr<_24a55d0e3_parser>, jule::Ptr<_249056db8_ParamDecl>&, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline void _24a562a65_buildParamBody(jule::Ptr<_24a55d0e3_parser>, jule::Ptr<_249056db8_ParamDecl>&, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_249056db8_ParamDecl> _24a562d73_buildParam(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline void _24a5630e8_checkParams(_24a55d0e3_parser*, jule::Slice<jule::Ptr<_249056db8_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_249056db8_ParamDecl>> _24a5634a0_buildParams(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_2490494d7_RetTypeDecl>,jule::Bool> _24a563857_buildMultiRetType(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::I64&);
inline std::tuple<jule::Ptr<_2490494d7_RetTypeDecl>,jule::Bool> _24a563c0e_buildRetType(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::I64&);
inline jule::Ptr<_2490581d8_FnDecl> _24a564160_buildFnPrototype(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_2490581d8_FnDecl> _24a5645b1_buildFn(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_23abd3d83_Token>> _24a5648be_getUseDeclSelectors(_24a55d0e3_parser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline void _24a564bdd_buildCppUseDecl(_24a55d0e3_parser*, jule::Ptr<_24905de14_UseDecl>&, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline void _24a56500c_buildStdUseDecl(_24a55d0e3_parser*, jule::Ptr<_24905de14_UseDecl>&, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline void _24a56532b_buildIdentUseDecl(_24a55d0e3_parser*, jule::Ptr<_24905de14_UseDecl>&, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline void _24a56564a_parseUseDecl(_24a55d0e3_parser*, jule::Ptr<_24905de14_UseDecl>&, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_24905de14_UseDecl> _24a565a02_buildUseDecl(_24a55d0e3_parser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>, jule::Bool);
inline jule::Ptr<_2490463c4_TypeDecl> _24a565da9_buildTypeEnumItemKind(jule::Ptr<_24a55d0e3_parser>, jule::I64&, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Slice<jule::Ptr<_2490608b6_TypeEnumItemDecl>> _24a5661b7_buildTypeEnumItems(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_249060ab4_TypeEnumDecl> _24a5664c5_buildTypeEnumDecl(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_24904a8e5_Expr> _24a56687c_buildEnumItemExpr(jule::Ptr<_24a55d0e3_parser>, jule::I64&, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Slice<jule::Ptr<_24905e387_EnumItemDecl>> _24a566b8a_buildEnumItems(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_24905edb0_EnumDecl> _24a566e98_buildEnumDecl(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Any _24a5672a6_buildNodeEnumDecl(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_249061114_FieldDecl> _24a5675b4_buildField(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Slice<jule::Ptr<_249061114_FieldDecl>> _24a5678c2_buildStructDeclFields(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_249061972_StructDecl> _24a567bd0_buildStructDecl(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline void _24a567e55_checkMethodReceiver(_24a55d0e3_parser*, jule::Ptr<_2490581d8_FnDecl>&);
inline jule::Slice<jule::Ptr<_2490581d8_FnDecl>> _24a568263_buildTraitMethods(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_24906207c_TraitDecl> _24a568571_buildTraitDecl(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_2490581d8_FnDecl> _24a56887e_buildCppLinkFn(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_2490591b7_VarDecl> _24a568b8c_buildCppLinkVar(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_249061972_StructDecl> _24a568e9a_buildCppLinkStruct(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_24905ca28_TypeAliasDecl> _24a5692a8_buildCppLinkTypeAlias(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_24905de14_UseDecl> _24a5695b6_buildCppLinkUse(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Any _24a5698c4_buildCppLink(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_2490581d8_FnDecl> _24a569bd2_getMethod(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline void _24a56a001_parseImplBody(jule::Ptr<_24a55d0e3_parser>, jule::Ptr<_249062687_Impl>&, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_249062687_Impl> _24a56a30e_buildImpl(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Any _24a56a61c_buildNodeData(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline void _24a56a892_applyFnMeta(_24a55d0e3_parser*, jule::Ptr<_2490581d8_FnDecl>&);
inline void _24a56ab17_applyMeta(_24a55d0e3_parser*, _24900c731_Node&);
inline void _24a56ad8c_pushUseDecl(jule::Ptr<_24a55d0e3_parser>, jule::Ptr<_24905de14_UseDecl>&);
inline jule::Bool _24a56b19a_pushMetaNodes(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline _24900c731_Node _24a56b4a8_parseNode(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline void _24a56b72d_appendNode(jule::Ptr<_24a55d0e3_parser>, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline void _24a56bb90_removeRange(_24a55d0e3_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::Slice<jule::I64>&);
inline void _24a56c058_pushWrongOrderCloseErr(_24a55d0e3_parser*, jule::Ptr<_23abd3d83_Token>&, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::Slice<jule::I64>&);
inline void _24a56c4ba_pushRangeClose(_24a55d0e3_parser*, jule::Ptr<_23abd3d83_Token>, jule::Str, jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::Slice<jule::I64>&);
inline void _24a56c740_checkRanges(_24a55d0e3_parser*, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline void _24a56c9b5_parse(jule::Ptr<_24a55d0e3_parser>, jule::Ptr<_23abd921d_File>&);
struct _24a55d0e3_parser {
	jule::Ptr<_24900ba82_Ast> _field_ast = jule::Ptr<_24900ba82_Ast>();
	jule::Slice<jule::Ptr<_24900cb2c_Directive>> _field_directives = jule::Slice<jule::Ptr<_24900cb2c_Directive>>();
	jule::Slice<_23a8a5ca8_Log> _field_errors = jule::Slice<_23a8a5ca8_Log>();
	

	_24a55d0e3_parser(void) = default;

	inline bool operator==(_24a55d0e3_parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_24a55d0e3_parser _other) { return !this->operator==(_other); }


};
inline void _24a56e3ce_pushErr(_24a56dd07_typeBuilder*, jule::Ptr<_23abd3d83_Token>, jule::Str);
inline void _24a56e6ed_pushSuggestion(_24a56dd07_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_2490463c4_TypeDecl> _24a56e962_buildPrim(_24a56dd07_typeBuilder*);
inline jule::Ptr<_2490463c4_TypeDecl> _24a56ebc6_buildNamespace(_24a56dd07_typeBuilder*);
inline jule::Slice<jule::Ptr<_2490463c4_TypeDecl>> _24a56ee3a_buildGenerics(_24a56dd07_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _24a57019e_identGenerics(_24a56dd07_typeBuilder*);
inline jule::Ptr<_2490463c4_TypeDecl> _24a570413_buildIdent(_24a56dd07_typeBuilder*);
inline jule::Ptr<_2490463c4_TypeDecl> _24a570677_buildCppLink(_24a56dd07_typeBuilder*);
inline jule::Ptr<_2490463c4_TypeDecl> _24a5708db_buildFn(_24a56dd07_typeBuilder*);
inline jule::Ptr<_2490463c4_TypeDecl> _24a570b50_buildPtr(_24a56dd07_typeBuilder*);
inline jule::Ptr<_2490463c4_TypeDecl> _24a570db4_buildSptr(_24a56dd07_typeBuilder*);
inline jule::Ptr<_2490463c4_TypeDecl> _24a571128_buildOp(_24a56dd07_typeBuilder*);
inline jule::Ptr<_2490463c4_TypeDecl> _24a57138c_buildSlc(_24a56dd07_typeBuilder*);
inline jule::Ptr<_2490463c4_TypeDecl> _24a571601_buildArr(_24a56dd07_typeBuilder*);
inline jule::Ptr<_2490463c4_TypeDecl> _24a571865_buildMap(_24a56dd07_typeBuilder*);
inline jule::Ptr<_2490463c4_TypeDecl> _24a571ac9_buildEnumerable(_24a56dd07_typeBuilder*);
inline jule::Ptr<_2490463c4_TypeDecl> _24a571d3d_step(_24a56dd07_typeBuilder*);
inline std::tuple<jule::Ptr<_2490463c4_TypeDecl>,jule::Bool> _24a5720a2_build(_24a56dd07_typeBuilder*);
struct _24a56dd07_typeBuilder {
	jule::Ptr<_24a55d0e3_parser> _field_p = jule::Ptr<_24a55d0e3_parser>();
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _field_tokens = jule::Slice<jule::Ptr<_23abd3d83_Token>>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();
	

	_24a56dd07_typeBuilder(void) = default;

	inline bool operator==(_24a56dd07_typeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_24a56dd07_typeBuilder _other) { return !this->operator==(_other); }


};
struct _249d9196b_CompileInfo {
	jule::Bool _field_Prod = jule::Bool();
	jule::Bool _field_Test = jule::Bool();
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_249d9196b_CompileInfo(void) = default;

	inline bool operator==(_249d9196b_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_249d9196b_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _249d9331e_pushErr(_249d92cbe_directiveEval*, jule::Ptr<_23abd3d83_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _249d936c6_splitOperans(_249d92cbe_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Bool _249d939d4_evalDirectiveIdent(_249d92cbe_directiveEval*, jule::Str);
inline jule::Bool _249d93ce2_evalDirectivePart(_249d92cbe_directiveEval*, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Bool _249d94056_eval(_249d92cbe_directiveEval*);
struct _249d92cbe_directiveEval {
	jule::Slice<_23a8a5ca8_Log> _field_logs = jule::Slice<_23a8a5ca8_Log>();
	jule::Ptr<_24900cb2c_Directive> _field_d = jule::Ptr<_24900cb2c_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_249d92cbe_directiveEval(void) = default;

	inline bool operator==(_249d92cbe_directiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_249d92cbe_directiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_249e8d958_JuleImporter> static__249eea531_New(_249d9196b_CompileInfo);
inline jule::Slice<jule::Ptr<_249c1117b_ImportInfo>> _24a00be16_AllPackages(_249e8d958_JuleImporter*);
inline void _24a0176c4_SetModPath(_249e8d958_JuleImporter*, jule::Str);
inline jule::Str _24a03d453_GetModPath(_249e8d958_JuleImporter*);
inline jule::Str _24a101714_ModById(_249e8d958_JuleImporter*, jule::I64);
inline jule::Ptr<_249c1117b_ImportInfo> _24a112ed9_GetImport(_249e8d958_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_24900ba82_Ast>>,jule::Slice<_23a8a5ca8_Log>> _24a11db60_ImportPackage(_249e8d958_JuleImporter*, jule::Str, jule::Bool);
inline void _24a16c95b_Imported(_249e8d958_JuleImporter*, jule::Ptr<_249c1117b_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_23a8a5ca8_Log>> _24a18061c_isPassBuildDirectives(_249e8d958_JuleImporter*, jule::Ptr<_24900ba82_Ast>&);
struct _249e8d958_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_249c1117b_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_249c1117b_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_249e8d958_JuleImporter(void) = default;

	inline bool operator==(_249e8d958_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_249e8d958_JuleImporter _other) { return !this->operator==(_other); }


};
struct _24a52c964_OrderedDefines {
	jule::Slice<jule::Ptr<_249036b01_Struct>> _field_Structs = jule::Slice<jule::Ptr<_249036b01_Struct>>();
	jule::Slice<jule::Ptr<_249c3702b_Var>> _field_Globals = jule::Slice<jule::Ptr<_249c3702b_Var>>();
	

	_24a52c964_OrderedDefines(void) = default;

	inline bool operator==(_24a52c964_OrderedDefines _other) {
		return 
			this->_field_Structs == _other._field_Structs &&
			this->_field_Globals == _other._field_Globals;
	}

	inline bool operator!=(_24a52c964_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool _2515bb1e4_isCommonOrdered(jule::Slice<jule::Ptr<_249036b01_Struct>>&, jule::Ptr<_249036b01_Struct>);
inline jule::Bool _2515c4a05_isCommonOrdered(jule::Slice<jule::Ptr<_249c3702b_Var>>&, jule::Ptr<_249c3702b_Var>);
inline void _2515b718a_orderCommon(jule::Slice<jule::Ptr<_249036b01_Struct>>&);
inline void _2515b7c5c_orderCommon(jule::Slice<jule::Ptr<_249c3702b_Var>>&);
inline void static__24a371731_orderStructures(jule::Slice<jule::Ptr<_249036b01_Struct>>&);
inline void static__24a382610_orderVars(jule::Slice<jule::Ptr<_249c3702b_Var>>&);
struct _249e80e12_defineOrderer {
	

	_249e80e12_defineOrderer(void) = default;

	inline bool operator==(_249e80e12_defineOrderer _other) { return true; }

	inline bool operator!=(_249e80e12_defineOrderer _other) { return !this->operator==(_other); }


};
struct _24a63ce1a_liveTable {
	jule::Slice<jule::Ptr<_249c3702b_Var>> _field_vars = jule::Slice<jule::Ptr<_249c3702b_Var>>();
	jule::Slice<jule::Ptr<_249bcc312_FnIns>> _field_fns = jule::Slice<jule::Ptr<_249bcc312_FnIns>>();
	jule::Slice<jule::Ptr<_249062e4b_StructIns>> _field_structs = jule::Slice<jule::Ptr<_249062e4b_StructIns>>();
	jule::Slice<jule::Ptr<_249bd48d0_Trait>> _field_traits = jule::Slice<jule::Ptr<_249bd48d0_Trait>>();
	

	_24a63ce1a_liveTable(void) = default;

	inline bool operator==(_24a63ce1a_liveTable _other) {
		return 
			this->_field_vars == _other._field_vars &&
			this->_field_fns == _other._field_fns &&
			this->_field_structs == _other._field_structs &&
			this->_field_traits == _other._field_traits;
	}

	inline bool operator!=(_24a63ce1a_liveTable _other) { return !this->operator==(_other); }


};
inline void _24a6745e4_optimizeChild(jule::Ptr<_24a67411b_scopeDeadCode>, jule::Ptr<_249be2635_Scope>&);
inline void _24a67488b_optimizeBodyChildExceptional(jule::Ptr<_24a67411b_scopeDeadCode>, jule::Ptr<_249be2635_Scope>&);
inline void _24a674b22_optimizeBodyChild(jule::Ptr<_24a67411b_scopeDeadCode>, jule::Ptr<_249be2635_Scope>&);
inline void _24a674d97_optimizeExprModel(jule::Ptr<_24a67411b_scopeDeadCode>, jule::Any&);
inline void _24a675073_eliminateFollowed(_24a67411b_scopeDeadCode*);
inline void _24a6752e8_pushGoto(jule::Ptr<_24a67411b_scopeDeadCode>, jule::Ptr<_249be5160_GotoSt>);
inline void _24a67556d_pushLabel(jule::Ptr<_24a67411b_scopeDeadCode>, jule::Ptr<_249be4d74_Label>);
inline void _24a6757e3_optimizeRangeIter(jule::Ptr<_24a67411b_scopeDeadCode>, jule::Ptr<_249be42d5_RangeIter>);
inline void _24a675a68_optimizeWhileIter(jule::Ptr<_24a67411b_scopeDeadCode>, jule::Ptr<_249be3900_WhileIter>);
inline void _24a675cdd_optimizeInfIter(jule::Ptr<_24a67411b_scopeDeadCode>, jule::Ptr<_249be347c_InfIter>);
inline void _24a676063_optimizeConditional(jule::Ptr<_24a67411b_scopeDeadCode>, jule::Ptr<_249be3191_Conditional>);
inline void _24a6762d8_optimizeMatch(jule::Ptr<_24a67411b_scopeDeadCode>, jule::Ptr<_249be6381_Match>);
inline void _24a67655d_optimizeAssign(jule::Ptr<_24a67411b_scopeDeadCode>, jule::Ptr<_249be598a_Assign>);
inline void _24a6767d3_optimizeMultiAssign(jule::Ptr<_24a67411b_scopeDeadCode>, jule::Ptr<_249be5d42_MultiAssign>);
inline void _24a676a58_optimizeStmt(jule::Ptr<_24a67411b_scopeDeadCode>, jule::Any);
inline void _24a676c34_optimizeStmts(jule::Ptr<_24a67411b_scopeDeadCode>);
struct _24a67411b_scopeDeadCode {
	jule::Ptr<_24a67411b_scopeDeadCode> _field_parent = jule::Ptr<_24a67411b_scopeDeadCode>();
	jule::Ptr<_249be2635_Scope> _field_s = jule::Ptr<_249be2635_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();
	jule::Ptr<jule::Slice<jule::Ptr<_249be4d74_Label>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_249be4d74_Label>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_249be5160_GotoSt>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_249be5160_GotoSt>>>();
	jule::Bool _field_except = jule::Bool();
	

	_24a67411b_scopeDeadCode(void) = default;

	inline bool operator==(_24a67411b_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_24a67411b_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _24a678076_exprDeadCode static__24a6786a3_new(jule::Ptr<_24a67411b_scopeDeadCode>&);
inline void _24a678928_binary(_24a678076_exprDeadCode*, jule::Ptr<_249bc63d8_BinopExprModel>);
inline void _24a678b9d_unary(_24a678076_exprDeadCode*, jule::Ptr<_249bc65c5_UnaryExprModel>);
inline void _24a678e23_structureLit(_24a678076_exprDeadCode*, jule::Ptr<_249bc699e_StructLitExprModel>);
inline void _24a679198_allocStructure(_24a678076_exprDeadCode*, jule::Ptr<_249bc6b8b_AllocStructLitExprModel>);
inline void _24a67941d_casting(_24a678076_exprDeadCode*, jule::Ptr<_249bc6d78_CastingExprModel>);
inline void _24a679693_args(_24a678076_exprDeadCode*, jule::Slice<jule::Any>&);
inline void _24a679918_funcCall(_24a678076_exprDeadCode*, jule::Ptr<_249bc7065_FnCallExprModel>);
inline void _24a679b8d_slice(_24a678076_exprDeadCode*, jule::Ptr<_249bc7252_SliceExprModel>);
inline void _24a679e13_array(_24a678076_exprDeadCode*, jule::Ptr<_249bc86c6_ArrayExprModel>);
inline void _24a67a188_indexing(_24a678076_exprDeadCode*, jule::Ptr<_249bc743e_IndexingExprModel>);
inline void _24a67a40d_anonFunc(_24a678076_exprDeadCode*, jule::Ptr<_249bc762b_AnonFnExprModel>);
inline void _24a67a683_mapExpr(_24a678076_exprDeadCode*, jule::Ptr<_249bc7a05_MapExprModel>);
inline void _24a67a908_slicing(_24a678076_exprDeadCode*, jule::Ptr<_249bc7be2_SlicingExprModel>);
inline void _24a67ab7d_traitSub(_24a678076_exprDeadCode*, jule::Ptr<_249bc7dce_TraitSubIdentExprModel>);
inline void _24a67ae03_structureSub(_24a678076_exprDeadCode*, jule::Ptr<_249bc82ec_StructSubIdentExprModel>);
inline void _24a67b178_commonSub(_24a678076_exprDeadCode*, jule::Ptr<_249bc8aa0_CommonSubIdentExprModel>);
inline void _24a67b3ed_tuple(_24a678076_exprDeadCode*, jule::Ptr<_249bc8c8c_TupleExprModel>);
inline void _24a67b673_newCall(_24a678076_exprDeadCode*, jule::Ptr<_249bc9540_BuiltinNewCallExprModel>);
inline void _24a67b8e8_outCall(_24a678076_exprDeadCode*, jule::Ptr<_249bc8e79_BuiltinOutCallExprModel>);
inline void _24a67bb6d_outlnCall(_24a678076_exprDeadCode*, jule::Ptr<_249bc9166_BuiltinOutlnCallExprModel>);
inline void _24a67bde3_panicCall(_24a678076_exprDeadCode*, jule::Ptr<_249bc972c_BuiltinPanicCallExprModel>);
inline void _24a67c168_assertCall(_24a678076_exprDeadCode*, jule::Ptr<_249bc9919_BuiltinAssertCallExprModel>);
inline void _24a67c3dd_errorCall(_24a678076_exprDeadCode*, jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel>);
inline void _24a67c663_makeCall(_24a678076_exprDeadCode*, jule::Ptr<_249bc9b06_BuiltinMakeCallExprModel>);
inline void _24a67c8d8_appendCall(_24a678076_exprDeadCode*, jule::Ptr<_249bc9ce3_BuiltinAppendCallExprModel>);
inline void _24a67cb5d_lenCall(_24a678076_exprDeadCode*, jule::Ptr<_249bc9ed0_BuiltinLenCallExprModel>);
inline void _24a67cdd3_capCall(_24a678076_exprDeadCode*, jule::Ptr<_249bca1bc_BuiltinCapCallExprModel>);
inline void _24a67d158_cloneCall(_24a678076_exprDeadCode*, jule::Ptr<_249bc9353_BuiltinCloneCallExprModel>);
inline void _24a67d3cd_deleteCall(_24a678076_exprDeadCode*, jule::Ptr<_249bc80bb_BuiltinDeleteCallExprModel>);
inline void _24a67d653_sizeof(_24a678076_exprDeadCode*, jule::Ptr<_249bcac06_SizeofExprModel>);
inline void _24a67d8c8_alignof(_24a678076_exprDeadCode*, jule::Ptr<_249bcade3_AlignofExprModel>);
inline void _24a67db4d_integratedToStr(_24a678076_exprDeadCode*, jule::Ptr<_249bcb2bc_IntegratedToStrExprModel>);
inline void _24a67ddc3_free(_24a678076_exprDeadCode*, jule::Ptr<_249bcb696_FreeExprModel>);
inline void _24a67e148_backendEmit(_24a678076_exprDeadCode*, jule::Ptr<_249bcb4a9_BackendEmitExprModel>);
inline void _24a67e3bd_optimize(_24a678076_exprDeadCode*, jule::Any&);
struct _24a678076_exprDeadCode {
	jule::Ptr<_24a67411b_scopeDeadCode> _field_s = jule::Ptr<_24a67411b_scopeDeadCode>();
	

	_24a678076_exprDeadCode(void) = default;

	inline bool operator==(_24a678076_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_24a678076_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _23ac114cb_UnsafeBinopExprModel {
	jule::Ptr<_249bc63d8_BinopExprModel> _field_Node = jule::Ptr<_249bc63d8_BinopExprModel>();
	

	_23ac114cb_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_23ac114cb_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_23ac114cb_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _23b73d601_UnsafeIndexingExprModel {
	jule::Ptr<_249bc743e_IndexingExprModel> _field_Node = jule::Ptr<_249bc743e_IndexingExprModel>();
	

	_23b73d601_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_23b73d601_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_23b73d601_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _2487dbd57_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Ptr<_249bc7252_SliceExprModel> _field_Elems = jule::Ptr<_249bc7252_SliceExprModel>();
	

	_2487dbd57_PushToSliceExprModel(void) = default;

	inline bool operator==(_2487dbd57_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_2487dbd57_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _248c8054d_MutSlicingExprModel {
	jule::Ptr<_23abd3d83_Token> _field_Token = jule::Ptr<_23abd3d83_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Left = jule::Any();
	jule::Any _field_Right = jule::Any();
	

	_248c8054d_MutSlicingExprModel(void) = default;

	inline bool operator==(_248c8054d_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_248c8054d_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _23ac51d57_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Any _field_Expr = jule::Any();
	

	_23ac51d57_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_23ac51d57_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_23ac51d57_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_23b0684c0_scopeOptimizer> static__23ac0920a_new(jule::Ptr<_249be2635_Scope>);
inline void _23ac2429c_setCurrentStmt(_23b0684c0_scopeOptimizer*, jule::Any);
inline void _23ac321bc_optimizeData(_23b0684c0_scopeOptimizer*, jule::Ptr<_249c80052_Data>);
inline void _23ac32db0_optimizeVar(_23b0684c0_scopeOptimizer*, jule::Ptr<_249c3702b_Var>);
inline void _23ac512da_optimizeConditional(_23b0684c0_scopeOptimizer*, jule::Ptr<_249be3191_Conditional>);
inline void _23ac55e9e_buildDefaultConstatTrueCase(_23b0684c0_scopeOptimizer*, jule::Ptr<_249be6dcb_Case>, jule::I64&, jule::Ptr<_249be6381_Match>&);
inline void _23ac57445_optimizeMatch(_23b0684c0_scopeOptimizer*, jule::Ptr<_249be6381_Match>);
inline void _23ac584bd_optimizeRangeIter(_23b0684c0_scopeOptimizer*, jule::Ptr<_249be42d5_RangeIter>);
inline void _23ac5890d_optimizeWhileIter(_23b0684c0_scopeOptimizer*, jule::Ptr<_249be3900_WhileIter>);
inline jule::Bool _23ac8bca4_substr(_23b0684c0_scopeOptimizer*, jule::Ptr<_249be598a_Assign>);
inline jule::Bool _23ac8c656_strInsert(_23b0684c0_scopeOptimizer*, jule::Ptr<_249be598a_Assign>);
inline jule::Bool _23aca2ca9_strAssign(_23b0684c0_scopeOptimizer*, jule::Ptr<_249be598a_Assign>);
inline void _23ad33774_optimizeAssign(_23b0684c0_scopeOptimizer*, jule::Ptr<_249be598a_Assign>);
inline void _23ad3ba79_optimizeMultiAssign(_23b0684c0_scopeOptimizer*, jule::Ptr<_249be5d42_MultiAssign>);
inline void _23ad3ecbe_optimizeRet(_23b0684c0_scopeOptimizer*, jule::Ptr<_249be7904_RetSt>);
inline void _23ad415d9_optimizeStmt(_23b0684c0_scopeOptimizer*, jule::Any);
inline void _23ad46006_optimizeChild(_23b0684c0_scopeOptimizer*, jule::Ptr<_249be2635_Scope>);
inline void _23ad3b7d2_optimize(_23b0684c0_scopeOptimizer*);
struct _23b0684c0_scopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_249be2635_Scope> _field_scope = jule::Ptr<_249be2635_Scope>();
	

	_23b0684c0_scopeOptimizer(void) = default;

	inline bool operator==(_23b0684c0_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_23b0684c0_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__23ad78ad8_optimize(jule::Any&);
inline jule::Bool _23ad7c339_strCond(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc63d8_BinopExprModel>);
inline void _23ad7cbec_binary(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc63d8_BinopExprModel>);
inline void _23ad84a7d_unary(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc65c5_UnaryExprModel>);
inline void _23ad8c459_structureLit(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc699e_StructLitExprModel>);
inline void _23ad8db53_allocStructure(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc6b8b_AllocStructLitExprModel>);
inline void _23ad9b842_casting(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc6d78_CastingExprModel>);
inline void _23adad8dc_args(_23b5ccd20_exprOptimizer*, jule::Slice<jule::Any>&);
inline void _23ade327e_scope(_23b5ccd20_exprOptimizer*, jule::Ptr<_249be2635_Scope>&);
inline void _23ade6c66_funcCall(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc7065_FnCallExprModel>);
inline void _23ae0107d_slice(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc7252_SliceExprModel>);
inline void _23b040bb2_array(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc86c6_ArrayExprModel>);
inline void _23b054bd7_indexing(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc743e_IndexingExprModel>);
inline void _23b05ddbc_anonFunc(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc762b_AnonFnExprModel>);
inline void _23b064d4b_mapExpr(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc7a05_MapExprModel>);
inline void _23b065dc4_slicing(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc7be2_SlicingExprModel>);
inline void _23b054621_traitSub(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc7dce_TraitSubIdentExprModel>);
inline void _23b069c74_structureSub(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc82ec_StructSubIdentExprModel>);
inline void _23b07c01c_commonSub(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc8aa0_CommonSubIdentExprModel>);
inline void _23b081b26_tuple(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc8c8c_TupleExprModel>);
inline void _23b0872ad_newCall(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc9540_BuiltinNewCallExprModel>);
inline void _23b0886bb_outCall(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc8e79_BuiltinOutCallExprModel>);
inline void _23b089975_outlnCall(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc9166_BuiltinOutlnCallExprModel>);
inline void _23b08b218_panicCall(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc972c_BuiltinPanicCallExprModel>);
inline void _23b08ec55_assertCall(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc9919_BuiltinAssertCallExprModel>);
inline void _23b09baa8_errorCall(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel>);
inline void _23b0a84dd_makeCall(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc9b06_BuiltinMakeCallExprModel>);
inline void _23b0b3251_appendCall(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc9ce3_BuiltinAppendCallExprModel>);
inline void _23b0d455d_lenCall(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc9ed0_BuiltinLenCallExprModel>);
inline void _23b0d6d02_capCall(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bca1bc_BuiltinCapCallExprModel>);
inline void _23b0db411_cloneCall(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc9353_BuiltinCloneCallExprModel>);
inline void _23b0e952e_deleteCall(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bc80bb_BuiltinDeleteCallExprModel>);
inline void _23b10c93d_sizeof(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bcac06_SizeofExprModel>);
inline void _23b145b85_alignof(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bcade3_AlignofExprModel>);
inline void _23b19010d_integratedToStr(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bcb2bc_IntegratedToStrExprModel>);
inline void _23b242b3e_free(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bcb696_FreeExprModel>);
inline void _23b245aed_backendEmit(_23b5ccd20_exprOptimizer*, jule::Ptr<_249bcb4a9_BackendEmitExprModel>);
inline void _23b24c693_do(_23b5ccd20_exprOptimizer*);
struct _23b5ccd20_exprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();
	

	_23b5ccd20_exprOptimizer(void) = default;

	inline bool operator==(_23b5ccd20_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_23b5ccd20_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_24a648497_Optimizer> static__24a5930b2_New(jule::Ptr<_24a1bc659_IR>&);
inline void _24a5939a8_optimizeGlobal(_24a648497_Optimizer*, jule::Ptr<_249c3702b_Var>&);
inline void _24a5a2115_optimizeFunction(_24a648497_Optimizer*, jule::Ptr<_249bcbe38_Fn>&);
inline void _24a57521a_optimizeStruct(_24a648497_Optimizer*, jule::Ptr<_249036b01_Struct>&);
inline void _24a5d1287_optimizeGlobals(_24a648497_Optimizer*, jule::Ptr<_249c140d5_Package>&);
inline void _24a5d163e_optimizeFunctions(_24a648497_Optimizer*, jule::Ptr<_249c140d5_Package>&);
inline void _24a5d30be_optimizeStructs(_24a648497_Optimizer*, jule::Ptr<_249c140d5_Package>&);
inline void _24a5de240_optimizePackage(_24a648497_Optimizer*, jule::Ptr<_249c140d5_Package>&);
inline void _24a5e5ab5_Optimize(_24a648497_Optimizer*);
struct _24a648497_Optimizer {
	jule::Ptr<_24a1bc659_IR> _field_ir = jule::Ptr<_24a1bc659_IR>();
	

	_24a648497_Optimizer(void) = default;

	inline bool operator==(_24a648497_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_24a648497_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__24a681aa7_Reset(void);
inline void static__24a682c1d_Print(jule::Str, jule::Str);
struct _24a682a31_AnsiEscape {
	

	_24a682a31_AnsiEscape(void) = default;

	inline bool operator==(_24a682a31_AnsiEscape _other) { return true; }

	inline bool operator!=(_24a682a31_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__24a6843c3_LogFlat(_23a8a5ca8_Log&);
inline void static__24a6845d2_LogError(_23a8a5ca8_Log&);
inline void static__24a6847e1_Log(_23a8a5ca8_Log&);
inline void static__24a684a00_PrintLogs(jule::Slice<_23a8a5ca8_Log>&);
struct _24a68411a_Logger {
	

	_24a68411a_Logger(void) = default;

	inline bool operator==(_24a68411a_Logger _other) { return true; }

	inline bool operator!=(_24a68411a_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _24aca908b_Unix(_24aca8bd4_AbsTime*);
struct _24aca8bd4_AbsTime {
	jule::U64 _field_Day = jule::U64();
	jule::U64 _field_WeekDay = jule::U64();
	jule::U64 _field_YearDay = jule::U64();
	jule::U64 _field_Month = jule::U64();
	jule::U64 _field_Year = jule::U64();
	jule::U64 _field_Second = jule::U64();
	jule::U64 _field_Minute = jule::U64();
	jule::U64 _field_Hour = jule::U64();
	

	_24aca8bd4_AbsTime(void) = default;

	inline bool operator==(_24aca8bd4_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_24aca8bd4_AbsTime _other) { return !this->operator==(_other); }


};
inline _24aca9377_Time static__24aca971d_Unix(jule::U64);
inline _24aca9377_Time static__24aca991b_Now(void);
inline jule::U64 _24aca9d6c_Unix(_24aca9377_Time*);
inline jule::U64 _24acaa0d1_Day(_24aca9377_Time*);
inline jule::U64 _24acaa345_Month(_24aca9377_Time*);
inline jule::U64 _24acaa5a9_Year(_24aca9377_Time*);
inline jule::U64 _24acaa81d_Second(_24aca9377_Time*);
inline jule::U64 _24acaaa82_Minute(_24aca9377_Time*);
inline jule::U64 _24acaace6_Hour(_24aca9377_Time*);
inline _24aca8bd4_AbsTime _24acab05a_Abs(_24aca9377_Time*);
struct _24aca9377_Time {
	jule::U64 _field_sec = jule::U64();
	

	_24aca9377_Time(void) = default;

	inline bool operator==(_24aca9377_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_24aca9377_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_24ac041d4_scopeCoder> static__24ac047ab_new(jule::Ptr<_24acb15c1_ObjectCoder>&);
inline void _24ac04a31_rangeIndexIter(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be42d5_RangeIter>&);
inline void _24ac04ca6_rangeHashmapIter(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be42d5_RangeIter>&);
inline void _24ac0502b_ifCase(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be2a31_If>);
inline void _24ac052a1_conditional(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be3191_Conditional>);
inline void _24ac05526_infIter(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be347c_InfIter>);
inline void _24ac0579b_whileIter(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be3900_WhileIter>);
inline void _24ac05a21_rangeIter(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be42d5_RangeIter>);
inline void _24ac05c96_cont(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be46d1_ContSt>);
inline void _24ac0601b_label(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be4d74_Label>);
inline void _24ac06291_gotoSt(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be5160_GotoSt>);
inline void _24ac06516_postfix(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be5517_Postfix>);
inline void _24ac0678b_assign(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be598a_Assign>);
inline void _24ac06a11_mapLookupAssign(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be5d42_MultiAssign>&);
inline void _24ac06c86_multiAssign(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be5d42_MultiAssign>);
inline jule::Fn<void(void)> _24ac07094_matchExpr(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be6381_Match>);
inline void _24ac073b3_case(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be6381_Match>, jule::Ptr<_249be6dcb_Case>);
inline void _24ac07638_matchSt(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be6381_Match>);
inline void _24ac078ad_fallSt(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be7481_FallSt>);
inline void _24ac07b33_breakSt(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be4a88_BreakSt>);
inline void _24ac07da8_retWithVars(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be7904_RetSt>);
inline void _24ac0812d_retTuple(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be7904_RetSt>);
inline void _24ac083a3_retWithExprs(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be7904_RetSt>);
inline void _24ac08628_retSt(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be7904_RetSt>);
inline void _24ac08b23_var(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249c3702b_Var>);
inline void _24ac08d98_st(jule::Ptr<_24ac041d4_scopeCoder>, jule::Any);
inline void _24ac0911d_scopeStmts(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be2635_Scope>&);
inline void _24ac09393_scope(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249be2635_Scope>);
inline void _24ac09618_funcScope(jule::Ptr<_24ac041d4_scopeCoder>, jule::Ptr<_249bcc312_FnIns>);
struct _24ac041d4_scopeCoder {
	jule::Ptr<_24acb15c1_ObjectCoder> _field_oc = jule::Ptr<_24acb15c1_ObjectCoder>();
	

	_24ac041d4_scopeCoder(void) = default;

	inline bool operator==(_24ac041d4_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_24ac041d4_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_24ac0c099_exprCoder> static__24ac0c495_new(jule::Ptr<_24acb15c1_ObjectCoder>&);
inline void _24ac0c71a_string(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_2491152a6_Const>&);
inline void _24ac0c990_boolean(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_2491152a6_Const>&);
inline void _24ac0cb6b_nilLit(jule::Ptr<_24ac0c099_exprCoder>);
inline jule::Bool _24ac0ce79_ftoaSpecialCases(jule::Ptr<_24ac0c099_exprCoder>, jule::F64&);
inline void _24ac0d1ee_float32(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_2491152a6_Const>&);
inline void _24ac0d474_float64(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_2491152a6_Const>&);
inline void _24ac0d6e9_constant(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_2491152a6_Const>);
inline void _24ac0dab2_divByZeroBinary(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_23abd3d83_Token>&, jule::Ptr<_249bc61eb_OperandExprModel>&, jule::Ptr<_249bc61eb_OperandExprModel>&);
inline void _24ac0dd37_unsafeBinary(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc63d8_BinopExprModel>);
inline void _24ac0e0ac_binary(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc63d8_BinopExprModel>);
inline void _24ac0e332_var(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249c3702b_Var>);
inline void _24ac0e5a7_structureIns(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249062e4b_StructIns>);
inline void _24ac0e82c_unary(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc65c5_UnaryExprModel>);
inline void _24ac0eaa2_structureLit(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc699e_StructLitExprModel>);
inline void _24ac0ed27_allocStructure(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc6b8b_AllocStructLitExprModel>);
inline void _24ac1009c_casting(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc6d78_CastingExprModel>);
inline void _24ac10322_args(jule::Ptr<_24ac0c099_exprCoder>, jule::Slice<jule::Any>);
inline void _24ac10597_modelForCall(jule::Ptr<_24ac0c099_exprCoder>, jule::Any);
inline void _24ac1081c_pushCallInf(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc7065_FnCallExprModel>&);
inline jule::Bool _24ac10b2a_isWrapped(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc7065_FnCallExprModel>&);
inline void _24ac10da0_pureFuncCall(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc7065_FnCallExprModel>&);
inline void _24ac11125_funcCall(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc7065_FnCallExprModel>);
inline void _24ac1139a_slice(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc7252_SliceExprModel>);
inline void _24ac11620_indexing(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc743e_IndexingExprModel>);
inline void _24ac11895_unsafeIndexing(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_23b73d601_UnsafeIndexingExprModel>);
inline void _24ac11b1a_anonFunc(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc762b_AnonFnExprModel>);
inline void _24ac11d90_mapExpr(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc7a05_MapExprModel>);
inline void _24ac12115_slicing(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc7be2_SlicingExprModel>);
inline void _24ac1238a_traitSub(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc7dce_TraitSubIdentExprModel>);
inline void _24ac12610_structureSub(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc82ec_StructSubIdentExprModel>);
inline void _24ac12885_commonIdent(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc88b3_CommonIdentExprModel>);
inline void _24ac12b0a_commonSub(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc8aa0_CommonSubIdentExprModel>);
inline void _24ac12d80_array(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc86c6_ArrayExprModel>);
inline void _24ac13105_funcInsCommon(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bcc312_FnIns>);
inline void _24ac1337a_funcIns(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bcc312_FnIns>);
inline void _24ac13600_tuple(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc8c8c_TupleExprModel>);
inline void _24ac13875_newCall(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc9540_BuiltinNewCallExprModel>);
inline void _24ac13aea_outCall(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc8e79_BuiltinOutCallExprModel>);
inline void _24ac13d70_outlnCall(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc9166_BuiltinOutlnCallExprModel>);
inline void _24ac140e5_panicCall(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc972c_BuiltinPanicCallExprModel>);
inline void _24ac1436a_assertCall(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc9919_BuiltinAssertCallExprModel>);
inline void _24ac145e0_errorCall(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel>);
inline void _24ac14865_copyCall(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bca82c_BuiltinCopyCallExprModel>);
inline void _24ac14ada_lenCall(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc9ed0_BuiltinLenCallExprModel>);
inline void _24ac14d60_capCall(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bca1bc_BuiltinCapCallExprModel>);
inline void _24ac150d5_deleteCall(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc80bb_BuiltinDeleteCallExprModel>);
inline void _24ac1535a_makeCallSlice(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc9b06_BuiltinMakeCallExprModel>&);
inline void _24ac155d0_makeCallStr(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc9b06_BuiltinMakeCallExprModel>&);
inline void _24ac15855_makeCall(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc9b06_BuiltinMakeCallExprModel>);
inline void _24ac15aca_pushToSlice(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_2487dbd57_PushToSliceExprModel>);
inline void _24ac15d50_appendCall(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc9ce3_BuiltinAppendCallExprModel>);
inline void _24ac160c5_cloneCall(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc9353_BuiltinCloneCallExprModel>);
inline void _24ac1634a_sizeof(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bcac06_SizeofExprModel>);
inline void _24ac165c0_alignof(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bcade3_AlignofExprModel>);
inline jule::Str _24ac168cd_runeLit(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bcb0d0_RuneExprModel>);
inline void _24ac16b53_structureStatic(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bc84d9_StructStaticIdentExprModel>);
inline void _24ac16dc8_integratedToStr(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bcb2bc_IntegratedToStrExprModel>);
inline void _24ac1714d_backendEmit(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bcb4a9_BackendEmitExprModel>);
inline void _24ac173c3_free(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249bcb696_FreeExprModel>);
inline void _24ac17648_mutSlicing(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_248c8054d_MutSlicingExprModel>);
inline void _24ac178bd_strInsertBegin(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_23ac51d57_StrInsertBeginExprModel>);
inline void _24ac17b43_model(jule::Ptr<_24ac0c099_exprCoder>, jule::Any);
inline void _24ac17db8_expr(jule::Ptr<_24ac0c099_exprCoder>, jule::Any);
inline void _24ac1813d_val(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249c810ca_Value>);
inline void _24ac183b3_initExpr(jule::Ptr<_24ac0c099_exprCoder>, jule::Ptr<_249cb078b_TypeKind>);
struct _24ac0c099_exprCoder {
	jule::Ptr<_24acb15c1_ObjectCoder> _field_oc = jule::Ptr<_24acb15c1_ObjectCoder>();
	

	_24ac0c099_exprCoder(void) = default;

	inline bool operator==(_24ac0c099_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_24ac0c099_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__24ac1abbd_cloneFuncDecl(jule::Ptr<_249036b01_Struct>&);
inline jule::Str static__24ac1ae65_cloneFuncDef(jule::Ptr<_249036b01_Struct>&);
struct _24ac1a8c1_deriveCoder {
	

	_24ac1a8c1_deriveCoder(void) = default;

	inline bool operator==(_24ac1a8c1_deriveCoder _other) { return true; }

	inline bool operator!=(_24ac1a8c1_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_24ac1bd45_TestCoder> static__24ac1c2b8_New(jule::Ptr<_24acb15c1_ObjectCoder>&);
inline jule::Ptr<_249c1117b_ImportInfo> _24ac1c52c_findTestingPackage(jule::Ptr<_24ac1bd45_TestCoder>);
inline void _24ac1c7a2_appendTest(jule::Ptr<_24ac1bd45_TestCoder>, jule::Ptr<_249bcc312_FnIns>);
inline void _24ac1ca27_appendPackageTests(jule::Ptr<_24ac1bd45_TestCoder>, jule::Ptr<_249c140d5_Package>&);
inline jule::Bool _24ac1cc8b_readyTestingPackage(jule::Ptr<_24ac1bd45_TestCoder>);
inline void _24ac1ce67_callTmReset(jule::Ptr<_24ac1bd45_TestCoder>);
inline void _24ac1d143_callTmFailed(jule::Ptr<_24ac1bd45_TestCoder>);
inline void _24ac1d31e_callTmSkipped(jule::Ptr<_24ac1bd45_TestCoder>);
inline void _24ac1d4ea_Serialize(jule::Ptr<_24ac1bd45_TestCoder>);
struct _24ac1bd45_TestCoder {
	jule::Ptr<_249062e4b_StructIns> _field_t = jule::Ptr<_249062e4b_StructIns>();
	jule::Ptr<_249bcbe38_Fn> _field_tmReset = jule::Ptr<_249bcbe38_Fn>();
	jule::Ptr<_249bcbe38_Fn> _field_tmFailed = jule::Ptr<_249bcbe38_Fn>();
	jule::Ptr<_249bcbe38_Fn> _field_tmSkipped = jule::Ptr<_249bcbe38_Fn>();
	jule::Ptr<_24acb15c1_ObjectCoder> _field_oc = jule::Ptr<_24acb15c1_ObjectCoder>();
	

	_24ac1bd45_TestCoder(void) = default;

	inline bool operator==(_24ac1bd45_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_24ac1bd45_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__24ac1e9a2_toOut(jule::Str&, jule::Uintptr);
inline jule::Str static__24ac1ed8c_toLocal(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__24ac20134_func(jule::Ptr<_249bcbe38_Fn>&);
inline jule::Str static__24ac203cb_funcIns(jule::Ptr<_249bcc312_FnIns>&);
inline jule::Str static__24ac20673_traitDecl(jule::Ptr<_249bd48d0_Trait>);
inline jule::Str static__24ac2091a_param(jule::Ptr<_249bcbc4b_Param>&);
inline jule::Str static__24ac20bb2_structure(jule::Ptr<_249036b01_Struct>&);
inline jule::Str static__24ac20e59_structureIns(jule::Ptr<_249062e4b_StructIns>&);
inline jule::Str static__24ac21201_field(jule::Ptr<_24902413d_Field>&);
inline jule::Str static__24ac21498_var(jule::Ptr<_249c3702b_Var>);
inline jule::Str static__24ac21740_iterBegin(jule::Uintptr);
inline jule::Str static__24ac219d7_iterEnd(jule::Uintptr);
inline jule::Str static__24ac21c7e_iterNext(jule::Uintptr);
inline jule::Str static__24ac22026_label(jule::Str&);
inline jule::Str static__24ac222bd_matchEnd(jule::Uintptr);
inline jule::Str static__24ac22565_caseBegin(jule::Uintptr);
struct _24ac1e496_identCoder {
	

	_24ac1e496_identCoder(void) = default;

	inline bool operator==(_24ac1e496_identCoder _other) { return true; }

	inline bool operator!=(_24ac1e496_identCoder _other) { return !this->operator==(_other); }


};
struct _24ac272e5_SerializationInfo {
	jule::Str _field_Compiler = jule::Str();
	jule::Str _field_CompilerCommand = jule::Str();
	

	_24ac272e5_SerializationInfo(void) = default;

	inline bool operator==(_24ac272e5_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_24ac272e5_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _24acb13d4_traitHash {
	jule::Ptr<_249bd48d0_Trait> _field_t = jule::Ptr<_249bd48d0_Trait>();
	jule::Ptr<_249062e4b_StructIns> _field_s = jule::Ptr<_249062e4b_StructIns>();
	jule::I64 _field_i = jule::I64();
	

	_24acb13d4_traitHash(void) = default;

	inline bool operator==(_24acb13d4_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_24acb13d4_traitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _24acb584a_Str(_24acb5581_customType*);
inline jule::Bool _24acb5b58_Equals(jule::Ptr<_24acb5581_customType>, jule::Ptr<_249cb078b_TypeKind>);
struct _24acb5581_customType {
	jule::Str _field_kind = jule::Str();
	

	_24acb5581_customType(void) = default;

	inline bool operator==(_24acb5581_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_24acb5581_customType _other) { return !this->operator==(_other); }


};
inline jule::Str static__24acb63a6_toType(jule::Str);
inline jule::Str static__24acb664d_prim(jule::Ptr<_249cb5263_Prim>);
inline jule::Str static__24acb68e5_tuple(jule::Ptr<_249cb9ed2_Tuple>);
inline jule::Str static__24acb6b8c_asSptr(jule::Str);
inline jule::Str static__24acb6e34_asPtr(jule::Str);
inline jule::Str static__24acb71cb_sptr(jule::Ptr<_249cb89e7_Sptr>);
inline jule::Str static__24acb7473_ptr(jule::Ptr<_249cbc05b_Ptr>);
inline jule::Str static__24acb771a_enumDecl(jule::Ptr<_249bd6a25_Enum>);
inline jule::Str static__24acb79b2_typeEnumDecl(jule::Ptr<_249bd8120_TypeEnum>);
inline jule::Str static__24acb7c59_asSlice(jule::Ptr<_249cb078b_TypeKind>);
inline jule::Str static__24acb8001_slice(jule::Ptr<_249cb9454_Slc>);
inline jule::Str static__24acb8298_mapType(jule::Ptr<_249cbaa0a_Map>);
inline jule::Str static__24acb8540_traitIdent(jule::Str);
inline jule::Str static__24acb87d7_traitDecl(jule::Ptr<_249bd48d0_Trait>);
inline jule::Str static__24acb8a7e_structure(jule::Ptr<_249036b01_Struct>);
inline jule::Str static__24acb8d26_structureIns(jule::Ptr<_249062e4b_StructIns>);
inline jule::Str static__24acb90bd_array(jule::Ptr<_249cbb5ee_Arr>);
inline jule::Str static__24acb960c_paramIns(jule::Ptr<_249bcc125_ParamIns>&);
inline jule::Str static__24acb9b4b_funcInsResult(jule::Ptr<_249bcc312_FnIns>&);
inline jule::Str static__24acb9de3_anonFunc(jule::Ptr<_249bcc312_FnIns>);
inline jule::Str static__24acba18a_func(jule::Ptr<_249bcc312_FnIns>);
inline jule::Str static__24acba432_kind(jule::Ptr<_249cb078b_TypeKind>);
struct _24acb5d78_typeCoder {
	

	_24acb5d78_typeCoder(void) = default;

	inline bool operator==(_24acb5d78_typeCoder _other) { return true; }

	inline bool operator!=(_24acb5d78_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _2511c436e_Name(_2512892e1_Flag*);
inline jule::Str _2511c44a1_What(_2512892e1_Flag*);
inline void _251289720_Reset(_2512892e1_Flag*);
inline jule::I32 _251289852_Short(_2512892e1_Flag*);
struct _2512892e1_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::I64 _field_default = jule::I64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::I64> _field_data = jule::Ptr<jule::I64>();
	

	_2512892e1_Flag(void) = default;

	inline bool operator==(_2512892e1_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_2512892e1_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _25128cb52_Name(_25128d13b_Flag*);
inline jule::Str _25128d427_What(_25128d13b_Flag*);
inline void _25128d559_Reset(_25128d13b_Flag*);
inline jule::I32 _25128d68b_Short(_25128d13b_Flag*);
struct _25128d13b_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::U64 _field_default = jule::U64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::U64> _field_data = jule::Ptr<jule::U64>();
	

	_25128d13b_Flag(void) = default;

	inline bool operator==(_25128d13b_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_25128d13b_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _25129178d_Name(_251291c77_Flag*);
inline jule::Str _251292063_What(_251291c77_Flag*);
inline void _251292195_Reset(_251291c77_Flag*);
inline jule::I32 _2512922c7_Short(_251291c77_Flag*);
struct _251291c77_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::F64 _field_default = jule::F64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::F64> _field_data = jule::Ptr<jule::F64>();
	

	_251291c77_Flag(void) = default;

	inline bool operator==(_251291c77_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_251291c77_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _25129541d_Name(_251295907_Flag*);
inline jule::Str _251295be3_What(_251295907_Flag*);
inline void _251295d25_Reset(_251295907_Flag*);
inline jule::I32 _251295e57_Short(_251295907_Flag*);
struct _251295907_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::Bool _field_default = jule::Bool();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::Bool> _field_data = jule::Ptr<jule::Bool>();
	

	_251295907_Flag(void) = default;

	inline bool operator==(_251295907_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_251295907_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _251299059_Name(_251299543_Flag*);
inline jule::Str _25129982e_What(_251299543_Flag*);
inline void _251299961_Reset(_251299543_Flag*);
inline jule::I32 _251299a93_Short(_251299543_Flag*);
struct _251299543_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::Str _field_default = jule::Str();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::Str> _field_data = jule::Ptr<jule::Str>();
	

	_251299543_Flag(void) = default;

	inline bool operator==(_251299543_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_251299543_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_24ad00e5c_FlagSet> static__24ad01248_New(void);
inline jule::Trait<_24aac840a_CommonFlag> _24ad016cc_FindFlag(_24ad00e5c_FlagSet*, jule::Str);
inline jule::Trait<_24aac840a_CommonFlag> _24ad019da_FindFlagShort(_24ad00e5c_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_24aac840a_CommonFlag>> _24ad01c4e_Flags(_24ad00e5c_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _24ad0205c_Parse(_24ad00e5c_FlagSet*, jule::Slice<jule::Str>);
inline void _24ad02238_Reset(_24ad00e5c_FlagSet*);
inline jule::Ptr<_251299543_Flag> _251b6c630_addFlagCommon(_24ad00e5c_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_251295907_Flag> _251b7676b_addFlagCommon(_24ad00e5c_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _251b6a8d6_AddVar(_24ad00e5c_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _251b74a33_AddVar(_24ad00e5c_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _24ad00e5c_FlagSet {
	jule::Slice<jule::Trait<_24aac840a_CommonFlag>> _field_flags = jule::Slice<jule::Trait<_24aac840a_CommonFlag>>();
	

	_24ad00e5c_FlagSet(void) = default;

	inline bool operator==(_24ad00e5c_FlagSet _other) {
		return 
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_24ad00e5c_FlagSet _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_24a1bc659_IR>,jule::Slice<_23a8a5ca8_Log>> static__248ea3dae_Build(jule::Str, jule::I64);
inline void _249d77501_appendStructs(_24a1bc659_IR*, jule::Ptr<_249c140d5_Package>&, jule::Slice<jule::Ptr<_249036b01_Struct>>&);
inline jule::Slice<jule::Ptr<_249036b01_Struct>> _24a1939a4_GetAllStructures(_24a1bc659_IR*);
inline void _24a1a7732_appendGlobals(_24a1bc659_IR*, jule::Ptr<_249c140d5_Package>&, jule::Slice<jule::Ptr<_249c3702b_Var>>&);
inline jule::Slice<jule::Ptr<_249c3702b_Var>> _24a1ae409_GetAllGlobals(_24a1bc659_IR*);
inline void _24a310307_Order(_24a1bc659_IR*);
struct _24a1bc659_IR {
	jule::Str _field_Root = jule::Str();
	jule::Slice<jule::Str> _field_Passes = jule::Slice<jule::Str>();
	jule::Ptr<_249c140d5_Package> _field_Main = jule::Ptr<_249c140d5_Package>();
	jule::Slice<jule::Ptr<_249c1117b_ImportInfo>> _field_Used = jule::Slice<jule::Ptr<_249c1117b_ImportInfo>>();
	_24a52c964_OrderedDefines _field_Ordered = _24a52c964_OrderedDefines();
	

	_24a1bc659_IR(void) = default;

	inline bool operator==(_24a1bc659_IR _other) {
		return 
			this->_field_Root == _other._field_Root &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Main == _other._field_Main &&
			this->_field_Used == _other._field_Used &&
			this->_field_Ordered == _other._field_Ordered;
	}

	inline bool operator!=(_24a1bc659_IR _other) { return !this->operator==(_other); }


};
inline jule::Str _249027262_Str(_249062e4b_StructIns*);
inline jule::Bool _2490387d4_Equals(jule::Ptr<_249062e4b_StructIns>, jule::Ptr<_249cb078b_TypeKind>);
inline jule::Bool _24903994a_Same(_249062e4b_StructIns*, jule::Ptr<_249062e4b_StructIns>);
inline jule::Ptr<_249bcbe38_Fn> _24903bc9e_FindMethod(_249062e4b_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_24903e268_FieldIns> _24903d0be_FindField(_249062e4b_StructIns*, jule::Str);
inline jule::Ptr<_249c3702b_Var> _249040ad8_FindStatic(_249062e4b_StructIns*, jule::Str);
struct _249062e4b_StructIns {
	jule::Bool _field_Checked = jule::Bool();
	jule::Ptr<_249036b01_Struct> _field_Decl = jule::Ptr<_249036b01_Struct>();
	jule::Slice<jule::Ptr<_249cae05e_InsGeneric>> _field_Generics = jule::Slice<jule::Ptr<_249cae05e_InsGeneric>>();
	jule::Slice<jule::Ptr<_24903e268_FieldIns>> _field_Fields = jule::Slice<jule::Ptr<_24903e268_FieldIns>>();
	jule::Slice<jule::Ptr<_249c3702b_Var>> _field_Statics = jule::Slice<jule::Ptr<_249c3702b_Var>>();
	jule::Slice<jule::Ptr<_249bcbe38_Fn>> _field_Methods = jule::Slice<jule::Ptr<_249bcbe38_Fn>>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Ptr<_249bcccd5_ReferenceStack> _field_Refers = jule::Ptr<_249bcccd5_ReferenceStack>();
	_24903852b_Operators _field_Operators = _24903852b_Operators();
	

	_249062e4b_StructIns(void) = default;

	inline bool operator==(_249062e4b_StructIns _other) {
		return 
			this->_field_Checked == _other._field_Checked &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Statics == _other._field_Statics &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Operators == _other._field_Operators;
	}

	inline bool operator!=(_249062e4b_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_24a63d1d4_ObjectDeadCode> static__24a63d635_new(jule::Ptr<_24a1bc659_IR>&);
inline jule::Bool _251601757_isLive(jule::Ptr<_24a63d1d4_ObjectDeadCode>, jule::Ptr<_249bd48d0_Trait>&);
inline jule::Bool _251606be1_isLive(jule::Ptr<_24a63d1d4_ObjectDeadCode>, jule::Ptr<_249bcc312_FnIns>&);
inline jule::Bool _25161149d_isLive(jule::Ptr<_24a63d1d4_ObjectDeadCode>, jule::Ptr<_249062e4b_StructIns>&);
inline jule::Bool _25161620b_isLive(jule::Ptr<_24a63d1d4_ObjectDeadCode>, jule::Ptr<_249c3702b_Var>&);
inline void _251601d40_pushLive(jule::Ptr<_24a63d1d4_ObjectDeadCode>, jule::Ptr<_249bd48d0_Trait>);
inline void _25160b0be_pushLive(jule::Ptr<_24a63d1d4_ObjectDeadCode>, jule::Ptr<_249bcc312_FnIns>);
inline void _25160e413_pushLive(jule::Ptr<_24a63d1d4_ObjectDeadCode>, jule::Ptr<_249062e4b_StructIns>);
inline void _251619c59_pushLive(jule::Ptr<_24a63d1d4_ObjectDeadCode>, jule::Ptr<_249c3702b_Var>);
inline void _24a670db5_setReferencesAsLive(jule::Ptr<_24a63d1d4_ObjectDeadCode>, jule::Ptr<_249bcccd5_ReferenceStack>&);
inline void _24a67113a_inits(jule::Ptr<_24a63d1d4_ObjectDeadCode>, jule::Ptr<_249c140d5_Package>&);
inline void _24a6713b0_collectLivePackage(jule::Ptr<_24a63d1d4_ObjectDeadCode>, jule::Ptr<_249c140d5_Package>&);
inline void _24a67158b_collectLive(jule::Ptr<_24a63d1d4_ObjectDeadCode>);
inline void _24a671811_removeDeadGlobals(jule::Ptr<_24a63d1d4_ObjectDeadCode>, jule::Slice<jule::Ptr<_249c3702b_Var>>&);
inline void _24a671a86_removeDeadFns(jule::Ptr<_24a63d1d4_ObjectDeadCode>, jule::Slice<jule::Ptr<_249bcbe38_Fn>>&);
inline void _24a671d0b_removeDeadStructs(jule::Ptr<_24a63d1d4_ObjectDeadCode>, jule::Slice<jule::Ptr<_249036b01_Struct>>&);
inline void _24a672081_removeDeadTraits(jule::Ptr<_24a63d1d4_ObjectDeadCode>, jule::Slice<jule::Ptr<_249bd48d0_Trait>>&);
inline void _24a672306_removeDeadsFile(jule::Ptr<_24a63d1d4_ObjectDeadCode>, jule::Ptr<_249c7a228_SymbolTable>&);
inline void _24a67257b_removeDeadsPackage(jule::Ptr<_24a63d1d4_ObjectDeadCode>, jule::Ptr<_249c140d5_Package>&);
inline void _24a672757_removeDeads(jule::Ptr<_24a63d1d4_ObjectDeadCode>);
inline void _24a672933_elimanate(jule::Ptr<_24a63d1d4_ObjectDeadCode>);
struct _24a63d1d4_ObjectDeadCode {
	_24a63ce1a_liveTable _field_live = _24a63ce1a_liveTable();
	jule::Ptr<_24a1bc659_IR> _field_ir = jule::Ptr<_24a1bc659_IR>();
	

	_24a63d1d4_ObjectDeadCode(void) = default;

	inline bool operator==(_24a63d1d4_ObjectDeadCode _other) {
		return 
			this->_field_live == _other._field_live &&
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_24a63d1d4_ObjectDeadCode _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_24acb15c1_ObjectCoder> static__24ac51792_New(jule::Ptr<_24a1bc659_IR>&, _24ac272e5_SerializationInfo);
inline void _24ac55de5_write(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Str);
inline void _24ac88d90_addIndent(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24ac89775_doneIndent(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24ac267bc_indent(jule::Ptr<_24acb15c1_ObjectCoder>);
inline jule::I64 _24ac46c1b_findTypeOffset(_24acb15c1_ObjectCoder*, jule::Ptr<_249bd48d0_Trait>, jule::Ptr<_249cb078b_TypeKind>);
inline void _24ac86420_locInfo(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_23abd3d83_Token>&);
inline void _24ac8694d_head(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24ac274d2_links(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24ac4a549_prepareStructures(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24ac52386_iterPackages(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Fn<void(jule::Ptr<_249c140d5_Package>&)>);
inline void _24ac52919_buildTraitMap(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24ac537d8_traitDecls(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24ac53e9d_structurePlainDecl(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_249036b01_Struct>&);
inline void _24ac54663_structurePlainDecls(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24ac8ec20_fieldDecl(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_24903e268_FieldIns>&);
inline void _24ac54d28_structureDestructor(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_249062e4b_StructIns>&);
inline void _24ac888ea_structureDeriveDefsDecls(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_249062e4b_StructIns>&);
inline void _24ac4b913_structureOperatorEq(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Str&, jule::Ptr<_249062e4b_StructIns>&);
inline void _24acb1b65_structureOperatorNotEq(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Str&, jule::Ptr<_249062e4b_StructIns>&);
inline void _24acb1c97_structureOperator(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Str&, jule::Ptr<_249bcc312_FnIns>&, jule::Str);
inline void _24acb1dc9_structureOperators(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_249062e4b_StructIns>&);
inline void _24acb200b_structureInsDecl(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_249062e4b_StructIns>&);
inline void _24acb213d_structureDecl(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_249036b01_Struct>&);
inline void _24acb2270_structureDecls(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24acb23a2_paramsDecls(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Slice<jule::Ptr<_249bcc125_ParamIns>>&);
inline void _24acb24d4_funcHead(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_249bcc312_FnIns>&, jule::Bool);
inline void _24acb2616_funcDecl(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_249bcbe38_Fn>&, jule::Bool);
inline void _24acb2748_funcDecls(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24acb287a_traitDataTypes(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24acb29ac_paramIns(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_249bcc125_ParamIns>&);
inline void _24acb2ade_paramsIns(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Slice<jule::Ptr<_249bcc125_ParamIns>>&);
inline void _24acb2c21_varInitExpr(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_249c3702b_Var>&, jule::Fn<void(void)>);
inline void _24acb2d53_var(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_249c3702b_Var>);
inline void _24acb2e85_func(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_249bcbe38_Fn>&);
inline void _24acb30b7_traitWrappers(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24acb31e9_traitDatas(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24acb332b_globals(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24acb345d_decls(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24acb3590_structureMethods(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_249062e4b_StructIns>&);
inline void _24acb36c2_structureDeriveDefs(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_249062e4b_StructIns>&);
inline void _24acb3804_structureOstream(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_249062e4b_StructIns>&);
inline void _24acb3936_structureIns(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_249062e4b_StructIns>&);
inline void _24acb3a68_structure(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_249036b01_Struct>&);
inline void _24acb3b9a_structures(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24acb3ccc_funcs(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24acb3e0e_pushInit(jule::Ptr<_24acb15c1_ObjectCoder>, jule::Ptr<_249c140d5_Package>&);
inline void _24acb4041_initCaller(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24acb4173_end(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24acb42a5_serializeHead(jule::Ptr<_24acb15c1_ObjectCoder>);
inline void _24acb43d7_Serialize(jule::Ptr<_24acb15c1_ObjectCoder>);
struct _24acb15c1_ObjectCoder {
	jule::Str _field_Obj = jule::Str();
	jule::Ptr<_24a1bc659_IR> _field_ir = jule::Ptr<_24a1bc659_IR>();
	_24ac272e5_SerializationInfo _field_info = _24ac272e5_SerializationInfo();
	jule::Slice<jule::Ptr<_24acb13d4_traitHash>> _field_tmap = jule::Slice<jule::Ptr<_24acb13d4_traitHash>>();
	jule::Str _field_indentBuffer = jule::Str();
	jule::Ptr<_24ac0c099_exprCoder> _field_ec = jule::Ptr<_24ac0c099_exprCoder>();
	jule::Ptr<_24ac041d4_scopeCoder> _field_sc = jule::Ptr<_24ac041d4_scopeCoder>();
	

	_24acb15c1_ObjectCoder(void) = default;

	inline bool operator==(_24acb15c1_ObjectCoder _other) {
		return 
			this->_field_Obj == _other._field_Obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indentBuffer == _other._field_indentBuffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_24acb15c1_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _2512ade92_parseInteger(_24ad03635_argParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _2512b75b6_parseInteger(_24ad03635_argParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _24ad03e2c_getData(_24ad03635_argParser*);
inline jule::VoidExceptional _24ad0416e_processFlag(_24ad03635_argParser*, jule::Trait<_24aac840a_CommonFlag>&);
inline jule::VoidExceptional _24ad043e4_singleDash(_24ad03635_argParser*, jule::Str&);
inline jule::VoidExceptional _24ad04669_doubleDash(_24ad03635_argParser*, jule::Str&);
inline jule::VoidExceptional _24ad04845_tryArg(_24ad03635_argParser*);
inline jule::VoidExceptional _24ad04a21_parse(_24ad03635_argParser*);
struct _24ad03635_argParser {
	_24ad00e5c_FlagSet _field_set = _24ad00e5c_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();
	

	_24ad03635_argParser(void) = default;

	inline bool operator==(_24ad03635_argParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_24ad03635_argParser _other) { return !this->operator==(_other); }


};
inline void _239727873_Free(void*);
inline jule::Str _23975200c_BytePtrToStr(jule::U8*);
inline jule::I64 _23897c090_GetLastErrno(void);
inline jule::I64 _239758ee2_Stat(jule::U8*, struct stat*);
inline jule::I64 _2397593cc_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _23975971d_Getcwd(jule::U8*, jule::U64);
inline DIR* _239759be6_Opendir(jule::U8*);
inline struct dirent* _239759e8d_Readdir(DIR*);
inline jule::I64 _23975a235_Closedir(DIR*);
inline jule::I64 _23975aab5_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _23975ad5c_Rmdir(jule::U8*);
inline jule::I64 _23975b104_Unlink(jule::U8*);
inline jule::I64 _239789c26_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _23978a111_Read(jule::I64, void*, jule::U64);
inline jule::I64 _23978a485_Close(jule::I64);
inline jule::I64 _23978a870_Write(jule::I64, void*, jule::U64);
inline void _23978aa7e_Exit(jule::I64);
inline jule::I64 _2397ee098_getLastOsError(void);
inline jule::Slice<jule::Str> _239824e59_Args(void);
inline jule::Exceptional<jule::Str> _2398253cc_WorkingDir(void);
inline jule::Exceptional<jule::Str> _239826323_getwd(void);
inline jule::Bool _23a6c06b6_IsLetter(jule::I32);
inline jule::Bool _23a7478d6_is16(jule::Slice<_23a745d24_Range16>, jule::U16);
inline jule::Bool _23a747c27_is32(jule::Slice<_23a746297_Range32>, jule::U32);
inline jule::Bool _23a7484b9_isExcludingLatin(jule::Ptr<_23a74671a_RangeTable>, jule::I32);
inline jule::Bool _23a748761_IsUpper(jule::I32);
inline std::tuple<jule::I32,jule::I64> _23a8099cb_DecodeRune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _23a809cea_DecodeRuneStr(jule::Str);
inline std::tuple<jule::I32,jule::I64> _23a80a092_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _23a80ad40_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _23a80b181_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _23a80b6c0_RuneCountStr(jule::Str);
inline jule::Bool _23a80b967_RuneStart(jule::U8);
inline jule::Slice<jule::U8> _23a829457_Stobs(jule::Str&);
inline void _23a829aa6_PushToStrBuffer(jule::Str&, jule::Slice<jule::U8>);
inline jule::I64 _23a828885_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _23a829eb3_FindLastByteStr(jule::Str&, jule::U8);
inline jule::Str _23a811c47_Repeat(jule::Str, jule::I64);
inline jule::Bool _23a80d150_hasPrefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _23a82a128_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _23a82a2d2_hasSuffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _23a82a5e0_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _23a82a9ca_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _23a82b316_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _23a82b657_FindLast(jule::Str, jule::Str);
inline jule::I64 _23a82c900_findRune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _23a82d23b_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _23a82e050_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _23a82e77b_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _23a82eabc_Contains(jule::Str, jule::Str);
inline jule::Bool _23a830590_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _23a8308d1_Count(jule::Str, jule::Str);
inline jule::Str _23a830d65_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _23a82cdc8_trimLeft(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _23a831e21_TrimLeft(jule::Str, jule::Str);
inline void _23a8321c9_trimRight(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _23a83285b_Trim(jule::Str, jule::Str);
inline jule::Str _23a832b9c_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _2398827ad_Clean(jule::Str);
inline jule::Str _239886031_FromSlash(jule::Str);
inline jule::Str _23988a9b4_Join(jule::Slice<jule::Str>);
inline jule::Str _23989348e_Ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _239894ea7_Abs(jule::Str);
inline jule::Str _239872baa_Base(jule::Str);
inline jule::Str _239877bc1_Dir(jule::Str);
inline jule::Str _23987b631_VolumeName(jule::Str);
inline jule::Bool _2398a5616_IsPathSep(jule::U8);
inline jule::Bool _2398a9230_IsAbs(jule::Str);
inline jule::I64 _23987a685_volumeNameLen(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _23987e37b_abs(jule::Str);
inline jule::Str _23988212b_join(jule::Slice<jule::Str>);
inline jule::I64 _23899973e_getLastFsError(void);
inline jule::I64 _23a900cae_getLastProcessError(void);
inline jule::Slice<char*> _23a904015_strSliceToCstrSlice(jule::Slice<jule::Str>);
inline jule::I64 _23a904466_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _23a904851_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _23a905467_Exit(jule::I64);
inline jule::Str _23a905665_Executable(void);
inline jule::Bool _23a899186_IsStdHeaderPath(jule::Str);
inline jule::Bool _23a8992b8_IsValidHeaderExt(jule::Str);
inline jule::Bool _23a89951b_IsValidCppExt(jule::Str);
inline jule::Str _23a8a61e8_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _23a8a64d4_argToStr(jule::Any);
inline jule::I64 _23a8a677b_findNextFmt(jule::Str);
inline jule::Str _23a8a6b11_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _23a8a7bcd_IsTopDirective(jule::Str);
inline jule::Bool _23a8a910d_IsWindows(jule::Str);
inline jule::Bool _23a8a93b6_IsDarwin(jule::Str);
inline jule::Bool _23a8a965d_IsLinux(jule::Str);
inline jule::Bool _23a8a997c_IsI386(jule::Str);
inline jule::Bool _23a8a9c24_IsAmd64(jule::Str);
inline jule::Bool _23a8a9ebb_IsArm64(jule::Str);
inline jule::Bool _23a8aa263_IsUnix(jule::Str);
inline jule::Bool _23a8aa5d7_Is32Bit(jule::Str);
inline jule::Bool _23a8aa87e_Is64Bit(jule::Str);
inline void _23a8b799b_init(void);
inline jule::Bool _23abd458c_IsUnaryOp(jule::Str);
inline jule::Bool _23abd4878_IsBinOp(jule::Str);
inline jule::Bool _23abd4e3e_IsStr(jule::Str);
inline jule::Bool _23abd51d6_IsRawStr(jule::Str);
inline jule::Bool _23abd547d_IsRune(jule::Str);
inline jule::Bool _23abd5a99_IsBool(jule::Str);
inline jule::Bool _23abd5d41_IsFloat(jule::Str);
inline jule::Bool _23abd60d8_IsNum(jule::Str);
inline jule::Bool _23abd6627_IsIgnoreIdent(jule::Str);
inline jule::Bool _23abd68be_IsAnonIdent(jule::Str);
inline jule::Bool _23abd6e0d_IsSpace(jule::I32);
inline jule::Bool _23abd735e_IsLetter(jule::I32);
inline jule::Bool _23abd789d_IsDecimal(jule::U8);
inline jule::Bool _23abd7b45_IsBinary(jule::U8);
inline jule::Bool _23abd7ddc_IsOctal(jule::U8);
inline jule::Bool _23abd8184_IsHex(jule::U8);
inline jule::Bool _23abd842b_IsAssign(jule::U64);
inline jule::Bool _23abd86c3_IsPostfixOp(jule::Str);
inline jule::Bool _23abd896a_IsAssignOp(jule::Str);
inline jule::Ptr<_23abd921d_File> _23abda74c_NewFileSet(jule::Str);
inline _23a8a5ca8_Log _23abdc078_makeErr(jule::I64, jule::I64, jule::Ptr<_23abd921d_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _23abdc40d_bytesHasPrefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _23abdc74e_floatFmtE(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _23abdcad4_floatFmtP(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _23abdce25_floatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _23abdd266_floatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _23abdd5a7_floatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _23abdda08_floatNum(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _23abddca0_commonNum(jule::Slice<jule::U8>&);
inline jule::Str _23abde047_binaryNum(jule::Slice<jule::U8>&);
inline jule::Bool _23abde388_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _23abde6c9_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _23abdea1a_isFloatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _23abded5b_isFloatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _23abe019c_isFloatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _23abe05ed_octalNum(jule::Slice<jule::U8>&);
inline jule::Str _23abe0895_hexNum(jule::Slice<jule::U8>&);
inline jule::Str _23abe0bd6_hexEscape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _23abe0e7d_bigUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _23abe1247_littleUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _23abe1401_hexByteEscape(jule::Slice<jule::U8>&);
inline jule::Str _23abe1687_byteEscape(jule::Slice<jule::U8>&);
inline jule::Slice<_23a8a5ca8_Log> _23abe6181_Lex(jule::Ptr<_23abd921d_File>, jule::I64);
inline jule::I64 _249b7ee63_LeadingZeros64(jule::U64);
inline jule::I64 _249b80eb9_TrailingZeros(jule::U64);
inline jule::I64 _249b818b0_TrailingZeros32(jule::U32);
inline jule::I64 _249b81b57_TrailingZeros64(jule::U64);
inline jule::I64 _249b873cc_Len32(jule::U32);
inline jule::I64 _249b87674_Len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _249b88334_Add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _249b899b7_Mul64(jule::U64, jule::U64);
inline jule::U32 _249aa6340_F32Bits(jule::F32);
inline jule::F32 _249aa662b_F32FromBits(jule::U32);
inline jule::U64 _249aa68c3_F64Bits(jule::F64);
inline jule::F64 _249aa6be2_F64FromBits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _249aa92ee_Frexp(jule::F64);
inline jule::F64 _249b16b31_NaN(void);
inline jule::Bool _249b17a66_IsNaN(jule::F64);
inline jule::F64 _249b19507_Inf(jule::I64);
inline jule::Bool _249b1ed6a_IsInf(jule::F64, jule::I64);
inline std::tuple<jule::F64,jule::I64> _249b21476_normalize(jule::F64);
inline jule::F64 _249b31640_Log(jule::F64);
inline jule::F64 _249b3ce21_Abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _249b93361_Modf(jule::F64);
inline jule::F64 _249b93b25_Log2(jule::F64);
inline jule::Str _249602be4_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _24961739b_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _24967002a_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _24979546e_floatInfo&);
inline jule::Slice<jule::U8> _249696925_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _2398213c8_decimalSlice, jule::I64, jule::U8);
inline void _249698ae2_roundShortest(_249bc09dc_decimal&, jule::U64, jule::I64, _24979546e_floatInfo&);
inline jule::Slice<jule::U8> _2496a7bde_fmtE(jule::Slice<jule::U8>, jule::Bool, _2398213c8_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _2496a8393_fmtF(jule::Slice<jule::U8>, jule::Bool, _2398213c8_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _2496a932d_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _24979546e_floatInfo&);
inline jule::Slice<jule::U8> _249772c43_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _24979546e_floatInfo&);
inline jule::I64 _2497964c5_min(jule::I64, jule::I64);
inline jule::I64 _24979b8a4_max(jule::I64, jule::I64);
inline jule::U8 _249807624_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _249827567_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _249849b0b_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _2498cb5e9_ParseInt(jule::Str, jule::I64, jule::I64);
inline std::tuple<jule::F64,jule::Bool> _2499967a2_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _2499d9a9d_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _2497a66d3_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _2495e3c4b_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _249a38415_readFloat(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _24967d1d1_atof64exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _2496ccc25_atof32exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F64,jule::I64> _2498512e9_atofHex(jule::Str, _24979546e_floatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _2498cbc15_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _249927634_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _2499653a8_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _249a3a0a4_ParseFloat(jule::Str, jule::I64);
inline void _249a91869_ryuFtoaFixed32(_2398213c8_decimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _249a981ab_ryuFtoaFixed64(_2398213c8_decimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _24965d0b2_formatDecimal(_2398213c8_decimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _2497461de_ryuFtoaShortest(_2398213c8_decimalSlice&, jule::U64, jule::I64, _24979546e_floatInfo&);
inline jule::I64 _2497c338c_mulByLog2Log10(jule::I64);
inline jule::I64 _249bbe5e0_mulByLog10Log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _249bbe722_computeBounds(jule::U64, jule::I64, _24979546e_floatInfo&);
inline void _249bbe964_ryuDigits(_2398213c8_decimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _249bbea96_ryuDigits32(_2398213c8_decimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _249bbebc8_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _249bbed0a_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _249bbee3c_divisibleByPow5(jule::U64, jule::I64);
inline std::tuple<jule::U32,jule::U32> _249bc006e_divmod1e9(jule::U64);
inline void _249bc1548_trim(_249bc09dc_decimal&);
inline void _249bc167a_rightShift(_249bc09dc_decimal&, jule::U64);
inline jule::Bool _249bc17ac_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _249bc18de_leftShift(_249bc09dc_decimal&, jule::U64);
inline jule::Bool _249bc1a21_shouldRoundUp(_249bc09dc_decimal&, jule::I64);
inline jule::Str _249bc259e_FmtUint(jule::U64, jule::I64);
inline jule::Str _249bc26d1_FmtInt(jule::I64, jule::I64);
inline jule::Str _249bc2813_Itoa(jule::I64);
inline jule::Str _249bc2945_small(jule::I64);
inline jule::Bool _249bc2a77_isPowerOfTwo(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _249bc2ba9_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _249202a14_RealKindOf(jule::Str);
inline jule::I64 _249209246_BitsizeOf(jule::Str);
inline jule::Str _24922d4ce_IntFromBits(jule::I64);
inline jule::Str _2492403e2_UintFromBits(jule::I64);
inline jule::Str _24926987d_FloatFromBits(jule::I64);
inline jule::Bool _249406135_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _249425d25_BitsizeOfFloat(jule::F64);
inline jule::I64 _2494cc34e_BitsizeOfInt(jule::I64);
inline jule::I64 _2494e50e2_BitsizeOfUint(jule::U64);
inline void _2494e581d_UpdateTarget(void);
inline void _249502dd0_init(void);
inline jule::F64 _24957c4a9_Min(jule::Str);
inline jule::F64 _2495852d6_Max(jule::Str);
inline jule::Bool _249591e19_IsI8Compatible(jule::Str);
inline jule::Bool _24959d651_IsI16Compatible(jule::Str);
inline jule::Bool _2495c3ab6_IsI32Compatible(jule::Str);
inline jule::Bool _2495ca183_IsI64Compatible(jule::Str);
inline jule::Bool _249181047_IsU8Compatible(jule::Str);
inline jule::Bool _2491cec99_IsU16Compatible(jule::Str);
inline jule::Bool _24925723e_IsU32Compatible(jule::Str);
inline jule::Bool _249257cab_IsU64Compatible(jule::Str);
inline jule::Bool _249447808_IsF32Compatible(jule::Str);
inline jule::Bool _24944893b_IsF64Compatible(jule::Str);
inline jule::Bool _249453902_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _249458a5b_IsI16Greater(jule::Str);
inline jule::Bool _2495c4028_IsI32Greater(jule::Str);
inline jule::Bool _2491d1d45_IsI64Greater(jule::Str);
inline jule::Bool _249405992_IsU16Greater(jule::Str);
inline jule::Bool _249bc366b_IsU32Greater(jule::Str);
inline jule::Bool _249bc379d_IsU64Greater(jule::Str);
inline jule::Bool _249bc38d0_IsF32Greater(jule::Str);
inline jule::Bool _249bc3a12_IsF64Greater(jule::Str);
inline jule::Bool _249bc3b44_IsGreater(jule::Str, jule::Str);
inline jule::Bool _249bc4084_IsSigInt(jule::Str);
inline jule::Bool _249bc41b6_IsUnsigInt(jule::Str);
inline jule::Bool _249bc42e8_IsInt(jule::Str);
inline jule::Bool _249bc442a_IsFloat(jule::Str);
inline jule::Bool _249bc455c_IsNum(jule::Str);
inline jule::Bool _249bc468e_IsSigNum(jule::Str);
inline void _249bc5e87_lshiftUnsig(_2491152a6_Const&, _2491152a6_Const&);
inline void _249bc60b9_rshiftUnsig(_2491152a6_Const&, _2491152a6_Const&);
inline jule::Bool _249c50572_IsAscii(jule::I32);
inline jule::I32 _249c506a4_ToRune(jule::Slice<jule::U8>);
inline jule::Str _249c67b94_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _249c67e4c_ToStr(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _249c681e4_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _249c68502_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _249c68843_strEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _249d63a3c_findFormatPrefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _249d69834_getFormatRange(jule::I64&, jule::Slice<jule::U8>&);
inline void _249d69adc_FmtByDefault(jule::Str&, jule::Any&);
inline void _249d69eb6_applyFmtByDefault(jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline void _249d6a3b2_applyFmt(jule::Slice<jule::U8>&, jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Str _249d6a6c0_Format(jule::Str&, jule::Slice<jule::Any>);
inline jule::Str _249d6acb9_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _249bcc9c7_parameterUsesGenerics(jule::Ptr<_249bcbc4b_Param>&, jule::Slice<jule::Ptr<_2490539a8_GenericDecl>>&);
inline jule::Ptr<_249cb48e4_TypeSymbol> _249bcd7b9_buildType(jule::Ptr<_2490463c4_TypeDecl>);
inline jule::Ptr<_249c810ca_Value> _249bcd8eb_buildExpr(jule::Ptr<_24904a8e5_Expr>);
inline jule::Ptr<_249caea98_TypeAlias> _249bcda2d_buildTypeAlias(jule::Ptr<_24905ca28_TypeAliasDecl>);
inline jule::Ptr<_24902413d_Field> _249bcdb60_buildField(jule::Ptr<_249061114_FieldDecl>);
inline jule::Slice<jule::Ptr<_24902413d_Field>> _249bcdc92_buildFields(jule::Slice<jule::Ptr<_249061114_FieldDecl>>&);
inline jule::Ptr<_249036b01_Struct> _249bcddc4_buildStruct(jule::Ptr<_249061972_StructDecl>);
inline jule::Ptr<_249bcbc4b_Param> _249bce006_buildParam(jule::Ptr<_249056db8_ParamDecl>);
inline jule::Slice<jule::Ptr<_249bcbc4b_Param>> _249bce138_buildParams(jule::Slice<jule::Ptr<_249056db8_ParamDecl>>&);
inline jule::Ptr<_249bcba5e_RetType> _249bce26a_buildRetType(jule::Ptr<_2490494d7_RetTypeDecl>);
inline jule::Ptr<_249bcbe38_Fn> _249bce39c_buildFn(jule::Ptr<_2490581d8_FnDecl>);
inline jule::Slice<jule::Ptr<_249bcbe38_Fn>> _249bce4ce_buildMethods(jule::Slice<jule::Ptr<_2490581d8_FnDecl>>&);
inline jule::Ptr<_249bd48d0_Trait> _249bce611_buildTrait(jule::Ptr<_24906207c_TraitDecl>);
inline jule::Ptr<_249bd6030_EnumItem> _249bce743_buildEnumItem(jule::Ptr<_24905e387_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_249bd6030_EnumItem>> _249bce875_buildEnumItems(jule::Slice<jule::Ptr<_24905e387_EnumItemDecl>>&);
inline jule::Ptr<_249bd6a25_Enum> _249bce9a7_buildEnum(jule::Ptr<_24905edb0_EnumDecl>);
inline jule::Ptr<_249bd7a59_TypeEnumItem> _249bced1a_buildTypeEnumItem(jule::Ptr<_2490608b6_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_249bd7a59_TypeEnumItem>> _249bcee4c_buildTypeEnumItems(jule::Slice<jule::Ptr<_2490608b6_TypeEnumItemDecl>>&);
inline jule::Ptr<_249bd8120_TypeEnum> _249bd007e_buildTypeEnum(jule::Ptr<_249060ab4_TypeEnumDecl>);
inline jule::Ptr<_249c3702b_Var> _249bd01b1_buildVar(jule::Ptr<_2490591b7_VarDecl>);
inline jule::Slice<jule::Ptr<_249c3702b_Var>> _249bd02e3_buildVars(jule::Slice<jule::Ptr<_2490591b7_VarDecl>>);
inline jule::Ptr<_249bdc5ca_Impl> _249bd0425_buildImpl(jule::Ptr<_249062687_Impl>);
inline jule::Bool _249bdb970_matchConstraint(jule::Str&, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249bdbc5b_isBuiltinConstraint(jule::Str&);
inline jule::Ptr<_249be9296_scopeChecker> _249bde665_newScopeCheckerBase(jule::Ptr<_249c192c7_Sema>&, jule::Ptr<_249bcc312_FnIns>);
inline jule::Ptr<_249be9296_scopeChecker> _249bde9ea_newScopeChecker(jule::Ptr<_249c192c7_Sema>&, jule::Ptr<_249bcc312_FnIns>);
inline jule::Ptr<_249be800e_scopeLabel> _249bded3b_findLabelParent(jule::Str, jule::Ptr<_249be9296_scopeChecker>);
inline jule::Bool _249be01c1_modelIsGotoScope(jule::Any, jule::Ptr<_249be2635_Scope>&);
inline jule::Bool _249be0512_stmtIsGotoScope(jule::Any&, jule::Ptr<_249be2635_Scope>&);
inline jule::I64 _249be0853_countMatchType(jule::Ptr<_249be6381_Match>&, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Slice<jule::Ptr<_249c80052_Data>> _249be0aea_getDatasFromTupleData(jule::Ptr<_249c80052_Data>&);
inline jule::Bool _249be1436_checkMut(jule::Ptr<_249c192c7_Sema>&, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>, jule::Ptr<_23abd3d83_Token>);
inline jule::Bool _249be18ba_checkAssign(jule::Ptr<_249c192c7_Sema>&, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>, jule::Ptr<_23abd3d83_Token>);
inline jule::Bool _249be1b62_isValidAstStForNextSt(jule::Any&);
inline jule::Bool _249be1e09_isValidStForNextSt(jule::Any&);
inline jule::Bool _249be21a1_stmtIsDef(jule::Any&);
inline jule::Ptr<_249c3702b_Var> _249c0d893_findVarInPackage(jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_249caea98_TypeAlias> _249c0dcc2_findTypeAliasInPackage(jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_249036b01_Struct> _249c0e1ac_findStructInPackage(jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_249bcbe38_Fn> _249c0e61e_findFnInPackage(jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_249bd48d0_Trait> _249c0e92c_findTraitInPackage(jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>&, jule::Str);
inline jule::Ptr<_249bd6a25_Enum> _249c0ec6d_findEnumInPackage(jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>&, jule::Str);
inline jule::Ptr<_249bd8120_TypeEnum> _249c100ae_findTypeEnumInPackage(jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>&, jule::Str);
inline jule::Any _249c105a9_defByIdentPackage(jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>&, jule::Str&, jule::Bool);
inline jule::Bool _249c166ae_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _249c17418_isValidModelForRef(jule::Any&);
inline _23a8a5ca8_Log _249c178ad_compilerErr(jule::Ptr<_23abd3d83_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _249c17bee_impIsLookupable(jule::Ptr<_249c1117b_ImportInfo>&, jule::Str);
inline void _249c17eeb_appendRetVars(jule::Slice<jule::Ptr<_249c3702b_Var>>&, jule::Ptr<_249bcc312_FnIns>&);
inline void _249c182a4_appendParamVars(jule::Slice<jule::Ptr<_249c3702b_Var>>&, jule::Ptr<_249bcc312_FnIns>&);
inline void _249c1857e_appendGenericTypeAliases(jule::Slice<jule::Ptr<_249caea98_TypeAlias>>&, jule::Ptr<_249bcc312_FnIns>&);
inline jule::Ptr<_249c7a228_SymbolTable> _249c188d1_findFile(jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>&, jule::Ptr<_23abd921d_File>&);
inline void _249c18d43_pushSugggestion(_23a8a5ca8_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _249c5901a_traitHasReferenceReceiver(jule::Ptr<_249bd48d0_Trait>&);
inline jule::Bool _249c50990_floatAssignable(jule::Str, jule::Ptr<_249c80052_Data>&);
inline jule::Bool _249c50ac2_sigAssignable(jule::Str, jule::Ptr<_249c80052_Data>&);
inline jule::Bool _249c67886_unsigAssignable(jule::Str, jule::Ptr<_249c80052_Data>&);
inline jule::Bool _249c679b8_intAssignable(jule::Str, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249cb078b_TypeKind> _249c7929e_lenKind(void);
inline jule::Ptr<_24900cb2c_Directive> _249ca9e39_findDirective(jule::Slice<jule::Ptr<_24900cb2c_Directive>>&, jule::Str);
inline jule::Any _249caa2be_findBuiltinsImport(jule::Str, jule::Ptr<_249c1117b_ImportInfo>);
inline void _249caa4cd_fitBitsize(jule::Ptr<_249c80052_Data>&);
inline void _249caa7ca_makeStructLitAlloc(jule::Ptr<_249c80052_Data>&, jule::Ptr<_249bc699e_StructLitExprModel>&);
inline jule::Ptr<_249c3702b_Var> _249caab1b_buildErrorVar(jule::Ptr<_249be2635_Scope>&, jule::Ptr<_24904ebb3_FnCallExpr>&);
inline jule::Any _249caae5c_findBuiltinsSema(jule::Str, jule::Ptr<_249c192c7_Sema>);
inline jule::Bool _249cab204_isOkForShifting(jule::Ptr<_249c80052_Data>&);
inline jule::Bool _249cab5ab_isInstancedStruct(jule::Ptr<_249062e4b_StructIns>);
inline jule::Bool _249cab91e_isPtrArithmeticCompatible(jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&);
inline void _249cabb61_applyCastKindModel(jule::Ptr<_249c80052_Data>&, jule::Ptr<_249cb078b_TypeKind>&);
inline void _249cabe19_applyCastKind(jule::Ptr<_249c80052_Data>&, jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Ptr<_249c80052_Data> _249cac117_buildVoidData(void);
inline jule::Str _249cac3d1_checkDataForIntegerIndexing(jule::Ptr<_249c80052_Data>&);
inline void _249cac69a_applyCastModelByEnum(jule::Ptr<_249c80052_Data>&, jule::Ptr<_249bd6a25_Enum>);
inline void _249cac953_castConstByType(jule::Str&, jule::Ptr<_249c80052_Data>&);
inline void _249cace5e_updateModelToGenericIns(jule::Any&, jule::Ptr<_249bcc312_FnIns>&);
inline jule::Bool _249cad1a1_pushSubIdentFromExpr(jule::Any, jule::Ptr<_2490470d9_SubIdentTypeDecl>&);
inline jule::Bool _249cc7154_kindUsesGenerics(jule::Any&, jule::Slice<jule::Ptr<_2490539a8_GenericDecl>>&);
inline jule::Bool _249cc74d9_hasDirective(jule::Slice<jule::Ptr<_24900cb2c_Directive>>&, jule::Str);
inline jule::Bool _249cc7781_canGetPtr(jule::Ptr<_249c80052_Data>&);
inline jule::Bool _249cc7aa0_isValidForSptrType(jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249cc7d47_isValidForRef(jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Bool _249cc8111_isBuiltinStrConvertable(jule::Ptr<_249cb078b_TypeKind>&);
inline jule::Str _249cc8386_buildLinkPathByTokens(jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_249cb5263_Prim> _249cc873d_buildPrimType(jule::Str);
inline jule::Ptr<_249036b01_Struct> _249cc89d5_getStructFromKind(jule::Ptr<_249cb078b_TypeKind>);
inline jule::Bool _249cc8c7c_isPrim(jule::Str);
inline void _249cc9035_applyImplicitCast(jule::Ptr<_249cb078b_TypeKind>&, jule::Ptr<_249c80052_Data>&);
inline std::tuple<jule::Ptr<_249c7a228_SymbolTable>,jule::Slice<_23a8a5ca8_Log>> _249ccc09e_buildSymbols(jule::Ptr<_24900ba82_Ast>&, jule::Trait<_249c0d50d_Importer>&, jule::Ptr<_249bd0557_symbolBuilder>);
inline std::tuple<jule::Ptr<_249c140d5_Package>,jule::Slice<_23a8a5ca8_Log>> _249ccc4cd_analyzePackage(jule::Slice<jule::Ptr<_24900ba82_Ast>>&, jule::Trait<_249c0d50d_Importer>&, jule::I64&);
inline std::tuple<jule::Ptr<_249c140d5_Package>,jule::Slice<_23a8a5ca8_Log>> _249ccc8b8_AnalyzePackage(jule::Slice<jule::Ptr<_24900ba82_Ast>>, jule::Trait<_249c0d50d_Importer>, jule::I64);
inline jule::Ptr<_249bcc312_FnIns> _249cd89e5_findBuiltinFn(jule::Str);
inline jule::Ptr<_249caea98_TypeAlias> _249cdacb1_findBuiltinTypeAlias(jule::Str);
inline jule::Any _249cdb872_findBuiltinDef(jule::Str);
inline jule::Any _249cdc389_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _249ce0128_findBuiltinDefStdMem(jule::Str);
inline jule::Any _249cde314_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _249cde4ac_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_249c80052_Data> _249d6ae84_builtinCallerCommonPlain(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d6b308_builtinCallerCommon(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d6b6e3_builtinCallerCommonMut(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d6ba34_builtinCallerError(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&);
inline jule::Ptr<_249c80052_Data> _249d6be1e_builtinCallerOut(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d6c309_builtinCallerOutln(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d6c6e4_builtinCallerNew(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d6cace_builtinCallerPanic(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d6d1ea_builtinCallerMake(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d6d5d5_builtinCallerAppend(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d6da69_callerCopySlice(jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d6deed_callerCopyStr(jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d6e3d8_builtinCallerCopy(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d6e729_callerLenSlice(jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d6ea6a_callerLenMap(jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d6edab_callerLenArr(jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d701ec_callerLenStr(jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d705d7_builtinCallerLen(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d70928_callerCapSlice(jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d70c69_callerCapStr(jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d71154_builtinCallerCap(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d715d8_callerDeleteMap(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d719c3_builtinCallerDelete(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d71dad_builtinCallerClone(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d72474_builtinCallerAssert(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d727d7_builtinCallerStdMemSizeOf(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d72c05_builtinCallerStdMemAlignOf(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d73123_builtinCallerStdMemFree(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d73552_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d73970_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d73db0_builtinCallerStdDebugOut(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Ptr<_249c80052_Data> _249d7429a_builtinCallerStdDebugOutln(jule::Ptr<_249c81ac0_Eval>&, jule::Ptr<_24904ebb3_FnCallExpr>&, jule::Ptr<_249c80052_Data>&);
inline jule::Bool _249da2e22_FindModuleFile(jule::Slice<jule::Ptr<_238ac31c5_DirEntry>>&);
inline jule::Str _249da3054_FindModuleFileDeep(jule::Str);
inline jule::Slice<_23a8a5ca8_Log> _249da32da_CheckModuleFile(jule::Str);
inline jule::Ptr<_24a4e45eb_FileInfo> _24a4e72be_ParseFile(jule::Ptr<_23abd921d_File>);
inline std::tuple<jule::Ptr<_24900ba82_Ast>,jule::Slice<_23a8a5ca8_Log>> _24a53e646_parseFileset(jule::Ptr<_23abd921d_File>);
inline jule::Ptr<_2490566e2_ScopeTree> _24a54004d_newScope(void);
inline std::tuple<jule::Bool,jule::Bool> _24a54035b_isSt(jule::Ptr<_23abd3d83_Token>, jule::Ptr<_23abd3d83_Token>);
inline jule::Bool _24a54069c_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _24a540a32_nextStPos(jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_23abd3d83_Token>>,jule::Bool> _24a540d73_skipSt(jule::I64&, jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Slice<jule::Ptr<_24a541170_stmt>> _24a541516_splitStmts(jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Bool _24a557c03_isTypeOp(jule::Str&);
inline jule::Bool _24a557ede_isTypeRange(jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Slice<jule::Ptr<_23abd3d83_Token>> _24a558286_getBlockExpr(jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_23abd3d83_Token>>,jule::Slice<jule::Ptr<_23abd3d83_Token>>> _24a55861b_splitDelim(jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::U64);
inline jule::I64 _24a5588b3_findLowestPrecOp(jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Ptr<_24904c95d_IdentExpr> _24a558b5a_buildIdentExpr(jule::Ptr<_23abd3d83_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_23abd3d83_Token>>,jule::I64> _24a558e02_getRangeExprTokens(jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Bool _24a559b5b_checkAssignTokens(jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline _23a8a5ca8_Log _24a55ad7c_makeErr(jule::I64, jule::I64, jule::Ptr<_23abd921d_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_23abd3d83_Token>> _24a55b355_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_23abd3d83_Token>>,jule::Slice<jule::Ptr<_23abd3d83_Token>>> _24a55b5ec_rangeLast(jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>>,jule::Slice<_23a8a5ca8_Log>> _24a55b9d7_partsKind(jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::Str, jule::Bool);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>>,jule::Slice<_23a8a5ca8_Log>> _24a55bdc2_parts(jule::Slice<jule::Ptr<_23abd3d83_Token>>&, jule::U64, jule::Bool);
inline jule::Str _24a55c169_getCloseKindOfBrace(jule::Str);
inline _23a8a5ca8_Log _24a55c554_compilerErr(jule::Ptr<_23abd3d83_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _24a55c983_pushSuggestion(_23a8a5ca8_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _24a55cc2a_tokstoa(jule::Slice<jule::Ptr<_23abd3d83_Token>>&);
inline jule::Bool _24a56cc90_isPub(jule::Str&);
inline jule::Ptr<_2490463c4_TypeDecl> _24a56d60e_buildVoidType(void);
inline jule::Ptr<_2490463c4_TypeDecl> _24a56d873_buildPrimType(jule::Ptr<_23abd3d83_Token>);
inline std::tuple<jule::Bool,jule::Bool> _249d76ae9_checkOs(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _249d76c2b_checkArch(jule::Str);
inline jule::Bool _249d76d5d_isPassFileAnnotation(jule::Str);
inline void _249d91c79_setOsVars(jule::Slice<jule::Str>&);
inline void _249d91ecc_setArchVars(jule::Slice<jule::Str>&);
inline void _249d92285_initVars(jule::Slice<jule::Str>&, _249d9196b_CompileInfo&);
inline jule::Slice<jule::U8> _249e6b11c_readBuff(jule::Str);
inline _23a8a5ca8_Log _249e87ee6_flatCompilerErr(jule::Str);
inline void _24a319ad6_pushPasses(jule::Ptr<_249c140d5_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _24a33783a_getAllUniquePasses(jule::Ptr<_249c140d5_Package>&, jule::Slice<jule::Ptr<_249c1117b_ImportInfo>>);
inline _249d9196b_CompileInfo _24a34301b_buildCompileInfo(void);
inline void _24a672bec_EliminateDefines(jule::Ptr<_24a1bc659_IR>&);
inline jule::Ptr<_24900cb2c_Directive> _24a673082_findDirective(jule::Slice<jule::Ptr<_24900cb2c_Directive>>&, jule::Str);
inline jule::Bool _24a6733c3_hasDirective(jule::Slice<jule::Ptr<_24900cb2c_Directive>>&, jule::Str);
inline void _24a677020_eliminateDeadCodeOfScope(jule::Ptr<_249be2635_Scope>);
inline void _24a6772a6_eliminateScopeFunctions(jule::Slice<jule::Ptr<_249bcbe38_Fn>>&);
inline void _24a6774e8_eliminateFunctionsScopePackage(jule::Ptr<_249c140d5_Package>&);
inline void _24a677790_eliminateScopePackage(jule::Ptr<_249c140d5_Package>&);
inline void _24a67799e_EliminateScopes(jule::Ptr<_24a1bc659_IR>&);
inline jule::Bool _23ad4b1c6_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _23ad4dd55_isConstantValidConditionalCase(jule::Ptr<_249be2a31_If>&);
inline jule::Bool _23ad50461_isUnreachableExpr(jule::Any&);
inline jule::Bool _23ad530e0_isConstantValidMatchCase(jule::Ptr<_249be6dcb_Case>&);
inline jule::Bool _23ad54344_isUnreachableConditionalCase(jule::Ptr<_249be2a31_If>&);
inline jule::Bool _23ad5c24d_isUnreachableMatchCase(jule::Ptr<_249be6dcb_Case>&);
inline std::tuple<jule::Bool,jule::U64> _23b412acd_checkForBitShiftOpt(jule::Ptr<_249bc61eb_OperandExprModel>&, jule::Ptr<_249bc61eb_OperandExprModel>&);
inline void _23b416c25_PushOptLevel(jule::I64);
inline void _24a5ede64_detectEnabled(void);
inline void _24a68546d_Throw(jule::Str);
inline jule::U64 _24acab313_unix(void);
inline jule::U64 _24acab621_unixYearToSeconds(jule::U64, jule::Bool&);
inline jule::U64 _24acab9a6_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _24ac0996a_isCopyOptimizable(jule::Ptr<_249c80052_Data>&);
inline jule::Bool _24ac09d00_isIterCopyOptimizable(jule::Ptr<_249c80052_Data>&, jule::Ptr<_249c3702b_Var>&);
inline jule::Str _24ac18715_decomposeCommonEsq(jule::U8);
inline jule::Str _24ac18a01_sbtoa(jule::U8);
inline jule::Str _24ac18c98_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _24ac190b7_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _24ac193c5_ftoa(jule::F64, jule::I64);
inline jule::Str _24ac1966c_itoa(jule::I64);
inline jule::Str _24ac19914_utoa(jule::U64);
inline jule::Bool _24ac19cbb_isForwarded(jule::Ptr<_249be2635_Scope>&);
inline jule::Bool _24ac1a085_isBuiltinCallHasDebuginf(jule::Ptr<_249bc7065_FnCallExprModel>&);
inline jule::Bool _24ac1a2b6_isExprComesFromBind(jule::Ptr<_249c80052_Data>&);
inline void _24acb4519_iterFiles(jule::Ptr<_249c140d5_Package>&, jule::Fn<void(jule::Ptr<_249c7a228_SymbolTable>&)>);
inline void _24acb464b_prepareStructure(jule::Ptr<_249036b01_Struct>&);
inline jule::Str _24acb486b_concatAllParts(jule::Slice<jule::Ptr<_23abd3d83_Token>>);
inline jule::Ptr<_24900cb2c_Directive> _24acbcc92_findDirective(jule::Slice<jule::Ptr<_24900cb2c_Directive>>&, jule::Str);
inline jule::Bool _24acbd127_hasDirective(jule::Slice<jule::Ptr<_24900cb2c_Directive>>&, jule::Str);
inline void _238975a17_printErrorMessage(jule::Str);
inline void _23a870118_help(jule::Slice<jule::Str>&);
inline void _23a88378b_version(jule::Slice<jule::Str>&);
inline void _23a883ed9_toolDistos(void);
inline void _23a88588c_toolDistarch(void);
inline void _23a8860da_tool(jule::Slice<jule::Str>&);
inline void _23a886838_julenv(jule::Slice<jule::Str>&);
inline void _23a87101a_mod(jule::Slice<jule::Str>&);
inline jule::Bool _23a898053_processCommand(jule::Slice<jule::Str>&);
inline void _2398005a5_showInfo(void);
void entry_point(void);
inline void _24a751825_init(void);
inline jule::Ptr<_238993eec_File> _24a7137c6_openOutput(jule::Str&);
inline void _24acc5d77_clearObjects(void);
inline void _24acc7928_compileIr(jule::Str, jule::Str);
inline jule::Bool _24acd3b10_isCppSourceFile(jule::Str);
inline void _24ab12334_pushCompCmdClang(jule::Str&);
inline void _24acbe37b_pushCompCmdGcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _24ace7a36_genCompileCmd(jule::Str, jule::Ptr<_24a1bc659_IR>&);
inline jule::Str _24a899c7b_getCompilePath(void);
inline void _24a714d38_applyTargetIndependentOptimizations(jule::Ptr<_24a1bc659_IR>&);
inline void _24aacb7c6_checkCompilerFlag(void);
inline void _24acce8b9_checkTargetArch(jule::Str);
inline void _24acbd5cd_checkTargetOs(jule::Str);
inline void _24acbd710_checkTargetFlag(jule::Str&);
inline void _24ad04c41_checkOptFlag(jule::Str&);
inline void _24ad050a4_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _24ad051d6_checkFlags(jule::Slice<jule::Str>&);
inline void _24ad05318_setupSemaFlags(jule::I64&);
inline jule::Ptr<_24a1bc659_IR> _24ad0544a_buildIr(jule::Slice<jule::Str>&);
inline void _24ad0557c_compileCommand(jule::Slice<jule::Str>&);


struct _249c0d50d_ImporterMptrData {
	void(*_249c0c430_SetModPath)(jule::Trait<_249c0d50d_Importer>, jule::Str);
	jule::Str(*_249c0c672_GetModPath)(jule::Trait<_249c0d50d_Importer>);
	jule::Str(*_249c0c980_ModById)(jule::Trait<_249c0d50d_Importer>, jule::I64);
	jule::Ptr<_249c1117b_ImportInfo>(*_249c0cc8d_GetImport)(jule::Trait<_249c0d50d_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_24900ba82_Ast>>,jule::Slice<_23a8a5ca8_Log>>(*_249c0d145_ImportPackage)(jule::Trait<_249c0d50d_Importer>, jule::Str, jule::Bool);
	void(*_249c0d3ba_Imported)(jule::Trait<_249c0d50d_Importer>, jule::Ptr<_249c1117b_ImportInfo>);
};

struct _249cb035c_KindMptrData {
	jule::Str(*_249caee0b_Str)(jule::Trait<_249cb035c_Kind>);
	jule::Bool(*_249cb0219_Equals)(jule::Trait<_249cb035c_Kind>, jule::Ptr<_249cb078b_TypeKind>);
};

struct _249ccb3bc_LookupMptrData {
	jule::Ptr<_249c1117b_ImportInfo>(*_249cc9574_FindPackage)(jule::Trait<_249ccb3bc_Lookup>, jule::Str);
	jule::Ptr<_249c1117b_ImportInfo>(*_249cc9882_SelectPackage)(jule::Trait<_249ccb3bc_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_249c1117b_ImportInfo>)>);
	jule::Ptr<_249c3702b_Var>(*_249cc9c39_FindVar)(jule::Trait<_249ccb3bc_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_249caea98_TypeAlias>(*_249cca0e1_FindTypeAlias)(jule::Trait<_249ccb3bc_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_249036b01_Struct>(*_249cca498_FindStruct)(jule::Trait<_249ccb3bc_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_249bcbe38_Fn>(*_249cca850_FindFn)(jule::Trait<_249ccb3bc_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_249bd48d0_Trait>(*_249ccab5d_FindTrait)(jule::Trait<_249ccb3bc_Lookup>, jule::Str);
	jule::Ptr<_249bd6a25_Enum>(*_249ccae6b_FindEnum)(jule::Trait<_249ccb3bc_Lookup>, jule::Str);
	jule::Ptr<_249bd8120_TypeEnum>(*_249ccb279_FindTypeEnum)(jule::Trait<_249ccb3bc_Lookup>, jule::Str);
};

struct _24aac840a_CommonFlagMptrData {
	jule::Str(*_24ab083a2_Name)(jule::Trait<_24aac840a_CommonFlag>);
	jule::I32(*_24a9ce036_Short)(jule::Trait<_24aac840a_CommonFlag>);
	jule::Str(*_24aac82c8_What)(jule::Trait<_24aac840a_CommonFlag>);
	void(*_24acee4cc_Reset)(jule::Trait<_24aac840a_CommonFlag>);
};



inline void _249c0c430_SetModPath_0(jule::Trait<_249c0d50d_Importer> _self_, jule::Str _1729_path) {
	_24a0176c4_SetModPath(_self_.safe_ptr<_249e8d958_JuleImporter>(), _1729_path);
}
inline jule::Str _249c0c672_GetModPath_0(jule::Trait<_249c0d50d_Importer> _self_) {
	return _24a03d453_GetModPath(_self_.safe_ptr<_249e8d958_JuleImporter>());
}
inline jule::Str _249c0c980_ModById_0(jule::Trait<_249c0d50d_Importer> _self_, jule::I64 _2522_id) {
	return _24a101714_ModById(_self_.safe_ptr<_249e8d958_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_249c1117b_ImportInfo> _249c0cc8d_GetImport_0(jule::Trait<_249c0d50d_Importer> _self_, jule::Str _3128_path) {
	return _24a112ed9_GetImport(_self_.safe_ptr<_249e8d958_JuleImporter>(), _3128_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_24900ba82_Ast>>,jule::Slice<_23a8a5ca8_Log>> _249c0d145_ImportPackage_0(jule::Trait<_249c0d50d_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _24a11db60_ImportPackage(_self_.safe_ptr<_249e8d958_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _249c0d3ba_Imported_0(jule::Trait<_249c0d50d_Importer> _self_, jule::Ptr<_249c1117b_ImportInfo> _4131__0) {
	_24a16c95b_Imported(_self_.safe_ptr<_249e8d958_JuleImporter>(), _4131__0);
}
inline jule::Str _249caee0b_Str_0(jule::Trait<_249cb035c_Kind> _self_) {
	return _249027262_Str(_self_.safe_ptr<_249062e4b_StructIns>());
}
inline jule::Bool _249cb0219_Equals_0(jule::Trait<_249cb035c_Kind> _self_, jule::Ptr<_249cb078b_TypeKind> _5622_other) {
	return _2490387d4_Equals(_self_.data.as<_249062e4b_StructIns>(), _5622_other);
}
inline jule::Str _249caee0b_Str_1(jule::Trait<_249cb035c_Kind> _self_) {
	return _24909b517_Str(_self_.safe_ptr<_249bcc312_FnIns>());
}
inline jule::Bool _249cb0219_Equals_1(jule::Trait<_249cb035c_Kind> _self_, jule::Ptr<_249cb078b_TypeKind> _5622_other) {
	return _249099c74_Equals(_self_.data.as<_249bcc312_FnIns>(), _5622_other);
}
inline jule::Str _249caee0b_Str_2(jule::Trait<_249cb035c_Kind> _self_) {
	return _249bd4ccb_Str(_self_.safe_ptr<_249bd48d0_Trait>());
}
inline jule::Bool _249cb0219_Equals_2(jule::Trait<_249cb035c_Kind> _self_, jule::Ptr<_249cb078b_TypeKind> _5622_other) {
	return _249bd50d9_Equals(_self_.data.as<_249bd48d0_Trait>(), _5622_other);
}
inline jule::Str _249caee0b_Str_3(jule::Trait<_249cb035c_Kind> _self_) {
	return _249bd6d88_Str(_self_.safe_ptr<_249bd6a25_Enum>());
}
inline jule::Bool _249cb0219_Equals_3(jule::Trait<_249cb035c_Kind> _self_, jule::Ptr<_249cb078b_TypeKind> _5622_other) {
	return _249bd7196_Equals(_self_.data.as<_249bd6a25_Enum>(), _5622_other);
}
inline jule::Str _249caee0b_Str_4(jule::Trait<_249cb035c_Kind> _self_) {
	return _249bd8450_Str(_self_.safe_ptr<_249bd8120_TypeEnum>());
}
inline jule::Bool _249cb0219_Equals_4(jule::Trait<_249cb035c_Kind> _self_, jule::Ptr<_249cb078b_TypeKind> _5622_other) {
	return _249bd875d_Equals(_self_.data.as<_249bd8120_TypeEnum>(), _5622_other);
}
inline jule::Str _249caee0b_Str_5(jule::Trait<_249cb035c_Kind> _self_) {
	return _249cb0b87_Str(_self_.safe_ptr<_249cb078b_TypeKind>());
}
inline jule::Bool _249cb0219_Equals_5(jule::Trait<_249cb035c_Kind> _self_, jule::Ptr<_249cb078b_TypeKind> _5622_other) {
	return _249cb0e95_Equals(_self_.data.as<_249cb078b_TypeKind>(), _5622_other);
}
inline jule::Str _249caee0b_Str_6(jule::Trait<_249cb035c_Kind> _self_) {
	return _249cb55c6_Str(_self_.safe_ptr<_249cb5263_Prim>());
}
inline jule::Bool _249cb0219_Equals_6(jule::Trait<_249cb035c_Kind> _self_, jule::Ptr<_249cb078b_TypeKind> _5622_other) {
	return _249cb58d4_Equals(_self_.data.as<_249cb5263_Prim>(), _5622_other);
}
inline jule::Str _249caee0b_Str_7(jule::Trait<_249cb035c_Kind> _self_) {
	return _249cb8d5a_Str(_self_.safe_ptr<_249cb89e7_Sptr>());
}
inline jule::Bool _249cb0219_Equals_7(jule::Trait<_249cb035c_Kind> _self_, jule::Ptr<_249cb078b_TypeKind> _5622_other) {
	return _249cb9168_Equals(_self_.data.as<_249cb89e7_Sptr>(), _5622_other);
}
inline jule::Str _249caee0b_Str_8(jule::Trait<_249cb035c_Kind> _self_) {
	return _249cb9960_Str(_self_.safe_ptr<_249cb9454_Slc>());
}
inline jule::Bool _249cb0219_Equals_8(jule::Trait<_249cb035c_Kind> _self_, jule::Ptr<_249cb078b_TypeKind> _5622_other) {
	return _249cb9c6d_Equals(_self_.data.as<_249cb9454_Slc>(), _5622_other);
}
inline jule::Str _249caee0b_Str_9(jule::Trait<_249cb035c_Kind> _self_) {
	return _249cba345_Str(_self_.safe_ptr<_249cb9ed2_Tuple>());
}
inline jule::Bool _249cb0219_Equals_9(jule::Trait<_249cb035c_Kind> _self_, jule::Ptr<_249cb078b_TypeKind> _5622_other) {
	return _249cba653_Equals(_self_.data.as<_249cb9ed2_Tuple>(), _5622_other);
}
inline jule::Str _249caee0b_Str_10(jule::Trait<_249cb035c_Kind> _self_) {
	return _249cbad6d_Str(_self_.safe_ptr<_249cbaa0a_Map>());
}
inline jule::Bool _249cb0219_Equals_10(jule::Trait<_249cb035c_Kind> _self_, jule::Ptr<_249cb078b_TypeKind> _5622_other) {
	return _249cbb17b_Equals(_self_.data.as<_249cbaa0a_Map>(), _5622_other);
}
inline jule::Str _249caee0b_Str_11(jule::Trait<_249cb035c_Kind> _self_) {
	return _249cbb962_Str(_self_.safe_ptr<_249cbb5ee_Arr>());
}
inline jule::Bool _249cb0219_Equals_11(jule::Trait<_249cb035c_Kind> _self_, jule::Ptr<_249cb078b_TypeKind> _5622_other) {
	return _249cbbc70_Equals(_self_.data.as<_249cbb5ee_Arr>(), _5622_other);
}
inline jule::Str _249caee0b_Str_12(jule::Trait<_249cb035c_Kind> _self_) {
	return _249cbc3be_Str(_self_.safe_ptr<_249cbc05b_Ptr>());
}
inline jule::Bool _249cb0219_Equals_12(jule::Trait<_249cb035c_Kind> _self_, jule::Ptr<_249cb078b_TypeKind> _5622_other) {
	return _249cbc6cc_Equals(_self_.data.as<_249cbc05b_Ptr>(), _5622_other);
}
inline jule::Str _249caee0b_Str_13(jule::Trait<_249cb035c_Kind> _self_) {
	return _24acb584a_Str(_self_.safe_ptr<_24acb5581_customType>());
}
inline jule::Bool _249cb0219_Equals_13(jule::Trait<_249cb035c_Kind> _self_, jule::Ptr<_249cb078b_TypeKind> _5622_other) {
	return _24acb5b58_Equals(_self_.data.as<_24acb5581_customType>(), _5622_other);
}
inline jule::Ptr<_249c1117b_ImportInfo> _249cc9574_FindPackage_0(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _930_ident) {
	return _249be96e7_FindPackage(_self_.safe_ptr<_249be9296_scopeChecker>(), _930_ident);
}
inline jule::Ptr<_249c1117b_ImportInfo> _249cc9882_SelectPackage_0(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_249c1117b_ImportInfo>)> _1332_selector) {
	return _249be9a05_SelectPackage(_self_.safe_ptr<_249be9296_scopeChecker>(), _1332_selector);
}
inline jule::Ptr<_249c3702b_Var> _249cc9c39_FindVar_0(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _249be9dac_FindVar(_self_.safe_ptr<_249be9296_scopeChecker>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_249caea98_TypeAlias> _249cca0e1_FindTypeAlias_0(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _249bea264_FindTypeAlias(_self_.safe_ptr<_249be9296_scopeChecker>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_249036b01_Struct> _249cca498_FindStruct_0(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _249bea61b_FindStruct(_self_.safe_ptr<_249be9296_scopeChecker>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_249bcbe38_Fn> _249cca850_FindFn_0(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _249bea9c3_FindFn(_self_.safe_ptr<_249be9296_scopeChecker>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_249bd48d0_Trait> _249ccab5d_FindTrait_0(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _3328_ident) {
	return _249beacd1_FindTrait(_self_.safe_ptr<_249be9296_scopeChecker>(), _3328_ident);
}
inline jule::Ptr<_249bd6a25_Enum> _249ccae6b_FindEnum_0(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _3727_ident) {
	return _249beb0de_FindEnum(_self_.safe_ptr<_249be9296_scopeChecker>(), _3727_ident);
}
inline jule::Ptr<_249bd8120_TypeEnum> _249ccb279_FindTypeEnum_0(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _4131_ident) {
	return _249beb3ec_FindTypeEnum(_self_.safe_ptr<_249be9296_scopeChecker>(), _4131_ident);
}
inline jule::Ptr<_249c1117b_ImportInfo> _249cc9574_FindPackage_1(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _930_ident) {
	return _249c11698_FindPackage(_self_.safe_ptr<_249c1117b_ImportInfo>(), _930_ident);
}
inline jule::Ptr<_249c1117b_ImportInfo> _249cc9882_SelectPackage_1(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_249c1117b_ImportInfo>)> _1332_selector) {
	return _249c119a6_SelectPackage(_self_.safe_ptr<_249c1117b_ImportInfo>(), _1332_selector);
}
inline jule::Ptr<_249c3702b_Var> _249cc9c39_FindVar_1(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _249c11d5d_FindVar(_self_.safe_ptr<_249c1117b_ImportInfo>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_249caea98_TypeAlias> _249cca0e1_FindTypeAlias_1(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _249c12215_FindTypeAlias(_self_.safe_ptr<_249c1117b_ImportInfo>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_249036b01_Struct> _249cca498_FindStruct_1(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _249c125bc_FindStruct(_self_.safe_ptr<_249c1117b_ImportInfo>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_249bcbe38_Fn> _249cca850_FindFn_1(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _249c12974_FindFn(_self_.safe_ptr<_249c1117b_ImportInfo>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_249bd48d0_Trait> _249ccab5d_FindTrait_1(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _3328_ident) {
	return _249c12c82_FindTrait(_self_.safe_ptr<_249c1117b_ImportInfo>(), _3328_ident);
}
inline jule::Ptr<_249bd6a25_Enum> _249ccae6b_FindEnum_1(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _3727_ident) {
	return _249c13090_FindEnum(_self_.safe_ptr<_249c1117b_ImportInfo>(), _3727_ident);
}
inline jule::Ptr<_249bd8120_TypeEnum> _249ccb279_FindTypeEnum_1(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _4131_ident) {
	return _249c1339d_FindTypeEnum(_self_.safe_ptr<_249c1117b_ImportInfo>(), _4131_ident);
}
inline jule::Ptr<_249c1117b_ImportInfo> _249cc9574_FindPackage_2(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _930_ident) {
	return _249c145ad_FindPackage(_self_.safe_ptr<_249c140d5_Package>(), _930_ident);
}
inline jule::Ptr<_249c1117b_ImportInfo> _249cc9882_SelectPackage_2(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_249c1117b_ImportInfo>)> _1332_selector) {
	return _249c148bb_SelectPackage(_self_.safe_ptr<_249c140d5_Package>(), _1332_selector);
}
inline jule::Ptr<_249c3702b_Var> _249cc9c39_FindVar_2(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _249c14c73_FindVar(_self_.safe_ptr<_249c140d5_Package>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_249caea98_TypeAlias> _249cca0e1_FindTypeAlias_2(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _249c1512a_FindTypeAlias(_self_.safe_ptr<_249c140d5_Package>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_249036b01_Struct> _249cca498_FindStruct_2(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _249c154d2_FindStruct(_self_.safe_ptr<_249c140d5_Package>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_249bcbe38_Fn> _249cca850_FindFn_2(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _249c15889_FindFn(_self_.safe_ptr<_249c140d5_Package>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_249bd48d0_Trait> _249ccab5d_FindTrait_2(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _3328_ident) {
	return _249c15b97_FindTrait(_self_.safe_ptr<_249c140d5_Package>(), _3328_ident);
}
inline jule::Ptr<_249bd6a25_Enum> _249ccae6b_FindEnum_2(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _3727_ident) {
	return _249c15ea5_FindEnum(_self_.safe_ptr<_249c140d5_Package>(), _3727_ident);
}
inline jule::Ptr<_249bd8120_TypeEnum> _249ccb279_FindTypeEnum_2(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _4131_ident) {
	return _249c162b3_FindTypeEnum(_self_.safe_ptr<_249c140d5_Package>(), _4131_ident);
}
inline jule::Ptr<_249c1117b_ImportInfo> _249cc9574_FindPackage_3(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _930_ident) {
	return _249c197e4_FindPackage(_self_.safe_ptr<_249c192c7_Sema>(), _930_ident);
}
inline jule::Ptr<_249c1117b_ImportInfo> _249cc9882_SelectPackage_3(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_249c1117b_ImportInfo>)> _1332_selector) {
	return _249c19b02_SelectPackage(_self_.safe_ptr<_249c192c7_Sema>(), _1332_selector);
}
inline jule::Ptr<_249c3702b_Var> _249cc9c39_FindVar_3(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _249c19ea9_FindVar(_self_.safe_ptr<_249c192c7_Sema>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_249caea98_TypeAlias> _249cca0e1_FindTypeAlias_3(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _249c1a361_FindTypeAlias(_self_.safe_ptr<_249c192c7_Sema>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_249036b01_Struct> _249cca498_FindStruct_3(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _249c1a718_FindStruct(_self_.safe_ptr<_249c192c7_Sema>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_249bcbe38_Fn> _249cca850_FindFn_3(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _249c1aac0_FindFn(_self_.safe_ptr<_249c192c7_Sema>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_249bd48d0_Trait> _249ccab5d_FindTrait_3(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _3328_ident) {
	return _249c1adcd_FindTrait(_self_.safe_ptr<_249c192c7_Sema>(), _3328_ident);
}
inline jule::Ptr<_249bd6a25_Enum> _249ccae6b_FindEnum_3(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _3727_ident) {
	return _249c1b1db_FindEnum(_self_.safe_ptr<_249c192c7_Sema>(), _3727_ident);
}
inline jule::Ptr<_249bd8120_TypeEnum> _249ccb279_FindTypeEnum_3(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _4131_ident) {
	return _249c1b4e9_FindTypeEnum(_self_.safe_ptr<_249c192c7_Sema>(), _4131_ident);
}
inline jule::Ptr<_249c1117b_ImportInfo> _249cc9574_FindPackage_4(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _930_ident) {
	return _249c7a745_FindPackage(_self_.safe_ptr<_249c7a228_SymbolTable>(), _930_ident);
}
inline jule::Ptr<_249c1117b_ImportInfo> _249cc9882_SelectPackage_4(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_249c1117b_ImportInfo>)> _1332_selector) {
	return _249c7aa53_SelectPackage(_self_.safe_ptr<_249c7a228_SymbolTable>(), _1332_selector);
}
inline jule::Ptr<_249c3702b_Var> _249cc9c39_FindVar_4(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _249c7ae0a_FindVar(_self_.safe_ptr<_249c7a228_SymbolTable>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_249caea98_TypeAlias> _249cca0e1_FindTypeAlias_4(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _249c7b2b2_FindTypeAlias(_self_.safe_ptr<_249c7a228_SymbolTable>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_249036b01_Struct> _249cca498_FindStruct_4(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _249c7b669_FindStruct(_self_.safe_ptr<_249c7a228_SymbolTable>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_249bcbe38_Fn> _249cca850_FindFn_4(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _249c7ba21_FindFn(_self_.safe_ptr<_249c7a228_SymbolTable>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_249bd48d0_Trait> _249ccab5d_FindTrait_4(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _3328_ident) {
	return _249c7bd2e_FindTrait(_self_.safe_ptr<_249c7a228_SymbolTable>(), _3328_ident);
}
inline jule::Ptr<_249bd6a25_Enum> _249ccae6b_FindEnum_4(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _3727_ident) {
	return _249c7c13c_FindEnum(_self_.safe_ptr<_249c7a228_SymbolTable>(), _3727_ident);
}
inline jule::Ptr<_249bd8120_TypeEnum> _249ccb279_FindTypeEnum_4(jule::Trait<_249ccb3bc_Lookup> _self_, jule::Str _4131_ident) {
	return _249c7c44a_FindTypeEnum(_self_.safe_ptr<_249c7a228_SymbolTable>(), _4131_ident);
}
inline jule::Str _24ab083a2_Name_0(jule::Trait<_24aac840a_CommonFlag> _self_) {
	return _2511c436e_Name(_self_.safe_ptr<_2512892e1_Flag>());
}
inline jule::I32 _24a9ce036_Short_0(jule::Trait<_24aac840a_CommonFlag> _self_) {
	return _251289852_Short(_self_.safe_ptr<_2512892e1_Flag>());
}
inline jule::Str _24aac82c8_What_0(jule::Trait<_24aac840a_CommonFlag> _self_) {
	return _2511c44a1_What(_self_.safe_ptr<_2512892e1_Flag>());
}
inline void _24acee4cc_Reset_0(jule::Trait<_24aac840a_CommonFlag> _self_) {
	_251289720_Reset(_self_.safe_ptr<_2512892e1_Flag>());
}
inline jule::Str _24ab083a2_Name_1(jule::Trait<_24aac840a_CommonFlag> _self_) {
	return _25128cb52_Name(_self_.safe_ptr<_25128d13b_Flag>());
}
inline jule::I32 _24a9ce036_Short_1(jule::Trait<_24aac840a_CommonFlag> _self_) {
	return _25128d68b_Short(_self_.safe_ptr<_25128d13b_Flag>());
}
inline jule::Str _24aac82c8_What_1(jule::Trait<_24aac840a_CommonFlag> _self_) {
	return _25128d427_What(_self_.safe_ptr<_25128d13b_Flag>());
}
inline void _24acee4cc_Reset_1(jule::Trait<_24aac840a_CommonFlag> _self_) {
	_25128d559_Reset(_self_.safe_ptr<_25128d13b_Flag>());
}
inline jule::Str _24ab083a2_Name_2(jule::Trait<_24aac840a_CommonFlag> _self_) {
	return _25129178d_Name(_self_.safe_ptr<_251291c77_Flag>());
}
inline jule::I32 _24a9ce036_Short_2(jule::Trait<_24aac840a_CommonFlag> _self_) {
	return _2512922c7_Short(_self_.safe_ptr<_251291c77_Flag>());
}
inline jule::Str _24aac82c8_What_2(jule::Trait<_24aac840a_CommonFlag> _self_) {
	return _251292063_What(_self_.safe_ptr<_251291c77_Flag>());
}
inline void _24acee4cc_Reset_2(jule::Trait<_24aac840a_CommonFlag> _self_) {
	_251292195_Reset(_self_.safe_ptr<_251291c77_Flag>());
}
inline jule::Str _24ab083a2_Name_3(jule::Trait<_24aac840a_CommonFlag> _self_) {
	return _25129541d_Name(_self_.safe_ptr<_251295907_Flag>());
}
inline jule::I32 _24a9ce036_Short_3(jule::Trait<_24aac840a_CommonFlag> _self_) {
	return _251295e57_Short(_self_.safe_ptr<_251295907_Flag>());
}
inline jule::Str _24aac82c8_What_3(jule::Trait<_24aac840a_CommonFlag> _self_) {
	return _251295be3_What(_self_.safe_ptr<_251295907_Flag>());
}
inline void _24acee4cc_Reset_3(jule::Trait<_24aac840a_CommonFlag> _self_) {
	_251295d25_Reset(_self_.safe_ptr<_251295907_Flag>());
}
inline jule::Str _24ab083a2_Name_4(jule::Trait<_24aac840a_CommonFlag> _self_) {
	return _251299059_Name(_self_.safe_ptr<_251299543_Flag>());
}
inline jule::I32 _24a9ce036_Short_4(jule::Trait<_24aac840a_CommonFlag> _self_) {
	return _251299a93_Short(_self_.safe_ptr<_251299543_Flag>());
}
inline jule::Str _24aac82c8_What_4(jule::Trait<_24aac840a_CommonFlag> _self_) {
	return _25129982e_What(_self_.safe_ptr<_251299543_Flag>());
}
inline void _24acee4cc_Reset_4(jule::Trait<_24aac840a_CommonFlag> _self_) {
	_251299961_Reset(_self_.safe_ptr<_251299543_Flag>());
}


static _249c0d50d_ImporterMptrData _249c0d50d_Importer_mptr_data[] = {
	{
		._249c0c430_SetModPath=_249c0c430_SetModPath_0,
		._249c0c672_GetModPath=_249c0c672_GetModPath_0,
		._249c0c980_ModById=_249c0c980_ModById_0,
		._249c0cc8d_GetImport=_249c0cc8d_GetImport_0,
		._249c0d145_ImportPackage=_249c0d145_ImportPackage_0,
		._249c0d3ba_Imported=_249c0d3ba_Imported_0,
	},
};
static _249cb035c_KindMptrData _249cb035c_Kind_mptr_data[] = {
	{
		._249caee0b_Str=_249caee0b_Str_0,
		._249cb0219_Equals=_249cb0219_Equals_0,
	},
	{
		._249caee0b_Str=_249caee0b_Str_1,
		._249cb0219_Equals=_249cb0219_Equals_1,
	},
	{
		._249caee0b_Str=_249caee0b_Str_2,
		._249cb0219_Equals=_249cb0219_Equals_2,
	},
	{
		._249caee0b_Str=_249caee0b_Str_3,
		._249cb0219_Equals=_249cb0219_Equals_3,
	},
	{
		._249caee0b_Str=_249caee0b_Str_4,
		._249cb0219_Equals=_249cb0219_Equals_4,
	},
	{
		._249caee0b_Str=_249caee0b_Str_5,
		._249cb0219_Equals=_249cb0219_Equals_5,
	},
	{
		._249caee0b_Str=_249caee0b_Str_6,
		._249cb0219_Equals=_249cb0219_Equals_6,
	},
	{
		._249caee0b_Str=_249caee0b_Str_7,
		._249cb0219_Equals=_249cb0219_Equals_7,
	},
	{
		._249caee0b_Str=_249caee0b_Str_8,
		._249cb0219_Equals=_249cb0219_Equals_8,
	},
	{
		._249caee0b_Str=_249caee0b_Str_9,
		._249cb0219_Equals=_249cb0219_Equals_9,
	},
	{
		._249caee0b_Str=_249caee0b_Str_10,
		._249cb0219_Equals=_249cb0219_Equals_10,
	},
	{
		._249caee0b_Str=_249caee0b_Str_11,
		._249cb0219_Equals=_249cb0219_Equals_11,
	},
	{
		._249caee0b_Str=_249caee0b_Str_12,
		._249cb0219_Equals=_249cb0219_Equals_12,
	},
	{
		._249caee0b_Str=_249caee0b_Str_13,
		._249cb0219_Equals=_249cb0219_Equals_13,
	},
};
static _249ccb3bc_LookupMptrData _249ccb3bc_Lookup_mptr_data[] = {
	{
		._249cc9574_FindPackage=_249cc9574_FindPackage_0,
		._249cc9882_SelectPackage=_249cc9882_SelectPackage_0,
		._249cc9c39_FindVar=_249cc9c39_FindVar_0,
		._249cca0e1_FindTypeAlias=_249cca0e1_FindTypeAlias_0,
		._249cca498_FindStruct=_249cca498_FindStruct_0,
		._249cca850_FindFn=_249cca850_FindFn_0,
		._249ccab5d_FindTrait=_249ccab5d_FindTrait_0,
		._249ccae6b_FindEnum=_249ccae6b_FindEnum_0,
		._249ccb279_FindTypeEnum=_249ccb279_FindTypeEnum_0,
	},
	{
		._249cc9574_FindPackage=_249cc9574_FindPackage_1,
		._249cc9882_SelectPackage=_249cc9882_SelectPackage_1,
		._249cc9c39_FindVar=_249cc9c39_FindVar_1,
		._249cca0e1_FindTypeAlias=_249cca0e1_FindTypeAlias_1,
		._249cca498_FindStruct=_249cca498_FindStruct_1,
		._249cca850_FindFn=_249cca850_FindFn_1,
		._249ccab5d_FindTrait=_249ccab5d_FindTrait_1,
		._249ccae6b_FindEnum=_249ccae6b_FindEnum_1,
		._249ccb279_FindTypeEnum=_249ccb279_FindTypeEnum_1,
	},
	{
		._249cc9574_FindPackage=_249cc9574_FindPackage_2,
		._249cc9882_SelectPackage=_249cc9882_SelectPackage_2,
		._249cc9c39_FindVar=_249cc9c39_FindVar_2,
		._249cca0e1_FindTypeAlias=_249cca0e1_FindTypeAlias_2,
		._249cca498_FindStruct=_249cca498_FindStruct_2,
		._249cca850_FindFn=_249cca850_FindFn_2,
		._249ccab5d_FindTrait=_249ccab5d_FindTrait_2,
		._249ccae6b_FindEnum=_249ccae6b_FindEnum_2,
		._249ccb279_FindTypeEnum=_249ccb279_FindTypeEnum_2,
	},
	{
		._249cc9574_FindPackage=_249cc9574_FindPackage_3,
		._249cc9882_SelectPackage=_249cc9882_SelectPackage_3,
		._249cc9c39_FindVar=_249cc9c39_FindVar_3,
		._249cca0e1_FindTypeAlias=_249cca0e1_FindTypeAlias_3,
		._249cca498_FindStruct=_249cca498_FindStruct_3,
		._249cca850_FindFn=_249cca850_FindFn_3,
		._249ccab5d_FindTrait=_249ccab5d_FindTrait_3,
		._249ccae6b_FindEnum=_249ccae6b_FindEnum_3,
		._249ccb279_FindTypeEnum=_249ccb279_FindTypeEnum_3,
	},
	{
		._249cc9574_FindPackage=_249cc9574_FindPackage_4,
		._249cc9882_SelectPackage=_249cc9882_SelectPackage_4,
		._249cc9c39_FindVar=_249cc9c39_FindVar_4,
		._249cca0e1_FindTypeAlias=_249cca0e1_FindTypeAlias_4,
		._249cca498_FindStruct=_249cca498_FindStruct_4,
		._249cca850_FindFn=_249cca850_FindFn_4,
		._249ccab5d_FindTrait=_249ccab5d_FindTrait_4,
		._249ccae6b_FindEnum=_249ccae6b_FindEnum_4,
		._249ccb279_FindTypeEnum=_249ccb279_FindTypeEnum_4,
	},
};
static _24aac840a_CommonFlagMptrData _24aac840a_CommonFlag_mptr_data[] = {
	{
		._24ab083a2_Name=_24ab083a2_Name_0,
		._24a9ce036_Short=_24a9ce036_Short_0,
		._24aac82c8_What=_24aac82c8_What_0,
		._24acee4cc_Reset=_24acee4cc_Reset_0,
	},
	{
		._24ab083a2_Name=_24ab083a2_Name_1,
		._24a9ce036_Short=_24a9ce036_Short_1,
		._24aac82c8_What=_24aac82c8_What_1,
		._24acee4cc_Reset=_24acee4cc_Reset_1,
	},
	{
		._24ab083a2_Name=_24ab083a2_Name_2,
		._24a9ce036_Short=_24a9ce036_Short_2,
		._24aac82c8_What=_24aac82c8_What_2,
		._24acee4cc_Reset=_24acee4cc_Reset_2,
	},
	{
		._24ab083a2_Name=_24ab083a2_Name_3,
		._24a9ce036_Short=_24a9ce036_Short_3,
		._24aac82c8_What=_24aac82c8_What_3,
		._24acee4cc_Reset=_24acee4cc_Reset_3,
	},
	{
		._24ab083a2_Name=_24ab083a2_Name_4,
		._24a9ce036_Short=_24a9ce036_Short_4,
		._24aac82c8_What=_24aac82c8_What_4,
		._24acee4cc_Reset=_24acee4cc_Reset_4,
	},
};


jule::Str _24acbdcc6_OutDir = jule::Str("dist", 4);
jule::Str _24acc80dd_OutName = jule::Str("ir.cpp", 6);
jule::Str _24acc9ad4_Out = jule::Str();
jule::Str _2388e7192_Compiler = jule::Str();
jule::Str _2388e7406_CompilerPath = jule::Str();
jule::Str _2388e766a_CppStd = jule::Str("cpp17", 5);
jule::Bool _2388e78ce_Shadowing = false;
jule::Bool _2388e7b43_Transpilation = false;
jule::Bool _2388e7dda_Test = false;
jule::Bool _2388e81d7_RC = true;
jule::Bool _2388e8605_Safety = true;
jule::Bool _2388e8913_Production = false;
jule::Ptr<_23a74671a_RangeTable> _23a6c291b__L = jule::new_ptr<_23a74671a_RangeTable>(_23a74671a_RangeTable{._field_R16=jule::Slice<_23a745d24_Range16>::make({_23a745d24_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_23a745d24_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_23a745d24_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_23a745d24_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_23a745d24_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_23a745d24_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_23a745d24_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_23a745d24_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_23a745d24_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_23a745d24_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_23a745d24_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_23a745d24_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_23a745d24_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_23a745d24_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_23a745d24_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_23a745d24_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_23a745d24_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_23a745d24_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_23a745d24_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_23a745d24_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_23a745d24_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_23a745d24_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_23a745d24_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_23a745d24_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_23a745d24_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_23a745d24_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_23a745d24_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_23a745d24_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_23a745d24_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_23a745d24_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_23a745d24_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_23a745d24_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_23a745d24_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_23a745d24_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_23a745d24_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_23a745d24_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_23a745d24_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_23a745d24_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_23a745d24_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_23a745d24_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_23a745d24_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_23a745d24_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_23a745d24_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_23a745d24_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_23a745d24_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_23a745d24_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_23a745d24_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_23a745d24_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_23a745d24_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_23a745d24_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_23a745d24_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_23a745d24_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_23a745d24_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_23a745d24_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_23a745d24_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_23a745d24_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_23a745d24_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_23a745d24_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_23a745d24_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_23a745d24_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_23a746297_Range32>::make({_23a746297_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_23a746297_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_23a746297_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_23a746297_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_23a746297_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_23a746297_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_23a746297_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_23a746297_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_23a746297_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_23a746297_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_23a746297_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_23a746297_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_23a746297_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_23a746297_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_23a746297_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_23a746297_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_23a746297_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_23a746297_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_23a746297_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_23a746297_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_23a746297_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_23a746297_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_23a746297_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_23a746297_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_23a746297_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_23a746297_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_23a746297_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_23a746297_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_23a746297_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_23a746297_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_23a746297_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_23a746297_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_23a746297_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_23a746297_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_23a746297_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_23a746297_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_23a746297_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_23a746297_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_23a746297_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_23a746297_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_23a746297_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_23a746297_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_23a746297_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_23a74671a_RangeTable> _23a6c3a71__LU = jule::new_ptr<_23a74671a_RangeTable>(_23a74671a_RangeTable{._field_R16=jule::Slice<_23a745d24_Range16>::make({_23a745d24_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_23a745d24_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_23a745d24_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_23a745d24_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_23a745d24_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_23a745d24_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_23a745d24_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_23a745d24_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_23a745d24_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_23a745d24_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_23a745d24_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_23a745d24_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_23a745d24_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_23a745d24_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_23a745d24_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_23a745d24_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_23a745d24_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_23a746297_Range32>::make({_23a746297_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_23a746297_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_23a746297_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_23a746297_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_23a746297_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_23a746297_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_23a746297_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::Str,4> _238902389_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _23a897a69_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _23a899098_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _23a8de9d4_PathStdlib = jule::Str();
jule::Str _23a8e1893_PathExec = jule::Str();
jule::Str _23a8e4115_PathWd = jule::Str();
jule::Str _23a8ee890_PathApi = jule::Str();
jule::Array<jule::I32,5> _23ab318d5_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _23ab31b49_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _23ab31e8a_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _23abcd355_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _23abcd696_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_23abdb275_kindPair,47> _23abdb709_keywords = jule::Array<_23abdb275_kindPair,47>({_23abdb275_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_23abdb275_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_23abdb275_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_23abdb275_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_23abdb275_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_23abdb275_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_23abdb275_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_23abdb275_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_23abdb275_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_23abdb275_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_23abdb275_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_23abdb275_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_23abdb275_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_23abdb275_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_23abdb275_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_23abdb275_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_23abdb275_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_23abdb275_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_23abdb275_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_23abdb275_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_23abdb275_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_23abdb275_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_23abdb275_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_23abdb275_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_23abdb275_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_23abdb275_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_23abdb275_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_23abdb275_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_23abdb275_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_23abdb275_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(21LLU)},_23abdb275_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(23LLU)},_23abdb275_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(24LLU)},_23abdb275_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(25LLU)},_23abdb275_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(26LLU)},_23abdb275_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(27LLU)},_23abdb275_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(28LLU)},_23abdb275_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(29LLU)},_23abdb275_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(30LLU)},_23abdb275_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(31LLU)},_23abdb275_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(32LLU)},_23abdb275_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(33LLU)},_23abdb275_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(34LLU)},_23abdb275_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(35LLU)},_23abdb275_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(36LLU)},_23abdb275_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(37LLU)},_23abdb275_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(39LLU)},_23abdb275_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_23abdb275_kindPair,39> _23abdba8e_basicOps = jule::Array<_23abdb275_kindPair,39>({_23abdb275_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(22LLU)},_23abdb275_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_23abdb275_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_23abdb275_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_23abdb275_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_23abdb275_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_23abdb275_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(38LLU)}});
jule::Array<jule::U8,32> _249b80617__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _249b80c66__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_24979546e_floatInfo _2495e2b6d_f32info = _24979546e_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_24979546e_floatInfo _2495e8107_f64info = _24979546e_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _24968300a_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _2496c9d32_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _2496d62b1_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _2496ed031_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _249795958_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_249bc0679_leftCheat> _249797493_leftCheats = jule::Slice<_249bc0679_leftCheat>::make({_249bc0679_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_249bc0679_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_249bc0679_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_249bc0679_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_249bc0679_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_249bc0679_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_249bc0679_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_249bc0679_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_249bc0679_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_249bc0679_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_249bc0679_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_249bc0679_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_249bc0679_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_249bc0679_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_249bc0679_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_249bc0679_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_249bc0679_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_249bc0679_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_249bc0679_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_249bc0679_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_249bc0679_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_249bc0679_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_249bc0679_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_249bc0679_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_249bc0679_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_249bc0679_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_249bc0679_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_249bc0679_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_249bc0679_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_249bc0679_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_249bc0679_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_249bc0679_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_249bc0679_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_249bc0679_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_249bc0679_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_249bc0679_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_249bc0679_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_249bc0679_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_249bc0679_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_249bc0679_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_249bc0679_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_249bc0679_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_249bc0679_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_249bc0679_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_249bc0679_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_249bc0679_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_249bc0679_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_249bc0679_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_249bc0679_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_249bc0679_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_249bc0679_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_249bc0679_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_249bc0679_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_249bc0679_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_249bc0679_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_249bc0679_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_249bc0679_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_249bc0679_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_249bc0679_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_249bc0679_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_249bc0679_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _24917dac2_BitSize = 0LL;
jule::Str _2491d0abe_SysInt = jule::Str();
jule::Str _2491d10ec_SysUint = jule::Str();
jule::Slice<jule::Str> _249bd9de1_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _23ac1c64c_Copy = false;
jule::Bool _23ac21b7e_Deadcode = false;
jule::Bool _23ac0a915_Append = false;
jule::Bool _23ac46236_Math = false;
jule::Bool _23ac4e45e_Access = false;
jule::Bool _23ac5242e_Inline = false;
jule::Bool _23ac5284c_Ptr = false;
jule::Bool _23ac53243_Cond = false;
jule::Bool _24a574a22_exprEnabled = false;
jule::Bool _24a575b77_scopeEnabled = false;
jule::Array<jule::U64,12> _24aca8277_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Ptr<_23a74671a_RangeTable> _23a6ca638_Letter = _23a6c291b__L;
jule::Ptr<_23a74671a_RangeTable> _23a6d26c8_Upper = _23a6c3a71__LU;
jule::Array<_23a808de8_acceptRange,16> _23a80925b_acceptRanges = jule::Array<_23a808de8_acceptRange,16>({_23a808de8_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_23a808de8_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_23a808de8_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_23a808de8_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_23a808de8_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _23a8790bc_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _23a900176_Os = jule::Str("linux", 5);
jule::Str _23a8de64e_Arch = jule::Str("amd64", 5);
jule::Array<jule::U8,256> _23a73ea10__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _23a808876_first = jule::Array<jule::U8,256>({});





std::ostream &operator<<(std::ostream &_Stream, _23a745d24_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _23a746297_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _23a74671a_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _23a808de8_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _239869e38_index(_2398636b2_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _23986a642_append(_2398636b2_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len());
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _23986d8ba_string(_2398636b2_lazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_volAndPath.slice(0LL,((*_self_)._field_volLen + (*_self_)._field_w));
	};
	return ((*_self_)._field_volAndPath.slice(0LL,(*_self_)._field_volLen) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _2398636b2_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _238ac31c5_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_238ac31c5_DirEntry>>> static__2397e2234_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_238ac31c5_DirEntry>> _1534_dirents = jule::Slice<jule::Ptr<_238ac31c5_DirEntry>>();
	DIR* _1617_dir = _239759be6_Opendir((&(_1520_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_238ac31c5_DirEntry>>>(_23899973e_getLastFsError());
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _239759e8d_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_24c3ca06d;
			};
			jule::Str _2517_name = _23975200c_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_2389b2d0c_Status> _2621_stat = ({
				auto except = static__2389b50d9_Of(_23988a9b4_Join(jule::Slice<jule::Str>::make({_1520_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_238ac31c5_DirEntry>>>(except.error);
				} jule::Ptr<_2389b2d0c_Status>();});
			});;
			_1534_dirents = jule::alloc_for_append(_1534_dirents,1);_1534_dirents.__push(jule::new_ptr<_238ac31c5_DirEntry>(_238ac31c5_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat}));;
		}
	_iter_next_24c3ca06d:;
	}
	_iter_end_24c3ca06d:;;
	_23975a235_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_238ac31c5_DirEntry>>>(jule::Any(), _1534_dirents);
}



inline jule::VoidExceptional static__2397ee9d3_Create(jule::Str _3922_path) {
	if ((_23975aab5_Mkdir((&(_3922_path[0LL])),448LL) != 0LL)) {
		return jule::VoidExceptional(_23899973e_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__2397cab79_Remove(jule::Str _5122_path) {
	if ((_23975ad5c_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_23899973e_getLastFsError());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _2389b31d6_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_238993eec_File>> static__238999a19_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _1913_handle = _2397593cc_Open((&(_1820_path[0LL])),static_cast<jule::I64>(_1831_flag),_1844_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_238993eec_File>>(_23899973e_getLastFsError());
	};
	return jule::Exceptional<jule::Ptr<_238993eec_File>>(jule::Any(),static__2389b7eaa_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));
}



inline jule::VoidExceptional static__23899b9d8_Remove(jule::Str _3022_path) {
	if ((_23975b104_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_23899973e_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _23899c698_Write(_238993eec_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 _4441_n = jule::I64();
	if ((_4424_buff.len() == 0LL)) {
		_4441_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4441_n);
	};
	_4441_n=static_cast<jule::I64>(_23978a870_Write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4424_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((_4441_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_23899973e_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_4441_n);
}



inline jule::Exceptional<jule::I64> _23899dcb5_Read(_238993eec_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 _6444_n = jule::I64();
	if ((_6427_buff.len() == 0LL)) {
		_6444_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_6444_n);
	};
	_6444_n=static_cast<jule::I64>(_23978a111_Read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_6427_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((_6444_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_23899973e_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_6444_n);
}



inline jule::Ptr<_238993eec_File> static__2389b7eaa_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_238993eec_File>(_238993eec_File{._field_handle=_4519_handle});
}



inline jule::Exceptional<jule::Ptr<_238993eec_File>> static__2389b9b9e_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_238993eec_File>>(jule::Any(),({
		auto except = static__238999a19_Open(_5522_path,static_cast<jule::I64>(578LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_238993eec_File>>(except.error);
		} jule::Ptr<_238993eec_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__2389ba95d_Read(jule::Str _6720_path) {
	jule::Ptr<_2389b2d0c_Status> _6813_s = ({
		auto except = static__2389b50d9_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_2389b2d0c_Status>();});
	});;
	if ((!(_238a9276b_IsReg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_Size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	};
	jule::Ptr<_238993eec_File> _7817_f = ({
		auto except = static__238999a19_Open(_6720_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_238993eec_File>();});
	});;
	__JULE_DEFER({
		({
			auto except = _2389bdd07_Close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_Size));;
	jule::I64 _8213_n = ({
		auto except = _23899dcb5_Read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__2389bb794_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_238993eec_File> _9217_f = ({
		auto except = static__238999a19_Open(_9121_path,static_cast<jule::I64>(577LL),_9146_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_238993eec_File>();});
	});;
	({
		auto except = _23899c698_Write(_9217_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _2389bdd07_Close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2389bd323_Seek(_238993eec_File* _self_, jule::I64 _10523_offset, jule::I64 _10536_origin) {
	jule::I64 _10613_pos = _239789c26_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10523_offset,static_cast<jule::I64>(_10536_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_23899973e_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _2389bdd07_Close(_238993eec_File* _self_) {
	if ((_23978a485_Close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_23899973e_getLastFsError());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _238993eec_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_2389b2d0c_Status>> static__2389b50d9_Of(jule::Str _1118_path) {
	if (_1118_path.empty()) {
		return jule::Exceptional<jule::Ptr<_2389b2d0c_Status>>(static_cast<jule::I64>(4LL));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _239758ee2_Stat((&(_1118_path[0LL])),(&(_1517_handle)));;
	if ((_1613_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_2389b2d0c_Status>>(jule::Any(),jule::new_ptr<_2389b2d0c_Status>(_2389b2d0c_Status{._field_Mode=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_mode)), ._field_Size=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_size))}));
	};
	return jule::Exceptional<jule::Ptr<_2389b2d0c_Status>>(_23899973e_getLastFsError());
}



inline jule::Bool _2389c048a_IsDir(_2389b2d0c_Status* _self_) {
	return (((*_self_)._field_Mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _238a9276b_IsReg(_2389b2d0c_Status* _self_) {
	return (((*_self_)._field_Mode & 32768LLU) == 32768LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _2389b2d0c_Status _Src) {
	_Stream << "Status{";
	_Stream << "Mode:" << _Src._field_Mode << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_23a901540_Cmd> static__23a90196e_New(jule::Str _2019_path) {
	return jule::new_ptr<_23a901540_Cmd>(_23a901540_Cmd{._field_path=_2019_path, });
}



inline jule::Exceptional<jule::I64> _23a901bd3_Spawn(_23a901540_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _23a904b3c_spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _23a904b3c_spawn(_23a901540_Cmd* _self_) {
	if ((*_self_)._field_path.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(3LL));
	};
	jule::I64 _4913_pid = fork();;
	{
		auto &_match_expr{ _4913_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_24c400c42:;
			{
				return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_24c3ee878:;
			{
				jule::I64 _5421_status = 0LL;;
				if (((*_self_)._field_Env == nullptr)) {
					_5421_status=static_cast<jule::I64>(_23a904466_execvp((*_self_)._field_path,(*_self_)._field_Args));
				} else {
					_5421_status=static_cast<jule::I64>(_23a904851_execve((*_self_)._field_path,(*_self_)._field_Args,(*_self_)._field_Env));
				};
				if ((_5421_status == -1LL)) {
					kill(static_cast<jule::I64>(getpid()),SIGTERM);
				};
				_23a905467_Exit(255LL);
			}
		}
		_match_end_24c400bdc:;
	};
	jule::I64 _6513_status = 0LL;;
	if ((waitpid(_4913_pid,((signed*)((&(_6513_status)))),WUNTRACED) == -1LL)) {
		return jule::Exceptional<jule::I64>(_23a900cae_getLastProcessError());
	};
	if (WIFSIGNALED(_6513_status)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(WEXITSTATUS(_6513_status)));
}







std::ostream &operator<<(std::ostream &_Stream, _23a901540_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _23a8a5ca8_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _23abd423a_Prec(_23abd3d83_Token* _self_) {
	if (((*_self_)._field_Id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_24c4ac11c:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_24c4ac183:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_24c4ac1e9:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_24c4ac260:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_24c4ac4d5:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_24c4ab10a:;
			{
				return 0LLU;
			}
		}
		_match_end_24c4ac0b7:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _23abd3d83_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23abd962a_IsOk(_23abd921d_File* _self_) {
	({
		auto except = static__2389b50d9_Of((*_self_)._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::Ptr<_2389b2d0c_Status>();});
	});
	return true;
}



inline void _23abd98a0_Fill(_23abd921d_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*_self_)._field_Data=_2327_data;
}



inline jule::Str _23abd9b14_Dir(_23abd921d_File* _self_) {
	return _239877bc1_Dir((*_self_)._field_Path);
}



inline jule::Str _23abd9d78_Name(_23abd921d_File* _self_) {
	return _239872baa_Base((*_self_)._field_Path);
}



inline jule::Uintptr _23abda0dc_Addr(_23abd921d_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));
}



inline jule::Str _23abda3ea_GetRow(_23abd921d_File* _self_, jule::I64 _4421_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_lineStart = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_Data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_Data[_4717_i] != '\n')) {
				goto _iter_next_24c4b2ac3;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*_self_)._field_Data.slice(_4617_lineStart,_4717_i));
			};
			_4617_lineStart=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_24c4b2ac3:;
	}
	_iter_end_24c4b2ac3:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _23abd921d_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _23abdb275_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _23abe2413_pushErr(_23abe1d6e_lex* _self_, jule::Str _45826_fmt, jule::Slice<jule::Any> _45839_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_23abdc078_makeErr((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45826_fmt,jule::Any(_45839_args)));;
}



inline void _23abe2732_pushErrTok(_23abe1d6e_lex* _self_, jule::Ptr<_23abd3d83_Token>& _46330_token, jule::Str _46345_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_23abdc078_makeErr(_46330_token.get()._field_Row,_46330_token.get()._field_Column,(*_self_)._field_file,_46345_fmt,jule::Slice<jule::Any>()));;
}



inline void _23abe290d_lex(_23abe1d6e_lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_23abe4910_newLine(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_23abd3d83_Token> _47321_token = _23abe5c85_token(&(*_self_));;
			if ((_47321_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_24c50146e:;
	}
	_iter_end_24c50146e:;;
}



inline jule::Str _23abe2c1b_id(_23abe1d6e_lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48614_r;;
	jule::I64 _48621_i;;
	std::tie(_48614_r,_48621_i) = _23a8099cb_DecodeRune(_48222_ln);
	if (((_48614_r != '_') && (!(_23abd735e_IsLetter(_48614_r))))) {
		return jule::Str();
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr;;
			jule::I64 _49222_n;;
			std::tie(_49218_pr,_49222_n) = _23a8099cb_DecodeRune(_48222_ln.slice(_48621_i));
			if ((((_49218_pr != '_') && (!(_23abd789d_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_23abd735e_IsLetter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));
			};
			_48621_i+=_49222_n;
		}
	_iter_next_24c5053c9:;
	}
	_iter_end_24c5053c9:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);
}



inline jule::Slice<jule::U8> _23abe2e80_resume(_23abe1d6e_lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_Data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_Data[_50717_i]);;
			if (_23abd6e0d_IsSpace(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_24c509cd5:;
						{
							_23abe4910_newLine(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_24c509bc5:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_24c5098a6:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_24c509752:;
				};
				goto _iter_next_24c50792b;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_Data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_Data[_52421_j] == '\n')) {
						goto _iter_end_24c508663;
					};
				}
			_iter_next_24c508663:;
			}
			_iter_end_24c508663:;;
			return (*_self_)._field_file.get()._field_Data.slice(_50717_i,_52421_j);
		}
	_iter_next_24c50792b:;
	}
	_iter_end_24c50792b:;;
	return nullptr;
}



inline void _23abe3205_lexLineComment(_23abe1d6e_lex* _self_, jule::Ptr<_23abd3d83_Token>& _53538_token) {
	jule::I64 _53613_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _53917_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if (((_53917_r == '\n') || (_53917_r == '\r'))) {
				goto _iter_end_24c50cb73;
			};
		}
	_iter_next_24c50cb73:;
	}
	_iter_end_24c50cb73:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53538_token.get()._field_Id=static_cast<jule::U64>(18LLU);
		_53538_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_53613_start,(*_self_)._field_pos));
	};
}



inline void _23abe347a_lexRangeComment(_23abe1d6e_lex* _self_, jule::Ptr<_23abd3d83_Token>& _55039_token) {
	jule::I64 _55113_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55417_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_55417_r == '\r')) {
				goto _iter_next_24c51136e;
			};
			if ((_55417_r == '\n')) {
				_23abe4910_newLine(&(*_self_));
				goto _iter_next_24c51136e;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_Data.len()) && (_55417_r == '*')) && ((*_self_)._field_file.get()._field_Data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55039_token.get()._field_Id=static_cast<jule::U64>(18LLU);
					_55039_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_55113_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_24c51136e:;
	}
	_iter_end_24c51136e:;;
	_23abe2413_pushErr(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _23abe3788_num(_23abe1d6e_lex* _self_, jule::Slice<jule::U8>& _57823_txt) {
	jule::Str _57838_lit = jule::Str();
	if ((_57823_txt[0LL] == '_')) {
		_57838_lit = jule::Str();
		return _57838_lit;
	};
	_57838_lit=_23abe0895_hexNum(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	};
	_57838_lit=_23abe05ed_octalNum(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	};
	_57838_lit=_23abde047_binaryNum(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	};
	_57838_lit=_23abddca0_commonNum(_57823_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57838_lit.len();
	return _57838_lit;
}



inline jule::Str _23abe3a96_escapeSeq(_23abe1d6e_lex* _self_, jule::Slice<jule::U8>& _60029_txt) {
	jule::Str _60117_seq = jule::Str();;
	if ((_60029_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60029_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_24c51bb93:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60029_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_24c51bc09:;
			{
				_60117_seq=_23abe0e7d_bigUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_24c51b764:;
			{
				_60117_seq=_23abe1247_littleUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_24c51b7ca:;
			{
				_60117_seq=_23abe1401_hexByteEscape(_60029_txt);
			}
		}
		else {
			_case_begin_24c51ae5b:;
			{
				_60117_seq=_23abe1687_byteEscape(_60029_txt);
			}
		}
		_match_end_24c51b610:;
	};
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*_self_)._field_pos)++;
		_23abe2413_pushErr(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60117_seq.len();
	return _60117_seq;
}



inline jule::Str _23abe3e4d_getRune(_23abe1d6e_lex* _self_, jule::Slice<jule::U8>& _63027_txt, jule::Bool _63040_raw) {
	if (((!(_63040_raw)) && (_63027_txt[0LL] == '\\'))) {
		return _23abe3a96_escapeSeq(&(*_self_), _63027_txt);
	};
	jule::I32 _63414_r;;
	jule::I64 _63417_n;;
	std::tie(_63414_r,_63417_n) = _23a8099cb_DecodeRune(_63027_txt);
	(*_self_)._field_pos+=_63417_n;
	return static_cast<jule::Str>(_63414_r);
}



inline jule::Str _23abe425b_lexRune(_23abe1d6e_lex* _self_, jule::Slice<jule::U8>& _63927_txt) {
	jule::Str _64017_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64217_n = 0LL;;
	jule::I64 _64317_i = 1LL;;
	for (; (_64317_i < _63927_txt.len()); (_64317_i)++) {
		{
			if ((_63927_txt[_64317_i] == '\r')) {
				goto _iter_next_24c5240eb;
			};
			if ((_63927_txt[_64317_i] == '\n')) {
				_23abe2413_pushErr(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_23abe4910_newLine(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65517_part = _63927_txt.slice(_64317_i);;
			jule::Str _65617_r = _23abe3e4d_getRune(&(*_self_), _65517_part,false);;
			_64017_run+=_65617_r;
			(*_self_)._field_column+=_23a80b6c0_RuneCountStr(_65617_r);
			if ((_65617_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_24c5240eb;
			};
			if ((_65617_r.len() > 1LL)) {
				_64317_i+=(_65617_r.len() - 1LL);
			};
			(_64217_n)++;
		}
	_iter_next_24c5240eb:;
	}
	_iter_end_24c5240eb:;;
	if ((_64217_n == 0LL)) {
		_23abe2413_pushErr(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64217_n > 1LL)) {
		_23abe2413_pushErr(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64017_run;
}



inline jule::Str _23abe44c0_lexStr(_23abe1d6e_lex* _self_) {
	jule::Str _67917_s = jule::Str();;
	jule::U8 _68013_mark = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68213_raw = (_68013_mark == '`');;
	_67917_s+=static_cast<jule::Str>(_68013_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68717_ch = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_68717_ch == '\r')) {
				goto _iter_next_24c528ed0;
			};
			if ((_68717_ch == '\n')) {
				_23abe4910_newLine(&(*_self_));
				if ((!(_68213_raw))) {
					_23abe2413_pushErr(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _69921_part = (*_self_)._field_file.get()._field_Data.slice((*_self_)._field_pos);;
			jule::Str _70017_r = _23abe3e4d_getRune(&(*_self_), _69921_part,_68213_raw);;
			_67917_s+=_70017_r;
			(*_self_)._field_column+=_23a80b6c0_RuneCountStr(_70017_r);
			if ((_68717_ch == _68013_mark)) {
				goto _iter_end_24c528ed0;
			};
		}
	_iter_next_24c528ed0:;
	}
	_iter_end_24c528ed0:;;
	return _67917_s;
}



inline jule::Bool _23abe4734_isFirstTokenOfLine(_23abe1d6e_lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _23abe4910_newLine(_23abe1d6e_lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _23abe4e0a_isOp(_23abe1d6e_lex* _self_, jule::Slice<jule::U8>& _72024_txt, jule::Str _72037_kind, jule::U64 _72048_id, jule::Ptr<_23abd3d83_Token>& _72066_t) {
	if ((!(_23abdc40d_bytesHasPrefix(_72024_txt,_72037_kind)))) {
		return false;
	};
	_72066_t.get()._field_Kind=_72037_kind;
	_72066_t.get()._field_Id=_72048_id;
	(*_self_)._field_pos+=_72037_kind.len();
	return true;
}



inline jule::Bool _23abe52b2_lexBasicOps(_23abe1d6e_lex* _self_, jule::Slice<jule::U8> _73030_txt, jule::Ptr<_23abd3d83_Token>& _73048_tok) {
	{
		auto &expr = _23abdba8e_basicOps;
		auto it = expr.begin();
		_iter_begin_24c532280:;
		if (it != expr.end()) {
			_23abdb275_kindPair &_73116_pair = *it;
			{
				if (_23abe4e0a_isOp(&(*_self_), _73030_txt,_73116_pair._field_kind,_73116_pair._field_id,_73048_tok)) {
					return true;
				};
			}
			_iter_next_24c532280:;
			++it;
			goto _iter_begin_24c532280;
		}
		_iter_end_24c532280:;
	};
	return false;
}



inline jule::Bool _23abe5669_lexId(_23abe1d6e_lex* _self_, jule::Slice<jule::U8>& _74025_txt, jule::Ptr<_23abd3d83_Token>& _74043_t) {
	jule::Str _74113_lex = _23abe2c1b_id(&(*_self_), _74025_txt);;
	if (_74113_lex.empty()) {
		return false;
	};
	_74043_t.get()._field_Kind=_74113_lex;
	_74043_t.get()._field_Id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _23abe5a21_lexNum(_23abe1d6e_lex* _self_, jule::Slice<jule::U8>& _75026_txt, jule::Ptr<_23abd3d83_Token>& _75044_t) {
	jule::Str _75113_lex = _23abe3788_num(&(*_self_), _75026_txt);;
	if (_75113_lex.empty()) {
		return false;
	};
	_75044_t.get()._field_Kind=_75113_lex;
	_75044_t.get()._field_Id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_23abd3d83_Token> _23abe5c85_token(_23abe1d6e_lex* _self_) {
	jule::Ptr<_23abd3d83_Token> _76217_t = jule::new_ptr<_23abd3d83_Token>(_23abd3d83_Token{._field_File=(*_self_)._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _76713_txt = _23abe2e80_resume(&(*_self_));;
	if ((_76713_txt == nullptr)) {
		return _76217_t;
	};
	_76217_t.get()._field_Column=(*_self_)._field_column;
	_76217_t.get()._field_Row=(*_self_)._field_row;
	{
		
		if (_23abe5a21_lexNum(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_24c5393b9:;
			{
				goto _match_end_24c5374d8;
			}
		}
		else if ((_76713_txt[0LL] == '\'')) {
			_case_begin_24c538ae4:;
			{
				_76217_t.get()._field_Kind=_23abe425b_lexRune(&(*_self_), _76713_txt);
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;
			}
		}
		else if (((_76713_txt[0LL] == '\"') || (_76713_txt[0LL] == '`'))) {
			_case_begin_24c538b5a:;
			{
				_76217_t.get()._field_Kind=_23abe44c0_lexStr(&(*_self_));
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;
			}
		}
		else if (_23abdc40d_bytesHasPrefix(_76713_txt,jule::Str("//", 2))) {
			_case_begin_24c538bc1:;
			{
				_23abe3205_lexLineComment(&(*_self_), _76217_t);
				return _76217_t;
			}
		}
		else if (_23abdc40d_bytesHasPrefix(_76713_txt,jule::Str("/*", 2))) {
			_case_begin_24c53981a:;
			{
				_23abe347a_lexRangeComment(&(*_self_), _76217_t);
				return _76217_t;
			}
		}
		else if (_23abe4e0a_isOp(&(*_self_), _76713_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76217_t) || _23abe4e0a_isOp(&(*_self_), _76713_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76217_t) || _23abe4e0a_isOp(&(*_self_), _76713_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76217_t) || _23abe4e0a_isOp(&(*_self_), _76713_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76217_t) || _23abe4e0a_isOp(&(*_self_), _76713_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76217_t) || _23abe4e0a_isOp(&(*_self_), _76713_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76217_t) || _23abe52b2_lexBasicOps(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_24c539881:;
			{
				goto _match_end_24c5374d8;
			}
		}
		else if (_23abe5669_lexId(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_24c5398e7:;
			{
				{
					auto &expr = _23abdb709_keywords;
					auto it = expr.begin();
					_iter_begin_24c5403c0:;
					if (it != expr.end()) {
						_23abdb275_kindPair &_80520_pair = *it;
						{
							if ((_80520_pair._field_kind == _76217_t.get()._field_Kind)) {
								_76217_t.get()._field_Id=_80520_pair._field_id;
								goto _iter_end_24c5403c0;
							};
						}
						_iter_next_24c5403c0:;
						++it;
						goto _iter_begin_24c5403c0;
					}
					_iter_end_24c5403c0:;
				};
			}
		}
		else {
			_case_begin_24c537eab:;
			{
				jule::I32 _81218_r;;
				jule::I64 _81221_sz;;
				std::tie(_81218_r,_81221_sz) = _23a8099cb_DecodeRune(_76713_txt);
				_23abe2413_pushErr(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81218_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81221_sz;
				return _76217_t;
			}
		}
		_match_end_24c5374d8:;
	};
	(*_self_)._field_column+=_23a80b6c0_RuneCountStr(_76217_t.get()._field_Kind);
	return _76217_t;
}







std::ostream &operator<<(std::ostream &_Stream, _23abe1d6e_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24900ba82_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24900c731_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24900cb2c_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2490463c4_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _249046ced_IsPrim(_24904698a_IdentTypeDecl* _self_) {
	return ((*_self_)._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _24904698a_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2490470d9_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249047491_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24904777c_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249047b78_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249047e64_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2490485a2_IsUnsafe(_249048250_PtrTypeDecl* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _249048250_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _249048cab_AutoSized(_2490488d2_ArrTypeDecl* _self_) {
	return ((*_self_)._field_Size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _2490488d2_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249049130_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2490494d7_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24904a8e5_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24904abd1_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24904b286_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24904b572_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _24904bc7b_IsNil(_24904b929_LitExpr* _self_) {
	return ((*_self_)._field_Value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _24904b929_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24904c133_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24904c4da_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _24904ccb0_IsSelf(_24904c95d_IdentExpr* _self_) {
	return ((*_self_)._field_Ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _24904c95d_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24904d167_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24904d51e_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24904d8c6_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24904dc7d_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24904e201_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24904e674_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _249050026_Unhandled(_24904ebb3_FnCallExpr* _self_) {
	return ((*_self_)._field_Exception == nullptr);
}



inline jule::Bool _24905028a_Ignored(_24904ebb3_FnCallExpr* _self_) {
	return (((*_self_)._field_Exception != nullptr) && (*_self_)._field_Exception.get()._field_Deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _24904ebb3_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _249050994_IsTargeted(_249050642_FieldExprPair* _self_) {
	return ((*_self_)._field_Field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _249050642_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249050d90_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _249051984_IsEmpty(_249051313_BraceLit* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _249051313_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249051d2a_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _249052600_IsEmpty(_24905229d_SliceExpr* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _24905229d_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249052b3e_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249053249_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249053535_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2490539a8_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249053d60_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249054217_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249054503_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249054b0d_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24905514c_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2490560d7_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2490566e2_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _24905722b_IsSelf(_249056db8_ParamDecl* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _249057490_IsRef(_249056db8_ParamDecl* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _249056db8_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _24905853a_IsAnon(_2490581d8_FnDecl* _self_) {
	return ((*_self_)._field_Ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _2490581d8_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2490591b7_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24905956e_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _24905a031_IsInf(_249059bce_Iter* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _249059bce_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _24905a806_IsWhileNext(_24905a4a4_WhileKind* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _24905a4a4_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24905ad45_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24905b1ec_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24905b5a4_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24905ba27_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24905bdce_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24905c352_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24905ca28_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24905ce9b_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24905d672_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24905de14_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _24905e6d9_AutoExpr(_24905e387_EnumItemDecl* _self_) {
	return ((*_self_)._field_Expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _24905e387_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _249060443_DefaultTyped(_24905edb0_EnumDecl* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _24905edb0_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2490608b6_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249060ab4_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249061114_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249061972_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24906207c_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2490629ea_IsTraitImpl(_249062687_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _249062c5e_IsStructImpl(_249062687_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _249062687_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24979546e_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2398213c8_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc0679_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2496a74c4_set(_249bc09dc_decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_24cb9b740:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_24cb9b7a6:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_24cb9b575:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_24cb9db93:;
					{
						goto _iter_next_24cb9d39b;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_24cb9dc1a:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_24cb9d39b;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_24cb9dc92:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_24cb9d39b;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_24cb9d39b;
					}
				}
				_match_end_24cb9da61:;
			};
			goto _iter_end_24cb9d39b;
		}
	_iter_next_24cb9d39b:;
	}
	_iter_end_24cb9d39b:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_249807624_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_24cba6c34;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_24cba6c34:;
		}
		_iter_end_24cba6c34:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _249617e3a_floatBits(_249bc09dc_decimal* _self_, _24979546e_floatInfo& _32729_flt) {
	jule::U64 _32747_b = jule::U64();
	jule::Bool _32755_overflow = jule::Bool();
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _2496c9d32_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_2496c9d32_powtab[(*_self_)._field_dp];
			};
			_249bc0d0b_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_24cbadb70:;
	}
	_iter_end_24cbadb70:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _2496c9d32_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_2496c9d32_powtab[(-((*_self_)._field_dp))];
			};
			_249bc0d0b_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_24cbb0c82:;
	}
	_iter_end_24cbb0c82:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32729_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32729_flt._field_bias + 1LL) - _32817_exp);;
		_249bc0d0b_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_249bc0d0b_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32729_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_249bc12d4_roundedInteger(&(*_self_)));
	if ((_32917_mant == (2LLU << _32729_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32729_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32729_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32729_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32729_flt._field_bias))));
	_32755_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32729_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32729_flt._field_bias) & static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) << _32729_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32729_flt._field_mantbits) << _32729_flt._field_expbits);
	};
	_32747_b = _41717_bits;
	return std::make_tuple(_32747_b,_32755_overflow);
}



inline void _249bc0bc9_assign(_249bc09dc_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_24cbbd058:;
	}
	_iter_end_24cbbd058:;;
	(*_self_)._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_33117_buf[_33417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_24cbbd751:;
	}
	_iter_end_24cbbd751:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_249bc1548_trim((*_self_));
}



inline void _249bc0d0b_shift(_249bc09dc_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_24cbc5c97:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_24cbc5d1e:;
			{
				while ((_35528_k > 60LL)) {
					{
						_249bc18de_leftShift((*_self_),60LLU);
						_35528_k-=60LL;
					}
				_iter_next_24cbc6b00:;
				}
				_iter_end_24cbc6b00:;;
				_249bc18de_leftShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_24cbc5d96:;
			{
				while ((_35528_k < -60LL)) {
					{
						_249bc167a_rightShift((*_self_),60LLU);
						_35528_k+=60LL;
					}
				_iter_next_24cbc7b67:;
				}
				_iter_end_24cbc7b67:;;
				_249bc167a_rightShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_24cbc5b65:;
	};
}



inline void _249bc0e3d_roundDown(_249bc09dc_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_37528_nd;
	_249bc1548_trim((*_self_));
}



inline void _249bc1070_roundUp(_249bc09dc_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*_self_)._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*_self_)._field_d[_39017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_24cbcab26:;
	}
	_iter_end_24cbcab26:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _249bc11a2_round(_249bc09dc_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_249bc1a21_shouldRoundUp((*_self_),_41124_nd)) {
		_249bc1070_roundUp(&(*_self_), _41124_nd);
	} else {
		_249bc0e3d_roundDown(&(*_self_), _41124_nd);
	};
}



inline jule::U64 _249bc12d4_roundedInteger(_249bc09dc_decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*_self_)._field_dp) && (_42817_i < (*_self_)._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_42817_i] - '0'))));
		}
	_iter_next_24cbcdb90:;
	}
	_iter_end_24cbcdb90:;;
	for (; (_42817_i < (*_self_)._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_24cbd0a60:;
	}
	_iter_end_24cbd0a60:;;
	if (_249bc1a21_shouldRoundUp((*_self_),(*_self_)._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc09dc_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2491152a6_Const> static__2491257e4_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_2491152a6_Const>(_2491152a6_Const{._field_data=jule::Any(_1622_x)});
}



inline jule::Ptr<_2491152a6_Const> static__24913c82d_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_2491152a6_Const>(_2491152a6_Const{._field_data=jule::Any(_1922_x)});
}



inline jule::Ptr<_2491152a6_Const> static__2491571c7_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_2491152a6_Const>(_2491152a6_Const{._field_data=jule::Any(_2223_x)});
}



inline jule::Ptr<_2491152a6_Const> static__249159020_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_2491152a6_Const>(_2491152a6_Const{._field_data=jule::Any(_2522_x)});
}



inline jule::Ptr<_2491152a6_Const> static__24915a20d_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_2491152a6_Const>(_2491152a6_Const{._field_data=jule::Any(_2822_x)});
}



inline jule::Ptr<_2491152a6_Const> static__24915a95b_NewNil(void) {
	return jule::new_ptr<_2491152a6_Const>(_2491152a6_Const{._field_data=nullptr});
}



inline jule::I64 _24915c551_ReadI64(_2491152a6_Const* _self_) {
	if ((!(_24916a839_IsI64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _24915d73e_ReadU64(_2491152a6_Const* _self_) {
	if ((!(_249177a22_IsU64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _24915de8c_ReadBool(_2491152a6_Const* _self_) {
	if ((!(_2491273d9_IsBool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _249166824_ReadStr(_2491152a6_Const* _self_) {
	if ((!(_24912982b_IsStr(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _2491673a2_ReadF64(_2491152a6_Const* _self_) {
	if ((!(_2491660d7_IsF64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _249168260_AsI64(_2491152a6_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_24cc6241b:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_24cc61c89:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_24cc61d00:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_24cc61be0:;
			{
				return 0LL;
			}
		}
		_match_end_24cc61b8a:;
	};
}



inline jule::U64 _24915c3a8_AsU64(_2491152a6_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_24cc64066:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_24cc639e4:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_24cc63a5a:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_24cc625b4:;
			{
				return 0LLU;
			}
		}
		_match_end_24cc63472:;
	};
}



inline jule::F64 _24916922d_AsF64(_2491152a6_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_24cc65bb1:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_24cc6561c:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_24cc65683:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_24cc63d8a:;
			{
				return 0LL;
			}
		}
		_match_end_24cc65375:;
	};
}



inline void _24916a0db_SetI64(_2491152a6_Const* _self_, jule::I64 _13825_x) {
	(*_self_)._field_data=jule::Any(_13825_x);
}



inline void _24917646b_SetU64(_2491152a6_Const* _self_, jule::U64 _14125_x) {
	(*_self_)._field_data=jule::Any(_14125_x);
}



inline void _249177d96_SetBool(_2491152a6_Const* _self_, jule::Bool _14426_x) {
	(*_self_)._field_data=jule::Any(_14426_x);
}



inline void _24917acde_SetStr(_2491152a6_Const* _self_, jule::Str _14725_x) {
	(*_self_)._field_data=jule::Any(_14725_x);
}



inline void _24917b828_SetF64(_2491152a6_Const* _self_, jule::F64 _15025_x) {
	(*_self_)._field_data=jule::Any(_15025_x);
}



inline void _24917c3a6_SetNil(_2491152a6_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _24916a839_IsI64(_2491152a6_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_24cc6a2ae:;
			{
				return true;
			}
		}
		else {
			_case_begin_24cc69b1b:;
			{
				return false;
			}
		}
		_match_end_24cc69ab6:;
	};
}



inline jule::Bool _249177a22_IsU64(_2491152a6_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_24cc6ad81:;
			{
				return true;
			}
		}
		else {
			_case_begin_24cc6a545:;
			{
				return false;
			}
		}
		_match_end_24cc6a1c1:;
	};
}



inline jule::Bool _2491273d9_IsBool(_2491152a6_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_24cc6b953:;
			{
				return true;
			}
		}
		else {
			_case_begin_24cc6b117:;
			{
				return false;
			}
		}
		_match_end_24cc6acb5:;
	};
}



inline jule::Bool _24912982b_IsStr(_2491152a6_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_24cc6c525:;
			{
				return true;
			}
		}
		else {
			_case_begin_24cc6bbd9:;
			{
				return false;
			}
		}
		_match_end_24cc6b887:;
	};
}



inline jule::Bool _2491660d7_IsF64(_2491152a6_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_24cc6d0e7:;
			{
				return true;
			}
		}
		else {
			_case_begin_24cc6c7ab:;
			{
				return false;
			}
		}
		_match_end_24cc6c459:;
	};
}



inline jule::Bool _2491773c3_IsNil(_2491152a6_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _249bc47c1_AreSameTypes(_2491152a6_Const* _self_, _2491152a6_Const _21327_x) {
	{
		
		if ((_24916a839_IsI64(&(*_self_)) == _24916a839_IsI64(&_21327_x))) {
			_case_begin_24cc6e58d:;
			{
				return true;
			}
		}
		else if ((_249177a22_IsU64(&(*_self_)) == _249177a22_IsU64(&_21327_x))) {
			_case_begin_24cc6dceb:;
			{
				return true;
			}
		}
		else if ((_2491660d7_IsF64(&(*_self_)) == _2491660d7_IsF64(&_21327_x))) {
			_case_begin_24cc6dd73:;
			{
				return true;
			}
		}
		else if ((_2491273d9_IsBool(&(*_self_)) == _2491273d9_IsBool(&_21327_x))) {
			_case_begin_24cc6ddea:;
			{
				return true;
			}
		}
		else if ((_24912982b_IsStr(&(*_self_)) == _24912982b_IsStr(&_21327_x))) {
			_case_begin_24cc6de72:;
			{
				return true;
			}
		}
		else if ((_2491773c3_IsNil(&(*_self_)) == _2491773c3_IsNil(&_21327_x))) {
			_case_begin_24cc6e219:;
			{
				return true;
			}
		}
		else {
			_case_begin_24cc6dc85:;
			{
				return false;
			}
		}
		_match_end_24cc6dba8:;
	};
}



inline jule::Bool _249bc4903_And(_2491152a6_Const* _self_, _2491152a6_Const _23818_x) {
	{
		
		if ((_2491273d9_IsBool(&(*_self_)) && _2491273d9_IsBool(&_23818_x))) {
			_case_begin_24cc72d33:;
			{
				return (_24915de8c_ReadBool(&(*_self_)) && _24915de8c_ReadBool(&_23818_x));
			}
		}
		else {
			_case_begin_24cc725c4:;
			{
				return false;
			}
		}
		_match_end_24cc720b8:;
	};
}



inline jule::Bool _249bc4a35_Or(_2491152a6_Const* _self_, _2491152a6_Const _24917_x) {
	{
		
		if ((_2491273d9_IsBool(&(*_self_)) && _2491273d9_IsBool(&_24917_x))) {
			_case_begin_24cc74395:;
			{
				return (_24915de8c_ReadBool(&(*_self_)) || _24915de8c_ReadBool(&_24917_x));
			}
		}
		else {
			_case_begin_24cc73251:;
			{
				return false;
			}
		}
		_match_end_24cc73174:;
	};
}



inline jule::Bool _249bc4b67_Eq(_2491152a6_Const* _self_, _2491152a6_Const _26017_x) {
	{
		
		if (_2491773c3_IsNil(&(*_self_))) {
			_case_begin_24cc7593a:;
			{
				return _2491773c3_IsNil(&_26017_x);
			}
		}
		else if (_2491273d9_IsBool(&(*_self_))) {
			_case_begin_24cc75198:;
			{
				return (_2491273d9_IsBool(&_26017_x) && (_24915de8c_ReadBool(&(*_self_)) == _24915de8c_ReadBool(&_26017_x)));
			}
		}
		else if (_24912982b_IsStr(&(*_self_))) {
			_case_begin_24cc75220:;
			{
				return (_24912982b_IsStr(&_26017_x) && (_249166824_ReadStr(&(*_self_)) == _249166824_ReadStr(&_26017_x)));
			}
		}
		else if (_24916a839_IsI64(&(*_self_))) {
			_case_begin_24cc75297:;
			{
				return (_24915c551_ReadI64(&(*_self_)) == _249168260_AsI64(&_26017_x));
			}
		}
		else if (_249177a22_IsU64(&(*_self_))) {
			_case_begin_24cc7531e:;
			{
				return (_24915d73e_ReadU64(&(*_self_)) == _24915c3a8_AsU64(&_26017_x));
			}
		}
		else if (_2491660d7_IsF64(&(*_self_))) {
			_case_begin_24cc755b6:;
			{
				return (_2491673a2_ReadF64(&(*_self_)) == _24916922d_AsF64(&_26017_x));
			}
		}
		else {
			_case_begin_24cc74791:;
			{
				return false;
			}
		}
		_match_end_24cc746b4:;
	};
}



inline jule::Bool _249bc4c99_Lt(_2491152a6_Const* _self_, _2491152a6_Const _28717_x) {
	{
		
		if (_24912982b_IsStr(&(*_self_))) {
			_case_begin_24cc79e39:;
			{
				return (_24912982b_IsStr(&_28717_x) && (_249166824_ReadStr(&(*_self_)) < _249166824_ReadStr(&_28717_x)));
			}
		}
		else if (_24916a839_IsI64(&(*_self_))) {
			_case_begin_24cc79796:;
			{
				return (_24915c551_ReadI64(&(*_self_)) < _249168260_AsI64(&_28717_x));
			}
		}
		else if (_249177a22_IsU64(&(*_self_))) {
			_case_begin_24cc7980c:;
			{
				return (_24915d73e_ReadU64(&(*_self_)) < _24915c3a8_AsU64(&_28717_x));
			}
		}
		else if (_2491660d7_IsF64(&(*_self_))) {
			_case_begin_24cc79873:;
			{
				return (_2491673a2_ReadF64(&(*_self_)) < _24916922d_AsF64(&_28717_x));
			}
		}
		else {
			_case_begin_24cc75c8c:;
			{
				return false;
			}
		}
		_match_end_24cc75bd2:;
	};
}



inline jule::Bool _249bc4dcb_LtEq(_2491152a6_Const* _self_, _2491152a6_Const _31019_x) {
	{
		
		if (_24912982b_IsStr(&(*_self_))) {
			_case_begin_24cc7d26c:;
			{
				return (_24912982b_IsStr(&_31019_x) && (_249166824_ReadStr(&(*_self_)) <= _249166824_ReadStr(&_31019_x)));
			}
		}
		else if (_24916a839_IsI64(&(*_self_))) {
			_case_begin_24cc7cac9:;
			{
				return (_24915c551_ReadI64(&(*_self_)) <= _249168260_AsI64(&_31019_x));
			}
		}
		else if (_249177a22_IsU64(&(*_self_))) {
			_case_begin_24cc7cb40:;
			{
				return (_24915d73e_ReadU64(&(*_self_)) <= _24915c3a8_AsU64(&_31019_x));
			}
		}
		else if (_2491660d7_IsF64(&(*_self_))) {
			_case_begin_24cc7cba6:;
			{
				return (_2491673a2_ReadF64(&(*_self_)) <= _24916922d_AsF64(&_31019_x));
			}
		}
		else {
			_case_begin_24cc7a18c:;
			{
				return false;
			}
		}
		_match_end_24cc7a0b0:;
	};
}



inline jule::Bool _249bc500d_Gt(_2491152a6_Const* _self_, _2491152a6_Const _33317_x) {
	{
		
		if (_24912982b_IsStr(&(*_self_))) {
			_case_begin_24cc815a0:;
			{
				return (_24912982b_IsStr(&_33317_x) && (_249166824_ReadStr(&(*_self_)) > _249166824_ReadStr(&_33317_x)));
			}
		}
		else if (_24916a839_IsI64(&(*_self_))) {
			_case_begin_24cc80e0c:;
			{
				return (_24915c551_ReadI64(&(*_self_)) > _249168260_AsI64(&_33317_x));
			}
		}
		else if (_249177a22_IsU64(&(*_self_))) {
			_case_begin_24cc80e73:;
			{
				return (_24915d73e_ReadU64(&(*_self_)) > _24915c3a8_AsU64(&_33317_x));
			}
		}
		else if (_2491660d7_IsF64(&(*_self_))) {
			_case_begin_24cc80ed9:;
			{
				return (_2491673a2_ReadF64(&(*_self_)) > _24916922d_AsF64(&_33317_x));
			}
		}
		else {
			_case_begin_24cc7d4c0:;
			{
				return false;
			}
		}
		_match_end_24cc7d3e3:;
	};
}



inline jule::Bool _249bc5140_GtEq(_2491152a6_Const* _self_, _2491152a6_Const _35619_x) {
	{
		
		if (_24912982b_IsStr(&(*_self_))) {
			_case_begin_24cc848d3:;
			{
				return (_24912982b_IsStr(&_35619_x) && (_249166824_ReadStr(&(*_self_)) >= _249166824_ReadStr(&_35619_x)));
			}
		}
		else if (_24916a839_IsI64(&(*_self_))) {
			_case_begin_24cc84240:;
			{
				return (_24915c551_ReadI64(&(*_self_)) >= _249168260_AsI64(&_35619_x));
			}
		}
		else if (_249177a22_IsU64(&(*_self_))) {
			_case_begin_24cc842a6:;
			{
				return (_24915d73e_ReadU64(&(*_self_)) >= _24915c3a8_AsU64(&_35619_x));
			}
		}
		else if (_2491660d7_IsF64(&(*_self_))) {
			_case_begin_24cc8431c:;
			{
				return (_2491673a2_ReadF64(&(*_self_)) >= _24916922d_AsF64(&_35619_x));
			}
		}
		else {
			_case_begin_24cc81803:;
			{
				return false;
			}
		}
		_match_end_24cc81726:;
	};
}



inline jule::Bool _249bc5272_Add(_2491152a6_Const* _self_, _2491152a6_Const _37722_x) {
	{
		
		if (_24912982b_IsStr(&(*_self_))) {
			_case_begin_24cc87c16:;
			{
				if ((!(_24912982b_IsStr(&_37722_x)))) {
					return false;
				};
				_24917acde_SetStr(&(*_self_), (_249166824_ReadStr(&(*_self_)) + _249166824_ReadStr(&_37722_x)));
			}
		}
		else if (_2491660d7_IsF64(&(*_self_))) {
			_case_begin_24cc87573:;
			{
				_24917b828_SetF64(&(*_self_), static_cast<jule::F64>((_2491673a2_ReadF64(&(*_self_)) + _24916922d_AsF64(&_37722_x))));
			}
		}
		else if (_24916a839_IsI64(&(*_self_))) {
			_case_begin_24cc875d9:;
			{
				if (_2491660d7_IsF64(&_37722_x)) {
					_24917b828_SetF64(&(*_self_), static_cast<jule::F64>((_24916922d_AsF64(&(*_self_)) + _2491673a2_ReadF64(&_37722_x))));
				} else {
					_24916a0db_SetI64(&(*_self_), static_cast<jule::I64>((_24915c551_ReadI64(&(*_self_)) + _249168260_AsI64(&_37722_x))));
				};
			}
		}
		else if (_249177a22_IsU64(&(*_self_))) {
			_case_begin_24cc87650:;
			{
				if (_2491660d7_IsF64(&_37722_x)) {
					_24917b828_SetF64(&(*_self_), static_cast<jule::F64>((_24916922d_AsF64(&(*_self_)) + _2491673a2_ReadF64(&_37722_x))));
				} else {
					_24917646b_SetU64(&(*_self_), static_cast<jule::U64>((_24915d73e_ReadU64(&(*_self_)) + _24915c3a8_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_24cc84b36:;
			{
				return false;
			}
		}
		_match_end_24cc84a59:;
	};
	return true;
}



inline jule::Bool _249bc53a4_Sub(_2491152a6_Const* _self_, _2491152a6_Const _40622_x) {
	{
		
		if (_2491660d7_IsF64(&(*_self_))) {
			_case_begin_24cc8da0d:;
			{
				_24917b828_SetF64(&(*_self_), static_cast<jule::F64>((_2491673a2_ReadF64(&(*_self_)) - _24916922d_AsF64(&_40622_x))));
			}
		}
		else if (_24916a839_IsI64(&(*_self_))) {
			_case_begin_24cc8d29e:;
			{
				if (_2491660d7_IsF64(&_40622_x)) {
					_24917b828_SetF64(&(*_self_), static_cast<jule::F64>((_24916922d_AsF64(&(*_self_)) - _2491673a2_ReadF64(&_40622_x))));
				} else {
					_24916a0db_SetI64(&(*_self_), static_cast<jule::I64>((_24915c551_ReadI64(&(*_self_)) - _249168260_AsI64(&_40622_x))));
				};
			}
		}
		else if (_249177a22_IsU64(&(*_self_))) {
			_case_begin_24cc8d315:;
			{
				if (_2491660d7_IsF64(&_40622_x)) {
					_24917b828_SetF64(&(*_self_), static_cast<jule::F64>((_24916922d_AsF64(&(*_self_)) - _2491673a2_ReadF64(&_40622_x))));
				} else {
					_24917646b_SetU64(&(*_self_), static_cast<jule::U64>((_24915d73e_ReadU64(&(*_self_)) - _24915c3a8_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_24cc8d238:;
			{
				return false;
			}
		}
		_match_end_24cc8c842:;
	};
	return true;
}



inline jule::Bool _249bc54d6_Mul(_2491152a6_Const* _self_, _2491152a6_Const _43022_x) {
	{
		
		if (_2491660d7_IsF64(&(*_self_))) {
			_case_begin_24cc9368e:;
			{
				_24917b828_SetF64(&(*_self_), static_cast<jule::F64>((_2491673a2_ReadF64(&(*_self_)) * _24916922d_AsF64(&_43022_x))));
			}
		}
		else if (_24916a839_IsI64(&(*_self_))) {
			_case_begin_24cc92e30:;
			{
				if (_2491660d7_IsF64(&_43022_x)) {
					_24917b828_SetF64(&(*_self_), static_cast<jule::F64>((_24916922d_AsF64(&(*_self_)) * _2491673a2_ReadF64(&_43022_x))));
				} else {
					_24916a0db_SetI64(&(*_self_), static_cast<jule::I64>((_24915c551_ReadI64(&(*_self_)) * _249168260_AsI64(&_43022_x))));
				};
			}
		}
		else if (_249177a22_IsU64(&(*_self_))) {
			_case_begin_24cc92e96:;
			{
				if (_2491660d7_IsF64(&_43022_x)) {
					_24917b828_SetF64(&(*_self_), static_cast<jule::F64>((_24916922d_AsF64(&(*_self_)) * _2491673a2_ReadF64(&_43022_x))));
				} else {
					_24917646b_SetU64(&(*_self_), static_cast<jule::U64>((_24915d73e_ReadU64(&(*_self_)) * _24915c3a8_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_24cc92db9:;
			{
				return false;
			}
		}
		_match_end_24cc9232a:;
	};
	return true;
}



inline jule::Bool _249bc5618_Div(_2491152a6_Const* _self_, _2491152a6_Const _45822_x) {
	{
		
		if (_2491660d7_IsF64(&(*_self_))) {
			_case_begin_24cc98320:;
			{
				jule::F64 _46117_l = _24916922d_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;
				};
				_24917b828_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_2491673a2_ReadF64(&(*_self_)),_46117_l)));
			}
		}
		else if (_24916a839_IsI64(&(*_self_))) {
			_case_begin_24cc97ab1:;
			{
				jule::F64 _46717_l = _24916922d_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;
				};
				_24917b828_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_24916922d_AsF64(&(*_self_)),_46717_l)));
			}
		}
		else if (_249177a22_IsU64(&(*_self_))) {
			_case_begin_24cc97b27:;
			{
				jule::F64 _47317_l = _24916922d_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;
				};
				_24917b828_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_24916922d_AsF64(&(*_self_)),_47317_l)));
			}
		}
		else {
			_case_begin_24cc97a4a:;
			{
				return false;
			}
		}
		_match_end_24cc96eab:;
	};
	return true;
}



inline jule::Bool _249bc574a_Mod(_2491152a6_Const* _self_, _2491152a6_Const _48722_x) {
	{
		
		if (_24916a839_IsI64(&(*_self_))) {
			_case_begin_24cc9cea1:;
			{
				jule::I64 _49017_l = _249168260_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;
				};
				_24916a0db_SetI64(&(*_self_), static_cast<jule::I64>(jule::mod(_24915c551_ReadI64(&(*_self_)),_49017_l)));
			}
		}
		else if (_249177a22_IsU64(&(*_self_))) {
			_case_begin_24cc9c753:;
			{
				jule::U64 _49617_l = _24915c3a8_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;
				};
				_24917646b_SetU64(&(*_self_), static_cast<jule::U64>(jule::mod(_24915d73e_ReadU64(&(*_self_)),_49617_l)));
			}
		}
		else {
			_case_begin_24cc9c6dc:;
			{
				return false;
			}
		}
		_match_end_24cc9c610:;
	};
	return true;
}



inline jule::Bool _249bc587c_BitwiseAnd(_2491152a6_Const* _self_, _2491152a6_Const _50929_x) {
	{
		
		if (_24916a839_IsI64(&(*_self_))) {
			_case_begin_24cca15c0:;
			{
				_24916a0db_SetI64(&(*_self_), static_cast<jule::I64>((_24915c551_ReadI64(&(*_self_)) & _249168260_AsI64(&_50929_x))));
			}
		}
		else if (_249177a22_IsU64(&(*_self_))) {
			_case_begin_24cca0d72:;
			{
				_24917646b_SetU64(&(*_self_), static_cast<jule::U64>((_24915d73e_ReadU64(&(*_self_)) & _24915c3a8_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_24cca0d0b:;
			{
				return false;
			}
		}
		_match_end_24cca0c2e:;
	};
	return true;
}



inline jule::Bool _249bc59ae_BitwiseOr(_2491152a6_Const* _self_, _2491152a6_Const _52328_x) {
	{
		
		if (_24916a839_IsI64(&(*_self_))) {
			_case_begin_24cca3968:;
			{
				_24916a0db_SetI64(&(*_self_), static_cast<jule::I64>((_24915c551_ReadI64(&(*_self_)) | _249168260_AsI64(&_52328_x))));
			}
		}
		else if (_249177a22_IsU64(&(*_self_))) {
			_case_begin_24cca321a:;
			{
				_24917646b_SetU64(&(*_self_), static_cast<jule::U64>((_24915d73e_ReadU64(&(*_self_)) | _24915c3a8_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_24cca31a4:;
			{
				return false;
			}
		}
		_match_end_24cca30c7:;
	};
	return true;
}



inline jule::Bool _249bc5ae1_Xor(_2491152a6_Const* _self_, _2491152a6_Const _53722_x) {
	{
		
		if (_24916a839_IsI64(&(*_self_))) {
			_case_begin_24cca5d11:;
			{
				_24916a0db_SetI64(&(*_self_), static_cast<jule::I64>((_24915c551_ReadI64(&(*_self_)) ^ _249168260_AsI64(&_53722_x))));
			}
		}
		else if (_249177a22_IsU64(&(*_self_))) {
			_case_begin_24cca55b3:;
			{
				_24917646b_SetU64(&(*_self_), static_cast<jule::U64>((_24915d73e_ReadU64(&(*_self_)) ^ _24915c3a8_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_24cca554c:;
			{
				return false;
			}
		}
		_match_end_24cca5470:;
	};
	return true;
}



inline jule::Bool _249bc5c23_Lshift(_2491152a6_Const* _self_, _2491152a6_Const _55125_x) {
	{
		
		if (_24916a839_IsI64(&(*_self_))) {
			_case_begin_24cca81a9:;
			{
				jule::I64 _55417_l = _249168260_AsI64(&(*_self_));;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _24915c3a8_AsU64(&_55125_x);;
					_24916a0db_SetI64(&(*_self_), static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_249bc5e87_lshiftUnsig((*_self_),_55125_x);
				};
			}
		}
		else if (_249177a22_IsU64(&(*_self_))) {
			_case_begin_24cca795b:;
			{
				_249bc5e87_lshiftUnsig((*_self_),_55125_x);
			}
		}
		else {
			_case_begin_24cca78e5:;
			{
				return false;
			}
		}
		_match_end_24cca7818:;
	};
	return true;
}



inline jule::Bool _249bc5d55_Rshift(_2491152a6_Const* _self_, _2491152a6_Const _57125_x) {
	{
		
		if (_24916a839_IsI64(&(*_self_))) {
			_case_begin_24ccaadc1:;
			{
				jule::I64 _57417_l = _249168260_AsI64(&(*_self_));;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _24915c3a8_AsU64(&_57125_x);;
					_24916a0db_SetI64(&(*_self_), static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_249bc60b9_rshiftUnsig((*_self_),_57125_x);
				};
			}
		}
		else if (_249177a22_IsU64(&(*_self_))) {
			_case_begin_24ccaa673:;
			{
				_249bc60b9_rshiftUnsig((*_self_),_57125_x);
			}
		}
		else {
			_case_begin_24ccaa60c:;
			{
				return false;
			}
		}
		_match_end_24ccaa530:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _2491152a6_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_24903e268_FieldIns> _248e13824_instance(jule::Ptr<_24902413d_Field> _self_) {
	return jule::new_ptr<_24903e268_FieldIns>(_24903e268_FieldIns{._field_Decl=_self_, });
}







std::ostream &operator<<(std::ostream &_Stream, _24902413d_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24903852b_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_249062e4b_StructIns> _249012d63_instance(jule::Ptr<_249036b01_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	jule::Ptr<_249062e4b_StructIns> _9917_ins = jule::new_ptr<_249062e4b_StructIns>(_249062e4b_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_24903e268_FieldIns>>::alloc(0LL,_self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_249c3702b_Var>>::alloc(0LL,_self_.get()._field_Statics.len()), ._field_Refers=static__249bccec2_new(), });;
	{
		auto &expr = _self_.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_24e75501c:;
		if (it != expr.end()) {
			jule::Ptr<_249c3702b_Var> _10621_s = *it;
			{
				_9917_ins.get()._field_Statics = jule::alloc_for_append(_9917_ins.get()._field_Statics,1);_9917_ins.get()._field_Statics.__push(jule::new_ptr<_249c3702b_Var>((*(_10621_s))));;
			}
			_iter_next_24e75501c:;
			++it;
			goto _iter_begin_24e75501c;
		}
		_iter_end_24e75501c:;
	};
	{
		auto &expr = _self_.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_24e75646e:;
		if (it != expr.end()) {
			jule::Ptr<_24902413d_Field> _11021_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_248e13824_instance(_11021_f));;
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _249cb1b88_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_24e75646e:;
			++it;
			goto _iter_begin_24e75646e;
		}
		_iter_end_24e75646e:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_249bcbe38_Fn>>::alloc(0LL,_self_.get()._field_Methods.len());
		{
			auto &expr = _self_.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_24e758493:;
			if (it != expr.end()) {
				jule::Ptr<_249bcbe38_Fn> _12125_f = *it;
				{
					jule::Ptr<_249bcbe38_Fn> _12225_fins = jule::new_ptr<_249bcbe38_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_12225_fins);;
				}
				_iter_next_24e758493:;
				++it;
				goto _iter_begin_24e758493;
			}
			_iter_end_24e758493:;
		};
	};
	return _9917_ins;
}



inline jule::Ptr<_249062e4b_StructIns> _249018e57_appendInstance(_249036b01_Struct* _self_, jule::Ptr<_249062e4b_StructIns>& _13338_ins) {
	if ((((*_self_)._field_Generics.len() == 0LL) && ((*_self_)._field_Instances.len() == 1LL))) {
		return (*_self_)._field_Instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_24e75b6a5:;
		if (it != expr.end()) {
			jule::Ptr<_249062e4b_StructIns> _13921_ains = *it;
			{
				if (_24903994a_Same(_13921_ains.ptr(), _13338_ins)) {
					return _13921_ains;
				};
			}
			_iter_next_24e75b6a5:;
			++it;
			goto _iter_begin_24e75b6a5;
		}
		_iter_end_24e75b6a5:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_13338_ins);;
	return nullptr;
}



inline jule::Ptr<_249bcbe38_Fn> _24901d1c0_FindMethod(_249036b01_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_24e75ce6a:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;
				};
			}
			_iter_next_24e75ce6a:;
			++it;
			goto _iter_begin_24e75ce6a;
		}
		_iter_end_24e75ce6a:;
	};
	return nullptr;
}



inline jule::Ptr<_249c3702b_Var> _249020e70_FindStatic(_249036b01_Struct* _self_, jule::Str _16229_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_24e75e2ac:;
		if (it != expr.end()) {
			jule::Ptr<_249c3702b_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;
				};
			}
			_iter_next_24e75e2ac:;
			++it;
			goto _iter_begin_24e75e2ac;
		}
		_iter_end_24e75e2ac:;
	};
	return nullptr;
}



inline jule::Ptr<_24902413d_Field> _249021e82_FindField(_249036b01_Struct* _self_, jule::Str _17328_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_24e75e664:;
		if (it != expr.end()) {
			jule::Ptr<_24902413d_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;
				};
			}
			_iter_next_24e75e664:;
			++it;
			goto _iter_begin_24e75e664;
		}
		_iter_end_24e75e664:;
	};
	return nullptr;
}



inline jule::Bool _2490213c1_IsImplements(_249036b01_Struct* _self_, jule::Ptr<_249bd48d0_Trait> _18327_t) {
	{
		auto &expr = (*_self_)._field_Implements;
		auto it = expr.begin();
		_iter_begin_24e760676:;
		if (it != expr.end()) {
			jule::Ptr<_249bd48d0_Trait> &_18416_it = *it;
			{
				if ((_18327_t == _18416_it)) {
					return true;
				};
			}
			_iter_next_24e760676:;
			++it;
			goto _iter_begin_24e760676;
		}
		_iter_end_24e760676:;
	};
	return false;
}



inline jule::Bool _2490237be_IsDerives(_249036b01_Struct* _self_, jule::Str _19324_ident) {
	{
		auto &expr = (*_self_)._field_Directives;
		auto it = expr.begin();
		_iter_begin_24e761710:;
		if (it != expr.end()) {
			jule::Ptr<_24900cb2c_Directive> &_19416_d = *it;
			{
				if ((_19416_d.get()._field_Tag.get()._field_Kind == jule::Str("derive", 6))) {
					if (((_19416_d.get()._field_Args.len() == 1LL) && (_19416_d.get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;
					};
				};
			}
			_iter_next_24e761710:;
			++it;
			goto _iter_begin_24e761710;
		}
		_iter_end_24e761710:;
	};
	return false;
}



inline jule::Bool _249022aa9_IsUses(_249036b01_Struct* _self_, jule::Ptr<_249036b01_Struct> _20521_s) {
	{
		auto &expr = (*_self_)._field_Uses;
		auto it = expr.begin();
		_iter_begin_24e7641e6:;
		if (it != expr.end()) {
			jule::Ptr<_249036b01_Struct> &_20616_u = *it;
			{
				while ((_20521_s == _20616_u)) {
					{
						return true;
					}
				_iter_next_24e7649dd:;
				}
				_iter_end_24e7649dd:;;
			}
			_iter_next_24e7641e6:;
			++it;
			goto _iter_begin_24e7641e6;
		}
		_iter_end_24e7641e6:;
	};
	return false;
}



inline jule::Bool _249026a9c_HasRefAccessible(_249036b01_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_24e764ec7:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> &_21616_m = *it;
			{
				if (((_21616_m.get()._field_Params.len() > 0LL) && _24909be1e_IsRef(_21616_m.get()._field_Params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_24e764ec7:;
			++it;
			goto _iter_begin_24e764ec7;
		}
		_iter_end_24e764ec7:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _249036b01_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24903e268_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc61eb_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc63d8_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc65c5_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc67b2_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc699e_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc6b8b_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc6d78_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc7065_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc7252_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc743e_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc762b_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc7818_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc7a05_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc7be2_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc7dce_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc82ec_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc84d9_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc86c6_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc88b3_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc8aa0_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc8c8c_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc8e79_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc9166_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc9353_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc9540_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc972c_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc9919_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc9b06_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc9ce3_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc9ed0_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bca1bc_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bc80bb_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bca82c_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bcaa19_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bcac06_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bcade3_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bcb0d0_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bcb2bc_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bcb4a9_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bcb696_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bcba5e_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_249bcc125_ParamIns> _2490d9ba4_instance(jule::Ptr<_249bcbc4b_Param> _self_) {
	return jule::new_ptr<_249bcc125_ParamIns>(_249bcc125_ParamIns{._field_Decl=_self_, });
}



inline jule::Bool _24909ab54_IsSelf(_249bcbc4b_Param* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _24909be1e_IsRef(_249bcbc4b_Param* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _249bcbc4b_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2490aaa43_IsVoid(_249bcbe38_Fn* _self_) {
	return ((*_self_)._field_Result == nullptr);
}



inline jule::Bool _2490ab25d_IsMethod(_249bcbe38_Fn* _self_) {
	return ((*_self_)._field_Owner != nullptr);
}



inline jule::Bool _2490ab978_IsEntryPoint(_249bcbe38_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("main", 4));
}



inline jule::Bool _2490ac803_IsInit(_249bcbe38_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("init", 4));
}



inline jule::Bool _24909a24c_IsAnon(_249bcbe38_Fn* _self_) {
	return _23abd68be_IsAnonIdent((*_self_)._field_Ident);
}



inline jule::Bool _2490a02da_AnyVar(_249bcbe38_Fn* _self_) {
	return (((*_self_)._field_Result != nullptr) && ((*_self_)._field_Result.get()._field_Idents.len() > 0LL));
}



inline jule::Ptr<_249bcc312_FnIns> _2490a1dbe_instanceForce(jule::Ptr<_249bcbe38_Fn> _self_) {
	jule::Ptr<_249bcc312_FnIns> _10017_ins = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_249be2635_Scope>(), ._field_Refers=static__249bccec2_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_249bcc125_ParamIns>>::alloc(0LL,_self_.get()._field_Params.len());
	{
		auto &expr = _self_.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_24e77a3a5:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbc4b_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_2490d9ba4_instance(_10721_p));;
			}
			_iter_next_24e77a3a5:;
			++it;
			goto _iter_begin_24e77a3a5;
		}
		_iter_end_24e77a3a5:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;
}



inline jule::Ptr<_249bcc312_FnIns> _2490a2b8e_instance(jule::Ptr<_249bcbe38_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	return _2490a1dbe_instanceForce(_self_);
}



inline jule::Ptr<_249bcc312_FnIns> _2490999bb_appendInstance(_249bcbe38_Fn* _self_, jule::Ptr<_249bcc312_FnIns>& _12838_ins) {
	if (((*_self_)._field_Generics.len() == 0LL)) {
		if (((*_self_)._field_Instances.len() == 1LL)) {
			return (*_self_)._field_Instances[0LL];
		};
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	if (((*_self_)._field_Instances.len() == 0LL)) {
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_24e78072e:;
		if (it != expr.end()) {
			jule::Ptr<_249bcc312_FnIns> _14421_ains = *it;
			{
				if (_249bcc763_Same(_14421_ains.ptr(), _12838_ins)) {
					return _14421_ains;
				};
			}
			_iter_next_24e78072e:;
			++it;
			goto _iter_begin_24e78072e;
		}
		_iter_end_24e78072e:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _249bcbe38_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _249099438_Str(_249bcc125_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_Decl.get()._field_Reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_24909ab54_IsSelf((*_self_)._field_Decl.ptr())) {
		if (_24909be1e_IsRef((*_self_)._field_Decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;
	};
	if ((*_self_)._field_Decl.get()._field_Variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_Kind != nullptr)) {
		_16617_s+=_249cb0b87_Str((*_self_)._field_Kind.ptr());
	};
	return _16617_s;
}







std::ostream &operator<<(std::ostream &_Stream, _249bcc125_ParamIns _Src) {
	_Stream << _249099438_Str(&_Src);
	return _Stream;
}



inline jule::Str _24909b517_Str(_249bcc312_FnIns* _self_) {
	;
	return _249bcc895_GetKindStr(&(*_self_), false);
}



inline jule::Bool _249099c74_Equals(jule::Ptr<_249bcc312_FnIns> _self_, jule::Ptr<_249cb078b_TypeKind> _21722_other) {
	jule::Ptr<_249bcc312_FnIns> _21813_f = _249cb3a8b_Fn(_21722_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;
	};
	return _2490ac193_EqualsFn(_self_, _21813_f);
}



inline jule::Bool _2490ac193_EqualsFn(jule::Ptr<_249bcc312_FnIns> _self_, jule::Ptr<_249bcc312_FnIns>& _22825_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != _22825_f.get()._field_Decl.get()._field_Exceptional)) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != _22825_f.get()._field_Decl.get()._field_Unsafety)) {
		return false;
	};
	if ((_2490aaa43_IsVoid(_self_.get()._field_Decl.ptr()) != _2490aaa43_IsVoid(_22825_f.get()._field_Decl.ptr()))) {
		return false;
	};
	jule::Fn<jule::Bool(jule::Ptr<_249bcc125_ParamIns>,jule::Ptr<_249bcc125_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_249bcc125_ParamIns>,jule::Ptr<_249bcc125_ParamIns>)>([=](jule::Ptr<_249bcc125_ParamIns> _23830_p1, jule::Ptr<_249bcc125_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;
		};
		if (_24909ab54_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_24909ab54_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;
			};
			if ((_24909be1e_IsRef(_23830_p1.get()._field_Decl.ptr()) != _24909be1e_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;
		};
		return _249cb0e95_Equals(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);
	});;
	if ((_22825_f.get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i],_22825_f.get()._field_Params[_27017_i])))) {
				return false;
			};
		}
	_iter_next_24e78e672:;
	}
	_iter_end_24e78e672:;;
	if ((!(_2490aaa43_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_249cb0e95_Equals(_self_.get()._field_Result, _22825_f.get()._field_Result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Bool _24909e4c6_equalsTrait(jule::Ptr<_249bcc312_FnIns> _self_, jule::Ptr<_249bcc312_FnIns>& _28728_other) {
	if ((!(_2490ac193_EqualsFn(_self_, _28728_other)))) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != _28728_other.get()._field_Decl.get()._field_Generics.len())) {
		return false;
	};
	return true;
}



inline jule::Slice<jule::Ptr<_249cb078b_TypeKind>> _2490ca227_Types(_249bcc312_FnIns* _self_) {
	{
		
		if (((*_self_)._field_Result == nullptr)) {
			_case_begin_24e7938b8:;
			{
				return nullptr;
			}
		}
		else if ((_249cb453c_Tup((*_self_)._field_Result.ptr()) == nullptr)) {
			_case_begin_24e7931d1:;
			{
				return jule::Slice<jule::Ptr<_249cb078b_TypeKind>>::make({(*_self_)._field_Result});
			}
		}
		else {
			_case_begin_24e79316a:;
			{
				return _249cb453c_Tup((*_self_)._field_Result.ptr()).get()._field_Types;
			}
		}
		_match_end_24e79308d:;
	};
}



inline jule::Bool _249bcc4ee_IsBuiltin(_249bcc312_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _249bcc631_IsAnon(_249bcc312_FnIns* _self_) {
	return ((*_self_)._field_Anon || (((*_self_)._field_Decl != nullptr) && _24909a24c_IsAnon((*_self_)._field_Decl.ptr())));
}



inline jule::Bool _249bcc763_Same(_249bcc312_FnIns* _self_, jule::Ptr<_249bcc312_FnIns> _32419_f) {
	if ((((*_self_)._field_Decl != _32419_f.get()._field_Decl) || (_32419_f.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_24e796ea4:;
		if (it != expr.end()) {
			jule::I64 _32913_i = it - expr.begin();
			jule::Ptr<_249cae05e_InsGeneric> &_32916_g = *it;
			{
				if ((!(_249cb0e95_Equals(_32916_g.get()._field_Kind, _32419_f.get()._field_Generics[_32913_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_24e796ea4:;
			++it;
			_32913_i++;
			goto _iter_begin_24e796ea4;
		}
		_iter_end_24e796ea4:;
	};
	return true;
}



inline jule::Str _249bcc895_GetKindStr(_249bcc312_FnIns* _self_, jule::Bool _34025_ident) {
	jule::Str _34117_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Unsafety) {
		_34117_s+=jule::Str("unsafe ", 7);
	};
	_34117_s+=jule::Str("fn", 2);
	if ((_34025_ident && ((*_self_)._field_Decl != nullptr))) {
		_34117_s+=(jule::Str(" ", 1) + (*_self_)._field_Decl.get()._field_Ident);
	};
	_34117_s+=jule::Str("(", 1);
	jule::I64 _35413_n = (*_self_)._field_Params.len();;
	if ((_35413_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_Params;
			auto it = expr.begin();
			_iter_begin_24e79b261:;
			if (it != expr.end()) {
				jule::Ptr<_249bcc125_ParamIns> &_35620_p = *it;
				{
					_34117_s+=_249099438_Str(_35620_p.ptr());
					_34117_s+=jule::Str(",", 1);
				}
				_iter_next_24e79b261:;
				++it;
				goto _iter_begin_24e79b261;
			}
			_iter_end_24e79b261:;
		};
		(_34117_s).mut_slice(0LL,(_34117_s.len() - 1LL));;
	};
	_34117_s+=jule::Str(")", 1);
	if ((*_self_)._field_Decl.get()._field_Exceptional) {
		_34117_s+=jule::Str("!", 1);
	};
	if ((!(_2490aaa43_IsVoid((*_self_)._field_Decl.ptr())))) {
		_34117_s+=jule::Str(":", 1);
		_34117_s+=_249cb0b87_Str((*_self_)._field_Result.ptr());
	};
	return _34117_s;
}







std::ostream &operator<<(std::ostream &_Stream, _249bcc312_FnIns _Src) {
	_Stream << _24909b517_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_249bcccd5_ReferenceStack> static__249bccec2_new(void) {
	return jule::new_ptr<_249bcccd5_ReferenceStack>(_249bcccd5_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL,10LL)});
}



inline jule::I64 _249bcd104_Len(_249bcccd5_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _249bcd236_At(_249bcccd5_ReferenceStack* _self_, jule::I64 _6821_i) {
	return jule::Any((*_self_)._field_buffer[_6821_i]);
}



inline void _249bcd368_Push(_249bcccd5_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_7327_ref));;
}



inline jule::Bool _250041d36_Exist(_249bcccd5_ReferenceStack* _self_, jule::Ptr<_249bcc312_FnIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_250043178:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_250043178:;
			++it;
			goto _iter_begin_250043178;
		}
		_iter_end_250043178:;
	};
	return false;
}

inline jule::Bool _25005791d_Exist(_249bcccd5_ReferenceStack* _self_, jule::Ptr<_249c3702b_Var> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_250058c1b:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_250058c1b:;
			++it;
			goto _iter_begin_250058c1b;
		}
		_iter_end_250058c1b:;
	};
	return false;
}

inline jule::Bool _250103942_Exist(_249bcccd5_ReferenceStack* _self_, jule::Ptr<_249062e4b_StructIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_250104c84:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_250104c84:;
			++it;
			goto _iter_begin_250104c84;
		}
		_iter_end_250104c84:;
	};
	return false;
}

inline jule::Bool _25104670d_Exist(_249bcccd5_ReferenceStack* _self_, jule::Ptr<_249bd48d0_Trait> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_25104791d:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_25104791d:;
			++it;
			goto _iter_begin_25104791d;
		}
		_iter_end_25104791d:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _249bcccd5_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bcd5cc_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_249bd0557_symbolBuilder> _249bd090e_getRoot(jule::Ptr<_249bd0557_symbolBuilder> _self_) {
	jule::Ptr<_249bd0557_symbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_24e7b5bd7:;
	}
	_iter_end_24e7b5bd7:;;
	return _31617_root;
}



inline void _249bd0a41_pushErr(_249bd0557_symbolBuilder* _self_, jule::Ptr<_23abd3d83_Token>& _32327_token, jule::Str _32342_fmt, jule::Slice<jule::Any> _32355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_249c178ad_compilerErr(_32327_token,true,_32342_fmt,jule::Any(_32355_args)));;
}



inline void _249bd0b73_pushErrText(_249bd0557_symbolBuilder* _self_, jule::Ptr<_23abd3d83_Token>& _32731_token, jule::Str _32746_fmt, jule::Slice<jule::Any> _32759_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_249c178ad_compilerErr(_32731_token,false,_32746_fmt,jule::Any(_32759_args)));;
}



inline void _249bd0ca5_pushSuggestion(_249bd0557_symbolBuilder* _self_, jule::Str _33233_fmt, jule::Slice<jule::Any> _33246_args) {
	{
		_249c18d43_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33233_fmt,jule::Any(_33246_args));
	};
}



inline jule::Bool _249bd0dd7_checkCppUseDeclPath(_249bd0557_symbolBuilder* _self_, jule::Ptr<_24905de14_UseDecl>& _33639_decl, jule::Str _33655_path) {
	jule::Bool _33668_ok = jule::Bool();
	jule::Str _33713_ext = _23989348e_Ext(_33655_path);;
	if (((!(_23a8992b8_IsValidHeaderExt(_33713_ext))) && (!(_23a89951b_IsValidCppExt(_33713_ext))))) {
		_249bd0a41_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext)}));
		_33668_ok = false;
		return _33668_ok;
	};
	jule::Ptr<_2389b2d0c_Status> _34413_info = ({
		auto except = static__2389b50d9_Of(_33655_path);
		(except.ok()) ? (except.result) : ({{
			_249bd0a41_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
			_33668_ok = false;
			return _33668_ok;
		} jule::Ptr<_2389b2d0c_Status>();});
	});;
	if (_2389c048a_IsDir(_34413_info.ptr())) {
		_249bd0a41_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
		_33668_ok = false;
		return _33668_ok;
	};
	_33668_ok = true;
	return _33668_ok;
}



inline jule::Ptr<_249c1117b_ImportInfo> _249bd1019_buildCppHeaderImport(_249bd0557_symbolBuilder* _self_, jule::Ptr<_24905de14_UseDecl>& _35644_decl) {
	jule::Str _35717_path = _35644_decl.get()._field_LinkPath;;
	if ((!(_23a899186_IsStdHeaderPath(_35644_decl.get()._field_LinkPath)))) {
		_35717_path=_23988a9b4_Join(jule::Slice<jule::Str>::make({_23abd9b14_Dir(_35644_decl.get()._field_Token.get()._field_File.ptr()),_35644_decl.get()._field_LinkPath}));
		jule::Bool _36121_ok = _249bd0dd7_checkCppUseDeclPath(&(*_self_), _35644_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;
		};
		std::tie(_35717_path,_36121_ok) = _239894ea7_Abs(_35717_path);
		if ((!(_36121_ok))) {
			_249bd0a41_pushErr(&(*_self_), _35644_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35644_decl.get()._field_LinkPath)}));
		};
	};
	return jule::new_ptr<_249c1117b_ImportInfo>(_249c1117b_ImportInfo{._field_Token=_35644_decl.get()._field_Token, ._field_Path=_35717_path, ._field_LinkPath=_35644_decl.get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });
}



inline jule::Ptr<_249c1117b_ImportInfo> _249bd114b_buildStdImport(_249bd0557_symbolBuilder* _self_, jule::Ptr<_24905de14_UseDecl>& _38438_decl) {
	jule::Str _38517_path = _38438_decl.get()._field_LinkPath.slice(5LL);;
	_38517_path=_23a830d65_Replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38517_path=_23988a9b4_Join(jule::Slice<jule::Str>::make({_23a8de9d4_PathStdlib,_38517_path}));
	jule::Bool _38820_ok;;
	std::tie(_38517_path,_38820_ok) = _239894ea7_Abs(_38517_path);
	if ((!(_38820_ok))) {
		_249bd0a41_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_2389b2d0c_Status> _39513_info = ({
		auto except = static__2389b50d9_Of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_249bd0a41_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_2389b2d0c_Status>();});
	});;
	if ((!(_2389c048a_IsDir(_39513_info.ptr())))) {
		_249bd0a41_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _40513_i = (_23a82b657_FindLast(_38438_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38438_decl.get()._field_LinkPath.slice(_40513_i);;
	return jule::new_ptr<_249c1117b_ImportInfo>(_249c1117b_ImportInfo{._field_Token=_38438_decl.get()._field_Token, ._field_Path=_38517_path, ._field_LinkPath=_38438_decl.get()._field_LinkPath, ._field_Ident=_40613_ident, ._field_Alias=_38438_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=_38438_decl.get()._field_Full, ._field_Package=jule::new_ptr<_249c140d5_Package>(_249c140d5_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_249c1117b_ImportInfo> _249bd127d_buildIdentImport(jule::Ptr<_249bd0557_symbolBuilder> _self_, jule::Ptr<_24905de14_UseDecl>& _42341_decl) {
	jule::Str _42413_modPath = _249c0d50d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._249c0c672_GetModPath(_self_.get()._field_importer);;
	if ((_42413_modPath.len() == 0LL)) {
		_249bd0a41_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_249bd0ca5_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _43117_path = _42341_decl.get()._field_LinkPath;;
	_43117_path=_23a830d65_Replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_43117_path=_23988a9b4_Join(jule::Slice<jule::Str>::make({_42413_modPath,_43117_path}));
	jule::Bool _43520_ok;;
	std::tie(_43117_path,_43520_ok) = _239894ea7_Abs(_43117_path);
	if ((!(_43520_ok))) {
		_249bd0a41_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_2389b2d0c_Status> _44213_info = ({
		auto except = static__2389b50d9_Of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_249bd0a41_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_2389b2d0c_Status>();});
	});;
	if ((!(_2389c048a_IsDir(_44213_info.ptr())))) {
		_249bd0a41_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _45213_i = (_23a82b657_FindLast(_42341_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42341_decl.get()._field_LinkPath.slice(_45213_i);;
	return jule::new_ptr<_249c1117b_ImportInfo>(_249c1117b_ImportInfo{._field_Token=_42341_decl.get()._field_Token, ._field_Path=_43117_path, ._field_LinkPath=_42341_decl.get()._field_LinkPath, ._field_Ident=_45313_ident, ._field_Alias=_42341_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=_42341_decl.get()._field_Full, ._field_Package=jule::new_ptr<_249c140d5_Package>(_249c140d5_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_249c1117b_ImportInfo> _249bd13b0_buildImport(jule::Ptr<_249bd0557_symbolBuilder> _self_, jule::Ptr<_24905de14_UseDecl>& _47036_decl) {
	{
		
		if (_47036_decl.get()._field_CppLinked) {
			_case_begin_24e7d0d01:;
			{
				return _249bd1019_buildCppHeaderImport(_self_.ptr(), _47036_decl);
			}
		}
		else if (_47036_decl.get()._field_Std) {
			_case_begin_24e7d10a9:;
			{
				return _249bd114b_buildStdImport(_self_.ptr(), _47036_decl);
			}
		}
		else {
			_case_begin_24e7d0581:;
			{
				return _249bd127d_buildIdentImport(_self_, _47036_decl);
			}
		}
		_match_end_24e7d04a4:;
	};
}



inline jule::Bool _249bd14e2_checkDuplicateUseDecl(_249bd0557_symbolBuilder* _self_, jule::Ptr<_249c1117b_ImportInfo>& _48141_pkg) {
	jule::Bool _48161_ok = jule::Bool();
	jule::Ptr<_249c1117b_ImportInfo> _48313_lpkg = _249c7aa53_SelectPackage((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_249c1117b_ImportInfo>)>([=](jule::Ptr<_249c1117b_ImportInfo> _48348_spkg) mutable -> jule::Bool {
		return (_48141_pkg.get()._field_Path == _48348_spkg.get()._field_Path);
	}));;
	if ((_48313_lpkg == nullptr)) {
		_48161_ok = true;
		return _48161_ok;
	};
	_249bd0a41_pushErr(&(*_self_), _48141_pkg.get()._field_Token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48141_pkg.get()._field_LinkPath)}));
	_249bd0ca5_pushSuggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_48161_ok = false;
	return _48161_ok;
}



inline void _249bd1668_implImportSelections(_249bd0557_symbolBuilder* _self_, jule::Ptr<_249c1117b_ImportInfo>& _49544_imp, jule::Ptr<_24905de14_UseDecl>& _49567_decl) {
	_49544_imp.get()._field_Selected=_49567_decl.get()._field_Selected;
	{
		auto &expr = _49544_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_24e7d4d38:;
		if (it != expr.end()) {
			jule::Ptr<_23abd3d83_Token> _49716_item = *it;
			{
				{
					auto &expr = _49544_imp.get()._field_Selected;
					auto it = expr.begin();
					_iter_begin_24e7d59e8:;
					if (it != expr.end()) {
						jule::Ptr<_23abd3d83_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_24e7d59e8;
							} else if ((_49716_item.get()._field_Kind == _49820_citem.get()._field_Kind)) {
								_249bd0a41_pushErr(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_Kind)}));
								_249bd0ca5_pushSuggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_24e7d59e8;
							};
						}
						_iter_next_24e7d59e8:;
						++it;
						goto _iter_begin_24e7d59e8;
					}
					_iter_end_24e7d59e8:;
				};
			}
			_iter_next_24e7d4d38:;
			++it;
			goto _iter_begin_24e7d4d38;
		}
		_iter_end_24e7d4d38:;
	};
}



inline jule::Str _249bd1954_getAsLinkPath(jule::Ptr<_249bd0557_symbolBuilder> _self_, jule::Str _51037_path) {
	if (_23a82a128_HasPrefix(_51037_path,_23a8de9d4_PathStdlib)) {
		(_51037_path).mut_slice(_23a8de9d4_PathStdlib.len());;
		return (jule::Str("std", 3) + _23a830d65_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _51614_root;;
	std::tie(_51614_root,std::ignore) = _239894ea7_Abs(_249c0d50d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._249c0c672_GetModPath(_self_.get()._field_importer));
	(_51037_path).mut_slice(_51614_root.len());;
	if ((_51037_path[0LL] == 47LLU)) {
		(_51037_path).mut_slice(1LL);;
	};
	return _23a830d65_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _249bd1d1c_pushCycleError(jule::Ptr<_249bd0557_symbolBuilder> _self_, jule::Ptr<_249bd0557_symbolBuilder>& _52435_sb, jule::Str _52455_path, jule::Str& _52471_message) {
	;
	jule::Str _52613_refersTo = _23a8a61e8_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_249bd1954_getAsLinkPath(_self_, _23abd9b14_Dir(_52435_sb.get()._field_table.get()._field_File.ptr()))),jule::Any(_249bd1954_getAsLinkPath(_self_, _52455_path))}));;
	(_52471_message).buffer.insert(0, (((_23a811c47_Repeat(jule::Str(" ", 1),4LL) + _52613_refersTo) + jule::Str("\n", 1))));;
}



inline void _249bd21d5_pushCrossCycleError(jule::Ptr<_249bd0557_symbolBuilder> _self_, jule::Ptr<_249bd0557_symbolBuilder>& _53340_target, jule::Ptr<_249c1117b_ImportInfo>& _53365_imp, jule::Ptr<_23abd3d83_Token>& _53384_errorToken) {
	jule::Str _53417_message = jule::Str();;
	_249bd1d1c_pushCycleError(_self_, _self_,_53365_imp.get()._field_Path,_53417_message);
	jule::Ptr<_249bd0557_symbolBuilder> _53817_owner = _self_.get()._field_owner;;
	jule::Ptr<_249bd0557_symbolBuilder> _53917_old = _self_;;
	while ((_53817_owner.get()._field_owner != nullptr)) {
		{
			_249bd1d1c_pushCycleError(_self_, _53917_old.get()._field_owner,_23abd9b14_Dir(_53917_old.get()._field_table.get()._field_File.ptr()),_53417_message);
			if ((_53817_owner.get()._field_owner == _53340_target)) {
				_249bd1d1c_pushCycleError(_self_, _53340_target,_23abd9b14_Dir(_53817_owner.get()._field_table.get()._field_File.ptr()),_53417_message);
				goto _iter_end_24e7dcd74;
			};
			_53917_old=_53817_owner;
			_53817_owner=_53817_owner.get()._field_owner;
		}
	_iter_next_24e7dcd74:;
	}
	_iter_end_24e7dcd74:;;
	_249bd0a41_pushErr(_self_.ptr(), _53384_errorToken,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53417_message)}));
}



inline jule::Bool _249bd258c_checkImportCycles(jule::Ptr<_249bd0557_symbolBuilder> _self_, jule::Ptr<_249c1117b_ImportInfo> _55637_imp, jule::Ptr<_24905de14_UseDecl>& _55656_decl) {
	if ((_55637_imp.get()._field_Path == _23abd9b14_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_249bd0a41_pushErr(_self_.ptr(), _55656_decl.get()._field_Token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_249bd1954_getAsLinkPath(_self_, _55637_imp.get()._field_Path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_23abd9b14_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_249bd21d5_pushCrossCycleError(_self_, _self_.get()._field_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	jule::Ptr<_249bd0557_symbolBuilder> _57117_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_23abd9b14_Dir(_57117_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_249bd21d5_pushCrossCycleError(_self_, _57117_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	if ((_57117_owner.get()._field_owner != nullptr)) {
		_57117_owner=_57117_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _249bd2977_checkPackageAccessibility(_249bd0557_symbolBuilder* _self_, jule::Ptr<_24905de14_UseDecl>& _59245_decl, jule::Str& _59262_mod, jule::Str& _59273_path) {
	if (((_249c0d50d_Importer_mptr_data[((*_self_)._field_importer).type_offset]._249c0c672_GetModPath((*_self_)._field_importer) != _59262_mod) && _23a82eabc_Contains(_59273_path,jule::Str("internal", 8)))) {
		_249bd0a41_pushErr(&(*_self_), _59245_decl.get()._field_Token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _249bd2d40_importPackage(jule::Ptr<_249bd0557_symbolBuilder> _self_, jule::Ptr<_249c1117b_ImportInfo>& _59838_imp, jule::Ptr<_24905de14_UseDecl>& _59861_decl) {
	jule::Bool _59879_ok = jule::Bool();
	if (_59838_imp.get()._field_CppLinked) {
		_59879_ok = true;
		return _59879_ok;
	};
	jule::Ptr<_249c1117b_ImportInfo> _60317_port = _249c0d50d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._249c0cc8d_GetImport(_self_.get()._field_importer, _59838_imp.get()._field_Path);;
	if ((_60317_port != nullptr)) {
		_59838_imp.get()._field_Package=_60317_port.get()._field_Package;
		_59838_imp.get()._field_Duplicate=true;
		jule::Str _60817_oldMod = _249c0d50d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._249c0c672_GetModPath(_self_.get()._field_importer);;
		_249c0d50d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._249c0c430_SetModPath(_self_.get()._field_importer, _249c0d50d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._249c0c980_ModById(_self_.get()._field_importer, _59838_imp.get()._field_ModId));
		_249bd2977_checkPackageAccessibility(_self_.ptr(), _59861_decl,_60817_oldMod,_60317_port.get()._field_Path);
		_249c0d50d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._249c0c430_SetModPath(_self_.get()._field_importer, _60817_oldMod);
	} else {
		if ((!(_249bd258c_checkImportCycles(_self_, _59838_imp,_59861_decl)))) {
			_59879_ok = false;
			return _59879_ok;
		};
		jule::Str _61717_oldMod = _249c0d50d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._249c0c672_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_249c0d50d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._249c0c430_SetModPath(_self_.get()._field_importer, _61717_oldMod);
		});;
		if (_59838_imp.get()._field_Std) {
			_249c0d50d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._249c0c430_SetModPath(_self_.get()._field_importer, _23a8de9d4_PathStdlib);
		};
		jule::Slice<jule::Ptr<_24900ba82_Ast>> _62222_asts;;
		jule::Slice<_23a8a5ca8_Log> _62232_errors;;
		std::tie(_62222_asts,_62232_errors) = _249c0d50d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._249c0d145_ImportPackage(_self_.get()._field_importer, _59838_imp.get()._field_Path,(!(_59838_imp.get()._field_Std)));
		if ((_62232_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
			_59879_ok = false;
			return _59879_ok;
		};
		_249bd2977_checkPackageAccessibility(_self_.ptr(), _59861_decl,_61717_oldMod,_59838_imp.get()._field_Path);
		{
			auto &expr = _62222_asts;
			auto it = expr.begin();
			_iter_begin_24e7ee825:;
			if (it != expr.end()) {
				jule::Ptr<_24900ba82_Ast> _63025_ast = *it;
				{
					jule::Ptr<_249c7a228_SymbolTable> _63125_table = nullptr;;
					std::tie(_63125_table,_62232_errors) = _249ccc09e_buildSymbols(_63025_ast,_self_.get()._field_importer,_self_);
					if ((_62232_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
						_249bd0b73_pushErrText(_self_.ptr(), _59838_imp.get()._field_Token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_59838_imp.get()._field_LinkPath)}));
						_59879_ok = false;
						return _59879_ok;
					};
					_59838_imp.get()._field_Package.get()._field_Files = jule::alloc_for_append(_59838_imp.get()._field_Package.get()._field_Files,1);_59838_imp.get()._field_Package.get()._field_Files.__push(_63125_table);;
				}
				_iter_next_24e7ee825:;
				++it;
				goto _iter_begin_24e7ee825;
			}
			_iter_end_24e7ee825:;
		};
	};
	_249bd1668_implImportSelections(_self_.ptr(), _59838_imp,_59861_decl);
	_59879_ok = true;
	return _59879_ok;
}



inline jule::Ptr<_249c1117b_ImportInfo> _249bd314d_importUseDecl(jule::Ptr<_249bd0557_symbolBuilder> _self_, jule::Ptr<_24905de14_UseDecl>& _65038_decl) {
	jule::Ptr<_249c1117b_ImportInfo> _65117_imp = _249bd13b0_buildImport(_self_, _65038_decl);;
	if ((_65117_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _65717_ok = _249bd14e2_checkDuplicateUseDecl(_self_.ptr(), _65117_imp);;
	if ((!(_65717_ok))) {
		return nullptr;
	};
	_65717_ok=_249bd2d40_importPackage(_self_, _65117_imp,_65038_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_65117_imp);;
	if (_65717_ok) {
		_249c0d50d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._249c0d3ba_Imported(_self_.get()._field_importer, _65117_imp);
		return _65117_imp;
	};
	return nullptr;
}



inline void _249bd3329_importUseDecls(jule::Ptr<_249bd0557_symbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_UseDecls;
		auto it = expr.begin();
		_iter_begin_24e805584:;
		if (it != expr.end()) {
			jule::Ptr<_24905de14_UseDecl> _67221_decl = *it;
			{
				_249bd314d_importUseDecl(_self_, _67221_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_24e805584;
				};
			}
			_iter_next_24e805584:;
			++it;
			goto _iter_begin_24e805584;
		}
		_iter_end_24e805584:;
	};
}



inline void _249bd359e_appendNode(_249bd0557_symbolBuilder* _self_, _24900c731_Node& _68134_node) {
	{
		auto &_match_expr{ _68134_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_249062687_Impl>>()) {
			_case_begin_24e80bde8:;
			{
				(*_self_)._field_table.get()._field_Impls = jule::alloc_for_append((*_self_)._field_table.get()._field_Impls,1);(*_self_)._field_table.get()._field_Impls.__push(_249bd0425_buildImpl(_68134_node._field_Data.operator jule::Ptr<_249062687_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24905ca28_TypeAliasDecl>>()) {
			_case_begin_24e805c8d:;
			{
				jule::Ptr<_249caea98_TypeAlias> _68621_ta = _249bcda2d_buildTypeAlias(_68134_node._field_Data.operator jule::Ptr<_24905ca28_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_TypeAliases = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeAliases,1);(*_self_)._field_table.get()._field_TypeAliases.__push(_68621_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249061972_StructDecl>>()) {
			_case_begin_24e806c6c:;
			{
				jule::Ptr<_249036b01_Struct> _68921_srct = _249bcddc4_buildStruct(_68134_node._field_Data.operator jule::Ptr<_249061972_StructDecl>());;
				(*_self_)._field_table.get()._field_Structs = jule::alloc_for_append((*_self_)._field_table.get()._field_Structs,1);(*_self_)._field_table.get()._field_Structs.__push(_68921_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2490581d8_FnDecl>>()) {
			_case_begin_24e806cd3:;
			{
				jule::Ptr<_249bcbe38_Fn> _69221_f = _249bce39c_buildFn(_68134_node._field_Data.operator jule::Ptr<_2490581d8_FnDecl>());;
				(*_self_)._field_table.get()._field_Funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_Funcs,1);(*_self_)._field_table.get()._field_Funcs.__push(_69221_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24906207c_TraitDecl>>()) {
			_case_begin_24e806d49:;
			{
				jule::Ptr<_249bd48d0_Trait> _69521_t = _249bce611_buildTrait(_68134_node._field_Data.operator jule::Ptr<_24906207c_TraitDecl>());;
				(*_self_)._field_table.get()._field_Traits = jule::alloc_for_append((*_self_)._field_table.get()._field_Traits,1);(*_self_)._field_table.get()._field_Traits.__push(_69521_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2490591b7_VarDecl>>()) {
			_case_begin_24e80c503:;
			{
				jule::Ptr<_249c3702b_Var> _69821_v = _249bd01b1_buildVar(_68134_node._field_Data.operator jule::Ptr<_2490591b7_VarDecl>());;
				(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_69821_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24905edb0_EnumDecl>>()) {
			_case_begin_24e80c57a:;
			{
				jule::Ptr<_249bd6a25_Enum> _70121_e = _249bce9a7_buildEnum(_68134_node._field_Data.operator jule::Ptr<_24905edb0_EnumDecl>());;
				(*_self_)._field_table.get()._field_Enums = jule::alloc_for_append((*_self_)._field_table.get()._field_Enums,1);(*_self_)._field_table.get()._field_Enums.__push(_70121_e);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249060ab4_TypeEnumDecl>>()) {
			_case_begin_24e80c602:;
			{
				jule::Ptr<_249bd8120_TypeEnum> _70421_e = _249bd007e_buildTypeEnum(_68134_node._field_Data.operator jule::Ptr<_249060ab4_TypeEnumDecl>());;
				(*_self_)._field_table.get()._field_TypeEnums = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeEnums,1);(*_self_)._field_table.get()._field_TypeEnums.__push(_70421_e);;
			}
		}
		else {
			_case_begin_24e805d37:;
			{
				_249bd0a41_pushErr(&(*_self_), _68134_node._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_24e806b5c:;
	};
}



inline void _249bd377a_appendNodes(_249bd0557_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_Nodes;
		auto it = expr.begin();
		_iter_begin_24e815819:;
		if (it != expr.end()) {
			_24900c731_Node _71221_node = *it;
			{
				_249bd359e_appendNode(&(*_self_), _71221_node);
			}
			_iter_next_24e815819:;
			++it;
			goto _iter_begin_24e815819;
		}
		_iter_end_24e815819:;
	};
}



inline void _249bd3a00_pushDirectivePass(_249bd0557_symbolBuilder* _self_, jule::Ptr<_24900cb2c_Directive>& _71741_d) {
	if ((_71741_d.get()._field_Args.len() == 0LL)) {
		_249bd0a41_pushErr(&(*_self_), _71741_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71741_d.get()._field_Args.len() > 1LL)) {
		jule::Ptr<_23abd3d83_Token> _72217_arg = _71741_d.get()._field_Args[1LL];;
		_249bd0a41_pushErr(&(*_self_), _72217_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_23abd3d83_Token> _72613_arg = _71741_d.get()._field_Args[0LL];;
	if ((_72613_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_249bd0a41_pushErr(&(*_self_), _72613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72613_arg.get()._field_Kind[0LL] != '\"')) {
		_249bd0a41_pushErr(&(*_self_), _72613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_Passes = jule::alloc_for_append((*_self_)._field_table.get()._field_Passes,1);(*_self_)._field_table.get()._field_Passes.__push(_249bcd5cc_Pass{._field_Token=_71741_d.get()._field_Tag, ._field_Text=_72613_arg.get()._field_Kind.slice(1LL,(_72613_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _249bd3bcb_appendTopDirectives(_249bd0557_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_24e8194aa:;
		if (it != expr.end()) {
			jule::Ptr<_24900cb2c_Directive> _74421_d = *it;
			{
				{
					auto &_match_expr{ _74421_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_24e81cbc8:;
						{
							_249bd3a00_pushDirectivePass(&(*_self_), _74421_d);
						}
					}
					_match_end_24e81c898:;
				};
			}
			_iter_next_24e8194aa:;
			++it;
			goto _iter_begin_24e8194aa;
		}
		_iter_end_24e8194aa:;
	};
}



inline void _249bd3da7_build(jule::Ptr<_249bd0557_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_249c7a228_SymbolTable>(_249c7a228_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_249bd3bcb_appendTopDirectives(_self_.ptr());
	_249bd3329_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_249bd377a_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _249bd0557_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _249bd4ccb_Str(_249bd48d0_Trait* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _249bd50d9_Equals(jule::Ptr<_249bd48d0_Trait> _self_, jule::Ptr<_249cb078b_TypeKind> _2522_other) {
	jule::Ptr<_249bd48d0_Trait> _2613_trt = _249cb4064_Trait(_2522_other.ptr());;
	return (_self_ == _2613_trt);
}



inline jule::Bool _249bd544c_IsBuiltin(_249bd48d0_Trait* _self_) {
	return ((*_self_)._field_Token == nullptr);
}



inline jule::Ptr<_249bcbe38_Fn> _249bd575a_FindMethod(_249bd48d0_Trait* _self_, jule::Str _3929_ident) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_24e8220ea:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3929_ident)) {
					return _4021_f;
				};
			}
			_iter_next_24e8220ea:;
			++it;
			goto _iter_begin_24e8220ea;
		}
		_iter_end_24e8220ea:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _249bd48d0_Trait _Src) {
	_Stream << _249bd4ccb_Str(&_Src);
	return _Stream;
}



inline jule::Bool _249bd641a_AutoExpr(_249bd6030_EnumItem* _self_) {
	return ((*_self_)._field_Value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _249bd6030_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _249bd6d88_Str(_249bd6a25_Enum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _249bd7196_Equals(jule::Ptr<_249bd6a25_Enum> _self_, jule::Ptr<_249cb078b_TypeKind> _3822_other) {
	jule::Ptr<_249bd6a25_Enum> _3913_enm = _249cb30da_Enum(_3822_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_249bd6030_EnumItem> _249bd75d6_FindItem(_249bd6a25_Enum* _self_, jule::Str _4727_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_24e824a7b:;
		if (it != expr.end()) {
			jule::Ptr<_249bd6030_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;
				};
			}
			_iter_next_24e824a7b:;
			++it;
			goto _iter_begin_24e824a7b;
		}
		_iter_end_24e824a7b:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _249bd6a25_Enum _Src) {
	_Stream << _249bd6d88_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249bd7a59_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _249bd8450_Str(_249bd8120_TypeEnum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _249bd875d_Equals(jule::Ptr<_249bd8120_TypeEnum> _self_, jule::Ptr<_249cb078b_TypeKind> _8022_other) {
	jule::Ptr<_249bd8120_TypeEnum> _8113_tenm = _249cb334e_TypeEnum(_8022_other.ptr());;
	return (_self_ == _8113_tenm);
}



inline jule::Ptr<_249bd7a59_TypeEnumItem> _249bd8b59_FindItem(_249bd8120_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_24e826e13:;
		if (it != expr.end()) {
			jule::Ptr<_249bd7a59_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;
				};
			}
			_iter_next_24e826e13:;
			++it;
			goto _iter_begin_24e826e13;
		}
		_iter_end_24e826e13:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _249bd8120_TypeEnum _Src) {
	_Stream << _249bd8450_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_249c192c7_Sema>&,jule::Slice<jule::Ptr<_249caea98_TypeAlias>>&)> _249bdaac3_readyFn(jule::Ptr<_249bda694_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_249c192c7_Sema>&,jule::Slice<jule::Ptr<_249caea98_TypeAlias>>&)>([=](jule::Ptr<_249c192c7_Sema>& _6321_sema, jule::Slice<jule::Ptr<_249caea98_TypeAlias>>& _6339_generics) mutable -> jule::Bool {
		{
			auto &expr = _self_.get()._field_genericsD;
			auto it = expr.begin();
			_iter_begin_24e83552b:;
			if (it != expr.end()) {
				jule::I64 _6418_i = it - expr.begin();
				jule::Ptr<_2490539a8_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_249cae05e_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_24e83552b;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_249cb078b_TypeKind>>::alloc(0LL,_6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto &expr = _6425_g.get()._field_Constraint.get()._field_Mask;
						auto it = expr.begin();
						_iter_begin_24e8380cd:;
						if (it != expr.end()) {
							jule::Ptr<_2490463c4_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = _6321_sema.get()._field_errors.len();;
								jule::Ptr<_249cb078b_TypeKind> _7229_kind = _249c215cb_buildTypeWithRefers(_6321_sema, _7029_mask,jule::Trait<_249ccb3bc_Lookup>(_6321_sema, 3),_6339_generics,nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type_is<jule::Ptr<_24904698a_IdentTypeDecl>>()) {
											_case_begin_24e839cc2:;
											{
												jule::Ptr<_24904698a_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.operator jule::Ptr<_24904698a_IdentTypeDecl>();;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _249bdbc5b_isBuiltinConstraint(_7637_itd.get()._field_Ident))) {
													_7229_kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													_6321_sema.get()._field_errors=_6321_sema.get()._field_errors.slice(0LL,_7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_24e838a90:;
									};
									return false;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_24e8380cd:;
							++it;
							goto _iter_begin_24e8380cd;
						}
						_iter_end_24e8380cd:;
					};
				}
				_iter_next_24e83552b:;
				++it;
				_6418_i++;
				goto _iter_begin_24e83552b;
			}
			_iter_end_24e83552b:;
		};
		return true;
	});
}



inline jule::Bool _249bdad37_readyFi(jule::Ptr<_249bda694_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _249c259cb_fnEnvironment(_self_.get()._field_s, _self_.get()._field_fi,_249bdaac3_readyFn(_self_)));
}



inline jule::Bool _249bdb09b_readySi(jule::Ptr<_249bda694_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _249bdaac3_readyFn(_self_)(_self_.get()._field_s,_self_.get()._field_genericsA));
}



inline jule::Bool _249bdb310_ready(jule::Ptr<_249bda694_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _249bdad37_readyFi(_self_);
	};
	return _249bdb09b_readySi(_self_);
}



inline jule::Bool _249bdb574_check(jule::Ptr<_249bda694_constraintChecker> _self_) {
	if ((!(_249bdb310_ready(_self_)))) {
		return false;
	};
	_julec_label_lookup:;
	{
		auto &expr = _self_.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_24e842406:;
		if (it != expr.end()) {
			jule::I64 _11914_i = it - expr.begin();
			jule::Ptr<_249cae05e_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_24e842406;
				};
				{
					auto &expr = _11921_g.get()._field_Constraint;
					auto it = expr.begin();
					_iter_begin_24e8433b3:;
					if (it != expr.end()) {
						jule::Ptr<_249cb078b_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_249cb5263_Prim> _12425_prim = _249cb289d_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _249cb5d57_IsConstraint(_12425_prim.ptr()))) {
								if (_249bdb970_matchConstraint(_12425_prim.get()._field_Kind,_11921_g.get()._field_Kind)) {
									goto _iter_next_24e842406;
								};
								goto _iter_next_24e8433b3;
							};
							if (_249cb0e95_Equals(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_24e842406;
							};
						}
						_iter_next_24e8433b3:;
						++it;
						goto _iter_begin_24e8433b3;
					}
					_iter_end_24e8433b3:;
				};
				_249c1be89_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et,jule::Str("type @ is not matched with @'s constraint", 41),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_11921_g.get()._field_Kind.ptr())),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident)}));
				return false;
			}
			_iter_next_24e842406:;
			++it;
			_11914_i++;
			goto _iter_begin_24e842406;
		}
		_iter_end_24e842406:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _249bda694_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _249bdc9c6_IsTraitImpl(_249bdc5ca_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _249bdcc3a_IsStructImpl(_249bdc5ca_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _249bdc5ca_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249be2635_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249be2a31_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249be2d1c_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249be3191_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249be347c_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _249be3c96_IsWhileNext(_249be3900_WhileIter* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _249be3900_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249be42d5_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249be46d1_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249be4a88_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249be4d74_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249be5160_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249be5517_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249be598a_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249be5d42_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _249be688c_IsGenericTypeMatch(_249be6381_Match* _self_) {
	return (((*_self_)._field_TypeMatch && ((*_self_)._field_Expr != nullptr)) && (*_self_)._field_Expr.get()._field_Kind.get()._field_Generic);
}







std::ostream &operator<<(std::ostream &_Stream, _249be6381_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _249be7195_isDefault(_249be6dcb_Case* _self_) {
	return ((*_self_)._field_Exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _249be6dcb_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249be7481_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249be7904_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249be800e_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249be8482_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_249c1117b_ImportInfo> _249be96e7_FindPackage(_249be9296_scopeChecker* _self_, jule::Str _45630_ident) {
	return _249c197e4_FindPackage((*_self_)._field_s.ptr(), _45630_ident);
}



inline jule::Ptr<_249c1117b_ImportInfo> _249be9a05_SelectPackage(_249be9296_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_249c1117b_ImportInfo>)> _46632_selector) {
	return _249c19b02_SelectPackage((*_self_)._field_s.ptr(), _46632_selector);
}



inline jule::Ptr<_249c3702b_Var> _249be9dac_FindVar(_249be9296_scopeChecker* _self_, jule::Str _47726_ident, jule::Bool _47738_cpp_linked) {
	;
	jule::Ptr<_249c3702b_Var> _48017_v = _249c7c9bc_findVar((*_self_)._field_table.ptr(), _47726_ident,_47738_cpp_linked,true);;
	if ((_48017_v != nullptr)) {
		return _48017_v;
	};
	jule::Ptr<_249be9296_scopeChecker> _48517_parent = (*_self_)._field_parent;;
	while ((_48517_parent != nullptr)) {
		{
			_48017_v=_249c7c9bc_findVar(_48517_parent.get()._field_table.ptr(), _47726_ident,_47738_cpp_linked,true);
			if ((_48017_v != nullptr)) {
				return _48017_v;
			};
			_48517_parent=_48517_parent.get()._field_parent;
		}
	_iter_next_24e87159a:;
	}
	_iter_end_24e87159a:;;
	return _249c19ea9_FindVar((*_self_)._field_s.ptr(), _47726_ident,_47738_cpp_linked);
}



inline jule::Ptr<_249caea98_TypeAlias> _249bea264_FindTypeAlias(_249be9296_scopeChecker* _self_, jule::Str _50432_ident, jule::Bool _50444_cppLinked) {
	;
	jule::Ptr<_249caea98_TypeAlias> _50717_ta = _249c7ce1d_findTypeAlias((*_self_)._field_table.ptr(), _50432_ident,_50444_cppLinked,true);;
	if ((_50717_ta != nullptr)) {
		return _50717_ta;
	};
	jule::Ptr<_249be9296_scopeChecker> _51217_parent = (*_self_)._field_parent;;
	while ((_51217_parent != nullptr)) {
		{
			_50717_ta=_249c7ce1d_findTypeAlias(_51217_parent.get()._field_table.ptr(), _50432_ident,_50444_cppLinked,true);
			if ((_50717_ta != nullptr)) {
				return _50717_ta;
			};
			_51217_parent=_51217_parent.get()._field_parent;
		}
	_iter_next_24e87469c:;
	}
	_iter_end_24e87469c:;;
	return _249c1a361_FindTypeAlias((*_self_)._field_s.ptr(), _50432_ident,_50444_cppLinked);
}



inline jule::Ptr<_249036b01_Struct> _249bea61b_FindStruct(_249be9296_scopeChecker* _self_, jule::Str _52929_ident, jule::Bool _52941_cppLinked) {
	return _249c1a718_FindStruct((*_self_)._field_s.ptr(), _52929_ident,_52941_cppLinked);
}



inline jule::Ptr<_249bcbe38_Fn> _249bea9c3_FindFn(_249be9296_scopeChecker* _self_, jule::Str _53825_ident, jule::Bool _53837_cppLinked) {
	return _249c1aac0_FindFn((*_self_)._field_s.ptr(), _53825_ident,_53837_cppLinked);
}



inline jule::Ptr<_249bd48d0_Trait> _249beacd1_FindTrait(_249be9296_scopeChecker* _self_, jule::Str _54728_ident) {
	return _249c1adcd_FindTrait((*_self_)._field_s.ptr(), _54728_ident);
}



inline jule::Ptr<_249bd6a25_Enum> _249beb0de_FindEnum(_249be9296_scopeChecker* _self_, jule::Str _55627_ident) {
	return _249c1b1db_FindEnum((*_self_)._field_s.ptr(), _55627_ident);
}



inline jule::Ptr<_249bd8120_TypeEnum> _249beb3ec_FindTypeEnum(_249be9296_scopeChecker* _self_, jule::Str _56531_ident) {
	return _249c1b4e9_FindTypeEnum((*_self_)._field_s.ptr(), _56531_ident);
}



inline jule::Bool _249beb72c_isUnsafe(jule::Ptr<_249be9296_scopeChecker> _self_) {
	jule::Ptr<_249be9296_scopeChecker> _57317_scope = _self_;;
	_julec_label_iter:;
	if (_57317_scope.get()._field_scope.get()._field_Unsafety) {
		return true;
	};
	if ((_57317_scope.get()._field_parent != nullptr)) {
		_57317_scope=_57317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _249beb991_isRoot(_249be9296_scopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _249bebb6c_stop(_249be9296_scopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _249bebdd1_stopped(_249be9296_scopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _249bec145_isDeferred(jule::Ptr<_249be9296_scopeChecker> _self_) {
	jule::Ptr<_249be9296_scopeChecker> _60617_scope = _self_;;
	_julec_label_iter:;
	if (_60617_scope.get()._field_scope.get()._field_Deferred) {
		return true;
	};
	if ((_60617_scope.get()._field_parent != nullptr)) {
		_60617_scope=_60617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_249be9296_scopeChecker> _249bec3a9_getRoot(jule::Ptr<_249be9296_scopeChecker> _self_) {
	jule::Ptr<_249be9296_scopeChecker> _62417_root = _self_;;
	while (((_62417_root.get()._field_parent != nullptr) && (_62417_root.get()._field_owner == nullptr))) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_24e87e3cc:;
	}
	_iter_end_24e87e3cc:;;
	return _62417_root;
}



inline jule::Ptr<_249be9296_scopeChecker> _249bec61d_getHardRoot(jule::Ptr<_249be9296_scopeChecker> _self_) {
	jule::Ptr<_249be9296_scopeChecker> _63417_root = _self_;;
	while ((_63417_root.get()._field_parent != nullptr)) {
		{
			_63417_root=_63417_root.get()._field_parent;
		}
	_iter_next_24e880774:;
	}
	_iter_end_24e880774:;;
	return _63417_root;
}



inline jule::Ptr<_249be4d74_Label> _249bec92b_findLabel(_249be9296_scopeChecker* _self_, jule::Str _64428_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_24e881412:;
		if (it != expr.end()) {
			jule::Any _64521_st = *it;
			{
				{
					auto &_match_expr{ _64521_st };
					
					if (_match_expr.type_is<jule::Ptr<_249be4d74_Label>>()) {
						_case_begin_24e881e3a:;
						{
							jule::Ptr<_249be4d74_Label> _64825_label = _64521_st.operator jule::Ptr<_249be4d74_Label>();;
							if ((_64825_label.get()._field_Ident == _64428_ident)) {
								return _64825_label;
							};
						}
					}
					_match_end_24e881d2a:;
				};
			}
			_iter_next_24e881412:;
			++it;
			goto _iter_begin_24e881412;
		}
		_iter_end_24e881412:;
	};
	return nullptr;
}



inline jule::Ptr<_249be800e_scopeLabel> _249becc39_findLabelScope(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Str _66034_ident) {
	jule::Ptr<_249be800e_scopeLabel> _66117_label = _249bed047_findLabelAll(_self_.ptr(), _66034_ident);;
	if (((_66117_label != nullptr) && (_66117_label.get()._field_scope == _self_))) {
		return _66117_label;
	};
	return nullptr;
}



inline jule::Ptr<_249be800e_scopeLabel> _249bed047_findLabelAll(_249be9296_scopeChecker* _self_, jule::Str _67231_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_24e884448:;
		if (it != expr.end()) {
			jule::Ptr<_249be800e_scopeLabel> _67321_lbl = *it;
			{
				if ((_67321_lbl.get()._field_label.get()._field_Ident == _67231_ident)) {
					return _67321_lbl;
				};
			}
			_iter_next_24e884448:;
			++it;
			goto _iter_begin_24e884448;
		}
		_iter_end_24e884448:;
	};
	return nullptr;
}



inline jule::Bool _249bed3ee_isDuplicatedIdent(_249be9296_scopeChecker* _self_, jule::Uintptr _68436_itself, jule::Str _68453_ident) {
	jule::Ptr<_249c3702b_Var> _68513_v = _249be9dac_FindVar(&(*_self_), _68453_ident,false);;
	if (((_68513_v != nullptr) && (static_cast<jule::Uintptr>(_68513_v) != _68436_itself))) {
		if ((_68513_v.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_68513_v.get()._field_Scope == (*_self_)._field_scope) || (!(_249c1b84b_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	jule::Ptr<_249caea98_TypeAlias> _69313_ta = _249bea264_FindTypeAlias(&(*_self_), _68453_ident,false);;
	if (((_69313_ta != nullptr) && (static_cast<jule::Uintptr>(_69313_ta) != _68436_itself))) {
		if ((_69313_ta.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_69313_ta.get()._field_Scope == (*_self_)._field_tree) || (!(_249c1b84b_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	return false;
}



inline void _249bed674_checkVarDecl(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_2490591b7_VarDecl> _70436_decl) {
	jule::Ptr<_249c3702b_Var> _70517_v = _249bd01b1_buildVar(_70436_decl);;
	_70517_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70517_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_70517_v));;
	});;
	if (_249bed3ee_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70517_v)),_70517_v.get()._field_Ident)) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _70517_v.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70517_v.get()._field_Ident)}));
		_249c1c2a8_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_249bebb6c_stop(_self_.ptr());
		return;;
	};
	_249c2b44e_checkVarDecl(_self_.get()._field_s, _70517_v,jule::Trait<_249ccb3bc_Lookup>(_self_, 0));
	if (((!(_249c37658_IsTypeInferred(_70517_v.ptr()))) && ((_70517_v.get()._field_Kind == nullptr) || (_70517_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_249c2ea90_checkTypeVar(_self_.get()._field_s, _70517_v,jule::Trait<_249ccb3bc_Lookup>(_self_, 0));
}



inline void _249bed8e9_checkTypeAliasDecl(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24905ca28_TypeAliasDecl> _72842_decl) {
	jule::Ptr<_249caea98_TypeAlias> _72917_ta = _249bcda2d_buildTypeAlias(_72842_decl);;
	if (_249bed3ee_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72917_ta)),_72917_ta.get()._field_Ident)) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _72917_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72917_ta.get()._field_Ident)}));
		_249c1c2a8_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_249bebb6c_stop(_self_.ptr());
		return;;
	};
	_249c27291_checkTypeAliasDecl(_self_.get()._field_s, _72917_ta,jule::Trait<_249ccb3bc_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72917_ta);;
	if ((_72917_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_249bebb6c_stop(_self_.ptr());
	};
}



inline jule::Ptr<_249be2635_Scope> _249bedb5d_getChild(_249be9296_scopeChecker* _self_) {
	return jule::new_ptr<_249be2635_Scope>(_249be2635_Scope{._field_Parent=(*_self_)._field_scope, });
}



inline void _249bee026_checkChildSsc(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_2490566e2_ScopeTree>& _75238_tree, jule::Ptr<_249be2635_Scope>& _75261_s, jule::Ptr<_249be9296_scopeChecker>& _75277_ssc) {
	_75277_ssc.get()._field_parent=_self_;
	_249c092d9_check(_75277_ssc, _75238_tree,_75261_s);
}



inline jule::Ptr<_249be2635_Scope> _249bee3cd_checkChildSc(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_2490566e2_ScopeTree>& _75737_tree, jule::Ptr<_249be9296_scopeChecker>& _75760_ssc) {
	jule::Ptr<_249be2635_Scope> _75817_s = _249bedb5d_getChild(_self_.ptr());;
	_249bee026_checkChildSsc(_self_, _75737_tree,_75817_s,_75760_ssc);
	return _75817_s;
}



inline jule::Ptr<_249be2635_Scope> _249bee6db_checkChild(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_2490566e2_ScopeTree>& _76335_tree) {
	jule::Ptr<_249be9296_scopeChecker> _76417_ssc = _249c0954d_newChildChecker(_self_);;
	return _249bee3cd_checkChildSc(_self_, _76335_tree,_76417_ssc);
}



inline void _249bee961_checkAnonScope(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_2490566e2_ScopeTree> _76838_tree) {
	jule::Ptr<_249be2635_Scope> _76917_s = _249bee6db_checkChild(_self_, _76838_tree);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_76917_s));;
}



inline void _249beec80_processErrorCall(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel>& _77341_m, jule::Ptr<_23abd3d83_Token> _77372_err) {
	if (_249bec145_isDeferred(_self_)) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _77372_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249be9296_scopeChecker> _77817_root = _249bec3a9_getRoot(_self_);;
	if ((!(_77817_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _77372_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_249c1c2a8_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77341_m.get()._field_Func=_77817_root.get()._field_owner;
}



inline void _249c00005_checkExpr(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24904a8e5_Expr> _78633_expr) {
	jule::Ptr<_249c81ac0_Eval> _78717_eval = _249c23875_eval(_self_.get()._field_s, jule::Trait<_249ccb3bc_Lookup>(_self_, 0));;
	_78717_eval.get()._field_ignored=true;
	jule::Ptr<_249c80052_Data> _78917_d = _249ca1e86_evalExpr(_78717_eval, _78633_expr);;
	if ((_78917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78917_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel>>()) {
			_case_begin_24e89c098:;
			{
				jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel> _79621_m = _78917_d.get()._field_Model.operator jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel>();;
				_249beec80_processErrorCall(_self_, _79621_m,_78633_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcb4a9_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_249bc9ce3_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_249bc9353_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_249bc8e79_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_249bc9166_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_249bc972c_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_249bc9919_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_249bca82c_BuiltinCopyCallExprModel>>() || _match_expr.type_is<jule::Ptr<_249bc80bb_BuiltinDeleteCallExprModel>>() || _match_expr.type_is<jule::Ptr<_249bcb696_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_249bc7065_FnCallExprModel>>()) {
			_case_begin_24e89c30c:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else {
			_case_begin_24e89be44:;
			{
				_249c1be89_pushErr(_self_.get()._field_s.ptr(), _78633_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_24e89bd45:;
	};
}



inline void _249c0027a_checkCoExpr(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24904c4da_CoExpr> _81635_expr) {
	jule::Ptr<_249c81ac0_Eval> _81717_eval = _249c23875_eval(_self_.get()._field_s, jule::Trait<_249ccb3bc_Lookup>(_self_, 0));;
	_81717_eval.get()._field_ignored=true;
	jule::Ptr<_249c80052_Data> _81917_d = _249ca1e86_evalExpr(_81717_eval, _81635_expr.get()._field_Expr);;
	if ((_81917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _81917_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_249bc7065_FnCallExprModel>>()) {
			_case_begin_24e8a29e9:;
			{
				jule::Ptr<_249bc7065_FnCallExprModel> _82621_model = _81917_d.get()._field_Model.operator jule::Ptr<_249bc7065_FnCallExprModel>();;
				if (_82621_model.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
					_249c1be89_pushErr(_self_.get()._field_s.ptr(), _81635_expr.get()._field_Token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_249c1c2a8_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				};
				_82621_model.get()._field_IsCo=true;
				_249c99588_checkFnOfConcurrentCall(_81717_eval.ptr(), _82621_model.get()._field_Func,_81635_expr.get()._field_Expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_81917_d));;
			}
		}
		else {
			_case_begin_24e8a2741:;
			{
				_249c1be89_pushErr(_self_.get()._field_s.ptr(), _81635_expr.get()._field_Token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_24e8a2895:;
	};
}



inline jule::Ptr<_249be2a31_If> _249c00588_checkIf(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24905ba27_If> _84031_i) {
	jule::Ptr<_249be2635_Scope> _84117_s = _249bee6db_checkChild(_self_, _84031_i.get()._field_Scope);;
	jule::Ptr<_249c80052_Data> _84317_d = _249ca1e86_evalExpr(_249c23875_eval(_self_.get()._field_s, jule::Trait<_249ccb3bc_Lookup>(_self_, 0)), _84031_i.get()._field_Expr);;
	if ((_84317_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_249cb5263_Prim> _84817_prim = _249cb289d_Prim(_84317_d.get()._field_Kind.ptr());;
	if (((_84817_prim == nullptr) || (!(_249cb8233_IsBool(_84817_prim.ptr()))))) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _84031_i.get()._field_Expr.get()._field_Token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_249be2a31_If>(_249be2a31_If{._field_Expr=_84317_d.get()._field_Model, ._field_Scope=_84117_s});
}



inline jule::Ptr<_249be2d1c_Else> _249c00896_checkElse(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24905bdce_Else> _86033_e) {
	return jule::new_ptr<_249be2d1c_Else>(_249be2d1c_Else{._field_Scope=_249bee6db_checkChild(_self_, _86033_e.get()._field_Scope)});
}



inline void _249c00b1b_checkConditional(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24905c352_Conditional> _86640_conditional) {
	jule::Ptr<_249be3191_Conditional> _86717_c = jule::new_ptr<_249be3191_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_86717_c));;
	_86717_c.get()._field_Elifs=jule::Slice<jule::Ptr<_249be2a31_If>>::alloc(0LL,(_86640_conditional.get()._field_Tail.len() + 1LL));
	_86717_c.get()._field_Elifs = jule::alloc_for_append(_86717_c.get()._field_Elifs,1);_86717_c.get()._field_Elifs.__push(_249c00588_checkIf(_self_, _86640_conditional.get()._field_Head));;
	{
		auto &expr = _86640_conditional.get()._field_Tail;
		auto it = expr.begin();
		_iter_begin_24e8ab2a5:;
		if (it != expr.end()) {
			jule::Ptr<_24905ba27_If> _87321_elif = *it;
			{
				_86717_c.get()._field_Elifs = jule::alloc_for_append(_86717_c.get()._field_Elifs,1);_86717_c.get()._field_Elifs.__push(_249c00588_checkIf(_self_, _87321_elif));;
			}
			_iter_next_24e8ab2a5:;
			++it;
			goto _iter_begin_24e8ab2a5;
		}
		_iter_end_24e8ab2a5:;
	};
	if ((_86640_conditional.get()._field_Default != nullptr)) {
		_86717_c.get()._field_Default=_249c00896_checkElse(_self_, _86640_conditional.get()._field_Default);
	};
}



inline void _249c0107d_checkIterScopeSsc(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Uintptr _88237_it, jule::Ptr<_2490566e2_ScopeTree> _88254_tree, jule::Ptr<_249be2635_Scope>& _88277_s, jule::Ptr<_249be9296_scopeChecker> _88292_ssc) {
	_88292_ssc.get()._field_it=_88237_it;
	_249bee026_checkChildSsc(_self_, _88254_tree,_88277_s,_88292_ssc);
}



inline jule::Ptr<_249be2635_Scope> _249c014ce_checkIterScopeSc(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Uintptr _88736_it, jule::Ptr<_2490566e2_ScopeTree> _88753_tree, jule::Ptr<_249be9296_scopeChecker> _88775_ssc) {
	jule::Ptr<_249be2635_Scope> _88817_scope = _249bedb5d_getChild(_self_.ptr());;
	_249c0107d_checkIterScopeSsc(_self_, _88736_it,_88753_tree,_88817_scope,_88775_ssc);
	return _88817_scope;
}



inline jule::Ptr<_249be2635_Scope> _249c01886_checkIterScope(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Uintptr _89334_it, jule::Ptr<_2490566e2_ScopeTree>& _89352_tree) {
	jule::Ptr<_249be9296_scopeChecker> _89417_ssc = _249c0954d_newChildChecker(_self_);;
	return _249c014ce_checkIterScopeSc(_self_, _89334_it,_89352_tree,_89417_ssc);
}



inline void _249c01b0b_checkInfIter(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_249059bce_Iter>& _89837_it) {
	jule::Ptr<_249be347c_InfIter> _89917_kind = jule::new_ptr<_249be347c_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_89917_kind));;
	_89917_kind.get()._field_Scope=_249c01886_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89917_kind)),_89837_it.get()._field_Scope);
}



inline void _249c01d81_checkWhileIter(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_249059bce_Iter>& _90439_it) {
	jule::Ptr<_24905a4a4_WhileKind> _90517_wh = _90439_it.get()._field_Kind.operator jule::Ptr<_24905a4a4_WhileKind>();;
	if (((_90517_wh.get()._field_Expr == nullptr) && (_90517_wh.get()._field_Next == nullptr))) {
		_249c01b0b_checkInfIter(_self_, _90439_it);
		return;;
	};
	jule::Ptr<_249be3900_WhileIter> _91117_kind = jule::new_ptr<_249be3900_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_91117_kind));;
	_91117_kind.get()._field_Scope=_249c01886_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_91117_kind)),_90439_it.get()._field_Scope);
	if ((_90517_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_249c80052_Data> _91621_d = _249ca1e86_evalExpr(_249c23875_eval(_self_.get()._field_s, jule::Trait<_249ccb3bc_Lookup>(_self_, 0)), _90517_wh.get()._field_Expr);;
		if ((_91621_d == nullptr)) {
			return;;
		};
		jule::Ptr<_249cb5263_Prim> _92117_prim = _249cb289d_Prim(_91621_d.get()._field_Kind.ptr());;
		if ((_92117_prim == nullptr)) {
			_249c1be89_pushErr(_self_.get()._field_s.ptr(), _90439_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_249cb8233_IsBool(_92117_prim.ptr())))) {
			_249c1be89_pushErr(_self_.get()._field_s.ptr(), _90439_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_91117_kind.get()._field_Expr=_91621_d.get()._field_Model;
	};
	if (_24905a806_IsWhileNext(_90517_wh.ptr())) {
		if ((!(_249be1b62_isValidAstStForNextSt(_90517_wh.get()._field_Next)))) {
			_249c1be89_pushErr(_self_.get()._field_s.ptr(), _90517_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _94117_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_249c08085_checkNode(_self_, _90517_wh.get()._field_Next);
		if ((_94117_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _94425_st = _self_.get()._field_scope.get()._field_Stmts[_94117_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL,_94117_n);
			if ((!(_249be1e09_isValidStForNextSt(_94425_st)))) {
				_249c1be89_pushErr(_self_.get()._field_s.ptr(), _90517_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_91117_kind.get()._field_Next=_94425_st;
		};
	};
}



inline void _249c02106_checkRangeIter(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_249059bce_Iter>& _95439_it) {
	jule::Ptr<_24905ad45_RangeKind> _95517_rang = _95439_it.get()._field_Kind.operator jule::Ptr<_24905ad45_RangeKind>();;
	jule::Ptr<_249c80052_Data> _95717_d = _249ca1e86_evalExpr(_249c23875_eval(_self_.get()._field_s, jule::Trait<_249ccb3bc_Lookup>(_self_, 0)), _95517_rang.get()._field_Expr);;
	if ((_95717_d == nullptr)) {
		return;;
	};
	jule::Ptr<_249be42d5_RangeIter> _96217_kind = jule::new_ptr<_249be42d5_RangeIter>(_249be42d5_RangeIter{._field_Expr=_95717_d, });;
	_249c76026_rangeChecker _96617_rc = _249c76026_rangeChecker{._field_sc=_self_, ._field_rang=_95517_rang, ._field_Kind=_96217_kind, ._field_d=_95717_d};;
	jule::Bool _97213_ok = _249c778da_check(&_96617_rc);;
	if ((!(_97213_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_96217_kind));;
	jule::Ptr<_249be9296_scopeChecker> _97917_ssc = _249c0954d_newChildChecker(_self_);;
	jule::Ptr<_249be2635_Scope> _98017_scope = _249bedb5d_getChild(_self_.ptr());;
	if ((_96217_kind.get()._field_KeyA != nullptr)) {
		if (((!(_249c1b84b_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _249bed3ee_isDuplicatedIdent(_self_.ptr(), 0LLU,_96217_kind.get()._field_KeyA.get()._field_Ident))) {
			_249c1be89_pushErr(_self_.get()._field_s.ptr(), _96217_kind.get()._field_KeyA.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96217_kind.get()._field_KeyA.get()._field_Ident)}));
			_249c1c2a8_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96217_kind.get()._field_KeyA.get()._field_Scope=_98017_scope;
		_97917_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_97917_ssc.get()._field_table.get()._field_Vars,1);_97917_ssc.get()._field_table.get()._field_Vars.__push(_96217_kind.get()._field_KeyA);;
	};
	if ((_96217_kind.get()._field_KeyB != nullptr)) {
		if (((!(_249c1b84b_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _249bed3ee_isDuplicatedIdent(_self_.ptr(), 0LLU,_96217_kind.get()._field_KeyB.get()._field_Ident))) {
			_249c1be89_pushErr(_self_.get()._field_s.ptr(), _96217_kind.get()._field_KeyB.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96217_kind.get()._field_KeyB.get()._field_Ident)}));
			_249c1c2a8_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96217_kind.get()._field_KeyB.get()._field_Scope=_98017_scope;
		_97917_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_97917_ssc.get()._field_table.get()._field_Vars,1);_97917_ssc.get()._field_table.get()._field_Vars.__push(_96217_kind.get()._field_KeyB);;
	};
	_249c0107d_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96217_kind)),_95439_it.get()._field_Scope,_98017_scope,_97917_ssc);
	_96217_kind.get()._field_Scope=_98017_scope;
}



inline void _249c0237b_checkIter(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_249059bce_Iter> _100433_it) {
	if (_24905a031_IsInf(_100433_it.ptr())) {
		_249c01b0b_checkInfIter(_self_, _100433_it);
		return;;
	};
	{
		auto &_match_expr{ _100433_it.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_24905a4a4_WhileKind>>()) {
			_case_begin_24e8cb0b6:;
			{
				_249c01d81_checkWhileIter(_self_, _100433_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24905ad45_RangeKind>>()) {
			_case_begin_24e8ca428:;
			{
				_249c02106_checkRangeIter(_self_, _100433_it);
			}
		}
		else {
			_case_begin_24e8ca9cd:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_24e8ca33a:;
	};
}



inline jule::Bool _249c02689_checkValidContLabel(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Uintptr _102039_it) {
	jule::Ptr<_249be9296_scopeChecker> _102117_scope = _self_;;
	_julec_label_iter:;
	if ((_102117_scope.get()._field_it == _102039_it)) {
		return true;
	};
	if ((_102117_scope.get()._field_parent != nullptr)) {
		_102117_scope=_102117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _249c02997_checkValidBreakLabel(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Uintptr _103640_ptr) {
	jule::Ptr<_249be9296_scopeChecker> _103717_scope = _self_;;
	_julec_label_iter:;
	if ((_103717_scope.get()._field_it == _103640_ptr)) {
		return true;
	};
	if ((_103717_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _104517_mtch = static_cast<jule::Uintptr>(((_249be6dcb_Case*)(_103717_scope.get()._field_cse))->_field_Owner);;
		if ((_104517_mtch == _103640_ptr)) {
			return true;
		};
	};
	if ((_103717_scope.get()._field_parent != nullptr)) {
		_103717_scope=_103717_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_249be46d1_ContSt> _249c02ca5_checkContValidScope(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24905b5a4_ContSt> _105939_c) {
	if (_249bec145_isDeferred(_self_)) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _105939_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_105939_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_249be46d1_ContSt>();
	};
	jule::Ptr<_249be9296_scopeChecker> _106917_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_106917_scope.get()._field_it == 0LLU) && (_106917_scope.get()._field_parent != nullptr)) && (_106917_scope.get()._field_owner == nullptr))) {
			_case_begin_24e8d3b7e:;
			{
				_106917_scope=_106917_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_106917_scope.get()._field_it != 0LLU)) {
			_case_begin_24e8d3c06:;
			{
				return jule::new_ptr<_249be46d1_ContSt>(_249be46d1_ContSt{._field_It=_106917_scope.get()._field_it});
			}
		}
		_match_end_24e8d3ac4:;
	};
	_249c1be89_pushErr(_self_.get()._field_s.ptr(), _105939_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _249c0302a_checkCont(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24905b5a4_ContSt> _108329_c) {
	jule::Ptr<_249be46d1_ContSt> _108417_cont = _249c02ca5_checkContValidScope(_self_, _108329_c);;
	if ((_108417_cont == nullptr)) {
		return;;
	};
	if ((_108329_c.get()._field_Label != nullptr)) {
		jule::Ptr<_249be800e_scopeLabel> _109021_label = _249bded3b_findLabelParent(_108329_c.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
		if ((_109021_label == nullptr)) {
			_249c1be89_pushErr(_self_.get()._field_s.ptr(), _108329_c.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_108329_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		_109021_label.get()._field_used=true;
		if (((_109021_label.get()._field_pos + 1LL) >= _109021_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_249c1be89_pushErr(_self_.get()._field_s.ptr(), _108329_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108329_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		jule::I64 _110317_i = (_109021_label.get()._field_pos + 1LL);;
		if ((_110317_i >= _109021_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_249c1be89_pushErr(_self_.get()._field_s.ptr(), _108329_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _110725_st = _109021_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_110317_i];;
			{
				auto &_match_expr{ _110725_st };
				
				if (_match_expr.type_is<jule::Ptr<_249be347c_InfIter>>()) {
					_case_begin_24e8db390:;
					{
						_108417_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110725_st.operator jule::Ptr<_249be347c_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_249be42d5_RangeIter>>()) {
					_case_begin_24e8dceda:;
					{
						_108417_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110725_st.operator jule::Ptr<_249be42d5_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_249be3900_WhileIter>>()) {
					_case_begin_24e8dd051:;
					{
						_108417_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110725_st.operator jule::Ptr<_249be3900_WhileIter>()));
					}
				}
				else {
					_case_begin_24e8dcd97:;
					{
						_249c1be89_pushErr(_self_.get()._field_s.ptr(), _108329_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108329_c.get()._field_Label.get()._field_Kind)}));
					}
				}
				_match_end_24e8dcc87:;
			};
		};
	};
	if ((_108417_cont.get()._field_It != 0LLU)) {
		if ((!(_249c02689_checkValidContLabel(_self_, _108417_cont.get()._field_It)))) {
			_249c1be89_pushErr(_self_.get()._field_s.ptr(), _108329_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108329_c.get()._field_Label.get()._field_Kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_108417_cont));;
}



inline void _249c032a0_checkLabel(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_249053d60_LabelSt> _113034_l) {
	if ((_249bec92b_findLabel(_self_.ptr(), _113034_l.get()._field_Ident) != nullptr)) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _113034_l.get()._field_Token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_113034_l.get()._field_Ident)}));
		return;;
	};
	jule::Ptr<_249be4d74_Label> _113617_label = jule::new_ptr<_249be4d74_Label>(_249be4d74_Label{._field_Ident=_113034_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_113617_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_249be800e_scopeLabel>>::make({jule::new_ptr<_249be800e_scopeLabel>(_249be800e_scopeLabel{._field_token=_113034_l.get()._field_Token, ._field_label=_113617_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _249c03525_pushGoto(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_249054217_GotoSt> _114932_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_249be5160_GotoSt>(_249be5160_GotoSt{._field_Ident=_114932_gt.get()._field_Label.get()._field_Kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_249be8482_scopeGoto>>::make({jule::new_ptr<_249be8482_scopeGoto>(_249be8482_scopeGoto{._field_gt=_114932_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _249c0379a_checkPostfix(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24905514c_AssignSt> _116136_a) {
	if ((_116136_a.get()._field_Left.len() > 1LL)) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _116136_a.get()._field_Setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_24904a8e5_Expr> _116717_expr = _116136_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_249c80052_Data> _116817_d = _249ca1e86_evalExpr(_249c23875_eval(_self_.get()._field_s, jule::Trait<_249ccb3bc_Lookup>(_self_, 0)), _116717_expr);;
	if ((_116817_d == nullptr)) {
		return;;
	};
	_249be18ba_checkAssign(_self_.get()._field_s,_116817_d,nullptr,_116136_a.get()._field_Setter);
	if ((_249cb2d76_Ptr(_116817_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_249cbc05b_Ptr> _117621_ptr = _249cb2d76_Ptr(_116817_d.get()._field_Kind.ptr());;
		if (_249cbca2e_IsUnsafe(_117621_ptr.ptr())) {
			_249c1be89_pushErr(_self_.get()._field_s.ptr(), _116136_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116136_a.get()._field_Setter.get()._field_Kind),jule::Any(_249cb0b87_Str(_116817_d.get()._field_Kind.ptr()))}));
			return;;
		};
	} else {
		if (((_249cb289d_Prim(_116817_d.get()._field_Kind.ptr()) == nullptr) || (!(_249bc455c_IsNum(_249cb289d_Prim(_116817_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_249c1be89_pushErr(_self_.get()._field_s.ptr(), _116136_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116136_a.get()._field_Setter.get()._field_Kind),jule::Any(_249cb0b87_Str(_116817_d.get()._field_Kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_249be5517_Postfix>(_249be5517_Postfix{._field_Expr=_116817_d.get()._field_Model, ._field_Op=_116136_a.get()._field_Setter.get()._field_Kind})));;
}



inline jule::Bool _249c03aa8_isNewAssignIdent(_249be9296_scopeChecker* _self_, jule::Str _119435_ident) {
	if ((_23abd6627_IsIgnoreIdent(_119435_ident) || _119435_ident.empty())) {
		return false;
	};
	return (_249c7d2c5_defByIdent((*_self_)._field_table.ptr(), _119435_ident,false) == nullptr);
}



inline jule::Bool _249c04009_checkStructureAssignOp(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_249062e4b_StructIns>& _120147_s, jule::Ptr<_24905514c_AssignSt>& _120167_a, jule::Ptr<_249c80052_Data>& _120186_r) {
	jule::Ptr<_249bcc312_FnIns> _120417_overload = nullptr;;
	{
		auto &_match_expr{ _120167_a.get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_24e902dbd:;
			{
				_120417_overload=_120147_s.get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_24e902e34:;
			{
				_120417_overload=_120147_s.get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_24e902e9a:;
			{
				_120417_overload=_120147_s.get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_24e903011:;
			{
				_120417_overload=_120147_s.get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_24e901cac:;
			{
				_120417_overload=_120147_s.get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_24e901d23:;
			{
				_120417_overload=_120147_s.get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_24e901d89:;
			{
				_120417_overload=_120147_s.get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_24e901e00:;
			{
				_120417_overload=_120147_s.get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_24e9031ba:;
			{
				_120417_overload=_120147_s.get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_24e903231:;
			{
				_120417_overload=_120147_s.get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_24e901b25:;
			{
				_249c1be89_pushErr(_self_.get()._field_s.ptr(), _120167_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120167_a.get()._field_Setter.get()._field_Kind),jule::Any(_249027262_Str(_120147_s.ptr()))}));
				return false;
			}
		}
		_match_end_24e9016a2:;
	};
	if ((_120417_overload == nullptr)) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _120167_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120167_a.get()._field_Setter.get()._field_Kind),jule::Any(_249027262_Str(_120147_s.ptr()))}));
		return false;
	};
	jule::Ptr<_249bcc125_ParamIns> _123617_p = _120417_overload.get()._field_Params[1LL];;
	return _249c23d70_checkAssignType(_self_.get()._field_s, _123617_p.get()._field_Decl.get()._field_Reference,_123617_p.get()._field_Kind,_120186_r,_120167_a.get()._field_Setter);
}



inline void _249c0427e_checkSingleAssign(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24905514c_AssignSt>& _124042_a) {
	jule::Ptr<_249c80052_Data> _124117_l = nullptr;;
	if ((!(_23abd6627_IsIgnoreIdent(_124042_a.get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_24904a8e5_Expr> _124421_expr = _124042_a.get()._field_Left[0LL].get()._field_Expr;;
		_124117_l=_249ca1e86_evalExpr(_249c23875_eval(_self_.get()._field_s, jule::Trait<_249ccb3bc_Lookup>(_self_, 0)), _124421_expr);
		if ((_124117_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_249c81ac0_Eval> _125117_eval = nullptr;;
	if ((_124117_l != nullptr)) {
		_125117_eval=_249c23567_evalp(_self_.get()._field_s, jule::Trait<_249ccb3bc_Lookup>(_self_, 0),_124117_l.get()._field_Kind);
	} else {
		_125117_eval=_249c23875_eval(_self_.get()._field_s, jule::Trait<_249ccb3bc_Lookup>(_self_, 0));
	};
	_125117_eval.get()._field_unsafety=_249beb72c_isUnsafe(_self_);
	jule::Ptr<_249c80052_Data> _125817_r = _249ca1e86_evalExpr(_125117_eval, _124042_a.get()._field_Right);;
	if ((_125817_r == nullptr)) {
		return;;
	};
	if ((_124117_l == nullptr)) {
		if (_249cb1924_Void(_125817_r.get()._field_Kind.ptr())) {
			_249c1be89_pushErr(_self_.get()._field_s.ptr(), _124042_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_125817_r));;
		return;;
	};
	if ((!(_249be18ba_checkAssign(_self_.get()._field_s,_124117_l,_125817_r,_124042_a.get()._field_Setter)))) {
		return;;
	};
	if ((_249cb453c_Tup(_125817_r.get()._field_Kind.ptr()) != nullptr)) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _124042_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_249bc61eb_OperandExprModel> _128017_lm = jule::new_ptr<_249bc61eb_OperandExprModel>(_249bc61eb_OperandExprModel{._field_Kind=_124117_l.get()._field_Kind, ._field_Model=_124117_l.get()._field_Model});;
	jule::Ptr<_249bc61eb_OperandExprModel> _128417_rm = jule::new_ptr<_249bc61eb_OperandExprModel>(_249bc61eb_OperandExprModel{._field_Kind=_125817_r.get()._field_Kind, ._field_Model=_125817_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_249be598a_Assign>(_249be598a_Assign{._field_L=_128017_lm, ._field_R=_128417_rm, ._field_Op=_124042_a.get()._field_Setter})));;
	if ((_124042_a.get()._field_Setter.get()._field_Kind != jule::Str("=", 1))) {
		jule::Ptr<_249062e4b_StructIns> _129121_strct = _249cb3d00_Struct(_124117_l.get()._field_Kind.ptr());;
		if ((_129121_strct != nullptr)) {
			_249c04009_checkStructureAssignOp(_self_, _129121_strct,_124042_a,_125817_r);
			return;;
		};
		_124042_a.get()._field_Setter.get()._field_Kind=_124042_a.get()._field_Setter.get()._field_Kind.slice(0LL,(_124042_a.get()._field_Setter.get()._field_Kind.len() - 1LL));
		_249ca4197_binaryEval _129821_solver = static__249ca4a9e_new(_125117_eval,_124042_a.get()._field_Setter);;
		_125817_r=_249ca9730_solveExplicit(&_129821_solver, _124117_l,_125817_r);
		if ((_125817_r == nullptr)) {
			return;;
		};
		_124042_a.get()._field_Setter.get()._field_Kind+=jule::Str("=", 1);
		return;;
	};
	_249c6a823_assignTypeChecker _130717_checker = _249c6a823_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_124117_l.get()._field_Kind, ._field_d=_125817_r, ._field_errorToken=_124042_a.get()._field_Setter};;
	if (_249c6b99a_check(&_130717_checker)) {
		_128417_rm.get()._field_Model=_125817_r.get()._field_Model;
		_128017_lm.get()._field_Model=_124117_l.get()._field_Model;
	};
}



inline void _249c047ac_processEndPartOfMultiAssign(_249be9296_scopeChecker* _self_, jule::Ptr<_249be5d42_MultiAssign>& _131951_st, jule::Ptr<_24905514c_AssignSt>& _132014_a, jule::Ptr<_249054b0d_AssignLeft>& _132033_lexpr, jule::Ptr<_249c80052_Data>& _132058_l, jule::Ptr<_249c80052_Data>& _132073_r) {
	if (_23abd6627_IsIgnoreIdent(_132033_lexpr.get()._field_Ident)) {
		if (_249cb1924_Void(_132073_r.get()._field_Kind.ptr())) {
			_249c1be89_pushErr((*_self_)._field_s.ptr(), _132014_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_131951_st.get()._field_L = jule::alloc_for_append(_131951_st.get()._field_L,1);_131951_st.get()._field_L.__push(nullptr);;
		return;;
	};
	if ((_132014_a.get()._field_Declarative && _249c03aa8_isNewAssignIdent(&(*_self_), _132033_lexpr.get()._field_Ident))) {
		if (_249bed3ee_isDuplicatedIdent(&(*_self_), 0LLU,_132033_lexpr.get()._field_Ident)) {
			_249c1be89_pushErr((*_self_)._field_s.ptr(), _132033_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132033_lexpr.get()._field_Ident)}));
			_249c1c2a8_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_249bebb6c_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_249c3702b_Var> _133821_v = jule::new_ptr<_249c3702b_Var>(_249c3702b_Var{._field_Scope=(*_self_)._field_scope, ._field_Token=_132033_lexpr.get()._field_Token, ._field_Ident=_132033_lexpr.get()._field_Ident, ._field_Mutable=_132033_lexpr.get()._field_Mutable, ._field_Reference=_132033_lexpr.get()._field_Reference, ._field_Value=jule::new_ptr<_249c810ca_Value>(_249c810ca_Value{._field_Expr=_132014_a.get()._field_Right, ._field_Data=_132073_r}), });;
		_249c2e771_checkVar((*_self_)._field_s, _133821_v);
		_131951_st.get()._field_L = jule::alloc_for_append(_131951_st.get()._field_L,1);_131951_st.get()._field_L.__push(static_cast<jule::Any>(_133821_v));;
		(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_133821_v);;
		(*_self_)._field_scope.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_Stmts,1);(*_self_)._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_133821_v));;
		return;;
	};
	if ((_132033_lexpr.get()._field_Mutable || _132033_lexpr.get()._field_Reference)) {
		_249c1be89_pushErr((*_self_)._field_s.ptr(), _132033_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132033_lexpr.get()._field_Ident)}));
		_249c1c2a8_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_249be18ba_checkAssign((*_self_)._field_s,_132058_l,_132073_r,_132014_a.get()._field_Setter)))) {
		return;;
	};
	;
	_249c26aa9_checkValidityForInitExpr((*_self_)._field_s, _132058_l.get()._field_Mutable,false,_132058_l.get()._field_Kind,_132073_r,_132014_a.get()._field_Setter);
	_249c6a823_assignTypeChecker _137217_checker = _249c6a823_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_132058_l.get()._field_Kind, ._field_d=_132073_r, ._field_errorToken=_132014_a.get()._field_Setter};;
	_249c6b99a_check(&_137217_checker);
	_131951_st.get()._field_L = jule::alloc_for_append(_131951_st.get()._field_L,1);_131951_st.get()._field_L.__push(_132058_l.get()._field_Model);;
}



inline void _249c04a43_checkMultiAssign(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24905514c_AssignSt>& _138241_a) {
	jule::Ptr<_249c80052_Data> _138317_rd = _249ca1e86_evalExpr(_249c23875_eval(_self_.get()._field_s, jule::Trait<_249ccb3bc_Lookup>(_self_, 0)), _138241_a.get()._field_Right);;
	if ((_138317_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_249c80052_Data>> _138717_right = _249be0aea_getDatasFromTupleData(_138317_rd);;
	if ((_138717_right.len() == 1LL)) {
		{
			auto &_match_expr{ _138717_right[0LL].get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_249bc743e_IndexingExprModel>>()) {
				_case_begin_24b2e3b36:;
				{
					jule::Ptr<_249bc743e_IndexingExprModel> _139125_iem = _138717_right[0LL].get()._field_Model.operator jule::Ptr<_249bc743e_IndexingExprModel>();;
					if ((_249cb42c8_Map(_139125_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_138717_right=jule::Slice<jule::Ptr<_249c80052_Data>>::make({jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=_249cb42c8_Map(_139125_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), })});
					};
				}
			}
			_match_end_24b2e3a8c:;
		};
	};
	{
		
		if ((_138241_a.get()._field_Left.len() > _138717_right.len())) {
			_case_begin_24b2e343d:;
			{
				_249c1be89_pushErr(_self_.get()._field_s.ptr(), _138241_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_138241_a.get()._field_Left.len() < _138717_right.len())) {
			_case_begin_24b2e34b5:;
			{
				_249c1be89_pushErr(_self_.get()._field_s.ptr(), _138241_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_24b2e33c7:;
	};
	jule::Ptr<_249be5d42_MultiAssign> _141017_st = jule::new_ptr<_249be5d42_MultiAssign>(_249be5d42_MultiAssign{._field_R=_138317_rd.get()._field_Model});;
	{
		auto &expr = _138241_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_24b2e882d:;
		if (it != expr.end()) {
			jule::I64 _141313_i = it - expr.begin();
			{
				jule::Ptr<_249054b0d_AssignLeft> _141421_lexpr = _138241_a.get()._field_Left[_141313_i];;
				jule::Ptr<_249c80052_Data> _141521_l = nullptr;;
				if (((!(_23abd6627_IsIgnoreIdent(_141421_lexpr.get()._field_Ident))) && ((!(_138241_a.get()._field_Declarative)) || (!(_249c03aa8_isNewAssignIdent(_self_.ptr(), _141421_lexpr.get()._field_Ident)))))) {
					_141521_l=_249ca1e86_evalExpr(_249c23875_eval(_self_.get()._field_s, jule::Trait<_249ccb3bc_Lookup>(_self_, 0)), _141421_lexpr.get()._field_Expr);
					if ((_141521_l == nullptr)) {
						goto _iter_next_24b2e882d;
					};
				};
				jule::Ptr<_249c80052_Data> _142321_r = _138717_right[_141313_i];;
				_249c047ac_processEndPartOfMultiAssign(_self_.ptr(), _141017_st,_138241_a,_141421_lexpr,_141521_l,_142321_r);
			}
			_iter_next_24b2e882d:;
			++it;
			_141313_i++;
			goto _iter_begin_24b2e882d;
		}
		_iter_end_24b2e882d:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_141017_st));;
}



inline void _249c04cb8_checkAssignSt(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24905514c_AssignSt> _142937_a) {
	{
		
		if (_23abd86c3_IsPostfixOp(_142937_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_24b2ed190:;
			{
				_249c0379a_checkPostfix(_self_, _142937_a);
			}
		}
		else if (((_142937_a.get()._field_Left.len() == 1LL) && (!(_142937_a.get()._field_Declarative)))) {
			_case_begin_24b2ecdd7:;
			{
				_249c0427e_checkSingleAssign(_self_, _142937_a);
			}
		}
		else {
			_case_begin_24b2ec821:;
			{
				_249c04a43_checkMultiAssign(_self_, _142937_a);
			}
		}
		_match_end_24b2ec744:;
	};
}



inline jule::Ptr<_249be2635_Scope> _249c05170_checkCaseScope(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_249be6dcb_Case>& _144035_c, jule::Ptr<_2490566e2_ScopeTree>& _144050_tree) {
	jule::Ptr<_249be9296_scopeChecker> _144117_ssc = _249c0954d_newChildChecker(_self_);;
	_144117_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_144035_c));
	return _249bee3cd_checkChildSc(_self_, _144050_tree,_144117_ssc);
}



inline jule::Ptr<_249be6dcb_Case> _249c0566a_checkCase(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_249be6381_Match> _144633_m, jule::I64 _144644_i, jule::Ptr<_24905ce9b_Case> _144656_c, jule::Ptr<_249c80052_Data> _144675_expr) {
	jule::Ptr<_249be6dcb_Case> _144717_case = _144633_m.get()._field_Cases[_144644_i];;
	_144717_case.get()._field_Exprs=jule::Slice<jule::Ptr<_249c80052_Data>>::alloc(0LL,_144656_c.get()._field_Exprs.len());
	jule::Bool _144917_genericMatched = false;;
	jule::Ptr<_249c81ac0_Eval> _145017_eval = _249c23875_eval(_self_.get()._field_s, jule::Trait<_249ccb3bc_Lookup>(_self_, 0));;
	{
		auto &expr = _144656_c.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_24b3035a2:;
		if (it != expr.end()) {
			jule::Ptr<_24904a8e5_Expr> _145121_e = *it;
			{
				jule::Ptr<_249c80052_Data> _145221_d = _249ca186a_evalExprKind(_145017_eval, _145121_e.get()._field_Kind);;
				if ((_145221_d == nullptr)) {
					goto _iter_next_24b3035a2;
				};
				if (_144633_m.get()._field_TypeMatch) {
					_144717_case.get()._field_Exprs = jule::alloc_for_append(_144717_case.get()._field_Exprs,1);_144717_case.get()._field_Exprs.__push(_145221_d);;
					if ((_249be0853_countMatchType(_144633_m,_145221_d.get()._field_Kind) > 1LL)) {
						_249c1be89_pushErr(_self_.get()._field_s.ptr(), _145121_e.get()._field_Token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_145221_d.get()._field_Kind.ptr()))}));
					};
					if (_144675_expr.get()._field_Kind.get()._field_Generic) {
						_144917_genericMatched=(_144917_genericMatched || _249cb0e95_Equals(_144675_expr.get()._field_Kind, _145221_d.get()._field_Kind));
					} else {
						if ((_249cb334e_TypeEnum(_144675_expr.get()._field_Kind.ptr()) != nullptr)) {
							_249c242c1_checkTypeCompatibility(_self_.get()._field_s, _144675_expr.get()._field_Kind,_145221_d.get()._field_Kind,_145121_e.get()._field_Token);
						} else {
							jule::Ptr<_249bd48d0_Trait> _146729_trt = _249cb4064_Trait(_144675_expr.get()._field_Kind.ptr());;
							if ((_146729_trt != nullptr)) {
								_249c242c1_checkTypeCompatibility(_self_.get()._field_s, _144675_expr.get()._field_Kind,_145221_d.get()._field_Kind,_145121_e.get()._field_Token);
							};
						};
					};
					goto _iter_next_24b3035a2;
				};
				if (_145221_d.get()._field_Decl) {
					_249c1be89_pushErr(_self_.get()._field_s.ptr(), _145121_e.get()._field_Token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_249c1c2a8_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_24b3035a2;
				};
				_144717_case.get()._field_Exprs = jule::alloc_for_append(_144717_case.get()._field_Exprs,1);_144717_case.get()._field_Exprs.__push(_145221_d);;
				_249c6a823_assignTypeChecker _148521_checker = _249c6a823_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_144675_expr.get()._field_Kind, ._field_d=_145221_d, ._field_errorToken=_145121_e.get()._field_Token};;
				_249c6b99a_check(&_148521_checker);
			}
			_iter_next_24b3035a2:;
			++it;
			goto _iter_begin_24b3035a2;
		}
		_iter_end_24b3035a2:;
	};
	if ((((!(_144633_m.get()._field_TypeMatch)) || (!(_144675_expr.get()._field_Kind.get()._field_Generic))) || _144917_genericMatched)) {
		_144717_case.get()._field_Scope=_249c05170_checkCaseScope(_self_, _144717_case,_144656_c.get()._field_Scope);
	};
	return _144717_case;
}



inline void _249c05a33_checkCases(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24905d672_MatchCase>& _149935_m, jule::Ptr<_249be6381_Match> _149954_rm, jule::Ptr<_249c80052_Data> _149970_expr) {
	_149954_rm.get()._field_Cases=jule::Slice<jule::Ptr<_249be6dcb_Case>>::alloc(0LL,_149935_m.get()._field_Cases.len());
	{
		auto &expr = _149935_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_24b30cbd8:;
		if (it != expr.end()) {
			jule::I64 _150113_i = it - expr.begin();
			{
				jule::Ptr<_249be6dcb_Case> _150221_case = jule::new_ptr<_249be6dcb_Case>(_249be6dcb_Case{._field_Owner=_149954_rm, });;
				if ((_150113_i > 0LL)) {
					_149954_rm.get()._field_Cases[(_150113_i - 1LL)].get()._field_Next=_150221_case;
				};
				_149954_rm.get()._field_Cases = jule::alloc_for_append(_149954_rm.get()._field_Cases,1);_149954_rm.get()._field_Cases.__push(_150221_case);;
			}
			_iter_next_24b30cbd8:;
			++it;
			_150113_i++;
			goto _iter_begin_24b30cbd8;
		}
		_iter_end_24b30cbd8:;
	};
	if (((_149954_rm.get()._field_Default != nullptr) && (_149935_m.get()._field_Cases.len() > 0LL))) {
		_149954_rm.get()._field_Cases[(_149954_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_149954_rm.get()._field_Default;
	};
	{
		auto &expr = _149935_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_24b31122a:;
		if (it != expr.end()) {
			jule::I64 _151514_i = it - expr.begin();
			jule::Ptr<_24905ce9b_Case> _151521_c = *it;
			{
				_249c0566a_checkCase(_self_, _149954_rm,_151514_i,_151521_c,_149970_expr);
			}
			_iter_next_24b31122a:;
			++it;
			_151514_i++;
			goto _iter_begin_24b31122a;
		}
		_iter_end_24b31122a:;
	};
}



inline jule::Ptr<_249be6dcb_Case> _249c05dda_checkDefault(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_249be6381_Match> _152036_m, jule::Ptr<_24905bdce_Else> _152051_d) {
	jule::Ptr<_249be6dcb_Case> _152117_def = jule::new_ptr<_249be6dcb_Case>(_249be6dcb_Case{._field_Owner=_152036_m, });;
	_152117_def.get()._field_Scope=_249c05170_checkCaseScope(_self_, _152117_def,_152051_d.get()._field_Scope);
	return _152117_def;
}



inline void _249c06160_checkComptimePanic(_249be9296_scopeChecker* _self_, jule::Ptr<_249be2635_Scope>& _152838_s) {
	if ((_152838_s.get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _153313_stmt = _152838_s.get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _153313_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_249c80052_Data>>()) {
			_case_begin_24b314706:;
			{
				jule::Ptr<_249c80052_Data> _153617_d = _153313_stmt.operator jule::Ptr<_249c80052_Data>();;
				{
					auto &_match_expr{ _153617_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_249bc972c_BuiltinPanicCallExprModel>>()) {
						_case_begin_24b3155e7:;
						{
							jule::Ptr<_249bc972c_BuiltinPanicCallExprModel> _153921_m = _153617_d.get()._field_Model.operator jule::Ptr<_249bc972c_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _153921_m.get()._field_Expr };
								
								if (_match_expr.type_is<jule::Ptr<_2491152a6_Const>>()) {
									_case_begin_24b31665e:;
									{
										jule::Ptr<_2491152a6_Const> _154225_c = _153921_m.get()._field_Expr.operator jule::Ptr<_2491152a6_Const>();;
										if (_24912982b_IsStr(_154225_c.ptr())) {
											_249c1be89_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_calledFrom,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_249166824_ReadStr(_154225_c.ptr()))}));
										};
									}
								}
								_match_end_24b31643e:;
							};
						}
					}
					_match_end_24b315592:;
				};
			}
		}
		_match_end_24b31456e:;
	};
}



inline void _249c0647e_pushTypeMatch(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_249be6381_Match> _155137_tm, jule::Ptr<_24905d672_MatchCase>& _155154_m) {
	if (_155137_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto &expr = _155137_tm.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_24b318452:;
			if (it != expr.end()) {
				jule::Ptr<_249be6dcb_Case> _155525_c = *it;
				{
					if ((_155525_c.get()._field_Scope != nullptr)) {
						_249c06160_checkComptimePanic(_self_.ptr(), _155525_c.get()._field_Scope);
						_155137_tm.get()._field_Default=_155525_c;
						_155137_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_24b318452:;
				++it;
				goto _iter_begin_24b318452;
			}
			_iter_end_24b318452:;
		};
		if ((_155154_m.get()._field_Default != nullptr)) {
			_155137_tm.get()._field_Cases=nullptr;
			_155137_tm.get()._field_Default=_249c05dda_checkDefault(_self_, _155137_tm,_155154_m.get()._field_Default);
			if ((_155137_tm.get()._field_Default != nullptr)) {
				_249c06160_checkComptimePanic(_self_.ptr(), _155137_tm.get()._field_Default.get()._field_Scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_155137_tm));;
}



inline void _249c06704_checkTypeMatch(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24905d672_MatchCase>& _157539_m) {
	jule::Ptr<_249c80052_Data> _157617_d = _249ca1b78_eval(_249c23875_eval(_self_.get()._field_s, jule::Trait<_249ccb3bc_Lookup>(_self_, 0)), _157539_m.get()._field_Expr);;
	if ((_157617_d == nullptr)) {
		return;;
	};
	if (((!(_157617_d.get()._field_Kind.get()._field_Generic)) && (!(((((_249cb289d_Prim(_157617_d.get()._field_Kind.ptr()) != nullptr) && _249cb870b_IsAny(_249cb289d_Prim(_157617_d.get()._field_Kind.ptr()).ptr())) || (_249cb4064_Trait(_157617_d.get()._field_Kind.ptr()) != nullptr)) || (_249cb334e_TypeEnum(_157617_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _157539_m.get()._field_Expr.get()._field_Token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_249be6381_Match> _158717_tm = jule::new_ptr<_249be6381_Match>(_249be6381_Match{._field_Expr=_157617_d, ._field_TypeMatch=true, });;
	if (((!(_158717_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && (_157539_m.get()._field_Default != nullptr))) {
		_158717_tm.get()._field_Default=_249c05dda_checkDefault(_self_, _158717_tm,_157539_m.get()._field_Default);
	};
	_249c05a33_checkCases(_self_, _157539_m,_158717_tm,_157617_d);
	_249c0647e_pushTypeMatch(_self_, _158717_tm,_157539_m);
}



inline void _249c06979_checkCommonMatch(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24905d672_MatchCase>& _160041_m) {
	jule::Ptr<_249c80052_Data> _160117_d = nullptr;;
	if ((_160041_m.get()._field_Expr == nullptr)) {
		_160117_d=jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__2491571c7_NewBool(true)});
		_160117_d.get()._field_Model=static_cast<jule::Any>(_160117_d.get()._field_Constant);
	} else {
		_160117_d=_249ca1e86_evalExpr(_249c23875_eval(_self_.get()._field_s, jule::Trait<_249ccb3bc_Lookup>(_self_, 0)), _160041_m.get()._field_Expr);
		if ((_160117_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_249be6381_Match> _161517_mc = jule::new_ptr<_249be6381_Match>(_249be6381_Match{._field_Expr=_160117_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_161517_mc));;
	if ((_160041_m.get()._field_Default != nullptr)) {
		_161517_mc.get()._field_Default=_249c05dda_checkDefault(_self_, _161517_mc,_160041_m.get()._field_Default);
	};
	_249c05a33_checkCases(_self_, _160041_m,_161517_mc,_160117_d);
}



inline void _249c06bee_checkMatch(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24905d672_MatchCase> _162734_m) {
	if (_162734_m.get()._field_TypeMatch) {
		_249c06704_checkTypeMatch(_self_, _162734_m);
		return;;
	};
	_249c06979_checkCommonMatch(_self_, _162734_m);
}



inline void _249c06e74_checkFall(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_249054503_FallSt> _163529_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _249bec145_isDeferred(_self_))) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _163529_f.get()._field_Token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_249be6dcb_Case* _164317_case = ((_249be6dcb_Case*)(_self_.get()._field_cse));;
	if ((_164317_case->_field_Next == nullptr)) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _163529_f.get()._field_Token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_249c1c2a8_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_249be7481_FallSt>(_249be7481_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_164317_case->_field_Next))})));;
}



inline jule::Ptr<_249be4a88_BreakSt> _249c07282_checkBreakWithLabel(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24905b1ec_BreakSt> _165539_b) {
	jule::Ptr<_249be4a88_BreakSt> _165617_brk = _249c07590_checkPlainBreak(_self_, _165539_b);;
	if ((_165617_brk == nullptr)) {
		return nullptr;
	};
	_165617_brk.get()._field_It=0LLU;
	_165617_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_249be800e_scopeLabel> _166617_label = _249bded3b_findLabelParent(_165539_b.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
	if ((_166617_label == nullptr)) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _165539_b.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_165539_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	_166617_label.get()._field_used=true;
	if (((_166617_label.get()._field_pos + 1LL) >= _166617_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _165539_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_165539_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	jule::I64 _167913_i = (_166617_label.get()._field_pos + 1LL);;
	if ((_167913_i >= _166617_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _165539_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_165539_b.get()._field_Label.get()._field_Kind)}));
	} else {
		jule::Any _168321_st = _166617_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_167913_i];;
		{
			auto &_match_expr{ _168321_st };
			
			if (_match_expr.type_is<jule::Ptr<_249be347c_InfIter>>()) {
				_case_begin_24b332d73:;
				{
					_165617_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_168321_st.operator jule::Ptr<_249be347c_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_249be42d5_RangeIter>>()) {
				_case_begin_24b334c98:;
				{
					_165617_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_168321_st.operator jule::Ptr<_249be42d5_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_249be3900_WhileIter>>()) {
				_case_begin_24b334d0e:;
				{
					_165617_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_168321_st.operator jule::Ptr<_249be3900_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_249be6381_Match>>()) {
				_case_begin_24b334d75:;
				{
					_165617_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_168321_st.operator jule::Ptr<_249be6381_Match>()));
				}
			}
			else {
				_case_begin_24b334b55:;
				{
					_249c1be89_pushErr(_self_.get()._field_s.ptr(), _165539_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_165539_b.get()._field_Label.get()._field_Kind)}));
				}
			}
			_match_end_24b334a45:;
		};
	};
	if ((_165617_brk.get()._field_It != 0LLU)) {
		if ((!(_249c02997_checkValidBreakLabel(_self_, _165617_brk.get()._field_It)))) {
			_249c1be89_pushErr(_self_.get()._field_s.ptr(), _165539_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_165539_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	if ((_165617_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_249c02997_checkValidBreakLabel(_self_, _165617_brk.get()._field_Mtch)))) {
			_249c1be89_pushErr(_self_.get()._field_s.ptr(), _165539_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_165539_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	return _165617_brk;
}



inline jule::Ptr<_249be4a88_BreakSt> _249c07590_checkPlainBreak(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24905b1ec_BreakSt> _171335_b) {
	if (_249bec145_isDeferred(_self_)) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _171335_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_249be9296_scopeChecker> _171917_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_171917_scope.get()._field_it == 0LLU) && (_171917_scope.get()._field_cse == 0LLU)) && (_171917_scope.get()._field_parent != nullptr)) && (_171917_scope.get()._field_owner == nullptr))) {
			_case_begin_24b33b7b6:;
			{
				_171917_scope=_171917_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_171917_scope.get()._field_it != 0LLU)) {
			_case_begin_24b33b83d:;
			{
				return jule::new_ptr<_249be4a88_BreakSt>(_249be4a88_BreakSt{._field_It=_171917_scope.get()._field_it, });
			}
		}
		else if ((_171917_scope.get()._field_cse != 0LLU)) {
			_case_begin_24b33b8b5:;
			{
				return jule::new_ptr<_249be4a88_BreakSt>(_249be4a88_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_249be6dcb_Case*)(_171917_scope.get()._field_cse))->_field_Owner))});
			}
		}
		_match_end_24b33b6ea:;
	};
	_249c1be89_pushErr(_self_.get()._field_s.ptr(), _171335_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _249c07815_checkBreak(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24905b1ec_BreakSt> _173530_b) {
	if ((_173530_b.get()._field_Label != nullptr)) {
		jule::Ptr<_249be4a88_BreakSt> _173721_brk = _249c07282_checkBreakWithLabel(_self_, _173530_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_173721_brk));;
		return;;
	};
	jule::Ptr<_249be4a88_BreakSt> _174217_brk = _249c07590_checkPlainBreak(_self_, _173530_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_174217_brk));;
}



inline void _249c07a8a_checkRet(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24905956e_RetSt> _174632_r) {
	if (_249bec145_isDeferred(_self_)) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _174632_r.get()._field_Token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249be7904_RetSt> _175117_rt = jule::new_ptr<_249be7904_RetSt>(_249be7904_RetSt{._field_Func=_249bec3a9_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_175117_rt));;
	jule::Ptr<_249c7817c_retTypeChecker> _175617_rtc = jule::new_ptr<_249c7817c_retTypeChecker>(_249c7817c_retTypeChecker{._field_sc=_self_, ._field_f=_175117_rt.get()._field_Func, ._field_errorToken=_174632_r.get()._field_Token, });;
	jule::Bool _176113_ok = _249c7906d_check(_175617_rtc.ptr(), _174632_r.get()._field_Expr);;
	if ((!(_176113_ok))) {
		return;;
	};
	if (((_174632_r.get()._field_Expr == nullptr) && (_175617_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_175117_rt.get()._field_Vars=_175617_rtc.get()._field_vars;
	if ((_174632_r.get()._field_Expr != nullptr)) {
		_175117_rt.get()._field_Expr=_175617_rtc.get()._field_model;
	};
}



inline void _249c07d10_checkUseExpr(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_24904b286_UseExpr> _177732_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _177732_ue.get()._field_Token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_249bec145_isDeferred(_self_)) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _177732_ue.get()._field_Token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_249c1be89_pushErr(_self_.get()._field_s.ptr(), _177732_ue.get()._field_Token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _249c08085_checkNode(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Any& _179334_node) {
	{
		auto &_match_expr{ _179334_node };
		
		if (_match_expr.type_is<jule::Ptr<_2490566e2_ScopeTree>>()) {
			_case_begin_24b34ac7b:;
			{
				_249bee961_checkAnonScope(_self_, _179334_node.operator jule::Ptr<_2490566e2_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2490591b7_VarDecl>>()) {
			_case_begin_24b34a64e:;
			{
				_249bed674_checkVarDecl(_self_, _179334_node.operator jule::Ptr<_2490591b7_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24905ca28_TypeAliasDecl>>()) {
			_case_begin_24b34aa5b:;
			{
				_249bed8e9_checkTypeAliasDecl(_self_, _179334_node.operator jule::Ptr<_24905ca28_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904a8e5_Expr>>()) {
			_case_begin_24b34ae13:;
			{
				_249c00005_checkExpr(_self_, _179334_node.operator jule::Ptr<_24904a8e5_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904c4da_CoExpr>>()) {
			_case_begin_24b34b0bc:;
			{
				_249c0027a_checkCoExpr(_self_, _179334_node.operator jule::Ptr<_24904c4da_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24905c352_Conditional>>()) {
			_case_begin_24b34b133:;
			{
				_249c00b1b_checkConditional(_self_, _179334_node.operator jule::Ptr<_24905c352_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249059bce_Iter>>()) {
			_case_begin_24b34b199:;
			{
				_249c0237b_checkIter(_self_, _179334_node.operator jule::Ptr<_249059bce_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24905b5a4_ContSt>>()) {
			_case_begin_24b34b210:;
			{
				_249c0302a_checkCont(_self_, _179334_node.operator jule::Ptr<_24905b5a4_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249053d60_LabelSt>>()) {
			_case_begin_24b34b276:;
			{
				_249c032a0_checkLabel(_self_, _179334_node.operator jule::Ptr<_249053d60_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249054217_GotoSt>>()) {
			_case_begin_24b34b2dc:;
			{
				_249c03525_pushGoto(_self_, _179334_node.operator jule::Ptr<_249054217_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24905514c_AssignSt>>()) {
			_case_begin_24b34b353:;
			{
				_249c04cb8_checkAssignSt(_self_, _179334_node.operator jule::Ptr<_24905514c_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24905d672_MatchCase>>()) {
			_case_begin_24b34b3b9:;
			{
				_249c06bee_checkMatch(_self_, _179334_node.operator jule::Ptr<_24905d672_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249054503_FallSt>>()) {
			_case_begin_24b34b430:;
			{
				_249c06e74_checkFall(_self_, _179334_node.operator jule::Ptr<_249054503_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24905b1ec_BreakSt>>()) {
			_case_begin_24b34b496:;
			{
				_249c07815_checkBreak(_self_, _179334_node.operator jule::Ptr<_24905b1ec_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24905956e_RetSt>>()) {
			_case_begin_24b34b50c:;
			{
				_249c07a8a_checkRet(_self_, _179334_node.operator jule::Ptr<_24905956e_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904b286_UseExpr>>()) {
			_case_begin_24b34b573:;
			{
				_249c07d10_checkUseExpr(_self_, _179334_node.operator jule::Ptr<_24904b286_UseExpr>());
			}
		}
		else {
			_case_begin_24b34a7d6:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_24b34a6e8:;
	};
}



inline void _249c08261_checkResult(jule::Ptr<_249be9296_scopeChecker> _self_) {
	_2490560d7_Stmt _183317_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _183317_stmt._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_24904b286_UseExpr>>()) {
			_case_begin_24e971579:;
			{
				jule::Ptr<_24904b286_UseExpr> _183621_ue = _183317_stmt._field_Data.operator jule::Ptr<_24904b286_UseExpr>();;
				jule::Ptr<_249c80052_Data> _183721_d = _249ca1e86_evalExpr(_249c23875_eval(_self_.get()._field_s, jule::Trait<_249ccb3bc_Lookup>(_self_, 0)), _183621_ue.get()._field_Expr);;
				if ((_183721_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_183721_d));;
				jule::Ptr<_249c7817c_retTypeChecker> _184221_rtc = jule::new_ptr<_249c7817c_retTypeChecker>(_249c7817c_retTypeChecker{._field_sc=_self_, ._field_types=_2490ca227_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_183621_ue.get()._field_Expr.get()._field_Token, });;
				_249c7906d_check(_184221_rtc.ptr(), _183621_ue.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904a8e5_Expr>>()) {
			_case_begin_24e9715e0:;
			{
				jule::Ptr<_24904a8e5_Expr> _184921_expr = _183317_stmt._field_Data.operator jule::Ptr<_24904a8e5_Expr>();;
				jule::Ptr<_249c80052_Data> _185021_d = _249ca1e86_evalExpr(_249c23875_eval(_self_.get()._field_s, jule::Trait<_249ccb3bc_Lookup>(_self_, 0)), _184921_expr);;
				if ((_185021_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _185021_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel>>()) {
						_case_begin_24e976150:;
						{
							jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel> _185625_m = _185021_d.get()._field_Model.operator jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel>();;
							_249beec80_processErrorCall(_self_, _185625_m,_184921_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_185021_d));;
						}
					}
					else {
						_case_begin_24e976309:;
						{
							return;;
						}
					}
					_match_end_24e975dca:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249054217_GotoSt>>() || _match_expr.type_is<jule::Ptr<_24905b1ec_BreakSt>>() || _match_expr.type_is<jule::Ptr<_24905b5a4_ContSt>>() || _match_expr.type_is<jule::Ptr<_24905956e_RetSt>>()) {
			_case_begin_24e970c3d:;
			{
				_249c08085_checkNode(_self_, _183317_stmt._field_Data);
			}
		}
		else {
			_case_begin_24e970bc7:;
			{
				_249c08085_checkNode(_self_, _183317_stmt._field_Data);
				return;;
			}
		}
		_match_end_24e970b61:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _249c0843c_checkTree(jule::Ptr<_249be9296_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _187817_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_187817_n)--;
	};
	for (; (_self_.get()._field_i < _187817_n); (_self_.get()._field_i)++) {
		{
			_2490560d7_Stmt _188621_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_249c08085_checkNode(_self_, _188621_stmt._field_Data);
			if (_249bebdd1_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_24e979b7b:;
	}
	_iter_end_24e979b7b:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_249c08261_checkResult(_self_);
	};
}



inline void _249c0875b_checkGoto(_249be9296_scopeChecker* _self_, jule::Ptr<_249be8482_scopeGoto>& _189733_gt, jule::Ptr<_249be800e_scopeLabel>& _189754_label) {
	jule::Ptr<_249be9296_scopeChecker> _189817_gtsc = _189733_gt.get()._field_scope;;
	while (((_189817_gtsc.get()._field_childIndex - 1LL) > _189754_label.get()._field_scope.get()._field_childIndex)) {
		{
			_189817_gtsc=_189817_gtsc.get()._field_parent;
		}
	_iter_next_24e97ceae:;
	}
	_iter_end_24e97ceae:;;
	jule::I64 _190317_n = 0LL;;
	if ((_189817_gtsc.get()._field_scope == _189754_label.get()._field_scope.get()._field_scope)) {
		if ((_189733_gt.get()._field_pos > _189754_label.get()._field_pos)) {
			return;;
		};
		_190317_n=_189733_gt.get()._field_pos;
	};
	jule::I64 _191617_i = (_189754_label.get()._field_pos - 1LL);;
	if ((_190317_n == 0LL)) {
		{
			auto &expr = _189754_label.get()._field_scope.get()._field_scope.get()._field_Stmts;
			auto it = expr.begin();
			_iter_begin_24e98080d:;
			if (it != expr.end()) {
				jule::I64 _191917_j = it - expr.begin();
				jule::Any _191920_stmt = *it;
				{
					if (_249be0512_stmtIsGotoScope(_191920_stmt,_189817_gtsc.get()._field_scope)) {
						_190317_n=_191917_j;
						goto _iter_end_24e98080d;
					};
				}
				_iter_next_24e98080d:;
				++it;
				_191917_j++;
				goto _iter_begin_24e98080d;
			}
			_iter_end_24e98080d:;
		};
	};
	for (; (_191617_i >= _190317_n); (_191617_i)--) {
		{
			jule::Any _192921_stmt = _189754_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_191617_i];;
			if (_249be21a1_stmtIsDef(_192921_stmt)) {
				_249c1be89_pushErr((*_self_)._field_s.ptr(), _189733_gt.get()._field_gt.get()._field_Token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_189733_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
				return;;
			};
		}
	_iter_next_24e981897:;
	}
	_iter_end_24e981897:;;
}



inline void _249c08937_checkGotos(_249be9296_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_24e9814bd:;
		if (it != expr.end()) {
			jule::Ptr<_249be8482_scopeGoto> _193821_gt = *it;
			{
				jule::Ptr<_249be800e_scopeLabel> _193921_label = _249bed047_findLabelAll(&(*_self_), _193821_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_193921_label == nullptr)) {
					_249c1be89_pushErr((*_self_)._field_s.ptr(), _193821_gt.get()._field_gt.get()._field_Token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_193821_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
					goto _iter_next_24e9814bd;
				};
				_193921_label.get()._field_used=true;
				_249c0875b_checkGoto(&(*_self_), _193821_gt,_193921_label);
			}
			_iter_next_24e9814bd:;
			++it;
			goto _iter_begin_24e9814bd;
		}
		_iter_end_24e9814bd:;
	};
}



inline void _249c08b13_checkLabels(_249be9296_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_24e983c73:;
		if (it != expr.end()) {
			jule::Ptr<_249be800e_scopeLabel> _195116_l = *it;
			{
				if ((!(_195116_l.get()._field_used))) {
					_249c1be89_pushErr((*_self_)._field_s.ptr(), _195116_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_195116_l.get()._field_label.get()._field_Ident)}));
				};
			}
			_iter_next_24e983c73:;
			++it;
			goto _iter_begin_24e983c73;
		}
		_iter_end_24e983c73:;
	};
}



inline void _249c08cde_checkVars(_249be9296_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_24e98679d:;
		if (it != expr.end()) {
			jule::Ptr<_249c3702b_Var> _195916_v = *it;
			{
				if (((((!(_195916_v.get()._field_Used)) && (!(_23abd6627_IsIgnoreIdent(_195916_v.get()._field_Ident)))) && (!(_23abd68be_IsAnonIdent(_195916_v.get()._field_Ident)))) && (_195916_v.get()._field_Ident != jule::Str("self", 4)))) {
					_249c1be89_pushErr((*_self_)._field_s.ptr(), _195916_v.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_195916_v.get()._field_Ident)}));
				};
			}
			_iter_next_24e98679d:;
			++it;
			goto _iter_begin_24e98679d;
		}
		_iter_end_24e98679d:;
	};
}



inline void _249c08eba_checkAliases(_249be9296_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_24e988591:;
		if (it != expr.end()) {
			jule::Ptr<_249caea98_TypeAlias> _196716_a = *it;
			{
				if ((((!(_196716_a.get()._field_Used)) && (!(_23abd6627_IsIgnoreIdent(_196716_a.get()._field_Ident)))) && (!(_23abd68be_IsAnonIdent(_196716_a.get()._field_Ident))))) {
					_249c1be89_pushErr((*_self_)._field_s.ptr(), _196716_a.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_196716_a.get()._field_Ident)}));
				};
			}
			_iter_next_24e988591:;
			++it;
			goto _iter_begin_24e988591;
		}
		_iter_end_24e988591:;
	};
}



inline void _249c092d9_check(jule::Ptr<_249be9296_scopeChecker> _self_, jule::Ptr<_2490566e2_ScopeTree>& _197530_tree, jule::Ptr<_249be2635_Scope>& _197553_s) {
	_197553_s.get()._field_Deferred=_197530_tree.get()._field_Deferred;
	_197553_s.get()._field_Unsafety=_197530_tree.get()._field_Unsafety;
	jule::I64 _197913_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_197530_tree;
	_self_.get()._field_scope=_197553_s;
	_249c0843c_checkTree(_self_);
	if ((_197913_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_249c08cde_checkVars(_self_.ptr());
		_249c08eba_checkAliases(_self_.ptr());
		if (_249beb991_isRoot(_self_.ptr())) {
			_249c08937_checkGotos(_self_.ptr());
			_249c08b13_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_249be9296_scopeChecker> _249c0954d_newChildChecker(jule::Ptr<_249be9296_scopeChecker> _self_) {
	jule::Ptr<_249be9296_scopeChecker> _199917_base = _249bde665_newScopeCheckerBase(_self_.get()._field_s,nullptr);;
	_199917_base.get()._field_parent=_self_;
	_199917_base.get()._field_labels=_self_.get()._field_labels;
	_199917_base.get()._field_gotos=_self_.get()._field_gotos;
	_199917_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _199917_base;
}







std::ostream &operator<<(std::ostream &_Stream, _249be9296_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _249c0a53d_checkCdef(_249c0a0ed_directiveChecker* _self_, jule::Ptr<_24900cb2c_Directive>& _1629_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_249bcbe38_Fn>>()) {
			_case_begin_24e991dd5:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_249bcbe38_Fn>().get()._field_CppLinked) {
					goto _match_end_24e991995;
				};
				goto _case_begin_24e9919ea;
			}
		}
		else {
			_case_begin_24e9919ea:;
			{
				_249c1be89_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1629_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_24e991995:;
	};
	if ((_1629_d.get()._field_Args.len() > 0LL)) {
		_249c1be89_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _249c0a7b3_checkTypedef(_249c0a0ed_directiveChecker* _self_, jule::Ptr<_24900cb2c_Directive>& _3232_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_249036b01_Struct>>()) {
			_case_begin_24e994998:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_249036b01_Struct>().get()._field_CppLinked) {
					goto _match_end_24e994503;
				};
				goto _case_begin_24e994558;
			}
		}
		else {
			_case_begin_24e994558:;
			{
				_249c1be89_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3232_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_24e994503:;
	};
	if ((_3232_d.get()._field_Args.len() > 0LL)) {
		_249c1be89_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _249c0aa38_checkDerive(_249c0a0ed_directiveChecker* _self_, jule::Ptr<_24900cb2c_Directive>& _4831_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_249036b01_Struct>>()) {
			_case_begin_24e997539:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_249036b01_Struct>().get()._field_CppLinked))) {
					goto _match_end_24e997094;
				};
				goto _case_begin_24e9970e9;
			}
		}
		else {
			_case_begin_24e9970e9:;
			{
				_249c1be89_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_24e997094:;
	};
	if ((_4831_d.get()._field_Args.len() == 0LL)) {
		_249c1be89_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_249c1c2a8_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4831_d.get()._field_Args.len() > 1LL)) {
		_249c1be89_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4831_d.get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_24e99aeee:;
		}
		else {
			_case_begin_24e99986b:;
			{
				_249c1be89_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4831_d.get()._field_Args[0LL].get()._field_Kind)}));
			}
		}
		_match_end_24e99aa8c:;
	};
}



inline void _249c0acad_checkNamespace(_249c0a0ed_directiveChecker* _self_, jule::Ptr<_24900cb2c_Directive>& _7438_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_249036b01_Struct>>()) {
			_case_begin_24e99c3c9:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_249036b01_Struct>().get()._field_CppLinked))) {
					_249c1be89_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcbe38_Fn>>()) {
			_case_begin_24e99c6a4:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_249bcbe38_Fn>().get()._field_CppLinked))) {
					_249c1be89_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249c3702b_Var>>()) {
			_case_begin_24e99c71a:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_249c3702b_Var>().get()._field_CppLinked))) {
					_249c1be89_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_24e99c5c7:;
			{
				_249c1be89_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_24e99c484:;
	};
	if ((_7438_d.get()._field_Args.len() == 0LL)) {
		_249c1be89_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7438_d.get()._field_Args.len() > 1LL)) {
		_249c1be89_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_23abd3d83_Token> _9913_arg = _7438_d.get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_249c1be89_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_249c1be89_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7438_d.get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL,(_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_249036b01_Struct>>()) {
			_case_begin_24e9a6999:;
			{
				if ((_249ca9e39_findDirective((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_24900cb2c_Directive> _11625_typedef = jule::new_ptr<_24900cb2c_Directive>(_24900cb2c_Directive{._field_Tag=_7438_d.get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_24900cb2c_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_24e9a6339:;
	};
}



inline void _249c0b033_checkDeprecated(_249c0a0ed_directiveChecker* _self_, jule::Ptr<_24900cb2c_Directive>& _12539_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_249036b01_Struct>>()) {
			_case_begin_24e9a72d5:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_249036b01_Struct>().get()._field_CppLinked) {
					_249c1be89_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcbe38_Fn>>()) {
			_case_begin_24e9a8e1e:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_249bcbe38_Fn>().get()._field_CppLinked) {
					_249c1be89_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249c3702b_Var>>()) {
			_case_begin_24e9a8e85:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_249c3702b_Var>().get()._field_CppLinked) {
					_249c1be89_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_24e9a8803:;
			{
				_249c1be89_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_24e9a879d:;
	};
	if ((_12539_d.get()._field_Args.len() == 0LL)) {
		return;;
	};
	if ((_12539_d.get()._field_Args.len() > 1LL)) {
		_249c1be89_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_23abd3d83_Token> _15013_arg = _12539_d.get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_249c1be89_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_249c1be89_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12539_d.get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL,(_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _249c0b2a8_checkTest(_249c0a0ed_directiveChecker* _self_, jule::Ptr<_24900cb2c_Directive>& _16429_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_249bcbe38_Fn>>()) {
			_case_begin_24e9b3203:;
			{
				jule::Ptr<_249bcbe38_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_249bcbe38_Fn>();;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_2490ac803_IsInit(_16717_f.ptr())))) && (!(_2490ab978_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_24e9b2ad7;
				};
				if (_2490ab25d_IsMethod(_16717_f.ptr())) {
					_249c1be89_pushErr((*_self_)._field_s.ptr(), _16717_f.get()._field_Token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_24e9b2ad7;
				};
				goto _case_begin_24e9b2cb3;
			}
		}
		else {
			_case_begin_24e9b2cb3:;
			{
				_249c1be89_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16429_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_24e9b2ad7:;
	};
	if ((_16429_d.get()._field_Args.len() > 0LL)) {
		_249c1be89_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _249c0b52d_checkDirective(_249c0a0ed_directiveChecker* _self_, jule::Ptr<_24900cb2c_Directive>& _18538_d) {
	{
		auto &_match_expr{ _18538_d.get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_24e9b7548:;
			{
				_249c0a53d_checkCdef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_24e9b7191:;
			{
				_249c0a7b3_checkTypedef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_24e9b7207:;
			{
				_249c0aa38_checkDerive(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_24e9b726d:;
			{
				_249c0acad_checkNamespace(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_24e9b72e5:;
			{
				_249c0b033_checkDeprecated(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_24e9b801b:;
			{
				_249c0b2a8_checkTest(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_24e9b8093:;
			{
				_249c1be89_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		else {
			_case_begin_24e9b712a:;
			{
				_249c1be89_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_24e9b7070:;
	};
}



inline void _249c0b709_check(_249c0a0ed_directiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_24e9baa02:;
		if (it != expr.end()) {
			jule::Ptr<_24900cb2c_Directive> _20821_d = *it;
			{
				_249c0b52d_checkDirective(&(*_self_), _20821_d);
			}
			_iter_next_24e9baa02:;
			++it;
			goto _iter_begin_24e9baa02;
		}
		_iter_end_24e9baa02:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _249c0a0ed_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_249c1117b_ImportInfo> _249c11698_FindPackage(_249c1117b_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_249c1117b_ImportInfo> _249c119a6_SelectPackage(_249c1117b_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_249c1117b_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_249c3702b_Var> _249c11d5d_FindVar(_249c1117b_ImportInfo* _self_, jule::Str _19226_ident, jule::Bool ) {
	if ((!(_249c13744_isLookupable(&(*_self_), _19226_ident)))) {
		return nullptr;
	};
	return _249c0d893_findVarInPackage((*_self_)._field_Package.get()._field_Files,_19226_ident,false);
}



inline jule::Ptr<_249caea98_TypeAlias> _249c12215_FindTypeAlias(_249c1117b_ImportInfo* _self_, jule::Str _20432_ident, jule::Bool ) {
	if ((!(_249c13744_isLookupable(&(*_self_), _20432_ident)))) {
		return nullptr;
	};
	return _249c0dcc2_findTypeAliasInPackage((*_self_)._field_Package.get()._field_Files,_20432_ident,false);
}



inline jule::Ptr<_249036b01_Struct> _249c125bc_FindStruct(_249c1117b_ImportInfo* _self_, jule::Str _21629_ident, jule::Bool ) {
	if ((!(_249c13744_isLookupable(&(*_self_), _21629_ident)))) {
		return nullptr;
	};
	return _249c0e1ac_findStructInPackage((*_self_)._field_Package.get()._field_Files,_21629_ident,false);
}



inline jule::Ptr<_249bcbe38_Fn> _249c12974_FindFn(_249c1117b_ImportInfo* _self_, jule::Str _22825_ident, jule::Bool ) {
	if ((!(_249c13744_isLookupable(&(*_self_), _22825_ident)))) {
		return nullptr;
	};
	return _249c0e61e_findFnInPackage((*_self_)._field_Package.get()._field_Files,_22825_ident,false);
}



inline jule::Ptr<_249bd48d0_Trait> _249c12c82_FindTrait(_249c1117b_ImportInfo* _self_, jule::Str _23928_ident) {
	if ((!(_249c13744_isLookupable(&(*_self_), _23928_ident)))) {
		return nullptr;
	};
	return _249c0e92c_findTraitInPackage((*_self_)._field_Package.get()._field_Files,_23928_ident);
}



inline jule::Ptr<_249bd6a25_Enum> _249c13090_FindEnum(_249c1117b_ImportInfo* _self_, jule::Str _25027_ident) {
	if ((!(_249c13744_isLookupable(&(*_self_), _25027_ident)))) {
		return nullptr;
	};
	return _249c0ec6d_findEnumInPackage((*_self_)._field_Package.get()._field_Files,_25027_ident);
}



inline jule::Ptr<_249bd8120_TypeEnum> _249c1339d_FindTypeEnum(_249c1117b_ImportInfo* _self_, jule::Str _26131_ident) {
	if ((!(_249c13744_isLookupable(&(*_self_), _26131_ident)))) {
		return nullptr;
	};
	return _249c100ae_findTypeEnumInPackage((*_self_)._field_Package.get()._field_Files,_26131_ident);
}



inline jule::Bool _249c13744_isLookupable(_249c1117b_ImportInfo* _self_, jule::Str _27027_ident) {
	if ((*_self_)._field_CppLinked) {
		return false;
	};
	if ((!((*_self_)._field_ImportAll))) {
		if ((((*_self_)._field_Alias.len() != 0LL) || _249c13a52_existIdent(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_Selected.len() > 0LL)) {
			if ((!(_249c13a52_existIdent(&(*_self_), _27027_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _249c13a52_existIdent(_249c1117b_ImportInfo* _self_, jule::Str _29025_ident) {
	{
		auto &expr = (*_self_)._field_Selected;
		auto it = expr.begin();
		_iter_begin_24e9d3036:;
		if (it != expr.end()) {
			jule::Ptr<_23abd3d83_Token> &_29116_sident = *it;
			{
				if ((_29116_sident.get()._field_Kind == _29025_ident)) {
					return true;
				};
			}
			_iter_next_24e9d3036:;
			++it;
			goto _iter_begin_24e9d3036;
		}
		_iter_end_24e9d3036:;
	};
	return false;
}



inline jule::Bool _249c13cd8_isAccessibleViaSelection(_249c1117b_ImportInfo* _self_) {
	return (((*_self_)._field_ImportAll || ((*_self_)._field_Selected.len() == 0LL)) || _249c13a52_existIdent(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _249c1117b_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_249c1117b_ImportInfo> _249c145ad_FindPackage(_249c140d5_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_249c1117b_ImportInfo> _249c148bb_SelectPackage(_249c140d5_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_249c1117b_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_249c3702b_Var> _249c14c73_FindVar(_249c140d5_Package* _self_, jule::Str _32026_ident, jule::Bool _32038_cpp_linked) {
	return _249c0d893_findVarInPackage((*_self_)._field_Files,_32026_ident,_32038_cpp_linked);
}



inline jule::Ptr<_249caea98_TypeAlias> _249c1512a_FindTypeAlias(_249c140d5_Package* _self_, jule::Str _32632_ident, jule::Bool _32644_cpp_linked) {
	return _249c0dcc2_findTypeAliasInPackage((*_self_)._field_Files,_32632_ident,_32644_cpp_linked);
}



inline jule::Ptr<_249036b01_Struct> _249c154d2_FindStruct(_249c140d5_Package* _self_, jule::Str _33229_ident, jule::Bool _33241_cpp_linked) {
	return _249c0e1ac_findStructInPackage((*_self_)._field_Files,_33229_ident,_33241_cpp_linked);
}



inline jule::Ptr<_249bcbe38_Fn> _249c15889_FindFn(_249c140d5_Package* _self_, jule::Str _33825_ident, jule::Bool _33837_cpp_linked) {
	return _249c0e61e_findFnInPackage((*_self_)._field_Files,_33825_ident,_33837_cpp_linked);
}



inline jule::Ptr<_249bd48d0_Trait> _249c15b97_FindTrait(_249c140d5_Package* _self_, jule::Str _34428_ident) {
	return _249c0e92c_findTraitInPackage((*_self_)._field_Files,_34428_ident);
}



inline jule::Ptr<_249bd6a25_Enum> _249c15ea5_FindEnum(_249c140d5_Package* _self_, jule::Str _35027_ident) {
	return _249c0ec6d_findEnumInPackage((*_self_)._field_Files,_35027_ident);
}



inline jule::Ptr<_249bd8120_TypeEnum> _249c162b3_FindTypeEnum(_249c140d5_Package* _self_, jule::Str _35631_ident) {
	return _249c100ae_findTypeEnumInPackage((*_self_)._field_Files,_35631_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _249c140d5_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_249c1117b_ImportInfo> _249c197e4_FindPackage(_249c192c7_Sema* _self_, jule::Str _21930_ident) {
	return _249c7a745_FindPackage((*_self_)._field_file.ptr(), _21930_ident);
}



inline jule::Ptr<_249c1117b_ImportInfo> _249c19b02_SelectPackage(_249c192c7_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_249c1117b_ImportInfo>)> _22932_selector) {
	return _249c7aa53_SelectPackage((*_self_)._field_file.ptr(), _22932_selector);
}



inline jule::Ptr<_249c3702b_Var> _249c19ea9_FindVar(_249c192c7_Sema* _self_, jule::Str _23926_ident, jule::Bool _23938_cpp_linked) {
	jule::Ptr<_249c3702b_Var> _24117_v = _249c0d893_findVarInPackage((*_self_)._field_files,_23926_ident,_23938_cpp_linked);;
	if ((_24117_v != nullptr)) {
		return _24117_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_24ea07bd7:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _24721_imp = *it;
			{
				if ((!(_249c17bee_impIsLookupable(_24721_imp,_23926_ident)))) {
					goto _iter_next_24ea07bd7;
				};
				_24117_v=_249c11d5d_FindVar(_24721_imp.ptr(), _23926_ident,_23938_cpp_linked);
				if (((_24117_v != nullptr) && _249c1c660_isAccessibleDefine(&(*_self_), _24117_v.get()._field_Public,_24117_v.get()._field_Token))) {
					return _24117_v;
				};
			}
			_iter_next_24ea07bd7:;
			++it;
			goto _iter_begin_24ea07bd7;
		}
		_iter_end_24ea07bd7:;
	};
	return nullptr;
}



inline jule::Ptr<_249caea98_TypeAlias> _249c1a361_FindTypeAlias(_249c192c7_Sema* _self_, jule::Str _26632_ident, jule::Bool _26644_cpp_linked) {
	jule::Ptr<_249caea98_TypeAlias> _26817_ta = _249c0dcc2_findTypeAliasInPackage((*_self_)._field_files,_26632_ident,_26644_cpp_linked);;
	if ((_26817_ta != nullptr)) {
		return _26817_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_24ea0a866:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _27421_imp = *it;
			{
				if ((!(_249c17bee_impIsLookupable(_27421_imp,_26632_ident)))) {
					goto _iter_next_24ea0a866;
				};
				_26817_ta=_249c12215_FindTypeAlias(_27421_imp.ptr(), _26632_ident,_26644_cpp_linked);
				if (((_26817_ta != nullptr) && _249c1c660_isAccessibleDefine(&(*_self_), _26817_ta.get()._field_Public,_26817_ta.get()._field_Token))) {
					return _26817_ta;
				};
			}
			_iter_next_24ea0a866:;
			++it;
			goto _iter_begin_24ea0a866;
		}
		_iter_end_24ea0a866:;
	};
	return nullptr;
}



inline jule::Ptr<_249036b01_Struct> _249c1a718_FindStruct(_249c192c7_Sema* _self_, jule::Str _29329_ident, jule::Bool _29341_cppLinked) {
	jule::Ptr<_249036b01_Struct> _29517_s = _249c0e1ac_findStructInPackage((*_self_)._field_files,_29329_ident,_29341_cppLinked);;
	if ((_29517_s != nullptr)) {
		return _29517_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_24ea0d4e5:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _30021_imp = *it;
			{
				if ((!(_249c17bee_impIsLookupable(_30021_imp,_29329_ident)))) {
					goto _iter_next_24ea0d4e5;
				};
				_29517_s=_249c125bc_FindStruct(_30021_imp.ptr(), _29329_ident,_29341_cppLinked);
				if (((_29517_s != nullptr) && _249c1c660_isAccessibleDefine(&(*_self_), _29517_s.get()._field_Public,_29517_s.get()._field_Token))) {
					return _29517_s;
				};
			}
			_iter_next_24ea0d4e5:;
			++it;
			goto _iter_begin_24ea0d4e5;
		}
		_iter_end_24ea0d4e5:;
	};
	return nullptr;
}



inline jule::Ptr<_249bcbe38_Fn> _249c1aac0_FindFn(_249c192c7_Sema* _self_, jule::Str _31825_ident, jule::Bool _31837_cpp_linked) {
	jule::Ptr<_249bcbe38_Fn> _32017_f = _249c0e61e_findFnInPackage((*_self_)._field_files,_31825_ident,_31837_cpp_linked);;
	if ((_32017_f != nullptr)) {
		return _32017_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_24ea11174:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _32621_imp = *it;
			{
				if ((!(_249c17bee_impIsLookupable(_32621_imp,_31825_ident)))) {
					goto _iter_next_24ea11174;
				};
				_32017_f=_249c12974_FindFn(_32621_imp.ptr(), _31825_ident,_31837_cpp_linked);
				if (((_32017_f != nullptr) && _249c1c660_isAccessibleDefine(&(*_self_), _32017_f.get()._field_Public,_32017_f.get()._field_Token))) {
					return _32017_f;
				};
			}
			_iter_next_24ea11174:;
			++it;
			goto _iter_begin_24ea11174;
		}
		_iter_end_24ea11174:;
	};
	return nullptr;
}



inline jule::Ptr<_249bd48d0_Trait> _249c1adcd_FindTrait(_249c192c7_Sema* _self_, jule::Str _34528_ident) {
	jule::Ptr<_249bd48d0_Trait> _34717_t = _249c0e92c_findTraitInPackage((*_self_)._field_files,_34528_ident);;
	if ((_34717_t != nullptr)) {
		return _34717_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_24ea13cd1:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _35321_imp = *it;
			{
				if ((!(_249c17bee_impIsLookupable(_35321_imp,_34528_ident)))) {
					goto _iter_next_24ea13cd1;
				};
				_34717_t=_249c12c82_FindTrait(_35321_imp.ptr(), _34528_ident);
				if (((_34717_t != nullptr) && _249c1c660_isAccessibleDefine(&(*_self_), _34717_t.get()._field_Public,_34717_t.get()._field_Token))) {
					return _34717_t;
				};
			}
			_iter_next_24ea13cd1:;
			++it;
			goto _iter_begin_24ea13cd1;
		}
		_iter_end_24ea13cd1:;
	};
	return nullptr;
}



inline jule::Ptr<_249bd6a25_Enum> _249c1b1db_FindEnum(_249c192c7_Sema* _self_, jule::Str _37227_ident) {
	jule::Ptr<_249bd6a25_Enum> _37417_e = _249c0ec6d_findEnumInPackage((*_self_)._field_files,_37227_ident);;
	if ((_37417_e != nullptr)) {
		return _37417_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_24ea166da:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _38021_imp = *it;
			{
				if ((!(_249c17bee_impIsLookupable(_38021_imp,_37227_ident)))) {
					goto _iter_next_24ea166da;
				};
				_37417_e=_249c13090_FindEnum(_38021_imp.ptr(), _37227_ident);
				if (((_37417_e != nullptr) && _249c1c660_isAccessibleDefine(&(*_self_), _37417_e.get()._field_Public,_37417_e.get()._field_Token))) {
					return _37417_e;
				};
			}
			_iter_next_24ea166da:;
			++it;
			goto _iter_begin_24ea166da;
		}
		_iter_end_24ea166da:;
	};
	return nullptr;
}



inline jule::Ptr<_249bd8120_TypeEnum> _249c1b4e9_FindTypeEnum(_249c192c7_Sema* _self_, jule::Str _39931_ident) {
	jule::Ptr<_249bd8120_TypeEnum> _40117_e = _249c100ae_findTypeEnumInPackage((*_self_)._field_files,_39931_ident);;
	if ((_40117_e != nullptr)) {
		return _40117_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_24ea190e4:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _40721_imp = *it;
			{
				if ((!(_249c17bee_impIsLookupable(_40721_imp,_39931_ident)))) {
					goto _iter_next_24ea190e4;
				};
				_40117_e=_249c1339d_FindTypeEnum(_40721_imp.ptr(), _39931_ident);
				if (((_40117_e != nullptr) && _249c1c660_isAccessibleDefine(&(*_self_), _40117_e.get()._field_Public,_40117_e.get()._field_Token))) {
					return _40117_e;
				};
			}
			_iter_next_24ea190e4:;
			++it;
			goto _iter_begin_24ea190e4;
		}
		_iter_end_24ea190e4:;
	};
	return nullptr;
}



inline jule::Bool _249c1b84b_isFlag(_249c192c7_Sema* _self_, jule::I64 _42321_flags) {
	return (((*_self_)._field_flags & _42321_flags) == _42321_flags);
}



inline void _249c1bac1_setCurrentFile(_249c192c7_Sema* _self_, jule::Ptr<_249c7a228_SymbolTable> _42537_f) {
	(*_self_)._field_file=_42537_f;
}



inline void _249c1be89_pushErr(_249c192c7_Sema* _self_, jule::Ptr<_23abd3d83_Token> _42726_token, jule::Str _42741_fmt, jule::Slice<jule::Any> _42754_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_249c178ad_compilerErr(_42726_token,true,_42741_fmt,jule::Any(_42754_args)));;
}



inline void _249c1c2a8_pushSugggestion(_249c192c7_Sema* _self_, jule::Str _43234_fmt, jule::Slice<jule::Any> _43247_args) {
	{
		_249c18d43_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43234_fmt,jule::Any(_43247_args));
	};
}



inline jule::Bool _249c1c660_isAccessibleDefine(_249c192c7_Sema* _self_, jule::Bool _43733_public, jule::Ptr<_23abd3d83_Token> _43747_token) {
	return ((_43733_public || (_43747_token.get()._field_File == nullptr)) || (_23abd9b14_Dir((*_self_)._field_file.get()._field_File.ptr()) == _23abd9b14_Dir(_43747_token.get()._field_File.ptr())));
}



inline jule::Bool _249c1cab1_isDuplicatedIdent(_249c192c7_Sema* _self_, jule::Uintptr _44432_itself, jule::Str _44449_ident, jule::Bool _44461_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_24ea20da9:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> &_44516_f = *it;
			{
				if (_249c7d726_isDuplicatedIdent(_44516_f.ptr(), _44432_itself,_44449_ident,_44461_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _44516_f.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_24ea21816:;
					if (it != expr.end()) {
						jule::Ptr<_249c1117b_ImportInfo> &_45020_imp = *it;
						{
							{
								auto &expr = _45020_imp.get()._field_Selected;
								auto it = expr.begin();
								_iter_begin_24ea226b3:;
								if (it != expr.end()) {
									jule::Ptr<_23abd3d83_Token> &_45124_selected = *it;
									{
										if ((_45124_selected.get()._field_Kind == _44449_ident)) {
											return true;
										};
									}
									_iter_next_24ea226b3:;
									++it;
									goto _iter_begin_24ea226b3;
								}
								_iter_end_24ea226b3:;
							};
						}
						_iter_next_24ea21816:;
						++it;
						goto _iter_begin_24ea21816;
					}
					_iter_end_24ea21816:;
				};
			}
			_iter_next_24ea20da9:;
			++it;
			goto _iter_begin_24ea20da9;
		}
		_iter_end_24ea20da9:;
	};
	return false;
}



inline void _249c1cdd0_checkDirectives(jule::Ptr<_249c192c7_Sema> _self_, jule::Slice<jule::Ptr<_24900cb2c_Directive>>& _46140_d, jule::Any _46166_o) {
	_249c0a0ed_directiveChecker _46217_dc = _249c0a0ed_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_24900cb2c_Directive>>>)((&(_46140_d)))), ._field_o=jule::Any(_46166_o)};;
	_249c0b709_check(&_46217_dc);
}



inline jule::Bool _249c1d331_checkGenericQuantity(_249c192c7_Sema* _self_, jule::I64 _47039_required, jule::I64 _47054_given, jule::Ptr<_23abd3d83_Token> _47066_token) {
	jule::Bool _47083_ok = jule::Bool();
	{
		
		if (((_47039_required == 0LL) && (_47054_given > 0LL))) {
			_case_begin_24ea255b7:;
			{
				_249c1be89_pushErr(&(*_self_), _47066_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if (((_47039_required > 0LL) && (_47054_given == 0LL))) {
			_case_begin_24ea256b6:;
			{
				_249c1be89_pushErr(&(*_self_), _47066_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required < _47054_given)) {
			_case_begin_24ea2572c:;
			{
				_249c1be89_pushErr(&(*_self_), _47066_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required > _47054_given)) {
			_case_begin_24ea253db:;
			{
				_249c1be89_pushErr(&(*_self_), _47066_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else {
			_case_begin_24ea24e57:;
			{
				_47083_ok = true;
				return _47083_ok;
			}
		}
		_match_end_24ea24d7a:;
	};
}



inline jule::Bool _249c1d70a_isDuplicatedImportSelection(_249c192c7_Sema* _self_, jule::Uintptr _48942_itself, jule::Str _48959_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_24ea289e9:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> &_49016_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49016_imp) == _48942_itself)) {
					goto _iter_end_24ea289e9;
				};
				if (_249c13a52_existIdent(_49016_imp.ptr(), _48959_ident)) {
					return true;
				};
			}
			_iter_next_24ea289e9:;
			++it;
			goto _iter_begin_24ea289e9;
		}
		_iter_end_24ea289e9:;
	};
	return false;
}



inline jule::Any _249c1dac3_getImportDef(_249c192c7_Sema* _self_, jule::Str _50227_ident, jule::Ptr<_249c1117b_ImportInfo>& _50244_imp) {
	if ((_249cde4ac_findPackageBuiltinDef(_50244_imp.get()._field_LinkPath,_50227_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _50244_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_24ea2ac82:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _50621_f = *it;
			{
				;
				jule::Any _50921_def = _249c7d2c5_defByIdent(_50621_f.ptr(), _50227_ident,false);;
				if ((_50921_def != nullptr)) {
					return jule::Any(_50921_def);
				};
			}
			_iter_next_24ea2ac82:;
			++it;
			goto _iter_begin_24ea2ac82;
		}
		_iter_end_24ea2ac82:;
	};
	return nullptr;
}



inline jule::Bool _24ea3285a_checkImportSelection(_249c192c7_Sema* _self_, jule::Ptr<_23abd3d83_Token>& _51743_ident, jule::Ptr<_249c3702b_Var>& _51759_s) {
	if ((!(_249c1c660_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_249c1be89_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_249c1c2a8_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_249c105a9_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_249c1be89_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _24ea36dd1_checkImportSelection(_249c192c7_Sema* _self_, jule::Ptr<_23abd3d83_Token>& _51743_ident, jule::Ptr<_249caea98_TypeAlias>& _51759_s) {
	if ((!(_249c1c660_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_249c1be89_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_249c1c2a8_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_249c105a9_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_249c1be89_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _24ea3b3e1_checkImportSelection(_249c192c7_Sema* _self_, jule::Ptr<_23abd3d83_Token>& _51743_ident, jule::Ptr<_249036b01_Struct>& _51759_s) {
	if ((!(_249c1c660_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_249c1be89_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_249c1c2a8_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_249c105a9_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_249c1be89_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _24ea40c86_checkImportSelection(_249c192c7_Sema* _self_, jule::Ptr<_23abd3d83_Token>& _51743_ident, jule::Ptr<_249bd48d0_Trait>& _51759_s) {
	if ((!(_249c1c660_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_249c1be89_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_249c1c2a8_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_249c105a9_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_249c1be89_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _24ea452b8_checkImportSelection(_249c192c7_Sema* _self_, jule::Ptr<_23abd3d83_Token>& _51743_ident, jule::Ptr<_249bd6a25_Enum>& _51759_s) {
	if ((!(_249c1c660_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_249c1be89_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_249c1c2a8_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_249c105a9_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_249c1be89_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _24ea497ea_checkImportSelection(_249c192c7_Sema* _self_, jule::Ptr<_23abd3d83_Token>& _51743_ident, jule::Ptr<_249bd8120_TypeEnum>& _51759_s) {
	if ((!(_249c1c660_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_249c1be89_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_249c1c2a8_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_249c105a9_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_249c1be89_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _24ea4dd2c_checkImportSelection(_249c192c7_Sema* _self_, jule::Ptr<_23abd3d83_Token>& _51743_ident, jule::Ptr<_249bcbe38_Fn>& _51759_s) {
	if ((!(_249c1c660_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_249c1be89_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_249c1c2a8_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_249c105a9_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_249c1be89_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}



inline jule::Bool _249c1e2aa_checkImportSelectedSelections(_249c192c7_Sema* _self_, jule::Ptr<_249c1117b_ImportInfo>& _53153_imp) {
	jule::Bool _53173_ok = jule::Bool();
	_53173_ok=true;
	{
		auto &expr = _53153_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_24ea2cb30:;
		if (it != expr.end()) {
			jule::Ptr<_23abd3d83_Token> _53316_ident = *it;
			{
				if ((_53316_ident.get()._field_Kind == jule::Str("self", 4))) {
					goto _iter_next_24ea2cb30;
				};
				if (_249c1d70a_isDuplicatedImportSelection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_53153_imp)),_53316_ident.get()._field_Kind)) {
					_249c1be89_pushErr(&(*_self_), _53316_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_53316_ident.get()._field_Kind)}));
					_249c1c2a8_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_53173_ok=false;
					goto _iter_next_24ea2cb30;
				};
				jule::Any _54521_def = _249c1dac3_getImportDef(&(*_self_), _53316_ident.get()._field_Kind,_53153_imp);;
				{
					auto &_match_expr{ _54521_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_24ea30726:;
						{
							goto _iter_next_24ea2cb30;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_249c3702b_Var>>()) {
						_case_begin_24ea3134d:;
						{
							jule::Ptr<_249c3702b_Var> _55125_v = _54521_def.operator jule::Ptr<_249c3702b_Var>();;
							_53173_ok=(_24ea3285a_checkImportSelection(&(*_self_), _53316_ident,_55125_v) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_249caea98_TypeAlias>>()) {
						_case_begin_24ea300e9:;
						{
							jule::Ptr<_249caea98_TypeAlias> _55425_ta = _54521_def.operator jule::Ptr<_249caea98_TypeAlias>();;
							_53173_ok=(_24ea36dd1_checkImportSelection(&(*_self_), _53316_ident,_55425_ta) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_249036b01_Struct>>()) {
						_case_begin_24ea30869:;
						{
							jule::Ptr<_249036b01_Struct> _55725_s = _54521_def.operator jule::Ptr<_249036b01_Struct>();;
							_53173_ok=(_24ea3b3e1_checkImportSelection(&(*_self_), _53316_ident,_55725_s) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_249bd48d0_Trait>>()) {
						_case_begin_24ea308d0:;
						{
							jule::Ptr<_249bd48d0_Trait> _56025_t = _54521_def.operator jule::Ptr<_249bd48d0_Trait>();;
							_53173_ok=(_24ea40c86_checkImportSelection(&(*_self_), _53316_ident,_56025_t) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_249bd6a25_Enum>>()) {
						_case_begin_24ea3157e:;
						{
							jule::Ptr<_249bd6a25_Enum> _56325_e = _54521_def.operator jule::Ptr<_249bd6a25_Enum>();;
							_53173_ok=(_24ea452b8_checkImportSelection(&(*_self_), _53316_ident,_56325_e) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_249bd8120_TypeEnum>>()) {
						_case_begin_24ea315e5:;
						{
							jule::Ptr<_249bd8120_TypeEnum> _56625_e = _54521_def.operator jule::Ptr<_249bd8120_TypeEnum>();;
							_53173_ok=(_24ea497ea_checkImportSelection(&(*_self_), _53316_ident,_56625_e) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_249bcbe38_Fn>>()) {
						_case_begin_24ea3165b:;
						{
							jule::Ptr<_249bcbe38_Fn> _56925_f = _54521_def.operator jule::Ptr<_249bcbe38_Fn>();;
							_53173_ok=(_24ea4dd2c_checkImportSelection(&(*_self_), _53316_ident,_56925_f) && _53173_ok);
						}
					}
					else {
						_case_begin_24ea306b0:;
						{
							_249c1be89_pushErr(&(*_self_), _53316_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_53316_ident.get()._field_Kind)}));
							_53173_ok=false;
							goto _iter_next_24ea2cb30;
						}
					}
					_match_end_24ea2d34a:;
				};
			}
			_iter_next_24ea2cb30:;
			++it;
			goto _iter_begin_24ea2cb30;
		}
		_iter_end_24ea2cb30:;
	};
	return _53173_ok;
}



inline jule::Bool _24ea5387b_checkImportsAllSelectionsFromCollection(_249c192c7_Sema* _self_, jule::Slice<jule::Ptr<_249c3702b_Var>>& _58062_s, jule::Ptr<_23abd3d83_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_24ea55581:;
		if (it != expr.end()) {
			jule::Ptr<_249c3702b_Var> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_24ea3285a_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_24ea55581:;
			++it;
			goto _iter_begin_24ea55581;
		}
		_iter_end_24ea55581:;
	};
	return _58117_ok;
}

inline jule::Bool _24ea54cde_checkImportsAllSelectionsFromCollection(_249c192c7_Sema* _self_, jule::Slice<jule::Ptr<_249caea98_TypeAlias>>& _58062_s, jule::Ptr<_23abd3d83_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_24ea585b7:;
		if (it != expr.end()) {
			jule::Ptr<_249caea98_TypeAlias> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_24ea36dd1_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_24ea585b7:;
			++it;
			goto _iter_begin_24ea585b7;
		}
		_iter_end_24ea585b7:;
	};
	return _58117_ok;
}

inline jule::Bool _24ea57462_checkImportsAllSelectionsFromCollection(_249c192c7_Sema* _self_, jule::Slice<jule::Ptr<_249036b01_Struct>>& _58062_s, jule::Ptr<_23abd3d83_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_24ea5b5cb:;
		if (it != expr.end()) {
			jule::Ptr<_249036b01_Struct> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_24ea3b3e1_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_24ea5b5cb:;
			++it;
			goto _iter_begin_24ea5b5cb;
		}
		_iter_end_24ea5b5cb:;
	};
	return _58117_ok;
}

inline jule::Bool _24ea5b9e9_checkImportsAllSelectionsFromCollection(_249c192c7_Sema* _self_, jule::Slice<jule::Ptr<_249bcbe38_Fn>>& _58062_s, jule::Ptr<_23abd3d83_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_24ea5e634:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_24ea4dd2c_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_24ea5e634:;
			++it;
			goto _iter_begin_24ea5e634;
		}
		_iter_end_24ea5e634:;
	};
	return _58117_ok;
}

inline jule::Bool _24ea5d4bd_checkImportsAllSelectionsFromCollection(_249c192c7_Sema* _self_, jule::Slice<jule::Ptr<_249bd48d0_Trait>>& _58062_s, jule::Ptr<_23abd3d83_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_24ea62604:;
		if (it != expr.end()) {
			jule::Ptr<_249bd48d0_Trait> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_24ea40c86_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_24ea62604:;
			++it;
			goto _iter_begin_24ea62604;
		}
		_iter_end_24ea62604:;
	};
	return _58117_ok;
}

inline jule::Bool _24ea6148d_checkImportsAllSelectionsFromCollection(_249c192c7_Sema* _self_, jule::Slice<jule::Ptr<_249bd6a25_Enum>>& _58062_s, jule::Ptr<_23abd3d83_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_24ea655c4:;
		if (it != expr.end()) {
			jule::Ptr<_249bd6a25_Enum> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_24ea452b8_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_24ea655c4:;
			++it;
			goto _iter_begin_24ea655c4;
		}
		_iter_end_24ea655c4:;
	};
	return _58117_ok;
}

inline jule::Bool _24ea6445d_checkImportsAllSelectionsFromCollection(_249c192c7_Sema* _self_, jule::Slice<jule::Ptr<_249bd8120_TypeEnum>>& _58062_s, jule::Ptr<_23abd3d83_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_24ea6862c:;
		if (it != expr.end()) {
			jule::Ptr<_249bd8120_TypeEnum> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_24ea497ea_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_24ea6862c:;
			++it;
			goto _iter_begin_24ea6862c;
		}
		_iter_end_24ea6862c:;
	};
	return _58117_ok;
}



inline jule::Bool _249c1e9d6_checkImportAllSelections(_249c192c7_Sema* _self_, jule::Ptr<_249c1117b_ImportInfo>& _59044_imp) {
	jule::Bool _59064_ok = jule::Bool();
	_59064_ok=true;
	{
		auto &expr = _59044_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_24ea52e52:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> &_59216_file = *it;
			{
				_59064_ok=(_24ea5387b_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Vars,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_24ea54cde_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_TypeAliases,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_24ea57462_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Structs,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_24ea5b9e9_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Funcs,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_24ea5d4bd_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Traits,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_24ea6148d_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Enums,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_24ea6445d_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_TypeEnums,_59044_imp.get()._field_Token) && _59064_ok);
			}
			_iter_next_24ea52e52:;
			++it;
			goto _iter_begin_24ea52e52;
		}
		_iter_end_24ea52e52:;
	};
	return _59064_ok;
}



inline jule::Bool _249c1ed05_checkImportSelections(_249c192c7_Sema* _self_, jule::Ptr<_249c1117b_ImportInfo>& _60445_imp) {
	jule::Bool _60465_ok = jule::Bool();
	if ((_60445_imp.get()._field_Selected.len() > 0LL)) {
		_60465_ok = _249c1e2aa_checkImportSelectedSelections(&(*_self_), _60445_imp);
		return _60465_ok;
	} else if (_60445_imp.get()._field_ImportAll) {
		_60465_ok = _249c1e9d6_checkImportAllSelections(&(*_self_), _60445_imp);
		return _60465_ok;
	};
	_60465_ok = true;
	return _60465_ok;
}



inline jule::Bool _249c20113_isUseAliasDuplication(_249c192c7_Sema* _self_, jule::Ptr<_249c1117b_ImportInfo>& _61341_imp) {
	if ((_61341_imp.get()._field_Alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_24ea6b94e:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _61821_imp2 = *it;
			{
				if ((_61821_imp2 == _61341_imp)) {
					goto _iter_end_24ea6b94e;
				};
				if ((_61821_imp2.get()._field_Alias == _61341_imp.get()._field_Alias)) {
					return true;
				};
				if (((_61821_imp2.get()._field_Ident == _61821_imp2.get()._field_LinkPath) && (_61821_imp2.get()._field_Ident == _61341_imp.get()._field_Alias))) {
					return true;
				};
			}
			_iter_next_24ea6b94e:;
			++it;
			goto _iter_begin_24ea6b94e;
		}
		_iter_end_24ea6b94e:;
	};
	return false;
}



inline jule::Bool _249c20421_checkImport(_249c192c7_Sema* _self_, jule::Ptr<_249c1117b_ImportInfo>& _63335_imp) {
	if ((_63335_imp.get()._field_CppLinked || (_63335_imp.get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;
	};
	if (_249c20113_isUseAliasDuplication(&(*_self_), _63335_imp)) {
		_249c1be89_pushErr(&(*_self_), _63335_imp.get()._field_Token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_63335_imp.get()._field_Alias)}));
		_249c1c2a8_pushSugggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_63335_imp.get()._field_Duplicate))) {
		jule::Ptr<_249c192c7_Sema> _64421_sema = jule::new_ptr<_249c192c7_Sema>(_249c192c7_Sema{._field_flags=(*_self_)._field_flags});;
		_249c3404a_check(_64421_sema, _63335_imp.get()._field_Package.get()._field_Files);
		if ((_64421_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_64421_sema.get()._field_errors);
			_64421_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _249c1ed05_checkImportSelections(&(*_self_), _63335_imp);
}



inline void _249c205ec_checkImports(_249c192c7_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_24ea7214c:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _65821_file = *it;
			{
				_249c1bac1_setCurrentFile(&(*_self_), _65821_file);
				{
					auto &expr = _65821_file.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_24ea738bd:;
					if (it != expr.end()) {
						jule::Ptr<_249c1117b_ImportInfo> _66025_imp = *it;
						{
							jule::Bool _66121_ok = _249c20421_checkImport(&(*_self_), _66025_imp);;
							if ((!(_66121_ok))) {
								_249c1be89_pushErr(&(*_self_), _66025_imp.get()._field_Token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_66025_imp.get()._field_LinkPath)}));
								return;;
							};
						}
						_iter_next_24ea738bd:;
						++it;
						goto _iter_begin_24ea738bd;
					}
					_iter_end_24ea738bd:;
				};
			}
			_iter_next_24ea7214c:;
			++it;
			goto _iter_begin_24ea7214c;
		}
		_iter_end_24ea7214c:;
	};
}



inline void _249c207c8_implFileImpls(jule::Ptr<_249c192c7_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Impls;
		auto it = expr.begin();
		_iter_begin_24ea74b33:;
		if (it != expr.end()) {
			jule::Ptr<_249bdc5ca_Impl> _67221_imp = *it;
			{
				_249c2b130_implImpl(_self_, _67221_imp);
			}
			_iter_next_24ea74b33:;
			++it;
			goto _iter_begin_24ea74b33;
		}
		_iter_end_24ea74b33:;
	};
}



inline void _249c209a4_implImpls(jule::Ptr<_249c192c7_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_24ea75936:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _67821_file = *it;
			{
				_249c1bac1_setCurrentFile(_self_.ptr(), _67821_file);
				_249c207c8_implFileImpls(_self_);
			}
			_iter_next_24ea75936:;
			++it;
			goto _iter_begin_24ea75936;
		}
		_iter_end_24ea75936:;
	};
}



inline void _249c20b80_checkEnums(jule::Ptr<_249c192c7_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_24ea7667e:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _68521_file = *it;
			{
				_249c1bac1_setCurrentFile(_self_.ptr(), _68521_file);
				_249c28759_checkEnumDecls(_self_);
			}
			_iter_next_24ea7667e:;
			++it;
			goto _iter_begin_24ea7667e;
		}
		_iter_end_24ea7667e:;
	};
}



inline _249cbdcb6_typeChecker _249c210d1_typeChecker(jule::Ptr<_249c192c7_Sema> _self_, jule::Trait<_249ccb3bc_Lookup> _69135_l, jule::Slice<jule::Ptr<_249caea98_TypeAlias>> _69150_generics, jule::Ptr<_249cbcea2_referencer> _69213_referencer) {
	_249cbdcb6_typeChecker _69317_tc = _249cbdcb6_typeChecker{._field_s=_self_, ._field_rootLookup=_69135_l, ._field_lookup=_69135_l, ._field_referencer=_69213_referencer, ._field_useGenerics=_69150_generics, };;
	{
		auto &_match_expr{ _69135_l };
		
		if (_match_expr.type_is<jule::Ptr<_249be9296_scopeChecker>>()) {
			_case_begin_24ea78c14:;
			{
				jule::Ptr<_249be9296_scopeChecker> _70221_hard = _249bec61d_getHardRoot(_69135_l.operator jule::Ptr<_249be9296_scopeChecker>());;
				_69317_tc._field_refers=_70221_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_24ea78928:;
	};
	if (((_69213_referencer != nullptr) && (_69213_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _69213_referencer.get()._field_owner };
			
			if (_match_expr.type_is<jule::Ptr<_249caea98_TypeAlias>>()) {
				_case_begin_24ea79220:;
				{
					_69317_tc._field_ownerAlias=_69213_referencer.get()._field_owner.operator jule::Ptr<_249caea98_TypeAlias>();
				}
			}
			_match_end_24ea7872a:;
		};
	};
	return _69317_tc;
}



inline jule::Ptr<_249cb078b_TypeKind> _249c215cb_buildTypeWithRefers(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_2490463c4_TypeDecl>& _71844_t, jule::Trait<_249ccb3bc_Lookup> _71867_l, jule::Slice<jule::Ptr<_249caea98_TypeAlias>> _71913_generics, jule::Ptr<_249cbcea2_referencer> _71941_referencer) {
	return ({ auto _wrap_copy = _249c210d1_typeChecker(_self_, _71867_l,_71913_generics,_71941_referencer); _249cc6032_checkDecl(&_wrap_copy, _71844_t); });
}



inline jule::Bool _249c21ac6_checkTypeWithRefers(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249cb48e4_TypeSymbol>& _72544_t, jule::Trait<_249ccb3bc_Lookup> _72564_l, jule::Slice<jule::Ptr<_249caea98_TypeAlias>> _72613_generics, jule::Ptr<_249cbcea2_referencer> _72641_referencer) {
	jule::Bool _72668_ok = jule::Bool();
	if (_249cb4c9b_checked(_72544_t.ptr())) {
		_72668_ok = true;
		return _72668_ok;
	};
	_72544_t.get()._field_Kind=_249c215cb_buildTypeWithRefers(_self_, _72544_t.get()._field_Decl,_72564_l,_72613_generics,_72641_referencer);
	_72668_ok = _249cb4c9b_checked(_72544_t.ptr());
	return _72668_ok;
}



inline jule::Ptr<_249bda694_constraintChecker> _249c21d3a_constraintChecker(jule::Ptr<_249c192c7_Sema> _self_) {
	return jule::new_ptr<_249bda694_constraintChecker>(_249bda694_constraintChecker{._field_s=_self_, });
}



inline jule::Bool _249c221e2_checkType(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249cb48e4_TypeSymbol>& _74034_t, jule::Trait<_249ccb3bc_Lookup> _74054_l) {
	return _249c21ac6_checkTypeWithRefers(_self_, _74034_t,_74054_l,nullptr,nullptr);
}



inline jule::Ptr<_249cb078b_TypeKind> _249c22643_buildTypeWithGenerics(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_2490463c4_TypeDecl>& _74646_t, jule::Slice<jule::Ptr<_249caea98_TypeAlias>> _74713_generics, jule::Ptr<_249bcccd5_ReferenceStack> _74741_refers) {
	jule::Ptr<_249cbdcb6_typeChecker> _74817_tc = jule::new_ptr<_249cbdcb6_typeChecker>(_249cbdcb6_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_249ccb3bc_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_249ccb3bc_Lookup>(_self_, 3), ._field_refers=_74741_refers, ._field_useGenerics=_74713_generics, });;
	return _249cc6032_checkDecl(_74817_tc.ptr(), _74646_t);
}



inline jule::Ptr<_249cb078b_TypeKind> _249c22951_buildType(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_2490463c4_TypeDecl>& _75934_t) {
	return _249c22643_buildTypeWithGenerics(_self_, _75934_t,nullptr,nullptr);
}



inline jule::Ptr<_249cb078b_TypeKind> _249c22c5e_selectType(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_2490463c4_TypeDecl>& _76435_t) {
	jule::Ptr<_249cbdcb6_typeChecker> _76517_tc = jule::new_ptr<_249cbdcb6_typeChecker>(_249cbdcb6_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_249ccb3bc_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_249ccb3bc_Lookup>(_self_, 3), ._field_selection=true, });;
	return _249cc6032_checkDecl(_76517_tc.ptr(), _76435_t);
}



inline jule::Ptr<_249c81ac0_Eval> _249c231b0_evalpd(jule::Ptr<_249c192c7_Sema> _self_, jule::Trait<_249ccb3bc_Lookup> _77630_l, jule::Ptr<_249cb078b_TypeKind> _77645_p, jule::Ptr<_249c3702b_Var> _77663_owner) {
	jule::Ptr<_249c81ac0_Eval> _77717_e = jule::new_ptr<_249c81ac0_Eval>(_249c81ac0_Eval{._field_s=_self_, ._field_lookup=_77630_l, ._field_owner=_77663_owner, });;
	{
		auto &_match_expr{ _77630_l };
		
		if (_match_expr.type_is<jule::Ptr<_249be9296_scopeChecker>>()) {
			_case_begin_24ea84060:;
			{
				_77717_e.get()._field_unsafety=_249beb72c_isUnsafe(_77630_l.operator jule::Ptr<_249be9296_scopeChecker>());
			}
		}
		_match_end_24ea8400a:;
	};
	_77717_e.get()._field_prefix=_77645_p;
	return _77717_e;
}



inline jule::Ptr<_249c81ac0_Eval> _249c23567_evalp(jule::Ptr<_249c192c7_Sema> _self_, jule::Trait<_249ccb3bc_Lookup> _79129_l, jule::Ptr<_249cb078b_TypeKind> _79144_p) {
	return _249c231b0_evalpd(_self_, _79129_l,_79144_p,nullptr);
}



inline jule::Ptr<_249c81ac0_Eval> _249c23875_eval(jule::Ptr<_249c192c7_Sema> _self_, jule::Trait<_249ccb3bc_Lookup> _79628_l) {
	return _249c23567_evalp(_self_, _79628_l,nullptr);
}



inline jule::Bool _249c23d70_checkAssignType(jule::Ptr<_249c192c7_Sema> _self_, jule::Bool _80035_destIsRef, jule::Ptr<_249cb078b_TypeKind>& _80057_dest, jule::Ptr<_249c80052_Data>& _80114_d, jule::Ptr<_23abd3d83_Token> _80128_errorToken) {
	if (_80114_d.get()._field_Decl) {
		_249c1be89_pushErr(_self_.ptr(), _80128_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_80035_destIsRef) {
		if ((!(_249cb0e95_Equals(_80057_dest, _80114_d.get()._field_Kind)))) {
			_249c1be89_pushErr(_self_.ptr(), _80128_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_80057_dest.ptr())),jule::Any(_249cb0b87_Str(_80114_d.get()._field_Kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_249c6a823_assignTypeChecker> _81221_atc = jule::new_ptr<_249c6a823_assignTypeChecker>(_249c6a823_assignTypeChecker{._field_s=_self_, ._field_dest=_80057_dest, ._field_d=_80114_d, ._field_errorToken=_80128_errorToken});;
		jule::Bool _81817_ok = _249c6b99a_check(_81221_atc.ptr());;
		if ((!(_81817_ok))) {
			return false;
		};
	};
	if (((!(_249c80915_IsConst(_80114_d.ptr()))) || (_249cb289d_Prim(_80057_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _82817_kind = _249cb289d_Prim(_80057_dest.ptr()).get()._field_Kind;;
	{
		
		if (_249bc4084_IsSigInt(_82817_kind)) {
			_case_begin_24ea8ae35:;
			{
				_24916a0db_SetI64(_80114_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_249168260_AsI64(_80114_d.get()._field_Constant.ptr())));
			}
		}
		else if (_249bc41b6_IsUnsigInt(_82817_kind)) {
			_case_begin_24ea8aeac:;
			{
				_24917646b_SetU64(_80114_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_24915c3a8_AsU64(_80114_d.get()._field_Constant.ptr())));
			}
		}
		else if (_249bc442a_IsFloat(_82817_kind)) {
			_case_begin_24ea8b034:;
			{
				_24917b828_SetF64(_80114_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_24916922d_AsF64(_80114_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_24ea8ad69:;
	};
	return true;
}



inline jule::Bool _249c242c1_checkTypeCompatibility(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249cb078b_TypeKind>& _84247_dest, jule::Ptr<_249cb078b_TypeKind>& _84314_src, jule::Ptr<_23abd3d83_Token>& _84335_errorToken) {
	if ((_84314_src == nullptr)) {
		_249c1be89_pushErr(_self_.ptr(), _84335_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_84247_dest.ptr())),jule::Any(_249cb0b87_Str(_84314_src.ptr()))}));
		return false;
	};
	if ((_249cb453c_Tup(_84314_src.ptr()) != nullptr)) {
		_249c1be89_pushErr(_self_.ptr(), _84335_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_84247_dest.ptr())),jule::Any(_249cb0b87_Str(_84314_src.ptr()))}));
		return false;
	};
	_249c68bea_typeCompatibilityChecker _85717_tcc = _249c68bea_typeCompatibilityChecker{._field_s=_self_, ._field_dest=_84247_dest, ._field_src=_84314_src, ._field_errorToken=_84335_errorToken};;
	if (_249c6a2d4_check(&_85717_tcc)) {
		return true;
	};
	_249c1be89_pushErr(_self_.ptr(), _84335_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_84247_dest.ptr())),jule::Any(_249cb0b87_Str(_84314_src.ptr()))}));
	return false;
}



inline jule::Ptr<_249cb078b_TypeKind> _249c2469a_buildNonGenericTypeKind(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_2490463c4_TypeDecl>& _87848_ast, jule::Slice<jule::Ptr<_2490539a8_GenericDecl>>& _87914_generics) {
	jule::Ptr<_249cbdcb6_typeChecker> _88017_tc = jule::new_ptr<_249cbdcb6_typeChecker>(_249cbdcb6_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_249ccb3bc_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_249ccb3bc_Lookup>(_self_, 3), ._field_ignoreGenerics=_87914_generics, });;
	return _249cc6032_checkDecl(_88017_tc.ptr(), _87848_ast);
}



inline void _249c24953_buildFnNonGenericTypeKinds(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bcc312_FnIns>& _88951_f) {
	jule::Slice<jule::Ptr<_2490539a8_GenericDecl>> _89017_generics = nullptr;;
	if (_2490ab25d_IsMethod(_88951_f.get()._field_Decl.ptr())) {
		_89017_generics=jule::append(_88951_f.get()._field_Decl.get()._field_Generics,_88951_f.get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_89017_generics=_88951_f.get()._field_Decl.get()._field_Generics;
	};
	{
		auto &expr = _88951_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_24ea94b20:;
		if (it != expr.end()) {
			jule::Ptr<_249bcc125_ParamIns> _89721_p = *it;
			{
				if ((!(_24909ab54_IsSelf(_89721_p.get()._field_Decl.ptr())))) {
					_89721_p.get()._field_Kind=_249c2469a_buildNonGenericTypeKind(_self_, _89721_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_89017_generics);
				};
			}
			_iter_next_24ea94b20:;
			++it;
			goto _iter_begin_24ea94b20;
		}
		_iter_end_24ea94b20:;
	};
	if ((!(_2490aaa43_IsVoid(_88951_f.get()._field_Decl.ptr())))) {
		_88951_f.get()._field_Result=_249c2469a_buildNonGenericTypeKind(_self_, _88951_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_89017_generics);
	};
}



inline jule::Ptr<_249bcc312_FnIns> _249c24c72_getTraitCheckFnKind(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bcbe38_Fn>& _90744_f) {
	if ((_90744_f.get()._field_Instances.len() == 1LL)) {
		return _90744_f.get()._field_Instances[0LL];
	};
	jule::Ptr<_249bcc312_FnIns> _91117_ins = _2490a1dbe_instanceForce(_90744_f);;
	jule::Ptr<_249cbdcb6_typeChecker> _91317_tc = jule::new_ptr<_249cbdcb6_typeChecker>(_249cbdcb6_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_249ccb3bc_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_249ccb3bc_Lookup>(_self_, 3), });;
	{
		auto &expr = _91117_ins.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_24ea99141:;
		if (it != expr.end()) {
			jule::Ptr<_249bcc125_ParamIns> _91821_p = *it;
			{
				if ((!(_24909ab54_IsSelf(_91821_p.get()._field_Decl.ptr())))) {
					_91821_p.get()._field_Kind=_249cc6032_checkDecl(_91317_tc.ptr(), _91821_p.get()._field_Decl.get()._field_Kind.get()._field_Decl);
				};
			}
			_iter_next_24ea99141:;
			++it;
			goto _iter_begin_24ea99141;
		}
		_iter_end_24ea99141:;
	};
	if ((!(_2490aaa43_IsVoid(_90744_f.ptr())))) {
		_91117_ins.get()._field_Result=_249cc6032_checkDecl(_91317_tc.ptr(), _90744_f.get()._field_Result.get()._field_Kind.get()._field_Decl);
	};
	return _91117_ins;
}



inline jule::Bool _249c251c3_checkConstraintsFn(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bcc312_FnIns>& _93043_f, jule::Ptr<_23abd3d83_Token>& _93059_et, jule::Ptr<_249bcc312_FnIns> _93075_exist) {
	jule::Ptr<_249bda694_constraintChecker> _93117_cc = _249c21d3a_constraintChecker(_self_);;
	_93117_cc.get()._field_et=_93059_et;
	_93117_cc.get()._field_fi=_93043_f;
	if ((_93075_exist != nullptr)) {
		{
			auto &expr = _93075_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_24ea9ca18:;
			if (it != expr.end()) {
				jule::I64 _93518_i = it - expr.begin();
				jule::Ptr<_249cae05e_InsGeneric> _93525_g = *it;
				{
					_93043_f.get()._field_Generics[_93518_i].get()._field_Constraint=_93525_g.get()._field_Constraint;
				}
				_iter_next_24ea9ca18:;
				++it;
				_93518_i++;
				goto _iter_begin_24ea9ca18;
			}
			_iter_end_24ea9ca18:;
		};
	} else {
		_93117_cc.get()._field_uniq=true;
	};
	return _249bdb574_check(_93117_cc);
}



inline jule::Bool _249c25624_checkConstraintsStruct(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249062e4b_StructIns>& _94447_s, jule::Ptr<_23abd3d83_Token>& _94467_et, jule::Ptr<_249062e4b_StructIns> _94483_exist) {
	jule::Ptr<_249bda694_constraintChecker> _94517_cc = _249c21d3a_constraintChecker(_self_);;
	_94517_cc.get()._field_et=_94467_et;
	_94517_cc.get()._field_si=_94447_s;
	if ((_94483_exist != nullptr)) {
		{
			auto &expr = _94483_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_24eaa07c9:;
			if (it != expr.end()) {
				jule::I64 _94918_i = it - expr.begin();
				jule::Ptr<_249cae05e_InsGeneric> _94925_g = *it;
				{
					_94447_s.get()._field_Generics[_94918_i].get()._field_Constraint=_94925_g.get()._field_Constraint;
				}
				_iter_next_24eaa07c9:;
				++it;
				_94918_i++;
				goto _iter_begin_24eaa07c9;
			}
			_iter_end_24eaa07c9:;
		};
	} else {
		_94517_cc.get()._field_uniq=true;
	};
	return _249bdb574_check(_94517_cc);
}



inline jule::Bool _249c259cb_fnEnvironment(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bcc312_FnIns>& _96138_f, jule::Fn<jule::Bool(jule::Ptr<_249c192c7_Sema>&,jule::Slice<jule::Ptr<_249caea98_TypeAlias>>&)> _96149_algo) {
	jule::Ptr<_249c192c7_Sema> _96217_sema = _96138_f.get()._field_Decl.get()._field_sema;;
	jule::Ptr<_249c7a228_SymbolTable> _96317_old = _96138_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_249c1bac1_setCurrentFile(_96138_f.get()._field_Decl.get()._field_sema.ptr(), _96317_old);
	});;
	jule::Ptr<_249c7a228_SymbolTable> _96517_file = _249c188d1_findFile(_96138_f.get()._field_Decl.get()._field_sema.get()._field_files,_96138_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_96517_file != nullptr)) {
		_249c1bac1_setCurrentFile(_96138_f.get()._field_Decl.get()._field_sema.ptr(), _96517_file);
	};
	jule::I64 _97017_size = _96138_f.get()._field_Generics.len();;
	if (((_96138_f.get()._field_Decl != nullptr) && (_96138_f.get()._field_Decl.get()._field_Owner != nullptr))) {
		_97017_size+=_96138_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_249caea98_TypeAlias>> _97517_generics = jule::Slice<jule::Ptr<_249caea98_TypeAlias>>::alloc(0LL,_97017_size);;
	_249c1857e_appendGenericTypeAliases(_97517_generics,_96138_f);
	jule::Bool _97813_ok = _96149_algo(_96217_sema,_97517_generics);;
	if ((_96217_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_96217_sema.get()._field_errors);
		_96217_sema.get()._field_errors=nullptr;
	};
	return _97813_ok;
}



inline void _249c25c51_checkFnParamKind(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bcc125_ParamIns>& _98841_p) {
	_98841_p.get()._field_Kind.get()._field_Variadic=_98841_p.get()._field_Decl.get()._field_Variadic;
	if ((_98841_p.get()._field_Decl.get()._field_Reference && (!(_249cc7d47_isValidForRef(_98841_p.get()._field_Kind))))) {
		_249c1be89_pushErr(_self_.ptr(), _98841_p.get()._field_Decl.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_98841_p.get()._field_Kind.ptr()))}));
	};
}



inline jule::Bool _249c2605e_reloadFnInsTypes(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bcc312_FnIns> _99540_f) {
	if ((_249bcc4ee_IsBuiltin(_99540_f.ptr()) || _249bcc631_IsAnon(_99540_f.ptr()))) {
		return true;
	};
	return _249c259cb_fnEnvironment(_self_, _99540_f,jule::Fn<jule::Bool(jule::Ptr<_249c192c7_Sema>&,jule::Slice<jule::Ptr<_249caea98_TypeAlias>>&)>([=](jule::Ptr<_249c192c7_Sema>& _99943_sema, jule::Slice<jule::Ptr<_249caea98_TypeAlias>>& _99961_generics) mutable -> jule::Bool {
		jule::Bool _100021_ok = true;;
		{
			auto &expr = _99540_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_24eaac7c5:;
			if (it != expr.end()) {
				jule::Ptr<_249bcc125_ParamIns> _100125_p = *it;
				{
					if (_24909ab54_IsSelf(_100125_p.get()._field_Decl.ptr())) {
						if (_24909be1e_IsRef(_100125_p.get()._field_Decl.ptr())) {
							_100125_p.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(jule::new_ptr<_249cb89e7_Sptr>(_249cb89e7_Sptr{._field_Elem=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_99540_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_100125_p.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_99540_f.get()._field_Owner, 0)});
						};
					} else {
						_100125_p.get()._field_Kind=_249c22643_buildTypeWithGenerics(_99943_sema, _100125_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_99961_generics,_99540_f.get()._field_Refers);
						if ((_100125_p.get()._field_Kind != nullptr)) {
							_249c25c51_checkFnParamKind(_self_, _100125_p);
						} else {
							_100021_ok=false;
						};
					};
				}
				_iter_next_24eaac7c5:;
				++it;
				goto _iter_begin_24eaac7c5;
			}
			_iter_end_24eaac7c5:;
		};
		if ((!(_2490aaa43_IsVoid(_99540_f.get()._field_Decl.ptr())))) {
			_99540_f.get()._field_Result=_249c22643_buildTypeWithGenerics(_99943_sema, _99540_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_99961_generics,_99540_f.get()._field_Refers);
			_100021_ok=((_99540_f.get()._field_Result != nullptr) && _100021_ok);
		};
		return _100021_ok;
	}));
}



inline jule::Bool _249c264d2_checkRefValidityForInitExpr(jule::Ptr<_249c192c7_Sema> _self_, jule::Bool _103147_leftMut, jule::Ptr<_249c80052_Data>& _103167_d, jule::Ptr<_23abd3d83_Token>& _103182_errorToken) {
	{
		auto &_match_expr{ _103167_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_249c3702b_Var>>()) {
			_case_begin_24eab36ee:;
			{
				goto _match_end_24eab2a1c;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc7dce_TraitSubIdentExprModel>>()) {
			_case_begin_24eab2a83:;
			{
				jule::Ptr<_249bc7dce_TraitSubIdentExprModel> _103621_model = _103167_d.get()._field_Model.operator jule::Ptr<_249bc7dce_TraitSubIdentExprModel>();;
				if ((!(_249c17418_isValidModelForRef(_103621_model.get()._field_Expr)))) {
					_249c1be89_pushErr(_self_.ptr(), _103182_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_103621_model.get()._field_Method.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc82ec_StructSubIdentExprModel>>()) {
			_case_begin_24eab2ae9:;
			{
				jule::Ptr<_249bc82ec_StructSubIdentExprModel> _104221_model = _103167_d.get()._field_Model.operator jule::Ptr<_249bc82ec_StructSubIdentExprModel>();;
				if ((!(_249c17418_isValidModelForRef(_104221_model.get()._field_Expr.get()._field_Model)))) {
					_249c1be89_pushErr(_self_.ptr(), _103182_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_104221_model.get()._field_Field.get()._field_Decl.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc88b3_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_249bc8aa0_CommonSubIdentExprModel>>()) {
			_case_begin_24eab2b60:;
			{
				_249c1be89_pushErr(_self_.ptr(), _103182_errorToken,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc65c5_UnaryExprModel>>()) {
			_case_begin_24eab2bc6:;
			{
				jule::Ptr<_249bc65c5_UnaryExprModel> _105221_unary = _103167_d.get()._field_Model.operator jule::Ptr<_249bc65c5_UnaryExprModel>();;
				if ((_105221_unary.get()._field_Op.get()._field_Kind == jule::Str("*", 1))) {
					if ((!(_249c17418_isValidModelForRef(_103167_d.get()._field_Model)))) {
						_249c1be89_pushErr(_self_.ptr(), _103182_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_24eab2a1c;
				};
				goto _case_begin_24eab2841;
			}
		}
		else {
			_case_begin_24eab2841:;
			{
				_249c1be89_pushErr(_self_.ptr(), _103182_errorToken,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_24eab2a1c:;
	};
	if ((_103147_leftMut && (!(_103167_d.get()._field_Mutable)))) {
		_249c1be89_pushErr(_self_.ptr(), _103182_errorToken,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _249c26aa9_checkValidityForInitExpr(jule::Ptr<_249c192c7_Sema> _self_, jule::Bool _107244_leftMut, jule::Bool _107259_leftRef, jule::Ptr<_249cb078b_TypeKind>& _107310_leftKind, jule::Ptr<_249c80052_Data>& _107336_d, jule::Ptr<_23abd3d83_Token>& _107351_errorToken) {
	if (((_107244_leftMut && (!(_107336_d.get()._field_Mutable))) && _249cb1b88_Mutable(_107336_d.get()._field_Kind.ptr()))) {
		_249c1be89_pushErr(_self_.ptr(), _107351_errorToken,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_107336_d.get()._field_Kind.ptr()))}));
		return false;
	};
	if (_107259_leftRef) {
		if ((!(_249c264d2_checkRefValidityForInitExpr(_self_, _107244_leftMut,_107336_d,_107351_errorToken)))) {
			return false;
		};
	};
	jule::Ptr<_249c6a823_assignTypeChecker> _108317_atc = jule::new_ptr<_249c6a823_assignTypeChecker>(_249c6a823_assignTypeChecker{._field_s=_self_, ._field_d=_107336_d, ._field_errorToken=_107351_errorToken});;
	return _249c6aee9_checkValidity(_108317_atc.ptr());
}



inline jule::Bool _249c26e72_checkTypeAliasDeclKind(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249caea98_TypeAlias>& _109147_ta, jule::Trait<_249ccb3bc_Lookup> _109167_l) {
	jule::Bool _109180_ok = jule::Bool();
	jule::Ptr<_249c7a228_SymbolTable> _109217_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_249c1bac1_setCurrentFile(_self_.ptr(), _109217_old);
	});;
	if ((_109147_ta.get()._field_Token != nullptr)) {
		jule::Ptr<_249c7a228_SymbolTable> _109721_file = _249c188d1_findFile(_self_.get()._field_files,_109147_ta.get()._field_Token.get()._field_File);;
		if ((_109721_file != nullptr)) {
			_249c1bac1_setCurrentFile(_self_.ptr(), _109721_file);
		};
	};
	_109180_ok=_249c21ac6_checkTypeWithRefers(_self_, _109147_ta.get()._field_Kind,_109167_l,nullptr,jule::new_ptr<_249cbcea2_referencer>(_249cbcea2_referencer{._field_ident=_109147_ta.get()._field_Ident, ._field_owner=jule::Any(_109147_ta), ._field_refs=(&(_109147_ta.get()._field_Refers))}));
	if (((_109180_ok && (_249cb35b3_Arr(_109147_ta.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _249cb35b3_Arr(_109147_ta.get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_249c1be89_pushErr(_self_.ptr(), _109147_ta.get()._field_Kind.get()._field_Decl.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_109180_ok=false;
	};
	return _109180_ok;
}



inline void _249c27291_checkTypeAliasDecl(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249caea98_TypeAlias>& _111443_ta, jule::Trait<_249ccb3bc_Lookup> _111463_l) {
	if (_23abd6627_IsIgnoreIdent(_111443_ta.get()._field_Ident)) {
		_249c1be89_pushErr(_self_.ptr(), _111443_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_249c26e72_checkTypeAliasDeclKind(_self_, _111443_ta,_111463_l);
}



inline void _249c27516_checkTypeAliasDeclDup(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249caea98_TypeAlias>& _112246_ta) {
	if (_23abd6627_IsIgnoreIdent(_112246_ta.get()._field_Ident)) {
		_249c1be89_pushErr(_self_.ptr(), _112246_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_249c1cab1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_112246_ta)),_112246_ta.get()._field_Ident,_112246_ta.get()._field_CppLinked)) {
		_249c1be89_pushErr(_self_.ptr(), _112246_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_112246_ta.get()._field_Ident)}));
		_249c1c2a8_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_249c26e72_checkTypeAliasDeclKind(_self_, _112246_ta,jule::Trait<_249ccb3bc_Lookup>(_self_, 3));
}



inline jule::Bool _249c2777a_checkTypeAliasDecls(jule::Ptr<_249c192c7_Sema> _self_) {
	jule::Bool _113441_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_24eacb88d:;
		if (it != expr.end()) {
			jule::Ptr<_249caea98_TypeAlias> _113521_ta = *it;
			{
				_249c27516_checkTypeAliasDeclDup(_self_, _113521_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_113441_ok = false;
					return _113441_ok;
				};
			}
			_iter_next_24eacb88d:;
			++it;
			goto _iter_begin_24eacb88d;
		}
		_iter_end_24eacb88d:;
	};
	_113441_ok = true;
	return _113441_ok;
}



inline void _24eade263_checkEnumItemsDup(_249c192c7_Sema* _self_, jule::Slice<jule::Ptr<_249bd6030_EnumItem>> _114639_items) {
	{
		auto &expr = _114639_items;
		auto it = expr.begin();
		_iter_begin_24eae02b9:;
		if (it != expr.end()) {
			jule::Ptr<_249bd6030_EnumItem> &_114716_item = *it;
			{
				if (_114716_item.get()._field_Ident.empty()) {
					goto _iter_next_24eae02b9;
				} else if (_23abd6627_IsIgnoreIdent(_114716_item.get()._field_Ident)) {
					_249c1be89_pushErr(&(*_self_), _114716_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _114639_items;
						auto it = expr.begin();
						_iter_begin_24eae1144:;
						if (it != expr.end()) {
							jule::Ptr<_249bd6030_EnumItem> &_115324_citem = *it;
							{
								if ((_114716_item == _115324_citem)) {
									goto _iter_end_24eae1144;
								} else if ((_114716_item.get()._field_Ident == _115324_citem.get()._field_Ident)) {
									_249c1be89_pushErr(&(*_self_), _114716_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_114716_item.get()._field_Ident)}));
									_249c1c2a8_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_24eae1144;
								};
							}
							_iter_next_24eae1144:;
							++it;
							goto _iter_begin_24eae1144;
						}
						_iter_end_24eae1144:;
					};
				};
			}
			_iter_next_24eae02b9:;
			++it;
			goto _iter_begin_24eae02b9;
		}
		_iter_end_24eae02b9:;
	};
}

inline void _24ec2eeca_checkEnumItemsDup(_249c192c7_Sema* _self_, jule::Slice<jule::Ptr<_249bd7a59_TypeEnumItem>> _114639_items) {
	{
		auto &expr = _114639_items;
		auto it = expr.begin();
		_iter_begin_24ec31031:;
		if (it != expr.end()) {
			jule::Ptr<_249bd7a59_TypeEnumItem> &_114716_item = *it;
			{
				if (_114716_item.get()._field_Ident.empty()) {
					goto _iter_next_24ec31031;
				} else if (_23abd6627_IsIgnoreIdent(_114716_item.get()._field_Ident)) {
					_249c1be89_pushErr(&(*_self_), _114716_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _114639_items;
						auto it = expr.begin();
						_iter_begin_24ec31dab:;
						if (it != expr.end()) {
							jule::Ptr<_249bd7a59_TypeEnumItem> &_115324_citem = *it;
							{
								if ((_114716_item == _115324_citem)) {
									goto _iter_end_24ec31dab;
								} else if ((_114716_item.get()._field_Ident == _115324_citem.get()._field_Ident)) {
									_249c1be89_pushErr(&(*_self_), _114716_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_114716_item.get()._field_Ident)}));
									_249c1c2a8_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_24ec31dab;
								};
							}
							_iter_next_24ec31dab:;
							++it;
							goto _iter_begin_24ec31dab;
						}
						_iter_end_24ec31dab:;
					};
				};
			}
			_iter_next_24ec31031:;
			++it;
			goto _iter_begin_24ec31031;
		}
		_iter_end_24ec31031:;
	};
}



inline void _249c27c75_checkEnumItemsStr(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bd6a25_Enum>& _116642_e) {
	jule::Ptr<_249c81ac0_Eval> _116717_eval = _249c23875_eval(_self_, jule::Trait<_249ccb3bc_Lookup>(_self_, 3));;
	{
		auto &expr = _116642_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_24eacda16:;
		if (it != expr.end()) {
			jule::Ptr<_249bd6030_EnumItem> _116821_item = *it;
			{
				if (_249bd641a_AutoExpr(_116821_item.ptr())) {
					_116821_item.get()._field_Value=jule::new_ptr<_249c810ca_Value>(_249c810ca_Value{._field_Data=jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Constant=static__249159020_NewStr(_116821_item.get()._field_Ident)})});
					_116821_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_116821_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_249c80052_Data> _117725_d = _249ca1e86_evalExpr(_116717_eval, _116821_item.get()._field_Value.get()._field_Expr);;
					if ((_117725_d == nullptr)) {
						goto _iter_next_24eacda16;
					};
					if ((!(_249c80915_IsConst(_117725_d.ptr())))) {
						_249c1be89_pushErr(_self_.ptr(), _116821_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_249c23d70_checkAssignType(_self_, false,_116642_e.get()._field_Kind.get()._field_Kind,_117725_d,_116821_item.get()._field_Token);
					_116821_item.get()._field_Value.get()._field_Data=_117725_d;
				};
			}
			_iter_next_24eacda16:;
			++it;
			goto _iter_begin_24eacda16;
		}
		_iter_end_24eacda16:;
	};
}



inline void _249c27eea_checkEnumItemsInt(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bd6a25_Enum>& _119242_e) {
	jule::Ptr<_249cb5263_Prim> _119313_prim = _249cb289d_Prim(_119242_e.get()._field_Kind.get()._field_Kind.ptr());;
	jule::U64 _119417_max = static_cast<jule::U64>(_2495852d6_Max(_249cb55c6_Str(_119313_prim.ptr())));;
	jule::Ptr<_249c81ac0_Eval> _119517_eval = _249c23875_eval(_self_, jule::Trait<_249ccb3bc_Lookup>(_self_, 3));;
	{
		auto &expr = _119242_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_24ead419d:;
		if (it != expr.end()) {
			jule::I64 _119614_i = it - expr.begin();
			jule::Ptr<_249bd6030_EnumItem> _119621_item = *it;
			{
				if ((_119417_max == 0LLU)) {
					_249c1be89_pushErr(_self_.ptr(), _119621_item.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_119417_max)--;
				};
				if (_249bd641a_AutoExpr(_119621_item.ptr())) {
					_119621_item.get()._field_Value=jule::new_ptr<_249c810ca_Value>(_249c810ca_Value{._field_Data=jule::new_ptr<_249c80052_Data>()});
					{
						
						if (_249bc4084_IsSigInt(_249cb55c6_Str(_119313_prim.ptr()))) {
							_case_begin_24ead6ec5:;
							{
								_119621_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__2491257e4_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((_119417_max - (_119417_max - static_cast<jule::U64>(_119614_i))))));
							}
						}
						else {
							_case_begin_24ead6601:;
							{
								_119621_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__24913c82d_NewU64(static_cast<jule::U64>((_119417_max - (_119417_max - static_cast<jule::U64>(_119614_i)))));
							}
						}
						_match_end_24ead658a:;
					};
					_119621_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_119621_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_249c80052_Data> _121425_d = _249ca1e86_evalExpr(_119517_eval, _119621_item.get()._field_Value.get()._field_Expr);;
					if ((_121425_d == nullptr)) {
						goto _iter_next_24ead419d;
					};
					if ((!(_249c80915_IsConst(_121425_d.ptr())))) {
						_249c1be89_pushErr(_self_.ptr(), _119621_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_249c23d70_checkAssignType(_self_, false,_119242_e.get()._field_Kind.get()._field_Kind,_121425_d,_119621_item.get()._field_Token);
					_119621_item.get()._field_Value.get()._field_Data=_121425_d;
				};
			}
			_iter_next_24ead419d:;
			++it;
			_119614_i++;
			goto _iter_begin_24ead419d;
		}
		_iter_end_24ead419d:;
	};
}



inline void _249c28270_checkEnumDecl(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bd6a25_Enum>& _122738_e) {
	if (_23abd6627_IsIgnoreIdent(_122738_e.get()._field_Ident)) {
		_249c1be89_pushErr(_self_.ptr(), _122738_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_249c1cab1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_122738_e)),_122738_e.get()._field_Ident,false)) {
		_249c1be89_pushErr(_self_.ptr(), _122738_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_122738_e.get()._field_Ident)}));
		_249c1c2a8_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_122738_e.get()._field_Items.len() == 0LL)) {
		_249c1be89_pushErr(_self_.ptr(), _122738_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_122738_e.get()._field_Ident)}));
	};
	_24eade263_checkEnumItemsDup(_self_.ptr(), _122738_e.get()._field_Items);
	if ((_122738_e.get()._field_Kind != nullptr)) {
		if ((!(_249c221e2_checkType(_self_, _122738_e.get()._field_Kind,jule::Trait<_249ccb3bc_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_122738_e.get()._field_Kind=jule::new_ptr<_249cb48e4_TypeSymbol>(_249cb48e4_TypeSymbol{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_249cb5263_Prim> _125417_t = _249cb289d_Prim(_122738_e.get()._field_Kind.get()._field_Kind.ptr());;
	if ((_125417_t == nullptr)) {
		_249c1be89_pushErr(_self_.ptr(), _122738_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_249cb8497_IsStr(_125417_t.ptr())) {
			_case_begin_24eae6028:;
			{
				_249c27c75_checkEnumItemsStr(_self_, _122738_e);
			}
		}
		else if (_249bc42e8_IsInt(_249cb55c6_Str(_125417_t.ptr()))) {
			_case_begin_24eae5d19:;
			{
				_249c27eea_checkEnumItemsInt(_self_, _122738_e);
			}
		}
		else {
			_case_begin_24eae4d7e:;
			{
				_249c1be89_pushErr(_self_.ptr(), _122738_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_24eae4d18:;
	};
}



inline void _249c284e5_checkTypeEnumDecl(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bd8120_TypeEnum>& _127142_e) {
	if (_23abd6627_IsIgnoreIdent(_127142_e.get()._field_Ident)) {
		_249c1be89_pushErr(_self_.ptr(), _127142_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_249c1cab1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_127142_e)),_127142_e.get()._field_Ident,false)) {
		_249c1be89_pushErr(_self_.ptr(), _127142_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_127142_e.get()._field_Ident)}));
		_249c1c2a8_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_127142_e.get()._field_Items.len() == 0LL)) {
		_249c1be89_pushErr(_self_.ptr(), _127142_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_127142_e.get()._field_Ident)}));
		return;;
	};
	_24ec2eeca_checkEnumItemsDup(_self_.ptr(), _127142_e.get()._field_Items);
	{
		auto &expr = _127142_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_24ec30371:;
		if (it != expr.end()) {
			jule::Ptr<_249bd7a59_TypeEnumItem> _128521_item = *it;
			{
				if ((_128521_item.get()._field_Kind == nullptr)) {
					_249c1be89_pushErr(_self_.ptr(), _128521_item.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_24ec30371;
				};
				jule::Bool _129017_ok = _249c221e2_checkType(_self_, _128521_item.get()._field_Kind,jule::Trait<_249ccb3bc_Lookup>(_self_, 3));;
				if ((!(_129017_ok))) {
					goto _iter_next_24ec30371;
				};
				jule::Ptr<_249cb5263_Prim> _129417_p = _249cb289d_Prim(_128521_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_129417_p != nullptr) && _249cb870b_IsAny(_129417_p.ptr()))) {
					_249c1be89_pushErr(_self_.ptr(), _128521_item.get()._field_Token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_24ec30371:;
			++it;
			goto _iter_begin_24ec30371;
		}
		_iter_end_24ec30371:;
	};
	if ((_127142_e.get()._field_Items.len() == 1LL)) {
		jule::Ptr<_249bd7a59_TypeEnumItem> _130021_item = _127142_e.get()._field_Items[0LL];;
		_249cb078b_TypeKind _130117_tk = _249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_127142_e, 4)};;
		if (((_130021_item.get()._field_Kind.get()._field_Kind != nullptr) && _249cb0e95_Equals(_130021_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_249cb078b_TypeKind>)((&(_130117_tk))))))) {
			_249c1be89_pushErr(_self_.ptr(), _130021_item.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_249bd8450_Str(_127142_e.ptr()))}));
		};
	};
}



inline jule::Bool _249c28759_checkEnumDecls(jule::Ptr<_249c192c7_Sema> _self_) {
	jule::Bool _131136_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Enums;
		auto it = expr.begin();
		_iter_begin_24ec3a414:;
		if (it != expr.end()) {
			jule::Ptr<_249bd6a25_Enum> _131221_e = *it;
			{
				_249c28270_checkEnumDecl(_self_, _131221_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_131136_ok = false;
					return _131136_ok;
				};
			}
			_iter_next_24ec3a414:;
			++it;
			goto _iter_begin_24ec3a414;
		}
		_iter_end_24ec3a414:;
	};
	_131136_ok = true;
	return _131136_ok;
}



inline jule::Bool _249c289bd_checkTypeEnumDecls(jule::Ptr<_249c192c7_Sema> _self_) {
	jule::Bool _132340_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_24ec3bc62:;
		if (it != expr.end()) {
			jule::Ptr<_249bd8120_TypeEnum> _132421_e = *it;
			{
				_249c284e5_checkTypeEnumDecl(_self_, _132421_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_132340_ok = false;
					return _132340_ok;
				};
			}
			_iter_next_24ec3bc62:;
			++it;
			goto _iter_begin_24ec3bc62;
		}
		_iter_end_24ec3bc62:;
	};
	_132340_ok = true;
	return _132340_ok;
}



inline jule::Bool _249c28ccb_checkDeclGenerics(_249c192c7_Sema* _self_, jule::Slice<jule::Ptr<_2490539a8_GenericDecl>>& _133437_generics) {
	jule::Bool _133470_ok = jule::Bool();
	_133470_ok=true;
	{
		auto &expr = _133437_generics;
		auto it = expr.begin();
		_iter_begin_24ec3d802:;
		if (it != expr.end()) {
			jule::I64 _133613_i = it - expr.begin();
			jule::Ptr<_2490539a8_GenericDecl> &_133616_g = *it;
			{
				if (_23abd6627_IsIgnoreIdent(_133616_g.get()._field_Ident)) {
					_249c1be89_pushErr(&(*_self_), _133616_g.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_133470_ok=false;
					goto _iter_next_24ec3d802;
				};
				_julec_label_duplicationLookup:;
				{
					auto &expr = _133437_generics;
					auto it = expr.begin();
					_iter_begin_24ec3e7e2:;
					if (it != expr.end()) {
						jule::I64 _134517_j = it - expr.begin();
						jule::Ptr<_2490539a8_GenericDecl> &_134520_ct = *it;
						{
							{
								
								if ((_134517_j >= _133613_i)) {
									_case_begin_24ec41250:;
									{
										goto _iter_end_24ec3e7e2;
									}
								}
								else if ((_133616_g.get()._field_Ident == _134520_ct.get()._field_Ident)) {
									_case_begin_24ec412c7:;
									{
										_249c1be89_pushErr(&(*_self_), _133616_g.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_133616_g.get()._field_Ident)}));
										_249c1c2a8_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_133470_ok=false;
										goto _iter_end_24ec3e7e2;
									}
								}
								_match_end_24ec4112e:;
							};
						}
						_iter_next_24ec3e7e2:;
						++it;
						_134517_j++;
						goto _iter_begin_24ec3e7e2;
					}
					_iter_end_24ec3e7e2:;
				};
			}
			_iter_next_24ec3d802:;
			++it;
			_133613_i++;
			goto _iter_begin_24ec3d802;
		}
		_iter_end_24ec3d802:;
	};
	return _133470_ok;
}



inline jule::Bool _249c290d9_checkFnDeclParamsDup(_249c192c7_Sema* _self_, jule::Ptr<_249bcbe38_Fn>& _136140_f) {
	jule::Bool _136150_ok = jule::Bool();
	_136150_ok=true;
	_julec_label_check:;
	{
		auto &expr = _136140_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_24ec4385c:;
		if (it != expr.end()) {
			jule::I64 _136413_i = it - expr.begin();
			jule::Ptr<_249bcbc4b_Param> &_136416_p = *it;
			{
				{
					auto &expr = _136140_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_24ec43719:;
					if (it != expr.end()) {
						jule::Ptr<_2490539a8_GenericDecl> &_136620_g = *it;
						{
							if ((_136416_p.get()._field_Ident == _136620_g.get()._field_Ident)) {
								_136150_ok=false;
								_249c1be89_pushErr(&(*_self_), _136416_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136416_p.get()._field_Ident)}));
								_249c1c2a8_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_24ec4385c;
							};
						}
						_iter_next_24ec43719:;
						++it;
						goto _iter_begin_24ec43719;
					}
					_iter_end_24ec43719:;
				};
				_julec_label_paramsLookup:;
				{
					auto &expr = _136140_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_24ec45199:;
					if (it != expr.end()) {
						jule::I64 _137617_j = it - expr.begin();
						jule::Ptr<_249bcbc4b_Param> &_137620_jp = *it;
						{
							{
								
								if ((_137617_j >= _136413_i)) {
									_case_begin_24ec4707a:;
									{
										goto _iter_end_24ec45199;
									}
								}
								else if ((_23abd68be_IsAnonIdent(_136416_p.get()._field_Ident) || _23abd68be_IsAnonIdent(_137620_jp.get()._field_Ident))) {
									_case_begin_24ec47102:;
									{
										goto _iter_end_24ec45199;
									}
								}
								else if ((_136416_p.get()._field_Ident == _137620_jp.get()._field_Ident)) {
									_case_begin_24ec47179:;
									{
										_136150_ok=false;
										_249c1be89_pushErr(&(*_self_), _136416_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136416_p.get()._field_Ident)}));
										_249c1c2a8_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_24ec4385c;
									}
								}
								_match_end_24ec46e48:;
							};
						}
						_iter_next_24ec45199:;
						++it;
						_137617_j++;
						goto _iter_begin_24ec45199;
					}
					_iter_end_24ec45199:;
				};
			}
			_iter_next_24ec4385c:;
			++it;
			_136413_i++;
			goto _iter_begin_24ec4385c;
		}
		_iter_end_24ec4385c:;
	};
	return _136150_ok;
}



inline jule::Bool _249c293e7_checkFnDeclResultDup(_249c192c7_Sema* _self_, jule::Ptr<_249bcbe38_Fn>& _139540_f) {
	jule::Bool _139550_ok = jule::Bool();
	_139550_ok=true;
	if (_2490aaa43_IsVoid(_139540_f.ptr())) {
		return _139550_ok;
	};
	{
		auto &expr = _139540_f.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_24ec4a259:;
		if (it != expr.end()) {
			jule::I64 _140213_i = it - expr.begin();
			jule::Ptr<_23abd3d83_Token> &_140216_v = *it;
			{
				if ((_23abd6627_IsIgnoreIdent(_140216_v.get()._field_Kind) || _23abd68be_IsAnonIdent(_140216_v.get()._field_Kind))) {
					goto _iter_next_24ec4a259;
				};
				{
					auto &expr = _139540_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_24ec4b7bb:;
					if (it != expr.end()) {
						jule::Ptr<_2490539a8_GenericDecl> &_140720_g = *it;
						{
							if ((_140216_v.get()._field_Kind == _140720_g.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_24ec4b7bb:;
						++it;
						goto _iter_begin_24ec4b7bb;
					}
					_iter_end_24ec4b7bb:;
				};
				{
					auto &expr = _139540_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_24ec4cab9:;
					if (it != expr.end()) {
						jule::Ptr<_249bcbc4b_Param> &_141320_p = *it;
						{
							if ((_140216_v.get()._field_Kind == _141320_p.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_24ec4cab9:;
						++it;
						goto _iter_begin_24ec4cab9;
					}
					_iter_end_24ec4cab9:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _139540_f.get()._field_Result.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_24ec4ddc8:;
					if (it != expr.end()) {
						jule::I64 _142117_j = it - expr.begin();
						jule::Ptr<_23abd3d83_Token> &_142120_jv = *it;
						{
							{
								
								if ((_142117_j >= _140213_i)) {
									_case_begin_24ec4ebed:;
									{
										goto _iter_end_24ec4ddc8;
									}
								}
								else if ((_142120_jv.get()._field_Kind == _140216_v.get()._field_Kind)) {
									_case_begin_24ec4ec75:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_24ec4eacc:;
							};
						}
						_iter_next_24ec4ddc8:;
						++it;
						_142117_j++;
						goto _iter_begin_24ec4ddc8;
					}
					_iter_end_24ec4ddc8:;
				};
				goto _iter_next_24ec4a259;
				_julec_label_exist:;
				_249c1be89_pushErr(&(*_self_), _140216_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_140216_v.get()._field_Kind)}));
				_249c1c2a8_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_139550_ok=false;
			}
			_iter_next_24ec4a259:;
			++it;
			_140213_i++;
			goto _iter_begin_24ec4a259;
		}
		_iter_end_24ec4a259:;
	};
	return _139550_ok;
}



inline void _249c2966c_checkFnDeclPrototype(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bcbe38_Fn>& _144245_f) {
	if ((_144245_f.get()._field_Exceptional && _144245_f.get()._field_CppLinked)) {
		_249c1be89_pushErr(_self_.ptr(), _144245_f.get()._field_Token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_144245_f.get()._field_Exceptional) {
		if (_2490ab978_IsEntryPoint(_144245_f.ptr())) {
			_249c1be89_pushErr(_self_.ptr(), _144245_f.get()._field_Token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_2490ac803_IsInit(_144245_f.ptr())) {
			_249c1be89_pushErr(_self_.ptr(), _144245_f.get()._field_Token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_249c28ccb_checkDeclGenerics(_self_.ptr(), _144245_f.get()._field_Generics)))) {
			_case_begin_24ec547a2:;
		}
		else if ((!(_249c290d9_checkFnDeclParamsDup(_self_.ptr(), _144245_f)))) {
			_case_begin_24ec54818:;
		}
		else if ((!(_249c293e7_checkFnDeclResultDup(_self_.ptr(), _144245_f)))) {
			_case_begin_24ec5487e:;
		}
		_match_end_24ec53174:;
	};
}



inline void _249c298e2_checkTraitDeclMethod(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bcbe38_Fn>& _146345_f) {
	if (_23abd6627_IsIgnoreIdent(_146345_f.get()._field_Ident)) {
		_249c1be89_pushErr(_self_.ptr(), _146345_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_146345_f.get()._field_sema=_self_;
	_249c2966c_checkFnDeclPrototype(_self_, _146345_f);
	jule::Ptr<_249bcc312_FnIns> _147017_ins = _2490a2b8e_instance(_146345_f);;
	_249c2605e_reloadFnInsTypes(_self_, _147017_ins);
	_147017_ins.get()._field_reloaded=true;
	_2490999bb_appendInstance(_146345_f.ptr(), _147017_ins);
}



inline void _249c29b67_checkTraitDeclMethods(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bd48d0_Trait>& _147646_t) {
	{
		auto &expr = _147646_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_24ec58201:;
		if (it != expr.end()) {
			jule::I64 _147714_i = it - expr.begin();
			jule::Ptr<_249bcbe38_Fn> _147721_f = *it;
			{
				_249c298e2_checkTraitDeclMethod(_self_, _147721_f);
				_147646_t.get()._field_Mutable=(_147646_t.get()._field_Mutable || _147721_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicateLookup:;
				{
					auto &expr = _147646_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_24ec5a1ae:;
					if (it != expr.end()) {
						jule::I64 _148817_j = it - expr.begin();
						jule::Ptr<_249bcbe38_Fn> _148820_jf = *it;
						{
							{
								
								if ((_148817_j >= _147714_i)) {
									_case_begin_24ec5b303:;
									{
										goto _iter_end_24ec5a1ae;
									}
								}
								else if ((_147721_f.get()._field_Ident == _148820_jf.get()._field_Ident)) {
									_case_begin_24ec5b37a:;
									{
										_249c1be89_pushErr(_self_.ptr(), _147721_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_147721_f.get()._field_Ident)}));
										_249c1c2a8_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_24ec5a1ae;
									}
								}
								_match_end_24ec5b1d2:;
							};
						}
						_iter_next_24ec5a1ae:;
						++it;
						_148817_j++;
						goto _iter_begin_24ec5a1ae;
					}
					_iter_end_24ec5a1ae:;
				};
			}
			_iter_next_24ec58201:;
			++it;
			_147714_i++;
			goto _iter_begin_24ec58201;
		}
		_iter_end_24ec58201:;
	};
}



inline void _249c29ddc_checkTraitDecl(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bd48d0_Trait>& _150739_t) {
	if (_23abd6627_IsIgnoreIdent(_150739_t.get()._field_Ident)) {
		_249c1be89_pushErr(_self_.ptr(), _150739_t.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_249c1cab1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_150739_t)),_150739_t.get()._field_Ident,false)) {
		_249c1be89_pushErr(_self_.ptr(), _150739_t.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_150739_t.get()._field_Ident)}));
		_249c1c2a8_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_249c29b67_checkTraitDeclMethods(_self_, _150739_t);
}



inline jule::Bool _249c2a151_checkTraitDecls(jule::Ptr<_249c192c7_Sema> _self_) {
	jule::Bool _151937_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_24ec60736:;
		if (it != expr.end()) {
			jule::Ptr<_249bd48d0_Trait> _152021_t = *it;
			{
				_249c29ddc_checkTraitDecl(_self_, _152021_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_151937_ok = false;
					return _151937_ok;
				};
			}
			_iter_next_24ec60736:;
			++it;
			goto _iter_begin_24ec60736;
		}
		_iter_end_24ec60736:;
	};
	_151937_ok = true;
	return _151937_ok;
}



inline jule::Bool _249c2a508_checkTraitImplMethods(_249c192c7_Sema* _self_, jule::Ptr<_249bd48d0_Trait>& _153045_base, jule::Ptr<_249bdc5ca_Impl>& _153060_ipl) {
	jule::Bool _153074_ok = jule::Bool();
	_153074_ok=true;
	{
		auto &expr = _153060_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_24ec6267d:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> &_153216_f = *it;
			{
				if ((_249bd575a_FindMethod(_153045_base.ptr(), _153216_f.get()._field_Ident) == nullptr)) {
					_249c1be89_pushErr(&(*_self_), _153216_f.get()._field_Token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_153045_base.get()._field_Ident),jule::Any(_153216_f.get()._field_Ident)}));
					_153074_ok=false;
				};
			}
			_iter_next_24ec6267d:;
			++it;
			goto _iter_begin_24ec6267d;
		}
		_iter_end_24ec6267d:;
	};
	return _153074_ok;
}



inline jule::Bool _249c2a8b0_implToStruct(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249036b01_Struct>& _154137_dest, jule::Ptr<_249bdc5ca_Impl>& _154157_ipl) {
	jule::Bool _154171_ok = jule::Bool();
	_154171_ok=true;
	{
		auto &expr = _154157_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_24ec64bbe:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> _154521_f = *it;
			{
				if (((_24901d1c0_FindMethod(_154137_dest.ptr(), _154521_f.get()._field_Ident,_154521_f.get()._field_Statically) != nullptr) || (_249021e82_FindField(_154137_dest.ptr(), _154521_f.get()._field_Ident) != nullptr))) {
					_249c1be89_pushErr(_self_.ptr(), _154521_f.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154137_dest.get()._field_Ident),jule::Any(_154521_f.get()._field_Ident)}));
					_154171_ok=false;
					goto _iter_next_24ec64bbe;
				};
				if (((_154137_dest.get()._field_Generics.len() > 0LL) && (_154521_f.get()._field_Generics.len() > 0LL))) {
					{
						auto &expr = _154521_f.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_24ec674c9:;
						if (it != expr.end()) {
							jule::Ptr<_2490539a8_GenericDecl> _155324_fg = *it;
							{
								{
									auto &expr = _154137_dest.get()._field_Generics;
									auto it = expr.begin();
									_iter_begin_24ec67d37:;
									if (it != expr.end()) {
										jule::Ptr<_2490539a8_GenericDecl> _155428_dg = *it;
										{
											if ((_155324_fg.get()._field_Ident == _155428_dg.get()._field_Ident)) {
												_249c1be89_pushErr(_self_.ptr(), _155324_fg.get()._field_Token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_154171_ok=false;
											};
										}
										_iter_next_24ec67d37:;
										++it;
										goto _iter_begin_24ec67d37;
									}
									_iter_end_24ec67d37:;
								};
							}
							_iter_next_24ec674c9:;
							++it;
							goto _iter_begin_24ec674c9;
						}
						_iter_end_24ec674c9:;
					};
				};
				_249c1cdd0_checkDirectives(_self_, _154521_f.get()._field_Directives,jule::Any(_154521_f));
				_154521_f.get()._field_sema=_self_;
				_154521_f.get()._field_Owner=_154137_dest;
				_154137_dest.get()._field_Methods = jule::alloc_for_append(_154137_dest.get()._field_Methods,1);_154137_dest.get()._field_Methods.__push(_154521_f);;
			}
			_iter_next_24ec64bbe:;
			++it;
			goto _iter_begin_24ec64bbe;
		}
		_iter_end_24ec64bbe:;
	};
	{
		auto &expr = _154157_ipl.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_24ec65131:;
		if (it != expr.end()) {
			jule::Ptr<_249c3702b_Var> _157021_v = *it;
			{
				;
				if (((_24901d1c0_FindMethod(_154137_dest.ptr(), _157021_v.get()._field_Ident,true) != nullptr) || (_249020e70_FindStatic(_154137_dest.ptr(), _157021_v.get()._field_Ident) != nullptr))) {
					_249c1be89_pushErr(_self_.ptr(), _157021_v.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154137_dest.get()._field_Ident),jule::Any(_157021_v.get()._field_Ident)}));
					_154171_ok=false;
					goto _iter_next_24ec65131;
				};
				_154137_dest.get()._field_Statics = jule::alloc_for_append(_154137_dest.get()._field_Statics,1);_154137_dest.get()._field_Statics.__push(_157021_v);;
			}
			_iter_next_24ec65131:;
			++it;
			goto _iter_begin_24ec65131;
		}
		_iter_end_24ec65131:;
	};
	return _154171_ok;
}



inline void _249c2ab35_implTrait(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bdc5ca_Impl>& _158334_decl) {
	jule::Ptr<_249cb078b_TypeKind> _158417_base_t = _249c22c5e_selectType(_self_, _158334_decl.get()._field_Base);;
	if ((_158417_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_249bd48d0_Trait> _158817_base = _249cb4064_Trait(_158417_base_t.ptr());;
	if ((_158817_base == nullptr)) {
		_249c1be89_pushErr(_self_.ptr(), _158334_decl.get()._field_Base.get()._field_Token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_158417_base_t.ptr()))}));
		_249c1c2a8_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_249cb078b_TypeKind> _159517_destT = _249c22c5e_selectType(_self_, _158334_decl.get()._field_Dest);;
	if ((_159517_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_249062e4b_StructIns> _159917_destS = _249cb3d00_Struct(_159517_destT.ptr());;
	if ((_159917_destS == nullptr)) {
		_249c1be89_pushErr(_self_.ptr(), _158334_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_159517_destT.ptr()))}));
		_249c1c2a8_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_249036b01_Struct> _160617_dest = _159917_destS.get()._field_Decl;;
	if ((_23abd9b14_Dir(_160617_dest.get()._field_Token.get()._field_File.ptr()) != _23abd9b14_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_249c1be89_pushErr(_self_.ptr(), _158334_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_158817_base.get()._field_Implemented = jule::alloc_for_append(_158817_base.get()._field_Implemented,1);_158817_base.get()._field_Implemented.__push(_160617_dest);;
	_160617_dest.get()._field_Implements = jule::alloc_for_append(_160617_dest.get()._field_Implements,1);_160617_dest.get()._field_Implements.__push(_158817_base);;
	if ((_158334_decl.get()._field_Statics.len() > 0LL)) {
		_249c1be89_pushErr(_self_.ptr(), _158334_decl.get()._field_Statics[0LL].get()._field_Token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_249c2a508_checkTraitImplMethods(_self_.ptr(), _158817_base,_158334_decl)))) {
			_case_begin_24ec75ce0:;
			{
				return;;
			}
		}
		else if ((!(_249c2a8b0_implToStruct(_self_, _160617_dest,_158334_decl)))) {
			_case_begin_24ec75d56:;
			{
				return;;
			}
		}
		_match_end_24ec735b2:;
	};
}



inline void _249c2adaa_implStruct(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bdc5ca_Impl>& _162835_decl) {
	jule::Ptr<_249cb078b_TypeKind> _162917_destT = _249c22c5e_selectType(_self_, _162835_decl.get()._field_Dest);;
	if ((_162917_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_249062e4b_StructIns> _163317_destS = _249cb3d00_Struct(_162917_destT.ptr());;
	if ((_163317_destS == nullptr)) {
		_249c1be89_pushErr(_self_.ptr(), _162835_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_162917_destT.ptr()))}));
		_249c1c2a8_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_249036b01_Struct> _164017_dest = _163317_destS.get()._field_Decl;;
	if ((_23abd9b14_Dir(_164017_dest.get()._field_Token.get()._field_File.ptr()) != _23abd9b14_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_249c1be89_pushErr(_self_.ptr(), _162835_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_249c2a8b0_implToStruct(_self_, _164017_dest,_162835_decl)))) {
			_case_begin_24ec7ad7d:;
			{
				return;;
			}
		}
		_match_end_24ec7a432:;
	};
}



inline void _249c2b130_implImpl(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bdc5ca_Impl>& _165333_decl) {
	{
		
		if (_249bdc9c6_IsTraitImpl(_165333_decl.ptr())) {
			_case_begin_24ec7ba1b:;
			{
				_249c2ab35_implTrait(_self_, _165333_decl);
			}
		}
		else if (_249bdcc3a_IsStructImpl(_165333_decl.ptr())) {
			_case_begin_24ec7ba93:;
			{
				_249c2adaa_implStruct(_self_, _165333_decl);
			}
		}
		_match_end_24ec7b8ea:;
	};
}



inline void _249c2b44e_checkVarDecl(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249c3702b_Var>& _166437_decl, jule::Trait<_249ccb3bc_Lookup> _166453_l) {
	if (_23abd6627_IsIgnoreIdent(_166437_decl.get()._field_Ident)) {
		_249c1be89_pushErr(_self_.ptr(), _166437_decl.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_249c37658_IsTypeInferred(_166437_decl.ptr())) {
		if ((!(_249c373e4_IsInitialized(_166437_decl.ptr())))) {
			_249c1be89_pushErr(_self_.ptr(), _166437_decl.get()._field_Token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_249c221e2_checkType(_self_, _166437_decl.get()._field_Kind,_166453_l);
	};
	if ((_166437_decl.get()._field_Constant && _166437_decl.get()._field_Reference)) {
		_249c1be89_pushErr(_self_.ptr(), _166437_decl.get()._field_Token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_249c373e4_IsInitialized(_166437_decl.ptr())))) {
		if (_166437_decl.get()._field_Constant) {
			_249c1be89_pushErr(_self_.ptr(), _166437_decl.get()._field_Token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_166437_decl.get()._field_Statically) {
			_249c1be89_pushErr(_self_.ptr(), _166437_decl.get()._field_Token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_166437_decl.get()._field_Reference) {
			_249c1be89_pushErr(_self_.ptr(), _166437_decl.get()._field_Token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _249c2b6c4_checkGlobalVarDecl(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249c3702b_Var>& _169643_decl) {
	if (_249c1cab1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_169643_decl)),_169643_decl.get()._field_Ident,_169643_decl.get()._field_CppLinked)) {
		_249c1be89_pushErr(_self_.ptr(), _169643_decl.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_169643_decl.get()._field_Ident)}));
		_249c1c2a8_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_169643_decl.get()._field_CppLinked && _169643_decl.get()._field_Constant)) {
		_249c1be89_pushErr(_self_.ptr(), _169643_decl.get()._field_Token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_169643_decl.get()._field_CppLinked)) && (!(_169643_decl.get()._field_Constant))) && (!(_169643_decl.get()._field_Statically)))) {
		_249c1be89_pushErr(_self_.ptr(), _169643_decl.get()._field_Token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_249c1c2a8_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_249c1cdd0_checkDirectives(_self_, _169643_decl.get()._field_Directives,jule::Any(_169643_decl));
	_249c2b44e_checkVarDecl(_self_, _169643_decl,jule::Trait<_249ccb3bc_Lookup>(_self_, 3));
}



inline jule::Bool _249c2b938_checkGlobalDecls(jule::Ptr<_249c192c7_Sema> _self_) {
	jule::Bool _171338_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_24ec87098:;
		if (it != expr.end()) {
			jule::Ptr<_249c3702b_Var> _171421_decl = *it;
			{
				_249c2b6c4_checkGlobalVarDecl(_self_, _171421_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_171338_ok = false;
					return _171338_ok;
				};
			}
			_iter_next_24ec87098:;
			++it;
			goto _iter_begin_24ec87098;
		}
		_iter_end_24ec87098:;
	};
	_171338_ok = true;
	return _171338_ok;
}



inline jule::Bool _249c2bce0_checkStructTraitImpl(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249036b01_Struct>& _172445_strct, jule::Ptr<_249bd48d0_Trait>& _172466_trt) {
	jule::Bool _172481_ok = jule::Bool();
	{
		auto &expr = _172466_trt.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_24ec88e24:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> _172521_tf = *it;
			{
				jule::Bool _172621_exist = false;;
				jule::Ptr<_249bcbe38_Fn> _172721_sf = _24901d1c0_FindMethod(_172445_strct.ptr(), _172521_tf.get()._field_Ident,_172521_tf.get()._field_Statically);;
				jule::Ptr<_249bcc312_FnIns> _172817_tfK = _249c24c72_getTraitCheckFnKind(_self_, _172521_tf);;
				if ((_172721_sf != nullptr)) {
					jule::Ptr<_249bcc312_FnIns> _173025_sfK = _249c24c72_getTraitCheckFnKind(_self_, _172721_sf);;
					_172621_exist=(((_172817_tfK.get()._field_Decl.get()._field_Public == _173025_sfK.get()._field_Decl.get()._field_Public) && (_172817_tfK.get()._field_Decl.get()._field_Ident == _173025_sfK.get()._field_Decl.get()._field_Ident)) && _24909e4c6_equalsTrait(_172817_tfK, _173025_sfK));
				};
				if (_172621_exist) {
					jule::Ptr<_24900cb2c_Directive> _173621_d = _249ca9e39_findDirective(_172721_sf.get()._field_Directives,jule::Str("deprecated", 10));;
					if ((_173621_d != nullptr)) {
						_249c1be89_pushErr(_self_.ptr(), _173621_d.get()._field_Tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_172481_ok=false;
				} else {
					;
					jule::Str _174325_s = _249bcc895_GetKindStr(_172817_tfK.ptr(), true);;
					if (_172521_tf.get()._field_Public) {
						(_174325_s).buffer.insert(0, (jule::Str()));;
					};
					_249c1be89_pushErr(_self_.ptr(), _172445_strct.get()._field_Token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_172466_trt.get()._field_Ident),jule::Any(_174325_s)}));
					_172481_ok=false;
				};
			}
			_iter_next_24ec88e24:;
			++it;
			goto _iter_begin_24ec88e24;
		}
		_iter_end_24ec88e24:;
	};
	return _172481_ok;
}



inline jule::Bool _249c2c0ed_checkStructImpls(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249036b01_Struct>& _175441_s) {
	jule::Bool _175455_ok = jule::Bool();
	_175455_ok=true;
	{
		auto &expr = _175441_s.get()._field_Implements;
		auto it = expr.begin();
		_iter_begin_24ec90ec5:;
		if (it != expr.end()) {
			jule::Ptr<_249bd48d0_Trait> _175621_trt = *it;
			{
				_175455_ok=(_249c2bce0_checkStructTraitImpl(_self_, _175441_s,_175621_trt) && _175455_ok);
			}
			_iter_next_24ec90ec5:;
			++it;
			goto _iter_begin_24ec90ec5;
		}
		_iter_end_24ec90ec5:;
	};
	return _175455_ok;
}



inline jule::Bool _249c2c40b_checkStructFields(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249036b01_Struct>& _176242_st) {
	jule::Bool _176257_ok = jule::Bool();
	_176257_ok=true;
	{
		auto &expr = _176242_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_24ec924c1:;
		if (it != expr.end()) {
			jule::Ptr<_24902413d_Field> _176421_f = *it;
			{
				_176421_f.get()._field_Owner=_176242_st;
				{
					auto &expr = _176242_st.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_24ec92e0b:;
					if (it != expr.end()) {
						jule::Ptr<_24902413d_Field> _176620_cf = *it;
						{
							if ((_176421_f == _176620_cf)) {
								goto _iter_end_24ec92e0b;
							} else if ((_176421_f.get()._field_Ident == _176620_cf.get()._field_Ident)) {
								_249c1be89_pushErr(_self_.ptr(), _176421_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_176421_f.get()._field_Ident)}));
								_249c1c2a8_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_176257_ok=false;
							};
						}
						_iter_next_24ec92e0b:;
						++it;
						goto _iter_begin_24ec92e0b;
					}
					_iter_end_24ec92e0b:;
				};
			}
			_iter_next_24ec924c1:;
			++it;
			goto _iter_begin_24ec924c1;
		}
		_iter_end_24ec924c1:;
	};
	return _176257_ok;
}



inline void _249c2c681_checkStructDecl(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249036b01_Struct>& _177940_s) {
	if (_23abd6627_IsIgnoreIdent(_177940_s.get()._field_Ident)) {
		_249c1be89_pushErr(_self_.ptr(), _177940_s.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_249c1cab1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_177940_s)),_177940_s.get()._field_Ident,_177940_s.get()._field_CppLinked)) {
		_249c1be89_pushErr(_self_.ptr(), _177940_s.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_177940_s.get()._field_Ident)}));
		_249c1c2a8_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_249c1cdd0_checkDirectives(_self_, _177940_s.get()._field_Directives,jule::Any(_177940_s));
	{
		
		if ((!(_249c28ccb_checkDeclGenerics(_self_.ptr(), _177940_s.get()._field_Generics)))) {
			_case_begin_24ec97482:;
		}
		else if ((!(_249c2c40b_checkStructFields(_self_, _177940_s)))) {
			_case_begin_24ec974e8:;
		}
		else if ((!(_249c2c0ed_checkStructImpls(_self_, _177940_s)))) {
			_case_begin_24ec9755e:;
		}
		_match_end_24ec9732d:;
	};
}



inline jule::Bool _249c2c8e5_checkStructDecls(jule::Ptr<_249c192c7_Sema> _self_) {
	jule::Bool _179738_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_24ec9898e:;
		if (it != expr.end()) {
			jule::Ptr<_249036b01_Struct> _179821_s = *it;
			{
				_249c2c681_checkStructDecl(_self_, _179821_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_179738_ok = false;
					return _179738_ok;
				};
			}
			_iter_next_24ec9898e:;
			++it;
			goto _iter_begin_24ec9898e;
		}
		_iter_end_24ec9898e:;
	};
	_179738_ok = true;
	return _179738_ok;
}



inline void _249c2cb6a_checkFnDecl(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bcbe38_Fn>& _180836_f) {
	if (_23abd6627_IsIgnoreIdent(_180836_f.get()._field_Ident)) {
		_249c1be89_pushErr(_self_.ptr(), _180836_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_249c1cdd0_checkDirectives(_self_, _180836_f.get()._field_Directives,jule::Any(_180836_f));
	_180836_f.get()._field_sema=_self_;
	_249c2966c_checkFnDeclPrototype(_self_, _180836_f);
	if (_249c1cab1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_180836_f)),_180836_f.get()._field_Ident,_180836_f.get()._field_CppLinked)) {
		if ((_180836_f.get()._field_Ident == jule::Str("init", 4))) {
			jule::Ptr<_249bcbe38_Fn> _182021_init = _249c1aac0_FindFn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_182021_init != nullptr)) {
				return;;
			};
		};
		_249c1be89_pushErr(_self_.ptr(), _180836_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_180836_f.get()._field_Ident)}));
		_249c1c2a8_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _249c2cdce_checkFnDecls(jule::Ptr<_249c192c7_Sema> _self_) {
	jule::Bool _183134_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_24ec9e203:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> _183221_f = *it;
			{
				_249c2cb6a_checkFnDecl(_self_, _183221_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_183134_ok = false;
					return _183134_ok;
				};
			}
			_iter_next_24ec9e203:;
			++it;
			goto _iter_begin_24ec9e203;
		}
		_iter_end_24ec9e203:;
	};
	_183134_ok = true;
	return _183134_ok;
}



inline void _249c2d297_pushCycleError(_249c192c7_Sema* _self_, jule::Ptr<_249036b01_Struct>& _184230_st1, jule::Ptr<_249036b01_Struct>& _184245_st2, jule::Str& _184264_message) {
	;
	jule::Str _184413_refers_to = _23a8a61e8_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_184230_st1.get()._field_Ident),jule::Any(_184245_st2.get()._field_Ident)}));;
	(_184264_message).buffer.insert(0, (((_23a811c47_Repeat(jule::Str(" ", 1),4LL) + _184413_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _249c2d6e8_checkCrossCycle(_249c192c7_Sema* _self_, jule::Ptr<_249036b01_Struct>& _184831_st1, jule::Ptr<_249036b01_Struct>& _184846_st2, jule::Str& _184865_message) {
	{
		auto &expr = _184846_st2.get()._field_Uses;
		auto it = expr.begin();
		_iter_begin_24eca2c51:;
		if (it != expr.end()) {
			jule::Ptr<_249036b01_Struct> &_184916_u = *it;
			{
				if ((_184916_u == _184831_st1)) {
					_249c2d297_pushCycleError(&(*_self_), _184846_st2,_184916_u,_184865_message);
					return false;
				};
				if ((!(_249c2d6e8_checkCrossCycle(&(*_self_), _184831_st1,_184916_u,_184865_message)))) {
					_249c2d297_pushCycleError(&(*_self_), _184846_st2,_184916_u,_184865_message);
					return false;
				};
			}
			_iter_next_24eca2c51:;
			++it;
			goto _iter_begin_24eca2c51;
		}
		_iter_end_24eca2c51:;
	};
	return true;
}



inline jule::Bool _249c2db6b_checkStructDeriveIllegalCycles(_249c192c7_Sema* _self_, jule::Str _186349_derive, jule::Ptr<_249036b01_Struct>& _186363_st1, jule::Ptr<_249cb078b_TypeKind>& _186382_k) {
	jule::Bool _186398_ok = jule::Bool();
	jule::Ptr<_249036b01_Struct> _186417_st2 = _249cc89d5_getStructFromKind(_186382_k);;
	if ((_186417_st2 == nullptr)) {
		_186398_ok = true;
		return _186398_ok;
	};
	if ((_186363_st1 == _186417_st2)) {
		_249c1be89_pushErr(&(*_self_), _186363_st1.get()._field_Token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_186349_derive),jule::Any(_186363_st1.get()._field_Ident)}));
		_186398_ok = false;
		return _186398_ok;
	};
	jule::Str _187617_message = jule::Str();;
	if ((!(_249c2d6e8_checkCrossCycle(&(*_self_), _186363_st1,_186417_st2,_187617_message)))) {
		jule::Str _187821_errMsg = _187617_message;;
		_187617_message=jule::Str();
		_249c2d297_pushCycleError(&(*_self_), _186363_st1,_186417_st2,_187617_message);
		_187821_errMsg+=_187617_message;
		_249c1be89_pushErr(&(*_self_), _186363_st1.get()._field_Token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_186349_derive),jule::Any(_187821_errMsg)}));
		_186398_ok = false;
		return _186398_ok;
	};
	_186398_ok = true;
	return _186398_ok;
}



inline jule::Bool _249c2deac_checkStructInsDeriveClone(_249c192c7_Sema* _self_, jule::Ptr<_249062e4b_StructIns> _188848_st) {
	jule::Bool _188866_ok = jule::Bool();
	if ((!(_2490237be_IsDerives(_188848_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		_188866_ok = true;
		return _188866_ok;
	};
	{
		auto &expr = _188848_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_24eca90dc:;
		if (it != expr.end()) {
			jule::Ptr<_24903e268_FieldIns> _189221_f = *it;
			{
				if ((_189221_f.get()._field_Kind == nullptr)) {
					goto _iter_next_24eca90dc;
				};
				if ((!(_249cb23c5_SupportsCloning(_189221_f.get()._field_Kind.ptr())))) {
					_249c1be89_pushErr(&(*_self_), _188848_st.get()._field_Decl.get()._field_Token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_189221_f.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_188866_ok = false;
					return _188866_ok;
				};
				if ((!(_249c2db6b_checkStructDeriveIllegalCycles(&(*_self_), jule::Str("Clone", 5),_188848_st.get()._field_Decl,_189221_f.get()._field_Kind)))) {
					_188866_ok = false;
					return _188866_ok;
				};
			}
			_iter_next_24eca90dc:;
			++it;
			goto _iter_begin_24eca90dc;
		}
		_iter_end_24eca90dc:;
	};
	_188866_ok = true;
	return _188866_ok;
}



inline void _249c2e199_checkPackageDecls(jule::Ptr<_249c192c7_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_24ecac2bb:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _191021_f = *it;
			{
				_249c1bac1_setCurrentFile(_self_.ptr(), _191021_f);
				if ((!(_249c289bd_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_249c2777a_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_24ecac2bb:;
			++it;
			goto _iter_begin_24ecac2bb;
		}
		_iter_end_24ecac2bb:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_24ecac6ea:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _192021_f = *it;
			{
				_249c1bac1_setCurrentFile(_self_.ptr(), _192021_f);
				if ((!(_249c2a151_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_24ecac6ea:;
			++it;
			goto _iter_begin_24ecac6ea;
		}
		_iter_end_24ecac6ea:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_24ecad894:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _192721_f = *it;
			{
				_249c1bac1_setCurrentFile(_self_.ptr(), _192721_f);
				if ((!(_249c2b938_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_24ecad894:;
			++it;
			goto _iter_begin_24ecad894;
		}
		_iter_end_24ecad894:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_24ecb039b:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _193421_f = *it;
			{
				_249c1bac1_setCurrentFile(_self_.ptr(), _193421_f);
				{
					
					if ((!(_249c2cdce_checkFnDecls(_self_)))) {
						_case_begin_24ecb1303:;
					}
					else if ((!(_249c2c8e5_checkStructDecls(_self_)))) {
						_case_begin_24ecb1369:;
					}
					else {
						_case_begin_24ecb128c:;
						{
							goto _iter_next_24ecb039b;
						}
					}
					_match_end_24ecb1226:;
				};
				return;;
			}
			_iter_next_24ecb039b:;
			++it;
			goto _iter_begin_24ecb039b;
		}
		_iter_end_24ecb039b:;
	};
}



inline void _249c2e4da_checkDataForTypeInference(_249c192c7_Sema* _self_, jule::Ptr<_249c80052_Data>& _194645_d, jule::Ptr<_23abd3d83_Token>& _194656_err_token) {
	{
		
		if (_249c8043c_IsNil(_194645_d.ptr())) {
			_case_begin_24ecb2425:;
			{
				_249c1be89_pushErr(&(*_self_), _194656_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_249c806a1_IsVoid(_194645_d.ptr())) {
			_case_begin_24ecb249c:;
			{
				_249c1be89_pushErr(&(*_self_), _194656_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_194645_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_24ecb2524:;
			{
				_249c1be89_pushErr(&(*_self_), _194656_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_24ecb22e3:;
	};
}



inline void _249c2e771_checkVar(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249c3702b_Var>& _195733_v) {
	if (_195733_v.get()._field_CppLinked) {
		return;;
	};
	if (_249c37658_IsTypeInferred(_195733_v.ptr())) {
		_195733_v.get()._field_Kind=jule::new_ptr<_249cb48e4_TypeSymbol>(_249cb48e4_TypeSymbol{._field_Kind=_195733_v.get()._field_Value.get()._field_Data.get()._field_Kind});
		_249c2e4da_checkDataForTypeInference(_self_.ptr(), _195733_v.get()._field_Value.get()._field_Data,_195733_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		_249c26aa9_checkValidityForInitExpr(_self_, _195733_v.get()._field_Mutable,_195733_v.get()._field_Reference,_195733_v.get()._field_Kind.get()._field_Kind,_195733_v.get()._field_Value.get()._field_Data,_195733_v.get()._field_Value.get()._field_Expr.get()._field_Token);
	} else {
		jule::Ptr<_249cbb5ee_Arr> _197421_arr = _249cb35b3_Arr(_195733_v.get()._field_Kind.get()._field_Kind.ptr());;
		if ((_197421_arr != nullptr)) {
			if (_197421_arr.get()._field_Auto) {
				jule::Ptr<_249cbb5ee_Arr> _197725_dataArr = _249cb35b3_Arr(_195733_v.get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_197725_dataArr != nullptr)) {
					_197421_arr.get()._field_N=_197725_dataArr.get()._field_N;
				};
			};
		};
		if (_249c23d70_checkAssignType(_self_, _195733_v.get()._field_Reference,_195733_v.get()._field_Kind.get()._field_Kind,_195733_v.get()._field_Value.get()._field_Data,_195733_v.get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_249c26aa9_checkValidityForInitExpr(_self_, _195733_v.get()._field_Mutable,_195733_v.get()._field_Reference,_195733_v.get()._field_Kind.get()._field_Kind,_195733_v.get()._field_Value.get()._field_Data,_195733_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		};
	};
	if ((_195733_v.get()._field_Reference && (!(_249cc7d47_isValidForRef(_195733_v.get()._field_Kind.get()._field_Kind))))) {
		_249c1be89_pushErr(_self_.ptr(), _195733_v.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_195733_v.get()._field_Kind.get()._field_Kind.ptr()))}));
	};
	if (_195733_v.get()._field_Constant) {
		if ((!(_249c80915_IsConst(_195733_v.get()._field_Value.get()._field_Data.ptr())))) {
			_249c1be89_pushErr(_self_.ptr(), _195733_v.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_195733_v.get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_249cb453c_Tup(_195733_v.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		_195733_v.get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _249c2ea90_checkTypeVar(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249c3702b_Var>& _201237_decl, jule::Trait<_249ccb3bc_Lookup> _201253_l) {
	if ((_201237_decl.get()._field_CppLinked || (!(_249c373e4_IsInitialized(_201237_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_249c81ac0_Eval> _201717_eval = nullptr;;
	if ((_201237_decl.get()._field_Kind != nullptr)) {
		_201717_eval=_249c231b0_evalpd(_self_, _201253_l,_201237_decl.get()._field_Kind.get()._field_Kind,_201237_decl);
	} else {
		_201717_eval=_249c231b0_evalpd(_self_, _201253_l,nullptr,_201237_decl);
	};
	_201717_eval.get()._field_immutable=(!(_201237_decl.get()._field_Mutable));
	_201237_decl.get()._field_Value.get()._field_Data=_249ca1e86_evalExpr(_201717_eval, _201237_decl.get()._field_Value.get()._field_Expr);
	if ((_201237_decl.get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_249c2e771_checkVar(_self_, _201237_decl);
}



inline void _249c2ec6b_checkGlobalTypes(jule::Ptr<_249c192c7_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_24ecc2a95:;
		if (it != expr.end()) {
			jule::Ptr<_249c3702b_Var> _203321_decl = *it;
			{
				if (((_249c373e4_IsInitialized(_203321_decl.ptr()) && (_203321_decl.get()._field_Value.get()._field_Data == nullptr)) || (_249c37658_IsTypeInferred(_203321_decl.ptr()) && (_203321_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_249c2ea90_checkTypeVar(_self_, _203321_decl,jule::Trait<_249ccb3bc_Lookup>(_self_, 3));
				};
			}
			_iter_next_24ecc2a95:;
			++it;
			goto _iter_begin_24ecc2a95;
		}
		_iter_end_24ecc2a95:;
	};
}



inline jule::Ptr<_249bcc312_FnIns> _249c30123_readyToCheckFn(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249062e4b_StructIns>& _204439_s, jule::Ptr<_249bcbe38_Fn>& _204459_f) {
	jule::Ptr<_249bcc312_FnIns> _204517_ins = _2490a2b8e_instance(_204459_f);;
	if ((_204459_f.get()._field_Instances.len() != 0LL)) {
		return _204517_ins;
	};
	_204517_ins.get()._field_Owner=_204439_s;
	_2490999bb_appendInstance(_204459_f.ptr(), _204517_ins);
	_204517_ins.get()._field_reloaded=true;
	if (_249c2605e_reloadFnInsTypes(_self_, _204517_ins)) {
		return _204517_ins;
	};
	return nullptr;
}



inline void _249c30442_checkTypeMethod(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249062e4b_StructIns>& _205840_s, jule::Ptr<_249bcbe38_Fn>& _205860_f) {
	if ((_205860_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_249bcc312_FnIns> _206317_ins = _205860_f.get()._field_Instances[0LL];;
	if ((_206317_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_249c32b1a_checkFnIns(_self_, _206317_ins);
}



inline jule::Ptr<_249bcc312_FnIns> _249c30893_checkStructInsOp(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249062e4b_StructIns>& _207141_s, jule::Ptr<_249bcbe38_Fn>& _207161_f, jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)> _207169_p) {
	if ((((_207161_f == nullptr) || (_207161_f.get()._field_Generics.len() > 0LL)) || (!(_207169_p(_207161_f))))) {
		return nullptr;
	};
	return _207161_f.get()._field_Instances[0LL];
}



inline jule::Bool _249c30c4a_checkStructEnv(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249062e4b_StructIns>& _208139_s, jule::Ptr<_23abd3d83_Token> _208158_errorToken) {
	jule::Bool _208180_ok = jule::Bool();
	_249cbdcb6_typeChecker _208217_tc = _249cbdcb6_typeChecker{._field_s=_208139_s.get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_249ccb3bc_Lookup>(_208139_s.get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_249ccb3bc_Lookup>(_208139_s.get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_249cbcea2_referencer>(_249cbcea2_referencer{._field_ident=_208139_s.get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any(_208139_s.get()._field_Decl), }), ._field_refers=_208139_s.get()._field_Refers, };;
	if ((_208139_s.get()._field_Generics.len() > 0LL)) {
		_208217_tc._field_useGenerics=jule::Slice<jule::Ptr<_249caea98_TypeAlias>>::alloc(0LL,_208139_s.get()._field_Generics.len());
		{
			auto &expr = _208139_s.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_24eccc5a5:;
			if (it != expr.end()) {
				jule::I64 _209518_i = it - expr.begin();
				jule::Ptr<_249cae05e_InsGeneric> _209525_g = *it;
				{
					jule::Ptr<_2490539a8_GenericDecl> _209625_decl = _208139_s.get()._field_Decl.get()._field_Generics[_209518_i];;
					_208217_tc._field_useGenerics = jule::alloc_for_append(_208217_tc._field_useGenerics,1);_208217_tc._field_useGenerics.__push(jule::new_ptr<_249caea98_TypeAlias>(_249caea98_TypeAlias{._field_Token=_209625_decl.get()._field_Token, ._field_Ident=_209625_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_249cb48e4_TypeSymbol>(_249cb48e4_TypeSymbol{._field_Kind=_209525_g.get()._field_Kind}), }));;
				}
				_iter_next_24eccc5a5:;
				++it;
				_209518_i++;
				goto _iter_begin_24eccc5a5;
			}
			_iter_end_24eccc5a5:;
		};
	};
	jule::Ptr<_249c7a228_SymbolTable> _210517_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_249c1bac1_setCurrentFile(_self_.ptr(), _210517_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != _208139_s.get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_249c7a228_SymbolTable> _210921_file = _249c188d1_findFile(_self_.get()._field_files,_208139_s.get()._field_Decl.get()._field_Token.get()._field_File);;
		if ((_210921_file != nullptr)) {
			_249c1bac1_setCurrentFile(_self_.ptr(), _210921_file);
		};
	};
	if ((_208139_s.get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_249bda694_constraintChecker> _211621_cc = _249c21d3a_constraintChecker(_self_);;
		_211621_cc.get()._field_et=_208158_errorToken;
		_211621_cc.get()._field_si=_208139_s;
		_211621_cc.get()._field_genericsA=_208217_tc._field_useGenerics;
		_211621_cc.get()._field_uniq=true;
		if ((!(_249bdb574_check(_211621_cc)))) {
			return _208180_ok;
		};
	};
	_208180_ok=true;
	if ((_208139_s.get()._field_Statics.len() > 0LL)) {
		jule::I64 _212921_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_208217_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto &expr = _208139_s.get()._field_Statics;
			auto it = expr.begin();
			_iter_begin_24ecd5745:;
			if (it != expr.end()) {
				jule::Ptr<_249c3702b_Var> _213125_v = *it;
				{
					_249c2b44e_checkVarDecl(_self_, _213125_v,jule::Trait<_249ccb3bc_Lookup>(_self_, 3));
					_249c2ea90_checkTypeVar(_self_, _213125_v,jule::Trait<_249ccb3bc_Lookup>(_self_, 3));
					_208180_ok=(((_self_.get()._field_errors.len() - _212921_n) == 0LL) && _208180_ok);
				}
				_iter_next_24ecd5745:;
				++it;
				goto _iter_begin_24ecd5745;
			}
			_iter_end_24ecd5745:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_208217_tc._field_useGenerics.len());
		if ((!(_208180_ok))) {
			_208180_ok = false;
			return _208180_ok;
		};
	};
	jule::Ptr<_249c81ac0_Eval> _214217_eval = _249c23875_eval(_self_, jule::Trait<_249ccb3bc_Lookup>(_self_, 3));;
	{
		auto &expr = _208139_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_24ecd834c:;
		if (it != expr.end()) {
			jule::Ptr<_24903e268_FieldIns> _214321_f = *it;
			{
				jule::Ptr<_249cb078b_TypeKind> _214421_kind = _249cc6032_checkDecl(&_208217_tc, _214321_f.get()._field_Decl.get()._field_Kind.get()._field_Decl);;
				_208180_ok=((_214421_kind != nullptr) && _208180_ok);
				if ((_214421_kind == nullptr)) {
					if (((_self_ != _208139_s.get()._field_Decl.get()._field_sema) && (_208139_s.get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_208139_s.get()._field_Decl.get()._field_sema.get()._field_errors);
						_208139_s.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_24ecd834c;
				};
				_214321_f.get()._field_Kind=_214421_kind;
				_208139_s.get()._field_Mutable=(_208139_s.get()._field_Mutable || ((!(_214321_f.get()._field_Decl.get()._field_Mutable)) && _249cb1b88_Mutable(_214321_f.get()._field_Kind.ptr())));
				_249c2deac_checkStructInsDeriveClone(_self_.ptr(), _208139_s);
				if ((_214321_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_24ecd834c;
				};
				_214217_eval.get()._field_prefix=_214321_f.get()._field_Kind;
				_214217_eval.get()._field_field=_214321_f;
				_214321_f.get()._field_Default=_249ca1e86_evalExpr(_214217_eval, _214321_f.get()._field_Decl.get()._field_Default);
				if ((_214321_f.get()._field_Default == nullptr)) {
					goto _iter_next_24ecd834c;
				};
				;
				_249c23d70_checkAssignType(_self_, false,_214321_f.get()._field_Kind,_214321_f.get()._field_Default,_214321_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_24ecd834c:;
			++it;
			goto _iter_begin_24ecd834c;
		}
		_iter_end_24ecd834c:;
	};
	return _208180_ok;
}



inline jule::Bool _249c31102_precheckStructIns(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249062e4b_StructIns>& _217742_s, jule::Ptr<_23abd3d83_Token> _217761_errorToken) {
	jule::Bool _217783_ok = jule::Bool();
	_217783_ok=_249c30c4a_checkStructEnv(_self_, _217742_s,_217761_errorToken);
	if ((!(_217783_ok))) {
		_217783_ok = false;
		return _217783_ok;
	};
	{
		auto &expr = _217742_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_24ece0b29:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> _218221_f = *it;
			{
				if ((_218221_f.get()._field_Generics.len() == 0LL)) {
					if ((_249c30123_readyToCheckFn(_self_, _217742_s,_218221_f) == nullptr)) {
						_217783_ok = false;
						return _217783_ok;
					};
				};
			}
			_iter_next_24ece0b29:;
			++it;
			goto _iter_begin_24ece0b29;
		}
		_iter_end_24ece0b29:;
	};
	_217783_ok = true;
	return _217783_ok;
}



inline void _249c31377_checkStructIns(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249062e4b_StructIns>& _219239_s) {
	{
		auto &expr = _219239_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_24ece260e:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> _219321_f = *it;
			{
				_249c30442_checkTypeMethod(_self_, _219239_s,_219321_f);
			}
			_iter_next_24ece260e:;
			++it;
			goto _iter_begin_24ece260e;
		}
		_iter_end_24ece260e:;
	};
}



inline void _249c315ec_checkTypeStruct(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249036b01_Struct>& _219840_s) {
	if (_219840_s.get()._field_CppLinked) {
		return;;
	};
	if ((_219840_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _219840_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_24ece3ed4:;
		if (it != expr.end()) {
			jule::Ptr<_249062e4b_StructIns> _221121_ins = *it;
			{
				_249c31377_checkStructIns(_self_, _221121_ins);
			}
			_iter_next_24ece3ed4:;
			++it;
			goto _iter_begin_24ece3ed4;
		}
		_iter_end_24ece3ed4:;
	};
}



inline void _249c317c8_checkStructTypes(jule::Ptr<_249c192c7_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_24ece46bb:;
		if (it != expr.end()) {
			jule::Ptr<_249036b01_Struct> _221721_s = *it;
			{
				_249c315ec_checkTypeStruct(_self_, _221721_s);
			}
			_iter_next_24ece46bb:;
			++it;
			goto _iter_begin_24ece46bb;
		}
		_iter_end_24ece46bb:;
	};
}



inline void _249c31a70_checkStructInsOperators(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249062e4b_StructIns> _222247_s) {
	{
		auto &expr = _222247_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_24ece5b0c:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> _222321_m = *it;
			{
				{
					auto &_match_expr{ _222321_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_24ece68ee:;
						{
							_222247_s.get()._field_Operators._field_Eq=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _222665_f) mutable -> jule::Bool {
								return static__249c38cca_Eq(_222665_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_24ece6976:;
						{
							_222247_s.get()._field_Operators._field_Gt=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _222865_f) mutable -> jule::Bool {
								return static__249c39072_Gt(_222865_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_24ece69ed:;
						{
							_222247_s.get()._field_Operators._field_GtEq=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _223067_f) mutable -> jule::Bool {
								return static__249c39319_GtEq(_223067_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_24ece6a75:;
						{
							_222247_s.get()._field_Operators._field_Lt=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _223265_f) mutable -> jule::Bool {
								return static__249c395b1_Lt(_223265_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_24ece6aec:;
						{
							_222247_s.get()._field_Operators._field_LtEq=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _223467_f) mutable -> jule::Bool {
								return static__249c39858_LtEq(_223467_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_24ece6b74:;
						{
							_222247_s.get()._field_Operators._field_Shl=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _223666_f) mutable -> jule::Bool {
								return static__249c39e41_Shl(_223666_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_24ece6beb:;
						{
							_222247_s.get()._field_Operators._field_Shr=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _223866_f) mutable -> jule::Bool {
								return static__249c3a1d8_Shr(_223866_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_24ece6c73:;
						{
							_222247_s.get()._field_Operators._field_Add=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _224066_f) mutable -> jule::Bool {
								return static__249c3a480_Add(_224066_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_24ece6cea:;
						{
							_222247_s.get()._field_Operators._field_Sub=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _224266_f) mutable -> jule::Bool {
								return static__249c3a727_Sub(_224266_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_24ece6d72:;
						{
							_222247_s.get()._field_Operators._field_Div=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _224466_f) mutable -> jule::Bool {
								return static__249c3a9be_Div(_224466_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_24ece6de9:;
						{
							_222247_s.get()._field_Operators._field_Mul=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _224666_f) mutable -> jule::Bool {
								return static__249c3ac66_Mul(_224666_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_24ece6e71:;
						{
							_222247_s.get()._field_Operators._field_Mod=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _224866_f) mutable -> jule::Bool {
								return static__249c3b00d_Mod(_224866_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_24ece6ee8:;
						{
							_222247_s.get()._field_Operators._field_BitAnd=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _225069_f) mutable -> jule::Bool {
								return static__249c3b2a5_BitAnd(_225069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_24ece7070:;
						{
							_222247_s.get()._field_Operators._field_BitOr=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _225268_f) mutable -> jule::Bool {
								return static__249c3b54c_BitOr(_225268_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_24ece70e7:;
						{
							_222247_s.get()._field_Operators._field_BitXor=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _225469_f) mutable -> jule::Bool {
								return static__249c3b7e4_BitXor(_225469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_24ece716e:;
						{
							_222247_s.get()._field_Operators._field_Neg=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _225666_f) mutable -> jule::Bool {
								return static__249c3bdcc_Neg(_225666_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_24ece71e6:;
						{
							_222247_s.get()._field_Operators._field_Pos=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _225866_f) mutable -> jule::Bool {
								return static__249c3c174_Pos(_225866_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_24ece726d:;
						{
							_222247_s.get()._field_Operators._field_BitNot=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _226069_f) mutable -> jule::Bool {
								return static__249c3c41b_BitNot(_226069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_24ece72e5:;
						{
							_222247_s.get()._field_Operators._field_AddAssign=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _226272_f) mutable -> jule::Bool {
								return static__249c3ca04_AddAssign(_226272_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_24ece736c:;
						{
							_222247_s.get()._field_Operators._field_SubAssign=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _226472_f) mutable -> jule::Bool {
								return static__249c3cc9b_SubAssign(_226472_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_24ece73e4:;
						{
							_222247_s.get()._field_Operators._field_DivAssign=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _226672_f) mutable -> jule::Bool {
								return static__249c3d043_DivAssign(_226672_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_24ece746b:;
						{
							_222247_s.get()._field_Operators._field_MulAssign=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _226872_f) mutable -> jule::Bool {
								return static__249c3d2da_MulAssign(_226872_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_24ece74e3:;
						{
							_222247_s.get()._field_Operators._field_ModAssign=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _227072_f) mutable -> jule::Bool {
								return static__249c3d582_ModAssign(_227072_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_24ece756a:;
						{
							_222247_s.get()._field_Operators._field_ShlAssign=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _227272_f) mutable -> jule::Bool {
								return static__249c3d829_ShlAssign(_227272_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_24ece75e2:;
						{
							_222247_s.get()._field_Operators._field_ShrAssign=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _227472_f) mutable -> jule::Bool {
								return static__249c3dac1_ShrAssign(_227472_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_24ece7669:;
						{
							_222247_s.get()._field_Operators._field_BitOrAssign=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _227674_f) mutable -> jule::Bool {
								return static__249c3dd68_BitOrAssign(_227674_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_24ece76e1:;
						{
							_222247_s.get()._field_Operators._field_BitAndAssign=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _227875_f) mutable -> jule::Bool {
								return static__249c3e110_BitAndAssign(_227875_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_24ece7768:;
						{
							_222247_s.get()._field_Operators._field_BitXorAssign=_249c30893_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_249bcbe38_Fn>)>([=](jule::Ptr<_249bcbe38_Fn> _228075_f) mutable -> jule::Bool {
								return static__249c3e3a7_BitXorAssign(_228075_f);
							}));
						}
					}
					_match_end_24ece64ae:;
				};
			}
			_iter_next_24ece5b0c:;
			++it;
			goto _iter_begin_24ece5b0c;
		}
		_iter_end_24ece5b0c:;
	};
}



inline void _249c31d06_precheckStructType(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249036b01_Struct>& _228543_s) {
	if (_228543_s.get()._field_CppLinked) {
		return;;
	};
	if ((_228543_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_228543_s.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_249062e4b_StructIns> _229621_ins = _249012d63_instance(_228543_s);;
		_229621_ins.get()._field_Checked=true;
		_249018e57_appendInstance(_228543_s.ptr(), _229621_ins);
		_249c31102_precheckStructIns(_self_, _229621_ins,nullptr);
	};
	_249c31a70_checkStructInsOperators(_self_, _228543_s.get()._field_Instances[0LL]);
}



inline void _249c31ed2_precheckStructTypes(jule::Ptr<_249c192c7_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_24ed24278:;
		if (it != expr.end()) {
			jule::Ptr<_249036b01_Struct> _230621_s = *it;
			{
				_249c31d06_precheckStructType(_self_, _230621_s);
			}
			_iter_next_24ed24278:;
			++it;
			goto _iter_begin_24ed24278;
		}
		_iter_end_24ed24278:;
	};
}



inline void _249c32257_checkRets(_249c192c7_Sema* _self_, jule::Ptr<_249bcc312_FnIns>& _231133_f) {
	if (_2490aaa43_IsVoid(_231133_f.get()._field_Decl.ptr())) {
		return;;
	};
	_249c34402_missingRetChecker _231513_mrc = static__249c347ba_new();;
	jule::Bool _231613_ok = _249c357cc_check(&_231513_mrc, _231133_f.get()._field_Scope);;
	if ((!(_231613_ok))) {
		_249c1be89_pushErr(&(*_self_), _231133_f.get()._field_Decl.get()._field_Token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _249c32576_checkFnInsSc(_249c192c7_Sema* _self_, jule::Ptr<_249bcc312_FnIns>& _232236_f, jule::Ptr<_249be9296_scopeChecker>& _232252_sc) {
	_249c17eeb_appendRetVars(_232252_sc.get()._field_table.get()._field_Vars,_232236_f);
	_249c182a4_appendParamVars(_232252_sc.get()._field_table.get()._field_Vars,_232236_f);
	_249c1857e_appendGenericTypeAliases(_232252_sc.get()._field_table.get()._field_TypeAliases,_232236_f);
	_249c092d9_check(_232252_sc, _232236_f.get()._field_Decl.get()._field_Scope,_232236_f.get()._field_Scope);
	if ((!(_249bebdd1_stopped(_232252_sc.ptr())))) {
		_249c32257_checkRets(&(*_self_), _232236_f);
	};
}



inline void _249c32895_checkFnInsCaller(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bcc312_FnIns>& _233541_f, jule::Ptr<_23abd3d83_Token> _233556_caller) {
	if (_233541_f.get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_249c7a228_SymbolTable> _234017_old = _233541_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_249c1bac1_setCurrentFile(_233541_f.get()._field_Decl.get()._field_sema.ptr(), _234017_old);
	});;
	jule::Ptr<_249c7a228_SymbolTable> _234217_file = _249c188d1_findFile(_233541_f.get()._field_Decl.get()._field_sema.get()._field_files,_233541_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_234217_file != nullptr)) {
		_249c1bac1_setCurrentFile(_233541_f.get()._field_Decl.get()._field_sema.ptr(), _234217_file);
	};
	jule::Ptr<_249be9296_scopeChecker> _234717_sc = _249bde9ea_newScopeChecker(_233541_f.get()._field_Decl.get()._field_sema,_233541_f);;
	_234717_sc.get()._field_calledFrom=_233556_caller;
	_249c32576_checkFnInsSc(_self_.ptr(), _233541_f,_234717_sc);
	if ((_233541_f.get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_233541_f.get()._field_Decl.get()._field_sema.get()._field_errors);
		_233541_f.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _249c32b1a_checkFnIns(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bcc312_FnIns>& _235735_f) {
	_249c32895_checkFnInsCaller(_self_, _235735_f,nullptr);
}



inline void _249c32d90_checkTypeFn(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bcbe38_Fn>& _236136_f) {
	if (_236136_f.get()._field_CppLinked) {
		return;;
	};
	if ((_236136_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _236136_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_24ed30905:;
		if (it != expr.end()) {
			jule::Ptr<_249bcc312_FnIns> _237121_ins = *it;
			{
				_249c32b1a_checkFnIns(_self_, _237121_ins);
			}
			_iter_next_24ed30905:;
			++it;
			goto _iter_begin_24ed30905;
		}
		_iter_end_24ed30905:;
	};
}



inline void _249c33115_checkTestFn(_249c192c7_Sema* _self_, jule::Ptr<_249bcc312_FnIns>& _237635_f) {
	if (_237635_f.get()._field_Decl.get()._field_Public) {
		_249c1be89_pushErr(&(*_self_), _237635_f.get()._field_Decl.get()._field_Token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_249c1c2a8_pushSugggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_237635_f.get()._field_Params.len() != 1LL) || (_237635_f.get()._field_Result != nullptr))) {
		_249c1be89_pushErr(&(*_self_), _237635_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_249c1c2a8_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_249cb89e7_Sptr> _238917_sptr = _249cb2b12_Sptr(_237635_f.get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_238917_sptr == nullptr)) {
		_249c1be89_pushErr(&(*_self_), _237635_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_249c1c2a8_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_249062e4b_StructIns> _239613_s = _249cb3d00_Struct(_238917_sptr.get()._field_Elem.ptr());;
	if (((_239613_s == nullptr) || (!(_249c166ae_isStdPackage(_239613_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("testing", 7)))))) {
		_249c1be89_pushErr(&(*_self_), _237635_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_249c1c2a8_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _249c3338a_precheckTypeFn(jule::Ptr<_249c192c7_Sema> _self_, jule::Ptr<_249bcbe38_Fn>& _240439_f) {
	if (_240439_f.get()._field_CppLinked) {
		return;;
	};
	if ((_240439_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_240439_f.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_249bcc312_FnIns> _241521_ins = _2490a1dbe_instanceForce(_240439_f);;
		_240439_f.get()._field_Instances = jule::alloc_for_append(_240439_f.get()._field_Instances,1);_240439_f.get()._field_Instances.__push(_241521_ins);;
		_249c2605e_reloadFnInsTypes(_self_, _241521_ins);
		_241521_ins.get()._field_reloaded=true;
		if (_249cc74d9_hasDirective(_240439_f.get()._field_Directives,jule::Str("test", 4))) {
			_249c33115_checkTestFn(_self_.ptr(), _241521_ins);
		};
	};
}



inline void _249c33566_precheckFnTypes(jule::Ptr<_249c192c7_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_24ed3a239:;
		if (it != expr.end()) {
			jule::Ptr<_249bd48d0_Trait> _242821_decl = *it;
			{
				{
					auto &expr = _242821_decl.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_24ed3b504:;
					if (it != expr.end()) {
						jule::Ptr<_249bcbe38_Fn> _242925_m = *it;
						{
							_249c3338a_precheckTypeFn(_self_, _242925_m);
						}
						_iter_next_24ed3b504:;
						++it;
						goto _iter_begin_24ed3b504;
					}
					_iter_end_24ed3b504:;
				};
			}
			_iter_next_24ed3a239:;
			++it;
			goto _iter_begin_24ed3a239;
		}
		_iter_end_24ed3a239:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_24ed3b229:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> _243321_decl = *it;
			{
				_249c3338a_precheckTypeFn(_self_, _243321_decl);
			}
			_iter_next_24ed3b229:;
			++it;
			goto _iter_begin_24ed3b229;
		}
		_iter_end_24ed3b229:;
	};
}



inline void _249c33742_checkFnTypes(jule::Ptr<_249c192c7_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_24ed3cb21:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> _244021_decl = *it;
			{
				_249c32d90_checkTypeFn(_self_, _244021_decl);
			}
			_iter_next_24ed3cb21:;
			++it;
			goto _iter_begin_24ed3cb21;
		}
		_iter_end_24ed3cb21:;
	};
}



inline void _249c3391d_checkPackageTypes(jule::Ptr<_249c192c7_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_24ed3d35d:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _244821_f = *it;
			{
				_249c1bac1_setCurrentFile(_self_.ptr(), _244821_f);
				_249c2ec6b_checkGlobalTypes(_self_);
				_249c33566_precheckFnTypes(_self_);
				_249c31ed2_precheckStructTypes(_self_);
			}
			_iter_next_24ed3d35d:;
			++it;
			goto _iter_begin_24ed3d35d;
		}
		_iter_end_24ed3d35d:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_24ed403b5:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _245921_f = *it;
			{
				_249c1bac1_setCurrentFile(_self_.ptr(), _245921_f);
				_249c33742_checkFnTypes(_self_);
				_249c317c8_checkStructTypes(_self_);
			}
			_iter_next_24ed403b5:;
			++it;
			goto _iter_begin_24ed403b5;
		}
		_iter_end_24ed403b5:;
	};
}



inline void _249c33ae9_setFileSemaFields(jule::Ptr<_249c192c7_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_24ed41790:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> _246721_f = *it;
			{
				_246721_f.get()._field_sema=_self_;
			}
			_iter_next_24ed41790:;
			++it;
			goto _iter_begin_24ed41790;
		}
		_iter_end_24ed41790:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_24ed41bbe:;
		if (it != expr.end()) {
			jule::Ptr<_249036b01_Struct> _247021_st = *it;
			{
				_247021_st.get()._field_sema=_self_;
			}
			_iter_next_24ed41bbe:;
			++it;
			goto _iter_begin_24ed41bbe;
		}
		_iter_end_24ed41bbe:;
	};
}



inline void _249c33cc5_setSemaFields(jule::Ptr<_249c192c7_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_24ed4273b:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _247621_file = *it;
			{
				_249c1bac1_setCurrentFile(_self_.ptr(), _247621_file);
				_249c33ae9_setFileSemaFields(_self_);
			}
			_iter_next_24ed4273b:;
			++it;
			goto _iter_begin_24ed4273b;
		}
		_iter_end_24ed4273b:;
	};
}



inline void _249c3404a_check(jule::Ptr<_249c192c7_Sema> _self_, jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>& _248230_files) {
	_self_.get()._field_files=_248230_files;
	_249c205ec_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_249c33cc5_setSemaFields(_self_);
	_249c20b80_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_249c209a4_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_249c2e199_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_249c3391d_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _249c192c7_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _249c34402_missingRetChecker static__249c347ba_new(void) {
	return _249c34402_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU), };
}



inline jule::Bool _249c34a95_checkConditional(_249c34402_missingRetChecker* _self_, jule::Ptr<_249be3191_Conditional> _252535_c) {
	{
		auto &expr = _252535_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_24ed47961:;
		if (it != expr.end()) {
			jule::Ptr<_249be2a31_If> _252621_elif = *it;
			{
				if ((_252621_elif == nullptr)) {
					return false;
				};
				if ((!(_249c354be_checkScope(&(*_self_), _252621_elif.get()._field_Scope)))) {
					return false;
				};
			}
			_iter_next_24ed47961:;
			++it;
			goto _iter_begin_24ed47961;
		}
		_iter_end_24ed47961:;
	};
	return ((_252535_c.get()._field_Default != nullptr) && _249c354be_checkScope(&(*_self_), _252535_c.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _249c34da3_checkMatch(_249c34402_missingRetChecker* _self_, jule::Ptr<_249be6381_Match> _253729_m) {
	{
		auto &expr = _253729_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_24ed49765:;
		if (it != expr.end()) {
			jule::Ptr<_249be6dcb_Case> _253821_c = *it;
			{
				if ((_253821_c == nullptr)) {
					return false;
				};
				jule::I64 _254217_n = (*_self_)._field_breaked.len();;
				jule::Bool _254317_ok = _249c354be_checkScope(&(*_self_), _253821_c.get()._field_Scope);;
				{
					
					if ((_254217_n != (*_self_)._field_breaked.len())) {
						_case_begin_24ed4b646:;
						{
							return false;
						}
					}
					else if ((!(_254317_ok))) {
						_case_begin_24ed4b6bd:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_24ed4b745;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_24ed4b745:;
						{
							(*_self_)._field_falled=false;
							if ((_253821_c.get()._field_Next == nullptr)) {
								return false;
							};
							goto _iter_next_24ed49765;
						}
					}
					_match_end_24ed4b1c3:;
				};
			}
			_iter_next_24ed49765:;
			++it;
			goto _iter_begin_24ed49765;
		}
		_iter_end_24ed49765:;
	};
	return ((_253729_m.get()._field_Default != nullptr) && _249c354be_checkScope(&(*_self_), _253729_m.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _249c351b1_checkInfIter(_249c34402_missingRetChecker* _self_, jule::Ptr<_249be347c_InfIter> _256331_it) {
	jule::I64 _256413_n = (*_self_)._field_breaked.len();;
	if (_249c354be_checkScope(&(*_self_), _256331_it.get()._field_Scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_256413_n);
		return true;
	};
	if ((_256413_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _257017_itaddr = static_cast<jule::Uintptr>(_256331_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_256413_n);
			auto it = expr.begin();
			_iter_begin_24ed50aac:;
			if (it != expr.end()) {
				jule::Uintptr _257120_addr = *it;
				{
					if ((_257017_itaddr == _257120_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_256413_n);
						return false;
					};
				}
				_iter_next_24ed50aac:;
				++it;
				goto _iter_begin_24ed50aac;
			}
			_iter_end_24ed50aac:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_256413_n);
	};
	return true;
}



inline jule::Bool _249c354be_checkScope(_249c34402_missingRetChecker* _self_, jule::Ptr<_249be2635_Scope> _258229_s) {
	if ((_258229_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _258229_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_24ed52350:;
		if (it != expr.end()) {
			jule::Any _258621_st = *it;
			{
				{
					auto &_match_expr{ _258621_st };
					
					if (_match_expr.type_is<jule::Ptr<_249be7481_FallSt>>()) {
						_case_begin_24ed531db:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_249be4a88_BreakSt>>()) {
						_case_begin_24ed53274:;
						{
							jule::Uintptr _259221_addr = _258621_st.operator jule::Ptr<_249be4a88_BreakSt>().get()._field_It;;
							if ((_259221_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_259221_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_249be46d1_ContSt>>()) {
						_case_begin_24ed532da:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_249be347c_InfIter>>()) {
						_case_begin_24ed53351:;
						{
							if (_249c351b1_checkInfIter(&(*_self_), _258621_st.operator jule::Ptr<_249be347c_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_249be7904_RetSt>>()) {
						_case_begin_24ed533c8:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_249be2635_Scope>>()) {
						_case_begin_24ed53450:;
						{
							if (_249c354be_checkScope(&(*_self_), _258621_st.operator jule::Ptr<_249be2635_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_249c80052_Data>>()) {
						_case_begin_24ed534c7:;
						{
							{
								auto &_match_expr{ _258621_st.operator jule::Ptr<_249c80052_Data>().get()._field_Model };
								
								if (_match_expr.type_is<jule::Ptr<_249bc972c_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel>>()) {
									_case_begin_24ed574cb:;
									{
										return true;
									}
								}
								_match_end_24ed57212:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_249be3191_Conditional>>()) {
						_case_begin_24ed5354e:;
						{
							if (_249c34a95_checkConditional(&(*_self_), _258621_st.operator jule::Ptr<_249be3191_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_249be6381_Match>>()) {
						_case_begin_24ed535c6:;
						{
							if (_249c34da3_checkMatch(&(*_self_), _258621_st.operator jule::Ptr<_249be6381_Match>())) {
								return true;
							};
						}
					}
					_match_end_24ed53032:;
				};
			}
			_iter_next_24ed52350:;
			++it;
			goto _iter_begin_24ed52350;
		}
		_iter_end_24ed52350:;
	};
	return false;
}



inline jule::Bool _249c357cc_check(_249c34402_missingRetChecker* _self_, jule::Ptr<_249be2635_Scope> _262824_s) {
	return _249c354be_checkScope(&(*_self_), _262824_s);
}







std::ostream &operator<<(std::ostream &_Stream, _249c34402_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249c360b3_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _249c373e4_IsInitialized(_249c3702b_Var* _self_) {
	return ((*_self_)._field_Value != nullptr);
}



inline jule::Bool _249c37658_IsTypeInferred(_249c3702b_Var* _self_) {
	return (((*_self_)._field_Kind == nullptr) || ((*_self_)._field_Kind.get()._field_Decl == nullptr));
}



inline jule::Bool _249c378bc_untypedConstant(_249c3702b_Var* _self_) {
	return (_249c37658_IsTypeInferred(&(*_self_)) && (*_self_)._field_Value.get()._field_Data.get()._field_untyped);
}







std::ostream &operator<<(std::ostream &_Stream, _249c3702b_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__249c3844a_Dispose(jule::Ptr<_249bcbe38_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && (_1023_f.get()._field_Ident == jule::Str("Dispose", 7))) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _2490aaa43_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_24909be1e_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));
}



inline jule::Bool static__249c386e2_Str(jule::Ptr<_249bcbe38_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (_2419_f.get()._field_Ident != jule::Str("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _2490aaa43_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _24909be1e_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_249bcc312_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_249cb5263_Prim> _3913_prim = _249cb289d_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;
	};
	return _249cb8497_IsStr(_3913_prim.ptr());
}



inline jule::Bool static__249c38a33_logical(jule::Ptr<_249bcbe38_Fn>& _4624_f, jule::Str _4632_ident) {
	if ((((((((((((((_4624_f == nullptr) || (_4624_f.get()._field_Ident != _4632_ident)) || (_4624_f.get()._field_Owner == nullptr)) || (_4624_f.get()._field_Instances.len() == 0LL)) || _4624_f.get()._field_Statically) || _4624_f.get()._field_Unsafety) || _2490aaa43_IsVoid(_4624_f.ptr())) || (_4624_f.get()._field_Generics.len() != 0LL)) || (_4624_f.get()._field_Params.len() != 2LL)) || _4624_f.get()._field_Params[0LL].get()._field_Mutable) || _24909be1e_IsRef(_4624_f.get()._field_Params[0LL].ptr())) || _4624_f.get()._field_Params[1LL].get()._field_Mutable) || _4624_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_249bcc312_FnIns> _6317_ins = _4624_f.get()._field_Instances[0LL];;
	jule::Ptr<_249cb5263_Prim> _6413_prim = _249cb289d_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_249cb8233_IsBool(_6413_prim.ptr()))))) {
		return false;
	};
	return (_6317_ins.get()._field_Owner == _249cb3d00_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));
}



inline jule::Bool static__249c38cca_Eq(jule::Ptr<_249bcbe38_Fn> _7218_f) {
	return static__249c38a33_logical(_7218_f,jule::Str("Eq", 2));
}



inline jule::Bool static__249c39072_Gt(jule::Ptr<_249bcbe38_Fn> _7718_f) {
	return static__249c38a33_logical(_7718_f,jule::Str("Gt", 2));
}



inline jule::Bool static__249c39319_GtEq(jule::Ptr<_249bcbe38_Fn> _8220_f) {
	return static__249c38a33_logical(_8220_f,jule::Str("GtEq", 4));
}



inline jule::Bool static__249c395b1_Lt(jule::Ptr<_249bcbe38_Fn> _8718_f) {
	return static__249c38a33_logical(_8718_f,jule::Str("Lt", 2));
}



inline jule::Bool static__249c39858_LtEq(jule::Ptr<_249bcbe38_Fn> _9220_f) {
	return static__249c38a33_logical(_9220_f,jule::Str("LtEq", 4));
}



inline jule::Bool static__249c39b99_result(jule::Ptr<_249bcbe38_Fn>& _9623_f, jule::Str _9631_ident) {
	if ((((((((((((((_9623_f == nullptr) || (_9623_f.get()._field_Ident != _9631_ident)) || (_9623_f.get()._field_Owner == nullptr)) || (_9623_f.get()._field_Instances.len() == 0LL)) || _9623_f.get()._field_Statically) || _9623_f.get()._field_Unsafety) || _2490aaa43_IsVoid(_9623_f.ptr())) || (_9623_f.get()._field_Generics.len() != 0LL)) || (_9623_f.get()._field_Params.len() != 2LL)) || _9623_f.get()._field_Params[0LL].get()._field_Mutable) || _24909be1e_IsRef(_9623_f.get()._field_Params[0LL].ptr())) || _9623_f.get()._field_Params[1LL].get()._field_Mutable) || _9623_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_249bcc312_FnIns> _11317_ins = _9623_f.get()._field_Instances[0LL];;
	return (_249cb3d00_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);
}



inline jule::Bool static__249c39e41_Shl(jule::Ptr<_249bcbe38_Fn> _11819_f) {
	return static__249c39b99_result(_11819_f,jule::Str("Shl", 3));
}



inline jule::Bool static__249c3a1d8_Shr(jule::Ptr<_249bcbe38_Fn> _12319_f) {
	return static__249c39b99_result(_12319_f,jule::Str("Shr", 3));
}



inline jule::Bool static__249c3a480_Add(jule::Ptr<_249bcbe38_Fn> _12819_f) {
	return static__249c39b99_result(_12819_f,jule::Str("Add", 3));
}



inline jule::Bool static__249c3a727_Sub(jule::Ptr<_249bcbe38_Fn> _13319_f) {
	return static__249c39b99_result(_13319_f,jule::Str("Sub", 3));
}



inline jule::Bool static__249c3a9be_Div(jule::Ptr<_249bcbe38_Fn> _13819_f) {
	return static__249c39b99_result(_13819_f,jule::Str("Div", 3));
}



inline jule::Bool static__249c3ac66_Mul(jule::Ptr<_249bcbe38_Fn> _14319_f) {
	return static__249c39b99_result(_14319_f,jule::Str("Mul", 3));
}



inline jule::Bool static__249c3b00d_Mod(jule::Ptr<_249bcbe38_Fn> _14819_f) {
	return static__249c39b99_result(_14819_f,jule::Str("Mod", 3));
}



inline jule::Bool static__249c3b2a5_BitAnd(jule::Ptr<_249bcbe38_Fn> _15322_f) {
	return static__249c39b99_result(_15322_f,jule::Str("BitAnd", 6));
}



inline jule::Bool static__249c3b54c_BitOr(jule::Ptr<_249bcbe38_Fn> _15821_f) {
	return static__249c39b99_result(_15821_f,jule::Str("BitOr", 5));
}



inline jule::Bool static__249c3b7e4_BitXor(jule::Ptr<_249bcbe38_Fn> _16322_f) {
	return static__249c39b99_result(_16322_f,jule::Str("BitXor", 6));
}



inline jule::Bool static__249c3bb35_unary(jule::Ptr<_249bcbe38_Fn>& _16722_f, jule::Str _16730_ident) {
	if ((((((((((((_16722_f == nullptr) || (_16722_f.get()._field_Ident != _16730_ident)) || (_16722_f.get()._field_Owner == nullptr)) || (_16722_f.get()._field_Instances.len() == 0LL)) || _16722_f.get()._field_Statically) || _16722_f.get()._field_Unsafety) || _2490aaa43_IsVoid(_16722_f.ptr())) || (_16722_f.get()._field_Generics.len() != 0LL)) || (_16722_f.get()._field_Params.len() != 1LL)) || _16722_f.get()._field_Params[0LL].get()._field_Mutable) || _24909be1e_IsRef(_16722_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_249bcc312_FnIns> _18217_ins = _16722_f.get()._field_Instances[0LL];;
	return (_249cb3d00_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);
}



inline jule::Bool static__249c3bdcc_Neg(jule::Ptr<_249bcbe38_Fn> _18719_f) {
	return static__249c3bb35_unary(_18719_f,jule::Str("Neg", 3));
}



inline jule::Bool static__249c3c174_Pos(jule::Ptr<_249bcbe38_Fn> _19219_f) {
	return static__249c3bb35_unary(_19219_f,jule::Str("Pos", 3));
}



inline jule::Bool static__249c3c41b_BitNot(jule::Ptr<_249bcbe38_Fn> _19722_f) {
	return static__249c3bb35_unary(_19722_f,jule::Str("BitNot", 6));
}



inline jule::Bool static__249c3c75c_assign(jule::Ptr<_249bcbe38_Fn>& _20123_f, jule::Str _20131_ident) {
	if ((((((((((((((_20123_f == nullptr) || (_20123_f.get()._field_Ident != _20131_ident)) || (_20123_f.get()._field_Owner == nullptr)) || (_20123_f.get()._field_Instances.len() == 0LL)) || _20123_f.get()._field_Statically) || _20123_f.get()._field_Unsafety) || (!(_2490aaa43_IsVoid(_20123_f.ptr())))) || (_20123_f.get()._field_Generics.len() != 0LL)) || (_20123_f.get()._field_Params.len() != 2LL)) || (!(_20123_f.get()._field_Params[0LL].get()._field_Mutable))) || _24909be1e_IsRef(_20123_f.get()._field_Params[0LL].ptr())) || _20123_f.get()._field_Params[1LL].get()._field_Mutable) || _20123_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__249c3ca04_AddAssign(jule::Ptr<_249bcbe38_Fn> _22125_f) {
	return static__249c3c75c_assign(_22125_f,jule::Str("AddAssign", 9));
}



inline jule::Bool static__249c3cc9b_SubAssign(jule::Ptr<_249bcbe38_Fn> _22625_f) {
	return static__249c3c75c_assign(_22625_f,jule::Str("SubAssign", 9));
}



inline jule::Bool static__249c3d043_DivAssign(jule::Ptr<_249bcbe38_Fn> _23125_f) {
	return static__249c3c75c_assign(_23125_f,jule::Str("DivAssign", 9));
}



inline jule::Bool static__249c3d2da_MulAssign(jule::Ptr<_249bcbe38_Fn> _23625_f) {
	return static__249c3c75c_assign(_23625_f,jule::Str("MulAssign", 9));
}



inline jule::Bool static__249c3d582_ModAssign(jule::Ptr<_249bcbe38_Fn> _24125_f) {
	return static__249c3c75c_assign(_24125_f,jule::Str("ModAssign", 9));
}



inline jule::Bool static__249c3d829_ShlAssign(jule::Ptr<_249bcbe38_Fn> _24625_f) {
	return static__249c3c75c_assign(_24625_f,jule::Str("ShlAssign", 9));
}



inline jule::Bool static__249c3dac1_ShrAssign(jule::Ptr<_249bcbe38_Fn> _25125_f) {
	return static__249c3c75c_assign(_25125_f,jule::Str("ShrAssign", 9));
}



inline jule::Bool static__249c3dd68_BitOrAssign(jule::Ptr<_249bcbe38_Fn> _25627_f) {
	return static__249c3c75c_assign(_25627_f,jule::Str("BitOrAssign", 11));
}



inline jule::Bool static__249c3e110_BitAndAssign(jule::Ptr<_249bcbe38_Fn> _26128_f) {
	return static__249c3c75c_assign(_26128_f,jule::Str("BitAndAssign", 12));
}



inline jule::Bool static__249c3e3a7_BitXorAssign(jule::Ptr<_249bcbe38_Fn> _26628_f) {
	return static__249c3c75c_assign(_26628_f,jule::Str("BitXorAssign", 12));
}







std::ostream &operator<<(std::ostream &_Stream, _249c37cc9_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _249c69217_pushErr(_249c68bea_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_249c1be89_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_11726_fmt,jule::Any(_11739_args));
}



inline jule::Bool _249c6947b_checkTrait(_249c68bea_typeCompatibilityChecker* _self_) {
	jule::Bool _12131_ok = jule::Bool();
	if (_249cb16b0_IsNil((*_self_)._field_src.ptr())) {
		_12131_ok = true;
		return _12131_ok;
	};
	jule::Ptr<_249bd48d0_Trait> _12513_trt = _249cb4064_Trait((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_249cb2b12_Sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_24ed9a83d:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_249cb2b12_Sptr((*_self_)._field_src.ptr()).get()._field_Elem;
				if ((_249cb3d00_Struct((*_self_)._field_src.ptr()) == nullptr)) {
					_12131_ok = false;
					return _12131_ok;
				};
				goto _case_begin_24ed9a93c;
			}
		}
		else if ((_249cb3d00_Struct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_24ed9a93c:;
			{
				jule::Ptr<_249062e4b_StructIns> _13617_s = _249cb3d00_Struct((*_self_)._field_src.ptr());;
				if ((!(_2490213c1_IsImplements(_13617_s.get()._field_Decl.ptr(), _12513_trt)))) {
					_12131_ok = false;
					return _12131_ok;
				};
				if (((!(_12617_ref)) && _249c5901a_traitHasReferenceReceiver(_12513_trt))) {
					_249c69217_pushErr(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12131_ok = false;
					return _12131_ok;
				};
				_12131_ok = true;
				return _12131_ok;
			}
		}
		else if ((_249cb4064_Trait((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_24ed9a9b4:;
			{
				_12131_ok = (_12513_trt == _249cb4064_Trait((*_self_)._field_src.ptr()));
				return _12131_ok;
			}
		}
		else {
			_case_begin_24ed9a189:;
			{
				_12131_ok = false;
				return _12131_ok;
			}
		}
		_match_end_24ed9a134:;
	};
}



inline jule::Bool _249c696e0_checkPtr(_249c68bea_typeCompatibilityChecker* _self_) {
	jule::Bool _15229_ok = jule::Bool();
	if (_249cb16b0_IsNil((*_self_)._field_src.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	jule::Ptr<_249cbc05b_Ptr> _15617_dest = _249cb2d76_Ptr((*_self_)._field_dest.ptr());;
	if (_249cbca2e_IsUnsafe(_15617_dest.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	_15229_ok = _249cb0e95_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15229_ok;
}



inline jule::Bool _249c69954_checkPrim(_249c68bea_typeCompatibilityChecker* _self_) {
	jule::Bool _16330_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_Variadic))) {
		jule::Ptr<_249cb5263_Prim> _16517_prim = _249cb289d_Prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _249cb870b_IsAny(_16517_prim.ptr()))) {
			_16330_ok = true;
			return _16330_ok;
		};
	};
	_16330_ok = _249cb0e95_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16330_ok;
}



inline jule::Bool _249c69d0b_typeEnum(_249c68bea_typeCompatibilityChecker* _self_, jule::Ptr<_249bd8120_TypeEnum>& _17328_e, jule::Ptr<_249cb078b_TypeKind>& _17347_t2) {
	jule::Bool _17364_ok = jule::Bool();
	{
		auto &expr = _17328_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_24eda3ed9:;
		if (it != expr.end()) {
			jule::Ptr<_249bd7a59_TypeEnumItem> _17421_item = *it;
			{
				if (_249cb0e95_Equals(_17421_item.get()._field_Kind.get()._field_Kind, _17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
				jule::Ptr<_249bd8120_TypeEnum> _17821_ke = _249cb334e_TypeEnum(_17421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_24eda3ed9;
				};
				if (_249c69d0b_typeEnum(&(*_self_), _17821_ke,_17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
			}
			_iter_next_24eda3ed9:;
			++it;
			goto _iter_begin_24eda3ed9;
		}
		_iter_end_24eda3ed9:;
	};
	_17364_ok = false;
	return _17364_ok;
}



inline jule::Bool _249c6a070_checkTypeEnum(_249c68bea_typeCompatibilityChecker* _self_) {
	jule::Bool _18934_ok = jule::Bool();
	if (_249cb0e95_Equals((*_self_)._field_dest, (*_self_)._field_src)) {
		_18934_ok = true;
		return _18934_ok;
	};
	jule::Ptr<_249bd8120_TypeEnum> _19317_e = _249cb334e_TypeEnum((*_self_)._field_dest.ptr());;
	_18934_ok = _249c69d0b_typeEnum(&(*_self_), _19317_e,(*_self_)._field_src);
	return _18934_ok;
}



inline jule::Bool _249c6a2d4_check(_249c68bea_typeCompatibilityChecker* _self_) {
	jule::Bool _19726_ok = jule::Bool();
	if ((_249cb2d76_Ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_19726_ok = _249c696e0_checkPtr(&(*_self_));
		return _19726_ok;
	};
	if (_249cb1dec_NilCompatible((*_self_)._field_dest.ptr())) {
		if (_249cb16b0_IsNil((*_self_)._field_src.ptr())) {
			_19726_ok = true;
			return _19726_ok;
		};
	};
	{
		
		if ((_249cb289d_Prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_24eda971a:;
			{
				_19726_ok = _249c69954_checkPrim(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_249cb334e_TypeEnum((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_24eda9781:;
			{
				_19726_ok = _249c6a070_checkTypeEnum(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_249cb4064_Trait((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_24eda9ab1:;
			{
				_19726_ok = _249c6947b_checkTrait(&(*_self_));
				return _19726_ok;
			}
		}
		else {
			_case_begin_24eda9154:;
			{
				_19726_ok = _249cb0e95_Equals((*_self_)._field_dest, (*_self_)._field_src);
				return _19726_ok;
			}
		}
		_match_end_24eda872a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _249c68bea_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _249c6ac85_pushErr(_249c6a823_assignTypeChecker* _self_, jule::Str _22926_fmt, jule::Slice<jule::Any> _22939_args) {
	_249c1be89_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_22926_fmt,jule::Any(_22939_args));
}



inline jule::Bool _249c6aee9_checkValidity(_249c6a823_assignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_249cb3a8b_Fn((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_24edad39a:;
			{
				jule::Ptr<_249bcc312_FnIns> _23717_f = _249cb3a8b_Fn((*_self_)._field_d.get()._field_Kind.ptr());;
				{
					
					if (_249bcc4ee_IsBuiltin(_23717_f.ptr())) {
						_case_begin_24edaeac7:;
						{
							_249c6ac85_pushErr(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_24edaeb4e:;
						{
							_249c6ac85_pushErr(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_Decl.get()._field_Statically)) && _2490ab25d_IsMethod(_23717_f.get()._field_Decl.ptr()))) {
						_case_begin_24edaebc6:;
						{
							_249c6ac85_pushErr(&(*_self_), jule::Str("non-static methods cannot use as anonymous function", 51),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_23717_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_24edaec4d:;
						{
							_249c6ac85_pushErr(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_249c1c2a8_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_24edae9ea:;
				};
			}
		}
		else if ((_249cb453c_Tup((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_24edad422:;
			{
				_249c6ac85_pushErr(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_24edad2e0:;
	};
	return _23417_valid;
}



inline jule::Bool _249c6b25d_checkConst(_249c6a823_assignTypeChecker* _self_) {
	if (((((!(_249c80915_IsConst((*_self_)._field_d.ptr()))) || (_249cb289d_Prim((*_self_)._field_dest.ptr()) == nullptr)) || (_249cb289d_Prim((*_self_)._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_249bc455c_IsNum(_249cb289d_Prim((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_Model != (*_self_)._field_d.get()._field_Constant)) {
		return false;
	};
	jule::Str _27413_kind = _249cb289d_Prim((*_self_)._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_249bc442a_IsFloat(_27413_kind)) {
			_case_begin_24edb7dbb:;
			{
				if ((!(_249c50990_floatAssignable(_27413_kind,(*_self_)._field_d)))) {
					_249c6ac85_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
				(*_self_)._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else if (_249bc42e8_IsInt(_27413_kind)) {
			_case_begin_24edb766d:;
			{
				if ((!(_249c679b8_intAssignable(_27413_kind,(*_self_)._field_d)))) {
					_249c6ac85_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
				(*_self_)._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else {
			_case_begin_24edb7607:;
			{
				return false;
			}
		}
		_match_end_24edb7591:;
	};
	return true;
}



inline jule::Bool _249c6b4c2_isPrim(_249c6a823_assignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_Variadic || (*_self_)._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;
	};
	if ((_249cb144b_CppLinked((*_self_)._field_dest.ptr()) || _249cb144b_CppLinked((*_self_)._field_d.get()._field_Kind.ptr()))) {
		return false;
	};
	return ((_249cb289d_Prim((*_self_)._field_dest.ptr()) != nullptr) && (_249cb289d_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr));
}



inline jule::Bool _249c6b736_checkCompatibility(_249c6a823_assignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_24edbc6b7:;
			{
				return false;
			}
		}
		else if ((!(_249c6aee9_checkValidity(&(*_self_))))) {
			_case_begin_24edbc73e:;
			{
				return false;
			}
		}
		else if (_249c6b25d_checkConst(&(*_self_))) {
			_case_begin_24edbc7b6:;
			{
				return true;
			}
		}
		else if ((_249cb30da_Enum((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_24edbc83d:;
			{
				jule::Ptr<_249cb078b_TypeKind> _31821_dkind = (*_self_)._field_dest;;
				if ((_249cb30da_Enum((*_self_)._field_dest.ptr()) != nullptr)) {
					_31821_dkind=_249cb30da_Enum((*_self_)._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_249cb289d_Prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_24edbc585;
				};
				if (_249453902_TypesAreCompatible(_249cb289d_Prim(_249cb30da_Enum((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind,_249cb289d_Prim(_31821_dkind.ptr()).get()._field_Kind)) {
					return true;
				};
			}
		}
		else if (_249c6b4c2_isPrim(&(*_self_))) {
			_case_begin_24edbc8b5:;
			{
				jule::Ptr<_249cb5263_Prim> _32817_dest = _249cb289d_Prim((*_self_)._field_dest.ptr());;
				if (_249cb870b_IsAny(_32817_dest.ptr())) {
					return true;
				};
				jule::Ptr<_249cb5263_Prim> _33221_src = _249cb289d_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_249453902_TypesAreCompatible(_32817_dest.get()._field_Kind,_33221_src.get()._field_Kind)) {
					return true;
				};
			}
		}
		_match_end_24edbc585:;
	};
	return _249c242c1_checkTypeCompatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_Kind,(*_self_)._field_errorToken);
}



inline jule::Bool _249c6b99a_check(_249c6a823_assignTypeChecker* _self_) {
	jule::Bool _34113_ok = _249c6b736_checkCompatibility(&(*_self_));;
	if (_34113_ok) {
		_249cc9035_applyImplicitCast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _34113_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _249c6a823_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _24edd7ca9_annotateConstraintElem(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _36049_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_2490488d2_ArrTypeDecl>>()) {
			_case_begin_24edd941a:;
			{
				jule::Ptr<_249cb078b_TypeKind> _36321_elem = nullptr;;
				{
					
{
						_case_begin_24edda350:;
						{
							_36321_elem=_249cb35b3_Arr(_36049_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_24edda295:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_2490488d2_ArrTypeDecl>().get()._field_Elem;
				return _249c6d88c_annotateConstraint(&(*_self_), _36321_elem);
			}
		}
		_match_end_24edd93b5:;
	};
	return false;
}

inline jule::Bool _24edd744b_annotateConstraintElem(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _36049_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_249047b78_SlcTypeDecl>>()) {
			_case_begin_24eddcdad:;
			{
				jule::Ptr<_249cb078b_TypeKind> _36321_elem = nullptr;;
				{
					
{
						_case_begin_24edddd7b:;
						{
							_36321_elem=_249cb3827_Slc(_36049_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_24edddc38:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_249047b78_SlcTypeDecl>().get()._field_Elem;
				return _249c6d88c_annotateConstraint(&(*_self_), _36321_elem);
			}
		}
		_match_end_24eddcd58:;
	};
	return false;
}

inline jule::Bool _24edd7737_annotateConstraintElem(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _36049_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_249048250_PtrTypeDecl>>()) {
			_case_begin_24ede19c7:;
			{
				jule::Ptr<_249cb078b_TypeKind> _36321_elem = nullptr;;
				{
					
{
						_case_begin_24ede2a0b:;
						{
							_36321_elem=_249cb2d76_Ptr(_36049_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_24ede2852:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_249048250_PtrTypeDecl>().get()._field_Elem;
				return _249c6d88c_annotateConstraint(&(*_self_), _36321_elem);
			}
		}
		_match_end_24ede1972:;
	};
	return false;
}

inline jule::Bool _24ede1037_annotateConstraintElem(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _36049_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_24904777c_SptrTypeDecl>>()) {
			_case_begin_24ede50b3:;
			{
				jule::Ptr<_249cb078b_TypeKind> _36321_elem = nullptr;;
				{
					
{
						_case_begin_24ede615d:;
						{
							_36321_elem=_249cb2b12_Sptr(_36049_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_24ede5e3d:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_24904777c_SptrTypeDecl>().get()._field_Elem;
				return _249c6d88c_annotateConstraint(&(*_self_), _36321_elem);
			}
		}
		_match_end_24ede505d:;
	};
	return false;
}



inline jule::Bool _249c6cb22_annotateConstraintMap(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _38045_k) {
	jule::Bool _38061_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_249049130_MapTypeDecl>>()) {
			_case_begin_24edc5a88:;
			{
				jule::Ptr<_249cbaa0a_Map> _38321_m = _249cb42c8_Map(_38045_k.ptr());;
				jule::Ptr<_249049130_MapTypeDecl> _38421_m2 = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_249049130_MapTypeDecl>();;
				(*_self_)._field_c=_38421_m2.get()._field_Key;
				if (_249c6d88c_annotateConstraint(&(*_self_), _38321_m.get()._field_Key)) {
					_38061_ok = true;
					return _38061_ok;
				};
				(*_self_)._field_c=_38421_m2.get()._field_Val;
				_38061_ok = _249c6d88c_annotateConstraint(&(*_self_), _38321_m.get()._field_Val);
				return _38061_ok;
			}
		}
		_match_end_24edc5a33:;
	};
	_38061_ok = false;
	return _38061_ok;
}



inline jule::Bool _249c6ce30_annotateConstraintTup(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _39545_k) {
	jule::Bool _39561_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_249047e64_TupleTypeDecl>>()) {
			_case_begin_24edc885a:;
			{
				jule::Ptr<_249047e64_TupleTypeDecl> _39821_tup = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_249047e64_TupleTypeDecl>();;
				jule::Ptr<_249cb9ed2_Tuple> _39921_tup2 = _249cb453c_Tup(_39545_k.ptr());;
				{
					auto &expr = _39921_tup2.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_24edc9c13:;
					if (it != expr.end()) {
						jule::Ptr<_249cb078b_TypeKind> _40025_t2 = *it;
						{
							{
								auto &expr = _39821_tup.get()._field_Types;
								auto it = expr.begin();
								_iter_begin_24edc96c4:;
								if (it != expr.end()) {
									jule::Ptr<_2490463c4_TypeDecl> _40129_t = *it;
									{
										(*_self_)._field_c=_40129_t;
										if (_249c6d88c_annotateConstraint(&(*_self_), _40025_t2)) {
											_39561_ok = true;
											return _39561_ok;
										};
									}
									_iter_next_24edc96c4:;
									++it;
									goto _iter_begin_24edc96c4;
								}
								_iter_end_24edc96c4:;
							};
						}
						_iter_next_24edc9c13:;
						++it;
						goto _iter_begin_24edc9c13;
					}
					_iter_end_24edc9c13:;
				};
			}
		}
		_match_end_24edc8805:;
	};
	_39561_ok = false;
	return _39561_ok;
}



inline jule::Bool _249c6d23d_annotateConstraintFn(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _41244_k) {
	jule::Bool _41260_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_2490581d8_FnDecl>>()) {
			_case_begin_24edcac9c:;
			{
				jule::Ptr<_2490581d8_FnDecl> _41521_pf = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_2490581d8_FnDecl>();;
				jule::Ptr<_249bcc312_FnIns> _41621_f = _249cb3a8b_Fn(_41244_k.ptr());;
				{
					auto &expr = _41621_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_24edccc8d:;
					if (it != expr.end()) {
						jule::I64 _41718_i = it - expr.begin();
						jule::Ptr<_249bcc125_ParamIns> _41725_fp = *it;
						{
							(*_self_)._field_c=_41521_pf.get()._field_Params[_41718_i].get()._field_Kind;
							if (_249c6d88c_annotateConstraint(&(*_self_), _41725_fp.get()._field_Kind)) {
								_41260_ok = true;
								return _41260_ok;
							};
						}
						_iter_next_24edccc8d:;
						++it;
						_41718_i++;
						goto _iter_begin_24edccc8d;
					}
					_iter_end_24edccc8d:;
				};
				if ((_41521_pf.get()._field_Result != nullptr)) {
					(*_self_)._field_c=_41521_pf.get()._field_Result.get()._field_Kind;
					if (_249c6d88c_annotateConstraint(&(*_self_), _41621_f.get()._field_Result)) {
						_41260_ok = true;
						return _41260_ok;
					};
				};
			}
		}
		_match_end_24edca450:;
	};
	_41260_ok = false;
	return _41260_ok;
}



inline jule::Bool _249c6d56d_annotateConstraintIdent(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _43347_k) {
	jule::Ptr<_24904698a_IdentTypeDecl> _43417_ident = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_24904698a_IdentTypeDecl>();;
	jule::Ptr<_249062e4b_StructIns> _43517_s = _249cb3d00_Struct(_43347_k.ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_24edd15cc:;
		if (it != expr.end()) {
			jule::I64 _43613_i = it - expr.begin();
			jule::Ptr<_2490539a8_GenericDecl> _43616_g = *it;
			{
				if ((_43616_g.get()._field_Ident == _43417_ident.get()._field_Ident)) {
					jule::Ptr<_249cae05e_InsGeneric> _43825_fg = (*_self_)._field_f.get()._field_Generics[_43613_i];;
					if ((_43825_fg != nullptr)) {
						return false;
					};
					_249c6dbab_pushGeneric(&(*_self_), _43347_k,_43613_i);
					return true;
				};
				if ((_43517_s == nullptr)) {
					goto _iter_next_24edd15cc;
				};
				jule::Ptr<_2490463c4_TypeDecl> _44821_c = (*_self_)._field_c;;
				{
					auto &expr = _43417_ident.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_24edd45ad:;
					if (it != expr.end()) {
						jule::Ptr<_2490463c4_TypeDecl> _44925_ig = *it;
						{
							(*_self_)._field_c=_44925_ig;
							{
								auto &expr = _43517_s.get()._field_Generics;
								auto it = expr.begin();
								_iter_begin_24edd4da5:;
								if (it != expr.end()) {
									jule::Ptr<_249cae05e_InsGeneric> _45129_sg = *it;
									{
										if (_249c6d88c_annotateConstraint(&(*_self_), _45129_sg.get()._field_Kind)) {
											return true;
										};
									}
									_iter_next_24edd4da5:;
									++it;
									goto _iter_begin_24edd4da5;
								}
								_iter_end_24edd4da5:;
							};
						}
						_iter_next_24edd45ad:;
						++it;
						goto _iter_begin_24edd45ad;
					}
					_iter_end_24edd45ad:;
				};
				(*_self_)._field_c=_44821_c;
			}
			_iter_next_24edd15cc:;
			++it;
			_43613_i++;
			goto _iter_begin_24edd15cc;
		}
		_iter_end_24edd15cc:;
	};
	return false;
}



inline jule::Bool _249c6d88c_annotateConstraint(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _46242_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_24904698a_IdentTypeDecl>>()) {
			_case_begin_24edd4a0e:;
			{
				return _249c6d56d_annotateConstraintIdent(&(*_self_), _46242_k);
			}
		}
		_match_end_24edd49a9:;
	};
	{
		
		if ((_249cb35b3_Arr(_46242_k.ptr()) != nullptr)) {
			_case_begin_24edd622a:;
			{
				return _24edd7ca9_annotateConstraintElem(&(*_self_), _46242_k);
			}
		}
		else if ((_249cb3827_Slc(_46242_k.ptr()) != nullptr)) {
			_case_begin_24edd6291:;
			{
				return _24edd744b_annotateConstraintElem(&(*_self_), _46242_k);
			}
		}
		else if ((_249cb2d76_Ptr(_46242_k.ptr()) != nullptr)) {
			_case_begin_24edd6307:;
			{
				return _24edd7737_annotateConstraintElem(&(*_self_), _46242_k);
			}
		}
		else if ((_249cb2b12_Sptr(_46242_k.ptr()) != nullptr)) {
			_case_begin_24edd636d:;
			{
				return _24ede1037_annotateConstraintElem(&(*_self_), _46242_k);
			}
		}
		else if ((_249cb42c8_Map(_46242_k.ptr()) != nullptr)) {
			_case_begin_24edd6bcb:;
			{
				return _249c6cb22_annotateConstraintMap(&(*_self_), _46242_k);
			}
		}
		else if ((_249cb3a8b_Fn(_46242_k.ptr()) != nullptr)) {
			_case_begin_24edd6c42:;
			{
				return _249c6d23d_annotateConstraintFn(&(*_self_), _46242_k);
			}
		}
		else if ((_249cb453c_Tup(_46242_k.ptr()) != nullptr)) {
			_case_begin_24edd6ca8:;
			{
				return _249c6ce30_annotateConstraintTup(&(*_self_), _46242_k);
			}
		}
		else {
			_case_begin_24edd65b0:;
			{
				return false;
			}
		}
		_match_end_24edd655a:;
	};
}



inline void _249c6dbab_pushGeneric(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _48735_k, jule::I64 _48749_i) {
	(*_self_)._field_f.get()._field_Generics[_48749_i]=jule::new_ptr<_249cae05e_InsGeneric>(_249cae05e_InsGeneric{._field_Kind=_48735_k, });
	jule::Ptr<_2490539a8_GenericDecl> _48917_gd = (*_self_)._field_f.get()._field_Decl.get()._field_Generics[_48749_i];;
	if (((_48917_gd.get()._field_Constraint == nullptr) || (_48917_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*_self_)._field_c=_48917_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_249c6d88c_annotateConstraint(&(*_self_), _48735_k);
}



inline jule::Bool _249c6deb9_annotatePrim(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _49743_k) {
	jule::Bool _49759_ok = jule::Bool();
	_49759_ok = _249c70ce0_annotateAny(&(*_self_), _49743_k);
	return _49759_ok;
}



inline jule::Bool _249c6e2c7_annotateArr(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _50142_k) {
	jule::Bool _50158_ok = jule::Bool();
	jule::Ptr<_249cbb5ee_Arr> _50217_parr = _249cb35b3_Arr((*((*_self_)._field_k)).ptr());;
	if ((_50217_parr == nullptr)) {
		_50158_ok = false;
		return _50158_ok;
	};
	jule::Ptr<_249cbb5ee_Arr> _50617_arr = _249cb35b3_Arr(_50142_k.ptr());;
	(*_self_)._field_k=(&(_50217_parr.get()._field_Elem));
	_50158_ok = _249c710ed_annotateKind(&(*_self_), _50617_arr.get()._field_Elem);
	return _50158_ok;
}



inline jule::Bool _249c6e5d5_annotateSlc(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _51142_k) {
	jule::Bool _51158_ok = jule::Bool();
	jule::Ptr<_249cb9454_Slc> _51217_pslc = _249cb3827_Slc((*((*_self_)._field_k)).ptr());;
	if ((_51217_pslc == nullptr)) {
		_51158_ok = false;
		return _51158_ok;
	};
	jule::Ptr<_249cb9454_Slc> _51617_slc = _249cb3827_Slc(_51142_k.ptr());;
	(*_self_)._field_k=(&(_51217_pslc.get()._field_Elem));
	_51158_ok = _249c710ed_annotateKind(&(*_self_), _51617_slc.get()._field_Elem);
	return _51158_ok;
}



inline jule::Bool _249c6e98c_checkMapKey(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>* _52141_k, jule::Ptr<_249cb078b_TypeKind>& _52161_ck) {
	jule::Bool _52178_ok = jule::Bool();
	jule::Ptr<_249cb078b_TypeKind>* _52217_old = (*_self_)._field_k;;
	(*_self_)._field_k=_52141_k;
	_52178_ok=_249c710ed_annotateKind(&(*_self_), _52161_ck);
	(*_self_)._field_k=_52217_old;
	return _52178_ok;
}



inline jule::Bool _249c6ec9a_annotateMap(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _52942_k) {
	jule::Bool _52958_ok = jule::Bool();
	jule::Ptr<_249cbaa0a_Map> _53017_pmap = _249cb42c8_Map((*((*_self_)._field_k)).ptr());;
	if ((_53017_pmap == nullptr)) {
		_52958_ok = false;
		return _52958_ok;
	};
	jule::Ptr<_249cbaa0a_Map> _53417_m = _249cb42c8_Map(_52942_k.ptr());;
	_52958_ok = (_249c6e98c_checkMapKey(&(*_self_), (&(_53017_pmap.get()._field_Key)),_53417_m.get()._field_Key) && _249c6e98c_checkMapKey(&(*_self_), (&(_53017_pmap.get()._field_Val)),_53417_m.get()._field_Val));
	return _52958_ok;
}



inline jule::Bool _249c700a8_annotateFn(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _53941_k) {
	jule::Bool _53957_ok = jule::Bool();
	jule::Ptr<_249bcc312_FnIns> _54017_pf = _249cb3a8b_Fn((*((*_self_)._field_k)).ptr());;
	if ((_54017_pf == nullptr)) {
		_53957_ok = false;
		return _53957_ok;
	};
	jule::Ptr<_249bcc312_FnIns> _54417_f = _249cb3a8b_Fn(_53941_k.ptr());;
	{
		
		if ((_54017_pf.get()._field_Params.len() != _54417_f.get()._field_Params.len())) {
			_case_begin_24ee05ec5:;
			{
				_53957_ok = false;
				return _53957_ok;
			}
		}
		else if ((_2490aaa43_IsVoid(_54017_pf.get()._field_Decl.ptr()) != _2490aaa43_IsVoid(_54417_f.get()._field_Decl.ptr()))) {
			_case_begin_24ee0604c:;
			{
				_53957_ok = false;
				return _53957_ok;
			}
		}
		_match_end_24ee05e5e:;
	};
	_53957_ok=true;
	jule::Ptr<_249cb078b_TypeKind>* _55317_old = (*_self_)._field_k;;
	{
		auto &expr = _54417_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_24ee07b20:;
		if (it != expr.end()) {
			jule::I64 _55414_i = it - expr.begin();
			jule::Ptr<_249bcc125_ParamIns> _55421_fp = *it;
			{
				(*_self_)._field_k=(&(_54017_pf.get()._field_Params[_55414_i].get()._field_Kind));
				_53957_ok=(_249c710ed_annotateKind(&(*_self_), _55421_fp.get()._field_Kind) && _53957_ok);
			}
			_iter_next_24ee07b20:;
			++it;
			_55414_i++;
			goto _iter_begin_24ee07b20;
		}
		_iter_end_24ee07b20:;
	};
	if ((!(_2490aaa43_IsVoid(_54017_pf.get()._field_Decl.ptr())))) {
		(*_self_)._field_k=(&(_54017_pf.get()._field_Result));
		_53957_ok=(_249c710ed_annotateKind(&(*_self_), _54417_f.get()._field_Result) && _53957_ok);
	};
	(*_self_)._field_k=_55317_old;
	return _53957_ok;
}



inline jule::Bool _249c703b6_annotatePtr(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _56842_k) {
	jule::Bool _56858_ok = jule::Bool();
	jule::Ptr<_249cbc05b_Ptr> _56917_pptr = _249cb2d76_Ptr((*((*_self_)._field_k)).ptr());;
	if ((_56917_pptr == nullptr)) {
		_56858_ok = false;
		return _56858_ok;
	};
	jule::Ptr<_249cbc05b_Ptr> _57317_ptr = _249cb2d76_Ptr(_56842_k.ptr());;
	(*_self_)._field_k=(&(_56917_pptr.get()._field_Elem));
	_56858_ok = _249c710ed_annotateKind(&(*_self_), _57317_ptr.get()._field_Elem);
	return _56858_ok;
}



inline jule::Bool _249c706c4_annotateSptr(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _57843_k) {
	jule::Bool _57859_ok = jule::Bool();
	jule::Ptr<_249cb89e7_Sptr> _57917_ssptr = _249cb2b12_Sptr((*((*_self_)._field_k)).ptr());;
	if ((_57917_ssptr == nullptr)) {
		_57859_ok = false;
		return _57859_ok;
	};
	jule::Ptr<_249cb89e7_Sptr> _58317_sptr = _249cb2b12_Sptr(_57843_k.ptr());;
	(*_self_)._field_k=(&(_57917_ssptr.get()._field_Elem));
	_57859_ok = _249c710ed_annotateKind(&(*_self_), _58317_sptr.get()._field_Elem);
	return _57859_ok;
}



inline jule::Bool _249c709d2_annotateStruct(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _58845_k) {
	jule::Bool _58861_ok = jule::Bool();
	jule::Ptr<_249062e4b_StructIns> _58917_s = _249cb3d00_Struct((*((*_self_)._field_k)).ptr());;
	if ((_58917_s == nullptr)) {
		_58861_ok = false;
		return _58861_ok;
	};
	jule::Ptr<_249062e4b_StructIns> _59317_s2 = _249cb3d00_Struct(_58845_k.ptr());;
	if ((_58917_s.get()._field_Generics.len() != _59317_s2.get()._field_Generics.len())) {
		_58861_ok = false;
		return _58861_ok;
	};
	{
		auto &expr = _58917_s.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_24ee11d27:;
		if (it != expr.end()) {
			jule::I64 _59714_i = it - expr.begin();
			jule::Ptr<_249cae05e_InsGeneric> _59721_g = *it;
			{
				jule::Ptr<_249cae05e_InsGeneric> _59821_g2 = _59317_s2.get()._field_Generics[_59714_i];;
				if (_249cb0e95_Equals(_59721_g.get()._field_Kind, _59821_g2.get()._field_Kind)) {
					goto _iter_next_24ee11d27;
				};
				(*_self_)._field_k=(&(_59721_g.get()._field_Kind));
				if ((!(_249c710ed_annotateKind(&(*_self_), _59821_g2.get()._field_Kind)))) {
					_58861_ok = false;
					return _58861_ok;
				};
			}
			_iter_next_24ee11d27:;
			++it;
			_59714_i++;
			goto _iter_begin_24ee11d27;
		}
		_iter_end_24ee11d27:;
	};
	_58861_ok = true;
	return _58861_ok;
}



inline jule::Bool _249c70ce0_annotateAny(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _61042_k) {
	jule::Bool _61058_ok = jule::Bool();
	jule::Str _61113_kind = _249cb0b87_Str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_24ee15006:;
		if (it != expr.end()) {
			jule::I64 _61213_i = it - expr.begin();
			jule::Ptr<_2490539a8_GenericDecl> _61216_g = *it;
			{
				if ((_61113_kind != _61216_g.get()._field_Ident)) {
					goto _iter_next_24ee15006;
				};
				jule::Ptr<_249cae05e_InsGeneric> _61617_t = (*_self_)._field_f.get()._field_Generics[_61213_i];;
				{
					
					if ((_61617_t == nullptr) || (_61617_t.get()._field_Kind == nullptr)) {
						_case_begin_24ee16c2d:;
						{
							_249c6dbab_pushGeneric(&(*_self_), _61042_k,_61213_i);
						}
					}
					else if ((!(_249cb0e95_Equals(_61617_t.get()._field_Kind, _61042_k)))) {
						_case_begin_24ee16ca5:;
						{
							_61058_ok = false;
							return _61058_ok;
						}
					}
					_match_end_24ee16ab8:;
				};
				(*((*_self_)._field_k)).get()._field_Kind=_61042_k.get()._field_Kind;
				_61058_ok = true;
				return _61058_ok;
			}
			_iter_next_24ee15006:;
			++it;
			_61213_i++;
			goto _iter_begin_24ee15006;
		}
		_iter_end_24ee15006:;
	};
	_61058_ok = false;
	return _61058_ok;
}



inline jule::Bool _249c710ed_annotateKind(_249c6c23c_dynamicTypeAnnotation* _self_, jule::Ptr<_249cb078b_TypeKind>& _63243_k) {
	jule::Bool _63259_ok = jule::Bool();
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _63259_ok;
	};
	{
		
		if (_249c70ce0_annotateAny(&(*_self_), _63243_k)) {
			_case_begin_24ee1a11b:;
			{
				_63259_ok = true;
				return _63259_ok;
			}
		}
		else if ((_249cb289d_Prim(_63243_k.ptr()) != nullptr)) {
			_case_begin_24ee1a193:;
			{
				_63259_ok = _249c6deb9_annotatePrim(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_249cb35b3_Arr(_63243_k.ptr()) != nullptr)) {
			_case_begin_24ee19d0d:;
			{
				_63259_ok = _249c6e2c7_annotateArr(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_249cb3827_Slc(_63243_k.ptr()) != nullptr)) {
			_case_begin_24ee19d74:;
			{
				_63259_ok = _249c6e5d5_annotateSlc(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_249cb42c8_Map(_63243_k.ptr()) != nullptr)) {
			_case_begin_24ee19dda:;
			{
				_63259_ok = _249c6ec9a_annotateMap(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_249cb3a8b_Fn(_63243_k.ptr()) != nullptr)) {
			_case_begin_24ee198e0:;
			{
				_63259_ok = _249c700a8_annotateFn(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_249cb2d76_Ptr(_63243_k.ptr()) != nullptr)) {
			_case_begin_24ee19956:;
			{
				_63259_ok = _249c703b6_annotatePtr(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_249cb2b12_Sptr(_63243_k.ptr()) != nullptr)) {
			_case_begin_24ee199bc:;
			{
				_63259_ok = _249c706c4_annotateSptr(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else if ((_249cb3d00_Struct(_63243_k.ptr()) != nullptr)) {
			_case_begin_24ee19a44:;
			{
				_63259_ok = _249c709d2_annotateStruct(&(*_self_), _63243_k);
				return _63259_ok;
			}
		}
		else {
			_case_begin_24ee19879:;
			{
				_63259_ok = false;
				return _63259_ok;
			}
		}
		_match_end_24ee19824:;
	};
}



inline jule::Bool _249c71362_annotate(_249c6c23c_dynamicTypeAnnotation* _self_) {
	jule::Bool _66036_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_Kind));
	_66036_ok = _249c710ed_annotateKind(&(*_self_), (*_self_)._field_a.get()._field_Kind);
	return _66036_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _249c6c23c_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c;
	_Stream << "}";
	return _Stream;
}



inline void _249c72088_pushErrToken(_249c71a38_fnCallArgChecker* _self_, jule::Ptr<_23abd3d83_Token> _67631_token, jule::Str _67646_fmt, jule::Slice<jule::Any> _67659_args) {
	_249c1be89_pushErr((*_self_)._field_e.get()._field_s.ptr(), _67631_token,_67646_fmt,jule::Any(_67659_args));
}



inline void _249c723a7_pushErr(_249c71a38_fnCallArgChecker* _self_, jule::Str _68026_fmt, jule::Slice<jule::Any> _68039_args) {
	_249c72088_pushErrToken(&(*_self_), (*_self_)._field_errorToken,_68026_fmt,jule::Any(_68039_args));
}



inline jule::Slice<jule::Ptr<_249bcc125_ParamIns>> _249c7261b_getParams(_249c71a38_fnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_Params.len() > 0LL) && ((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _24909ab54_IsSelf((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*_self_)._field_f.get()._field_Params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_Params;
}



inline jule::Bool _249c72929_checkCounts(_249c71a38_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_249bcc125_ParamIns>>& _69331_params) {
	jule::Bool _69354_ok = jule::Bool();
	jule::I64 _69417_n = _69331_params.len();;
	if (((_69417_n > 0LL) && _24909ab54_IsSelf(_69331_params[0LL].get()._field_Decl.ptr()))) {
		(_69417_n)--;
	};
	jule::I64 _69917_diff = (_69417_n - (*_self_)._field_args.len());;
	{
		
		if ((_69917_diff == 0LL)) {
			_case_begin_24ee2749c:;
			{
				_69354_ok = true;
				return _69354_ok;
			}
		}
		else if (((_69417_n > 0LL) && _69331_params[(_69417_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_24ee27524:;
			{
				_69354_ok = true;
				return _69354_ok;
			}
		}
		else if (((_69917_diff < 0LL) || (_69917_diff > _69331_params.len()))) {
			_case_begin_24ee2759b:;
			{
				_249c723a7_pushErr(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_69354_ok = false;
				return _69354_ok;
			}
		}
		_match_end_24ee273e2:;
	};
	jule::Str _71017_idents = jule::Str();;
	for (; (_69917_diff > 0LL); (_69917_diff)--) {
		{
			_71017_idents+=(jule::Str(", ", 2) + _69331_params[(_69417_n - _69917_diff)].get()._field_Decl.get()._field_Ident);
		}
	_iter_next_24ee291d5:;
	}
	_iter_end_24ee291d5:;;
	(_71017_idents).mut_slice(2LL);;
	_249c723a7_pushErr(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_71017_idents)}));
	_69354_ok = false;
	return _69354_ok;
}



inline jule::Bool _249c72d7a_checkArg(_249c71a38_fnCallArgChecker* _self_, jule::Ptr<_249bcc125_ParamIns>& _72032_p, jule::Ptr<_249c80052_Data>& _72051_arg, jule::Ptr<_23abd3d83_Token>& _72068_errorToken) {
	jule::Bool _72090_ok = jule::Bool();
	if (((*_self_)._field_dynamicAnnotation && _249bcc9c7_parameterUsesGenerics(_72032_p.get()._field_Decl,(*_self_)._field_f.get()._field_Decl.get()._field_Generics))) {
		_72090_ok=(!(_72032_p.get()._field_Decl.get()._field_Variadic));
		if (_72090_ok) {
			_249c6c23c_dynamicTypeAnnotation _72425_dta = _249c6c23c_dynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_72032_p, ._field_a=_72051_arg, ._field_errorToken=_72068_errorToken, };;
			_72090_ok=_249c71362_annotate(&_72425_dta);
		};
		if ((!(_72090_ok))) {
			_249c72088_pushErrToken(&(*_self_), _72068_errorToken,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_72090_ok = false;
			return _72090_ok;
		};
	};
	if (_249c26aa9_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, _72032_p.get()._field_Decl.get()._field_Mutable,_72032_p.get()._field_Decl.get()._field_Reference,_72032_p.get()._field_Kind,_72051_arg,_72068_errorToken)) {
		_249c23d70_checkAssignType((*_self_)._field_e.get()._field_s, _72032_p.get()._field_Decl.get()._field_Reference,_72032_p.get()._field_Kind,_72051_arg,_72068_errorToken);
	};
	_72090_ok = true;
	return _72090_ok;
}



inline jule::Bool _249c73232_push(_249c71a38_fnCallArgChecker* _self_, jule::Ptr<_249bcc125_ParamIns>& _74728_p, jule::Ptr<_24904a8e5_Expr> _74746_arg) {
	jule::Bool _74760_ok = jule::Bool();
	jule::Ptr<_249cb078b_TypeKind> _74817_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _74913_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_249c80052_Data> _75017_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_74728_p.get()._field_Decl.get()._field_Mutable));
	if (((!((*_self_)._field_dynamicAnnotation)) && (!(_74728_p.get()._field_Decl.get()._field_Variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_74728_p.get()._field_Kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_75017_d=_249ca186a_evalExprKind((*_self_)._field_e, _74746_arg.get()._field_Kind);
	(*_self_)._field_e.get()._field_prefix=_74817_old;
	(*_self_)._field_e.get()._field_immutable=_74913_old_immut;
	if ((_75017_d == nullptr)) {
		_74760_ok = false;
		return _74760_ok;
	};
	_74760_ok=_249c72d7a_checkArg(&(*_self_), _74728_p,_75017_d,_74746_arg.get()._field_Token);
	(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_75017_d.get()._field_Model);;
	return _74760_ok;
}



inline jule::Bool _249c735d9_pushVariadic(_249c71a38_fnCallArgChecker* _self_, jule::Ptr<_249bcc125_ParamIns>& _77236_p, jule::I64 _77254_i) {
	jule::Bool _77264_ok = jule::Bool();
	_77264_ok=true;
	jule::Bool _77417_variadiced = false;;
	jule::Bool _77513_more = ((_77254_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_249bc7252_SliceExprModel> _77617_model = jule::new_ptr<_249bc7252_SliceExprModel>(_249bc7252_SliceExprModel{._field_ElemKind=_77236_p.get()._field_Kind, });;
	jule::Ptr<_249cb078b_TypeKind> _78017_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _78513_variadic = _77236_p.get()._field_Kind.get()._field_Variadic;;
	_77236_p.get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		_77236_p.get()._field_Kind.get()._field_Variadic=_78513_variadic;
	});;
	for (; (_77254_i < (*_self_)._field_args.len()); (_77254_i)++) {
		{
			jule::Ptr<_24904a8e5_Expr> _79221_arg = (*_self_)._field_args[_77254_i];;
			{
				auto &_match_expr{ _79221_arg.get()._field_Kind };
				
				if (_match_expr.type_is<jule::Ptr<_24904d51e_VariadicExpr>>()) {
					_case_begin_24ee39db6:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(jule::new_ptr<_249cb9454_Slc>(_249cb9454_Slc{._field_Elem=_77236_p.get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_24ee399ba:;
					{
						(*_self_)._field_e.get()._field_prefix=_77236_p.get()._field_Kind;
					}
				}
				_match_end_24ee397ab:;
			};
			jule::Ptr<_249c80052_Data> _80521_d = _249ca1b78_eval((*_self_)._field_e, _79221_arg);;
			if ((_80521_d == nullptr)) {
				_77264_ok=false;
				goto _iter_next_24ee38249;
			};
			if (_80521_d.get()._field_Kind.get()._field_Variadic) {
				_77417_variadiced=true;
				_77236_p.get()._field_Kind.get()._field_Variadic=true;
				_77264_ok=(_77264_ok && _249c72d7a_checkArg(&(*_self_), _77236_p,_80521_d,_79221_arg.get()._field_Token));
				{
					auto &_match_expr{ _80521_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_249bc7252_SliceExprModel>>()) {
						_case_begin_24ee3d293:;
						{
							_77617_model=_80521_d.get()._field_Model.operator jule::Ptr<_249bc7252_SliceExprModel>();
							_77617_model.get()._field_ElemKind=_77236_p.get()._field_Kind;
						}
					}
					else {
						_case_begin_24ee3cc65:;
						{
							_77617_model=nullptr;
							(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_80521_d.get()._field_Model);;
						}
					}
					_match_end_24ee3c0c7:;
				};
				(_77254_i)++;
				goto _iter_end_24ee38249;
			};
			_77264_ok=(_77264_ok && _249c72d7a_checkArg(&(*_self_), _77236_p,_80521_d,_79221_arg.get()._field_Token));
			_77617_model.get()._field_Elems = jule::alloc_for_append(_77617_model.get()._field_Elems,1);_77617_model.get()._field_Elems.__push(_80521_d.get()._field_Model);;
		}
	_iter_next_24ee38249:;
	}
	_iter_end_24ee38249:;;
	(*_self_)._field_e.get()._field_prefix=_78017_old;
	if ((_77417_variadiced && _77513_more)) {
		_249c72088_pushErrToken(&(*_self_), (*_self_)._field_args[_77254_i].get()._field_Token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_77617_model != nullptr)) {
		(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(static_cast<jule::Any>(_77617_model));;
	};
	return _77264_ok;
}



inline jule::Bool _249c738e7_checkArgs(_249c71a38_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_249bcc125_ParamIns>>& _84833_params) {
	jule::Bool _84856_ok = jule::Bool();
	jule::Bool _84913_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_84856_ok=true;
	jule::I64 _85317_i = 0LL;;
	if (((_84833_params.len() > 0LL) && _24909ab54_IsSelf(_84833_params[0LL].get()._field_Decl.ptr()))) {
		(_85317_i)++;
	};
	_julec_label_iter:;
	while ((_85317_i < _84833_params.len())) {
		{
			jule::Ptr<_249bcc125_ParamIns> _86021_p = _84833_params[_85317_i];;
			{
				
				if (_86021_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_24ee440e0:;
					{
						_84856_ok=(_249c735d9_pushVariadic(&(*_self_), _86021_p,_85317_i) && _84856_ok);
						goto _iter_end_24ee42e13;
					}
				}
				else if (((*_self_)._field_args.len() <= _85317_i)) {
					_case_begin_24ee449d6:;
					{
						_84856_ok=false;
						goto _iter_end_24ee42e13;
					}
				}
				else {
					_case_begin_24ee44640:;
					{
						_84856_ok=(_249c73232_push(&(*_self_), _86021_p,(*_self_)._field_args[_85317_i]) && _84856_ok);
					}
				}
				_match_end_24ee445c9:;
			};
			(_85317_i)++;
		}
	_iter_next_24ee42e13:;
	}
	_iter_end_24ee42e13:;;
	(*_self_)._field_e.get()._field_arg=_84913_arg;
	return _84856_ok;
}



inline jule::Bool _249c73b7d_checkDynamicTypeAnnotation(_249c71a38_fnCallArgChecker* _self_) {
	jule::Bool _87947_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_24ee46c3b:;
		if (it != expr.end()) {
			jule::Ptr<_249cae05e_InsGeneric> _88016_g = *it;
			{
				if ((_88016_g == nullptr)) {
					_249c723a7_pushErr(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_87947_ok = false;
					return _87947_ok;
				};
			}
			_iter_next_24ee46c3b:;
			++it;
			goto _iter_begin_24ee46c3b;
		}
		_iter_end_24ee46c3b:;
	};
	_87947_ok = true;
	return _87947_ok;
}



inline jule::Bool _249c73e03_check(_249c71a38_fnCallArgChecker* _self_) {
	jule::Bool _88926_ok = jule::Bool();
	jule::Slice<jule::Ptr<_249bcc125_ParamIns>> _89017_params = _249c7261b_getParams(&(*_self_));;
	_88926_ok=_249c72929_checkCounts(&(*_self_), _89017_params);
	if ((!(_88926_ok))) {
		_88926_ok = false;
		return _88926_ok;
	};
	_88926_ok=_249c738e7_checkArgs(&(*_self_), _89017_params);
	if ((_88926_ok && (*_self_)._field_dynamicAnnotation)) {
		_88926_ok=_249c73b7d_checkDynamicTypeAnnotation(&(*_self_));
	};
	return _88926_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _249c71a38_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels;
	_Stream << "}";
	return _Stream;
}



inline void _249c7494d_pushErr(_249c74442_structLitChecker* _self_, jule::Ptr<_23abd3d83_Token> _91126_token, jule::Str _91141_fmt, jule::Slice<jule::Any> _91154_args) {
	_249c820cb_pushErr((*_self_)._field_e.ptr(), _91126_token,_91141_fmt,jule::Any(_91154_args));
}



inline void _249c74c6c_pushSugggestion(_249c74442_structLitChecker* _self_, jule::Str _91634_fmt, jule::Slice<jule::Any> _91647_args) {
	_249c823ea_pushSugggestion((*_self_)._field_e.ptr(), _91634_fmt,jule::Any(_91647_args));
}



inline void _249c75135_pushMatch(_249c74442_structLitChecker* _self_, jule::Ptr<_24903e268_FieldIns>& _92033_f, jule::Ptr<_249c80052_Data>& _92052_d, jule::Ptr<_23abd3d83_Token>& _92067_errorToken) {
	;
	if (_249c26aa9_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_92033_f.get()._field_Kind,_92052_d,_92067_errorToken)) {
		_249c23d70_checkAssignType((*_self_)._field_e.get()._field_s, false,_92033_f.get()._field_Kind,_92052_d,_92067_errorToken);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_249bc67b2_StructArgExprModel>(_249bc67b2_StructArgExprModel{._field_Field=_92033_f, ._field_Expr=_92052_d.get()._field_Model}));;
}



inline void _249c75454_checkPair(_249c74442_structLitChecker* _self_, jule::Ptr<_249050642_FieldExprPair>& _93333_pair, jule::Slice<jule::Ptr<_24904a8e5_Expr>>& _93360_exprs) {
	jule::Ptr<_24903e268_FieldIns> _93517_f = _24903d0be_FindField((*_self_)._field_s.ptr(), _93333_pair.get()._field_Field.get()._field_Kind);;
	if ((_93517_f == nullptr)) {
		_249c7494d_pushErr(&(*_self_), _93333_pair.get()._field_Field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_93333_pair.get()._field_Field.get()._field_Kind)}));
		return;;
	};
	if ((!(_249c1c660_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _93517_f.get()._field_Decl.get()._field_Public,_93517_f.get()._field_Decl.get()._field_Token)))) {
		_249c7494d_pushErr(&(*_self_), _93333_pair.get()._field_Field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_93333_pair.get()._field_Field.get()._field_Kind)}));
		_249c74c6c_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _93360_exprs;
		auto it = expr.begin();
		_iter_begin_24ee5284b:;
		if (it != expr.end()) {
			jule::Ptr<_24904a8e5_Expr> _94721_expr = *it;
			{
				{
					auto &_match_expr{ _94721_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_249050642_FieldExprPair>>()) {
						_case_begin_24ee53275:;
						{
							jule::Ptr<_249050642_FieldExprPair> _95025_dpair = _94721_expr.get()._field_Kind.operator jule::Ptr<_249050642_FieldExprPair>();;
							{
								
								if ((_93333_pair == _95025_dpair)) {
									_case_begin_24ee542a9:;
									{
										goto _iter_end_24ee5284b;
									}
								}
								else if ((_93333_pair.get()._field_Field.get()._field_Kind == _95025_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_24ee54331:;
									{
										_249c7494d_pushErr(&(*_self_), _93333_pair.get()._field_Field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_93333_pair.get()._field_Field.get()._field_Kind)}));
										goto _iter_end_24ee5284b;
									}
								}
								_match_end_24ee541ee:;
							};
						}
					}
					_match_end_24ee53055:;
				};
			}
			_iter_next_24ee5284b:;
			++it;
			goto _iter_begin_24ee5284b;
		}
		_iter_end_24ee5284b:;
	};
	jule::Ptr<_249cb078b_TypeKind> _96117_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_96117_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_93517_f.get()._field_Kind;
	jule::Ptr<_249c80052_Data> _96517_d = _249ca186a_evalExprKind((*_self_)._field_e, _93333_pair.get()._field_Expr.get()._field_Kind);;
	if ((_96517_d == nullptr)) {
		return;;
	};
	_249c75135_pushMatch(&(*_self_), _93517_f,_96517_d,_93333_pair.get()._field_Field);
}



inline jule::Bool _249c75762_readyExprs(_249c74442_structLitChecker* _self_, jule::Slice<jule::Ptr<_24904a8e5_Expr>>& _97234_exprs) {
	jule::Bool _97317_ok = true;;
	{
		auto &expr = _97234_exprs;
		auto it = expr.begin();
		_iter_begin_24ee58203:;
		if (it != expr.end()) {
			jule::I64 _97414_i = it - expr.begin();
			jule::Ptr<_24904a8e5_Expr> _97421_expr = *it;
			{
				{
					auto &_match_expr{ _97421_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_249051d2a_KeyValPair>>()) {
						_case_begin_24ee58ed4:;
						{
							jule::Ptr<_249051d2a_KeyValPair> _97725_pair = _97421_expr.get()._field_Kind.operator jule::Ptr<_249051d2a_KeyValPair>();;
							{
								auto &_match_expr{ _97725_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type_is<jule::Ptr<_24904c95d_IdentExpr>>()) {
									_case_begin_24ee5a4e1:;
									{
										goto _match_end_24ee5a07e;
									}
								}
								else {
									_case_begin_24ee5a0d4:;
									{
										_249c7494d_pushErr(&(*_self_), _97725_pair.get()._field_Colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_97317_ok=false;
										goto _iter_next_24ee58203;
									}
								}
								_match_end_24ee5a07e:;
							};
							_97234_exprs[_97414_i].get()._field_Kind=static_cast<jule::Any>(jule::new_ptr<_249050642_FieldExprPair>(_249050642_FieldExprPair{._field_Field=_97725_pair.get()._field_Key.get()._field_Token, ._field_Expr=_97725_pair.get()._field_Val}));
						}
					}
					_match_end_24ee58cb4:;
				};
			}
			_iter_next_24ee58203:;
			++it;
			_97414_i++;
			goto _iter_begin_24ee58203;
		}
		_iter_end_24ee58203:;
	};
	return _97317_ok;
}



inline void _249c759d7_check(_249c74442_structLitChecker* _self_, jule::Slice<jule::Ptr<_24904a8e5_Expr>>& _99629_exprs) {
	if ((_99629_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_249c75762_readyExprs(&(*_self_), _99629_exprs)))) {
		return;;
	};
	jule::Bool _100317_paired = false;;
	{
		auto &expr = _99629_exprs;
		auto it = expr.begin();
		_iter_begin_24ee5c900:;
		if (it != expr.end()) {
			jule::I64 _100414_i = it - expr.begin();
			jule::Ptr<_24904a8e5_Expr> _100421_expr = *it;
			{
				{
					auto &_match_expr{ _100421_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_249050642_FieldExprPair>>()) {
						_case_begin_24ee639c2:;
						{
							jule::Ptr<_249050642_FieldExprPair> _100725_pair = _100421_expr.get()._field_Kind.operator jule::Ptr<_249050642_FieldExprPair>();;
							if (((_100414_i > 0LL) && (!(_100317_paired)))) {
								_249c7494d_pushErr(&(*_self_), _100725_pair.get()._field_Field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_100317_paired=true;
							_249c75454_checkPair(&(*_self_), _100725_pair,_99629_exprs);
						}
					}
					else {
						_case_begin_24ee5d637:;
						{
							if (_100317_paired) {
								_249c7494d_pushErr(&(*_self_), _100421_expr.get()._field_Token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_100414_i >= (*_self_)._field_s.get()._field_Fields.len())) {
								_249c7494d_pushErr(&(*_self_), _100421_expr.get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_24ee5c900;
							};
							jule::Ptr<_24903e268_FieldIns> _102225_field = (*_self_)._field_s.get()._field_Fields[_100414_i];;
							if ((!(_249c1c660_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _102225_field.get()._field_Decl.get()._field_Public,_102225_field.get()._field_Decl.get()._field_Token)))) {
								_249c7494d_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_249c74c6c_pushSugggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_249cb078b_TypeKind> _103025_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_103025_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_102225_field.get()._field_Kind;
							jule::Ptr<_249c80052_Data> _103425_d = _249ca186a_evalExprKind((*_self_)._field_e, _100421_expr.get()._field_Kind);;
							if ((_103425_d == nullptr)) {
								goto _iter_next_24ee5c900;
							};
							_249c75135_pushMatch(&(*_self_), _102225_field,_103425_d,_100421_expr.get()._field_Token);
						}
					}
					_match_end_24ee5d47d:;
				};
			}
			_iter_next_24ee5c900:;
			++it;
			_100414_i++;
			goto _iter_begin_24ee5c900;
		}
		_iter_end_24ee5c900:;
	};
	if ((!(_100317_paired))) {
		jule::I64 _104517_n = (*_self_)._field_s.get()._field_Fields.len();;
		jule::I64 _104621_diff = (_104517_n - _99629_exprs.len());;
		{
			
			if ((_104621_diff <= 0LL)) {
				_case_begin_24ee6695e:;
				{
					return;;
				}
			}
			_match_end_24ee6680a:;
		};
		jule::Str _105221_idents = jule::Str();;
		for (; (_104621_diff > 0LL); (_104621_diff)--) {
			{
				_105221_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_Fields[(_104517_n - _104621_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_24ee67421:;
		}
		_iter_end_24ee67421:;;
		(_105221_idents).mut_slice(2LL);;
		_249c7494d_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_105221_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _249c74442_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_249c3702b_Var> _249c764bb_buildVar(_249c76026_rangeChecker* _self_, jule::Ptr<_2490591b7_VarDecl>& _107128_decl) {
	jule::Ptr<_249c3702b_Var> _107217_v = _249bd01b1_buildVar(_107128_decl);;
	return _107217_v;
}



inline void _249c76697_setSizeKey(_249c76026_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _23abd6627_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyA=_249c764bb_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_249cb48e4_TypeSymbol>(_249cb48e4_TypeSymbol{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_249c3702b_Var>>()) {
			_case_begin_24ee6b524:;
			{
				(*_self_)._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_249c360b3_IterRelation>(_249c360b3_IterRelation{._field_Range=(*_self_)._field_d.get()._field_Model.operator jule::Ptr<_249c3702b_Var>()});
			}
		}
		_match_end_24ee690c1:;
	};
}



inline void _249c76a60_checkRangeExprValidity(_249c76026_rangeChecker* _self_, jule::Ptr<_249c80052_Data>& _110246_d, jule::Ptr<_249c3702b_Var>& _110257_key, jule::Ptr<_249cb078b_TypeKind>& _110273_k) {
	jule::Bool _110317__mut = _110257_key.get()._field_Mutable;;
	if ((_110317__mut && (!(_249cb1b88_Mutable(_110273_k.ptr()))))) {
		_110317__mut=false;
	};
	_249c26aa9_checkValidityForInitExpr((*_self_)._field_sc.get()._field_s, _110317__mut,_110257_key.get()._field_Reference,_110257_key.get()._field_Kind.get()._field_Kind,_110246_d,(*_self_)._field_rang.get()._field_InToken);
}



inline void _249c76c3b_checkSlice(_249c76026_rangeChecker* _self_) {
	_249c76697_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _23abd6627_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_249cb9454_Slc> _112117_slc = _249cb3827_Slc((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_249c764bb_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_249cb48e4_TypeSymbol>(_249cb48e4_TypeSymbol{._field_Kind=_112117_slc.get()._field_Elem});
	_249c76a60_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_112117_slc.get()._field_Elem);
}



inline void _249c76e17_checkArray(_249c76026_rangeChecker* _self_) {
	_249c76697_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _23abd6627_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_249cbb5ee_Arr> _113417_arr = _249cb35b3_Arr((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_249c764bb_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_249cb48e4_TypeSymbol>(_249cb48e4_TypeSymbol{._field_Kind=_113417_arr.get()._field_Elem});
	_249c76a60_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_113417_arr.get()._field_Elem);
}



inline void _249c770e3_checkMapKeyA(_249c76026_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _23abd6627_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_249cbaa0a_Map> _114617_m = _249cb42c8_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyA=_249c764bb_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_249cb48e4_TypeSymbol>(_249cb48e4_TypeSymbol{._field_Kind=_114617_m.get()._field_Key});
	jule::Ptr<_249c80052_Data> _115017_d = jule::new_ptr<_249c80052_Data>((*((*_self_)._field_d)));;
	_115017_d.get()._field_Kind=_114617_m.get()._field_Key;
	_249c76a60_checkRangeExprValidity(&(*_self_), _115017_d,(*_self_)._field_Kind.get()._field_KeyA,_114617_m.get()._field_Key);
}



inline void _249c772be_checkMapKeyB(_249c76026_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _23abd6627_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_249cbaa0a_Map> _116117_m = _249cb42c8_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_249c764bb_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_249cb48e4_TypeSymbol>(_249cb48e4_TypeSymbol{._field_Kind=_116117_m.get()._field_Val});
	jule::Ptr<_249c80052_Data> _116517_d = jule::new_ptr<_249c80052_Data>((*((*_self_)._field_d)));;
	_116517_d.get()._field_Kind=_116117_m.get()._field_Val;
	_249c76a60_checkRangeExprValidity(&(*_self_), _116517_d,(*_self_)._field_Kind.get()._field_KeyB,_116117_m.get()._field_Val);
}



inline void _249c7749a_checkMap(_249c76026_rangeChecker* _self_) {
	_249c770e3_checkMapKeyA(&(*_self_));
	_249c772be_checkMapKeyB(&(*_self_));
}



inline void _249c77676_checkStr(_249c76026_rangeChecker* _self_) {
	_249c76697_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _23abd6627_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyB=_249c764bb_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_249cb48e4_TypeSymbol>(_249cb48e4_TypeSymbol{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _249c778da_check(_249c76026_rangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_24ee82183:;
		}
		else if ((_249cb3827_Slc((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_24ee822b5:;
			{
				_249c76c3b_checkSlice(&(*_self_));
				return true;
			}
		}
		else if ((_249cb35b3_Arr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_24ee80abb:;
			{
				_249c76e17_checkArray(&(*_self_));
				return true;
			}
		}
		else if ((_249cb42c8_Map((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_24ee80b32:;
			{
				_249c7749a_checkMap(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_24ee80a55:;
			{
				jule::Ptr<_249cb5263_Prim> _120317_prim = _249cb289d_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (((_120317_prim != nullptr) && _249cb8497_IsStr(_120317_prim.ptr()))) {
					_249c77676_checkStr(&(*_self_));
					return true;
				};
			}
		}
		_match_end_24ee80978:;
	};
	_249c1be89_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_InToken,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _249c76026_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _249c78633_prepareTypes(_249c7817c_retTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_2490ca227_Types((*_self_)._field_f.ptr());
	};
}



inline void _249c788a8_prepareExprs(_249c7817c_retTypeChecker* _self_, jule::Ptr<_24904a8e5_Expr>& _123236_e) {
	if ((_123236_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _123236_e.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_24904b572_TupleExpr>>()) {
			_case_begin_24ee878a3:;
			{
				(*_self_)._field_exprs=_123236_e.get()._field_Kind.operator jule::Ptr<_24904b572_TupleExpr>().get()._field_Expr;
			}
		}
		else {
			_case_begin_24ee867b4:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_123236_e);;
			}
		}
		_match_end_24ee868b3:;
	};
}



inline void _249c78a84_retVars(_249c7817c_retTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _2490aaa43_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_249c3702b_Var>>::alloc(0LL,(*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len());
	jule::Ptr<_249be9296_scopeChecker> _125017_rootScope = _249bec3a9_getRoot((*_self_)._field_sc);;
	jule::I64 _125217_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_24ee89ee3:;
		if (it != expr.end()) {
			jule::I64 _125313_i = it - expr.begin();
			jule::Ptr<_23abd3d83_Token> _125316_ident = *it;
			{
				if (((!(_23abd6627_IsIgnoreIdent(_125316_ident.get()._field_Kind))) && (!(_23abd68be_IsAnonIdent(_125316_ident.get()._field_Kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_125017_rootScope.get()._field_table.get()._field_Vars[_125217_j]);;
					(_125217_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_249c3702b_Var>(_249c3702b_Var{._field_Ident=jule::Str("_", 1), ._field_Kind=jule::new_ptr<_249cb48e4_TypeSymbol>(_249cb48e4_TypeSymbol{._field_Kind=(*_self_)._field_types[_125313_i]}), }));;
				};
			}
			_iter_next_24ee89ee3:;
			++it;
			_125313_i++;
			goto _iter_begin_24ee89ee3;
		}
		_iter_end_24ee89ee3:;
	};
	if ((_125217_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _249c78c60_checkExprs(_249c7817c_retTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_249c80052_Data>> _127517_datas = jule::Slice<jule::Ptr<_249c80052_Data>>::alloc(0LL,(*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_24ee8e25b:;
		if (it != expr.end()) {
			jule::I64 _127614_i = it - expr.begin();
			jule::Ptr<_24904a8e5_Expr> _127621_expr = *it;
			{
				if ((_127614_i >= (*_self_)._field_types.len())) {
					goto _iter_end_24ee8e25b;
				};
				jule::Ptr<_249cb078b_TypeKind> _128121_t = (*_self_)._field_types[_127614_i];;
				jule::Ptr<_249c80052_Data> _128321_d = _249ca1e86_evalExpr(_249c23567_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_249ccb3bc_Lookup>((*_self_)._field_sc, 0),_128121_t), _127621_expr);;
				if ((_128321_d == nullptr)) {
					goto _iter_next_24ee8e25b;
				};
				_127517_datas = jule::alloc_for_append(_127517_datas,1);_127517_datas.__push(_128321_d);;
				if (((!(_128321_d.get()._field_Mutable)) && _249cb1b88_Mutable(_128321_d.get()._field_Kind.ptr()))) {
					_249c1be89_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_249c6a823_assignTypeChecker _129521_ac = _249c6a823_assignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_128121_t, ._field_d=_128321_d, ._field_errorToken=(*_self_)._field_errorToken};;
				_249c6b99a_check(&_129521_ac);
			}
			_iter_next_24ee8e25b:;
			++it;
			_127614_i++;
			goto _iter_begin_24ee8e25b;
		}
		_iter_end_24ee8e25b:;
	};
	if ((_127517_datas.len() > 1LL)) {
		(*_self_)._field_model=static_cast<jule::Any>(jule::new_ptr<_249bc8c8c_TupleExprModel>(_249bc8c8c_TupleExprModel{._field_Datas=_127517_datas}));
	} else if ((_127517_datas.len() == 1LL)) {
		(*_self_)._field_model=_127517_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _249c7906d_check(_249c7817c_retTypeChecker* _self_, jule::Ptr<_24904a8e5_Expr>& _131429_e) {
	_249c78633_prepareTypes(&(*_self_));
	_249c788a8_prepareExprs(&(*_self_), _131429_e);
	_249c78a84_retVars(&(*_self_));
	jule::I64 _131913_n = (*_self_)._field_exprs.len();;
	if (((_131913_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_2490a02da_AnyVar((*_self_)._field_f.get()._field_Decl.ptr())))) {
			_249c1be89_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_131913_n > 0LL) && ((*_self_)._field_f != nullptr)) && _2490aaa43_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		_249c1be89_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_131913_n > (*_self_)._field_types.len())) {
		_249c1be89_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_131913_n < (*_self_)._field_types.len())) {
		_249c1be89_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_249c78c60_checkExprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _249c7817c_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_249c1117b_ImportInfo> _249c7a745_FindPackage(_249c7a228_SymbolTable* _self_, jule::Str _2630_ident) {
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_24ee9b5ed:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2630_ident)) {
					return _2721_pkg;
				};
			}
			_iter_next_24ee9b5ed:;
			++it;
			goto _iter_begin_24ee9b5ed;
		}
		_iter_end_24ee9b5ed:;
	};
	return nullptr;
}



inline jule::Ptr<_249c1117b_ImportInfo> _249c7aa53_SelectPackage(_249c7a228_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_249c1117b_ImportInfo>)> _3832_selector) {
	if ((_3832_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_24ee9bbb4:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _4221_pkg = *it;
			{
				if (_3832_selector(_4221_pkg)) {
					return _4221_pkg;
				};
			}
			_iter_next_24ee9bbb4:;
			++it;
			goto _iter_begin_24ee9bbb4;
		}
		_iter_end_24ee9bbb4:;
	};
	return nullptr;
}



inline jule::Ptr<_249c3702b_Var> _249c7ae0a_FindVar(_249c7a228_SymbolTable* _self_, jule::Str _5226_ident, jule::Bool _5238_cppLinked) {
	return _249c7c9bc_findVar(&(*_self_), _5226_ident,_5238_cppLinked,false);
}



inline jule::Ptr<_249caea98_TypeAlias> _249c7b2b2_FindTypeAlias(_249c7a228_SymbolTable* _self_, jule::Str _5832_ident, jule::Bool _5844_cppLinked) {
	return _249c7ce1d_findTypeAlias(&(*_self_), _5832_ident,_5844_cppLinked,false);
}



inline jule::Ptr<_249036b01_Struct> _249c7b669_FindStruct(_249c7a228_SymbolTable* _self_, jule::Str _6429_ident, jule::Bool _6441_cppLinked) {
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_24eea0558:;
		if (it != expr.end()) {
			jule::Ptr<_249036b01_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6429_ident) && (_6521_s.get()._field_CppLinked == _6441_cppLinked))) {
					return _6521_s;
				};
			}
			_iter_next_24eea0558:;
			++it;
			goto _iter_begin_24eea0558;
		}
		_iter_end_24eea0558:;
	};
	return nullptr;
}



inline jule::Ptr<_249bcbe38_Fn> _249c7ba21_FindFn(_249c7a228_SymbolTable* _self_, jule::Str _7525_ident, jule::Bool _7537_cppLinked) {
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_24eea1aa9:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7525_ident) && (_7621_f.get()._field_CppLinked == _7537_cppLinked))) {
					return _7621_f;
				};
			}
			_iter_next_24eea1aa9:;
			++it;
			goto _iter_begin_24eea1aa9;
		}
		_iter_end_24eea1aa9:;
	};
	return nullptr;
}



inline jule::Ptr<_249bd48d0_Trait> _249c7bd2e_FindTrait(_249c7a228_SymbolTable* _self_, jule::Str _8628_ident) {
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_24eea2deb:;
		if (it != expr.end()) {
			jule::Ptr<_249bd48d0_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8628_ident)) {
					return _8721_t;
				};
			}
			_iter_next_24eea2deb:;
			++it;
			goto _iter_begin_24eea2deb;
		}
		_iter_end_24eea2deb:;
	};
	return nullptr;
}



inline jule::Ptr<_249bd6a25_Enum> _249c7c13c_FindEnum(_249c7a228_SymbolTable* _self_, jule::Str _9727_ident) {
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_24eea32a3:;
		if (it != expr.end()) {
			jule::Ptr<_249bd6a25_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9727_ident)) {
					return _9821_e;
				};
			}
			_iter_next_24eea32a3:;
			++it;
			goto _iter_begin_24eea32a3;
		}
		_iter_end_24eea32a3:;
	};
	return nullptr;
}



inline jule::Ptr<_249bd8120_TypeEnum> _249c7c44a_FindTypeEnum(_249c7a228_SymbolTable* _self_, jule::Str _10831_ident) {
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_24eea42b5:;
		if (it != expr.end()) {
			jule::Ptr<_249bd8120_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10831_ident)) {
					return _10921_e;
				};
			}
			_iter_next_24eea42b5:;
			++it;
			goto _iter_begin_24eea42b5;
		}
		_iter_end_24eea42b5:;
	};
	return nullptr;
}



inline jule::Ptr<_249c3702b_Var> _249c7c9bc_findVar(_249c7a228_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I64 _12121_i = ((*_self_)._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_249c3702b_Var> _12325_v = (*_self_)._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;
				};
			}
		_iter_next_24eea6e77:;
		}
		_iter_end_24eea6e77:;;
	} else {
		{
			auto &expr = (*_self_)._field_Vars;
			auto it = expr.begin();
			_iter_begin_24eea7230:;
			if (it != expr.end()) {
				jule::Ptr<_249c3702b_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;
					};
				}
				_iter_next_24eea7230:;
				++it;
				goto _iter_begin_24eea7230;
			}
			_iter_end_24eea7230:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_249caea98_TypeAlias> _249c7ce1d_findTypeAlias(_249c7a228_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I64 _14021_i = ((*_self_)._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_249caea98_TypeAlias> _14225_ta = (*_self_)._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;
				};
			}
		_iter_next_24eeaa486:;
		}
		_iter_end_24eeaa486:;;
	} else {
		{
			auto &expr = (*_self_)._field_TypeAliases;
			auto it = expr.begin();
			_iter_begin_24eeaa73e:;
			if (it != expr.end()) {
				jule::Ptr<_249caea98_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;
					};
				}
				_iter_next_24eeaa73e:;
				++it;
				goto _iter_begin_24eeaa73e;
			}
			_iter_end_24eeaa73e:;
		};
	};
	return nullptr;
}



inline jule::Any _249c7d2c5_defByIdent(_249c7a228_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_24eeaca93:;
		if (it != expr.end()) {
			jule::Ptr<_249c3702b_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v);
				};
			}
			_iter_next_24eeaca93:;
			++it;
			goto _iter_begin_24eeaca93;
		}
		_iter_end_24eeaca93:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_24eeadcc5:;
		if (it != expr.end()) {
			jule::Ptr<_249caea98_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta);
				};
			}
			_iter_next_24eeadcc5:;
			++it;
			goto _iter_begin_24eeadcc5;
		}
		_iter_end_24eeadcc5:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_24eeaeb3e:;
		if (it != expr.end()) {
			jule::Ptr<_249036b01_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s);
				};
			}
			_iter_next_24eeaeb3e:;
			++it;
			goto _iter_begin_24eeaeb3e;
		}
		_iter_end_24eeaeb3e:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_24eeb0a41:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f);
				};
			}
			_iter_next_24eeb0a41:;
			++it;
			goto _iter_begin_24eeb0a41;
		}
		_iter_end_24eeb0a41:;
	};
	if (_15941_cppLinked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_24eeb1beb:;
		if (it != expr.end()) {
			jule::Ptr<_249bd48d0_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t);
				};
			}
			_iter_next_24eeb1beb:;
			++it;
			goto _iter_begin_24eeb1beb;
		}
		_iter_end_24eeb1beb:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_24eeb2537:;
		if (it != expr.end()) {
			jule::Ptr<_249bd6a25_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e);
				};
			}
			_iter_next_24eeb2537:;
			++it;
			goto _iter_begin_24eeb2537;
		}
		_iter_end_24eeb2537:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_24eeb34d3:;
		if (it != expr.end()) {
			jule::Ptr<_249bd8120_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te);
				};
			}
			_iter_next_24eeb34d3:;
			++it;
			goto _iter_begin_24eeb34d3;
		}
		_iter_end_24eeb34d3:;
	};
	return nullptr;
}



inline jule::Bool _249c7d726_isDuplicatedIdent(_249c7a228_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_24eeb4490:;
		if (it != expr.end()) {
			jule::Ptr<_249c3702b_Var> &_21316_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21316_v) != _21232_itself) && (_21316_v.get()._field_Ident == _21249_ident)) && (_21316_v.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_24eeb4490:;
			++it;
			goto _iter_begin_24eeb4490;
		}
		_iter_end_24eeb4490:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_24eeb50c8:;
		if (it != expr.end()) {
			jule::Ptr<_249caea98_TypeAlias> &_21916_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21916_ta) != _21232_itself) && (_21916_ta.get()._field_Ident == _21249_ident)) && (_21916_ta.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_24eeb50c8:;
			++it;
			goto _iter_begin_24eeb50c8;
		}
		_iter_end_24eeb50c8:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_24eeb53b4:;
		if (it != expr.end()) {
			jule::Ptr<_249036b01_Struct> &_22516_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22516_s) != _21232_itself) && (_22516_s.get()._field_Ident == _21249_ident)) && (_22516_s.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_24eeb53b4:;
			++it;
			goto _iter_begin_24eeb53b4;
		}
		_iter_end_24eeb53b4:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_24eeb65a2:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> &_23116_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23116_f) != _21232_itself) && (_23116_f.get()._field_Ident == _21249_ident)) && (_23116_f.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_24eeb65a2:;
			++it;
			goto _iter_begin_24eeb65a2;
		}
		_iter_end_24eeb65a2:;
	};
	if (_21261_cppLinked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_24eeb93b8:;
		if (it != expr.end()) {
			jule::Ptr<_249bd48d0_Trait> &_24116_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24116_t) != _21232_itself) && (_24116_t.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_24eeb93b8:;
			++it;
			goto _iter_begin_24eeb93b8;
		}
		_iter_end_24eeb93b8:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_24eeb98b3:;
		if (it != expr.end()) {
			jule::Ptr<_249bd6a25_Enum> &_24716_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24716_e) != _21232_itself) && (_24716_e.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_24eeb98b3:;
			++it;
			goto _iter_begin_24eeb98b3;
		}
		_iter_end_24eeb98b3:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_24eeb9ee0:;
		if (it != expr.end()) {
			jule::Ptr<_249bd8120_TypeEnum> &_25316_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25316_te) != _21232_itself) && (_25316_te.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_24eeb9ee0:;
			++it;
			goto _iter_begin_24eeb9ee0;
		}
		_iter_end_24eeb9ee0:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _249c7a228_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _249c8043c_IsNil(_249c80052_Data* _self_) {
	return _249cb16b0_IsNil((*_self_)._field_Kind.ptr());
}



inline jule::Bool _249c806a1_IsVoid(_249c80052_Data* _self_) {
	return _249cb1924_Void((*_self_)._field_Kind.ptr());
}



inline jule::Bool _249c80915_IsConst(_249c80052_Data* _self_) {
	return ((*_self_)._field_Constant != nullptr);
}



inline jule::Bool _249c80c23_GoodOperand(_249c80052_Data* _self_, jule::Ptr<_249c80052_Data>& _9831_other) {
	if ((_249cb334e_TypeEnum(_9831_other.get()._field_Kind.ptr()) != nullptr)) {
		return false;
	};
	return ((((_249cb289d_Prim(_9831_other.get()._field_Kind.ptr()) == nullptr) || (!(_249cb870b_IsAny(_249cb289d_Prim(_9831_other.get()._field_Kind.ptr()).ptr())))) && (_249cb4064_Trait(_9831_other.get()._field_Kind.ptr()) == nullptr)) && (!(_249cb16b0_IsNil((*_self_)._field_Kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _249c80052_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249c810ca_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _249c820cb_pushErr(_249c81ac0_Eval* _self_, jule::Ptr<_23abd3d83_Token> _12926_token, jule::Str _12941_fmt, jule::Slice<jule::Any> _12954_args) {
	_249c1be89_pushErr((*_self_)._field_s.ptr(), _12926_token,_12941_fmt,jule::Any(_12954_args));
}



inline void _249c823ea_pushSugggestion(_249c81ac0_Eval* _self_, jule::Str _13434_fmt, jule::Slice<jule::Any> _13447_args) {
	_249c1c2a8_pushSugggestion((*_self_)._field_s.ptr(), _13434_fmt,jule::Any(_13447_args));
}



inline void _249c825c6_allowBuiltin(_249c81ac0_Eval* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _249c827a2_disallowBuiltin(_249c81ac0_Eval* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Bool _249c82a16_isUnsafe(_249c81ac0_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _249c82c7a_isGlobal(_249c81ac0_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_249c192c7_Sema>>()) {
			_case_begin_250005404:;
			{
				return true;
			}
		}
		else {
			_case_begin_250004777:;
			{
				return false;
			}
		}
		_match_end_250004c61:;
	};
}



inline jule::Bool _249c83055_applyNumericPrefix(_249c81ac0_Eval* _self_, jule::Ptr<_249c80052_Data>& _16142_d) {
	if (((((_16142_d == nullptr) || (!(_249c80915_IsConst(_16142_d.ptr())))) || (_249cb289d_Prim(_16142_d.get()._field_Kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_249cb5263_Prim> _16813_prim = _249cb289d_Prim((*_self_)._field_prefix.ptr());;
	if ((_16813_prim == nullptr)) {
		return false;
	};
	{
		
		if (_249bc442a_IsFloat(_249cb55c6_Str(_16813_prim.ptr()))) {
			_case_begin_25000767b:;
			{
				_16142_d.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>((*((*_self_)._field_prefix)));
				_24917b828_SetF64(_16142_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_24916922d_AsF64(_16142_d.get()._field_Constant.ptr())));
			}
		}
		else if (_249bc4084_IsSigInt(_249cb55c6_Str(_16813_prim.ptr()))) {
			_case_begin_2500076e2:;
			{
				if ((!(_249c50ac2_sigAssignable(_249cb55c6_Str(_16813_prim.ptr()),_16142_d)))) {
					return false;
				};
				_16142_d.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>((*((*_self_)._field_prefix)));
				_24916a0db_SetI64(_16142_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_249168260_AsI64(_16142_d.get()._field_Constant.ptr())));
			}
		}
		else if (_249bc41b6_IsUnsigInt(_249cb55c6_Str(_16813_prim.ptr()))) {
			_case_begin_250007758:;
			{
				if ((!(_249c67886_unsigAssignable(_249cb55c6_Str(_16813_prim.ptr()),_16142_d)))) {
					return false;
				};
				_16142_d.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>((*((*_self_)._field_prefix)));
				_24917646b_SetU64(_16142_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_24915c3a8_AsU64(_16142_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_25000799a:;
	};
	return true;
}



inline jule::Ptr<_249c80052_Data> _249c832b9_litNil(_249c81ac0_Eval* _self_) {
	jule::Ptr<_2491152a6_Const> _19717_constant = static__24915a95b_NewNil();;
	return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=nullptr}), ._field_Model=static_cast<jule::Any>(_19717_constant), ._field_Constant=_19717_constant});
}



inline jule::Ptr<_249c80052_Data> _249c835c7_litStr(_249c81ac0_Eval* _self_, jule::Ptr<_24904b929_LitExpr>& _20522_l) {
	jule::Str _20617_s = _20522_l.get()._field_Value.slice(1LL,(_20522_l.get()._field_Value.len() - 1LL));;
	if (_23abd51d6_IsRawStr(_20522_l.get()._field_Value)) {
		_20617_s=_249c67b94_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20617_s));
	} else {
		_20617_s=_249c67e4c_ToStr(static_cast<jule::Slice<jule::U8>>(_20617_s));
	};
	jule::Ptr<_2491152a6_Const> _21217_constant = static__249159020_NewStr(_20617_s);;
	return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_21217_constant), ._field_Constant=_21217_constant});
}



inline jule::Ptr<_249c80052_Data> _249c838d5_litBool(_249c81ac0_Eval* _self_, jule::Ptr<_24904b929_LitExpr>& _22323_l) {
	jule::Ptr<_2491152a6_Const> _22417_constant = static__2491571c7_NewBool((_22323_l.get()._field_Value == jule::Str("true", 4)));;
	return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Model=static_cast<jule::Any>(_22417_constant), ._field_Constant=_22417_constant});
}



inline jule::Ptr<_249c80052_Data> _249c83be3_litRune(_249c81ac0_Eval* _self_, jule::Ptr<_24904b929_LitExpr>& _23423_l) {
	;
	;
	jule::Str _23913_lt = _23423_l.get()._field_Value.slice(1LL,(_23423_l.get()._field_Value.len() - 1LL));;
	jule::I32 _24013_r = _249c506a4_ToRune(static_cast<jule::Slice<jule::U8>>(_23913_lt));;
	jule::Ptr<_249c80052_Data> _24117_data = jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Constant=static__2491257e4_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24013_r)))});;
	jule::Bool _24513_isAscii = _249c50572_IsAscii(_24013_r);;
	if (_24513_isAscii) {
		_24117_data.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_24117_data.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_24117_data.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bcb0d0_RuneExprModel>(_249bcb0d0_RuneExprModel{._field_Code=_24013_r}));
	_24117_data.get()._field_IsRune=true;
	_24117_data.get()._field_untyped=true;
	return _24117_data;
}



inline jule::Ptr<_249c80052_Data> _249c84001_litFloat(_249c81ac0_Eval* _self_, jule::Ptr<_24904b929_LitExpr>& _26224_l) {
	;
	jule::F64 _26413_f = ({
		auto except = _249a3a0a4_ParseFloat(_26224_l.get()._field_Value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_2491152a6_Const> _26517_constant = static__24915a20d_NewF64(_26413_f);;
	return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_untyped=true, ._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_26517_constant), ._field_Constant=_26517_constant});
}



inline jule::Ptr<_249c80052_Data> _249c8430e_litInt(_249c81ac0_Eval* _self_, jule::Ptr<_24904b929_LitExpr>& _27626_l) {
	;
	jule::Str _27917_lit = _27626_l.get()._field_Value;;
	jule::I64 _28017_base = 0LL;;
	{
		
		if (_23a82a128_HasPrefix(_27917_lit,jule::Str("0x", 2))) {
			_case_begin_250019924:;
			{
				(_27917_lit).mut_slice(2LL);;
				_28017_base=16LLU;
			}
		}
		else if (_23a82a128_HasPrefix(_27917_lit,jule::Str("0b", 2))) {
			_case_begin_25001998a:;
			{
				(_27917_lit).mut_slice(2LL);;
				_28017_base=2LLU;
			}
		}
		else if (_23a82a128_HasPrefix(_27917_lit,jule::Str("0o", 2))) {
			_case_begin_250019a01:;
			{
				(_27917_lit).mut_slice(2LL);;
				_28017_base=8LLU;
			}
		}
		else if (((_27917_lit[0LL] == '0') && (_27917_lit.len() > 1LL))) {
			_case_begin_2500195e4:;
			{
				(_27917_lit).mut_slice(1LL);;
				_28017_base=8LLU;
			}
		}
		else {
			_case_begin_25001957d:;
			{
				_28017_base=10LLU;
			}
		}
		_match_end_250019528:;
	};
	jule::Ptr<_249c80052_Data> _30017_d = jule::new_ptr<_249c80052_Data>();;
	jule::Bool _30217_ok = true;;
	jule::I64 _30313_sig = ({
		auto except = _2498cb5e9_ParseInt(_27917_lit,_28017_base,64LL);
		(except.ok()) ? (except.result) : ({
			_30217_ok=false;
			0LL;
		});
	});;
	if (_30217_ok) {
		_30017_d.get()._field_Constant=static__2491257e4_NewI64(_30313_sig);
		_30017_d.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _31317_unsig = ({
			auto except = _249849b0b_ParseUint(_27917_lit,_28017_base,64LL);
			(except.ok()) ? (except.result) : ({
				_249c820cb_pushErr(&(*_self_), _27626_l.get()._field_Token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_249c823ea_pushSugggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_30017_d.get()._field_Constant=static__24913c82d_NewU64(_31317_unsig);
		_30017_d.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_30017_d.get()._field_Model=static_cast<jule::Any>(_30017_d.get()._field_Constant);
	if ((!(_249c83055_applyNumericPrefix(&(*_self_), _30017_d)))) {
		_249caa4cd_fitBitsize(_30017_d);
	};
	_30017_d.get()._field_untyped=true;
	return _30017_d;
}



inline jule::Ptr<_249c80052_Data> _249c8461c_litNum(_249c81ac0_Eval* _self_, jule::Ptr<_24904b929_LitExpr>& _33526_l) {
	{
		
		if (_23abd5d41_IsFloat(_33526_l.get()._field_Value)) {
			_case_begin_2500233de:;
			{
				return _249c84001_litFloat(&(*_self_), _33526_l);
			}
		}
		else {
			_case_begin_250022b6e:;
			{
				return _249c8430e_litInt(&(*_self_), _33526_l);
			}
		}
		_match_end_250022a92:;
	};
}



inline jule::Ptr<_249c80052_Data> _249c8492a_evalLit(_249c81ac0_Eval* _self_, jule::Ptr<_24904b929_LitExpr> _34426_lit) {
	{
		
		if (_24904bc7b_IsNil(_34426_lit.ptr())) {
			_case_begin_2500246ba:;
			{
				return _249c832b9_litNil(&(*_self_));
			}
		}
		else if (_23abd4e3e_IsStr(_34426_lit.get()._field_Value)) {
			_case_begin_250024038:;
			{
				return _249c835c7_litStr(&(*_self_), _34426_lit);
			}
		}
		else if (_23abd5a99_IsBool(_34426_lit.get()._field_Value)) {
			_case_begin_25002409e:;
			{
				return _249c838d5_litBool(&(*_self_), _34426_lit);
			}
		}
		else if (_23abd547d_IsRune(_34426_lit.get()._field_Value)) {
			_case_begin_250024126:;
			{
				return _249c83be3_litRune(&(*_self_), _34426_lit);
			}
		}
		else if (_23abd60d8_IsNum(_34426_lit.get()._field_Value)) {
			_case_begin_25002419d:;
			{
				return _249c8461c_litNum(&(*_self_), _34426_lit);
			}
		}
		else {
			_case_begin_250023a0a:;
			{
				return nullptr;
			}
		}
		_match_end_250023950:;
	};
}



inline jule::Any _249c84c38_findBuiltins(_249c81ac0_Eval* _self_, jule::Str _36131_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_249c1117b_ImportInfo>>()) {
			_case_begin_2500249c8:;
			{
				jule::Any _36421_def = _249caa2be_findBuiltinsImport(_36131_ident,(*_self_)._field_lookup.operator jule::Ptr<_249c1117b_ImportInfo>());;
				if ((_36421_def != nullptr)) {
					return jule::Any(_36421_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249c192c7_Sema>>()) {
			_case_begin_2500270c4:;
			{
				jule::Any _36921_def = _249caae5c_findBuiltinsSema(_36131_ident,(*_self_)._field_lookup.operator jule::Ptr<_249c192c7_Sema>());;
				if ((_36921_def != nullptr)) {
					return jule::Any(_36921_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be9296_scopeChecker>>()) {
			_case_begin_25002713a:;
			{
				jule::Any _37421_def = _249caae5c_findBuiltinsSema(_36131_ident,(*_self_)._field_lookup.operator jule::Ptr<_249be9296_scopeChecker>().get()._field_s);;
				if ((_37421_def != nullptr)) {
					return jule::Any(_37421_def);
				};
			}
		}
		_match_end_250024973:;
	};
	if ((*_self_)._field_disBuiltin) {
		return nullptr;
	};
	return jule::Any(_249cdb872_findBuiltinDef(_36131_ident));
}



inline jule::Any _249c850e0_getDef(_249c81ac0_Eval* _self_, jule::Str _38525_ident, jule::Bool _38537_cppLinked) {
	jule::Ptr<_249c3702b_Var> _39017_v = _249ccb3bc_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._249cc9c39_FindVar((*_self_)._field_lookup, _38525_ident,_38537_cppLinked);;
	if ((_39017_v != nullptr)) {
		return jule::Any(_39017_v);
	};
	jule::Ptr<_249caea98_TypeAlias> _39517_ta = _249ccb3bc_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._249cca0e1_FindTypeAlias((*_self_)._field_lookup, _38525_ident,_38537_cppLinked);;
	if ((_39517_ta != nullptr)) {
		return jule::Any(_39517_ta);
	};
	if ((!(_38537_cppLinked))) {
		jule::Ptr<_249bd6a25_Enum> _40121_enm = _249ccb3bc_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._249ccae6b_FindEnum((*_self_)._field_lookup, _38525_ident);;
		if ((_40121_enm != nullptr)) {
			return jule::Any(_40121_enm);
		};
		jule::Ptr<_249bd8120_TypeEnum> _40621_tenm = _249ccb3bc_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._249ccb279_FindTypeEnum((*_self_)._field_lookup, _38525_ident);;
		if ((_40621_tenm != nullptr)) {
			return jule::Any(_40621_tenm);
		};
	};
	jule::Ptr<_249bcbe38_Fn> _41217_f = _249ccb3bc_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._249cca850_FindFn((*_self_)._field_lookup, _38525_ident,_38537_cppLinked);;
	if ((_41217_f != nullptr)) {
		return jule::Any(_41217_f);
	};
	jule::Ptr<_249036b01_Struct> _41717_s = _249ccb3bc_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._249cca498_FindStruct((*_self_)._field_lookup, _38525_ident,_38537_cppLinked);;
	if ((_41717_s != nullptr)) {
		return jule::Any(_41717_s);
	};
	return jule::Any(_249c84c38_findBuiltins(&(*_self_), _38525_ident));
}



inline void _25003e3e9_pushReference(_249c81ac0_Eval* _self_, jule::Ptr<_249bcc312_FnIns>& _42540_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_249be9296_scopeChecker>>()) {
			_case_begin_250041819:;
			{
				jule::Ptr<_249be9296_scopeChecker> _42821_sc = _249bec61d_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_249be9296_scopeChecker>());;
				if ((!(_250041d36_Exist(_42821_sc.get()._field_owner.get()._field_Refers.ptr(), _42540_ref)))) {
					_249bcd368_Push(_42821_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_42540_ref));
				};
			}
		}
		else {
			_case_begin_2500408b2:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_250041d36_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _42540_ref))))) {
					_249bcd368_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_42540_ref));
				};
			}
		}
		_match_end_25004085c:;
	};
}

inline void _2500551ac_pushReference(_249c81ac0_Eval* _self_, jule::Ptr<_249c3702b_Var>& _42540_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_249be9296_scopeChecker>>()) {
			_case_begin_250057401:;
			{
				jule::Ptr<_249be9296_scopeChecker> _42821_sc = _249bec61d_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_249be9296_scopeChecker>());;
				if ((!(_25005791d_Exist(_42821_sc.get()._field_owner.get()._field_Refers.ptr(), _42540_ref)))) {
					_249bcd368_Push(_42821_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_42540_ref));
				};
			}
		}
		else {
			_case_begin_250056499:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_25005791d_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _42540_ref))))) {
					_249bcd368_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_42540_ref));
				};
			}
		}
		_match_end_250056444:;
	};
}

inline void _250101115_pushReference(_249c81ac0_Eval* _self_, jule::Ptr<_249062e4b_StructIns>& _42540_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_249be9296_scopeChecker>>()) {
			_case_begin_250103425:;
			{
				jule::Ptr<_249be9296_scopeChecker> _42821_sc = _249bec61d_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_249be9296_scopeChecker>());;
				if ((!(_250103942_Exist(_42821_sc.get()._field_owner.get()._field_Refers.ptr(), _42540_ref)))) {
					_249bcd368_Push(_42821_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_42540_ref));
				};
			}
		}
		else {
			_case_begin_2501024bd:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_250103942_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _42540_ref))))) {
					_249bcd368_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_42540_ref));
				};
			}
		}
		_match_end_250102468:;
	};
}



inline jule::Ptr<_249c80052_Data> _249c85673__evalEnum(_249c81ac0_Eval* _self_, jule::Ptr<_249bd6a25_Enum> _43928_enm) {
	return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_43928_enm, 3)}), ._field_Decl=true, });
}



inline jule::Ptr<_249c80052_Data> _249c85a2a_evalEnum(_249c81ac0_Eval* _self_, jule::Ptr<_249bd6a25_Enum> _44831_enm, jule::Ptr<_23abd3d83_Token> _44843_errorToken) {
	if ((!(_249c1c660_isAccessibleDefine((*_self_)._field_s.ptr(), _44831_enm.get()._field_Public,_44831_enm.get()._field_Token)))) {
		_249c820cb_pushErr(&(*_self_), _44843_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_44831_enm.get()._field_Ident)}));
		_249c823ea_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _249c85673__evalEnum(&(*_self_), _44831_enm);
}



inline jule::Ptr<_249c80052_Data> _249c85d38__evalTypeEnum(_249c81ac0_Eval* _self_, jule::Ptr<_249bd8120_TypeEnum> _45732_enm) {
	return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_45732_enm, 4)}), ._field_Decl=true, });
}



inline jule::Ptr<_249c80052_Data> _249c861e0_evalTypeEnum(_249c81ac0_Eval* _self_, jule::Ptr<_249bd8120_TypeEnum> _46635_enm, jule::Ptr<_23abd3d83_Token> _46651_errorToken) {
	if ((!(_249c1c660_isAccessibleDefine((*_self_)._field_s.ptr(), _46635_enm.get()._field_Public,_46635_enm.get()._field_Token)))) {
		_249c820cb_pushErr(&(*_self_), _46651_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_46635_enm.get()._field_Ident)}));
		_249c823ea_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _249c85d38__evalTypeEnum(&(*_self_), _46635_enm);
}



inline jule::Ptr<_249c80052_Data> _249c864ed__evalStruct(_249c81ac0_Eval* _self_, jule::Ptr<_249062e4b_StructIns> _47530_s) {
	return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_47530_s, 0)}), ._field_Model=static_cast<jule::Any>(_47530_s), ._field_Decl=true, });
}



inline jule::Ptr<_249c80052_Data> _249c868a5_evalStruct(_249c81ac0_Eval* _self_, jule::Ptr<_249062e4b_StructIns> _48533_s, jule::Ptr<_23abd3d83_Token> _48548_errorToken) {
	if ((!(_249c1c660_isAccessibleDefine((*_self_)._field_s.ptr(), _48533_s.get()._field_Decl.get()._field_Public,_48533_s.get()._field_Decl.get()._field_Token)))) {
		_249c820cb_pushErr(&(*_self_), _48548_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_48533_s.get()._field_Decl.get()._field_Ident)}));
		_249c823ea_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_249c86ed2_checkDeprecated(&(*_self_), _48533_s.get()._field_Decl.get()._field_Directives,_48548_errorToken);
	return _249c864ed__evalStruct(&(*_self_), _48533_s);
}



inline jule::Ptr<_249c80052_Data> _249c86bb3_evalFnIns(_249c81ac0_Eval* _self_, jule::Ptr<_249bcc312_FnIns> _49528_f) {
	return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_49528_f, 1)}), ._field_Model=static_cast<jule::Any>(_49528_f), });
}



inline void _249c86ed2_checkDeprecated(_249c81ac0_Eval* _self_, jule::Slice<jule::Ptr<_24900cb2c_Directive>>& _50439_directives, jule::Ptr<_23abd3d83_Token> _50470_tok) {
	if (_249c82a16_isUnsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_24900cb2c_Directive> _50913_d = _249ca9e39_findDirective(_50439_directives,jule::Str("deprecated", 10));;
	if ((_50913_d != nullptr)) {
		if ((_50913_d.get()._field_Args.len() == 0LL)) {
			_249c820cb_pushErr(&(*_self_), _50470_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_249c820cb_pushErr(&(*_self_), _50470_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_50913_d.get()._field_Args[0LL].get()._field_Kind)}));
		};
		_249c823ea_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_249c80052_Data> _249c87389_evalFn(_249c81ac0_Eval* _self_, jule::Ptr<_249bcbe38_Fn> _52029_f, jule::Ptr<_23abd3d83_Token> _52037_errorToken) {
	if ((!(_249c1c660_isAccessibleDefine((*_self_)._field_s.ptr(), _52029_f.get()._field_Public,_52029_f.get()._field_Token)))) {
		_249c820cb_pushErr(&(*_self_), _52037_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52029_f.get()._field_Ident)}));
		_249c823ea_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_249c86ed2_checkDeprecated(&(*_self_), _52029_f.get()._field_Directives,_52037_errorToken);
	jule::Ptr<_249bcc312_FnIns> _52917_ins = _2490a2b8e_instance(_52029_f);;
	_25003e3e9_pushReference(&(*_self_), _52917_ins);
	return _249c86bb3_evalFnIns(&(*_self_), _52917_ins);
}



inline void _249c87752_pushIllegalCycleError(_249c81ac0_Eval* _self_, jule::Ptr<_249c3702b_Var>& _53441_v1, jule::Ptr<_249c3702b_Var>& _53452_v2, jule::Str& _53467_message) {
	;
	jule::Str _53613_refers_to = _23a8a61e8_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_53441_v1.get()._field_Ident),jule::Any(_53452_v2.get()._field_Ident)}));;
	(_53467_message).buffer.insert(0, (((_23a811c47_Repeat(jule::Str(" ", 1),4LL) + _53613_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _249c87b09_checkCrossCycle(_249c81ac0_Eval* _self_, jule::Ptr<_249c3702b_Var>& _54035_v, jule::Str& _54049_message) {
	{
		auto &expr = _54035_v.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_250047479:;
		if (it != expr.end()) {
			jule::Ptr<_249c3702b_Var> &_54116_d = *it;
			{
				if ((_54116_d == (*_self_)._field_owner)) {
					_249c87752_pushIllegalCycleError(&(*_self_), _54035_v,_54116_d,_54049_message);
					return false;
				};
				if ((!(_249c87b09_checkCrossCycle(&(*_self_), _54116_d,_54049_message)))) {
					_249c87752_pushIllegalCycleError(&(*_self_), _54035_v,_54116_d,_54049_message);
					return false;
				};
			}
			_iter_next_250047479:;
			++it;
			goto _iter_begin_250047479;
		}
		_iter_end_250047479:;
	};
	return true;
}



inline jule::Bool _249c87eb1_checkIllegalCycles(_249c81ac0_Eval* _self_, jule::Ptr<_249c3702b_Var>& _55942_v, jule::Ptr<_23abd3d83_Token> _55951_decl_token) {
	jule::Bool _55973_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_55973_ok = true;
		return _55973_ok;
	};
	if (((*_self_)._field_owner == _55942_v)) {
		_249c820cb_pushErr(&(*_self_), (*_self_)._field_owner.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_Ident)}));
		_55973_ok = false;
		return _55973_ok;
	};
	jule::Str _57117_message = jule::Str();;
	if ((!(_249c87b09_checkCrossCycle(&(*_self_), _55942_v,_57117_message)))) {
		jule::Str _57421_errMsg = _57117_message;;
		_57117_message=jule::Str();
		_249c87752_pushIllegalCycleError(&(*_self_), (*_self_)._field_owner,_55942_v,_57117_message);
		_57421_errMsg+=_57117_message;
		_249c820cb_pushErr(&(*_self_), _55951_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_57421_errMsg)}));
		_55973_ok = false;
		return _55973_ok;
	};
	(*_self_)._field_owner.get()._field_Depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_Depends,1);(*_self_)._field_owner.get()._field_Depends.__push(_55942_v);;
	_55973_ok = true;
	return _55973_ok;
}



inline jule::Ptr<_249c80052_Data> _249c88368_evalVar(_249c81ac0_Eval* _self_, jule::Ptr<_249c3702b_Var> _58630_v, jule::Ptr<_23abd3d83_Token> _58639_errorToken) {
	if ((!(_249c1c660_isAccessibleDefine((*_self_)._field_s.ptr(), _58630_v.get()._field_Public,_58630_v.get()._field_Token)))) {
		_249c820cb_pushErr(&(*_self_), _58639_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_58630_v.get()._field_Ident)}));
		_249c823ea_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_249c86ed2_checkDeprecated(&(*_self_), _58630_v.get()._field_Directives,_58639_errorToken);
	_58630_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_249c192c7_Sema>>()) {
			_case_begin_2500508a0:;
			{
				jule::Bool _60017_ok = _249c87eb1_checkIllegalCycles(&(*_self_), _58630_v,_58639_errorToken);;
				if ((!(_60017_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be9296_scopeChecker>>()) {
			_case_begin_250050949:;
			{
				if (((!(_58630_v.get()._field_Reference)) || _249c82a16_isUnsafe(&(*_self_)))) {
					goto _match_end_25005084a;
				};
				jule::Ptr<_249be9296_scopeChecker> _60821_s = (*_self_)._field_lookup.operator jule::Ptr<_249be9296_scopeChecker>();;
				while (((_60821_s.get()._field_owner == nullptr) && (_60821_s.get()._field_parent != nullptr))) {
					{
						_60821_s=_60821_s.get()._field_parent;
					}
				_iter_next_250052cd1:;
				}
				_iter_end_250052cd1:;;
				if ((((_60821_s.get()._field_owner != nullptr) && _60821_s.get()._field_owner.get()._field_Anon) && (_58630_v.get()._field_Scope != _60821_s.get()._field_owner.get()._field_Scope))) {
					_249c820cb_pushErr(&(*_self_), _58639_errorToken,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_58630_v.get()._field_Ident)}));
				};
			}
		}
		_match_end_25005084a:;
	};
	if ((_58630_v.get()._field_Scope == nullptr)) {
		_2500551ac_pushReference(&(*_self_), _58630_v);
	};
	if (((!(_58630_v.get()._field_CppLinked)) && ((_58630_v.get()._field_Value == nullptr) || (_58630_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_58630_v.get()._field_Constant) {
			_249c2ea90_checkTypeVar((*_self_)._field_s, _58630_v,jule::Trait<_249ccb3bc_Lookup>((*_self_)._field_s, 3));
			if ((_58630_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_58630_v.get()._field_Kind == nullptr) || (_58630_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_58630_v.get()._field_Scope != nullptr)) {
			return nullptr;
		};
		_249c2ea90_checkTypeVar((*_self_)._field_s, _58630_v,(*_self_)._field_lookup);
		if (((_58630_v.get()._field_Kind == nullptr) || (_58630_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_249c80052_Data> _65117_d = jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=_58630_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_58630_v.get()._field_Mutable, ._field_Reference=_58630_v.get()._field_Reference, ._field_Lvalue=(!(_58630_v.get()._field_Constant)), ._field_Model=static_cast<jule::Any>(_58630_v), });;
	if ((((!(_58630_v.get()._field_CppLinked)) && _249c373e4_IsInitialized(_58630_v.ptr())) && (_58630_v.get()._field_Value.get()._field_Data != nullptr))) {
		_65117_d.get()._field_IsRune=_58630_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_58630_v.get()._field_Constant && (_58630_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_65117_d.get()._field_Constant=jule::new_ptr<_2491152a6_Const>((*(_58630_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_65117_d.get()._field_Model=static_cast<jule::Any>(_65117_d.get()._field_Constant);
		if (_249c378bc_untypedConstant(_58630_v.ptr())) {
			_249c83055_applyNumericPrefix(&(*_self_), _65117_d);
			_65117_d.get()._field_untyped=true;
		};
	};
	return _65117_d;
}



inline jule::Ptr<_249c80052_Data> _249c88720_evalTypeAlias(_249c81ac0_Eval* _self_, jule::Ptr<_249caea98_TypeAlias> _67536_ta, jule::Ptr<_23abd3d83_Token> _67552_errorToken) {
	if ((!(_249c1c660_isAccessibleDefine((*_self_)._field_s.ptr(), _67536_ta.get()._field_Public,_67536_ta.get()._field_Token)))) {
		_249c820cb_pushErr(&(*_self_), _67552_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_67536_ta.get()._field_Ident)}));
		_249c823ea_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_67536_ta.get()._field_Used=true;
	jule::Trait<_249cb035c_Kind> _68417_kind = _67536_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_249c80052_Data> _68517_d = nullptr;;
	{
		auto &_match_expr{ _68417_kind };
		
		if (_match_expr.type_is<jule::Ptr<_249062e4b_StructIns>>()) {
			_case_begin_2500673cd:;
			{
				_68517_d=_249c864ed__evalStruct(&(*_self_), _68417_kind.operator jule::Ptr<_249062e4b_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bd6a25_Enum>>()) {
			_case_begin_250067de5:;
			{
				_68517_d=_249c85673__evalEnum(&(*_self_), _68417_kind.operator jule::Ptr<_249bd6a25_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bd8120_TypeEnum>>()) {
			_case_begin_2500665db:;
			{
				_68517_d=_249c85d38__evalTypeEnum(&(*_self_), _68417_kind.operator jule::Ptr<_249bd8120_TypeEnum>());
			}
		}
		else {
			_case_begin_2500664ba:;
			{
				_68517_d=jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=_67536_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_67536_ta.get()._field_CppLinked) {
					_68517_d.get()._field_Kind.get()._field_CppIdent=_67536_ta.get()._field_Ident;
				} else {
					_68517_d.get()._field_Kind.get()._field_CppIdent=_67536_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_68517_d.get()._field_Model=static_cast<jule::Any>(_68517_d.get()._field_Kind);
			}
		}
		_match_end_250066465:;
	};
	_68517_d.get()._field_Kind.get()._field_Generic=_67536_ta.get()._field_Generic;
	return _68517_d;
}



inline jule::Ptr<_249c80052_Data> _249c88ac7_evalDef(_249c81ac0_Eval* _self_, jule::Any _71130_def, jule::Ptr<_23abd3d83_Token> _71140_ident) {
	{
		auto &_match_expr{ _71130_def };
		
		if (_match_expr.type_is<jule::Ptr<_249c3702b_Var>>()) {
			_case_begin_25006a9a8:;
			{
				return _249c88368_evalVar(&(*_self_), _71130_def.operator jule::Ptr<_249c3702b_Var>(),_71140_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bd6a25_Enum>>()) {
			_case_begin_25006aa1e:;
			{
				return _249c85a2a_evalEnum(&(*_self_), _71130_def.operator jule::Ptr<_249bd6a25_Enum>(),_71140_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bd8120_TypeEnum>>()) {
			_case_begin_25006aa85:;
			{
				return _249c861e0_evalTypeEnum(&(*_self_), _71130_def.operator jule::Ptr<_249bd8120_TypeEnum>(),_71140_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249036b01_Struct>>()) {
			_case_begin_25006aaeb:;
			{
				return _249c868a5_evalStruct(&(*_self_), _249012d63_instance(_71130_def.operator jule::Ptr<_249036b01_Struct>()),_71140_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcbe38_Fn>>()) {
			_case_begin_25006ab73:;
			{
				jule::Ptr<_249bcbe38_Fn> _72221_f = _71130_def.operator jule::Ptr<_249bcbe38_Fn>();;
				if ((_72221_f.get()._field_Ident != jule::Str("init", 4))) {
					return _249c87389_evalFn(&(*_self_), _72221_f,_71140_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcc312_FnIns>>()) {
			_case_begin_25006abea:;
			{
				return _249c86bb3_evalFnIns(&(*_self_), _71130_def.operator jule::Ptr<_249bcc312_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249caea98_TypeAlias>>()) {
			_case_begin_25006ac72:;
			{
				return _249c88720_evalTypeAlias(&(*_self_), _71130_def.operator jule::Ptr<_249caea98_TypeAlias>(),_71140_ident);
			}
		}
		_match_end_25006a8a9:;
	};
	_249c820cb_pushErr(&(*_self_), _71140_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_71140_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_249c80052_Data> _249c88dd5_evalIdent(_249c81ac0_Eval* _self_, jule::Ptr<_24904c95d_IdentExpr> _73528_ident) {
	jule::Any _73617_def = _249c850e0_getDef(&(*_self_), _73528_ident.get()._field_Ident,_73528_ident.get()._field_CppLinked);;
	return _249c88ac7_evalDef(&(*_self_), jule::Any(_73617_def),_73528_ident.get()._field_Token);
}



inline jule::Ptr<_249c80052_Data> _249c891e3_evalUnary(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_24904d167_UnaryExpr> _74033_u) {
	_249ca2409_unaryEval _74117_unary = static__249ca28b0_new(_self_);;
	return _249ca3b58_eval(&_74117_unary, _74033_u);
}



inline jule::Ptr<_249c80052_Data> _249c89501_evalVariadic(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_24904d51e_VariadicExpr> _74536_v) {
	if ((_74536_v.get()._field_Expr == nullptr)) {
		_249c820cb_pushErr(_self_.ptr(), _74536_v.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_249cb078b_TypeKind> _75117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_75117_prefix;
	});;
	jule::Ptr<_249c80052_Data> _75517_d = _249ca186a_evalExprKind(_self_, _74536_v.get()._field_Expr.get()._field_Kind);;
	if ((_75517_d == nullptr)) {
		return nullptr;
	};
	if ((!(_249cb2639_Variadicable(_75517_d.get()._field_Kind.ptr())))) {
		_249c820cb_pushErr(_self_.ptr(), _74536_v.get()._field_Token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_75517_d.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_249cb9454_Slc> _76513_slc = _249cb3827_Slc(_75517_d.get()._field_Kind.ptr());;
	_75517_d.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_CppIdent=_76513_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_76513_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_76513_slc.get()._field_Elem.get()._field_Kind});
	return _75517_d;
}



inline jule::Ptr<_249c80052_Data> _249c8980e_evalUnsafe(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_24904c133_UnsafeExpr> _77534_u) {
	jule::Bool _77613_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_249c80052_Data> _77817_d = _249ca186a_evalExprKind(_self_, _77534_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_77613_unsafety;
	return _77817_d;
}



inline jule::Ptr<_249c80052_Data> _249c89b1c_evalArr(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_24905229d_SliceExpr> _78331_s) {
	jule::Ptr<_249cbb5ee_Arr> _78517_pt = _249cb35b3_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_249cbb5ee_Arr> _78717_arr = jule::new_ptr<_249cbb5ee_Arr>(_249cbb5ee_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_78517_pt.get()._field_Elem});;
	jule::Bool _79317_filled = false;;
	if ((_78331_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _78331_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_24904d51e_VariadicExpr>>()) {
				_case_begin_25007b26b:;
				{
					if ((_78331_s.get()._field_Exprs[1LL].get()._field_Kind.operator jule::Ptr<_24904d51e_VariadicExpr>().get()._field_Expr != nullptr)) {
						goto _match_end_25007b1c2;
					};
					if (_78517_pt.get()._field_Auto) {
						_249c820cb_pushErr(_self_.ptr(), _78331_s.get()._field_Token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_79317_filled=true;
					_78331_s.get()._field_Exprs=_78331_s.get()._field_Exprs.slice(0LL,1LL);
				}
			}
			_match_end_25007b1c2:;
		};
	};
	_78717_arr.get()._field_N=static_cast<jule::I64>(_78331_s.get()._field_Exprs.len());
	if ((!(_78517_pt.get()._field_Auto))) {
		if ((_78717_arr.get()._field_N > _78517_pt.get()._field_N)) {
			_249c820cb_pushErr(_self_.ptr(), _78331_s.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_78717_arr.get()._field_N < _78517_pt.get()._field_N)) {
			_78717_arr.get()._field_N=_78517_pt.get()._field_N;
		};
	};
	jule::Ptr<_249bc86c6_ArrayExprModel> _82217_model = jule::new_ptr<_249bc86c6_ArrayExprModel>(_249bc86c6_ArrayExprModel{._field_Kind=_78717_arr, });;
	if (_79317_filled) {
		_82217_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_82217_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL,_78331_s.get()._field_Exprs.len());
	};
	jule::Ptr<_249cb078b_TypeKind> _83117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_78717_arr.get()._field_Elem;
	{
		auto &expr = _78331_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_2500814a2:;
		if (it != expr.end()) {
			jule::Ptr<_24904a8e5_Expr> _83321_elem = *it;
			{
				jule::Ptr<_249c80052_Data> _83421_d = _249ca186a_evalExprKind(_self_, _83321_elem.get()._field_Kind);;
				if ((_83421_d == nullptr)) {
					goto _iter_next_2500814a2;
				};
				_249c23d70_checkAssignType(_self_.get()._field_s, false,_78717_arr.get()._field_Elem,_83421_d,_78331_s.get()._field_Token);
				_82217_model.get()._field_Elems = jule::alloc_for_append(_82217_model.get()._field_Elems,1);_82217_model.get()._field_Elems.__push(_83421_d.get()._field_Model);;
			}
			_iter_next_2500814a2:;
			++it;
			goto _iter_begin_2500814a2;
		}
		_iter_end_2500814a2:;
	};
	_self_.get()._field_prefix=_83117_prefix;
	if (_79317_filled) {
		_82217_model.get()._field_Elems = jule::alloc_for_append(_82217_model.get()._field_Elems,1);_82217_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_78717_arr, 11)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_82217_model), });
}



inline jule::Ptr<_249c80052_Data> _249c8a06d_evalExpSlc(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_24905229d_SliceExpr> _85834_s, jule::Ptr<_249cb078b_TypeKind> _85853_t, jule::Any _85871_first) {
	jule::Ptr<_249cb9454_Slc> _85917_slc = jule::new_ptr<_249cb9454_Slc>(_249cb9454_Slc{._field_Elem=_85853_t});;
	jule::Ptr<_249bc7252_SliceExprModel> _86317_model = jule::new_ptr<_249bc7252_SliceExprModel>(_249bc7252_SliceExprModel{._field_ElemKind=_85853_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL,_85834_s.get()._field_Exprs.len())});;
	if ((_85871_first != nullptr)) {
		_86317_model.get()._field_Elems = jule::alloc_for_append(_86317_model.get()._field_Elems,1);_86317_model.get()._field_Elems.__push(_85871_first);;
		_85834_s.get()._field_Exprs=_85834_s.get()._field_Exprs.slice(1LL);
	};
	jule::Ptr<_249cb078b_TypeKind> _87217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_85917_slc.get()._field_Elem;
	{
		auto &expr = _85834_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_25008772d:;
		if (it != expr.end()) {
			jule::Ptr<_24904a8e5_Expr> _87421_elem = *it;
			{
				jule::Ptr<_249c80052_Data> _87521_d = _249ca186a_evalExprKind(_self_, _87421_elem.get()._field_Kind);;
				if ((_87521_d == nullptr)) {
					goto _iter_next_25008772d;
				};
				_249c23d70_checkAssignType(_self_.get()._field_s, false,_85917_slc.get()._field_Elem,_87521_d,_85834_s.get()._field_Token);
				_86317_model.get()._field_Elems = jule::alloc_for_append(_86317_model.get()._field_Elems,1);_86317_model.get()._field_Elems.__push(_87521_d.get()._field_Model);;
			}
			_iter_next_25008772d:;
			++it;
			goto _iter_begin_25008772d;
		}
		_iter_end_25008772d:;
	};
	_self_.get()._field_prefix=_87217_prefix;
	return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_85917_slc, 8)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_86317_model), });
}



inline jule::Ptr<_249c80052_Data> _249c8a37b_evalSliceExpr(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_24905229d_SliceExpr> _89337_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_249cb35b3_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_25008a720:;
				{
					return _249c89b1c_evalArr(_self_, _89337_s);
				}
			}
			else if ((_249cb3827_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_25008a797:;
				{
					jule::Ptr<_249cb9454_Slc> _89925_pt = _249cb3827_Slc(_self_.get()._field_prefix.ptr());;
					return _249c8a06d_evalExpSlc(_self_, _89337_s,_89925_pt.get()._field_Elem,nullptr);
				}
			}
			_match_end_25008a5ee:;
		};
	};
	jule::Ptr<_249cb078b_TypeKind> _90417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_89337_s.get()._field_Exprs.len() == 0LL)) {
		_249c820cb_pushErr(_self_.ptr(), _89337_s.get()._field_Token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_249c80052_Data> _91217_first_elem = _249ca186a_evalExprKind(_self_, _89337_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_91217_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_249c80052_Data> _91717_d = _249c8a06d_evalExpSlc(_self_, _89337_s,_91217_first_elem.get()._field_Kind,_91217_first_elem.get()._field_Model);;
	_self_.get()._field_prefix=_90417_prefix;
	return _91717_d;
}



inline void _249c8a6bc_checkIntegerIndexingByData(_249c81ac0_Eval* _self_, jule::Ptr<_249c80052_Data>& _92350_d, jule::Ptr<_23abd3d83_Token> _92360_token) {
	jule::Str _92413_err_key = _249cac3d1_checkDataForIntegerIndexing(_92350_d);;
	{
		auto &_match_expr{ _92413_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_2500918be:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_250091ccb:;
			{
				_249c820cb_pushErr(&(*_self_), _92360_token,_92413_err_key,jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_92350_d.get()._field_Kind.ptr()))}));
			}
		}
		else {
			_case_begin_250091490:;
			{
				_249c820cb_pushErr(&(*_self_), _92360_token,_92413_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_2500913a2:;
	};
}



inline void _249c8aa96_indexingPtr(_249c81ac0_Eval* _self_, jule::Ptr<_249c80052_Data>& _93535_d, jule::Ptr<_249c80052_Data>& _93550_index, jule::Ptr<_249052b3e_IndexingExpr>& _93565_i) {
	_249c8a6bc_checkIntegerIndexingByData(&(*_self_), _93550_index,_93565_i.get()._field_Token);
	jule::Ptr<_249cbc05b_Ptr> _93817_ptr = _249cb2d76_Ptr(_93535_d.get()._field_Kind.ptr());;
	{
		
		if (_249cbca2e_IsUnsafe(_93817_ptr.ptr())) {
			_case_begin_250094152:;
			{
				_249c820cb_pushErr(&(*_self_), _93565_i.get()._field_Token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_249c82a16_isUnsafe(&(*_self_))))) {
			_case_begin_2500941b8:;
			{
				_249c820cb_pushErr(&(*_self_), _93565_i.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_250093eed:;
	};
	_93535_d.get()._field_Kind=_93817_ptr.get()._field_Elem;
}



inline void _249c8ae5e_indexingArr(_249c81ac0_Eval* _self_, jule::Ptr<_249c80052_Data>& _95035_d, jule::Ptr<_249c80052_Data>& _95050_index, jule::Ptr<_249052b3e_IndexingExpr>& _95065_i) {
	jule::Ptr<_249cbb5ee_Arr> _95117_arr = _249cb35b3_Arr(_95035_d.get()._field_Kind.ptr());;
	_95035_d.get()._field_Kind=_95117_arr.get()._field_Elem;
	_249c8a6bc_checkIntegerIndexingByData(&(*_self_), _95050_index,_95065_i.get()._field_Token);
	if ((_249c80915_IsConst(_95050_index.ptr()) && (_24916922d_AsF64(_95050_index.get()._field_Constant.ptr()) >= static_cast<jule::F64>(_95117_arr.get()._field_N)))) {
		_249c820cb_pushErr(&(*_self_), _95065_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _249c8b327_indexingSlc(_249c81ac0_Eval* _self_, jule::Ptr<_249c80052_Data>& _95935_d, jule::Ptr<_249c80052_Data>& _95950_index, jule::Ptr<_249052b3e_IndexingExpr>& _95965_i) {
	jule::Ptr<_249cb9454_Slc> _96017_slc = _249cb3827_Slc(_95935_d.get()._field_Kind.ptr());;
	_95935_d.get()._field_Kind=_96017_slc.get()._field_Elem;
	_249c8a6bc_checkIntegerIndexingByData(&(*_self_), _95950_index,_95965_i.get()._field_Token);
	if ((!(_249c80915_IsConst(_95950_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _95935_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_249bc7252_SliceExprModel>>()) {
			_case_begin_25009a19c:;
			{
				jule::Ptr<_249bc7252_SliceExprModel> _97021_m = _95935_d.get()._field_Model.operator jule::Ptr<_249bc7252_SliceExprModel>();;
				jule::F64 _97117_indx = _24916922d_AsF64(_95950_index.get()._field_Constant.ptr());;
				if ((_97117_indx >= static_cast<jule::F64>(_97021_m.get()._field_Elems.len()))) {
					_249c820cb_pushErr(&(*_self_), _95965_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_95935_d.get()._field_Model=_97021_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_97117_indx))];
					_95935_d.get()._field_Decl=true;
				};
			}
		}
		_match_end_25009a147:;
	};
}



inline void _249c8b6e0_indexingMap(_249c81ac0_Eval* _self_, jule::Ptr<_249c80052_Data>& _98135_d, jule::Ptr<_249c80052_Data>& _98150_index, jule::Ptr<_249052b3e_IndexingExpr>& _98169_i) {
	if ((_98150_index == nullptr)) {
		return;;
	};
	jule::Ptr<_249cbaa0a_Map> _98517_m = _249cb42c8_Map(_98135_d.get()._field_Kind.ptr());;
	_249c6a823_assignTypeChecker _98617_atc = _249c6a823_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_98517_m.get()._field_Key, ._field_d=_98150_index, ._field_errorToken=_98169_i.get()._field_Token};;
	_249c6b99a_check(&_98617_atc);
	_98135_d.get()._field_Kind=_98517_m.get()._field_Val;
}



inline void _249c8baa8_indexingStr(_249c81ac0_Eval* _self_, jule::Ptr<_249c80052_Data>& _99635_d, jule::Ptr<_249c80052_Data>& _99650_index, jule::Ptr<_249052b3e_IndexingExpr>& _99665_i) {
	;
	_99635_d.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("u8", 2)), 6)});
	if ((_99650_index == nullptr)) {
		return;;
	};
	_249c8a6bc_checkIntegerIndexingByData(&(*_self_), _99650_index,_99665_i.get()._field_Token);
	if ((!(_249c80915_IsConst(_99650_index.ptr())))) {
		_99635_d.get()._field_Constant=nullptr;
		return;;
	};
	if (_249c80915_IsConst(_99635_d.ptr())) {
		jule::Ptr<_23abd3d83_Token> _101217_errorToken = _99665_i.get()._field_Token;;
		jule::I64 _101317_j = _249168260_AsI64(_99650_index.get()._field_Constant.ptr());;
		jule::Str _101417_s = _249166824_ReadStr(_99635_d.get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_101317_j) >= _101417_s.len())) {
			_249c820cb_pushErr(&(*_self_), _101217_errorToken,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_24917646b_SetU64(_99635_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101417_s[_101317_j])));
		};
	};
}



inline void _249c8be71_toIndexing(_249c81ac0_Eval* _self_, jule::Ptr<_249c80052_Data>& _102334_d, jule::Ptr<_249c80052_Data>& _102349_index, jule::Ptr<_249052b3e_IndexingExpr>& _102368_i) {
	{
		
		if ((_249cb2d76_Ptr(_102334_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2500a58e4:;
			{
				_249c8aa96_indexingPtr(&(*_self_), _102334_d,_102349_index,_102368_i);
				return;;
			}
		}
		else if ((_249cb35b3_Arr(_102334_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2500a596b:;
			{
				_249c8ae5e_indexingArr(&(*_self_), _102334_d,_102349_index,_102368_i);
				return;;
			}
		}
		else if ((_249cb3827_Slc(_102334_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2500a59e3:;
			{
				_249c8b327_indexingSlc(&(*_self_), _102334_d,_102349_index,_102368_i);
				return;;
			}
		}
		else if ((_249cb42c8_Map(_102334_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2500a5a6a:;
			{
				_249c8b6e0_indexingMap(&(*_self_), _102334_d,_102349_index,_102368_i);
				return;;
			}
		}
		else if ((_249cb289d_Prim(_102334_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2500a5ae2:;
			{
				jule::Ptr<_249cb5263_Prim> _103817_prim = _249cb289d_Prim(_102334_d.get()._field_Kind.ptr());;
				{
					
					if (_249cb8497_IsStr(_103817_prim.ptr())) {
						_case_begin_2500aa245:;
						{
							_249c8baa8_indexingStr(&(*_self_), _102334_d,_102349_index,_102368_i);
							return;;
						}
					}
					_match_end_2500aa19b:;
				};
			}
		}
		_match_end_2500a5790:;
	};
	_249c820cb_pushErr(&(*_self_), _102368_i.get()._field_Token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_102334_d.get()._field_Kind.ptr()))}));
}



inline jule::Bool _249c8c3e4_pushGenericsFromExprSubIdent(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_24904e201_SubIdentExpr>& _104853_sexpr, jule::Slice<jule::Ptr<_2490463c4_TypeDecl>>& _104914_generics, jule::Ptr<_24904a8e5_Expr>& _104942_expr) {
	jule::Ptr<_2490470d9_SubIdentTypeDecl> _105017_t = jule::new_ptr<_2490470d9_SubIdentTypeDecl>();;
	if ((!(_249cad1a1_pushSubIdentFromExpr(static_cast<jule::Any>(_104853_sexpr),_105017_t)))) {
		_249c820cb_pushErr(_self_.ptr(), _104942_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	_104914_generics = jule::alloc_for_append(_104914_generics,1);_104914_generics.__push(jule::new_ptr<_2490463c4_TypeDecl>(_2490463c4_TypeDecl{._field_Kind=static_cast<jule::Any>(_105017_t)}));;
	return true;
}



inline jule::Bool _249c8c7ac_pushGenericsFromData(jule::Ptr<_249c81ac0_Eval> _self_, jule::Slice<jule::Ptr<_2490463c4_TypeDecl>>& _105945_generics, jule::Ptr<_24904a8e5_Expr>& _105973_expr) {
	{
		auto &_match_expr{ _105973_expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_24904d167_UnaryExpr>>()) {
			_case_begin_2500ae733:;
			{
				jule::Ptr<_249c80052_Data> _106421_d = _249c891e3_evalUnary(_self_, _105973_expr.get()._field_Kind.operator jule::Ptr<_24904d167_UnaryExpr>());;
				if ((!(_106421_d.get()._field_Decl))) {
					_249c820cb_pushErr(_self_.ptr(), _105973_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_105945_generics = jule::alloc_for_append(_105945_generics,1);_105945_generics.__push(jule::new_ptr<_2490463c4_TypeDecl>(_2490463c4_TypeDecl{._field_Token=_105973_expr.get()._field_Token, ._field_Kind=(*(((jule::Any*)((&(_106421_d.get()._field_Kind.get()._field_Kind))))))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2490463c4_TypeDecl>>()) {
			_case_begin_2500ad9a7:;
			{
				_105945_generics = jule::alloc_for_append(_105945_generics,1);_105945_generics.__push(_105973_expr.get()._field_Kind.operator jule::Ptr<_2490463c4_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904e201_SubIdentExpr>>()) {
			_case_begin_2500ada1d:;
			{
				jule::Ptr<_24904e201_SubIdentExpr> _107621_sexpr = _105973_expr.get()._field_Kind.operator jule::Ptr<_24904e201_SubIdentExpr>();;
				return _249c8c3e4_pushGenericsFromExprSubIdent(_self_, _107621_sexpr,_105945_generics,_105973_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904c95d_IdentExpr>>()) {
			_case_begin_2500ada84:;
			{
				jule::Ptr<_24904c95d_IdentExpr> _107921_ident = _105973_expr.get()._field_Kind.operator jule::Ptr<_24904c95d_IdentExpr>();;
				_105945_generics = jule::alloc_for_append(_105945_generics,1);_105945_generics.__push(jule::new_ptr<_2490463c4_TypeDecl>(_2490463c4_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_24904698a_IdentTypeDecl>(_24904698a_IdentTypeDecl{._field_Token=_107921_ident.get()._field_Token, ._field_Ident=_107921_ident.get()._field_Ident, ._field_CppLinked=_107921_ident.get()._field_CppLinked, }))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904b572_TupleExpr>>()) {
			_case_begin_2500adaea:;
			{
				{
					auto &expr = _105973_expr.get()._field_Kind.operator jule::Ptr<_24904b572_TupleExpr>().get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_2500b3ade:;
					if (it != expr.end()) {
						jule::Ptr<_24904a8e5_Expr> _108825_texpr = *it;
						{
							if ((!(_249c8c7ac_pushGenericsFromData(_self_, _105945_generics,_108825_texpr)))) {
								return false;
							};
						}
						_iter_next_2500b3ade:;
						++it;
						goto _iter_begin_2500b3ade;
					}
					_iter_end_2500b3ade:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904dc7d_NsSelectionExpr>>()) {
			_case_begin_2500ae469:;
			{
				jule::Ptr<_24904dc7d_NsSelectionExpr> _109421_ns = _105973_expr.get()._field_Kind.operator jule::Ptr<_24904dc7d_NsSelectionExpr>();;
				jule::Ptr<_24904698a_IdentTypeDecl> _109521_decl = jule::new_ptr<_24904698a_IdentTypeDecl>(_24904698a_IdentTypeDecl{._field_Token=_109421_ns.get()._field_Ident, ._field_Ident=_109421_ns.get()._field_Ident.get()._field_Kind, });;
				_105945_generics = jule::alloc_for_append(_105945_generics,1);_105945_generics.__push(jule::new_ptr<_2490463c4_TypeDecl>(_2490463c4_TypeDecl{._field_Token=_109521_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_249047491_NamespaceTypeDecl>(_249047491_NamespaceTypeDecl{._field_Idents=_109421_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_2490463c4_TypeDecl>(_2490463c4_TypeDecl{._field_Token=_109521_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(_109521_decl)})}))}));;
			}
		}
		else {
			_case_begin_2500ad765:;
			{
				_249c820cb_pushErr(_self_.ptr(), _105973_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_2500ad941:;
	};
	return true;
}



inline void _249c8caed_evalIdentDeclFromIndexing(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_249c80052_Data>& _111650_d, jule::Ptr<_249052b3e_IndexingExpr>& _111665_i) {
	jule::Ptr<_249062e4b_StructIns> _111717_s = _249cb3d00_Struct(_111650_d.get()._field_Kind.ptr());;
	if ((_111717_s == nullptr)) {
		_249c820cb_pushErr(_self_.ptr(), _111665_i.get()._field_Expr.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_111650_d.get()._field_Kind.ptr()))}));
		_111650_d=nullptr;
		return;;
	};
	jule::Ptr<_24904698a_IdentTypeDecl> _112417_decl = nullptr;;
	{
		auto &_match_expr{ _111665_i.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_24904c95d_IdentExpr>>()) {
			_case_begin_2500ba871:;
			{
				jule::Ptr<_24904c95d_IdentExpr> _112721_expr = _111665_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_24904c95d_IdentExpr>();;
				_112417_decl=jule::new_ptr<_24904698a_IdentTypeDecl>(_24904698a_IdentTypeDecl{._field_Token=_112721_expr.get()._field_Token, ._field_Ident=_112721_expr.get()._field_Ident, ._field_CppLinked=_112721_expr.get()._field_CppLinked, });
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904dc7d_NsSelectionExpr>>()) {
			_case_begin_2500b985e:;
			{
				jule::Ptr<_24904dc7d_NsSelectionExpr> _113421_expr = _111665_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_24904dc7d_NsSelectionExpr>();;
				_112417_decl=jule::new_ptr<_24904698a_IdentTypeDecl>(_24904698a_IdentTypeDecl{._field_Token=_113421_expr.get()._field_Ident, ._field_Ident=_113421_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_2500b9d48:;
			{
				_249c820cb_pushErr(_self_.ptr(), _111665_i.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_111650_d=nullptr;
				return;;
			}
		}
		_match_end_2500b99d5:;
	};
	if ((!(_249c8c7ac_pushGenericsFromData(_self_, _112417_decl.get()._field_Generics,_111665_i.get()._field_Index)))) {
		_111650_d=nullptr;
		return;;
	};
	_111717_s=({ auto _wrap_copy = _249c987eb_typeChecker(_self_.ptr()); _249cc2b44_fromStruct(&_wrap_copy, _112417_decl,_111717_s.get()._field_Decl); });
	if ((_111717_s == nullptr)) {
		_111650_d=nullptr;
		return;;
	};
	_111650_d.get()._field_Kind.get()._field_Kind=jule::Trait<_249cb035c_Kind>(_111717_s, 0);
}



inline jule::Bool _249c8d060_checkGenericFn(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_249bcc312_FnIns>& _115939_f, jule::Ptr<_23abd3d83_Token>& _115955_et, jule::Any& _115972_model) {
	jule::Bool _116013_ok = _249c2605e_reloadFnInsTypes(_self_.get()._field_s, _115939_f);;
	_115939_f.get()._field_reloaded=true;
	if ((!(_116013_ok))) {
		return false;
	};
	jule::Ptr<_249bcc312_FnIns> _116517_existInstance = _2490999bb_appendInstance(_115939_f.get()._field_Decl.ptr(), _115939_f);;
	if ((!(_249c251c3_checkConstraintsFn(_self_.get()._field_s, _115939_f,_115955_et,_116517_existInstance)))) {
		return false;
	};
	if ((_116517_existInstance != nullptr)) {
		_115939_f=_116517_existInstance;
		_249cace5e_updateModelToGenericIns(_115972_model,_116517_existInstance);
	} else {
		_249c32895_checkFnInsCaller(_self_.get()._field_s, _115939_f,_115955_et);
	};
	return true;
}



inline void _249c8d3a1_evalFnGenericFromIndexing(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_249c80052_Data>& _118450_d, jule::Ptr<_249052b3e_IndexingExpr>& _118465_i) {
	jule::Slice<jule::Ptr<_2490463c4_TypeDecl>> _118517_generics = jule::Slice<jule::Ptr<_2490463c4_TypeDecl>>::alloc(0LL,8LLU);;
	if ((!(_249c8c7ac_pushGenericsFromData(_self_, _118517_generics,_118465_i.get()._field_Index)))) {
		_118450_d=nullptr;
		return;;
	};
	jule::Ptr<_249bcc312_FnIns> _119117_f = _249cb3a8b_Fn(_118450_d.get()._field_Kind.ptr());;
	jule::I64 _119217_genericsLen = 0LL;;
	if ((_119117_f.get()._field_Decl != nullptr)) {
		_119217_genericsLen=static_cast<jule::I64>(_119117_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_249c1d331_checkGenericQuantity(_self_.get()._field_s.ptr(), _119217_genericsLen,static_cast<jule::I64>(_118517_generics.len()),_118465_i.get()._field_Expr.get()._field_Token)))) {
		_118450_d=nullptr;
		return;;
	};
	_119117_f.get()._field_Generics=jule::Slice<jule::Ptr<_249cae05e_InsGeneric>>::alloc(0LL,_119117_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto &expr = _118517_generics;
		auto it = expr.begin();
		_iter_begin_2500c53c5:;
		if (it != expr.end()) {
			jule::Ptr<_2490463c4_TypeDecl> _120321_g = *it;
			{
				jule::Ptr<_249c80052_Data> _120421_k = _249c98b09_evalType(_self_.ptr(), _120321_g);;
				if ((_120421_k == nullptr)) {
					_118450_d=nullptr;
					return;;
				};
				_119117_f.get()._field_Generics = jule::alloc_for_append(_119117_f.get()._field_Generics,1);_119117_f.get()._field_Generics.__push(jule::new_ptr<_249cae05e_InsGeneric>(_249cae05e_InsGeneric{._field_Kind=_120421_k.get()._field_Kind, }));;
			}
			_iter_next_2500c53c5:;
			++it;
			goto _iter_begin_2500c53c5;
		}
		_iter_end_2500c53c5:;
	};
	if (_249bcc4ee_IsBuiltin(_119117_f.ptr())) {
		return;;
	};
	if (_249c8d060_checkGenericFn(_self_, _119117_f,_118465_i.get()._field_Expr.get()._field_Token,_118450_d.get()._field_Model)) {
		_118450_d.get()._field_Kind.get()._field_Kind=jule::Trait<_249cb035c_Kind>(_119117_f, 1);
	} else {
		_118450_d=nullptr;
	};
}



inline jule::Ptr<_249c80052_Data> _249c8d6c0_evalIndexing(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_249052b3e_IndexingExpr> _122336_i) {
	jule::Ptr<_249cb078b_TypeKind> _122417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_122417_prefix;
	});;
	jule::Ptr<_249c80052_Data> _122817_d = _249ca186a_evalExprKind(_self_, _122336_i.get()._field_Expr.get()._field_Kind);;
	if ((_122817_d == nullptr)) {
		return nullptr;
	};
	if (_122817_d.get()._field_Decl) {
		_249c8caed_evalIdentDeclFromIndexing(_self_, _122817_d,_122336_i);
		return _122817_d;
	};
	if ((_249cb3a8b_Fn(_122817_d.get()._field_Kind.ptr()) != nullptr)) {
		_249c8d3a1_evalFnGenericFromIndexing(_self_, _122817_d,_122336_i);
		return _122817_d;
	};
	_249c80052_Data _124417_old_d = (*(_122817_d));;
	jule::Ptr<_249c80052_Data> _124617_index = _249ca186a_evalExprKind(_self_, _122336_i.get()._field_Index.get()._field_Kind);;
	if ((_124617_index == nullptr)) {
		return nullptr;
	};
	_122817_d.get()._field_Decl=false;
	_249c8be71_toIndexing(_self_.ptr(), _122817_d,_124617_index,_122336_i);
	if (_249c80915_IsConst(_122817_d.ptr())) {
		_122817_d.get()._field_Decl=false;
		_122817_d.get()._field_Model=static_cast<jule::Any>(_122817_d.get()._field_Constant);
	} else if (_122817_d.get()._field_Decl) {
		_122817_d.get()._field_Decl=false;
	} else {
		_122817_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc743e_IndexingExprModel>(_249bc743e_IndexingExprModel{._field_Token=_122336_i.get()._field_Token, ._field_Expr=jule::new_ptr<_249c80052_Data>(_124417_old_d), ._field_Index=_124617_index}));
	};
	return _122817_d;
}



inline std::tuple<jule::Ptr<_249c80052_Data>,jule::Ptr<_249c80052_Data>> _249c8d9cd_evalSlicingExprs(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_249053249_SlicingExpr>& _127741_s) {
	jule::Ptr<_249cb078b_TypeKind> _127817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_127817_prefix;
	});;
	jule::Ptr<_249c80052_Data> _128217_l = nullptr;;
	jule::Ptr<_249c80052_Data> _128317_r = nullptr;;
	if ((_127741_s.get()._field_Start != nullptr)) {
		_128217_l=_249ca186a_evalExprKind(_self_, _127741_s.get()._field_Start.get()._field_Kind);
		if ((_128217_l != nullptr)) {
			_249c8a6bc_checkIntegerIndexingByData(_self_.ptr(), _128217_l,_127741_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_128217_l=jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__2491257e4_NewI64(0LL)});
		_128217_l.get()._field_Model=static_cast<jule::Any>(_128217_l.get()._field_Constant);
	};
	if ((_127741_s.get()._field_To != nullptr)) {
		_128317_r=_249ca186a_evalExprKind(_self_, _127741_s.get()._field_To.get()._field_Kind);
		if ((_128317_r != nullptr)) {
			_249c8a6bc_checkIntegerIndexingByData(_self_.ptr(), _128317_r,_127741_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_128217_l,_128317_r);
}



inline void _249c8dc53_slicingArr(_249c81ac0_Eval* _self_, jule::Ptr<_249c80052_Data>& _131230_d) {
	jule::Ptr<_249cb078b_TypeKind> _131317_elemType = _249cb35b3_Arr(_131230_d.get()._field_Kind.ptr()).get()._field_Elem;;
	_131230_d.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(jule::new_ptr<_249cb9454_Slc>(_249cb9454_Slc{._field_Elem=_131317_elemType}), 8)});
	_131230_d.get()._field_Lvalue=false;
	_131230_d.get()._field_Mutable=(_131230_d.get()._field_Mutable || (!(_249cb1b88_Mutable(_131317_elemType.ptr()))));
}



inline void _249c8e11b_slicingStr(_249c81ac0_Eval* _self_, jule::Ptr<_249c80052_Data>& _132730_d, jule::Ptr<_249c80052_Data>& _132741_l, jule::Ptr<_249c80052_Data>& _132752_r) {
	_132730_d.get()._field_Lvalue=false;
	_132730_d.get()._field_Mutable=true;
	if ((!(_249c80915_IsConst(_132730_d.ptr())))) {
		return;;
	};
	if (((_132741_l == nullptr) || (_132752_r == nullptr))) {
		_132730_d.get()._field_Constant=nullptr;
		return;;
	};
	if ((_249c80915_IsConst(_132741_l.ptr()) && _249c80915_IsConst(_132752_r.ptr()))) {
		jule::I64 _134017_left = _249168260_AsI64(_132741_l.get()._field_Constant.ptr());;
		if ((_134017_left < 0LL)) {
			return;;
		};
		jule::Str _134517_s = _249166824_ReadStr(_132730_d.get()._field_Constant.ptr());;
		jule::I64 _134621_right = 0LL;;
		if ((_132752_r == nullptr)) {
			_134621_right=static_cast<jule::I64>(static_cast<jule::I64>(_134517_s.len()));
		} else {
			_134621_right=static_cast<jule::I64>(_249168260_AsI64(_132752_r.get()._field_Constant.ptr()));
		};
		if ((_134017_left > _134621_right)) {
			return;;
		};
		_24917acde_SetStr(_132730_d.get()._field_Constant.ptr(), _134517_s.slice(_134017_left,_134621_right));
		_132730_d.get()._field_Decl=true;
	} else {
		_132730_d.get()._field_Constant=nullptr;
	};
}



inline void _249c8e57d_checkSlicing(_249c81ac0_Eval* _self_, jule::Ptr<_249c80052_Data>& _136336_d, jule::Ptr<_249c80052_Data>& _136347_l, jule::Ptr<_249c80052_Data>& _136358_r, jule::Ptr<_249053249_SlicingExpr>& _136369_s) {
	{
		
		if ((_249cb35b3_Arr(_136336_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2500de91c:;
			{
				_249c8dc53_slicingArr(&(*_self_), _136336_d);
				return;;
			}
		}
		else if ((_249cb3827_Slc(_136336_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2500de994:;
			{
				return;;
			}
		}
		else if ((_249cb289d_Prim(_136336_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2500dea1b:;
			{
				jule::Ptr<_249cb5263_Prim> _137117_prim = _249cb289d_Prim(_136336_d.get()._field_Kind.ptr());;
				{
					
					if (_249cb8497_IsStr(_137117_prim.ptr())) {
						_case_begin_2500e2227:;
						{
							_249c8e11b_slicingStr(&(*_self_), _136336_d,_136347_l,_136358_r);
							return;;
						}
					}
					_match_end_2500e217d:;
				};
			}
		}
		_match_end_2500de7da:;
	};
	_249c820cb_pushErr(&(*_self_), _136369_s.get()._field_Token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_136336_d.get()._field_Kind.ptr()))}));
}



inline jule::Ptr<_249c80052_Data> _249c8e88b_evalSlicing(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_249053249_SlicingExpr> _138235_s) {
	jule::Ptr<_249c80052_Data> _138317_d = _249ca186a_evalExprKind(_self_, _138235_s.get()._field_Expr.get()._field_Kind);;
	if ((_138317_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_249c80052_Data> _138818_l;;
	jule::Ptr<_249c80052_Data> _138825_r;;
	std::tie(_138818_l,_138825_r) = _249c8d9cd_evalSlicingExprs(_self_, _138235_s);
	if ((_138818_l == nullptr)) {
		return _138317_d;
	};
	_138317_d.get()._field_Decl=false;
	_249c8e57d_checkSlicing(_self_.ptr(), _138317_d,_138818_l,_138825_r,_138235_s);
	if (_249c80915_IsConst(_138317_d.ptr())) {
		_138317_d.get()._field_Decl=false;
		_138317_d.get()._field_Model=static_cast<jule::Any>(_138317_d.get()._field_Constant);
	} else if (_138317_d.get()._field_Decl) {
		_138317_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_249bc7be2_SlicingExprModel> _140621_model = jule::new_ptr<_249bc7be2_SlicingExprModel>(_249bc7be2_SlicingExprModel{._field_Token=_138235_s.get()._field_Token, ._field_Expr=_138317_d.get()._field_Model, ._field_Left=_138818_l.get()._field_Model, });;
		if ((_138825_r != nullptr)) {
			_140621_model.get()._field_Right=_138825_r.get()._field_Model;
		};
		_138317_d.get()._field_Model=static_cast<jule::Any>(_140621_model);
	};
	return _138317_d;
}



inline void _249c8ec54_castPtr(_249c81ac0_Eval* _self_, jule::Ptr<_249cb078b_TypeKind> _141930_t, jule::Ptr<_249c80052_Data> _141948_d, jule::Ptr<_23abd3d83_Token> _141958_errorToken) {
	_141948_d.get()._field_Constant=nullptr;
	jule::Ptr<_249cb89e7_Sptr> _142113_sptr = _249cb2b12_Sptr(_141948_d.get()._field_Kind.ptr());;
	if ((_142113_sptr != nullptr)) {
		if ((!(_249cb0e95_Equals(_249cb2d76_Ptr(_141930_t.ptr()).get()._field_Elem, _142113_sptr.get()._field_Elem)))) {
			_249c820cb_pushErr(&(*_self_), _141958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_141948_d.get()._field_Kind.ptr())),jule::Any(_249cb0b87_Str(_141930_t.ptr()))}));
		};
		return;;
	};
	if ((!(_249c82a16_isUnsafe(&(*_self_))))) {
		_249c820cb_pushErr(&(*_self_), _141958_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_249cb5263_Prim> _143413_prim = _249cb289d_Prim(_141948_d.get()._field_Kind.ptr());;
	if (((_249cb2d76_Ptr(_141948_d.get()._field_Kind.ptr()) == nullptr) && ((_143413_prim == nullptr) || (!(_249bc42e8_IsInt(_249cb55c6_Str(_143413_prim.ptr()))))))) {
		_249c820cb_pushErr(&(*_self_), _141958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_141948_d.get()._field_Kind.ptr())),jule::Any(_249cb0b87_Str(_141930_t.ptr()))}));
	};
}



inline void _249c9011c_castStruct(_249c81ac0_Eval* _self_, jule::Ptr<_249cb078b_TypeKind> _144033_t, jule::Ptr<_249c80052_Data> _144051_d, jule::Ptr<_23abd3d83_Token> _144061_errorToken) {
	_144051_d.get()._field_Constant=nullptr;
	jule::Ptr<_249bd48d0_Trait> _144217_tr = _249cb4064_Trait(_144051_d.get()._field_Kind.ptr());;
	if ((_144217_tr == nullptr)) {
		_249c820cb_pushErr(&(*_self_), _144061_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_144051_d.get()._field_Kind.ptr())),jule::Any(_249cb0b87_Str(_144033_t.ptr()))}));
		return;;
	};
	jule::Ptr<_249062e4b_StructIns> _144817_s = _249cb3d00_Struct(_144033_t.ptr());;
	_250101115_pushReference(&(*_self_), _144817_s);
	if ((!(_2490213c1_IsImplements(_144817_s.get()._field_Decl.ptr(), _144217_tr)))) {
		_249c820cb_pushErr(&(*_self_), _144061_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_144051_d.get()._field_Kind.ptr())),jule::Any(_249cb0b87_Str(_144033_t.ptr()))}));
	};
}



inline void _249c904d5_castRef(_249c81ac0_Eval* _self_, jule::Ptr<_249cb078b_TypeKind> _145630_t, jule::Ptr<_249c80052_Data> _145648_d, jule::Ptr<_23abd3d83_Token> _145658_errorToken) {
	_145648_d.get()._field_Constant=nullptr;
	jule::Ptr<_249cb89e7_Sptr> _145817_sptr = _249cb2b12_Sptr(_145630_t.ptr());;
	jule::Ptr<_249cbc05b_Ptr> _146017_ptr = _249cb2d76_Ptr(_145648_d.get()._field_Kind.ptr());;
	if (((_146017_ptr != nullptr) && _249cb0e95_Equals(_145817_sptr.get()._field_Elem, _146017_ptr.get()._field_Elem))) {
		if ((!(_249c82a16_isUnsafe(&(*_self_))))) {
			_249c820cb_pushErr(&(*_self_), _145658_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_249cb3d00_Struct(_145817_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_249c9011c_castStruct(&(*_self_), _145817_sptr.get()._field_Elem,_145648_d,_145658_errorToken);
		return;;
	};
	_249c820cb_pushErr(&(*_self_), _145658_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_145648_d.get()._field_Kind.ptr())),jule::Any(_249cb0b87_Str(_145630_t.ptr()))}));
}



inline void _249c9089d_castSlc(_249c81ac0_Eval* _self_, jule::Ptr<_249cb078b_TypeKind> _147830_t, jule::Ptr<_249c80052_Data> _147848_d, jule::Ptr<_23abd3d83_Token> _147858_errorToken) {
	_147848_d.get()._field_Constant=nullptr;
	if ((_249cb30da_Enum(_147848_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_249cb289d_Prim(_249cb30da_Enum(_147848_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_249cb8497_IsStr(_249cb289d_Prim(_249cb30da_Enum(_147848_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_249c820cb_pushErr(&(*_self_), _147858_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_147848_d.get()._field_Kind.ptr())),jule::Any(_249cb0b87_Str(_147830_t.ptr()))}));
			return;;
		};
	} else if (((_249cb289d_Prim(_147848_d.get()._field_Kind.ptr()) == nullptr) || (!(_249cb8497_IsStr(_249cb289d_Prim(_147848_d.get()._field_Kind.ptr()).ptr()))))) {
		_249c820cb_pushErr(&(*_self_), _147858_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_147848_d.get()._field_Kind.ptr())),jule::Any(_249cb0b87_Str(_147830_t.ptr()))}));
		return;;
	};
	_147830_t=_249cb3827_Slc(_147830_t.ptr()).get()._field_Elem;
	jule::Ptr<_249cb5263_Prim> _149113_prim = _249cb289d_Prim(_147830_t.ptr());;
	if (((_149113_prim == nullptr) || ((!(_249cb6a6c_IsU8(_149113_prim.ptr()))) && (!(_249cb6594_IsI32(_149113_prim.ptr())))))) {
		_249c820cb_pushErr(&(*_self_), _147858_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_147848_d.get()._field_Kind.ptr())),jule::Any(_249cb0b87_Str(_147830_t.ptr()))}));
	};
}



inline void _249c90bbc_castStr(_249c81ac0_Eval* _self_, jule::Ptr<_249c80052_Data> _149730_d, jule::Ptr<_23abd3d83_Token> _149740_errorToken) {
	_149730_d.get()._field_Constant=nullptr;
	if ((_249cb30da_Enum(_149730_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_249bd6a25_Enum> _150021_e = _249cb30da_Enum(_149730_d.get()._field_Kind.ptr());;
		if (((_249cb289d_Prim(_150021_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _249cb8497_IsStr(_249cb289d_Prim(_150021_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_249cb289d_Prim(_149730_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_249cb5263_Prim> _150717_prim = _249cb289d_Prim(_149730_d.get()._field_Kind.ptr());;
		if (((!(_249cb6a6c_IsU8(_150717_prim.ptr()))) && (!(_249cb6594_IsI32(_150717_prim.ptr()))))) {
			_249c820cb_pushErr(&(*_self_), _149740_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_249cb0b87_Str(_149730_d.get()._field_Kind.ptr()))}));
		};
		return;;
	};
	if ((_249cb3827_Slc(_149730_d.get()._field_Kind.ptr()) == nullptr)) {
		_249c820cb_pushErr(&(*_self_), _149740_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_249cb0b87_Str(_149730_d.get()._field_Kind.ptr()))}));
		return;;
	};
	jule::Ptr<_249cb078b_TypeKind> _151917_t = _249cb3827_Slc(_149730_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_249cb5263_Prim> _152013_prim = _249cb289d_Prim(_151917_t.ptr());;
	if (((_152013_prim == nullptr) || ((!(_249cb6a6c_IsU8(_152013_prim.ptr()))) && (!(_249cb6594_IsI32(_152013_prim.ptr())))))) {
		_249c820cb_pushErr(&(*_self_), _149740_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_249cb0b87_Str(_149730_d.get()._field_Kind.ptr()))}));
	};
}



inline void _249c91085_castInt(_249c81ac0_Eval* _self_, jule::Ptr<_249cb078b_TypeKind> _152630_t, jule::Ptr<_249c80052_Data> _152648_d, jule::Ptr<_23abd3d83_Token> _152658_errorToken) {
	if (_249c80915_IsConst(_152648_d.ptr())) {
		jule::Ptr<_249cb5263_Prim> _152817_prim = _249cb289d_Prim(_152630_t.ptr());;
		{
			
			if (_249bc4084_IsSigInt(_152817_prim.get()._field_Kind)) {
				_case_begin_25011d253:;
				{
					_24916a0db_SetI64(_152648_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_249168260_AsI64(_152648_d.get()._field_Constant.ptr())));
				}
			}
			else if (_249bc41b6_IsUnsigInt(_152817_prim.get()._field_Kind)) {
				_case_begin_25011d2ca:;
				{
					_24917646b_SetU64(_152648_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_24915c3a8_AsU64(_152648_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_25011d198:;
		};
	} else {
		_152648_d.get()._field_Constant=nullptr;
	};
	if ((_249cb30da_Enum(_152648_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_249bd6a25_Enum> _154017_e = _249cb30da_Enum(_152648_d.get()._field_Kind.ptr());;
		if (_249bc455c_IsNum(_249cb0b87_Str(_154017_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_249cb2b12_Sptr(_152648_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_249cb5263_Prim> _154717_prim = _249cb289d_Prim(_152630_t.ptr());;
		if ((!(_249cb7ebe_IsUintptr(_154717_prim.ptr())))) {
			_249c820cb_pushErr(&(*_self_), _152658_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_152648_d.get()._field_Kind.ptr())),jule::Any(_249cb0b87_Str(_152630_t.ptr()))}));
		};
		return;;
	};
	if ((_249cb2d76_Ptr(_152648_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_249cb5263_Prim> _155417_prim = _249cb289d_Prim(_152630_t.ptr());;
		if (_249cb7ebe_IsUintptr(_155417_prim.ptr())) {
		} else if ((!(_249c82a16_isUnsafe(&(*_self_))))) {
			_249c820cb_pushErr(&(*_self_), _152658_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_249cb5263_Prim> _156313_prim = _249cb289d_Prim(_152648_d.get()._field_Kind.ptr());;
	if (((_156313_prim != nullptr) && _249bc455c_IsNum(_249cb55c6_Str(_156313_prim.ptr())))) {
		return;;
	};
	_249c820cb_pushErr(&(*_self_), _152658_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_152648_d.get()._field_Kind.ptr())),jule::Any(_249cb0b87_Str(_152630_t.ptr()))}));
}



inline void _249c9144d_castNum(_249c81ac0_Eval* _self_, jule::Ptr<_249cb078b_TypeKind> _157130_t, jule::Ptr<_249c80052_Data> _157148_d, jule::Ptr<_23abd3d83_Token> _157158_errorToken) {
	if (_249c80915_IsConst(_157148_d.ptr())) {
		jule::Ptr<_249cb5263_Prim> _157317_prim = _249cb289d_Prim(_157130_t.ptr());;
		{
			
			if (_249bc442a_IsFloat(_157317_prim.get()._field_Kind)) {
				_case_begin_250127d40:;
				{
					_24917b828_SetF64(_157148_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_24916922d_AsF64(_157148_d.get()._field_Constant.ptr())));
				}
			}
			else if (_249bc4084_IsSigInt(_157317_prim.get()._field_Kind)) {
				_case_begin_250127db7:;
				{
					_24916a0db_SetI64(_157148_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_249168260_AsI64(_157148_d.get()._field_Constant.ptr())));
				}
			}
			else if (_249bc41b6_IsUnsigInt(_157317_prim.get()._field_Kind)) {
				_case_begin_250127e3e:;
				{
					_24917646b_SetU64(_157148_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_24915c3a8_AsU64(_157148_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_250127c74:;
		};
	} else {
		_157148_d.get()._field_Constant=nullptr;
	};
	if ((_249cb30da_Enum(_157148_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_249bd6a25_Enum> _158717_e = _249cb30da_Enum(_157148_d.get()._field_Kind.ptr());;
		if (_249bc455c_IsNum(_249cb0b87_Str(_158717_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_249cb5263_Prim> _159313_prim = _249cb289d_Prim(_157148_d.get()._field_Kind.ptr());;
	if (((_159313_prim != nullptr) && _249bc455c_IsNum(_249cb55c6_Str(_159313_prim.ptr())))) {
		return;;
	};
	_249c820cb_pushErr(&(*_self_), _157158_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_157148_d.get()._field_Kind.ptr())),jule::Any(_249cb0b87_Str(_157130_t.ptr()))}));
}



inline void _249c91816_castPrim(_249c81ac0_Eval* _self_, jule::Ptr<_249cb078b_TypeKind> _160131_t, jule::Ptr<_249c80052_Data> _160149_d, jule::Ptr<_23abd3d83_Token> _160159_errorToken) {
	jule::Ptr<_249cb5263_Prim> _160213_prim = _249cb289d_Prim(_160131_t.ptr());;
	{
		
		if (_249cb870b_IsAny(_160213_prim.ptr())) {
			_case_begin_25012e3da:;
			{
				_160149_d.get()._field_Constant=nullptr;
			}
		}
		else if (_249cb8497_IsStr(_160213_prim.ptr())) {
			_case_begin_25012e9c3:;
			{
				_249c90bbc_castStr(&(*_self_), _160149_d,_160159_errorToken);
			}
		}
		else if (_249bc42e8_IsInt(_249cb55c6_Str(_160213_prim.ptr()))) {
			_case_begin_25012ea39:;
			{
				_249c91085_castInt(&(*_self_), _160131_t,_160149_d,_160159_errorToken);
			}
		}
		else if (_249bc455c_IsNum(_249cb55c6_Str(_160213_prim.ptr()))) {
			_case_begin_25012eaa0:;
			{
				_249c9144d_castNum(&(*_self_), _160131_t,_160149_d,_160159_errorToken);
			}
		}
		else {
			_case_begin_25012e95c:;
			{
				_249c820cb_pushErr(&(*_self_), _160159_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_160131_t.ptr()))}));
			}
		}
		_match_end_25012e8e6:;
	};
}



inline void _249c91b35_castConstant(_249c81ac0_Eval* _self_, jule::Ptr<_249cb078b_TypeKind>& _161836_t, jule::Ptr<_249c80052_Data>& _161855_d) {
	if (((_161855_d == nullptr) || (!(_249c80915_IsConst(_161855_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_249cb5263_Prim> _162213_prim = _249cb289d_Prim(_161836_t.ptr());;
	_249cac953_castConstByType(_162213_prim.get()._field_Kind,_161855_d);
	_161855_d.get()._field_Model=static_cast<jule::Any>(_161855_d.get()._field_Constant);
}



inline void _249c96d5a_castTypeEnum(_249c81ac0_Eval* _self_, jule::Ptr<_249cb078b_TypeKind>& _162736_t, jule::Ptr<_249c80052_Data>& _162755_d, jule::Ptr<_23abd3d83_Token>& _162770_errorToken) {
	jule::I64 _162813_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_249c242c1_checkTypeCompatibility((*_self_)._field_s, _162755_d.get()._field_Kind,_162736_t,_162770_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_162813_n);
		_249c820cb_pushErr(&(*_self_), _162770_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_162755_d.get()._field_Kind.ptr())),jule::Any(_249cb0b87_Str(_162736_t.ptr()))}));
	};
	_162755_d.get()._field_Constant=nullptr;
}



inline jule::Ptr<_249c80052_Data> _249c972ab_evalCastByTypeNData(_249c81ac0_Eval* _self_, jule::Ptr<_249cb078b_TypeKind> _163642_t, jule::Ptr<_249c80052_Data> _163660_d, jule::Ptr<_23abd3d83_Token> _163674_errorToken) {
	if (((_163660_d != nullptr) && _163660_d.get()._field_Decl)) {
		_249c820cb_pushErr(&(*_self_), _163674_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (((_249cb289d_Prim(_163660_d.get()._field_Kind.ptr()) != nullptr) && _249cb870b_IsAny(_249cb289d_Prim(_163660_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_250138999:;
			{
				if ((_249cb30da_Enum(_163642_t.ptr()) != nullptr)) {
					_249c820cb_pushErr(&(*_self_), _163674_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_249c823ea_pushSugggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_249cb334e_TypeEnum(_163642_t.ptr()) != nullptr)) {
					_249c820cb_pushErr(&(*_self_), _163674_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
				_163660_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_249cb334e_TypeEnum(_163660_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2501392d5:;
			{
				_249c96d5a_castTypeEnum(&(*_self_), _163642_t,_163660_d,_163674_errorToken);
			}
		}
		else if ((_249cb2d76_Ptr(_163642_t.ptr()) != nullptr)) {
			_case_begin_250138537:;
			{
				_249c8ec54_castPtr(&(*_self_), _163642_t,_163660_d,_163674_errorToken);
			}
		}
		else if ((_249cb2b12_Sptr(_163642_t.ptr()) != nullptr)) {
			_case_begin_2501385ae:;
			{
				_249c904d5_castRef(&(*_self_), _163642_t,_163660_d,_163674_errorToken);
			}
		}
		else if ((_249cb3827_Slc(_163642_t.ptr()) != nullptr)) {
			_case_begin_250138636:;
			{
				_249c9089d_castSlc(&(*_self_), _163642_t,_163660_d,_163674_errorToken);
			}
		}
		else if ((_249cb3d00_Struct(_163642_t.ptr()) != nullptr)) {
			_case_begin_2501386ad:;
			{
				_249c9011c_castStruct(&(*_self_), _163642_t,_163660_d,_163674_errorToken);
			}
		}
		else if ((_249cb289d_Prim(_163642_t.ptr()) != nullptr)) {
			_case_begin_25013944a:;
			{
				_249c91816_castPrim(&(*_self_), _163642_t,_163660_d,_163674_errorToken);
				_249c91b35_castConstant(&(*_self_), _163642_t,_163660_d);
			}
		}
		else {
			_case_begin_2501384c1:;
			{
				_249c820cb_pushErr(&(*_self_), _163674_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_163642_t.ptr()))}));
				_163660_d=nullptr;
			}
		}
		_match_end_25013845a:;
	};
	if ((_163660_d == nullptr)) {
		return nullptr;
	};
	_163660_d.get()._field_Mutable=(_163660_d.get()._field_Mutable || ((!(_249cb1b88_Mutable(_163660_d.get()._field_Kind.ptr()))) && _249cb1b88_Mutable(_163642_t.ptr())));
	_163660_d.get()._field_Lvalue=false;
	_163660_d.get()._field_Decl=false;
	if (((_249cb30da_Enum(_163660_d.get()._field_Kind.ptr()) == nullptr) || (!(_249cb0e95_Equals(_249cb30da_Enum(_163660_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _163642_t))))) {
		_249cabe19_applyCastKind(_163660_d,_163642_t);
		_163660_d.get()._field_Model.operator jule::Ptr<_249bc6d78_CastingExprModel>().get()._field_Token=_163674_errorToken;
	} else {
		_163660_d.get()._field_Kind=_163642_t;
	};
	_163660_d.get()._field_untyped=false;
	if (_249c80915_IsConst(_163660_d.ptr())) {
		_163660_d.get()._field_Constant.get()._field_Kind=_249cb289d_Prim(_163642_t.ptr()).get()._field_Kind;
	};
	return _163660_d;
}



inline jule::Ptr<_249c80052_Data> _249c9770c_evalCastT(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_249cb078b_TypeKind>& _169434_t, jule::Ptr<_24904a8e5_Expr>& _169453_e, jule::Ptr<_23abd3d83_Token>& _169468_et) {
	jule::Ptr<_249cb078b_TypeKind> _169517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_169517_prefix;
	});;
	if ((_249cb3827_Slc(_169434_t.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _169453_e.get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_24905229d_SliceExpr>>()) {
				_case_begin_250146600:;
				{
					_self_.get()._field_prefix=_169434_t;
				}
			}
			_match_end_250145632:;
		};
	};
	jule::Ptr<_249c80052_Data> _170417_d = _249ca186a_evalExprKind(_self_, _169453_e.get()._field_Kind);;
	if (((_170417_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _170417_d;
	};
	return _249c972ab_evalCastByTypeNData(_self_.ptr(), _169434_t,_170417_d,_169468_et);
}



inline jule::Ptr<_249c80052_Data> _249c97a1a_evalCast(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_24904d8c6_CastExpr> _171132_c) {
	jule::Ptr<_249cb48e4_TypeSymbol> _171217_t = _249bcd7b9_buildType(_171132_c.get()._field_Kind);;
	jule::Bool _171313_ok = _249c221e2_checkType(_self_.get()._field_s, _171217_t,_self_.get()._field_lookup);;
	if ((!(_171313_ok))) {
		return nullptr;
	};
	return _249c9770c_evalCastT(_self_, _171217_t.get()._field_Kind,_171132_c.get()._field_Expr,_171132_c.get()._field_Kind.get()._field_Token);
}



inline jule::Ptr<_249c80052_Data> _249c97d28_evalNsSelection(_249c81ac0_Eval* _self_, jule::Ptr<_24904dc7d_NsSelectionExpr> _172034_s) {
	jule::Str _172113_path = _249cc8386_buildLinkPathByTokens(_172034_s.get()._field_Ns);;
	jule::Ptr<_249c1117b_ImportInfo> _172217_imp = _249ccb3bc_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._249cc9882_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_249c1117b_ImportInfo>)>([=](jule::Ptr<_249c1117b_ImportInfo> _172252_imp) mutable -> jule::Bool {
		if (((_172034_s.get()._field_Ns.len() == 1LL) && (_172252_imp.get()._field_Alias == _172113_path))) {
			return true;
		};
		return ((_172252_imp.get()._field_LinkPath == _172113_path) && _249c13cd8_isAccessibleViaSelection(_172252_imp.ptr()));
	}));;
	if ((_172217_imp == nullptr)) {
		_249c820cb_pushErr(&(*_self_), _172034_s.get()._field_Ns[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_172113_path)}));
		return nullptr;
	};
	jule::Trait<_249ccb3bc_Lookup> _173417_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_249ccb3bc_Lookup>(_172217_imp, 1);
	;
	_249c827a2_disallowBuiltin(&(*_self_));
	jule::Any _173917_def = _249c850e0_getDef(&(*_self_), _172034_s.get()._field_Ident.get()._field_Kind,false);;
	_249c825c6_allowBuiltin(&(*_self_));
	(*_self_)._field_lookup=_173417_lookup;
	jule::Ptr<_249c80052_Data> _174217_d = _249c88ac7_evalDef(&(*_self_), jule::Any(_173917_def),_172034_s.get()._field_Ident);;
	return _174217_d;
}



inline jule::Ptr<_249c80052_Data> _249c98279_evalStructLitExplicit(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_249062e4b_StructIns> _174645_s, jule::Slice<jule::Ptr<_24904a8e5_Expr>> _174713_exprs, jule::Ptr<_23abd3d83_Token> _174733_errorToken) {
	jule::Bool _174813_ok = _249c1d331_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_174645_s.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_174645_s.get()._field_Generics.len()),_174733_errorToken);;
	if ((!(_174813_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _174645_s.get()._field_Decl))) {
		_249c820cb_pushErr(_self_.ptr(), _174733_errorToken,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_174645_s.get()._field_Decl.get()._field_Ident)}));
	};
	_250101115_pushReference(_self_.ptr(), _174645_s);
	_249c86ed2_checkDeprecated(_self_.ptr(), _174645_s.get()._field_Decl.get()._field_Directives,_174733_errorToken);
	_249c74442_structLitChecker _176117_slc = _249c74442_structLitChecker{._field_e=_self_, ._field_errorToken=_174733_errorToken, ._field_s=_174645_s, };;
	_249c759d7_check(&_176117_slc, _174713_exprs);
	return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_174645_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc699e_StructLitExprModel>(_249bc699e_StructLitExprModel{._field_Strct=_174645_s, ._field_Args=_176117_slc._field_args})), });
}



inline jule::Ptr<_249c80052_Data> _249c98587_evalStructLit(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_249050d90_StructLit> _178037_lit) {
	jule::Ptr<_249cb48e4_TypeSymbol> _178117_t = _249bcd7b9_buildType(_178037_lit.get()._field_Kind);;
	jule::Bool _178213_ok = _249c221e2_checkType(_self_.get()._field_s, _178117_t,_self_.get()._field_lookup);;
	if ((!(_178213_ok))) {
		return nullptr;
	};
	jule::Ptr<_249062e4b_StructIns> _178717_s = _249cb3d00_Struct(_178117_t.get()._field_Kind.ptr());;
	if ((_178717_s == nullptr)) {
		if ((_249cb2b12_Sptr(_178117_t.get()._field_Kind.ptr()) != nullptr)) {
			_178717_s=_249cb3d00_Struct(_249cb2b12_Sptr(_178117_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_178717_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_249c820cb_pushErr(_self_.ptr(), _178037_lit.get()._field_Kind.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_249c80052_Data> _180017_d = _249c98279_evalStructLitExplicit(_self_, _178717_s,_178037_lit.get()._field_Exprs,_178037_lit.get()._field_Kind.get()._field_Token);;
	if ((_249cb2b12_Sptr(_178117_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_249bc699e_StructLitExprModel> _180221_model = _180017_d.get()._field_Model.operator jule::Ptr<_249bc699e_StructLitExprModel>();;
		_249caa7ca_makeStructLitAlloc(_180017_d,_180221_model);
	};
	return _180017_d;
}



inline _249cbdcb6_typeChecker _249c987eb_typeChecker(_249c81ac0_Eval* _self_) {
	return _249c210d1_typeChecker((*_self_)._field_s, (*_self_)._field_lookup,nullptr,nullptr);
}



inline jule::Ptr<_249c80052_Data> _249c98b09_evalType(_249c81ac0_Eval* _self_, jule::Ptr<_2490463c4_TypeDecl> _181231_t) {
	jule::Ptr<_249cb48e4_TypeSymbol> _181317_tk = _249bcd7b9_buildType(_181231_t);;
	jule::Bool _181413_ok = _249c221e2_checkType((*_self_)._field_s, _181317_tk,(*_self_)._field_lookup);;
	if ((!(_181413_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=_181317_tk.get()._field_Kind, ._field_Model=static_cast<jule::Any>(_181317_tk.get()._field_Kind), ._field_Decl=true, });
}



inline void _249c98e28_callTypeFn(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_24904ebb3_FnCallExpr>& _182535_fc, jule::Ptr<_249c80052_Data>& _182557_d) {
	if ((_182535_fc.get()._field_Args.len() < 1LL)) {
		_249c820cb_pushErr(_self_.ptr(), _182535_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_182535_fc.get()._field_Args.len() > 1LL)) {
		_249c820cb_pushErr(_self_.ptr(), _182535_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	if ((_182535_fc.get()._field_Args.len() > 0LL)) {
		jule::Ptr<_24904a8e5_Expr> _183321_arg = _182535_fc.get()._field_Args[0LL];;
		_182557_d=_249c9770c_evalCastT(_self_, _182557_d.get()._field_Kind,_183321_arg,_183321_arg.get()._field_Token);
		return;;
	};
	if ((_182557_d != nullptr)) {
		_182557_d.get()._field_Decl=false;
	};
}



inline void _249c99247_callBuiltinFn(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_24904ebb3_FnCallExpr>& _184338_fc, jule::Ptr<_249c80052_Data>& _184360_d) {
	_184360_d=_249cb3a8b_Fn(_184360_d.get()._field_Kind.ptr()).get()._field_caller(_self_,_184338_fc,_184360_d);
	if ((_184360_d == nullptr)) {
		return;;
	};
	_184360_d.get()._field_Mutable=true;
}



inline void _249c99588_checkFnOfConcurrentCall(_249c81ac0_Eval* _self_, jule::Ptr<_249bcc312_FnIns>& _185143_f, jule::Ptr<_23abd3d83_Token> _185154_errorToken) {
	if (_249c82a16_isUnsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _185143_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_250c774c7:;
		if (it != expr.end()) {
			jule::Ptr<_249bcc125_ParamIns> &_185516_p = *it;
			{
				if (_185516_p.get()._field_Decl.get()._field_Reference) {
					_249c820cb_pushErr(&(*_self_), _185154_errorToken,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_250c774c7:;
			++it;
			goto _iter_begin_250c774c7;
		}
		_iter_end_250c774c7:;
	};
}



inline void _249c99984_processExceptionalHandler(_249c81ac0_Eval* _self_, jule::Ptr<_249bcc312_FnIns>& _186349_f, jule::Ptr<_24904ebb3_FnCallExpr>& _186365_fc, jule::Ptr<_249c80052_Data>& _186387_d) {
	jule::Bool _186413_resultNeeded = ((!(_2490aaa43_IsVoid(_186349_f.get()._field_Decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_249be9296_scopeChecker> _186517_csc = nullptr;;
	jule::Ptr<_249be2635_Scope> _186617_ch = nullptr;;
	jule::Ptr<_249bc7065_FnCallExprModel> _186817_model = _186387_d.get()._field_Model.operator jule::Ptr<_249bc7065_FnCallExprModel>();;
	jule::Ptr<_249be9296_scopeChecker> _187217_sc = (*_self_)._field_lookup.operator jule::Ptr<_249be9296_scopeChecker>();;
	_186517_csc=_249c0954d_newChildChecker(_187217_sc);
	if (_186413_resultNeeded) {
		_186517_csc.get()._field_result=_186349_f;
	};
	_186617_ch=_249bedb5d_getChild(_187217_sc.ptr());
	_186365_fc.get()._field_Exception.get()._field_Parent=_187217_sc.get()._field_tree;
	_186517_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_186517_csc.get()._field_table.get()._field_Vars,1);_186517_csc.get()._field_table.get()._field_Vars.__push(_249caab1b_buildErrorVar(_186617_ch,_186365_fc));;
	_249bee026_checkChildSsc(_187217_sc, _186365_fc.get()._field_Exception,_186617_ch,_186517_csc);
	_186817_model.get()._field_Assigned=_186413_resultNeeded;
	_186817_model.get()._field_Except=_186617_ch;
	if ((_186413_resultNeeded && (_186517_csc.get()._field_result != nullptr))) {
		_249c820cb_pushErr(&(*_self_), _186365_fc.get()._field_Token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _249c99cb4_callFn(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_24904ebb3_FnCallExpr>& _189031_fc, jule::Ptr<_249c80052_Data>& _189053_d) {
	jule::Ptr<_249bcc312_FnIns> _189117_f = _249cb3a8b_Fn(_189053_d.get()._field_Kind.ptr());;
	if (_249bcc4ee_IsBuiltin(_189117_f.ptr())) {
		_249c99247_callBuiltinFn(_self_, _189031_fc,_189053_d);
		return;;
	};
	if ((_249c82c7a_isGlobal(_self_.ptr()) && _189117_f.get()._field_Decl.get()._field_Exceptional)) {
		_249c820cb_pushErr(_self_.ptr(), _189031_fc.get()._field_Token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_249c823ea_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_189053_d=nullptr;
		return;;
	};
	if (((!(_2490ab25d_IsMethod(_189117_f.get()._field_Decl.ptr()))) && _249cc74d9_hasDirective(_189117_f.get()._field_Decl.get()._field_Directives,jule::Str("test", 4)))) {
		_249c820cb_pushErr(_self_.ptr(), _189031_fc.get()._field_Token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_189053_d=nullptr;
		return;;
	};
	if (((((!(_189053_d.get()._field_Mutable)) && _2490ab25d_IsMethod(_189117_f.get()._field_Decl.ptr())) && (!(_189117_f.get()._field_Decl.get()._field_Statically))) && _189117_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_249c820cb_pushErr(_self_.ptr(), _189031_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_249c82a16_isUnsafe(_self_.ptr()))) && _189117_f.get()._field_Decl.get()._field_Unsafety)) {
		_249c820cb_pushErr(_self_.ptr(), _189031_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _191517_dynamicAnnotation = (((_189117_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_189117_f.get()._field_Generics.len() == 0LL)) && (_189117_f.get()._field_Params.len() > 0LL));;
	if (_191517_dynamicAnnotation) {
		_189117_f.get()._field_Generics=jule::Slice<jule::Ptr<_249cae05e_InsGeneric>>::alloc(_189117_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_189117_f.get()._field_Generics.len() != _189117_f.get()._field_Decl.get()._field_Generics.len())) {
		_249c1d331_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_189117_f.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_189117_f.get()._field_Generics.len()),_189031_fc.get()._field_Token);
		_189053_d=nullptr;
		return;;
	};
	jule::Ptr<_249c192c7_Sema> _192417_old = _self_.get()._field_s;;
	if ((_189117_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_189117_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_192417_old != _self_.get()._field_s)) {
			_192417_old.get()._field_errors=jule::append(_192417_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_192417_old;
	});;
	if ((!(_191517_dynamicAnnotation))) {
		if ((!(_189117_f.get()._field_reloaded))) {
			jule::Bool _193921_ok = _249c2605e_reloadFnInsTypes(_self_.get()._field_s, _189117_f);;
			_189117_f.get()._field_reloaded=true;
			if ((!(_193921_ok))) {
				_189053_d=nullptr;
				return;;
			};
		};
		jule::Ptr<_249bcc312_FnIns> _194621_existInstance = _2490999bb_appendInstance(_189117_f.get()._field_Decl.ptr(), _189117_f);;
		if ((_194621_existInstance != nullptr)) {
			_189117_f=_194621_existInstance;
		};
	} else {
		_249c24953_buildFnNonGenericTypeKinds(_self_.get()._field_s, _189117_f);
	};
	_249c71a38_fnCallArgChecker _195417_fcac = _249c71a38_fnCallArgChecker{._field_e=_self_, ._field_args=_189031_fc.get()._field_Args, ._field_errorToken=_189031_fc.get()._field_Token, ._field_f=_189117_f, ._field_dynamicAnnotation=_191517_dynamicAnnotation, };;
	jule::Bool _196117_ok = false;;
	if ((_189117_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		std::tie(_192417_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_192417_old);
		_196117_ok=_249c73e03_check(&_195417_fcac);
		std::tie(_192417_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_192417_old);
	} else {
		_196117_ok=_249c73e03_check(&_195417_fcac);
	};
	if (_191517_dynamicAnnotation) {
		if ((!(_196117_ok))) {
			_189053_d=nullptr;
			return;;
		};
		if ((!(_249c8d060_checkGenericFn(_self_, _189117_f,_189031_fc.get()._field_Token,_189053_d.get()._field_Model)))) {
			_189053_d=nullptr;
			return;;
		};
	};
	jule::Any _198117_callModel = _189053_d.get()._field_Model;;
	if (_2490aaa43_IsVoid(_189117_f.get()._field_Decl.ptr())) {
		_189053_d=_249cac117_buildVoidData();
	} else {
		_189053_d.get()._field_Kind=_189117_f.get()._field_Result;
		_189053_d.get()._field_Lvalue=false;
	};
	jule::Ptr<_249bc7065_FnCallExprModel> _199017_model = jule::new_ptr<_249bc7065_FnCallExprModel>(_249bc7065_FnCallExprModel{._field_Token=_189031_fc.get()._field_Token, ._field_Func=_189117_f, ._field_Expr=_198117_callModel, ._field_Args=_195417_fcac._field_argModels, });;
	_189053_d.get()._field_Model=static_cast<jule::Any>(_199017_model);
	_189053_d.get()._field_Mutable=true;
	if (_189117_f.get()._field_Decl.get()._field_Exceptional) {
		{
			
			if (_249050026_Unhandled(_189031_fc.ptr())) {
				_case_begin_250c94934:;
				{
					_249c820cb_pushErr(_self_.ptr(), _189031_fc.get()._field_Token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_249c823ea_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_24905028a_Ignored(_189031_fc.ptr())) {
				_case_begin_250c94813:;
				{
					goto _match_end_250c9437e;
				}
			}
			else {
				_case_begin_250c9445b:;
				{
					_249c99984_processExceptionalHandler(_self_.ptr(), _189117_f,_189031_fc,_189053_d);
				}
			}
			_match_end_250c9437e:;
		};
	} else if ((!(_249050026_Unhandled(_189031_fc.ptr())))) {
		_249c820cb_pushErr(_self_.ptr(), _189031_fc.get()._field_Token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_249c80052_Data> _249c9a0c2_evalFnCall(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_24904ebb3_FnCallExpr> _201634_fc) {
	jule::Ptr<_249cb078b_TypeKind> _201717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_201717_prefix;
	});;
	{
		auto &_match_expr{ _201634_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_24904c95d_IdentExpr>>()) {
			_case_begin_250c972b6:;
			{
				if ((_201634_fc.get()._field_Expr.get()._field_Token.get()._field_Kind == jule::Str("error", 5))) {
					return _249d6ba34_builtinCallerError(_self_,_201634_fc);
				};
			}
		}
		_match_end_250c97261:;
	};
	jule::Ptr<_249c80052_Data> _203017_d = _249ca186a_evalExprKind(_self_, _201634_fc.get()._field_Expr.get()._field_Kind);;
	if ((_203017_d == nullptr)) {
		return nullptr;
	};
	if (_203017_d.get()._field_Decl) {
		_249c98e28_callTypeFn(_self_, _201634_fc,_203017_d);
		return _203017_d;
	};
	if ((_249cb3a8b_Fn(_203017_d.get()._field_Kind.ptr()) == nullptr)) {
		_249c820cb_pushErr(_self_.ptr(), _201634_fc.get()._field_Token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_249c99cb4_callFn(_self_, _201634_fc,_203017_d);
	return _203017_d;
}



inline jule::Ptr<_249c80052_Data> _249c9a479_evalEnumStatic(_249c81ac0_Eval* _self_, jule::Ptr<_249bd6a25_Enum> _204937_enm, jule::Ptr<_23abd3d83_Token> _204949_ident) {
	jule::Ptr<_249c80052_Data> _205017_d = jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_204937_enm, 3)}), });;
	jule::Ptr<_249bd6030_EnumItem> _205617_item = _249bd75d6_FindItem(_204937_enm.ptr(), _204949_ident.get()._field_Kind);;
	if ((_205617_item == nullptr)) {
		_249c820cb_pushErr(&(*_self_), _204949_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_204937_enm.get()._field_Ident),jule::Any(_204949_ident.get()._field_Kind)}));
	} else {
		_205017_d.get()._field_Constant=jule::new_ptr<_2491152a6_Const>((*(_205617_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_205017_d.get()._field_Model=static_cast<jule::Any>(_205017_d.get()._field_Constant);
		_249cac69a_applyCastModelByEnum(_205017_d,_204937_enm);
	};
	return _205017_d;
}



inline jule::Ptr<_249c80052_Data> _249c9a831_evalTypeEnumStatic(_249c81ac0_Eval* _self_, jule::Ptr<_249bd8120_TypeEnum> _206841_enm, jule::Ptr<_23abd3d83_Token> _206857_ident) {
	jule::Ptr<_249bd7a59_TypeEnumItem> _206917_item = _249bd8b59_FindItem(_206841_enm.ptr(), _206857_ident.get()._field_Kind);;
	if ((_206917_item == nullptr)) {
		_249c820cb_pushErr(&(*_self_), _206857_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_206841_enm.get()._field_Ident),jule::Any(_206857_ident.get()._field_Kind)}));
		return nullptr;
	};
	{
		
		if ((_249cb30da_Enum(_206917_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250ca0e18:;
			{
				return _249c85673__evalEnum(&(*_self_), _249cb30da_Enum(_206917_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_249cb334e_TypeEnum(_206917_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250ca1776:;
			{
				return _249c85d38__evalTypeEnum(&(*_self_), _249cb334e_TypeEnum(_206917_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_249cb3d00_Struct(_206917_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250ca0885:;
			{
				return _249c864ed__evalStruct(&(*_self_), _249cb3d00_Struct(_206917_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else {
			_case_begin_250ca07b9:;
			{
				jule::Ptr<_249c80052_Data> _208221_d = jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=_206917_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_208221_d.get()._field_Model=static_cast<jule::Any>(_208221_d.get()._field_Kind);
				return _208221_d;
			}
		}
		_match_end_250c9ea2c:;
	};
}



inline jule::Ptr<_249c80052_Data> _249c9abd8_evalStructStatic(_249c81ac0_Eval* _self_, jule::Ptr<_249062e4b_StructIns> _209139_s, jule::Ptr<_23abd3d83_Token> _209154_ident) {
	jule::Ptr<_249c80052_Data> _209217_d = jule::new_ptr<_249c80052_Data>();;
	;
	jule::Ptr<_249bcbe38_Fn> _209617_method = _24903bc9e_FindMethod(_209139_s.ptr(), _209154_ident.get()._field_Kind,true);;
	if ((_209617_method != nullptr)) {
		if ((!(_249c1c660_isAccessibleDefine((*_self_)._field_s.ptr(), _209617_method.get()._field_Public,_209617_method.get()._field_Token)))) {
			_249c820cb_pushErr(&(*_self_), _209154_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_209154_ident.get()._field_Kind)}));
			_249c823ea_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_249bcc312_FnIns> _210321_ins = _2490a2b8e_instance(_209617_method);;
		_210321_ins.get()._field_Owner=_209139_s;
		_25003e3e9_pushReference(&(*_self_), _210321_ins);
		_209217_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc84d9_StructStaticIdentExprModel>(_249bc84d9_StructStaticIdentExprModel{._field_Structure=_209139_s, ._field_Expr=_209217_d.get()._field_Model, ._field_Method=_210321_ins}));
		_209217_d.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_210321_ins, 1)});
		return _209217_d;
	};
	jule::Ptr<_249c3702b_Var> _211717_sttc = _249040ad8_FindStatic(_209139_s.ptr(), _209154_ident.get()._field_Kind);;
	if ((_211717_sttc != nullptr)) {
		return _249c88368_evalVar(&(*_self_), _211717_sttc,_209154_ident);
	};
	_249c820cb_pushErr(&(*_self_), _209154_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_209139_s.get()._field_Decl.get()._field_Ident),jule::Any(_209154_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_249c80052_Data> _249c9b139_evalTraitSubIdent(_249c81ac0_Eval* _self_, jule::Ptr<_249c80052_Data> _212640_d, jule::Ptr<_249bd48d0_Trait> _212654_trt, jule::Ptr<_23abd3d83_Token> _212671_ident) {
	jule::Ptr<_249bcbe38_Fn> _212717_f = _249bd575a_FindMethod(_212654_trt.ptr(), _212671_ident.get()._field_Kind);;
	if ((_212717_f == nullptr)) {
		_249c820cb_pushErr(&(*_self_), _212671_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_212654_trt.get()._field_Ident),jule::Any(_212671_ident.get()._field_Kind)}));
		return nullptr;
	};
	return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_2490a2b8e_instance(_212717_f), 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc7dce_TraitSubIdentExprModel>(_249bc7dce_TraitSubIdentExprModel{._field_Token=_212671_ident, ._field_Expr=_212640_d.get()._field_Model, ._field_Method=_212717_f, ._field_Trt=_212654_trt})), });
}



inline jule::Ptr<_249c80052_Data> _249c9b634_evalStructSubIdent(_249c81ac0_Eval* _self_, jule::Ptr<_249c80052_Data> _214541_d, jule::Ptr<_249062e4b_StructIns> _214555_s, jule::Ptr<_24904e201_SubIdentExpr> _214574_si, jule::Bool _214593_ref) {
	jule::Ptr<_24903e268_FieldIns> _214617_f = _24903d0be_FindField(_214555_s.ptr(), _214574_si.get()._field_Ident.get()._field_Kind);;
	if ((_214617_f != nullptr)) {
		if ((!(_249c1c660_isAccessibleDefine((*_self_)._field_s.ptr(), _214617_f.get()._field_Decl.get()._field_Public,_214617_f.get()._field_Decl.get()._field_Token)))) {
			_249c820cb_pushErr(&(*_self_), _214574_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_214617_f.get()._field_Decl.get()._field_Ident)}));
			_249c823ea_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_249bc82ec_StructSubIdentExprModel> _215321_model = jule::new_ptr<_249bc82ec_StructSubIdentExprModel>(_249bc82ec_StructSubIdentExprModel{._field_Token=_214574_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_249c80052_Data>((*(_214541_d))), ._field_ExprKind=_214541_d.get()._field_Kind, ._field_Field=_214617_f, ._field_Owner=_214555_s});;
		_214541_d.get()._field_Model=static_cast<jule::Any>(_215321_model);
		_214541_d.get()._field_Kind=_214617_f.get()._field_Kind;
		_214541_d.get()._field_Lvalue=true;
		if ((_214617_f.get()._field_Decl.get()._field_Mutable && (!(_214541_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_249be9296_scopeChecker>>()) {
					_case_begin_250cb3821:;
					{
						jule::Ptr<_249be9296_scopeChecker> _216825_scope = _249bec3a9_getRoot((*_self_)._field_lookup.operator jule::Ptr<_249be9296_scopeChecker>());;
						_214541_d.get()._field_Mutable=((_216825_scope.get()._field_owner != nullptr) && (_216825_scope.get()._field_owner.get()._field_Owner == _214555_s));
					}
				}
				_match_end_250cb37bb:;
			};
		};
		return _214541_d;
	};
	;
	jule::Ptr<_249bcbe38_Fn> _217717_m = _24903bc9e_FindMethod(_214555_s.ptr(), _214574_si.get()._field_Ident.get()._field_Kind,false);;
	if ((_217717_m == nullptr)) {
		_249c820cb_pushErr(&(*_self_), _214574_si.get()._field_Ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_214555_s.get()._field_Decl.get()._field_Ident),jule::Any(_214574_si.get()._field_Ident.get()._field_Kind)}));
		return nullptr;
	};
	if ((!(_249c1c660_isAccessibleDefine((*_self_)._field_s.ptr(), _217717_m.get()._field_Public,_217717_m.get()._field_Token)))) {
		_249c820cb_pushErr(&(*_self_), _214574_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_217717_m.get()._field_Ident)}));
		_249c823ea_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_24909be1e_IsRef(_217717_m.get()._field_Params[0LL].ptr()) && (!(_214593_ref)))) {
		_249c820cb_pushErr(&(*_self_), _214574_si.get()._field_Ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_249c86ed2_checkDeprecated(&(*_self_), _217717_m.get()._field_Directives,_214574_si.get()._field_Ident);
	jule::Ptr<_249bcc312_FnIns> _219317_ins = _2490a2b8e_instance(_217717_m);;
	_219317_ins.get()._field_Owner=_214555_s;
	_25003e3e9_pushReference(&(*_self_), _219317_ins);
	jule::Ptr<_249c80052_Data> _219617_model = jule::new_ptr<_249c80052_Data>((*(_214541_d)));;
	_214541_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc82ec_StructSubIdentExprModel>(_249bc82ec_StructSubIdentExprModel{._field_Token=_214574_si.get()._field_Ident, ._field_Expr=_219617_model, ._field_ExprKind=_214541_d.get()._field_Kind, ._field_Method=_219317_ins, ._field_Owner=_214555_s}));
	_214541_d.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_219317_ins, 1)});
	return _214541_d;
}



inline jule::Ptr<_249c80052_Data> _249c9b9db_evalSliceSubIdent(_249c81ac0_Eval* _self_, jule::Ptr<_249c80052_Data> _220840_d, jule::Ptr<_23abd3d83_Token> _220854_ident) {
	{
		auto &_match_expr{ _220854_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_250cbce46:;
			{
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_Params=jule::Slice<jule::Ptr<_249bcc125_ParamIns>>::make({jule::new_ptr<_249bcc125_ParamIns>(_249bcc125_ParamIns{._field_Decl=jule::new_ptr<_249bcbc4b_Param>(_249bcbc4b_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_249bcc125_ParamIns>(_249bcc125_ParamIns{._field_Decl=jule::new_ptr<_249bcbc4b_Param>(_249bcbc4b_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d6b6e3_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_220840_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc8aa0_CommonSubIdentExprModel>(_249bc8aa0_CommonSubIdentExprModel{._field_ExprKind=_220840_d.get()._field_Kind, ._field_Expr=_220840_d.get()._field_Model, ._field_Token=_220854_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_250cbcdd0:;
			{
				_249c820cb_pushErr(&(*_self_), _220854_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_220840_d.get()._field_Kind.ptr())),jule::Any(_220854_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_250cbcd69:;
	};
}



inline jule::Ptr<_249c80052_Data> _249c9bd93_evalArraySubIdent(_249c81ac0_Eval* _self_, jule::Ptr<_249c80052_Data> _224540_d, jule::Ptr<_23abd3d83_Token> _224554_ident) {
	{
		auto &_match_expr{ _224554_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_250cc17c9:;
			{
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_Params=jule::Slice<jule::Ptr<_249bcc125_ParamIns>>::make({jule::new_ptr<_249bcc125_ParamIns>(_249bcc125_ParamIns{._field_Decl=jule::new_ptr<_249bcbc4b_Param>(_249bcbc4b_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_249bcc125_ParamIns>(_249bcc125_ParamIns{._field_Decl=jule::new_ptr<_249bcbc4b_Param>(_249bcbc4b_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d6b6e3_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_224540_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc8aa0_CommonSubIdentExprModel>(_249bc8aa0_CommonSubIdentExprModel{._field_ExprKind=_224540_d.get()._field_Kind, ._field_Expr=_224540_d.get()._field_Model, ._field_Token=_224554_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_250cc1763:;
			{
				_249c820cb_pushErr(&(*_self_), _224554_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_224540_d.get()._field_Kind.ptr())),jule::Any(_224554_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_250cc1686:;
	};
}



inline jule::Ptr<_249c80052_Data> _249c9c1a1_evalIntTypeStatic(_249c81ac0_Eval* _self_, jule::Ptr<_23abd3d83_Token> _228236_ident) {
	;
	{
		auto &_match_expr{ _228236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_250cc53d2:;
			{
				jule::Ptr<_2491152a6_Const> _228621_c = static__2491257e4_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2495852d6_Max(jule::Str("int", 3)))));;
				_228621_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_228621_c), ._field_Constant=_228621_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_250cc5448:;
			{
				jule::Ptr<_2491152a6_Const> _229421_c = static__2491257e4_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24957c4a9_Min(jule::Str("int", 3)))));;
				_229421_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_229421_c), ._field_Constant=_229421_c});
			}
		}
		else {
			_case_begin_250cc5190:;
			{
				_249c820cb_pushErr(&(*_self_), _228236_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_228236_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_250cc536b:;
	};
}



inline jule::Ptr<_249c80052_Data> _249c9c4ae_evalUintTypeStatic(_249c81ac0_Eval* _self_, jule::Ptr<_23abd3d83_Token> _230737_ident) {
	;
	{
		auto &_match_expr{ _230737_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_250cc957e:;
			{
				jule::Ptr<_2491152a6_Const> _231121_c = static__24913c82d_NewU64(static_cast<jule::U64>(static_cast<jule::U64>(_2495852d6_Max(jule::Str("uint", 4)))));;
				_231121_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=static_cast<jule::Any>(_231121_c), ._field_Constant=_231121_c});
			}
		}
		else {
			_case_begin_250cc9518:;
			{
				_249c820cb_pushErr(&(*_self_), _230737_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_230737_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_250cc94b3:;
	};
}



inline jule::Ptr<_249c80052_Data> _249c9c7bc_evalI8TypeStatic(_249c81ac0_Eval* _self_, jule::Ptr<_23abd3d83_Token> _232435_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _232435_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_250cccb26:;
			{
				jule::Ptr<_2491152a6_Const> _233021_c = static__2491257e4_NewI64(127LL);;
				_233021_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_233021_c), ._field_Constant=_233021_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_250cccb8c:;
			{
				jule::Ptr<_2491152a6_Const> _233821_c = static__2491257e4_NewI64(-128LL);;
				_233821_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_233821_c), ._field_Constant=_233821_c});
			}
		}
		else {
			_case_begin_250cccab0:;
			{
				_249c820cb_pushErr(&(*_self_), _232435_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_232435_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_250ccc7b3:;
	};
}



inline jule::Ptr<_249c80052_Data> _249c9caca_evalI16TypeStatic(_249c81ac0_Eval* _self_, jule::Ptr<_23abd3d83_Token> _235136_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _235136_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_24e5cc878:;
			{
				jule::Ptr<_2491152a6_Const> _235721_c = static__2491257e4_NewI64(32767LL);;
				_235721_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_235721_c), ._field_Constant=_235721_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_24e5e7530:;
			{
				jule::Ptr<_2491152a6_Const> _236521_c = static__2491257e4_NewI64(-32768LL);;
				_236521_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_236521_c), ._field_Constant=_236521_c});
			}
		}
		else {
			_case_begin_24e5e8696:;
			{
				_249c820cb_pushErr(&(*_self_), _235136_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_235136_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_24e5e4a6b:;
	};
}



inline jule::Ptr<_249c80052_Data> _249c9cdd8_evalI32TypeStatic(_249c81ac0_Eval* _self_, jule::Ptr<_23abd3d83_Token> _237836_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _237836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_24e92175a:;
			{
				jule::Ptr<_2491152a6_Const> _238421_c = static__2491257e4_NewI64(2147483647LL);;
				_238421_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_238421_c), ._field_Constant=_238421_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_24e9217c1:;
			{
				jule::Ptr<_2491152a6_Const> _239221_c = static__2491257e4_NewI64(-2147483648LL);;
				_239221_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_239221_c), ._field_Constant=_239221_c});
			}
		}
		else {
			_case_begin_24e9216e4:;
			{
				_249c820cb_pushErr(&(*_self_), _237836_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_237836_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_24e9213e7:;
	};
}



inline jule::Ptr<_249c80052_Data> _249c9d1e6_evalI64TypeStatic(_249c81ac0_Eval* _self_, jule::Ptr<_23abd3d83_Token> _240536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _240536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_24e925cae:;
			{
				jule::Ptr<_2491152a6_Const> _241121_c = static__2491257e4_NewI64(jule::MAX_I64);;
				_241121_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_241121_c), ._field_Constant=_241121_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_24e925d25:;
			{
				jule::Ptr<_2491152a6_Const> _241921_c = static__2491257e4_NewI64(jule::MIN_I64);;
				_241921_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_241921_c), ._field_Constant=_241921_c});
			}
		}
		else {
			_case_begin_24e925c48:;
			{
				_249c820cb_pushErr(&(*_self_), _240536_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_240536_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_24e92594b:;
	};
}



inline jule::Ptr<_249c80052_Data> _249c9d504_evalU8TypeStatic(_249c81ac0_Eval* _self_, jule::Ptr<_23abd3d83_Token> _243235_ident) {
	;
	;
	{
		auto &_match_expr{ _243235_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_24e929dc3:;
			{
				jule::Ptr<_2491152a6_Const> _243721_c = static__24913c82d_NewU64(255LLU);;
				_243721_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_243721_c), ._field_Constant=_243721_c});
			}
		}
		else {
			_case_begin_24e925d8b:;
			{
				_249c820cb_pushErr(&(*_self_), _243235_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_243235_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_24e929bc5:;
	};
}



inline jule::Ptr<_249c80052_Data> _249c9d812_evalU16TypeStatic(_249c81ac0_Eval* _self_, jule::Ptr<_23abd3d83_Token> _245036_ident) {
	;
	;
	{
		auto &_match_expr{ _245036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_24e92cc61:;
			{
				jule::Ptr<_2491152a6_Const> _245521_c = static__24913c82d_NewU64(65535LLU);;
				_245521_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_245521_c), ._field_Constant=_245521_c});
			}
		}
		else {
			_case_begin_24e929e39:;
			{
				_249c820cb_pushErr(&(*_self_), _245036_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_245036_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_24e92ca63:;
	};
}



inline jule::Ptr<_249c80052_Data> _249c9db20_evalU32TypeStatic(_249c81ac0_Eval* _self_, jule::Ptr<_23abd3d83_Token> _246836_ident) {
	;
	;
	{
		auto &_match_expr{ _246836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_24e930aee:;
			{
				jule::Ptr<_2491152a6_Const> _247321_c = static__24913c82d_NewU64(4294967295LLU);;
				_247321_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_247321_c), ._field_Constant=_247321_c});
			}
		}
		else {
			_case_begin_24e92ccc7:;
			{
				_249c820cb_pushErr(&(*_self_), _246836_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_246836_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_24e930901:;
	};
}



inline jule::Ptr<_249c80052_Data> _249c9de2d_evalU64TypeStatic(_249c81ac0_Eval* _self_, jule::Ptr<_23abd3d83_Token> _248636_ident) {
	;
	;
	{
		auto &_match_expr{ _248636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_24e93398c:;
			{
				jule::Ptr<_2491152a6_Const> _249121_c = static__24913c82d_NewU64(jule::MAX_U64);;
				_249121_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_249121_c), ._field_Constant=_249121_c});
			}
		}
		else {
			_case_begin_24e930b65:;
			{
				_249c820cb_pushErr(&(*_self_), _248636_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_248636_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_24e93378e:;
	};
}



inline jule::Ptr<_249c80052_Data> _249c9e23b_evalF32TypeStatic(_249c81ac0_Eval* _self_, jule::Ptr<_23abd3d83_Token> _250436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _250436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_24e937067:;
			{
				jule::Ptr<_2491152a6_Const> _251121_c = static__24915a20d_NewF64(340282346638528860000000000000000000000.0);;
				_251121_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_251121_c), ._field_Constant=_251121_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_24e9370cd:;
			{
				jule::Ptr<_2491152a6_Const> _251921_c = static__24915a20d_NewF64(-340282346638528860000000000000000000000.0);;
				_251921_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_251921_c), ._field_Constant=_251921_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_24e937144:;
			{
				jule::Ptr<_2491152a6_Const> _252721_c = static__24915a20d_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_252721_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_252721_c), ._field_Constant=_252721_c});
			}
		}
		else {
			_case_begin_24e936ebd:;
			{
				_249c820cb_pushErr(&(*_self_), _250436_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_250436_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_24e936e57:;
	};
}



inline jule::Ptr<_249c80052_Data> _249c9e549_evalF64TypeStatic(_249c81ac0_Eval* _self_, jule::Ptr<_23abd3d83_Token> _254036_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _254036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_24e93cbd8:;
			{
				jule::Ptr<_2491152a6_Const> _254721_c = static__24915a20d_NewF64(jule::MAX_F64);;
				_254721_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_254721_c), ._field_Constant=_254721_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_24e93cc4e:;
			{
				jule::Ptr<_2491152a6_Const> _255521_c = static__24915a20d_NewF64(jule::MIN_F64);;
				_255521_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_255521_c), ._field_Constant=_255521_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_24e93ccb5:;
			{
				jule::Ptr<_2491152a6_Const> _256321_c = static__24915a20d_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_256321_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_256321_c), ._field_Constant=_256321_c});
			}
		}
		else {
			_case_begin_24e93cb3e:;
			{
				_249c820cb_pushErr(&(*_self_), _254036_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_254036_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_24e93cac8:;
	};
}



inline jule::Ptr<_249c80052_Data> _249c9e901_evalPrimStatic(_249c81ac0_Eval* _self_, jule::Str _257633_kind, jule::Ptr<_23abd3d83_Token> _257644_ident) {
	{
		auto &_match_expr{ _257633_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_24e94288b:;
			{
				return _249c9c1a1_evalIntTypeStatic(&(*_self_), _257644_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_24e942902:;
			{
				return _249c9c4ae_evalUintTypeStatic(&(*_self_), _257644_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_24e943293:;
			{
				return _249c9c7bc_evalI8TypeStatic(&(*_self_), _257644_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_24e943309:;
			{
				return _249c9caca_evalI16TypeStatic(&(*_self_), _257644_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_24e943370:;
			{
				return _249c9cdd8_evalI32TypeStatic(&(*_self_), _257644_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_24e9433d6:;
			{
				return _249c9d1e6_evalI64TypeStatic(&(*_self_), _257644_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_24e94345d:;
			{
				return _249c9d504_evalU8TypeStatic(&(*_self_), _257644_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_24e9434d5:;
			{
				return _249c9d812_evalU16TypeStatic(&(*_self_), _257644_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_24e943590:;
			{
				return _249c9db20_evalU32TypeStatic(&(*_self_), _257644_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_24e943606:;
			{
				return _249c9de2d_evalU64TypeStatic(&(*_self_), _257644_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_24e94366c:;
			{
				return _249c9e23b_evalF32TypeStatic(&(*_self_), _257644_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_24e9436d3:;
			{
				return _249c9e549_evalF64TypeStatic(&(*_self_), _257644_ident);
			}
		}
		else {
			_case_begin_24e94267c:;
			{
				_249c820cb_pushErr(&(*_self_), _257644_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_257633_kind),jule::Any(_257644_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_24e93e998:;
	};
}



inline jule::Ptr<_249c80052_Data> _249c9eca8_evalTypeStatic(_249c81ac0_Eval* _self_, jule::Ptr<_249c80052_Data> _260837_d, jule::Ptr<_24904e201_SubIdentExpr> _260851_si) {
	{
		
		if ((_249cb289d_Prim(_260837_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_24e9481dd:;
			{
				return _249c9e901_evalPrimStatic(&(*_self_), _249cb55c6_Str(_249cb289d_Prim(_260837_d.get()._field_Kind.ptr()).ptr()),_260851_si.get()._field_Ident);
			}
		}
		else if ((_249cb30da_Enum(_260837_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_24e948254:;
			{
				return _249c9a479_evalEnumStatic(&(*_self_), _249cb30da_Enum(_260837_d.get()._field_Kind.ptr()),_260851_si.get()._field_Ident);
			}
		}
		else if ((_249cb334e_TypeEnum(_260837_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_24e9482ba:;
			{
				return _249c9a831_evalTypeEnumStatic(&(*_self_), _249cb334e_TypeEnum(_260837_d.get()._field_Kind.ptr()),_260851_si.get()._field_Ident);
			}
		}
		else if ((_249cb3d00_Struct(_260837_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_24e949024:;
			{
				return _249c9abd8_evalStructStatic(&(*_self_), _249cb3d00_Struct(_260837_d.get()._field_Kind.ptr()),_260851_si.get()._field_Ident);
			}
		}
		else {
			_case_begin_24e948122:;
			{
				_249c820cb_pushErr(&(*_self_), _260851_si.get()._field_Ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_260837_d.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_24e948067:;
	};
}



inline jule::Ptr<_249c80052_Data> _249ca0160_evalObjSubIdent(_249c81ac0_Eval* _self_, jule::Ptr<_249c80052_Data> _262438_d, jule::Ptr<_24904e201_SubIdentExpr> _262452_si) {
	if (_23abd6627_IsIgnoreIdent(_262452_si.get()._field_Ident.get()._field_Kind)) {
		_249c820cb_pushErr(&(*_self_), _262452_si.get()._field_Ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_249cb078b_TypeKind> _263017_kind = _262438_d.get()._field_Kind;;
	{
		
		if ((_249cb2d76_Ptr(_262438_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_24e94e524:;
			{
				jule::Ptr<_249cbc05b_Ptr> _263317_ptr = _249cb2d76_Ptr(_262438_d.get()._field_Kind.ptr());;
				if (_249cbca2e_IsUnsafe(_263317_ptr.ptr())) {
					goto _match_end_24e94e3c0;
				};
				if (((!(_262452_si.get()._field_IsSelf)) && (!(_249c82a16_isUnsafe(&(*_self_)))))) {
					_249c820cb_pushErr(&(*_self_), _262452_si.get()._field_Ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_263017_kind=_249cb2d76_Ptr(_262438_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_249cb2b12_Sptr(_262438_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_24e94e58a:;
			{
				_263017_kind=_249cb2b12_Sptr(_262438_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_24e94e3c0:;
	};
	{
		
		if ((_249cb4064_Trait(_262438_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_24e9522d5:;
			{
				return _249c9b139_evalTraitSubIdent(&(*_self_), _262438_d,_249cb4064_Trait(_262438_d.get()._field_Kind.ptr()),_262452_si.get()._field_Ident);
			}
		}
		else if ((_249cb3d00_Struct(_263017_kind.ptr()) != nullptr)) {
			_case_begin_24e95235c:;
			{
				jule::Ptr<_249062e4b_StructIns> _264917_s = _249cb3d00_Struct(_263017_kind.ptr());;
				if (_249cab5ab_isInstancedStruct(_264917_s)) {
					jule::Bool _265125_usedReferenceElem = (_249cb2b12_Sptr(_262438_d.get()._field_Kind.ptr()) != nullptr);;
					return _249c9b634_evalStructSubIdent(&(*_self_), _262438_d,_249cb3d00_Struct(_263017_kind.ptr()),_262452_si,_265125_usedReferenceElem);
				};
			}
		}
		else if ((_249cb3827_Slc(_263017_kind.ptr()) != nullptr)) {
			_case_begin_24e9523d4:;
			{
				return _249c9b9db_evalSliceSubIdent(&(*_self_), _262438_d,_262452_si.get()._field_Ident);
			}
		}
		else if ((_249cb35b3_Arr(_263017_kind.ptr()) != nullptr)) {
			_case_begin_24e95245b:;
			{
				return _249c9bd93_evalArraySubIdent(&(*_self_), _262438_d,_262452_si.get()._field_Ident);
			}
		}
		_match_end_24e952208:;
	};
	_249c820cb_pushErr(&(*_self_), _262452_si.get()._field_Ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_262438_d.get()._field_Kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_249c80052_Data> _249ca046d_evalSubIdent(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_24904e201_SubIdentExpr> _266336_si) {
	jule::Ptr<_249cb078b_TypeKind> _266417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_266417_prefix;
	});;
	jule::Ptr<_249c80052_Data> _266817_d = _249ca186a_evalExprKind(_self_, _266336_si.get()._field_Expr.get()._field_Kind);;
	if ((_266817_d == nullptr)) {
		return nullptr;
	};
	if (_266817_d.get()._field_Decl) {
		return _249c9eca8_evalTypeStatic(_self_.ptr(), _266817_d,_266336_si);
	};
	return _249ca0160_evalObjSubIdent(_self_.ptr(), _266817_d,_266336_si);
}



inline jule::Ptr<_249c80052_Data> _249ca077b_evalTuple(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_24904b572_TupleExpr> _268033_tup) {
	jule::Ptr<_249cb9ed2_Tuple> _268117_tupT = jule::new_ptr<_249cb9ed2_Tuple>();;
	_268117_tupT.get()._field_Types=jule::Slice<jule::Ptr<_249cb078b_TypeKind>>::alloc(0LL,_268033_tup.get()._field_Expr.len());
	jule::Ptr<_249bc8c8c_TupleExprModel> _268417_model = jule::new_ptr<_249bc8c8c_TupleExprModel>(_249bc8c8c_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_249c80052_Data>>::alloc(0LL,_268033_tup.get()._field_Expr.len())});;
	jule::Bool _268817_ok = true;;
	{
		auto &expr = _268033_tup.get()._field_Expr;
		auto it = expr.begin();
		_iter_begin_24e95c0e2:;
		if (it != expr.end()) {
			jule::Ptr<_24904a8e5_Expr> _268921_expr = *it;
			{
				jule::Ptr<_249c80052_Data> _269021_d = _249ca186a_evalExprKind(_self_, _268921_expr.get()._field_Kind);;
				if ((_269021_d == nullptr)) {
					_268817_ok=false;
					goto _iter_next_24e95c0e2;
				};
				_268117_tupT.get()._field_Types = jule::alloc_for_append(_268117_tupT.get()._field_Types,1);_268117_tupT.get()._field_Types.__push(_269021_d.get()._field_Kind);;
				_268417_model.get()._field_Datas = jule::alloc_for_append(_268417_model.get()._field_Datas,1);_268417_model.get()._field_Datas.__push(_269021_d);;
			}
			_iter_next_24e95c0e2:;
			++it;
			goto _iter_begin_24e95c0e2;
		}
		_iter_end_24e95c0e2:;
	};
	if ((!(_268817_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_268117_tupT, 9)}), ._field_Model=static_cast<jule::Any>(_268417_model), });
}



inline jule::Ptr<_249c80052_Data> _249ca0b33_evalMap(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_249cbaa0a_Map> _270931_m, jule::Ptr<_249051313_BraceLit> _270944_lit) {
	jule::Ptr<_249bc7a05_MapExprModel> _271017_model = jule::new_ptr<_249bc7a05_MapExprModel>(_249bc7a05_MapExprModel{._field_KeyKind=_270931_m.get()._field_Key, ._field_ValKind=_270931_m.get()._field_Val, });;
	{
		auto &expr = _270944_lit.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_24e9605ce:;
		if (it != expr.end()) {
			jule::Ptr<_24904a8e5_Expr> _271521_expr = *it;
			{
				{
					auto &_match_expr{ _271521_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_249051d2a_KeyValPair>>()) {
						_case_begin_24e96114b:;
						{
							goto _match_end_24e960e2b;
						}
					}
					else {
						_case_begin_24e9610d5:;
						{
							_249c820cb_pushErr(_self_.ptr(), _270944_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_24e960e2b:;
				};
				jule::Ptr<_249051d2a_KeyValPair> _272521_pair = _271521_expr.get()._field_Kind.operator jule::Ptr<_249051d2a_KeyValPair>();;
				jule::Ptr<_249c80052_Data> _272721_key = _249ca186a_evalExprKind(_self_, _272521_pair.get()._field_Key.get()._field_Kind);;
				if ((_272721_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_249c80052_Data> _273221_val = _249ca186a_evalExprKind(_self_, _272521_pair.get()._field_Val.get()._field_Kind);;
				if ((_273221_val == nullptr)) {
					return nullptr;
				};
				_249c23d70_checkAssignType(_self_.get()._field_s, false,_270931_m.get()._field_Key,_272721_key,_272521_pair.get()._field_Colon);
				_249c23d70_checkAssignType(_self_.get()._field_s, false,_270931_m.get()._field_Val,_273221_val,_272521_pair.get()._field_Colon);
				_271017_model.get()._field_Entries = jule::alloc_for_append(_271017_model.get()._field_Entries,1);_271017_model.get()._field_Entries.__push(jule::new_ptr<_249bc7818_KeyValPairExprModel>(_249bc7818_KeyValPairExprModel{._field_Key=_272721_key.get()._field_Model, ._field_Val=_273221_val.get()._field_Model}));;
			}
			_iter_next_24e9605ce:;
			++it;
			goto _iter_begin_24e9605ce;
		}
		_iter_end_24e9605ce:;
	};
	return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_270931_m, 10)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_271017_model), });
}



inline jule::Ptr<_249c80052_Data> _249ca0e41_evalBraceLit(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_249051313_BraceLit> _275336_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_250dba7b3:;
			{
				_249c820cb_pushErr(_self_.ptr(), _275336_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_249cb42c8_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_250dba829:;
			{
				return _249ca0b33_evalMap(_self_, _249cb42c8_Map(_self_.get()._field_prefix.ptr()),_275336_lit);
			}
		}
		else if ((_249cb3d00_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_250dba890:;
			{
				return _249c98279_evalStructLitExplicit(_self_, _249cb3d00_Struct(_self_.get()._field_prefix.ptr()),_275336_lit.get()._field_Exprs,_275336_lit.get()._field_Token);
			}
		}
		else {
			_case_begin_250dba708:;
			{
				_249c820cb_pushErr(_self_.ptr(), _275336_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_250dba64d:;
	};
}



inline jule::Ptr<_249c80052_Data> _249ca124e_evalAnonFn(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_2490581d8_FnDecl> _276834_decl) {
	_249cbdcb6_typeChecker _276917_tc = _249cbdcb6_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_249bcc312_FnIns> _277417_ins = _249cc5608_buildFn(&_276917_tc, _276834_decl);;
	if ((_277417_ins == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_249be9296_scopeChecker>>()) {
			_case_begin_250dc0ad7:;
			{
				jule::Ptr<_249be9296_scopeChecker> _278021_sc = _self_.get()._field_lookup.operator jule::Ptr<_249be9296_scopeChecker>();;
				jule::Ptr<_249be9296_scopeChecker> _278121_scc = _249c0954d_newChildChecker(_278021_sc);;
				_278121_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_249be800e_scopeLabel>>>(nullptr);
				_278121_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_249be8482_scopeGoto>>>(nullptr);
				_278121_scc.get()._field_owner=nullptr;
				_278121_scc.get()._field_childIndex=0LL;
				_278121_scc.get()._field_it=0LLU;
				_278121_scc.get()._field_cse=0LLU;
				_278121_scc.get()._field_owner=_277417_ins;
				_249c32576_checkFnInsSc(_self_.get()._field_s.ptr(), _277417_ins,_278121_scc);
			}
		}
		else {
			_case_begin_250dc02ce:;
			{
				_249c32b1a_checkFnIns(_self_.get()._field_s, _277417_ins);
			}
		}
		_match_end_250dc0279:;
	};
	return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_277417_ins, 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc762b_AnonFnExprModel>(_249bc762b_AnonFnExprModel{._field_Func=_277417_ins, ._field_Global=_249c82c7a_isGlobal(_self_.ptr())})), });
}



inline jule::Ptr<_249c80052_Data> _249ca155c_evalBinop(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_24904e674_BinopExpr> _280333_op) {
	_249ca4197_binaryEval _280417_bs = static__249ca475d_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_249cb5263_Prim> _280717_prim = _249cb289d_Prim(_self_.get()._field_prefix.ptr());;
		if (((_280717_prim == nullptr) || (!(_249bc455c_IsNum(_249cb55c6_Str(_280717_prim.ptr())))))) {
			jule::Ptr<_249cb078b_TypeKind> _280925_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_280925_prefix;
			});;
			return _249ca9a3d_eval(&_280417_bs, _280333_op);
		};
	};
	return _249ca9a3d_eval(&_280417_bs, _280333_op);
}



inline jule::Ptr<_249c80052_Data> _249ca186a_evalExprKind(jule::Ptr<_249c81ac0_Eval> _self_, jule::Any _281836_kind) {
	{
		auto &_match_expr{ _281836_kind };
		
		if (_match_expr.type_is<jule::Ptr<_24904abd1_RangeExpr>>()) {
			_case_begin_250dc7ddb:;
			{
				jule::Ptr<_24904abd1_RangeExpr> _282121_e = _281836_kind.operator jule::Ptr<_24904abd1_RangeExpr>();;
				return _249ca186a_evalExprKind(_self_, _282121_e.get()._field_Expr.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904b929_LitExpr>>()) {
			_case_begin_250dc80a6:;
			{
				return _249c8492a_evalLit(_self_.ptr(), _281836_kind.operator jule::Ptr<_24904b929_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904c95d_IdentExpr>>()) {
			_case_begin_250dc811c:;
			{
				return _249c88dd5_evalIdent(_self_.ptr(), _281836_kind.operator jule::Ptr<_24904c95d_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904d167_UnaryExpr>>()) {
			_case_begin_250dc8183:;
			{
				return _249c891e3_evalUnary(_self_, _281836_kind.operator jule::Ptr<_24904d167_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904d51e_VariadicExpr>>()) {
			_case_begin_250dc820a:;
			{
				return _249c89501_evalVariadic(_self_, _281836_kind.operator jule::Ptr<_24904d51e_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904c133_UnsafeExpr>>()) {
			_case_begin_250dc8282:;
			{
				return _249c8980e_evalUnsafe(_self_, _281836_kind.operator jule::Ptr<_24904c133_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24905229d_SliceExpr>>()) {
			_case_begin_250dc8309:;
			{
				return _249c8a37b_evalSliceExpr(_self_, _281836_kind.operator jule::Ptr<_24905229d_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249052b3e_IndexingExpr>>()) {
			_case_begin_250dc83b4:;
			{
				return _249c8d6c0_evalIndexing(_self_, _281836_kind.operator jule::Ptr<_249052b3e_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249053249_SlicingExpr>>()) {
			_case_begin_250dc842a:;
			{
				return _249c8e88b_evalSlicing(_self_, _281836_kind.operator jule::Ptr<_249053249_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904d8c6_CastExpr>>()) {
			_case_begin_250dc8491:;
			{
				return _249c97a1a_evalCast(_self_, _281836_kind.operator jule::Ptr<_24904d8c6_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904dc7d_NsSelectionExpr>>()) {
			_case_begin_250dc8507:;
			{
				return _249c97d28_evalNsSelection(_self_.ptr(), _281836_kind.operator jule::Ptr<_24904dc7d_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249050d90_StructLit>>()) {
			_case_begin_250dc857e:;
			{
				return _249c98587_evalStructLit(_self_, _281836_kind.operator jule::Ptr<_249050d90_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2490463c4_TypeDecl>>()) {
			_case_begin_250dc8606:;
			{
				return _249c98b09_evalType(_self_.ptr(), _281836_kind.operator jule::Ptr<_2490463c4_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904ebb3_FnCallExpr>>()) {
			_case_begin_250dc867d:;
			{
				return _249c9a0c2_evalFnCall(_self_, _281836_kind.operator jule::Ptr<_24904ebb3_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904e201_SubIdentExpr>>()) {
			_case_begin_250dc8705:;
			{
				return _249ca046d_evalSubIdent(_self_, _281836_kind.operator jule::Ptr<_24904e201_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904b572_TupleExpr>>()) {
			_case_begin_250dc877c:;
			{
				return _249ca077b_evalTuple(_self_, _281836_kind.operator jule::Ptr<_24904b572_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249051313_BraceLit>>()) {
			_case_begin_250dc8804:;
			{
				return _249ca0e41_evalBraceLit(_self_, _281836_kind.operator jule::Ptr<_249051313_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2490581d8_FnDecl>>()) {
			_case_begin_250dc887b:;
			{
				return _249ca124e_evalAnonFn(_self_, _281836_kind.operator jule::Ptr<_2490581d8_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904e674_BinopExpr>>()) {
			_case_begin_250dc8903:;
			{
				return _249ca155c_evalBinop(_self_, _281836_kind.operator jule::Ptr<_24904e674_BinopExpr>());
			}
		}
		else {
			_case_begin_250dc7b33:;
			{
				return nullptr;
			}
		}
		_match_end_250dc7a45:;
	};
}



inline jule::Ptr<_249c80052_Data> _249ca1b78_eval(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_24904a8e5_Expr> _286628_expr) {
	jule::Ptr<_249c80052_Data> _286717_d = _249ca186a_evalExprKind(_self_, _286628_expr.get()._field_Kind);;
	if (((_286717_d == nullptr) || (_286717_d.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_249cb3a8b_Fn(_286717_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250dd3d92:;
			{
				jule::Ptr<_249bcc312_FnIns> _287421_f = _249cb3a8b_Fn(_286717_d.get()._field_Kind.ptr());;
				if (_249bcc4ee_IsBuiltin(_287421_f.ptr())) {
					goto _match_end_250dd3c1b;
				};
				if ((_287421_f.get()._field_Generics.len() != _287421_f.get()._field_Decl.get()._field_Generics.len())) {
					_249c1be89_pushErr(_self_.get()._field_s.ptr(), _286628_expr.get()._field_Token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (((!(_287421_f.get()._field_Decl.get()._field_Statically)) && _2490ab25d_IsMethod(_287421_f.get()._field_Decl.ptr()))) {
					_249c1be89_pushErr(_self_.get()._field_s.ptr(), _286628_expr.get()._field_Token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_250dd3c1b:;
	};
	return _286717_d;
}



inline jule::Ptr<_249c80052_Data> _249ca1e86_evalExpr(jule::Ptr<_249c81ac0_Eval> _self_, jule::Ptr<_24904a8e5_Expr> _289232_expr) {
	jule::Ptr<_249c80052_Data> _289317_d = _249ca1b78_eval(_self_, _289232_expr);;
	{
		
		if ((_289317_d == nullptr)) {
			_case_begin_250dd7e40:;
			{
				return nullptr;
			}
		}
		else if (_289317_d.get()._field_Decl) {
			_case_begin_250dd7eb7:;
			{
				_249c820cb_pushErr(_self_.ptr(), _289232_expr.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_250dd7da7:;
			{
				return _289317_d;
			}
		}
		_match_end_250dd7d41:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _249c81ac0_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _249ca2409_unaryEval static__249ca28b0_new(jule::Ptr<_249c81ac0_Eval> _291323_e) {
	return _249ca2409_unaryEval{._field_e=_291323_e, };
}



inline void _249ca2a8b_minus(_249ca2409_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_250dd9c00:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_249cb289d_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250dda1a6:;
			{
				if ((!(_249bc455c_IsNum(_249cb0b87_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_249cb3d00_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250dda21c:;
			{
				if ((_249cb3d00_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_250dd9859:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_250dd94b3:;
	};
	if (_249c80915_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_2491660d7_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_250ddd808:;
				{
					_24917b828_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_2491673a2_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_24916a839_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_250ddd880:;
				{
					_24916a0db_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_24915c551_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_249177a22_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_250ddd907:;
				{
					_24916a0db_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_249168260_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_250ddd6c6:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc65c5_UnaryExprModel>(_249bc65c5_UnaryExprModel{._field_Expr=jule::new_ptr<_249c80052_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _249ca2c67_plus(_249ca2409_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_250de34cd:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_249cb289d_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250de3984:;
			{
				if ((!(_249bc455c_IsNum(_249cb0b87_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_249cb3d00_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250de39ea:;
			{
				if ((_249cb3d00_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_250de3137:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_250de305a:;
	};
	if (_249c80915_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_2491660d7_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_250de70d6:;
				{
					_24917b828_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_2491673a2_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_24916a839_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_250de715d:;
				{
					_24916a0db_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_24915c551_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_249177a22_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_250de71d5:;
				{
					_24916a0db_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_249168260_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_250de6ea4:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc65c5_UnaryExprModel>(_249bc65c5_UnaryExprModel{._field_Expr=jule::new_ptr<_249c80052_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _249ca2e43_caret(_249ca2409_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_250debc89:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_249cb289d_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250dec240:;
			{
				if ((!(_249bc42e8_IsInt(_249cb0b87_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_249cb3d00_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250dec2a6:;
			{
				if ((_249cb3d00_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_250deb8e3:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_250deb816:;
	};
	if (_249c80915_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_24916a839_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_250e00881:;
				{
					_24916a0db_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_24915c551_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_249177a22_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_250e00908:;
				{
					_24917646b_SetU64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_24915d73e_ReadU64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_250e00760:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc65c5_UnaryExprModel>(_249bc65c5_UnaryExprModel{._field_Expr=jule::new_ptr<_249c80052_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _249ca311e_excl(_249ca2409_unaryEval* _self_) {
	jule::Ptr<_249cb5263_Prim> _303213_t = _249cb289d_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
	if (((_303213_t == nullptr) || (!(_249cb8233_IsBool(_303213_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_249c80915_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_2491273d9_IsBool((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_250e05886:;
				{
					_249177d96_SetBool((*_self_)._field_d.get()._field_Constant.ptr(), (!(_24915de8c_ReadBool((*_self_)._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_250e05776:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc65c5_UnaryExprModel>(_249bc65c5_UnaryExprModel{._field_Expr=jule::new_ptr<_249c80052_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _249ca32ea_star(_249ca2409_unaryEval* _self_) {
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc65c5_UnaryExprModel>(_249bc65c5_UnaryExprModel{._field_Expr=jule::new_ptr<_249c80052_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
	{
		
		if ((_249cb2d76_Ptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250e08b86:;
			{
				if ((!(_249c82a16_isUnsafe((*_self_)._field_e.ptr())))) {
					_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_249cbc05b_Ptr> _306421_t = _249cb2d76_Ptr((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_249cbca2e_IsUnsafe(_306421_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_Kind=_306421_t.get()._field_Elem;
			}
		}
		else if ((_249cb2b12_Sptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250e0913c:;
			{
				(*_self_)._field_d.get()._field_Kind=_249cb2b12_Sptr((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_250e087e0:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_250e08779:;
	};
	(*_self_)._field_d.get()._field_Constant=nullptr;
	(*_self_)._field_d.get()._field_Lvalue=true;
}



inline void _249ca34c6_amper(_249ca2409_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_249bc699e_StructLitExprModel>>()) {
			_case_begin_250e0edbd:;
			{
				jule::Ptr<_249bc699e_StructLitExprModel> _308421_lit = (*_self_)._field_d.get()._field_Model.operator jule::Ptr<_249bc699e_StructLitExprModel>();;
				_249caa7ca_makeStructLitAlloc((*_self_)._field_d,_308421_lit);
			}
		}
		else {
			_case_begin_250e0d66e:;
			{
				{
					
					if (_249cc7781_canGetPtr((*_self_)._field_d)) {
						_case_begin_250e0e351:;
						{
							(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(jule::new_ptr<_249cbc05b_Ptr>(_249cbc05b_Ptr{._field_Elem=(*_self_)._field_d.get()._field_Kind}), 12)});
							(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc65c5_UnaryExprModel>(_249bc65c5_UnaryExprModel{._field_Expr=jule::new_ptr<_249c80052_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
						}
					}
					else {
						_case_begin_250e0dc35:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_250e0db58:;
				};
			}
		}
		_match_end_250e0d619:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_Constant=nullptr;
		(*_self_)._field_d.get()._field_Lvalue=false;
	};
}



inline void _249ca36a2_typeDecl(_249ca2409_unaryEval* _self_) {
	_249cbdcb6_typeChecker _310817_tc = _249cbdcb6_typeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_rootLookup=(*_self_)._field_e.get()._field_lookup, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_errorToken=(*_self_)._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_250e15115:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc3e97_buildPtrFromType(&_310817_tc, (*_self_)._field_d.get()._field_Kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_250e127e9:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc387b_buildSptrFromType(&_310817_tc, (*_self_)._field_d.get()._field_Kind), 7)});
			}
		}
		else {
			_case_begin_250e13971:;
			{
				_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_249cb0b87_Str((*_self_)._field_d.get()._field_Kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_250e1391b:;
	};
	(*_self_)._field_d.get()._field_Decl=true;
}



inline void _249ca387d_evalData(_249ca2409_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_250e17b40:;
			{
				jule::Ptr<_249cb078b_TypeKind> _313121_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_249ca186a_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
				(*_self_)._field_e.get()._field_prefix=_313121_prefix;
			}
		}
		else {
			_case_begin_250e175bd:;
			{
				(*_self_)._field_d=_249ca186a_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_250e17513:;
	};
}



inline jule::Ptr<_249c80052_Data> _249ca3b58_eval(_249ca2409_unaryEval* _self_, jule::Ptr<_24904d167_UnaryExpr> _314027_u) {
	(*_self_)._field_u=_314027_u;
	_249ca387d_evalData(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_Decl) {
		_249ca36a2_typeDecl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_249cb078b_TypeKind> _315113_kind = (*_self_)._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_250e1c21b:;
			{
				_249ca2a8b_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_250e1c3e7:;
			{
				_249ca2c67_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_250e1bdca:;
			{
				_249ca2e43_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_250e1be41:;
			{
				_249ca311e_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_250e1bea7:;
			{
				_249ca32ea_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_250e1c02e:;
			{
				_249ca34c6_amper(&(*_self_));
			}
		}
		else {
			_case_begin_250e1bd64:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_250e1bd0e:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_250e1c5c3:;
			{
				_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_249cb0b87_Str(_315113_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_249c80915_IsConst((*_self_)._field_d.ptr())) {
			_case_begin_250e1cea8:;
			{
				(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>((*_self_)._field_d.get()._field_Constant);
			}
		}
		_match_end_250e1e619:;
	};
	(*_self_)._field_d.get()._field_Mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _249ca2409_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _249ca4197_binaryEval static__249ca475d_newPlain(jule::Ptr<_249c81ac0_Eval> _318928_e) {
	return _249ca4197_binaryEval{._field_e=_318928_e, };
}



inline _249ca4197_binaryEval static__249ca4a9e_new(jule::Ptr<_249c81ac0_Eval> _319523_e, jule::Ptr<_23abd3d83_Token> _319537_op) {
	return _249ca4197_binaryEval{._field_e=_319523_e, ._field_op=_319537_op};
}



inline jule::Bool _249ca4d13_checkTypeCompatibility(_249ca4197_binaryEval* _self_) {
	return _249c242c1_checkTypeCompatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_Kind,(*_self_)._field_r.get()._field_Kind,(*_self_)._field_op);
}



inline jule::Bool _249ca50aa_checkStructCommonOperatorCompatibility(_249ca4197_binaryEval* _self_) {
	jule::Ptr<_249bcc312_FnIns> _320917_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_250e245ec:;
			{
				_320917_overload=_249cb3d00_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_250e24663:;
			{
				_320917_overload=_249cb3d00_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_250e246c9:;
			{
				_320917_overload=_249cb3d00_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_250e24740:;
			{
				_320917_overload=_249cb3d00_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_250e25851:;
			{
				_320917_overload=_249cb3d00_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_250e258b7:;
			{
				_320917_overload=_249cb3d00_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_250e2592d:;
			{
				_320917_overload=_249cb3d00_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_250e25994:;
			{
				_320917_overload=_249cb3d00_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_250e25b81:;
			{
				_320917_overload=_249cb3d00_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_250e25be7:;
			{
				_320917_overload=_249cb3d00_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_250e24586:;
			{
				_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_249cb0b87_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return false;
			}
		}
		_match_end_250e24531:;
	};
	if ((_320917_overload == nullptr)) {
		_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_249cb0b87_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
		return false;
	};
	jule::Ptr<_249bcc125_ParamIns> _324117_p = _320917_overload.get()._field_Params[1LL];;
	return _249c23d70_checkAssignType((*_self_)._field_e.get()._field_s, _324117_p.get()._field_Decl.get()._field_Reference,_324117_p.get()._field_Kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_249c80052_Data> _249ca5352_evalNil(_249ca4197_binaryEval* _self_) {
	if ((!(_249cb1dec_NilCompatible((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_249cb0b87_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_250e30b03:;
			{
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_250e30a8c:;
			{
				_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_250e309e3:;
	};
}



inline jule::Ptr<_249c80052_Data> _249ca55b6_evalEnum(_249ca4197_binaryEval* _self_) {
	jule::Ptr<_249bd6a25_Enum> _326617_enm = _249cb30da_Enum((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_250e33089:;
			{
				jule::Ptr<_249cb078b_TypeKind> _327021_rkind = (*_self_)._field_r.get()._field_Kind;;
				if ((_249cb30da_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_327021_rkind=_249cb30da_Enum((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_249c242c1_checkTypeCompatibility((*_self_)._field_e.get()._field_s, _326617_enm.get()._field_Kind.get()._field_Kind,_327021_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_250e33034:;
	};
	if (((_249cb30da_Enum((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr) || (_326617_enm != _249cb30da_Enum((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_326617_enm.get()._field_Ident),jule::Any(_249cb0b87_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_250e37ae9:;
			{
				if ((!(_249bc455c_IsNum(_249cb0b87_Str(_326617_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_326617_enm.get()._field_Ident)}));
					return nullptr;
				};
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_250e37b60:;
			{
				if (((_249cb289d_Prim(_326617_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_249bc42e8_IsInt(_249cb55c6_Str(_249cb289d_Prim(_326617_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_326617_enm.get()._field_Ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_250e37a83:;
			{
				_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_326617_enm.get()._field_Ident)}));
				return nullptr;
			}
		}
		_match_end_250e379c8:;
	};
}



inline jule::Ptr<_249c80052_Data> _249ca582a_evalTypeEnum(_249ca4197_binaryEval* _self_) {
	jule::Ptr<_249bd8120_TypeEnum> _331717_enm = _249cb334e_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr());;
	if ((!(_249ca4d13_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_250e3e31a:;
			{
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_250e3d9ac:;
			{
				_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_249bd8450_Str(_331717_enm.ptr()))}));
				return nullptr;
			}
		}
		_match_end_250e3e194:;
	};
}



inline jule::Ptr<_249c80052_Data> _249ca5a8e_evalSptr(_249ca4197_binaryEval* _self_) {
	if ((!(_249ca4d13_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_250e4164c:;
			{
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_250e41350:;
			{
				_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_249cb0b87_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_250e40a69:;
	};
}



inline jule::Ptr<_249c80052_Data> _249ca5d03_evalPtr(_249ca4197_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_250e43792:;
			{
				if ((!(_249ca4d13_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_250e43808:;
			{
				if ((_249cb2d76_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_249cbca2e_IsUnsafe(_249cb2d76_Ptr((*_self_)._field_l.get()._field_Kind.ptr()).ptr())) {
					_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_249cb0b87_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				};
				if ((!(_249cab91e_isPtrArithmeticCompatible((*_self_)._field_l,(*_self_)._field_r)))) {
					_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_250e43044:;
			{
				_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_249cb0b87_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_250e42ad2:;
	};
}



inline jule::Ptr<_249c80052_Data> _249ca6067_evalArr(_249ca4197_binaryEval* _self_) {
	if ((!(_249ca4d13_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_250e4a48b:;
			{
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_250e4a15b:;
			{
				_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_249cb0b87_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_250e4a3c0:;
	};
}



inline jule::Ptr<_249c80052_Data> _249ca62cb_evalSlc(_249ca4197_binaryEval* _self_) {
	if ((!(_249ca4d13_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_250e4c9aa:;
			{
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_250e4c6ad:;
			{
				_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_249cb0b87_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_250e4bdc7:;
	};
}



inline jule::Ptr<_249c80052_Data> _249ca6540_evalFn(_249ca4197_binaryEval* _self_) {
	if ((!(_249ca4d13_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_250e4eec9:;
			{
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_250e4ebcc:;
			{
				_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_249cb0b87_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_250e4e3e6:;
	};
}



inline jule::Ptr<_249c80052_Data> _249ca67a4_evalStruct(_249ca4197_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_250e51937:;
			{
				if ((_249cb3d00_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_249cb0b87_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_250e5199d:;
			{
				if ((_249cb3d00_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_249cb0b87_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_250e5211e:;
			{
				if ((_249cb3d00_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_249cb0b87_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_250e52185:;
			{
				if ((_249cb3d00_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_249cb0b87_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_250e521eb:;
			{
				if ((!(_249ca4d13_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_250e5145e:;
	};
	if ((!(_249ca50aa_checkStructCommonOperatorCompatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_249c80052_Data> _249ca6a18_evalTrait(_249ca4197_binaryEval* _self_) {
	if ((!(_249ca4d13_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_250e5c448:;
			{
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_250e5bd3d:;
			{
				_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_249cb0b87_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_250e5c37c:;
	};
}



inline jule::Ptr<_249c80052_Data> _249ca6c7c_evalAny(_249ca4197_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_250e5e58d:;
			{
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_250e5dd40:;
			{
				_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_250e5d8cd:;
	};
}



inline jule::Ptr<_249c80052_Data> _249ca6ee1_evalBool(_249ca4197_binaryEval* _self_) {
	if ((!(_249ca4d13_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_250e616b1:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_250e613b4:;
			{
				_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_249cb0b87_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_250e60acd:;
	};
}



inline jule::Ptr<_249c80052_Data> _249ca7255_evalStr(_249ca4197_binaryEval* _self_) {
	jule::Str _355917_rk = _249cb0b87_Str((*_self_)._field_r.get()._field_Kind.ptr());;
	if ((_355917_rk != jule::Str("str", 3))) {
		_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_355917_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_250e64cbe:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_250e64d35:;
			{
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_250e63bd0:;
			{
				_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_250e64b6a:;
	};
}



inline void _249ca7431_setTypeToGreater(_249ca4197_binaryEval* _self_) {
	jule::Ptr<_249cb5263_Prim> _358613_lp = _249cb289d_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_249cb5263_Prim> _358713_rp = _249cb289d_Prim((*_self_)._field_r.get()._field_Kind.ptr());;
	if (_249c80915_IsConst((*_self_)._field_l.ptr())) {
		if ((!(_249c80915_IsConst((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_358713_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_249c80915_IsConst((*_self_)._field_r.ptr())) {
		(*_self_)._field_r.get()._field_Constant.get()._field_Kind=_358613_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*_self_)._field_l.get()._field_untyped && (!((*_self_)._field_r.get()._field_untyped)))) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
		if (_249c80915_IsConst((*_self_)._field_l.ptr())) {
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_358713_rp.get()._field_Kind;
		};
		(*_self_)._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*_self_)._field_l.get()._field_untyped)) && (*_self_)._field_r.get()._field_untyped)) {
		return;;
	};
	if (_249bc3b44_IsGreater(_358713_rp.get()._field_Kind,_358613_lp.get()._field_Kind)) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
		if (_249c80915_IsConst((*_self_)._field_l.ptr())) {
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_358713_rp.get()._field_Kind;
		};
	};
}



inline void _249ca7673_checkModData(_249ca4197_binaryEval* _self_, jule::Ptr<_249c80052_Data>& _361936_d) {
	if ((!(_249c80915_IsConst(_361936_d.ptr())))) {
		if (((_249cb289d_Prim(_361936_d.get()._field_Kind.ptr()) == nullptr) || (!(_249bc42e8_IsInt(_249cb289d_Prim(_361936_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_249c50ac2_sigAssignable(jule::Str("i64", 3),_361936_d)) {
			_case_begin_250e71825:;
			{
				_24916a0db_SetI64(_361936_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_249168260_AsI64(_361936_d.get()._field_Constant.ptr())));
			}
		}
		else if (_249c67886_unsigAssignable(jule::Str("u64", 3),_361936_d)) {
			_case_begin_250e716e3:;
			{
				_24917646b_SetU64(_361936_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_24915c3a8_AsU64(_361936_d.get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_250e7136e:;
			{
				_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_250e6e9dd:;
	};
}



inline void _249ca784e_mod(_249ca4197_binaryEval* _self_) {
	_249ca7673_checkModData(&(*_self_), (*_self_)._field_l);
	_249ca7673_checkModData(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _249ca7c06_numbersAreCompatibile(_249ca4197_binaryEval* _self_, jule::Str& _364137_lk, jule::Str& _364147_rk) {
	if ((!(_249bc455c_IsNum(_364147_rk)))) {
		return false;
	};
	if ((_249c80915_IsConst((*_self_)._field_l.ptr()) && (*_self_)._field_l.get()._field_untyped)) {
		return true;
	};
	if ((_364137_lk == jule::Str("f32", 3))) {
		if ((_249c80915_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
			return true;
		};
		return (_364147_rk == jule::Str("f32", 3));
	};
	if ((_364137_lk == jule::Str("f64", 3))) {
		if ((_249c80915_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
			return true;
		};
		return (_364147_rk == jule::Str("f64", 3));
	};
	if ((_249c80915_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
		return true;
	};
	return (_364137_lk == _364147_rk);
}



inline jule::Ptr<_249c80052_Data> _249ca7e6a_evalFloat(_249ca4197_binaryEval* _self_) {
	jule::Str _366713_lk = _249cb289d_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _366813_rk = _249cb289d_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_249ca7c06_numbersAreCompatibile(&(*_self_), _366713_lk,_366813_rk)))) {
		_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_366713_lk),jule::Any(_366813_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_250e7a521:;
			{
				if (((!(_249c80915_IsConst((*_self_)._field_l.ptr()))) || (!(_249c679b8_intAssignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_366713_lk),jule::Any(_366813_rk)}));
					return nullptr;
				};
				if (((!(_249c80915_IsConst((*_self_)._field_r.ptr()))) || (!(_249c679b8_intAssignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_366713_lk),jule::Any(_366813_rk)}));
					return nullptr;
				};
				_24916a0db_SetI64((*_self_)._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_249168260_AsI64((*_self_)._field_l.get()._field_Constant.ptr())));
				_24917646b_SetU64((*_self_)._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_24915c3a8_AsU64((*_self_)._field_r.get()._field_Constant.ptr())));
				if ((!(_249cab204_isOkForShifting((*_self_)._field_r)))) {
					_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_250e7a433:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_250e7ab1a:;
			{
				_249ca7431_setTypeToGreater(&(*_self_));
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_24e72e601:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_250e8123b:;
			{
				_249ca7431_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_250e812a2:;
			{
				if ((!(_249bc42e8_IsInt(_366813_rk)))) {
					_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_366713_lk),jule::Any(_366813_rk)}));
					return nullptr;
				};
				_249ca784e_mod(&(*_self_));
				_249ca7431_setTypeToGreater(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_250e819cd:;
			{
				_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_250e81c42:;
	};
}



inline jule::Ptr<_249c80052_Data> _249ca81ce_evalInt(_249ca4197_binaryEval* _self_) {
	jule::Str _373313_lk = _249cb289d_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _373413_rk = _249cb289d_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_250e82b22:;
			{
				if (((!(_249bc42e8_IsInt(_373313_lk))) || (!(_249bc42e8_IsInt(_373413_rk))))) {
					_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_373313_lk),jule::Any(_373413_rk)}));
					return nullptr;
				};
				if ((!(_249cab204_isOkForShifting((*_self_)._field_r)))) {
					_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_250e860cb:;
	};
	if ((!(_249ca7c06_numbersAreCompatibile(&(*_self_), _373313_lk,_373413_rk)))) {
		_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_373313_lk),jule::Any(_373413_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_250e89aa2:;
			{
				return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_250e8995e:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_250e8a553:;
			{
				_249ca7431_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_250e8a5b9:;
			{
				_249ca784e_mod(&(*_self_));
				_249ca7431_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_250e8a850:;
			{
				_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_250e8ac7e:;
	};
}



inline jule::Ptr<_249c80052_Data> _249ca8443_evalPrim(_249ca4197_binaryEval* _self_) {
	jule::Ptr<_249cb5263_Prim> _379213_prim = _249cb289d_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		
		if (_249cb8233_IsBool(_379213_prim.ptr())) {
			_case_begin_250e8e249:;
			{
				return _249ca6ee1_evalBool(&(*_self_));
			}
		}
		else if (_249cb8497_IsStr(_379213_prim.ptr())) {
			_case_begin_250e8e2c1:;
			{
				return _249ca7255_evalStr(&(*_self_));
			}
		}
		_match_end_250e8e18e:;
	};
	if ((_249cb289d_Prim((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_249cb55c6_Str(_379213_prim.ptr())),jule::Any(_249cb0b87_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_249bc442a_IsFloat(_379213_prim.get()._field_Kind)) {
			_case_begin_250e91ea5:;
			{
				return _249ca7e6a_evalFloat(&(*_self_));
			}
		}
		else if (_249bc42e8_IsInt(_379213_prim.get()._field_Kind)) {
			_case_begin_250e91801:;
			{
				return _249ca81ce_evalInt(&(*_self_));
			}
		}
		else {
			_case_begin_250e9178a:;
			{
				return nullptr;
			}
		}
		_match_end_250e915d1:;
	};
}



inline jule::Ptr<_249c80052_Data> _249ca86a7_evalOp(_249ca4197_binaryEval* _self_) {
	{
		
		if (_249cb1924_Void((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_250e922a2:;
			{
				_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_249cb289d_Prim((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr) && _249cb870b_IsAny(_249cb289d_Prim((*_self_)._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_250e93627:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_250e9335d;
			}
		}
		else if (((_249cb289d_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr) && _249cb870b_IsAny(_249cb289d_Prim((*_self_)._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_250e9335d:;
			{
				return _249ca6c7c_evalAny(&(*_self_));
			}
		}
		else if ((_249cb334e_TypeEnum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250e933c4:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_250e9343a;
			}
		}
		else if ((_249cb334e_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250e9343a:;
			{
				return _249ca582a_evalTypeEnum(&(*_self_));
			}
		}
		else if (_249cb16b0_IsNil((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_250e934a1:;
			{
				return _249ca5352_evalNil(&(*_self_));
			}
		}
		else if ((_249cb30da_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250e93517:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_250e93704;
			}
		}
		else if ((_249cb30da_Enum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250e93704:;
			{
				return _249ca55b6_evalEnum(&(*_self_));
			}
		}
		else if ((_249cb2b12_Sptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250e9376a:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_250e937d1;
			}
		}
		else if ((_249cb2b12_Sptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250e937d1:;
			{
				return _249ca5a8e_evalSptr(&(*_self_));
			}
		}
		else if ((_249cb2d76_Ptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250e93847:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_250e938be;
			}
		}
		else if ((_249cb2d76_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250e938be:;
			{
				return _249ca5d03_evalPtr(&(*_self_));
			}
		}
		else if ((_249cb35b3_Arr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250e93946:;
			{
				return _249ca6067_evalArr(&(*_self_));
			}
		}
		else if ((_249cb3827_Slc((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250e939bd:;
			{
				return _249ca62cb_evalSlc(&(*_self_));
			}
		}
		else if ((_249cb3a8b_Fn((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250e93a45:;
			{
				return _249ca6540_evalFn(&(*_self_));
			}
		}
		else if ((_249cb4064_Trait((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250e93abc:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_250e93b44;
			}
		}
		else if ((_249cb4064_Trait((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250e93b44:;
			{
				return _249ca6a18_evalTrait(&(*_self_));
			}
		}
		else if ((_249cb3d00_Struct((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250e93bbb:;
			{
				return _249ca67a4_evalStruct(&(*_self_));
			}
		}
		else if ((_249cb289d_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_250e93c43:;
			{
				return _249ca8443_evalPrim(&(*_self_));
			}
		}
		else {
			_case_begin_250e920b5:;
			{
				return nullptr;
			}
		}
		_match_end_250e92c97:;
	};
}



inline void _249ca892c_evalConst(_249ca4197_binaryEval* _self_, jule::Ptr<_249c80052_Data>& _386733_d) {
	{
		
		if ((_386733_d == nullptr)) {
			_case_begin_250ea4506:;
			{
				return;;
			}
		}
		else if ((!(_249c80915_IsConst((*_self_)._field_l.ptr()))) || (!(_249c80915_IsConst((*_self_)._field_r.ptr())))) {
			_case_begin_250ea456c:;
			{
				_386733_d.get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_250ea3cca:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_250ea5c99:;
			{
				_386733_d.get()._field_Constant=static__2491571c7_NewBool(_249bc4b67_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_250ea5d10:;
			{
				_386733_d.get()._field_Constant=static__2491571c7_NewBool((!(_249bc4b67_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_250ea5d76:;
			{
				_386733_d.get()._field_Constant=static__2491571c7_NewBool(_249bc4a35_Or((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_250ea5ddc:;
			{
				_386733_d.get()._field_Constant=static__2491571c7_NewBool(_249bc4903_And((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_250ea5e53:;
			{
				_386733_d.get()._field_Constant=static__2491571c7_NewBool(_249bc500d_Gt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_250ea5eb9:;
			{
				_386733_d.get()._field_Constant=static__2491571c7_NewBool(_249bc4c99_Lt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_250ea6030:;
			{
				_386733_d.get()._field_Constant=static__2491571c7_NewBool(_249bc5140_GtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_250ea6096:;
			{
				_386733_d.get()._field_Constant=static__2491571c7_NewBool(_249bc4dcb_LtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_250ea610c:;
			{
				_249bc5272_Add((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_386733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_250ea6184:;
			{
				_249bc53a4_Sub((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_386733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_250ea620b:;
			{
				_249bc54d6_Mul((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_386733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_250ea6283:;
			{
				jule::Bool _390417_ok = _249bc5618_Div((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_390417_ok)) && (_24916922d_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_386733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
				jule::Ptr<_249cb5263_Prim> _390921_prim = _249cb289d_Prim(_386733_d.get()._field_Kind.ptr());;
				{
					
					if (_249bc4084_IsSigInt(_390921_prim.get()._field_Kind)) {
						_case_begin_250eb3e0b:;
						{
							_24916a0db_SetI64(_386733_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_249168260_AsI64(_386733_d.get()._field_Constant.ptr())));
						}
					}
					else if (_249bc41b6_IsUnsigInt(_390921_prim.get()._field_Kind)) {
						_case_begin_250eb3e83:;
						{
							_24917646b_SetU64(_386733_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_24915c3a8_AsU64(_386733_d.get()._field_Constant.ptr())));
						}
					}
					_match_end_250eb3d51:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_250ea630a:;
			{
				jule::Bool _391717_ok = _249bc574a_Mod((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_391717_ok)) && (_24916922d_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_386733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_250ea6382:;
			{
				_249bc59ae_BitwiseOr((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_386733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_250ea6409:;
			{
				_249bc587c_BitwiseAnd((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_386733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_250ea6481:;
			{
				_249bc5ae1_Xor((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_386733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_250ea6508:;
			{
				_249bc5c23_Lshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_386733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_250ea6580:;
			{
				_249bc5d55_Rshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_386733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		_match_end_250ea5529:;
	};
	_386733_d.get()._field_Model=static_cast<jule::Any>(_386733_d.get()._field_Constant);
	_249cac69a_applyCastModelByEnum(_386733_d,_249cb30da_Enum(_386733_d.get()._field_Kind.ptr()));
}



inline void _249ca8ba2_checkData(_249ca4197_binaryEval* _self_, jule::Ptr<_249c80052_Data>& _394233_d) {
	jule::Ptr<_249bcc312_FnIns> _394313_f = _249cb3a8b_Fn(_394233_d.get()._field_Kind.ptr());;
	if ((((_394313_f != nullptr) && (_394313_f.get()._field_Decl != nullptr)) && _2490ab25d_IsMethod(_394313_f.get()._field_Decl.ptr()))) {
		_249c820cb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _249ca8d7d_checkDatas(_249ca4197_binaryEval* _self_) {
	_249ca8ba2_checkData(&(*_self_), (*_self_)._field_l);
	_249ca8ba2_checkData(&(*_self_), (*_self_)._field_r);
}



inline void _249ca9103_setModel(_249ca4197_binaryEval* _self_, jule::Ptr<_249c80052_Data>& _395432_d) {
	if (_249c80915_IsConst(_395432_d.ptr())) {
		if ((_249c80915_IsConst((*_self_)._field_l.ptr()) && _249c80915_IsConst((*_self_)._field_r.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_249c80052_Data> _396218_l = (*_self_)._field_l;;
	jule::Ptr<_249c80052_Data> _396225_r = (*_self_)._field_r;;
	std::tie(_396218_l,_396225_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_249c80c23_GoodOperand(_396218_l.ptr(), _396225_r)))) {
		std::tie(_396218_l,_396225_r) = std::make_tuple(_396225_r,_396218_l);
	};
	_395432_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc63d8_BinopExprModel>(_249bc63d8_BinopExprModel{._field_Left=jule::new_ptr<_249bc61eb_OperandExprModel>(_249bc61eb_OperandExprModel{._field_Kind=_396218_l.get()._field_Kind, ._field_Model=_396218_l.get()._field_Model}), ._field_Right=jule::new_ptr<_249bc61eb_OperandExprModel>(_249bc61eb_OperandExprModel{._field_Kind=_396225_r.get()._field_Kind, ._field_Model=_396225_r.get()._field_Model}), ._field_Op=(*_self_)._field_op}));
}



inline void _249ca9378_postEval(_249ca4197_binaryEval* _self_, jule::Ptr<_249c80052_Data>& _398032_d) {
	_398032_d.get()._field_Lvalue=false;
	_249ca9103_setModel(&(*_self_), _398032_d);
}



inline jule::Ptr<_249c80052_Data> _249ca9730_solveExplicit(_249ca4197_binaryEval* _self_, jule::Ptr<_249c80052_Data>& _398537_l, jule::Ptr<_249c80052_Data>& _398552_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_398537_l,_398552_r);
	_249ca8d7d_checkDatas(&(*_self_));
	jule::Ptr<_249c80052_Data> _399017_d = _249ca86a7_evalOp(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_398537_l,_398552_r);
	_249ca892c_evalConst(&(*_self_), _399017_d);
	if ((_399017_d != nullptr)) {
		_399017_d.get()._field_Mutable=true;
		_249ca9378_postEval(&(*_self_), _399017_d);
	};
	return _399017_d;
}



inline jule::Ptr<_249c80052_Data> _249ca9a3d_eval(_249ca4197_binaryEval* _self_, jule::Ptr<_24904e674_BinopExpr>& _400528_op) {
	if ((_400528_op.get()._field_Op.get()._field_Kind == jule::Str("=", 1))) {
		_249c820cb_pushErr((*_self_)._field_e.ptr(), _400528_op.get()._field_Op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_249c823ea_pushSugggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_249c80052_Data> _401217_l = _249ca186a_evalExprKind((*_self_)._field_e, _400528_op.get()._field_Left.get()._field_Kind);;
	if (((_401217_l == nullptr) || (_401217_l.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_249cb078b_TypeKind> _401717_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_401217_l.get()._field_Kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_401717_prefix;
	});;
	jule::Ptr<_249c80052_Data> _402017_r = _249ca186a_evalExprKind((*_self_)._field_e, _400528_op.get()._field_Right.get()._field_Kind);;
	if (((_402017_r == nullptr) || (_402017_r.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_400528_op.get()._field_Op;
	jule::Ptr<_249c80052_Data> _402717_d = _249ca9730_solveExplicit(&(*_self_), _401217_l,_402017_r);;
	if ((((_402717_d != nullptr) && _401217_l.get()._field_IsRune) && _402017_r.get()._field_IsRune)) {
		_402717_d.get()._field_IsRune=true;
	};
	return _402717_d;
}







std::ostream &operator<<(std::ostream &_Stream, _249ca4197_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249cae05e_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249caea98_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _249cb0b87_Str(_249cb078b_TypeKind* _self_) {
	if (_249cb16b0_IsNil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*_self_)._field_Variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_249cb144b_CppLinked(&(*_self_))) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*_self_)._field_CppIdent;
	} else {
		_7417_kind+=_249cb035c_Kind_mptr_data[((*_self_)._field_Kind).type_offset]._249caee0b_Str((*_self_)._field_Kind);
	};
	return _7417_kind;
}



inline jule::Bool _249cb0e95_Equals(jule::Ptr<_249cb078b_TypeKind> _self_, jule::Ptr<_249cb078b_TypeKind> _9022_other) {
	if (_249cb16b0_IsNil(_self_.ptr())) {
		return _249cb16b0_IsNil(_9022_other.ptr());
	};
	if (_249cb144b_CppLinked(_self_.ptr())) {
		return (_249cb144b_CppLinked(_9022_other.ptr()) && (_self_.get()._field_CppIdent == _9022_other.get()._field_CppIdent));
	};
	return _249cb035c_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._249cb0219_Equals(_self_.get()._field_Kind, _9022_other);
}



inline jule::Bool _249cb144b_CppLinked(_249cb078b_TypeKind* _self_) {
	return ((*_self_)._field_CppIdent.len() != 0LL);
}



inline jule::Bool _249cb16b0_IsNil(_249cb078b_TypeKind* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}



inline jule::Bool _249cb1924_Void(_249cb078b_TypeKind* _self_) {
	jule::Ptr<_249cb5263_Prim> _11113_prim = _249cb289d_Prim(&(*_self_));;
	return ((_11113_prim != nullptr) && (_11113_prim.get()._field_Kind == jule::Str("void", 4)));
}



inline jule::Bool _249cb1b88_Mutable(_249cb078b_TypeKind* _self_) {
	{
		_249cb078b_TypeKind* _11821__self = (&((*_self_)));;
		if ((_249cb3d00_Struct(_11821__self) != nullptr)) {
			return _249cb3d00_Struct(_11821__self).get()._field_Mutable;
		};
		if ((_249cb4064_Trait(_11821__self) != nullptr)) {
			return _249cb4064_Trait(_11821__self).get()._field_Mutable;
		};
		if ((_249cb289d_Prim(_11821__self) != nullptr)) {
			jule::Ptr<_249cb5263_Prim> _12721_p = _249cb289d_Prim(_11821__self);;
			return _249cb870b_IsAny(_12721_p.ptr());
		};
		if ((_249cb35b3_Arr(_11821__self) != nullptr)) {
			return _249cb1b88_Mutable(_249cb35b3_Arr(_11821__self).get()._field_Elem.ptr());
		};
		return (((_249cb3827_Slc(_11821__self) != nullptr) || (_249cb2d76_Ptr(_11821__self) != nullptr)) || (_249cb2b12_Sptr(_11821__self) != nullptr));
	};
}



inline jule::Bool _249cb1dec_NilCompatible(_249cb078b_TypeKind* _self_) {
	{
		_249cb078b_TypeKind* _14221__self = (&((*_self_)));;
		jule::Ptr<_249cb5263_Prim> _14417_prim = _249cb289d_Prim(_14221__self);;
		if (((_14417_prim != nullptr) && _249cb870b_IsAny(_14417_prim.ptr()))) {
			return true;
		};
		return (((((((_249cb16b0_IsNil(_14221__self) || (_249cb3a8b_Fn(_14221__self) != nullptr)) || (_249cb2b12_Sptr(_14221__self) != nullptr)) || (_249cb2d76_Ptr(_14221__self) != nullptr)) || (_249cb4064_Trait(_14221__self) != nullptr)) || (_249cb3827_Slc(_14221__self) != nullptr)) || (_249cb42c8_Map(_14221__self) != nullptr)) || (_249cb334e_TypeEnum(_14221__self) != nullptr));
	};
}



inline jule::Bool _249cb2161_PerformsRC(_249cb078b_TypeKind* _self_) {
	{
		_249cb078b_TypeKind* _16321__self = (&((*_self_)));;
		return (((_249cb2b12_Sptr(_16321__self) != nullptr) || (_249cb3827_Slc(_16321__self) != nullptr)) || (_249cb4064_Trait(_16321__self) != nullptr));
	};
}



inline jule::Bool _249cb23c5_SupportsCloning(_249cb078b_TypeKind* _self_) {
	{
		_249cb078b_TypeKind* _17121__self = (&((*_self_)));;
		{
			
			if ((_249cb289d_Prim(_17121__self) != nullptr)) {
				_case_begin_251004dd6:;
				{
					return (!(_249cb870b_IsAny(_249cb289d_Prim(_17121__self).ptr())));
				}
			}
			else if ((_249cb30da_Enum(_17121__self) != nullptr)) {
				_case_begin_251004e4c:;
				{
					return true;
				}
			}
			else if ((_249cb3a8b_Fn(_17121__self) != nullptr)) {
				_case_begin_251004eb3:;
				{
					return true;
				}
			}
			else if ((_249cb2d76_Ptr(_17121__self) != nullptr)) {
				_case_begin_251005029:;
				{
					return true;
				}
			}
			else if ((_249cb3827_Slc(_17121__self) != nullptr)) {
				_case_begin_251005304:;
				{
					return _249cb23c5_SupportsCloning(_249cb3827_Slc(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_249cb42c8_Map(_17121__self) != nullptr)) {
				_case_begin_25100536a:;
				{
					jule::Ptr<_249cbaa0a_Map> _18421_m = _249cb42c8_Map(_17121__self);;
					return (_249cb23c5_SupportsCloning(_18421_m.get()._field_Key.ptr()) && _249cb23c5_SupportsCloning(_18421_m.get()._field_Val.ptr()));
				}
			}
			else if ((_249cb35b3_Arr(_17121__self) != nullptr)) {
				_case_begin_2510053d1:;
				{
					return _249cb23c5_SupportsCloning(_249cb35b3_Arr(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_249cb2b12_Sptr(_17121__self) != nullptr)) {
				_case_begin_251005447:;
				{
					return _249cb23c5_SupportsCloning(_249cb2b12_Sptr(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_249cb3d00_Struct(_17121__self) != nullptr)) {
				_case_begin_2510054ad:;
				{
					jule::Ptr<_249062e4b_StructIns> _19125_s = _249cb3d00_Struct(_17121__self);;
					return (((_19125_s.get()._field_Decl != nullptr) && (!(_19125_s.get()._field_Decl.get()._field_CppLinked))) && _2490237be_IsDerives(_19125_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_251004d70:;
				{
					return false;
				}
			}
			_match_end_251004d09:;
		};
	};
}



inline jule::Bool _249cb2639_Variadicable(_249cb078b_TypeKind* _self_) {
	{
		_249cb078b_TypeKind* _20421__self = (&((*_self_)));;
		return (_249cb3827_Slc(_20421__self) != nullptr);
	};
}



inline jule::Ptr<_249cb5263_Prim> _249cb289d_Prim(_249cb078b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_249cb5263_Prim>>()) {
			_case_begin_25100d4e9:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_249cb5263_Prim>();
			}
		}
		else {
			_case_begin_25100ccce:;
			{
				return nullptr;
			}
		}
		_match_end_25100a5d4:;
	};
}



inline jule::Ptr<_249cb89e7_Sptr> _249cb2b12_Sptr(_249cb078b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_249cb89e7_Sptr>>()) {
			_case_begin_25100e231:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_249cb89e7_Sptr>();
			}
		}
		else {
			_case_begin_25100dc58:;
			{
				return nullptr;
			}
		}
		_match_end_25100d96c:;
	};
}



inline jule::Ptr<_249cbc05b_Ptr> _249cb2d76_Ptr(_249cb078b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_249cbc05b_Ptr>>()) {
			_case_begin_251010045:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_249cbc05b_Ptr>();
			}
		}
		else {
			_case_begin_25100e7a3:;
			{
				return nullptr;
			}
		}
		_match_end_25100eb38:;
	};
}



inline jule::Ptr<_249bd6a25_Enum> _249cb30da_Enum(_249cb078b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_249bd6a25_Enum>>()) {
			_case_begin_251010d37:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_249bd6a25_Enum>();
			}
		}
		else {
			_case_begin_25101085e:;
			{
				return nullptr;
			}
		}
		_match_end_251010573:;
	};
}



inline jule::Ptr<_249bd8120_TypeEnum> _249cb334e_TypeEnum(_249cb078b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_249bd8120_TypeEnum>>()) {
			_case_begin_251011b4b:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_249bd8120_TypeEnum>();
			}
		}
		else {
			_case_begin_2510113a9:;
			{
				return nullptr;
			}
		}
		_match_end_25101173e:;
	};
}



inline jule::Ptr<_249cbb5ee_Arr> _249cb35b3_Arr(_249cb078b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_249cbb5ee_Arr>>()) {
			_case_begin_251012960:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_249cbb5ee_Arr>();
			}
		}
		else {
			_case_begin_2510121bd:;
			{
				return nullptr;
			}
		}
		_match_end_251012553:;
	};
}



inline jule::Ptr<_249cb9454_Slc> _249cb3827_Slc(_249cb078b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_249cb9454_Slc>>()) {
			_case_begin_251013774:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_249cb9454_Slc>();
			}
		}
		else {
			_case_begin_251012ed2:;
			{
				return nullptr;
			}
		}
		_match_end_251013367:;
	};
}



inline jule::Ptr<_249bcc312_FnIns> _249cb3a8b_Fn(_249cb078b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_249bcc312_FnIns>>()) {
			_case_begin_251014588:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_249bcc312_FnIns>();
			}
		}
		else {
			_case_begin_251013ce6:;
			{
				return nullptr;
			}
		}
		_match_end_25101417b:;
	};
}



inline jule::Ptr<_249062e4b_StructIns> _249cb3d00_Struct(_249cb078b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_249062e4b_StructIns>>()) {
			_case_begin_25101537a:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_249062e4b_StructIns>();
			}
		}
		else {
			_case_begin_251014da2:;
			{
				return nullptr;
			}
		}
		_match_end_251014ab6:;
	};
}



inline jule::Ptr<_249bd48d0_Trait> _249cb4064_Trait(_249cb078b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_249bd48d0_Trait>>()) {
			_case_begin_25101618e:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_249bd48d0_Trait>();
			}
		}
		else {
			_case_begin_2510158ec:;
			{
				return nullptr;
			}
		}
		_match_end_251015c82:;
	};
}



inline jule::Ptr<_249cbaa0a_Map> _249cb42c8_Map(_249cb078b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_249cbaa0a_Map>>()) {
			_case_begin_251016ea3:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_249cbaa0a_Map>();
			}
		}
		else {
			_case_begin_251016711:;
			{
				return nullptr;
			}
		}
		_match_end_251016a96:;
	};
}



inline jule::Ptr<_249cb9ed2_Tuple> _249cb453c_Tup(_249cb078b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_249cb9ed2_Tuple>>()) {
			_case_begin_251017c95:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_249cb9ed2_Tuple>();
			}
		}
		else {
			_case_begin_2510177bc:;
			{
				return nullptr;
			}
		}
		_match_end_2510174d1:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _249cb078b_TypeKind _Src) {
	_Stream << _249cb0b87_Str(&_Src);
	return _Stream;
}



inline jule::Bool _249cb4c9b_checked(_249cb48e4_TypeSymbol* _self_) {
	return ((*_self_)._field_Kind != nullptr);
}



inline void _249cb4e77_removeKind(_249cb48e4_TypeSymbol* _self_) {
	(*_self_)._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _249cb48e4_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _249cb55c6_Str(_249cb5263_Prim* _self_) {
	return (*_self_)._field_Kind;
}



inline jule::Bool _249cb58d4_Equals(jule::Ptr<_249cb5263_Prim> _self_, jule::Ptr<_249cb078b_TypeKind> _35722_other) {
	jule::Ptr<_249cb5263_Prim> _35813_prim = _249cb289d_Prim(_35722_other.ptr());;
	if ((_35813_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_Kind == _35813_prim.get()._field_Kind);
}



inline jule::Bool _249cb5d57_IsConstraint(_249cb5263_Prim* _self_) {
	return ((((!(_249cb8497_IsStr(&(*_self_)))) && (!(_249cb870b_IsAny(&(*_self_))))) && (!(_249cb8233_IsBool(&(*_self_))))) && (!(_249bc455c_IsNum((*_self_)._field_Kind))));
}



inline jule::Bool _249cb60bb_IsI8(_249cb5263_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i8", 2));
}



inline jule::Bool _249cb6330_IsI16(_249cb5263_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i16", 3));
}



inline jule::Bool _249cb6594_IsI32(_249cb5263_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i32", 3));
}



inline jule::Bool _249cb6808_IsI64(_249cb5263_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i64", 3));
}



inline jule::Bool _249cb6a6c_IsU8(_249cb5263_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u8", 2));
}



inline jule::Bool _249cb6cd1_IsU16(_249cb5263_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u16", 3));
}



inline jule::Bool _249cb7045_IsU32(_249cb5263_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u32", 3));
}



inline jule::Bool _249cb72a9_IsU64(_249cb5263_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u64", 3));
}



inline jule::Bool _249cb751d_IsF32(_249cb5263_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f32", 3));
}



inline jule::Bool _249cb7782_IsF64(_249cb5263_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f64", 3));
}



inline jule::Bool _249cb79e6_IsInt(_249cb5263_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("int", 3));
}



inline jule::Bool _249cb7c5a_IsUint(_249cb5263_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uint", 4));
}



inline jule::Bool _249cb7ebe_IsUintptr(_249cb5263_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uintptr", 7));
}



inline jule::Bool _249cb8233_IsBool(_249cb5263_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("bool", 4));
}



inline jule::Bool _249cb8497_IsStr(_249cb5263_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("str", 3));
}



inline jule::Bool _249cb870b_IsAny(_249cb5263_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _249cb5263_Prim _Src) {
	_Stream << _249cb55c6_Str(&_Src);
	return _Stream;
}



inline jule::Str _249cb8d5a_Str(_249cb89e7_Sptr* _self_) {
	return (jule::Str("&", 1) + _249cb0b87_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _249cb9168_Equals(jule::Ptr<_249cb89e7_Sptr> _self_, jule::Ptr<_249cb078b_TypeKind> _43422_other) {
	jule::Ptr<_249cb89e7_Sptr> _43513_sptr = _249cb2b12_Sptr(_43422_other.ptr());;
	if ((_43513_sptr == nullptr)) {
		return false;
	};
	return _249cb0e95_Equals(_self_.get()._field_Elem, _43513_sptr.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _249cb89e7_Sptr _Src) {
	_Stream << _249cb8d5a_Str(&_Src);
	return _Stream;
}



inline jule::Str _249cb9960_Str(_249cb9454_Slc* _self_) {
	return (jule::Str("[]", 2) + _249cb0b87_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _249cb9c6d_Equals(jule::Ptr<_249cb9454_Slc> _self_, jule::Ptr<_249cb078b_TypeKind> _45322_other) {
	jule::Ptr<_249cb9454_Slc> _45413_slc = _249cb3827_Slc(_45322_other.ptr());;
	if ((_45413_slc == nullptr)) {
		return false;
	};
	return _249cb0e95_Equals(_self_.get()._field_Elem, _45413_slc.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _249cb9454_Slc _Src) {
	_Stream << _249cb9960_Str(&_Src);
	return _Stream;
}



inline jule::Str _249cba345_Str(_249cb9ed2_Tuple* _self_) {
	jule::Str _47017_s = jule::Str("(", 1);;
	_47017_s+=_249cb0b87_Str((*_self_)._field_Types[0LL].ptr());
	{
		auto expr = (*_self_)._field_Types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_25102d184:;
		if (it != expr.end()) {
			jule::Ptr<_249cb078b_TypeKind> &_47216_t = *it;
			{
				_47017_s+=jule::Str(",", 1);
				_47017_s+=_249cb0b87_Str(_47216_t.ptr());
			}
			_iter_next_25102d184:;
			++it;
			goto _iter_begin_25102d184;
		}
		_iter_end_25102d184:;
	};
	_47017_s+=jule::Str(")", 1);
	return _47017_s;
}



inline jule::Bool _249cba653_Equals(jule::Ptr<_249cb9ed2_Tuple> _self_, jule::Ptr<_249cb078b_TypeKind> _48122_other) {
	jule::Ptr<_249cb9ed2_Tuple> _48213_tup = _249cb453c_Tup(_48122_other.ptr());;
	if ((_48213_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Types.len() != _48213_tup.get()._field_Types.len())) {
		return false;
	};
	jule::I64 _48917_i = 0LL;;
	for (; (_48917_i < _self_.get()._field_Types.len()); (_48917_i)++) {
		{
			if ((!(_249cb0e95_Equals(_self_.get()._field_Types[_48917_i], _48213_tup.get()._field_Types[_48917_i])))) {
				return false;
			};
		}
	_iter_next_251030e67:;
	}
	_iter_end_251030e67:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _249cb9ed2_Tuple _Src) {
	_Stream << _249cba345_Str(&_Src);
	return _Stream;
}



inline jule::Str _249cbad6d_Str(_249cbaa0a_Map* _self_) {
	jule::Str _50917_s = jule::Str("[", 1);;
	_50917_s+=_249cb0b87_Str((*_self_)._field_Key.ptr());
	_50917_s+=jule::Str(":", 1);
	_50917_s+=_249cb0b87_Str((*_self_)._field_Val.ptr());
	_50917_s+=jule::Str("]", 1);
	return _50917_s;
}



inline jule::Bool _249cbb17b_Equals(jule::Ptr<_249cbaa0a_Map> _self_, jule::Ptr<_249cb078b_TypeKind> _51822_other) {
	jule::Ptr<_249cbaa0a_Map> _51913_m = _249cb42c8_Map(_51822_other.ptr());;
	if ((_51913_m == nullptr)) {
		return false;
	};
	return (_249cb0e95_Equals(_self_.get()._field_Key, _51913_m.get()._field_Key) && _249cb0e95_Equals(_self_.get()._field_Val, _51913_m.get()._field_Val));
}







std::ostream &operator<<(std::ostream &_Stream, _249cbaa0a_Map _Src) {
	_Stream << _249cbad6d_Str(&_Src);
	return _Stream;
}



inline jule::Str _249cbb962_Str(_249cbb5ee_Arr* _self_) {
	jule::Str _53717_s = jule::Str("[", 1);;
	_53717_s+=_249bc2813_Itoa((*_self_)._field_N);
	_53717_s+=jule::Str("]", 1);
	_53717_s+=_249cb0b87_Str((*_self_)._field_Elem.ptr());
	return _53717_s;
}



inline jule::Bool _249cbbc70_Equals(jule::Ptr<_249cbb5ee_Arr> _self_, jule::Ptr<_249cb078b_TypeKind> _54522_other) {
	jule::Ptr<_249cbb5ee_Arr> _54613_arr = _249cb35b3_Arr(_54522_other.ptr());;
	if ((_54613_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_N == _54613_arr.get()._field_N) && _249cb0e95_Equals(_self_.get()._field_Elem, _54613_arr.get()._field_Elem));
}







std::ostream &operator<<(std::ostream &_Stream, _249cbb5ee_Arr _Src) {
	_Stream << _249cbb962_Str(&_Src);
	return _Stream;
}



inline jule::Str _249cbc3be_Str(_249cbc05b_Ptr* _self_) {
	if (_249cbca2e_IsUnsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _249cb0b87_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _249cbc6cc_Equals(jule::Ptr<_249cbc05b_Ptr> _self_, jule::Ptr<_249cb078b_TypeKind> _56922_other) {
	jule::Ptr<_249cbc05b_Ptr> _57013_ptr = _249cb2d76_Ptr(_56922_other.ptr());;
	if ((_57013_ptr == nullptr)) {
		return false;
	};
	return _249cb0e95_Equals(_self_.get()._field_Elem, _57013_ptr.get()._field_Elem);
}



inline jule::Bool _249cbca2e_IsUnsafe(_249cbc05b_Ptr* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _249cbc05b_Ptr _Src) {
	_Stream << _249cbc3be_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249cbcea2_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _249cbe4c0_pushErr(_249cbdcb6_typeChecker* _self_, jule::Ptr<_23abd3d83_Token> _65226_token, jule::Str _65241_fmt, jule::Slice<jule::Any> _65254_args) {
	_249c1be89_pushErr((*_self_)._field_s.ptr(), _65226_token,_65241_fmt,jule::Any(_65254_args));
}



inline void _249cbe69b_allowBuiltin(_249cbdcb6_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _249cbe877_disallowBuiltin(_249cbdcb6_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Ptr<_249cb5263_Prim> _249cbeb85_buildPrim(_249cbdcb6_typeChecker* _self_, jule::Ptr<_24904698a_IdentTypeDecl>& _66429_decl) {
	if ((!(_249cc8c7c_isPrim(_66429_decl.get()._field_Ident)))) {
		_249cbe4c0_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_66429_decl.get()._field_Generics.len() > 0LL)) {
		_249cbe4c0_pushErr(&(*_self_), _66429_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_66429_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _249cc873d_buildPrimType(_66429_decl.get()._field_Ident);
}



inline void _251041681_pushReference(_249cbdcb6_typeChecker* _self_, jule::Ptr<_249062e4b_StructIns>& _67840_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_250103942_Exist((*_self_)._field_refers.ptr(), _67840_t)) {
		return;;
	};
	_249bcd368_Push((*_self_)._field_refers.ptr(), jule::Any(_67840_t));
}

inline void _2510448d7_pushReference(_249cbdcb6_typeChecker* _self_, jule::Ptr<_249bd48d0_Trait>& _67840_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_25104670d_Exist((*_self_)._field_refers.ptr(), _67840_t)) {
		return;;
	};
	_249bcd368_Push((*_self_)._field_refers.ptr(), jule::Any(_67840_t));
}



inline void _249cc0180_pushReferenceByKind(_249cbdcb6_typeChecker* _self_, jule::Ptr<_249cb078b_TypeKind>& _68843_k) {
	{
		
		if ((_249cb3d00_Struct(_68843_k.ptr()) != nullptr)) {
			_case_begin_251040273:;
			{
				jule::Ptr<_249062e4b_StructIns> _69121_t = _249cb3d00_Struct(_68843_k.ptr());;
				_251041681_pushReference(&(*_self_), _69121_t);
			}
		}
		else if ((_249cb4064_Trait(_68843_k.ptr()) != nullptr)) {
			_case_begin_2510402ea:;
			{
				jule::Ptr<_249bd48d0_Trait> _69421_t = _249cb4064_Trait(_68843_k.ptr());;
				_2510448d7_pushReference(&(*_self_), _69421_t);
			}
		}
		_match_end_251040152:;
	};
}



inline void _249cc0548_pushCycleError(_249cbdcb6_typeChecker* _self_, jule::Any _69929_def1, jule::Any _69940_def2, jule::Str& _69956_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _70113_getIdent = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _70128_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _70128_def };
			
			if (_match_expr.type_is<jule::Ptr<_249caea98_TypeAlias>>()) {
				_case_begin_25104a228:;
				{
					return _70128_def.operator jule::Ptr<_249caea98_TypeAlias>().get()._field_Ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_249036b01_Struct>>()) {
				_case_begin_251049b40:;
				{
					return _70128_def.operator jule::Ptr<_249036b01_Struct>().get()._field_Ident;
				}
			}
			else {
				_case_begin_2510499ec:;
				{
					return jule::Str();
				}
			}
			_match_end_25104990e:;
		};
	});;
	jule::Str _71113_def1Ident = _70113_getIdent(_69929_def1);;
	jule::Str _71213_def2Ident = _70113_getIdent(_69940_def2);;
	jule::Str _71313_refersTo = _23a8a61e8_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_71113_def1Ident),jule::Any(_71213_def2Ident)}));;
	(_69956_message).buffer.insert(0, (((_23a811c47_Repeat(jule::Str(" ", 1),4LL) + _71313_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _249cc0900_checkCrossCycle(_249cbdcb6_typeChecker* _self_, jule::Any _71730_decl, jule::Str& _71746_message) {
	{
		auto &_match_expr{ _71730_decl };
		
		if (_match_expr.type_is<jule::Ptr<_249caea98_TypeAlias>>()) {
			_case_begin_25104c6d1:;
			{
				jule::Ptr<_249caea98_TypeAlias> _72017_ta = _71730_decl.operator jule::Ptr<_249caea98_TypeAlias>();;
				{
					auto &expr = _72017_ta.get()._field_Refers;
					auto it = expr.begin();
					_iter_begin_25104d490:;
					if (it != expr.end()) {
						jule::Any &_72120_d = *it;
						{
							{
								
								if ((_72120_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_25104de85:;
									{
										_249cc0548_pushCycleError(&(*_self_), jule::Any(_72017_ta),jule::Any(_72120_d),_71746_message);
										return false;
									}
								}
								else if ((!(_249cc0900_checkCrossCycle(&(*_self_), jule::Any(_72120_d),_71746_message)))) {
									_case_begin_25104e00c:;
									{
										_249cc0548_pushCycleError(&(*_self_), jule::Any(_72017_ta),jule::Any(_72120_d),_71746_message);
										return false;
									}
								}
								_match_end_25104dd64:;
							};
						}
						_iter_next_25104d490:;
						++it;
						goto _iter_begin_25104d490;
					}
					_iter_end_25104d490:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249036b01_Struct>>()) {
			_case_begin_25104c747:;
			{
				jule::Ptr<_249036b01_Struct> _73217_s = _71730_decl.operator jule::Ptr<_249036b01_Struct>();;
				{
					auto &expr = _73217_s.get()._field_Depends;
					auto it = expr.begin();
					_iter_begin_25104db99:;
					if (it != expr.end()) {
						jule::Ptr<_249036b01_Struct> &_73320_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _73320_d)) {
									_case_begin_25105175c:;
									{
										_249cc0548_pushCycleError(&(*_self_), jule::Any(_73217_s),jule::Any(_73320_d),_71746_message);
										return false;
									}
								}
								else if ((!(_249cc0900_checkCrossCycle(&(*_self_), jule::Any(_73320_d),_71746_message)))) {
									_case_begin_2510517d4:;
									{
										_249cc0548_pushCycleError(&(*_self_), jule::Any(_73217_s),jule::Any(_73320_d),_71746_message);
										return false;
									}
								}
								_match_end_25105163b:;
							};
						}
						_iter_next_25104db99:;
						++it;
						goto _iter_begin_25104db99;
					}
					_iter_end_25104db99:;
				};
			}
		}
		_match_end_25104c67b:;
	};
	return true;
}



inline jule::Bool _249cc0ca7_checkIllegalCycles(_249cbdcb6_typeChecker* _self_, jule::Ptr<_24904698a_IdentTypeDecl>& _75138_ident, jule::Any _75165_decl) {
	jule::Bool _75178_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_75178_ok = true;
		return _75178_ok;
	};
	{
		auto &_match_expr{ _75165_decl };
		
		if (_match_expr.type_is<jule::Ptr<_249036b01_Struct>>()) {
			_case_begin_2510511eb:;
			{
				if (((*_self_)._field_notPlain || _75165_decl.operator jule::Ptr<_249036b01_Struct>().get()._field_CppLinked)) {
					_75178_ok = true;
					return _75178_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249caea98_TypeAlias>>()) {
			_case_begin_251051262:;
			{
				if (_75165_decl.operator jule::Ptr<_249caea98_TypeAlias>().get()._field_CppLinked) {
					_75178_ok = true;
					return _75178_ok;
				};
			}
		}
		_match_end_25105142c:;
	};
	if ((_75165_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_249cbe4c0_pushErr(&(*_self_), _75138_ident.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_75178_ok = false;
		return _75178_ok;
	};
	jule::Str _77417_message = jule::Str();;
	if ((!(_249cc0900_checkCrossCycle(&(*_self_), jule::Any(_75165_decl),_77417_message)))) {
		jule::Str _77721_errMsg = _77417_message;;
		_77417_message=jule::Str();
		_249cc0548_pushCycleError(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_75165_decl),_77417_message);
		_77721_errMsg+=_77417_message;
		_249cbe4c0_pushErr(&(*_self_), _75138_ident.get()._field_Token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_77721_errMsg)}));
		_75178_ok = false;
		return _75178_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_249caea98_TypeAlias>>()) {
			_case_begin_2510581ae:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({jule::Any(_75165_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249036b01_Struct>>()) {
			_case_begin_251058313:;
			{
				{
					auto &_match_expr{ _75165_decl };
					
					if (_match_expr.type_is<jule::Ptr<_249036b01_Struct>>()) {
						_case_begin_251058ab6:;
						{
							jule::Ptr<_249036b01_Struct> _79325_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_249036b01_Struct>();;
							_79325_s.get()._field_Depends = jule::alloc_for_append(_79325_s.get()._field_Depends,1);_79325_s.get()._field_Depends.__push(_75165_decl.operator jule::Ptr<_249036b01_Struct>());;
						}
					}
					_match_end_2510589b7:;
				};
			}
		}
		_match_end_251057e39:;
	};
	_75178_ok = true;
	return _75178_ok;
}



inline jule::Trait<_249cb035c_Kind> _249cc115e_fromTypeAlias(_249cbdcb6_typeChecker* _self_, jule::Ptr<_24904698a_IdentTypeDecl>& _80133_decl, jule::Ptr<_249caea98_TypeAlias>& _80160_ta) {
	if ((!(_249c1c660_isAccessibleDefine((*_self_)._field_s.ptr(), _80160_ta.get()._field_Public,_80160_ta.get()._field_Token)))) {
		_249cbe4c0_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
		return nullptr;
	};
	_80160_ta.get()._field_Used=true;
	if ((_80133_decl.get()._field_Generics.len() > 0LL)) {
		_249cbe4c0_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_bannedGenerics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_25105d978:;
			if (it != expr.end()) {
				jule::Ptr<_249caea98_TypeAlias> _81820_bg = *it;
				{
					if (((_81820_bg == _80160_ta) || ((_80160_ta.get()._field_Kind.get()._field_Kind != nullptr) && _249cb0e95_Equals(_80160_ta.get()._field_Kind.get()._field_Kind, _81820_bg.get()._field_Kind.get()._field_Kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_25105d978;
					};
				}
				_iter_next_25105d978:;
				++it;
				goto _iter_begin_25105d978;
			}
			_iter_end_25105d978:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_2510609d0:;
			if (it != expr.end()) {
				jule::Ptr<_249caea98_TypeAlias> _82920_bg = *it;
				{
					if ((_82920_bg == _80160_ta)) {
						_249cbe4c0_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
						return nullptr;
					};
					{
						auto &expr = _80160_ta.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_251061470:;
						if (it != expr.end()) {
							jule::Ptr<_249caea98_TypeAlias> _83424_dg = *it;
							{
								if ((_82920_bg == _83424_dg)) {
									_249cbe4c0_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
									return nullptr;
								};
							}
							_iter_next_251061470:;
							++it;
							goto _iter_begin_251061470;
						}
						_iter_end_251061470:;
					};
				}
				_iter_next_2510609d0:;
				++it;
				goto _iter_begin_2510609d0;
			}
			_iter_end_2510609d0:;
		};
	};
	jule::Bool _84317_ok = _249cc0ca7_checkIllegalCycles(&(*_self_), _80133_decl,jule::Any(_80160_ta));;
	if ((!(_84317_ok))) {
		return nullptr;
	};
	_84317_ok=_249c26e72_checkTypeAliasDeclKind((*_self_)._field_s, _80160_ta,(*_self_)._field_lookup);
	if ((!(_84317_ok))) {
		return nullptr;
	};
	if ((_80160_ta.get()._field_Generic && ((*_self_)._field_ownerAlias != nullptr))) {
		(*_self_)._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*_self_)._field_ownerAlias.get()._field_Generics,1);(*_self_)._field_ownerAlias.get()._field_Generics.__push(_80160_ta);;
	};
	jule::Ptr<_249cb078b_TypeKind> _86017_tk = jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Generic=_80160_ta.get()._field_Generic, ._field_Kind=_80160_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_249cc0180_pushReferenceByKind(&(*_self_), _86017_tk);
	if (_80160_ta.get()._field_CppLinked) {
		_86017_tk.get()._field_CppIdent=_80160_ta.get()._field_Ident;
	} else {
		_86017_tk.get()._field_CppIdent=_80160_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_249cb035c_Kind>(_86017_tk, 5);
}



inline jule::Ptr<_249bd6a25_Enum> _249cc1516_fromEnum(_249cbdcb6_typeChecker* _self_, jule::Ptr<_24904698a_IdentTypeDecl>& _87328_decl, jule::Ptr<_249bd6a25_Enum>& _87355_e) {
	if ((!(_249c1c660_isAccessibleDefine((*_self_)._field_s.ptr(), _87355_e.get()._field_Public,_87355_e.get()._field_Token)))) {
		_249cbe4c0_pushErr(&(*_self_), _87328_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_87328_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_87328_decl.get()._field_Generics.len() > 0LL)) {
		_249cbe4c0_pushErr(&(*_self_), _87328_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_87328_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _87355_e;
}



inline jule::Ptr<_249bd8120_TypeEnum> _249cc18bd_fromTypeEnum(_249cbdcb6_typeChecker* _self_, jule::Ptr<_24904698a_IdentTypeDecl>& _88532_decl, jule::Ptr<_249bd8120_TypeEnum>& _88559_e) {
	if ((!(_249c1c660_isAccessibleDefine((*_self_)._field_s.ptr(), _88559_e.get()._field_Public,_88559_e.get()._field_Token)))) {
		_249cbe4c0_pushErr(&(*_self_), _88532_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_88532_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_88532_decl.get()._field_Generics.len() > 0LL)) {
		_249cbe4c0_pushErr(&(*_self_), _88532_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_88532_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _88559_e;
}



inline jule::Ptr<_249bd48d0_Trait> _249cc1c75_fromTrait(_249cbdcb6_typeChecker* _self_, jule::Ptr<_24904698a_IdentTypeDecl>& _89729_decl, jule::Ptr<_249bd48d0_Trait>& _89756_t) {
	if ((!(_249c1c660_isAccessibleDefine((*_self_)._field_s.ptr(), _89756_t.get()._field_Public,_89756_t.get()._field_Token)))) {
		_249cbe4c0_pushErr(&(*_self_), _89729_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_89729_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_89729_decl.get()._field_Generics.len() > 0LL)) {
		_249cbe4c0_pushErr(&(*_self_), _89729_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_89729_decl.get()._field_Ident)}));
		return nullptr;
	};
	_2510448d7_pushReference(&(*_self_), _89756_t);
	return _89756_t;
}



inline jule::Bool _249cc212c_checkStructIns(_249cbdcb6_typeChecker* _self_, jule::Ptr<_249062e4b_StructIns>& _91038_ins, jule::Ptr<_23abd3d83_Token>& _91060_errorToken) {
	jule::Bool _91082_ok = jule::Bool();
	if (_91038_ins.get()._field_Checked) {
		_91082_ok = true;
		return _91082_ok;
	};
	_91038_ins.get()._field_Checked=true;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _91038_ins.get()._field_Decl))) {
		_91082_ok = true;
		return _91082_ok;
	};
	if ((!(_249c31102_precheckStructIns((*_self_)._field_s, _91038_ins,_91060_errorToken)))) {
		_91082_ok = false;
		return _91082_ok;
	};
	if ((_91038_ins.get()._field_Generics.len() > 0LL)) {
		_249c31a70_checkStructInsOperators((*_self_)._field_s, _91038_ins);
		_249c31377_checkStructIns((*_self_)._field_s, _91038_ins);
	};
	_91082_ok = true;
	return _91082_ok;
}



inline void _249cc23c4_appendUsedStructReference(_249cbdcb6_typeChecker* _self_, jule::Ptr<_249036b01_Struct>& _93149_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_249036b01_Struct>>()) {
			_case_begin_251073b69:;
			{
				jule::Ptr<_249036b01_Struct> _93721_refS = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_249036b01_Struct>();;
				if ((!(_249022aa9_IsUses(_93721_refS.ptr(), _93149_s)))) {
					_93721_refS.get()._field_Uses = jule::alloc_for_append(_93721_refS.get()._field_Uses,1);_93721_refS.get()._field_Uses.__push(_93149_s);;
				};
			}
		}
		_match_end_251073905:;
	};
}



inline jule::Ptr<_249062e4b_StructIns> _249cc278c_buildStructInstance(_249cbdcb6_typeChecker* _self_, jule::Ptr<_24904698a_IdentTypeDecl>& _94443_decl, jule::Ptr<_249036b01_Struct>& _94470_s) {
	jule::Ptr<_249cbcea2_referencer> _94617_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_249caea98_TypeAlias>> _94817_bannedGenerics = (*_self_)._field_bannedGenerics;;
	if (((*_self_)._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_249be9296_scopeChecker>>()) {
				_case_begin_251076ac3:;
				{
					jule::Ptr<_249be9296_scopeChecker> _95525_sc = (*_self_)._field_lookup.operator jule::Ptr<_249be9296_scopeChecker>();;
					jule::Ptr<_249be9296_scopeChecker> _95625_hard = _249bec61d_getHardRoot(_95525_sc);;
					if (((_95625_hard.get()._field_owner.get()._field_Owner == nullptr) || (_95625_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != _94470_s))) {
						goto _match_end_251075a4a;
					};
					jule::I64 _96021_n = (_95625_hard.get()._field_owner.get()._field_Generics.len() + _95625_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*_self_)._field_bannedGenerics=_95625_hard.get()._field_table.get()._field_TypeAliases.slice(0LL,_96021_n);
				}
			}
			_match_end_251075a4a:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Trait<_249ccb3bc_Lookup> _97017_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=(*_self_)._field_rootLookup;
	jule::Ptr<_249062e4b_StructIns> _97417_ins = _249012d63_instance(_94470_s);;
	_97417_ins.get()._field_Generics=jule::Slice<jule::Ptr<_249cae05e_InsGeneric>>::alloc(0LL,_94443_decl.get()._field_Generics.len());
	{
		auto &expr = _94443_decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_2510741b9:;
		if (it != expr.end()) {
			jule::Ptr<_2490463c4_TypeDecl> _97621_g = *it;
			{
				jule::Ptr<_249cb078b_TypeKind> _97721_kind = _249cc5c24_build(&(*_self_), _97621_g.get()._field_Kind);;
				if ((_97721_kind == nullptr)) {
					return nullptr;
				};
				_97417_ins.get()._field_Generics = jule::alloc_for_append(_97417_ins.get()._field_Generics,1);_97417_ins.get()._field_Generics.__push(jule::new_ptr<_249cae05e_InsGeneric>(_249cae05e_InsGeneric{._field_Kind=_97721_kind, }));;
			}
			_iter_next_2510741b9:;
			++it;
			goto _iter_begin_2510741b9;
		}
		_iter_end_2510741b9:;
	};
	(*_self_)._field_lookup=_97017_lookup;
	(*_self_)._field_bannedGenerics=_94817_bannedGenerics;
	(*_self_)._field_referencer=_94617_referencer;
	return _97417_ins;
}



inline jule::Ptr<_249062e4b_StructIns> _249cc2b44_fromStruct(_249cbdcb6_typeChecker* _self_, jule::Ptr<_24904698a_IdentTypeDecl>& _99234_decl, jule::Ptr<_249036b01_Struct>& _99261_s) {
	if ((!(_249c1c660_isAccessibleDefine((*_self_)._field_s.ptr(), _99261_s.get()._field_Public,_99261_s.get()._field_Token)))) {
		_249cbe4c0_pushErr(&(*_self_), _99234_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_99234_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_99234_decl.get()._field_Generics.len() > 0LL)) {
			_249cbe4c0_pushErr(&(*_self_), _99234_decl.get()._field_Token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_249062e4b_StructIns>(_249062e4b_StructIns{._field_Decl=_99261_s, });
	};
	jule::Bool _101017_ok = ((*_self_)._field_notPlain || _249cc0ca7_checkIllegalCycles(&(*_self_), _99234_decl,jule::Any(_99261_s)));;
	if ((!(_101017_ok))) {
		return nullptr;
	};
	_249cc23c4_appendUsedStructReference(&(*_self_), _99261_s);
	jule::Ptr<_249062e4b_StructIns> _101617_ins = _249cc278c_buildStructInstance(&(*_self_), _99234_decl,_99261_s);;
	if ((_101617_ins == nullptr)) {
		return nullptr;
	};
	_101017_ok=_249c1d331_checkGenericQuantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_101617_ins.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_101617_ins.get()._field_Generics.len()),_99234_decl.get()._field_Token);
	if ((!(_101017_ok))) {
		return nullptr;
	};
	jule::Ptr<_249062e4b_StructIns> _102617_existInstance = _249018e57_appendInstance(_99261_s.ptr(), _101617_ins);;
	if ((_102617_existInstance != nullptr)) {
		if ((!(_249c25624_checkConstraintsStruct((*_self_)._field_s, _101617_ins,_99234_decl.get()._field_Token,_102617_existInstance)))) {
			return nullptr;
		};
		_251041681_pushReference(&(*_self_), _102617_existInstance);
		return _102617_existInstance;
	};
	if ((!(_249cc212c_checkStructIns(&(*_self_), _101617_ins,_99234_decl.get()._field_Token)))) {
		return nullptr;
	};
	_251041681_pushReference(&(*_self_), _101617_ins);
	return _101617_ins;
}



inline jule::Trait<_249cb035c_Kind> _249cc2e52_getDef(_249cbdcb6_typeChecker* _self_, jule::Ptr<_24904698a_IdentTypeDecl>& _105030_decl) {
	{
		auto &expr = (*_self_)._field_ignoreGenerics;
		auto it = expr.begin();
		_iter_begin_251086c7b:;
		if (it != expr.end()) {
			jule::Ptr<_2490539a8_GenericDecl> _105116_g = *it;
			{
				if ((_105116_g.get()._field_Ident == _105030_decl.get()._field_Ident)) {
					return jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(_105116_g.get()._field_Ident), 6);
				};
			}
			_iter_next_251086c7b:;
			++it;
			goto _iter_begin_251086c7b;
		}
		_iter_end_251086c7b:;
	};
	{
		auto &expr = (*_self_)._field_useGenerics;
		auto it = expr.begin();
		_iter_begin_2510876d8:;
		if (it != expr.end()) {
			jule::Ptr<_249caea98_TypeAlias> _105721_g = *it;
			{
				if ((_105721_g.get()._field_Ident == _105030_decl.get()._field_Ident)) {
					if ((_105030_decl.get()._field_Generics.len() > 0LL)) {
						_249cbe4c0_pushErr(&(*_self_), _105030_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_105030_decl.get()._field_Ident)}));
						return nullptr;
					};
					jule::Ptr<_249062e4b_StructIns> _106325_st = _249cb3d00_Struct(_105721_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_106325_st != nullptr)) {
						jule::Bool _106525_ok = _249cc0ca7_checkIllegalCycles(&(*_self_), _105030_decl,jule::Any(_106325_st.get()._field_Decl));;
						if ((!(_106525_ok))) {
							return nullptr;
						};
					};
					return _105721_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;
				};
			}
			_iter_next_2510876d8:;
			++it;
			goto _iter_begin_2510876d8;
		}
		_iter_end_2510876d8:;
	};
	if ((!(_105030_decl.get()._field_CppLinked))) {
		jule::Ptr<_249bd6a25_Enum> _107521_e = _249ccb3bc_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._249ccae6b_FindEnum((*_self_)._field_lookup, _105030_decl.get()._field_Ident);;
		if ((_107521_e != nullptr)) {
			return jule::Trait<_249cb035c_Kind>(_249cc1516_fromEnum(&(*_self_), _105030_decl,_107521_e), 3);
		};
		jule::Ptr<_249bd8120_TypeEnum> _108021_te = _249ccb3bc_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._249ccb279_FindTypeEnum((*_self_)._field_lookup, _105030_decl.get()._field_Ident);;
		if ((_108021_te != nullptr)) {
			return jule::Trait<_249cb035c_Kind>(_249cc18bd_fromTypeEnum(&(*_self_), _105030_decl,_108021_te), 4);
		};
		jule::Ptr<_249bd48d0_Trait> _108521_t = _249ccb3bc_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._249ccab5d_FindTrait((*_self_)._field_lookup, _105030_decl.get()._field_Ident);;
		if ((_108521_t != nullptr)) {
			return jule::Trait<_249cb035c_Kind>(_249cc1c75_fromTrait(&(*_self_), _105030_decl,_108521_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_249cbe4c0_pushErr(&(*_self_), _105030_decl.get()._field_Token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_249036b01_Struct> _109417_s = _249ccb3bc_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._249cca498_FindStruct((*_self_)._field_lookup, _105030_decl.get()._field_Ident,_105030_decl.get()._field_CppLinked);;
	if ((_109417_s != nullptr)) {
		return jule::Trait<_249cb035c_Kind>(_249cc2b44_fromStruct(&(*_self_), _105030_decl,_109417_s), 0);
	};
	jule::Ptr<_249caea98_TypeAlias> _109917_ta = _249ccb3bc_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._249cca0e1_FindTypeAlias((*_self_)._field_lookup, _105030_decl.get()._field_Ident,_105030_decl.get()._field_CppLinked);;
	if (((_109917_ta == nullptr) && (!((*_self_)._field_disBuiltin)))) {
		_109917_ta=_249cdacb1_findBuiltinTypeAlias(_105030_decl.get()._field_Ident);
	};
	if ((_109917_ta != nullptr)) {
		return _249cc115e_fromTypeAlias(&(*_self_), _105030_decl,_109917_ta);
	};
	_249cbe4c0_pushErr(&(*_self_), _105030_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_105030_decl.get()._field_Ident)}));
	return nullptr;
}



inline jule::Trait<_249cb035c_Kind> _249cc3260_buildIdent(_249cbdcb6_typeChecker* _self_, jule::Ptr<_24904698a_IdentTypeDecl> _111133_decl) {
	{
		
		if (_249cc8c7c_isPrim(_111133_decl.get()._field_Ident)) {
			_case_begin_251093c00:;
			{
				return jule::Trait<_249cb035c_Kind>(_249cbeb85_buildPrim(&(*_self_), _111133_decl), 6);
			}
		}
		else {
			_case_begin_251093480:;
			{
				return _249cc2e52_getDef(&(*_self_), _111133_decl);
			}
		}
		_match_end_2510933a3:;
	};
}



inline jule::Trait<_249cb035c_Kind> _249cc356d_buildSubIdent(_249cbdcb6_typeChecker* _self_, jule::Ptr<_2490470d9_SubIdentTypeDecl> _112036_decl) {
	jule::Trait<_249cb035c_Kind> _112117_ident = _249cc3260_buildIdent(&(*_self_), _112036_decl.get()._field_Idents[0LL]);;
	if ((_112117_ident == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _112117_ident };
		
		if (_match_expr.type_is<jule::Ptr<_249bd8120_TypeEnum>>()) {
			_case_begin_251095e55:;
			{
				goto _match_end_2510955b4;
			}
		}
		else {
			_case_begin_251095619:;
			{
				_249cbe4c0_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_2510955b4:;
	};
	jule::Ptr<_249bd8120_TypeEnum> _113217_t = _112117_ident.operator jule::Ptr<_249bd8120_TypeEnum>();;
	jule::Slice<jule::Ptr<_24904698a_IdentTypeDecl>> _113317_idents = _112036_decl.get()._field_Idents.slice(1LL);;
	{
		auto &expr = _113317_idents;
		auto it = expr.begin();
		_iter_begin_251096ce1:;
		if (it != expr.end()) {
			jule::I64 _113413_i = it - expr.begin();
			jule::Ptr<_24904698a_IdentTypeDecl> _113416_id = *it;
			{
				jule::Ptr<_249bd7a59_TypeEnumItem> _113521_item = _249bd8b59_FindItem(_113217_t.ptr(), _113416_id.get()._field_Ident);;
				if ((_113521_item == nullptr)) {
					_249cbe4c0_pushErr(&(*_self_), _113416_id.get()._field_Token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_113217_t.get()._field_Ident),jule::Any(_113416_id.get()._field_Ident)}));
					return nullptr;
				};
				if (((_113317_idents.len() - _113413_i) == 1LL)) {
					_249cc0180_pushReferenceByKind(&(*_self_), _113521_item.get()._field_Kind.get()._field_Kind);
					return jule::Trait<_249cb035c_Kind>(_113521_item.get()._field_Kind.get()._field_Kind, 5);
				};
				_113217_t=_249cb334e_TypeEnum(_113521_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_113217_t == nullptr)) {
					_249cbe4c0_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
			_iter_next_251096ce1:;
			++it;
			_113413_i++;
			goto _iter_begin_251096ce1;
		}
		_iter_end_251096ce1:;
	};
	return nullptr;
}



inline jule::Ptr<_249cb89e7_Sptr> _249cc387b_buildSptrFromType(_249cbdcb6_typeChecker* _self_, jule::Ptr<_249cb078b_TypeKind>& _115441_elem) {
	{
		
		if ((_115441_elem == nullptr)) {
			_case_begin_25109784c:;
			{
				return nullptr;
			}
		}
		else if ((_249cb3d00_Struct(_115441_elem.ptr()) != nullptr)) {
			_case_begin_25109b39a:;
			{
				jule::Ptr<_249062e4b_StructIns> _116017_s = _249cb3d00_Struct(_115441_elem.ptr());;
				if (((_116017_s.get()._field_Decl != nullptr) && _116017_s.get()._field_Decl.get()._field_CppLinked)) {
					_249cbe4c0_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_249cb35b3_Arr(_115441_elem.ptr()) != nullptr) && _249cb35b3_Arr(_115441_elem.ptr()).get()._field_Auto)) {
			_case_begin_25109b411:;
			{
				_249cbe4c0_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_25109771a:;
	};
	return jule::new_ptr<_249cb89e7_Sptr>(_249cb89e7_Sptr{._field_Elem=_115441_elem});
}



inline jule::Ptr<_249cb89e7_Sptr> _249cc3b89_buildSptr(_249cbdcb6_typeChecker* _self_, jule::Ptr<_24904777c_SptrTypeDecl> _117432_decl) {
	jule::Bool _117513_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_117513_notPlain;
	});;
	jule::Ptr<_249cb078b_TypeKind> _117917_elem = _249cc6032_checkDecl(&(*_self_), _117432_decl.get()._field_Elem);;
	return _249cc387b_buildSptrFromType(&(*_self_), _117917_elem);
}



inline jule::Ptr<_249cbc05b_Ptr> _249cc3e97_buildPtrFromType(_249cbdcb6_typeChecker* _self_, jule::Ptr<_249cb078b_TypeKind>& _118340_elem) {
	{
		
		if ((_118340_elem == nullptr)) {
			_case_begin_2510a1845:;
			{
				return nullptr;
			}
		}
		else if (((_249cb35b3_Arr(_118340_elem.ptr()) != nullptr) && _249cb35b3_Arr(_118340_elem.ptr()).get()._field_Auto)) {
			_case_begin_2510a18bc:;
			{
				_249cbe4c0_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_249cbc05b_Ptr>();
			}
		}
		_match_end_2510a1724:;
	};
	return jule::new_ptr<_249cbc05b_Ptr>(_249cbc05b_Ptr{._field_Elem=_118340_elem});
}



inline jule::Ptr<_249cbc05b_Ptr> _249cc42a5_buildPtr(_249cbdcb6_typeChecker* _self_, jule::Ptr<_249048250_PtrTypeDecl> _119831_decl) {
	jule::Bool _119913_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_119913_notPlain;
	});;
	jule::Ptr<_249cb078b_TypeKind> _120317_elem = nullptr;;
	if ((!(_2490485a2_IsUnsafe(_119831_decl.ptr())))) {
		_120317_elem=_249cc6032_checkDecl(&(*_self_), _119831_decl.get()._field_Elem);
		return _249cc3e97_buildPtrFromType(&(*_self_), _120317_elem);
	};
	return jule::new_ptr<_249cbc05b_Ptr>(_249cbc05b_Ptr{._field_Elem=_120317_elem});
}



inline jule::Ptr<_249cb9454_Slc> _249cc45b3_buildSlc(_249cbdcb6_typeChecker* _self_, jule::Ptr<_249047b78_SlcTypeDecl> _121531_decl) {
	jule::Bool _121613_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_121613_notPlain;
	});;
	jule::Ptr<_249cb078b_TypeKind> _122017_elem = _249cc6032_checkDecl(&(*_self_), _121531_decl.get()._field_Elem);;
	{
		
		if ((_122017_elem == nullptr)) {
			_case_begin_2510a7065:;
			{
				return nullptr;
			}
		}
		else if (((_249cb35b3_Arr(_122017_elem.ptr()) != nullptr) && _249cb35b3_Arr(_122017_elem.ptr()).get()._field_Auto)) {
			_case_begin_2510a70dc:;
			{
				_249cbe4c0_pushErr(&(*_self_), _121531_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_2510a6eaa:;
	};
	return jule::new_ptr<_249cb9454_Slc>(_249cb9454_Slc{._field_Elem=_122017_elem});
}



inline jule::Ptr<_249cbb5ee_Arr> _249cc48c1_buildArr(_249cbdcb6_typeChecker* _self_, jule::Ptr<_2490488d2_ArrTypeDecl> _123631_decl) {
	jule::Bool _123713_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_123713_notPlain;
	});;
	jule::I64 _124117_n = 0LL;;
	if ((!(_249048cab_AutoSized(_123631_decl.ptr())))) {
		jule::Ptr<_249c80052_Data> _124421_size = _249ca1e86_evalExpr(_249c23875_eval((*_self_)._field_s, (*_self_)._field_lookup), _123631_decl.get()._field_Size);;
		if ((_124421_size == nullptr)) {
			return nullptr;
		};
		if ((!(_249c80915_IsConst(_124421_size.ptr())))) {
			_249cbe4c0_pushErr(&(*_self_), _123631_decl.get()._field_Size.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_249cb289d_Prim(_124421_size.get()._field_Kind.ptr()) == nullptr) || (!(_249bc42e8_IsInt(_249cb289d_Prim(_124421_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_249cbe4c0_pushErr(&(*_self_), _123631_decl.get()._field_Size.get()._field_Token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_124117_n=static_cast<jule::I64>(static_cast<jule::I64>(_249168260_AsI64(_124421_size.get()._field_Constant.ptr())));
		if ((_124117_n < 0LL)) {
			_249cbe4c0_pushErr(&(*_self_), _123631_decl.get()._field_Elem.get()._field_Token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_24917dac2_BitSize != 64LL) && (static_cast<jule::F64>(_124117_n) > _2495852d6_Max(jule::Str("int", 3))))) {
			_249cbe4c0_pushErr(&(*_self_), _123631_decl.get()._field_Size.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_249cb078b_TypeKind> _126717_elem = _249cc6032_checkDecl(&(*_self_), _123631_decl.get()._field_Elem);;
	{
		
		if ((_126717_elem == nullptr)) {
			_case_begin_2510b1525:;
			{
				return nullptr;
			}
		}
		else if (((_249cb35b3_Arr(_126717_elem.ptr()) != nullptr) && _249cb35b3_Arr(_126717_elem.ptr()).get()._field_Auto)) {
			_case_begin_2510b158b:;
			{
				_249cbe4c0_pushErr(&(*_self_), _123631_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_2510b12a0:;
	};
	return jule::new_ptr<_249cbb5ee_Arr>(_249cbb5ee_Arr{._field_Auto=_249048cab_AutoSized(_123631_decl.ptr()), ._field_N=_124117_n, ._field_Elem=_126717_elem});
}



inline jule::Ptr<_249cbaa0a_Map> _249cc4bce_buildMap(_249cbdcb6_typeChecker* _self_, jule::Ptr<_249049130_MapTypeDecl> _128531_decl) {
	jule::Bool _128613_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_128613_notPlain;
	});;
	jule::Ptr<_249cb078b_TypeKind> _129017_key = _249cc6032_checkDecl(&(*_self_), _128531_decl.get()._field_Key);;
	if ((_129017_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_249cb078b_TypeKind> _129517_val = _249cc6032_checkDecl(&(*_self_), _128531_decl.get()._field_Val);;
	if ((_129517_val == nullptr)) {
		return nullptr;
	};
	if ((_249cb30da_Enum(_129517_val.ptr()) != nullptr)) {
		_249cbe4c0_pushErr(&(*_self_), _128531_decl.get()._field_Val.get()._field_Token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_249cbaa0a_Map>(_249cbaa0a_Map{._field_Key=_129017_key, ._field_Val=_129517_val});
}



inline jule::Ptr<_249cb9ed2_Tuple> _249cc4edc_buildTuple(_249cbdcb6_typeChecker* _self_, jule::Ptr<_249047e64_TupleTypeDecl> _130933_decl) {
	jule::Slice<jule::Ptr<_249cb078b_TypeKind>> _131017_types = jule::Slice<jule::Ptr<_249cb078b_TypeKind>>::alloc(0LL,_130933_decl.get()._field_Types.len());;
	{
		auto &expr = _130933_decl.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_2510b7394:;
		if (it != expr.end()) {
			jule::Ptr<_2490463c4_TypeDecl> _131121_t = *it;
			{
				jule::Ptr<_249cb078b_TypeKind> _131221_kind = _249cc6032_checkDecl(&(*_self_), _131121_t);;
				if ((_131221_kind == nullptr)) {
					return nullptr;
				};
				_131017_types = jule::alloc_for_append(_131017_types,1);_131017_types.__push(_131221_kind);;
			}
			_iter_next_2510b7394:;
			++it;
			goto _iter_begin_2510b7394;
		}
		_iter_end_2510b7394:;
	};
	return jule::new_ptr<_249cb9ed2_Tuple>(_249cb9ed2_Tuple{._field_Types=_131017_types});
}



inline jule::Bool _249cc52ea_checkFnTypes(_249cbdcb6_typeChecker* _self_, jule::Ptr<_249bcc312_FnIns>& _132236_f) {
	jule::Bool _132249_ok = jule::Bool();
	{
		auto &expr = _132236_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_2510b9286:;
		if (it != expr.end()) {
			jule::Ptr<_249bcc125_ParamIns> _132321_p = *it;
			{
				_132321_p.get()._field_Kind=_249cc5c24_build(&(*_self_), _132321_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind);
				_132249_ok=(_132321_p.get()._field_Kind != nullptr);
				if ((!(_132249_ok))) {
					_132249_ok = false;
					return _132249_ok;
				};
				_249c25c51_checkFnParamKind((*_self_)._field_s, _132321_p);
			}
			_iter_next_2510b9286:;
			++it;
			goto _iter_begin_2510b9286;
		}
		_iter_end_2510b9286:;
	};
	if ((!(_2490aaa43_IsVoid(_132236_f.get()._field_Decl.ptr())))) {
		_132236_f.get()._field_Result=_249cc5c24_build(&(*_self_), _132236_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind);
		_132249_ok = (_132236_f.get()._field_Result != nullptr);
		return _132249_ok;
	};
	_132249_ok = true;
	return _132249_ok;
}



inline jule::Ptr<_249bcc312_FnIns> _249cc5608_buildFn(_249cbdcb6_typeChecker* _self_, jule::Ptr<_2490581d8_FnDecl> _134030_decl) {
	if ((_134030_decl.get()._field_Generics.len() > 0LL)) {
		_249cbe4c0_pushErr(&(*_self_), _134030_decl.get()._field_Token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_249bcbe38_Fn> _134617_f = _249bce39c_buildFn(_134030_decl);;
	jule::I64 _134813_n = (*_self_)._field_s.get()._field_errors.len();;
	_249c2cb6a_checkFnDecl((*_self_)._field_s, _134617_f);
	if ((_134813_n != (*_self_)._field_s.get()._field_errors.len())) {
		return nullptr;
	};
	jule::Ptr<_249bcc312_FnIns> _135417_ins = _2490a1dbe_instanceForce(_134617_f);;
	_135417_ins.get()._field_Anon=true;
	jule::Bool _135713_ok = _249cc52ea_checkFnTypes(&(*_self_), _135417_ins);;
	if ((!(_135713_ok))) {
		return nullptr;
	};
	return _135417_ins;
}



inline jule::Trait<_249cb035c_Kind> _249cc5916_buildByNamespace(_249cbdcb6_typeChecker* _self_, jule::Ptr<_249047491_NamespaceTypeDecl> _136539_decl) {
	jule::Str _136613_path = _249cc8386_buildLinkPathByTokens(_136539_decl.get()._field_Idents);;
	jule::Ptr<_249c1117b_ImportInfo> _136717_imp = _249ccb3bc_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._249cc9882_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_249c1117b_ImportInfo>)>([=](jule::Ptr<_249c1117b_ImportInfo> _136752_imp) mutable -> jule::Bool {
		if (((_136539_decl.get()._field_Idents.len() == 1LL) && (_136752_imp.get()._field_Alias == _136613_path))) {
			return true;
		};
		return ((_136752_imp.get()._field_LinkPath == _136613_path) && _249c13cd8_isAccessibleViaSelection(_136752_imp.ptr()));
	}));;
	if (((_136717_imp == nullptr) || (!(_249c13744_isLookupable(_136717_imp.ptr(), jule::Str("self", 4)))))) {
		_249cbe4c0_pushErr(&(*_self_), _136539_decl.get()._field_Idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_136613_path)}));
		return nullptr;
	};
	_249cbe877_disallowBuiltin(&(*_self_));
	jule::Trait<_249ccb3bc_Lookup> _138017_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_249ccb3bc_Lookup>(_136717_imp, 1);
	jule::Ptr<_249cb078b_TypeKind> _138217_kind = _249cc6032_checkDecl(&(*_self_), _136539_decl.get()._field_Kind);;
	(*_self_)._field_lookup=_138017_lookup;
	_249cbe69b_allowBuiltin(&(*_self_));
	return jule::Trait<_249cb035c_Kind>(_138217_kind, 5);
}



inline jule::Ptr<_249cb078b_TypeKind> _249cc5c24_build(_249cbdcb6_typeChecker* _self_, jule::Any& _138829_declKind) {
	jule::Trait<_249cb035c_Kind> _138917_kind = nullptr;;
	{
		auto &_match_expr{ _138829_declKind };
		
		if (_match_expr.type_is<jule::Ptr<_24904698a_IdentTypeDecl>>()) {
			_case_begin_2510c9b7b:;
			{
				jule::Trait<_249cb035c_Kind> _139221_t = _249cc3260_buildIdent(&(*_self_), _138829_declKind.operator jule::Ptr<_24904698a_IdentTypeDecl>());;
				if ((_139221_t != nullptr)) {
					_138917_kind=_139221_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2490470d9_SubIdentTypeDecl>>()) {
			_case_begin_2510c9dce:;
			{
				jule::Trait<_249cb035c_Kind> _139721_t = _249cc356d_buildSubIdent(&(*_self_), _138829_declKind.operator jule::Ptr<_2490470d9_SubIdentTypeDecl>());;
				if ((_139721_t != nullptr)) {
					_138917_kind=_139721_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904777c_SptrTypeDecl>>()) {
			_case_begin_2510c888e:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_249cb89e7_Sptr> _140321_t = _249cc3b89_buildSptr(&(*_self_), _138829_declKind.operator jule::Ptr<_24904777c_SptrTypeDecl>());;
				if ((_140321_t != nullptr)) {
					_138917_kind=jule::Trait<_249cb035c_Kind>(_140321_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249048250_PtrTypeDecl>>()) {
			_case_begin_2510c9a5a:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_249cbc05b_Ptr> _140921_t = _249cc42a5_buildPtr(&(*_self_), _138829_declKind.operator jule::Ptr<_249048250_PtrTypeDecl>());;
				if ((_140921_t != nullptr)) {
					_138917_kind=jule::Trait<_249cb035c_Kind>(_140921_t, 12);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249047b78_SlcTypeDecl>>()) {
			_case_begin_2510c7a14:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_249cb9454_Slc> _141521_t = _249cc45b3_buildSlc(&(*_self_), _138829_declKind.operator jule::Ptr<_249047b78_SlcTypeDecl>());;
				if ((_141521_t != nullptr)) {
					_138917_kind=jule::Trait<_249cb035c_Kind>(_141521_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2490488d2_ArrTypeDecl>>()) {
			_case_begin_2510c7a7a:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_249cbb5ee_Arr> _142121_t = _249cc48c1_buildArr(&(*_self_), _138829_declKind.operator jule::Ptr<_2490488d2_ArrTypeDecl>());;
				if ((_142121_t != nullptr)) {
					_138917_kind=jule::Trait<_249cb035c_Kind>(_142121_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249049130_MapTypeDecl>>()) {
			_case_begin_2510c7ae1:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_249cbaa0a_Map> _142721_t = _249cc4bce_buildMap(&(*_self_), _138829_declKind.operator jule::Ptr<_249049130_MapTypeDecl>());;
				if ((_142721_t != nullptr)) {
					_138917_kind=jule::Trait<_249cb035c_Kind>(_142721_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249047e64_TupleTypeDecl>>()) {
			_case_begin_2510c7b57:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_249cb9ed2_Tuple> _143321_t = _249cc4edc_buildTuple(&(*_self_), _138829_declKind.operator jule::Ptr<_249047e64_TupleTypeDecl>());;
				if ((_143321_t != nullptr)) {
					_138917_kind=jule::Trait<_249cb035c_Kind>(_143321_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2490581d8_FnDecl>>()) {
			_case_begin_2510c940b:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_249bcc312_FnIns> _143921_t = _249cc5608_buildFn(&(*_self_), _138829_declKind.operator jule::Ptr<_2490581d8_FnDecl>());;
				if ((_143921_t != nullptr)) {
					_138917_kind=jule::Trait<_249cb035c_Kind>(_143921_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249047491_NamespaceTypeDecl>>()) {
			_case_begin_2510c9472:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_249cb035c_Kind> _144521_t = _249cc5916_buildByNamespace(&(*_self_), _138829_declKind.operator jule::Ptr<_249047491_NamespaceTypeDecl>());;
				if ((_144521_t != nullptr)) {
					_138917_kind=_144521_t;
				};
			}
		}
		else {
			_case_begin_2510c786b:;
			{
				jule::Any _145021_udeclKind = (*(((jule::Any*)((&(_138829_declKind))))));;
				{
					auto &_match_expr{ _145021_udeclKind };
					
					if (_match_expr.type_is<jule::Ptr<_249cb89e7_Sptr>>()) {
						_case_begin_2510c87a1:;
						{
							_138917_kind=jule::Trait<_249cb035c_Kind>(_145021_udeclKind.operator jule::Ptr<_249cb89e7_Sptr>(), 7);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_249cbc05b_Ptr>>()) {
						_case_begin_2510c8817:;
						{
							_138917_kind=jule::Trait<_249cb035c_Kind>(_145021_udeclKind.operator jule::Ptr<_249cbc05b_Ptr>(), 12);
						}
					}
					else {
						_case_begin_2510c862a:;
						{
							_249cbe4c0_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_2510c852b:;
				};
			}
		}
		_match_end_2510c7816:;
	};
	if ((_138917_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _138917_kind };
		
		if (_match_expr.type_is<jule::Ptr<_249cb078b_TypeKind>>()) {
			_case_begin_2510d72a4:;
			{
				return _138917_kind.operator jule::Ptr<_249cb078b_TypeKind>();
			}
		}
		else {
			_case_begin_2510d69e0:;
			{
				return jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=_138917_kind});
			}
		}
		_match_end_2510d698a:;
	};
}



inline jule::Ptr<_249cb078b_TypeKind> _249cc6032_checkDecl(_249cbdcb6_typeChecker* _self_, jule::Ptr<_2490463c4_TypeDecl>& _147433_decl) {
	jule::Ptr<_23abd3d83_Token> _147617_errorToken = (*_self_)._field_errorToken;;
	(*_self_)._field_errorToken=_147433_decl.get()._field_Token;
	jule::Ptr<_249cb078b_TypeKind> _147917_kind = _249cc5c24_build(&(*_self_), _147433_decl.get()._field_Kind);;
	(*_self_)._field_errorToken=_147617_errorToken;
	return _147917_kind;
}



inline void _249cc62a7_check(_249cbdcb6_typeChecker* _self_, jule::Ptr<_249cb48e4_TypeSymbol>& _148529_t) {
	if ((_148529_t.get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_249cb078b_TypeKind> _148917_kind = _249cc6032_checkDecl(&(*_self_), _148529_t.get()._field_Decl);;
	if ((_148917_kind == nullptr)) {
		_249cb4e77_removeKind(_148529_t.ptr());
		return;;
	};
	_148529_t.get()._field_Kind=_148917_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _249cbdcb6_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__249cc6917_identTypeDecl(jule::Str& _150130_ident, jule::Ptr<_24904698a_IdentTypeDecl> _150142_t) {
	if ((_150142_t.get()._field_Ident == _150130_ident)) {
		return true;
	};
	{
		auto &expr = _150142_t.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_2510dade0:;
		if (it != expr.end()) {
			jule::Ptr<_2490463c4_TypeDecl> &_150516_g = *it;
			{
				if (static__249cc6c58_exist(_150130_ident,_150516_g.get()._field_Kind)) {
					return true;
				};
			}
			_iter_next_2510dade0:;
			++it;
			goto _iter_begin_2510dade0;
		}
		_iter_end_2510dade0:;
	};
	return false;
}



inline jule::Bool static__249cc6c58_exist(jule::Str& _151322_ident, jule::Any& _151335_k) {
	{
		auto &_match_expr{ _151335_k };
		
		if (_match_expr.type_is<jule::Ptr<_24904698a_IdentTypeDecl>>()) {
			_case_begin_2510dc199:;
			{
				return static__249cc6917_identTypeDecl(_151322_ident,_151335_k.operator jule::Ptr<_24904698a_IdentTypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2490470d9_SubIdentTypeDecl>>()) {
			_case_begin_2510dc210:;
			{
				jule::Ptr<_2490470d9_SubIdentTypeDecl> _151817_sit = _151335_k.operator jule::Ptr<_2490470d9_SubIdentTypeDecl>();;
				{
					auto &expr = _151817_sit.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_2510ddb4b:;
					if (it != expr.end()) {
						jule::Ptr<_24904698a_IdentTypeDecl> &_151920_id = *it;
						{
							if (static__249cc6917_identTypeDecl(_151322_ident,_151920_id)) {
								return true;
							};
						}
						_iter_next_2510ddb4b:;
						++it;
						goto _iter_begin_2510ddb4b;
					}
					_iter_end_2510ddb4b:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904777c_SptrTypeDecl>>()) {
			_case_begin_2510dc276:;
			{
				jule::Ptr<_24904777c_SptrTypeDecl> _152617_sptr = _151335_k.operator jule::Ptr<_24904777c_SptrTypeDecl>();;
				return static__249cc6c58_exist(_151322_ident,_152617_sptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249048250_PtrTypeDecl>>()) {
			_case_begin_2510dc2dc:;
			{
				jule::Ptr<_249048250_PtrTypeDecl> _152917_ptr = _151335_k.operator jule::Ptr<_249048250_PtrTypeDecl>();;
				return static__249cc6c58_exist(_151322_ident,_152917_ptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249047b78_SlcTypeDecl>>()) {
			_case_begin_2510dc4b8:;
			{
				jule::Ptr<_249047b78_SlcTypeDecl> _153217_slc = _151335_k.operator jule::Ptr<_249047b78_SlcTypeDecl>();;
				return static__249cc6c58_exist(_151322_ident,_153217_slc.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2490488d2_ArrTypeDecl>>()) {
			_case_begin_2510dc52e:;
			{
				jule::Ptr<_2490488d2_ArrTypeDecl> _153517_arr = _151335_k.operator jule::Ptr<_2490488d2_ArrTypeDecl>();;
				return static__249cc6c58_exist(_151322_ident,_153517_arr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249049130_MapTypeDecl>>()) {
			_case_begin_2510dc595:;
			{
				jule::Ptr<_249049130_MapTypeDecl> _153817_m = _151335_k.operator jule::Ptr<_249049130_MapTypeDecl>();;
				return (static__249cc6c58_exist(_151322_ident,_153817_m.get()._field_Key.get()._field_Kind) || static__249cc6c58_exist(_151322_ident,_153817_m.get()._field_Val.get()._field_Kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2490581d8_FnDecl>>()) {
			_case_begin_2510dc60b:;
			{
				jule::Ptr<_2490581d8_FnDecl> _154217_f = _151335_k.operator jule::Ptr<_2490581d8_FnDecl>();;
				{
					auto &expr = _154217_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_2510e4305:;
					if (it != expr.end()) {
						jule::Ptr<_249056db8_ParamDecl> &_154320_p = *it;
						{
							if (_24905722b_IsSelf(_154320_p.ptr())) {
								goto _iter_next_2510e4305;
							};
							if (static__249cc6c58_exist(_151322_ident,_154320_p.get()._field_Kind.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_2510e4305:;
						++it;
						goto _iter_begin_2510e4305;
					}
					_iter_end_2510e4305:;
				};
				if ((_154217_f.get()._field_Result != nullptr)) {
					return static__249cc6c58_exist(_151322_ident,_154217_f.get()._field_Result.get()._field_Kind.get()._field_Kind);
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249047e64_TupleTypeDecl>>()) {
			_case_begin_2510dc672:;
			{
				jule::Ptr<_249047e64_TupleTypeDecl> _155617_tup = _151335_k.operator jule::Ptr<_249047e64_TupleTypeDecl>();;
				{
					auto &expr = _155617_tup.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_2510e6879:;
					if (it != expr.end()) {
						jule::Ptr<_2490463c4_TypeDecl> &_155720_t = *it;
						{
							if (static__249cc6c58_exist(_151322_ident,_155720_t.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_2510e6879:;
						++it;
						goto _iter_begin_2510e6879;
					}
					_iter_end_2510e6879:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249047491_NamespaceTypeDecl>>()) {
			_case_begin_2510dc82b:;
			{
				jule::Ptr<_249047491_NamespaceTypeDecl> _156417_ns = _151335_k.operator jule::Ptr<_249047491_NamespaceTypeDecl>();;
				return static__249cc6c58_exist(_151322_ident,_156417_ns.get()._field_Kind.get()._field_Kind);
			}
		}
		else {
			_case_begin_2510dc045:;
			{
				return false;
			}
		}
		_match_end_2510dbee0:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _249cc64c7_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24a4e45eb_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24a541170_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _24a54212c_stop(_24a54199a_scopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _24a542391_stopped(_24a54199a_scopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _24a542605_finished(_24a54199a_scopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _24a542869_isLastSt(_24a54199a_scopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _24a542b88_pushErr(_24a54199a_scopeParser* _self_, jule::Ptr<_23abd3d83_Token> _19226_token, jule::Str _19241_fmt) {
	_24a55da50_pushErr((*_self_)._field_p.ptr(), _19226_token,_19241_fmt,jule::Slice<jule::Any>());
}



inline void _24a542ea7_pushSuggestion(_24a54199a_scopeParser* _self_, jule::Str _19733_fmt, jule::Slice<jule::Any> _19746_args) {
	_24a55dd6e_pushSuggestion((*_self_)._field_p.ptr(), _19733_fmt,jule::Any(_19746_args));
}



inline void _24a54322c_insertAsNext(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _20136_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_24a541170_stmt>(_24a541170_stmt{._field_tokens=_20136_tokens, });
}



inline jule::Ptr<_24a541170_stmt> _24a543491_next(_24a54199a_scopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_2490566e2_ScopeTree> _24a543848_buildScope(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _21134_tokens, jule::Ptr<_23abd3d83_Token> _21156_end) {
	jule::Ptr<_2490566e2_ScopeTree> _21217_s = _24a54004d_newScope();;
	_21217_s.get()._field_Parent=(*_self_)._field_s;
	_21217_s.get()._field_End=_21156_end;
	_24a54199a_scopeParser _21517_ssp = _24a54199a_scopeParser{._field_p=(*_self_)._field_p, };;
	_24a54c533_build(&_21517_ssp, _21134_tokens,_21217_s);
	return _21217_s;
}



inline jule::Ptr<_2490591b7_VarDecl> _24a543b56_buildVarSt(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _22234_tokens) {
	jule::Ptr<_2490591b7_VarDecl> _22317_v = _24a56158b_buildVar((*_self_)._field_p, _22234_tokens);;
	_22317_v.get()._field_Scope=(*_self_)._field_s;
	return _22317_v;
}



inline jule::Ptr<_24905956e_RetSt> _24a543e64_buildRetSt(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _22833_tokens) {
	jule::Ptr<_24905956e_RetSt> _22917_st = jule::new_ptr<_24905956e_RetSt>(_24905956e_RetSt{._field_Token=_22833_tokens[0LL], });;
	if ((_22833_tokens.len() > 1LL)) {
		_22833_tokens=_22833_tokens.slice(1LL);
		_22917_st.get()._field_Expr=_24a55e17c_buildExpr((*_self_)._field_p, _22833_tokens);
	};
	return _22917_st;
}



inline jule::Ptr<_249059bce_Iter> _24a544272_buildWhileNextIter(_24a54199a_scopeParser* _self_, jule::Ptr<_24a541170_stmt>& _23942_s) {
	jule::Ptr<_249059bce_Iter> _24017_it = jule::new_ptr<_249059bce_Iter>(_249059bce_Iter{._field_Token=_23942_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _24317_tokens = _23942_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_24905a4a4_WhileKind> _24417_kind = jule::new_ptr<_24905a4a4_WhileKind>();;
	if ((_24317_tokens.len() > 0LL)) {
		_24417_kind.get()._field_Expr=_24a55e17c_buildExpr((*_self_)._field_p, _24317_tokens);
	};
	if (_24a542869_isLastSt(&(*_self_))) {
		_24a542b88_pushErr(&(*_self_), _24017_it.get()._field_Token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24317_tokens=_24a543491_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _25617_stTokens = _24a558286_getBlockExpr(_24317_tokens);;
	if ((_25617_stTokens.len() > 0LL)) {
		jule::Ptr<_24a541170_stmt> _25821_stmt = jule::new_ptr<_24a541170_stmt>(_24a541170_stmt{._field_tokens=_25617_stTokens, ._field_terminated=_23942_s.get()._field_terminated});;
		_24417_kind.get()._field_NextToken=_25617_stTokens[0LL];
		_24417_kind.get()._field_Next=_24a54c214_buildSt(&(*_self_), _25821_stmt);
	};
	jule::I64 _26617_i = _25617_stTokens.len();;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _26717_blockTokens = _24a55b355_range(_26617_i,jule::Str("{", 1),jule::Str("}", 1),_24317_tokens);;
	if ((_26717_blockTokens == nullptr)) {
		_24a54212c_stop(&(*_self_));
		_24a542b88_pushErr(&(*_self_), _24017_it.get()._field_Token,jule::Str("body is not exist", 17));
		_24a542ea7_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26617_i < _24317_tokens.len())) {
		_24a542b88_pushErr(&(*_self_), _24317_tokens[_26617_i],jule::Str("invalid syntax", 14));
	};
	_24017_it.get()._field_Scope=_24a543848_buildScope(&(*_self_), _26717_blockTokens,_24317_tokens[(_26617_i - 1LL)]);
	_24017_it.get()._field_Kind=static_cast<jule::Any>(_24417_kind);
	return _24017_it;
}



inline jule::Ptr<_24905a4a4_WhileKind> _24a544580_buildWhileIterKind(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _28442_tokens) {
	return jule::new_ptr<_24905a4a4_WhileKind>(_24905a4a4_WhileKind{._field_Expr=_24a55e17c_buildExpr((*_self_)._field_p, _28442_tokens), });
}



inline jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _24a54488d_getRangeKindKeysTokens(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _29046_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _29118_vars;;
	jule::Slice<_23a8a5ca8_Log> _29124_errs;;
	std::tie(_29118_vars,_29124_errs) = _24a55bdc2_parts(_29046_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29124_errs);
	return _29118_vars;
}



inline jule::Ptr<_2490591b7_VarDecl> _24a544b9b_buildRangeKindKey(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _29641_tokens) {
	if ((_29641_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_2490591b7_VarDecl> _30017_key = jule::new_ptr<_2490591b7_VarDecl>(_2490591b7_VarDecl{._field_Token=_29641_tokens[0LL], });;
	if ((_30017_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_30017_key.get()._field_Mutable=true;
		if ((_29641_tokens.len() == 1LL)) {
			_24a542b88_pushErr(&(*_self_), _30017_key.get()._field_Token,jule::Str("invalid syntax", 14));
		};
		_30017_key.get()._field_Token=_29641_tokens[1LL];
	} else if ((_29641_tokens.len() > 1LL)) {
		_24a542b88_pushErr(&(*_self_), _29641_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_30017_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24a542b88_pushErr(&(*_self_), _30017_key.get()._field_Token,jule::Str("invalid syntax", 14));
		_24a542ea7_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_30017_key.get()._field_Ident=_30017_key.get()._field_Token.get()._field_Kind;
	return _30017_key;
}



inline jule::Slice<jule::Ptr<_2490591b7_VarDecl>> _24a544ea9_buildRangeKindKeys(_24a54199a_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>>& _32142_parts) {
	jule::Slice<jule::Ptr<_2490591b7_VarDecl>> _32217_keys = nullptr;;
	{
		auto &expr = _32142_parts;
		auto it = expr.begin();
		_iter_begin_24ebb8a79:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_23abd3d83_Token>> _32321_tokens = *it;
			{
				_32217_keys = jule::alloc_for_append(_32217_keys,1);_32217_keys.__push(_24a544b9b_buildRangeKindKey(&(*_self_), _32321_tokens));;
			}
			_iter_next_24ebb8a79:;
			++it;
			goto _iter_begin_24ebb8a79;
		}
		_iter_end_24ebb8a79:;
	};
	return _32217_keys;
}



inline void _24a5452ea_setupRangeKindKeysPlain(_24a54199a_scopeParser* _self_, jule::Ptr<_24905ad45_RangeKind>& _32947_rng, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _32969_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _33017_keyTokens = _24a54488d_getRangeKindKeysTokens(&(*_self_), _32969_tokens);;
	if ((_33017_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_33017_keyTokens.len() > 2LL)) {
		_24a542b88_pushErr(&(*_self_), _32947_rng.get()._field_InToken,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_2490591b7_VarDecl>> _33717_keys = _24a544ea9_buildRangeKindKeys(&(*_self_), _33017_keyTokens);;
	_32947_rng.get()._field_KeyA=_33717_keys[0LL];
	if ((_33717_keys.len() > 1LL)) {
		_32947_rng.get()._field_KeyB=_33717_keys[1LL];
	};
}



inline void _24a54564c_setupRangeKindKeysExplicit(_24a54199a_scopeParser* _self_, jule::Ptr<_24905ad45_RangeKind>& _34450_rng, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _34472_tokens) {
	jule::I64 _34517_i = 0LL;;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _34617_rang = _24a55b355_range(_34517_i,jule::Str("(", 1),jule::Str(")", 1),_34472_tokens);;
	if ((_34517_i < _34472_tokens.len())) {
		_24a542b88_pushErr(&(*_self_), _34450_rng.get()._field_InToken,jule::Str("invalid syntax", 14));
	};
	_24a5452ea_setupRangeKindKeysPlain(&(*_self_), _34450_rng,_34617_rang);
}



inline void _24a54597c_setupRangeKindKeys(_24a54199a_scopeParser* _self_, jule::Ptr<_24905ad45_RangeKind>& _35342_rng, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _35364_tokens) {
	if ((_35364_tokens[0LL].get()._field_Id == static_cast<jule::U64>(3LLU))) {
		if ((_35364_tokens[0LL].get()._field_Kind != jule::Str("(", 1))) {
			_24a542b88_pushErr(&(*_self_), _35364_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_24a54564c_setupRangeKindKeysExplicit(&(*_self_), _35342_rng,_35364_tokens);
		return;;
	};
	_24a5452ea_setupRangeKindKeysPlain(&(*_self_), _35342_rng,_35364_tokens);
}



inline jule::Ptr<_24905ad45_RangeKind> _24a545dcd_buildRangeIterKind(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _36542_var_tokens, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _36614_exprTokens, jule::Ptr<_23abd3d83_Token>& _36641_inToken) {
	jule::Ptr<_24905ad45_RangeKind> _36717_rng = jule::new_ptr<_24905ad45_RangeKind>(_24905ad45_RangeKind{._field_InToken=_36641_inToken, });;
	if ((_36614_exprTokens.len() == 0LL)) {
		_24a542b88_pushErr(&(*_self_), _36717_rng.get()._field_InToken,jule::Str("expression missing", 18));
		return _36717_rng;
	};
	_36717_rng.get()._field_Expr=_24a55e17c_buildExpr((*_self_)._field_p, _36614_exprTokens);
	if ((_36542_var_tokens.len() > 0LL)) {
		_24a54597c_setupRangeKindKeys(&(*_self_), _36717_rng,_36542_var_tokens);
	};
	return _36717_rng;
}



inline jule::Any _24a546285_buildCommonIterKind(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _38143_tokens, jule::Ptr<_23abd3d83_Token>& _38162_err_tok) {
	jule::I64 _38217_braceN = 0LL;;
	{
		auto &expr = _38143_tokens;
		auto it = expr.begin();
		_iter_begin_24ebc513a:;
		if (it != expr.end()) {
			jule::I64 _38314_i = it - expr.begin();
			jule::Ptr<_23abd3d83_Token> _38321_tok = *it;
			{
				if ((_38321_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38321_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_24ebc6108:;
							{
								(_38217_braceN)++;
								goto _iter_next_24ebc513a;
							}
						}
						else {
							_case_begin_24ebc63e4:;
							{
								(_38217_braceN)--;
							}
						}
						_match_end_24ebc61c4:;
					};
				};
				if ((_38217_braceN != 0LL)) {
					goto _iter_next_24ebc513a;
				};
				{
					auto &_match_expr{ _38321_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_24ebc71e7:;
						{
							jule::Slice<jule::Ptr<_23abd3d83_Token>> _40025_declTokens = _38143_tokens.slice(0LL,_38314_i);;
							jule::Slice<jule::Ptr<_23abd3d83_Token>> _40125_exprTokens = _38143_tokens.slice((_38314_i + 1LL));;
							return static_cast<jule::Any>(_24a545dcd_buildRangeIterKind(&(*_self_), _40025_declTokens,_40125_exprTokens,_38321_tok));
						}
					}
					_match_end_24ebc5cea:;
				};
			}
			_iter_next_24ebc513a:;
			++it;
			_38314_i++;
			goto _iter_begin_24ebc513a;
		}
		_iter_end_24ebc513a:;
	};
	return static_cast<jule::Any>(_24a544580_buildWhileIterKind(&(*_self_), _38143_tokens));
}



inline jule::Ptr<_249059bce_Iter> _24a546593_buildCommonIter(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _40838_tokens) {
	jule::Ptr<_249059bce_Iter> _40917_it = jule::new_ptr<_249059bce_Iter>(_249059bce_Iter{._field_Token=_40838_tokens[0LL], });;
	_40838_tokens=_40838_tokens.slice(1LL);
	if ((_40838_tokens.len() == 0LL)) {
		_24a54212c_stop(&(*_self_));
		_24a542b88_pushErr(&(*_self_), _40917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_24a542ea7_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _41917_exprTokens = _24a558286_getBlockExpr(_40838_tokens);;
	if ((_41917_exprTokens.len() > 0LL)) {
		_40917_it.get()._field_Kind=_24a546285_buildCommonIterKind(&(*_self_), _41917_exprTokens,_40917_it.get()._field_Token);
	};
	jule::I64 _42317_i = _41917_exprTokens.len();;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _42417_scopeTokens = _24a55b355_range(_42317_i,jule::Str("{", 1),jule::Str("}", 1),_40838_tokens);;
	if ((_42417_scopeTokens == nullptr)) {
		_24a54212c_stop(&(*_self_));
		_24a542b88_pushErr(&(*_self_), _40917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_24a542ea7_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42317_i < _40838_tokens.len())) {
		_24a542b88_pushErr(&(*_self_), _40838_tokens[_42317_i],jule::Str("invalid syntax", 14));
	};
	_40917_it.get()._field_Scope=_24a543848_buildScope(&(*_self_), _42417_scopeTokens,_40838_tokens[(_42317_i - 1LL)]);
	return _40917_it;
}



inline jule::Ptr<_249059bce_Iter> _24a5468a1_buildIterSt(_24a54199a_scopeParser* _self_, jule::Ptr<_24a541170_stmt>& _43835_st) {
	if (_43835_st.get()._field_terminated) {
		return _24a544272_buildWhileNextIter(&(*_self_), _43835_st);
	};
	return _24a546593_buildCommonIter(&(*_self_), _43835_st.get()._field_tokens);
}



inline jule::Ptr<_24905b1ec_BreakSt> _24a546bae_buildBreakSt(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _44536_tokens) {
	jule::Ptr<_24905b1ec_BreakSt> _44617_brk = jule::new_ptr<_24905b1ec_BreakSt>(_24905b1ec_BreakSt{._field_Token=_44536_tokens[0LL], });;
	if ((_44536_tokens.len() > 1LL)) {
		if ((_44536_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_24a542b88_pushErr(&(*_self_), _44536_tokens[1LL],jule::Str("invalid syntax", 14));
			_24a542ea7_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44617_brk.get()._field_Label=_44536_tokens[1LL];
			if ((_44536_tokens.len() > 2LL)) {
				_24a542b88_pushErr(&(*_self_), _44536_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44617_brk;
}



inline jule::Ptr<_24905b5a4_ContSt> _24a546ebc_buildContSt(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _46335_tokens) {
	jule::Ptr<_24905b5a4_ContSt> _46417_cont = jule::new_ptr<_24905b5a4_ContSt>(_24905b5a4_ContSt{._field_Token=_46335_tokens[0LL], });;
	if ((_46335_tokens.len() > 1LL)) {
		if ((_46335_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_24a542b88_pushErr(&(*_self_), _46335_tokens[1LL],jule::Str("invalid syntax", 14));
			_24a542ea7_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46417_cont.get()._field_Label=_46335_tokens[1LL];
			if ((_46335_tokens.len() > 2LL)) {
				_24a542b88_pushErr(&(*_self_), _46335_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46417_cont;
}



inline jule::Ptr<_24905ba27_If> _24a5472ca_buildIf(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _48131_tokens) {
	jule::Ptr<_24905ba27_If> _48217_model = jule::new_ptr<_24905ba27_If>(_24905ba27_If{._field_Token=_48131_tokens[0LL], });;
	_48131_tokens=_48131_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _48617_exprTokens = _24a558286_getBlockExpr(_48131_tokens);;
	jule::I64 _48717_i = 0LL;;
	if ((_48617_exprTokens.len() == 0LL)) {
		_24a542b88_pushErr(&(*_self_), _48217_model.get()._field_Token,jule::Str("expression missing", 18));
	} else {
		_48717_i=static_cast<jule::I64>(_48617_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _49317_scopeTokens = _24a55b355_range(_48717_i,jule::Str("{", 1),jule::Str("}", 1),_48131_tokens);;
	if ((_49317_scopeTokens == nullptr)) {
		_24a54212c_stop(&(*_self_));
		_24a542b88_pushErr(&(*_self_), _48217_model.get()._field_Token,jule::Str("body is not exist", 17));
		_24a542ea7_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_23abd3d83_Token> _50017_end = _48131_tokens[(_48717_i - 1LL)];;
	if ((_48717_i < _48131_tokens.len())) {
		if ((_48131_tokens[_48717_i].get()._field_Id == static_cast<jule::U64>(17LLU))) {
			_48131_tokens=_48131_tokens.slice(_48717_i);
		} else {
			_24a542b88_pushErr(&(*_self_), _48131_tokens[_48717_i],jule::Str("invalid syntax", 14));
			_48131_tokens=nullptr;
		};
	};
	_48217_model.get()._field_Expr=_24a55e17c_buildExpr((*_self_)._field_p, _48617_exprTokens);
	_48217_model.get()._field_Scope=_24a543848_buildScope(&(*_self_), _49317_scopeTokens,_50017_end);
	return _48217_model;
}



inline jule::Ptr<_24905bdce_Else> _24a5475d8_buildElse(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _51433_tokens) {
	jule::Ptr<_24905bdce_Else> _51517_els = jule::new_ptr<_24905bdce_Else>(_24905bdce_Else{._field_Token=_51433_tokens[0LL], });;
	_51433_tokens=_51433_tokens.slice(1LL);
	jule::I64 _51917_i = 0LL;;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _52017_scopeTokens = _24a55b355_range(_51917_i,jule::Str("{", 1),jule::Str("}", 1),_51433_tokens);;
	if ((_52017_scopeTokens == nullptr)) {
		if ((_51917_i < _51433_tokens.len())) {
			_24a542b88_pushErr(&(*_self_), _51517_els.get()._field_Token,jule::Str("else's cannot have any expression", 33));
		} else {
			_24a54212c_stop(&(*_self_));
			_24a542b88_pushErr(&(*_self_), _51517_els.get()._field_Token,jule::Str("body is not exist", 17));
			_24a542ea7_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51917_i < _51433_tokens.len())) {
		_24a542b88_pushErr(&(*_self_), _51433_tokens[_51917_i],jule::Str("invalid syntax", 14));
	};
	_51517_els.get()._field_Scope=_24a543848_buildScope(&(*_self_), _52017_scopeTokens,_51433_tokens[(_51917_i - 1LL)]);
	return _51517_els;
}



inline jule::Ptr<_24905c352_Conditional> _24a5478e6_buildIfElseChain(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _53839_tokens) {
	jule::Ptr<_24905c352_Conditional> _53917_chain = jule::new_ptr<_24905c352_Conditional>(_24905c352_Conditional{._field_Head=_24a5472ca_buildIf(&(*_self_), _53839_tokens), });;
	if ((_53917_chain.get()._field_Head == nullptr)) {
		return nullptr;
	};
	while ((_53839_tokens.len() != 0LL)) {
		{
			if ((_53839_tokens[0LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_24ebe4a0b;
			};
			if (((_53839_tokens.len() > 1LL) && (_53839_tokens[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
				_53839_tokens=_53839_tokens.slice(1LL);
				jule::Ptr<_24905ba27_If> _55125_elif = _24a5472ca_buildIf(&(*_self_), _53839_tokens);;
				_53917_chain.get()._field_Tail = jule::alloc_for_append(_53917_chain.get()._field_Tail,1);_53917_chain.get()._field_Tail.__push(_55125_elif);;
				goto _iter_next_24ebe4a0b;
			};
			_53917_chain.get()._field_Default=_24a5475d8_buildElse(&(*_self_), _53839_tokens);
			goto _iter_end_24ebe4a0b;
		}
	_iter_next_24ebe4a0b:;
	}
	_iter_end_24ebe4a0b:;;
	return _53917_chain;
}



inline jule::Ptr<_24904c4da_CoExpr> _24a547c04_buildCoCallSt(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _56136_tokens) {
	jule::Ptr<_24904c4da_CoExpr> _56217_c = jule::new_ptr<_24904c4da_CoExpr>(_24904c4da_CoExpr{._field_Token=_56136_tokens[0LL], });;
	_56136_tokens=_56136_tokens.slice(1LL);
	_56217_c.get()._field_Expr=_24a55e17c_buildExpr((*_self_)._field_p, _56136_tokens);
	return _56217_c;
}



inline jule::Ptr<_249054217_GotoSt> _24a548012_buildGotoSt(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _57035_tokens) {
	jule::Ptr<_249054217_GotoSt> _57117_gt = jule::new_ptr<_249054217_GotoSt>(_249054217_GotoSt{._field_Token=_57035_tokens[0LL], });;
	if ((_57035_tokens.len() == 1LL)) {
		_24a542b88_pushErr(&(*_self_), _57117_gt.get()._field_Token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_57035_tokens.len() > 2LL)) {
		_24a542b88_pushErr(&(*_self_), _57035_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_23abd3d83_Token> _58017_identToken = _57035_tokens[1LL];;
	if ((_58017_identToken.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24a542b88_pushErr(&(*_self_), _58017_identToken,jule::Str("invalid syntax", 14));
		_24a542ea7_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57117_gt;
	};
	_57117_gt.get()._field_Label=_58017_identToken;
	return _57117_gt;
}



inline jule::Ptr<_249054503_FallSt> _24a548320_buildFallSt(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _59035_tokens) {
	jule::Ptr<_249054503_FallSt> _59117_fll = jule::new_ptr<_249054503_FallSt>(_249054503_FallSt{._field_Token=_59035_tokens[0LL]});;
	if ((_59035_tokens.len() > 1LL)) {
		_24a542b88_pushErr(&(*_self_), _59035_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59117_fll;
}



inline jule::Ptr<_24905ca28_TypeAliasDecl> _24a54862d_buildTypeAliasSt(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _60040_tokens) {
	jule::Ptr<_24905ca28_TypeAliasDecl> _60117_tad = _24a560777_buildTypeAliasDecl((*_self_)._field_p, _60040_tokens);;
	_60117_tad.get()._field_Scope=(*_self_)._field_s;
	return _60117_tad;
}



inline void _24a548a90_pushCaseExpr(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _60635_tokens, jule::Ptr<_23abd3d83_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_24904a8e5_Expr>>& _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I64 _61321_i = 0LL;;
		jule::Ptr<_2490463c4_TypeDecl> _61422_t;;
		jule::Bool _61425_ok;;
		std::tie(_61422_t,_61425_ok) = _24a560469_buildType((*_self_)._field_p, _60635_tokens,(&(_61321_i)),true);
		if (_61425_ok) {
			_60731_exprs = jule::alloc_for_append(_60731_exprs,1);_60731_exprs.__push(jule::new_ptr<_24904a8e5_Expr>(_24904a8e5_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_61422_t)}));;
			if ((_61321_i < _60635_tokens.len())) {
				_24a542b88_pushErr(&(*_self_), _60635_tokens[_61321_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_60731_exprs = jule::alloc_for_append(_60731_exprs,1);_60731_exprs.__push(_24a55e17c_buildExpr((*_self_)._field_p, _60635_tokens));;
}



inline jule::Slice<jule::Ptr<_24904a8e5_Expr>> _24a548ee1_buildCaseExprs(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _63038_tokens, jule::Ptr<_23abd3d83_Token>& _63061_colon, jule::Bool _63076_typeMatch) {
	jule::Slice<jule::Ptr<_24904a8e5_Expr>> _63117_exprs = jule::Slice<jule::Ptr<_24904a8e5_Expr>>::alloc(0LL,1LL);;
	jule::I64 _63317_braceN = 0LL;;
	jule::I64 _63417_j = 0LL;;
	{
		auto &expr = _63038_tokens;
		auto it = expr.begin();
		_iter_begin_24ec05b2c:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_23abd3d83_Token> _63521_tok = *it;
			{
				if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63521_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_24ec06c3d:;
							{
								(_63317_braceN)++;
							}
						}
						else {
							_case_begin_24ec07029:;
							{
								(_63317_braceN)--;
							}
						}
						_match_end_24ec06d09:;
					};
					goto _iter_next_24ec05b2c;
				} else if ((_63317_braceN != 0LL)) {
					goto _iter_next_24ec05b2c;
				};
				{
					
					if (((_63521_tok.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_63521_tok.get()._field_Kind == jule::Str("|", 1)))) {
						_case_begin_24ec07524:;
						{
							jule::Slice<jule::Ptr<_23abd3d83_Token>> _65121_exprTokens = _63038_tokens.slice(_63417_j,_63514_i);;
							if ((_65121_exprTokens.len() == 0LL)) {
								_24a542b88_pushErr(&(*_self_), _63521_tok,jule::Str("expression missing", 18));
							} else {
								_24a548a90_pushCaseExpr(&(*_self_), _63038_tokens.slice(_63417_j,_63514_i),_63521_tok,_63076_typeMatch,_63117_exprs);
							};
							_63417_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_case_begin_24ec07dc6:;
						{
							_63061_colon=_63521_tok;
							_24a548a90_pushCaseExpr(&(*_self_), _63038_tokens.slice(_63417_j,_63514_i),_63521_tok,_63076_typeMatch,_63117_exprs);
							_63038_tokens=_63038_tokens.slice((_63514_i + 1LL));
							return _63117_exprs;
						}
					}
					_match_end_24ec06b50:;
				};
			}
			_iter_next_24ec05b2c:;
			++it;
			_63514_i++;
			goto _iter_begin_24ec05b2c;
		}
		_iter_end_24ec05b2c:;
	};
	_24a542b88_pushErr(&(*_self_), _63038_tokens[0LL],jule::Str("invalid syntax", 14));
	_63038_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_2490566e2_ScopeTree> _24a5492ee_buildCaseScope(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _67038_tokens) {
	jule::I64 _67117_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67321_i = 0LL;;
			jule::Slice<jule::Ptr<_23abd3d83_Token>> _67422_next;;
			std::tie(_67422_next,std::ignore) = _24a540d73_skipSt(_67321_i,_67038_tokens.slice(_67117_n));
			if ((_67422_next.len() == 0LL)) {
				goto _iter_end_24ec0bd0e;
			};
			jule::Ptr<_23abd3d83_Token> _67817_tok = _67422_next[0LL];;
			if (((_67817_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_67817_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_67117_n+=_67321_i;
				goto _iter_next_24ec0bd0e;
			};
			jule::Slice<jule::Ptr<_23abd3d83_Token>> _68321_scopeTokens = _67038_tokens.slice(0LL,_67117_n);;
			jule::Ptr<_2490566e2_ScopeTree> _68421_scope = _24a543848_buildScope(&(*_self_), _68321_scopeTokens,_67038_tokens[_67117_n]);;
			_67038_tokens=_67038_tokens.slice(_67117_n);
			return _68421_scope;
		}
	_iter_next_24ec0bd0e:;
	}
	_iter_end_24ec0bd0e:;;
	jule::Ptr<_23abd3d83_Token> _68817_end = jule::Ptr<_23abd3d83_Token>();;
	if ((_67038_tokens.len() > 0LL)) {
		_68817_end=_67038_tokens[(_67038_tokens.len() - 1LL)];
	};
	jule::Ptr<_2490566e2_ScopeTree> _69217_scope = _24a543848_buildScope(&(*_self_), _67038_tokens,_68817_end);;
	_67038_tokens=nullptr;
	return _69217_scope;
}



inline std::tuple<jule::Ptr<_24905ce9b_Case>,jule::Bool> _24a5496a6_buildCase(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _69733_tokens, jule::Bool _69751_typeMatch) {
	jule::Ptr<_24905ce9b_Case> _69817_c = jule::new_ptr<_24905ce9b_Case>(_24905ce9b_Case{._field_Token=_69733_tokens[0LL], });;
	_69733_tokens=_69733_tokens.slice(1LL);
	jule::Ptr<_23abd3d83_Token> _70217_colon = nullptr;;
	_69817_c.get()._field_Exprs=_24a548ee1_buildCaseExprs(&(*_self_), _69733_tokens,_70217_colon,_69751_typeMatch);
	_69817_c.get()._field_Scope=_24a5492ee_buildCaseScope(&(*_self_), _69733_tokens);
	if ((_69817_c.get()._field_Scope.get()._field_End == nullptr)) {
		_69817_c.get()._field_Scope.get()._field_End=_70217_colon;
	};
	jule::Bool _70813_isDefault = (_69817_c.get()._field_Exprs.len() == 0LL);;
	return std::make_tuple(_69817_c,_70813_isDefault);
}



inline std::tuple<jule::Slice<jule::Ptr<_24905ce9b_Case>>,jule::Ptr<_24905bdce_Else>> _24a549a5d_buildCases(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _71233_tokens, jule::Bool _71251_typeMatch) {
	jule::Slice<jule::Ptr<_24905ce9b_Case>> _71317_cases = nullptr;;
	jule::Ptr<_24905bdce_Else> _71417_def = nullptr;;
	jule::Bool _71517_defNotLast = false;;
	while ((_71233_tokens.len() > 0LL)) {
		{
			jule::Ptr<_23abd3d83_Token> _71721_tok = _71233_tokens[0LL];;
			if (((_71721_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_71721_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_24a542b88_pushErr(&(*_self_), _71721_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_24ec1617b;
			};
			jule::Ptr<_24905ce9b_Case> _72222_c;;
			jule::Bool _72225_isDefault;;
			std::tie(_72222_c,_72225_isDefault) = _24a5496a6_buildCase(&(*_self_), _71233_tokens,_71251_typeMatch);
			if (_72225_isDefault) {
				_72222_c.get()._field_Token=_71721_tok;
				if ((_71417_def == nullptr)) {
					_71417_def=jule::new_ptr<_24905bdce_Else>(_24905bdce_Else{._field_Token=_72222_c.get()._field_Token, ._field_Scope=_72222_c.get()._field_Scope});
				} else {
					_24a542b88_pushErr(&(*_self_), _71721_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_71517_defNotLast=(_71517_defNotLast || (_71417_def != nullptr));
				_71317_cases = jule::alloc_for_append(_71317_cases,1);_71317_cases.__push(_72222_c);;
			};
		}
	_iter_next_24ec1617b:;
	}
	_iter_end_24ec1617b:;;
	if (_71517_defNotLast) {
		_24a542b88_pushErr(&(*_self_), _71417_def.get()._field_Token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_71317_cases,_71417_def);
}



inline jule::Ptr<_24905d672_MatchCase> _24a549d6b_buildMatchCase(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _74637_tokens) {
	jule::Ptr<_24905d672_MatchCase> _74717_m = jule::new_ptr<_24905d672_MatchCase>(_24905d672_MatchCase{._field_Token=_74637_tokens[0LL], });;
	_74637_tokens=_74637_tokens.slice(1LL);
	if (((_74637_tokens.len() > 0LL) && (_74637_tokens[0LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		_74717_m.get()._field_TypeMatch=true;
		_74637_tokens=_74637_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _75717_exprTokens = _24a558286_getBlockExpr(_74637_tokens);;
	if ((_75717_exprTokens.len() > 0LL)) {
		_74717_m.get()._field_Expr=_24a55e17c_buildExpr((*_self_)._field_p, _75717_exprTokens);
	} else if (_74717_m.get()._field_TypeMatch) {
		_24a542b88_pushErr(&(*_self_), _74717_m.get()._field_Token,jule::Str("expression missing", 18));
	};
	jule::I64 _76417_i = _75717_exprTokens.len();;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _76517_blockToks = _24a55b355_range(_76417_i,jule::Str("{", 1),jule::Str("}", 1),_74637_tokens);;
	if ((_76517_blockToks == nullptr)) {
		_24a54212c_stop(&(*_self_));
		_24a542b88_pushErr(&(*_self_), _74717_m.get()._field_Token,jule::Str("body is not exist", 17));
		_24a542ea7_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_76417_i < _74637_tokens.len())) {
		_24a542b88_pushErr(&(*_self_), _74637_tokens[_76417_i],jule::Str("invalid syntax", 14));
	};
	_74717_m.get()._field_End=_74637_tokens[(_76417_i - 1LL)];
	std::tie(_74717_m.get()._field_Cases,_74717_m.get()._field_Default) = _24a549a5d_buildCases(&(*_self_), _76517_blockToks,_74717_m.get()._field_TypeMatch);
	return _74717_m;
}



inline jule::Ptr<_2490566e2_ScopeTree> _24a54a179_buildScopeSt(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _77935_tokens) {
	jule::Bool _78017_isUnsafe = false;;
	jule::Bool _78117_isDeferred = false;;
	jule::Ptr<_23abd3d83_Token> _78217_token = _77935_tokens[0LL];;
	if ((_78217_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_78017_isUnsafe=true;
		_77935_tokens=_77935_tokens.slice(1LL);
		if ((_77935_tokens.len() == 0LL)) {
			_24a542b88_pushErr(&(*_self_), _78217_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_78217_token=_77935_tokens[0LL];
		if ((_78217_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
			_78117_isDeferred=true;
			_77935_tokens=_77935_tokens.slice(1LL);
			if ((_77935_tokens.len() == 0LL)) {
				_24a542b88_pushErr(&(*_self_), _78217_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_78217_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_78117_isDeferred=true;
		_77935_tokens=_77935_tokens.slice(1LL);
		if ((_77935_tokens.len() == 0LL)) {
			_24a542b88_pushErr(&(*_self_), _78217_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I64 _80817_i = 0LL;;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _80917_scopeTokens = _24a55b355_range(_80817_i,jule::Str("{", 1),jule::Str("}", 1),_77935_tokens);;
	if ((_80917_scopeTokens == nullptr)) {
		_24a542b88_pushErr(&(*_self_), _78217_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_80817_i < _77935_tokens.len())) {
		_24a542b88_pushErr(&(*_self_), _77935_tokens[_80817_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_2490566e2_ScopeTree> _81617_scope = _24a543848_buildScope(&(*_self_), _80917_scopeTokens,_77935_tokens[(_80817_i - 1LL)]);;
	_81617_scope.get()._field_Unsafety=_78017_isUnsafe;
	_81617_scope.get()._field_Deferred=_78117_isDeferred;
	return _81617_scope;
}



inline jule::Ptr<_249053d60_LabelSt> _24a54a487_buildLabelSt(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _82236_tokens) {
	jule::Ptr<_249053d60_LabelSt> _82317_lbl = jule::new_ptr<_249053d60_LabelSt>(_249053d60_LabelSt{._field_Token=_82236_tokens[0LL], ._field_Ident=_82236_tokens[0LL].get()._field_Kind});;
	if ((_82236_tokens.len() > 2LL)) {
		_82236_tokens=_82236_tokens.slice(2LL);
		_24a54322c_insertAsNext(&(*_self_), _82236_tokens);
	};
	return _82317_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _24a54a795_buildIdSt(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _83733_tokens) {
	jule::Bool _83763_ok = jule::Bool();
	if ((_83733_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_83763_ok);
	};
	jule::Ptr<_23abd3d83_Token> _84217_token = _83733_tokens[1LL];;
	{
		auto &_match_expr{ _84217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_2512dd741:;
			{
				_83763_ok = true;
				return std::make_tuple(static_cast<jule::Any>(_24a54a487_buildLabelSt(&(*_self_), _83733_tokens)),_83763_ok);
			}
		}
		_match_end_2512de423:;
	};
	return std::make_tuple(jule::Any(),_83763_ok);
}



inline jule::Ptr<_24a5597b5_assignInfo> _24a54aaa3_buildAssignInfo(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _85139_tokens) {
	jule::Ptr<_24a5597b5_assignInfo> _85217_info = jule::new_ptr<_24a5597b5_assignInfo>(_24a5597b5_assignInfo{._field_ok=true});;
	jule::I64 _85517_braceN = 0LL;;
	{
		auto &expr = _85139_tokens;
		auto it = expr.begin();
		_iter_begin_2512e1458:;
		if (it != expr.end()) {
			jule::I64 _85614_i = it - expr.begin();
			jule::Ptr<_23abd3d83_Token> _85621_token = *it;
			{
				if ((_85621_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _85621_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_2512e2459:;
							{
								(_85517_braceN)++;
							}
						}
						else {
							_case_begin_2512e2745:;
							{
								(_85517_braceN)--;
							}
						}
						_match_end_2512e2525:;
					};
				};
				{
					
					if ((_85517_braceN > 0LL)) {
						_case_begin_2512e214b:;
						{
							goto _iter_next_2512e1458;
						}
					}
					else if ((_85621_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_2512e21b2:;
						{
							goto _iter_next_2512e1458;
						}
					}
					else if ((!(_23abd896a_IsAssignOp(_85621_token.get()._field_Kind)))) {
						_case_begin_2512e2228:;
						{
							goto _iter_next_2512e1458;
						}
					}
					_match_end_2512e2c40:;
				};
				_85217_info.get()._field_l=_85139_tokens.slice(0LL,_85614_i);
				if ((_85217_info.get()._field_l.len() == 0LL)) {
					_85217_info.get()._field_ok=false;
				};
				_85217_info.get()._field_setter=_85621_token;
				if (((_85614_i + 1LL) >= _85139_tokens.len())) {
					_85217_info.get()._field_r=nullptr;
					_85217_info.get()._field_ok=_23abd86c3_IsPostfixOp(_85217_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_2512e1458;
				};
				_85217_info.get()._field_r=_85139_tokens.slice((_85614_i + 1LL));
				if (_23abd86c3_IsPostfixOp(_85217_info.get()._field_setter.get()._field_Kind)) {
					if ((_85217_info.get()._field_r.len() > 0LL)) {
						_24a542b88_pushErr(&(*_self_), _85217_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_85217_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_2512e1458;
			}
			_iter_next_2512e1458:;
			++it;
			_85614_i++;
			goto _iter_begin_2512e1458;
		}
		_iter_end_2512e1458:;
	};
	return _85217_info;
}



inline jule::Ptr<_249054b0d_AssignLeft> _24a54adb1_buildAssignL(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _89936_tokens) {
	jule::Ptr<_249054b0d_AssignLeft> _90017_l = jule::new_ptr<_249054b0d_AssignLeft>(_249054b0d_AssignLeft{._field_Token=_89936_tokens[0LL], });;
	if ((_89936_tokens[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		_90017_l.get()._field_Ident=_90017_l.get()._field_Token.get()._field_Kind;
	};
	_90017_l.get()._field_Expr=_24a55e17c_buildExpr((*_self_)._field_p, _89936_tokens);
	return _90017_l;
}



inline jule::Slice<jule::Ptr<_249054b0d_AssignLeft>> _24a54b1be_buildAssignLs(_24a54199a_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>>& _91037_parts) {
	jule::Slice<jule::Ptr<_249054b0d_AssignLeft>> _91117_lefts = nullptr;;
	{
		auto &expr = _91037_parts;
		auto it = expr.begin();
		_iter_begin_2512ea4ea:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_23abd3d83_Token>> _91221_part = *it;
			{
				jule::Ptr<_249054b0d_AssignLeft> _91321_l = _24a54adb1_buildAssignL(&(*_self_), _91221_part);;
				_91117_lefts = jule::alloc_for_append(_91117_lefts,1);_91117_lefts.__push(_91321_l);;
			}
			_iter_next_2512ea4ea:;
			++it;
			goto _iter_begin_2512ea4ea;
		}
		_iter_end_2512ea4ea:;
	};
	return _91117_lefts;
}



inline std::tuple<jule::Ptr<_24905514c_AssignSt>,jule::Bool> _24a54b4cc_buildPlainAssign(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _92040_tokens) {
	jule::Ptr<_24a5597b5_assignInfo> _92117_info = _24a54aaa3_buildAssignInfo(&(*_self_), _92040_tokens);;
	if ((!(_92117_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_24905514c_AssignSt> _92617_assign = jule::new_ptr<_24905514c_AssignSt>(_24905514c_AssignSt{._field_Setter=_92117_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _93018_parts;;
	jule::Slice<_23a8a5ca8_Log> _93025_errs;;
	std::tie(_93018_parts,_93025_errs) = _24a55bdc2_parts(_92117_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_93025_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_93025_errs);
		return std::make_tuple(nullptr,false);
	};
	_92617_assign.get()._field_Left=_24a54b1be_buildAssignLs(&(*_self_), _93018_parts);
	if ((_92117_info.get()._field_r != nullptr)) {
		_92617_assign.get()._field_Right=_24a55e17c_buildExpr((*_self_)._field_p, _92117_info.get()._field_r);
	};
	return std::make_tuple(_92617_assign,true);
}



inline std::tuple<jule::Ptr<_24905514c_AssignSt>,jule::Bool> _24a54b7da_buildDeclAssign(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _94438_tokens) {
	if ((_94438_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_94438_tokens=_94438_tokens.slice(1LL);
	jule::Ptr<_23abd3d83_Token> _95017_token = _94438_tokens[0LL];;
	if (((_95017_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_95017_token.get()._field_Kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_24905514c_AssignSt> _95517_assign = jule::new_ptr<_24905514c_AssignSt>(_24905514c_AssignSt{._field_Declarative=true, });;
	jule::I64 _95917_i = 0LL;;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _96017_rang = _24a55b355_range(_95917_i,jule::Str("(", 1),jule::Str(")", 1),_94438_tokens);;
	if ((_96017_rang == nullptr)) {
		_24a542b88_pushErr(&(*_self_), _95017_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_95917_i + 1LL) < _94438_tokens.len())) {
		_95517_assign.get()._field_Setter=_94438_tokens[_95917_i];
		(_95917_i)++;
		jule::Slice<jule::Ptr<_23abd3d83_Token>> _96721_exprTokens = _94438_tokens.slice(_95917_i);;
		_95517_assign.get()._field_Right=_24a55e17c_buildExpr((*_self_)._field_p, _96721_exprTokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _97218_parts;;
	jule::Slice<_23a8a5ca8_Log> _97225_errs;;
	std::tie(_97218_parts,_97225_errs) = _24a55bdc2_parts(_96017_rang,static_cast<jule::U64>(8LLU),true);
	if ((_97225_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_97225_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _97218_parts;
		auto it = expr.begin();
		_iter_begin_251307e20:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_23abd3d83_Token>> _97821_part = *it;
			{
				jule::Bool _97921_isMut = false;;
				jule::Bool _98021_isRef = false;;
				_95017_token=_97821_part[0LL];
				if ((_95017_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_97921_isMut=true;
					_97821_part=_97821_part.slice(1LL);
					if ((_97821_part.len() == 0LL)) {
						_24a542b88_pushErr(&(*_self_), _95017_token,jule::Str("invalid syntax", 14));
						goto _iter_next_251307e20;
					};
				};
				if (((_97821_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_97821_part[0LL].get()._field_Kind == jule::Str("&", 1)))) {
					_98021_isRef=true;
					_97821_part=_97821_part.slice(1LL);
					if ((_97821_part.len() == 0LL)) {
						_24a542b88_pushErr(&(*_self_), _95017_token,jule::Str("invalid syntax", 14));
						goto _iter_next_251307e20;
					};
				};
				if ((((_97821_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97821_part[0LL].get()._field_Id != static_cast<jule::U64>(3LLU))) && (_97821_part[0LL].get()._field_Kind != jule::Str("(", 1)))) {
					_24a542b88_pushErr(&(*_self_), _95017_token,jule::Str("invalid syntax", 14));
					goto _iter_next_251307e20;
				};
				jule::Ptr<_249054b0d_AssignLeft> _100821_l = _24a54adb1_buildAssignL(&(*_self_), _97821_part);;
				_100821_l.get()._field_Mutable=_97921_isMut;
				_100821_l.get()._field_Reference=_98021_isRef;
				_95517_assign.get()._field_Left = jule::alloc_for_append(_95517_assign.get()._field_Left,1);_95517_assign.get()._field_Left.__push(_100821_l);;
			}
			_iter_next_251307e20:;
			++it;
			goto _iter_begin_251307e20;
		}
		_iter_end_251307e20:;
	};
	return std::make_tuple(_95517_assign,true);
}



inline std::tuple<jule::Ptr<_24905514c_AssignSt>,jule::Bool> _24a54bae8_buildAssignSt(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _101737_tokens) {
	jule::Ptr<_24905514c_AssignSt> _101757_st = jule::Ptr<_24905514c_AssignSt>();
	jule::Bool _101772_ok = jule::Bool();
	if ((!(_24a559b5b_checkAssignTokens(_101737_tokens)))) {
		_101757_st = nullptr;
		_101772_ok = false;
		return std::make_tuple(_101757_st,_101772_ok);
	};
	{
		auto &_match_expr{ _101737_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_2513116a9:;
			{
				std::tie(_101757_st,_101772_ok) = _24a54b7da_buildDeclAssign(&(*_self_), _101737_tokens);
			}
		}
		else {
			_case_begin_25131127a:;
			{
				std::tie(_101757_st,_101772_ok) = _24a54b4cc_buildPlainAssign(&(*_self_), _101737_tokens);
			}
		}
		_match_end_251311225:;
	};
	return std::make_tuple(_101757_st,_101772_ok);
}



inline jule::Ptr<_24904b286_UseExpr> _24a54be06_buildUseExpr(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _103236_tokens) {
	if ((_103236_tokens.len() == 1LL)) {
		_24a542b88_pushErr(&(*_self_), _103236_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_24904b286_UseExpr> _103717_ue = jule::new_ptr<_24904b286_UseExpr>(_24904b286_UseExpr{._field_Token=_103236_tokens[0LL], });;
	_103236_tokens=_103236_tokens.slice(1LL);
	_103717_ue.get()._field_Expr=_24a55e17c_buildExpr((*_self_)._field_p, _103236_tokens);
	return _103717_ue;
}



inline jule::Any _24a54c214_buildSt(_24a54199a_scopeParser* _self_, jule::Ptr<_24a541170_stmt>& _104531_st) {
	jule::Ptr<_23abd3d83_Token> _104617_token = _104531_st.get()._field_tokens[0LL];;
	if ((_104617_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		jule::Any _104822_s;;
		jule::Bool _104825_ok;;
		std::tie(_104822_s,_104825_ok) = _24a54a795_buildIdSt(&(*_self_), _104531_st.get()._field_tokens);
		if (_104825_ok) {
			return _104822_s;
		};
	};
	jule::Ptr<_24905514c_AssignSt> _105418_s;;
	jule::Bool _105421_ok;;
	std::tie(_105418_s,_105421_ok) = _24a54bae8_buildAssignSt(&(*_self_), _104531_st.get()._field_tokens);
	if (_105421_ok) {
		return static_cast<jule::Any>(_105418_s);
	};
	{
		auto &_match_expr{ _104617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_251316d1e:;
			{
				return static_cast<jule::Any>(_24a54be06_buildUseExpr(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_251316a77:;
			{
				return static_cast<jule::Any>(_24a543b56_buildVarSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_25131711b:;
			{
				return static_cast<jule::Any>(_24a543e64_buildRetSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_251317182:;
			{
				return static_cast<jule::Any>(_24a5468a1_buildIterSt(&(*_self_), _104531_st));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_2513171e8:;
			{
				return static_cast<jule::Any>(_24a546bae_buildBreakSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_25131725e:;
			{
				return static_cast<jule::Any>(_24a546ebc_buildContSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_2513172c5:;
			{
				return static_cast<jule::Any>(_24a5478e6_buildIfElseChain(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_25131733b:;
			{
				return static_cast<jule::Any>(_24a547c04_buildCoCallSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_2513173a2:;
			{
				return static_cast<jule::Any>(_24a548012_buildGotoSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_251317418:;
			{
				return static_cast<jule::Any>(_24a548320_buildFallSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_25131747e:;
			{
				return static_cast<jule::Any>(_24a54862d_buildTypeAliasSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_251317506:;
			{
				return static_cast<jule::Any>(_24a549d6b_buildMatchCase(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_25131757d:;
			{
				return static_cast<jule::Any>(_24a54a179_buildScopeSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_251317605:;
			{
				if ((_104617_token.get()._field_Kind == jule::Str("{", 1))) {
					return static_cast<jule::Any>(_24a54a179_buildScopeSt(&(*_self_), _104531_st.get()._field_tokens));
				};
			}
		}
		_match_end_251316b98:;
	};
	jule::Ptr<_24904a8e5_Expr> _109517_expr = _24a55e17c_buildExpr((*_self_)._field_p, _104531_st.get()._field_tokens);;
	if ((_109517_expr != nullptr)) {
		return static_cast<jule::Any>(_109517_expr);
	};
	_24a542b88_pushErr(&(*_self_), _104617_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _24a54c533_build(_24a54199a_scopeParser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _110329_tokens, jule::Ptr<_2490566e2_ScopeTree>& _110352_s) {
	if ((_110352_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_24a541516_splitStmts(_110329_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_110352_s;
	while (((!(_24a542869_isLastSt(&(*_self_)))) && (!(_24a542605_finished(&(*_self_)))))) {
		{
			jule::Ptr<_24a541170_stmt> _111121_st = _24a543491_next(&(*_self_));;
			jule::Any _111221_data = _24a54c214_buildSt(&(*_self_), _111121_st);;
			if ((_111221_data != nullptr)) {
				(*_self_)._field_s.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_Stmts,1);(*_self_)._field_s.get()._field_Stmts.__push(_2490560d7_Stmt{._field_Token=_111121_st.get()._field_tokens[0LL], ._field_Data=_111221_data});;
			};
			if (_24a542391_stopped(&(*_self_))) {
				goto _iter_end_251321543;
			};
		}
	_iter_next_251321543:;
	}
	_iter_end_251321543:;;
}







std::ostream &operator<<(std::ostream &_Stream, _24a54199a_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _24a54d754_pushErr(_24a54ce5c_exprBuilder* _self_, jule::Ptr<_23abd3d83_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_24a55da50_pushErr((*_self_)._field_p.ptr(), _4426_token,_4441_fmt,jule::Any(_4454_args));
}



inline void _24a54da73_pushSuggestion(_24a54ce5c_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_24a55dd6e_pushSuggestion((*_self_)._field_p.ptr(), _4933_fmt,jule::Any(_4946_args));
}



inline jule::Ptr<_24904b572_TupleExpr> _24a54dd81_buildTuple(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>>& _5334_parts) {
	jule::Ptr<_24904b572_TupleExpr> _5417_tuple = jule::new_ptr<_24904b572_TupleExpr>(_24904b572_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_24904a8e5_Expr>>::alloc(0LL,_5334_parts.len())});;
	{
		auto &expr = _5334_parts;
		auto it = expr.begin();
		_iter_begin_251343b4d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_23abd3d83_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_24a5578a1_buildFromTokens(&(*_self_), _5721_part));;
			}
			_iter_next_251343b4d:;
			++it;
			goto _iter_begin_251343b4d;
		}
		_iter_end_251343b4d:;
	};
	return _5417_tuple;
}



inline jule::Ptr<_24904b929_LitExpr> _24a54e18e_buildLit(_24a54ce5c_exprBuilder* _self_, jule::Ptr<_23abd3d83_Token> _6327_token) {
	return jule::new_ptr<_24904b929_LitExpr>(_24904b929_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});
}



inline jule::Ptr<_2490463c4_TypeDecl> _24a54e49c_buildPrimitiveType(_24a54ce5c_exprBuilder* _self_, jule::Ptr<_23abd3d83_Token>& _7038_token) {
	return _24a56d873_buildPrimType(_7038_token);
}



inline jule::Any _24a54e7aa_buildSingle(_24a54ce5c_exprBuilder* _self_, jule::Ptr<_23abd3d83_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_2513459b8:;
			{
				return static_cast<jule::Any>(_24a54e18e_buildLit(&(*_self_), _7434_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_251345a2e:;
			{
				if ((_7434_token.get()._field_Kind == jule::Str("...", 3))) {
					return static_cast<jule::Any>(jule::new_ptr<_24904d51e_VariadicExpr>(_24904d51e_VariadicExpr{._field_Token=_7434_token, }));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(27LLU) || _match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_251345a95:;
			{
				return static_cast<jule::Any>(_24a558b5a_buildIdentExpr(_7434_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_251345b0b:;
			{
				return static_cast<jule::Any>(_24a54e49c_buildPrimitiveType(&(*_self_), _7434_token));
			}
		}
		_match_end_25134491d:;
	};
	_24a54d754_pushErr(&(*_self_), _7434_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_24904c95d_IdentExpr> _24a54eab8_buildCppLinkedIdent(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _9543_tokens) {
	if ((_9543_tokens[0LL].get()._field_Id != static_cast<jule::U64>(30LLU))) {
		return nullptr;
	} else if ((_9543_tokens[1LL].get()._field_Id != static_cast<jule::U64>(20LLU))) {
		_24a54d754_pushErr(&(*_self_), _9543_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24a54da73_pushSuggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_23abd3d83_Token> _10317_token = _9543_tokens[2LL];;
	if ((_10317_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24a54d754_pushErr(&(*_self_), _9543_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24a54da73_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_24904c95d_IdentExpr> _10917_expr = _24a558b5a_buildIdentExpr(_10317_token);;
	_10917_expr.get()._field_CppLinked=true;
	return _10917_expr;
}



inline jule::Ptr<_24904d167_UnaryExpr> _24a54edc6_buildUnary(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _11433_tokens) {
	jule::Ptr<_23abd3d83_Token> _11517_op = _11433_tokens[0LL];;
	if ((_11433_tokens.len() == 1LL)) {
		_24a54d754_pushErr(&(*_self_), _11517_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_23abd458c_IsUnaryOp(_11517_op.get()._field_Kind)))) {
		_24a54d754_pushErr(&(*_self_), _11517_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_11517_op.get()._field_Kind)}));
		return nullptr;
	};
	_11433_tokens=_11433_tokens.slice(1LL);
	return jule::new_ptr<_24904d167_UnaryExpr>(_24904d167_UnaryExpr{._field_Op=_11517_op, ._field_Expr=_24a5578a1_buildFromTokens(&(*_self_), _11433_tokens)});
}



inline jule::Ptr<_24904e201_SubIdentExpr> _24a5501d4_buildObjSubIdent(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _13539_tokens) {
	jule::I64 _13617_i = (_13539_tokens.len() - 1LL);;
	jule::Ptr<_23abd3d83_Token> _13717_identToken = _13539_tokens[_13617_i];;
	(_13617_i)--;
	_13539_tokens=_13539_tokens.slice(0LL,_13617_i);
	if ((_13539_tokens.len() == 0LL)) {
		_24a54d754_pushErr(&(*_self_), _13717_identToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_24904e201_SubIdentExpr>(_24904e201_SubIdentExpr{._field_Expr=_24a5578a1_buildFromTokens(&(*_self_), _13539_tokens), ._field_Ident=_13717_identToken});
}



inline jule::Ptr<_24904dc7d_NsSelectionExpr> _24a5504e2_buildNsSubIdent(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _15039_tokens) {
	jule::Ptr<_24904dc7d_NsSelectionExpr> _15117_ns = jule::new_ptr<_24904dc7d_NsSelectionExpr>();;
	{
		auto &expr = _15039_tokens;
		auto it = expr.begin();
		_iter_begin_251352d5a:;
		if (it != expr.end()) {
			jule::I64 _15214_i = it - expr.begin();
			jule::Ptr<_23abd3d83_Token> _15221_token = *it;
			{
				if (((_15214_i & 1LL) == 0LL)) {
					if ((_15221_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
						_24a54d754_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_24a54da73_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_15117_ns.get()._field_Ns = jule::alloc_for_append(_15117_ns.get()._field_Ns,1);_15117_ns.get()._field_Ns.__push(_15221_token);;
				} else if ((_15221_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_24a54d754_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_24a54da73_pushSuggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_251352d5a:;
			++it;
			_15214_i++;
			goto _iter_begin_251352d5a;
		}
		_iter_end_251352d5a:;
	};
	_15117_ns.get()._field_Ident=_15117_ns.get()._field_Ns[(_15117_ns.get()._field_Ns.len() - 1LL)];
	_15117_ns.get()._field_Ns=_15117_ns.get()._field_Ns.slice(0LL,(_15117_ns.get()._field_Ns.len() - 1LL));
	return _15117_ns;
}



inline jule::Ptr<_2490463c4_TypeDecl> _24a550800_buildType(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _16933_tokens) {
	jule::I64 _17017_i = 0LL;;
	jule::Ptr<_2490463c4_TypeDecl> _17118_t;;
	jule::Bool _17121_ok;;
	std::tie(_17118_t,_17121_ok) = _24a560469_buildType((*_self_)._field_p, _16933_tokens,(&(_17017_i)),false);
	if ((!(_17121_ok))) {
		_24a54d754_pushErr(&(*_self_), _16933_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_17017_i < _16933_tokens.len())) {
		_24a54d754_pushErr(&(*_self_), _16933_tokens[_17017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _17118_t;
}



inline jule::Any _24a550b0d_buildSubIdent(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _18337_tokens) {
	jule::I64 _18413_i = (_18337_tokens.len() - 2LL);;
	jule::Ptr<_23abd3d83_Token> _18513_token = _18337_tokens[_18413_i];;
	{
		auto &_match_expr{ _18513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_25135aa33:;
			{
				return static_cast<jule::Any>(_24a5501d4_buildObjSubIdent(&(*_self_), _18337_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_25135b0a5:;
			{
				return static_cast<jule::Any>(_24a5504e2_buildNsSubIdent(&(*_self_), _18337_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_25135b11b:;
			{
				if ((_18513_token.get()._field_Kind == jule::Str("]", 1))) {
					return static_cast<jule::Any>(_24a550800_buildType(&(*_self_), _18337_tokens));
				};
			}
		}
		_match_end_25135ae1d:;
	};
	_24a54d754_pushErr(&(*_self_), _18513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_24904d51e_VariadicExpr> _24a550e1b_buildVariadic(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _20136_tokens) {
	jule::Ptr<_23abd3d83_Token> _20217_token = _20136_tokens[(_20136_tokens.len() - 1LL)];;
	_20136_tokens=_20136_tokens.slice(0LL,(_20136_tokens.len() - 1LL));
	return jule::new_ptr<_24904d51e_VariadicExpr>(_24904d51e_VariadicExpr{._field_Token=_20217_token, ._field_Expr=_24a5578a1_buildFromTokens(&(*_self_), _20136_tokens)});
}



inline jule::Any _24a551229_buildOpRight(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _21036_tokens) {
	jule::Ptr<_23abd3d83_Token> _21117_token = _21036_tokens[(_21036_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _21117_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_25136065e:;
			{
				_21036_tokens=_21036_tokens.slice(0LL,(_21036_tokens.len() - 1LL));
				jule::Any _21521_d = _24a557285_build(&(*_self_), _21036_tokens);;
				if ((_21521_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _21521_d };
					
					if (_match_expr.type_is<jule::Ptr<_24904ebb3_FnCallExpr>>()) {
						_case_begin_251361e35:;
						{
							_21521_d.operator jule::Ptr<_24904ebb3_FnCallExpr>().get()._field_Exception=jule::new_ptr<_2490566e2_ScopeTree>(_2490566e2_ScopeTree{._field_Deferred=true, });
							return _21521_d;
						}
					}
					_match_end_251361d9c:;
				};
			}
		}
		_match_end_2513605e8:;
	};
	_24a54d754_pushErr(&(*_self_), _21117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_24904abd1_RangeExpr> _24a551559_buildBetweenParentheses(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _23146_tokens) {
	if ((_23146_tokens.len() == 2LL)) {
		_24a54d754_pushErr(&(*_self_), _23146_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_24a54da73_pushSuggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_23146_tokens=_23146_tokens.slice(1LL,(_23146_tokens.len() - 1LL));
	return jule::new_ptr<_24904abd1_RangeExpr>(_24904abd1_RangeExpr{._field_Expr=_24a5578a1_buildFromTokens(&(*_self_), _23146_tokens)});
}



inline jule::Ptr<_24904d8c6_CastExpr> _24a551878_tryBuildCast(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _24336_tokens) {
	jule::I64 _24417_rangeN = 0LL;;
	{
		auto &expr = _24336_tokens;
		auto it = expr.begin();
		_iter_begin_2513656db:;
		if (it != expr.end()) {
			jule::I64 _24513_i = it - expr.begin();
			jule::Ptr<_23abd3d83_Token> _24516_token = *it;
			{
				if ((_24516_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _24516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_251366610:;
							{
								(_24417_rangeN)++;
								goto _iter_next_2513656db;
							}
						}
						else {
							_case_begin_2513668eb:;
							{
								(_24417_rangeN)--;
							}
						}
						_match_end_2513666cb:;
					};
				};
				if ((_24417_rangeN > 0LL)) {
					goto _iter_next_2513656db;
				} else if (((_24513_i + 1LL) == _24336_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_23abd3d83_Token>> _26421_typeTokens = _24336_tokens.slice(0LL,(_24513_i + 1LL));;
				jule::Slice<jule::Ptr<_23abd3d83_Token>> _26521_exprTokens = _24336_tokens.slice((_24513_i + 1LL));;
				if ((_26521_exprTokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_23abd3d83_Token> _27217_tok = _26521_exprTokens[0LL];;
				if (((_27217_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_27217_tok.get()._field_Kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_24904d8c6_CastExpr> _27721_cast = jule::new_ptr<_24904d8c6_CastExpr>(_24904d8c6_CastExpr{});;
				if ((_26521_exprTokens.len() == 2LL)) {
					_24a54d754_pushErr(&(*_self_), _26521_exprTokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_24a54da73_pushSuggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_26421_typeTokens.len() == 2LL)) {
					_24a54d754_pushErr(&(*_self_), _26421_typeTokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_24a54da73_pushSuggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_26421_typeTokens=_26421_typeTokens.slice(1LL,(_26421_typeTokens.len() - 1LL));
					jule::I64 _29125_typeIndex = 0LL;;
					jule::Ptr<_2490463c4_TypeDecl> _29226_t;;
					jule::Bool _29229_ok;;
					std::tie(_29226_t,_29229_ok) = _24a560469_buildType((*_self_)._field_p, _26421_typeTokens,(&(_29125_typeIndex)),true);
					if ((_29229_ok && (_29125_typeIndex < _26421_typeTokens.len()))) {
						_24a54d754_pushErr(&(*_self_), _26421_typeTokens[_29125_typeIndex],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_29229_ok))) {
						return _27721_cast;
					};
					_27721_cast.get()._field_Kind=_29226_t;
					if ((_26521_exprTokens.len() > 2LL)) {
						jule::I64 _30229_j = 0LL;;
						_24a55b355_range(_30229_j,jule::Str("(", 1),jule::Str(")", 1),_26521_exprTokens);
						if ((_30229_j < _26521_exprTokens.len())) {
							return nullptr;
						};
						_26521_exprTokens=_26521_exprTokens.slice(0LL,_30229_j);
						_27721_cast.get()._field_Expr=_24a5578a1_buildFromTokens(&(*_self_), _26521_exprTokens);
					};
				};
				return _27721_cast;
			}
			_iter_next_2513656db:;
			++it;
			_24513_i++;
			goto _iter_begin_2513656db;
		}
		_iter_end_2513656db:;
	};
	return nullptr;
}



inline void _24a551c41_pushArg(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_24904a8e5_Expr>>& _31731_args, jule::Slice<jule::Ptr<_23abd3d83_Token>> _31750_tokens, jule::Ptr<_23abd3d83_Token> _31768_err_token) {
	if ((_31750_tokens.len() == 0LL)) {
		_24a54d754_pushErr(&(*_self_), _31768_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24a54da73_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_31731_args = jule::alloc_for_append(_31731_args,1);_31731_args.__push(_24a5578a1_buildFromTokens(&(*_self_), _31750_tokens));;
}



inline jule::Slice<jule::Ptr<_24904a8e5_Expr>> _24a55204e_buildArgs(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _32632_tokens) {
	if ((_32632_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_24904a8e5_Expr>> _33217_args = nullptr;;
	jule::I64 _33317_last = 0LL;;
	jule::I64 _33417_rangeN = 0LL;;
	_32632_tokens=_32632_tokens.slice(1LL,(_32632_tokens.len() - 1LL));
	{
		auto &expr = _32632_tokens;
		auto it = expr.begin();
		_iter_begin_25137550e:;
		if (it != expr.end()) {
			jule::I64 _33613_i = it - expr.begin();
			jule::Ptr<_23abd3d83_Token> _33616_token = *it;
			{
				if ((_33616_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _33616_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_2513768a6:;
							{
								(_33417_rangeN)++;
							}
						}
						else {
							_case_begin_251376b92:;
							{
								(_33417_rangeN)--;
							}
						}
						_match_end_251376972:;
					};
				};
				if (((_33417_rangeN > 0LL) || (_33616_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_25137550e;
				};
				_24a551c41_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last,_33613_i),_33616_token);
				_33317_last=static_cast<jule::I64>((_33613_i + 1LL));
			}
			_iter_next_25137550e:;
			++it;
			_33613_i++;
			goto _iter_begin_25137550e;
		}
		_iter_end_25137550e:;
	};
	if ((_33317_last < _32632_tokens.len())) {
		if ((_33317_last == 0LL)) {
			if ((_32632_tokens.len() > 0LL)) {
				_24a551c41_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[_33317_last]);
			};
		} else {
			_24a551c41_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[(_33317_last - 1LL)]);
		};
	};
	return _33217_args;
}



inline jule::Slice<jule::Ptr<_2490463c4_TypeDecl>> _24a55235c_buildCallGenerics(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _36840_tokens) {
	if ((_36840_tokens.len() == 0LL)) {
		return nullptr;
	};
	_36840_tokens=_36840_tokens.slice(1LL,(_36840_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _37418_parts;;
	jule::Slice<_23a8a5ca8_Log> _37425_errs;;
	std::tie(_37418_parts,_37425_errs) = _24a55bdc2_parts(_36840_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_2490463c4_TypeDecl>> _37517_generics = jule::Slice<jule::Ptr<_2490463c4_TypeDecl>>::alloc(0LL,_37418_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_37425_errs);
	{
		auto &expr = _37418_parts;
		auto it = expr.begin();
		_iter_begin_251379c50:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_23abd3d83_Token>> _37721_part = *it;
			{
				if ((_37721_part.len() == 0LL)) {
					goto _iter_next_251379c50;
				};
				jule::I64 _38121_j = 0LL;;
				jule::Ptr<_2490463c4_TypeDecl> _38222_generic;;
				std::tie(_38222_generic,std::ignore) = _24a560469_buildType((*_self_)._field_p, _37721_part,(&(_38121_j)),true);
				if ((_38121_j < _37721_part.len())) {
					_24a54d754_pushErr(&(*_self_), _37721_part[_38121_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_37517_generics = jule::alloc_for_append(_37517_generics,1);_37517_generics.__push(_38222_generic);;
			}
			_iter_next_251379c50:;
			++it;
			goto _iter_begin_251379c50;
		}
		_iter_end_251379c50:;
	};
	return _37517_generics;
}



inline jule::Ptr<_24904ebb3_FnCallExpr> _24a5527ad_buildFnCall(_24a54ce5c_exprBuilder* _self_, jule::Ptr<_23abd3d83_Token>& _39235_token, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _39255_expr, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _39276_args) {
	return jule::new_ptr<_24904ebb3_FnCallExpr>(_24904ebb3_FnCallExpr{._field_Token=_39235_token, ._field_Expr=_24a5578a1_buildFromTokens(&(*_self_), _39255_expr), ._field_Args=_24a55204e_buildArgs(&(*_self_), _39276_args), });
}



inline jule::Any _24a552abb_buildParenthesesRange(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _40045_tokens) {
	jule::Ptr<_23abd3d83_Token> _40117_token = _40045_tokens[0LL];;
	{
		auto &_match_expr{ _40117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_251381bbe:;
			{
				{
					auto &_match_expr{ _40117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_251382582:;
						{
							jule::Ptr<_24904d8c6_CastExpr> _40625_expr = _24a551878_tryBuildCast(&(*_self_), _40045_tokens);;
							if ((_40625_expr != nullptr)) {
								return static_cast<jule::Any>(_40625_expr);
							};
						}
					}
					_match_end_251382395:;
				};
			}
		}
		_match_end_251381b69:;
	};
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _41218_exprTokens;;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _41234_args_tokens;;
	std::tie(_41218_exprTokens,_41234_args_tokens) = _24a55b5ec_rangeLast(_40045_tokens);
	if ((_41218_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_24a551559_buildBetweenParentheses(&(*_self_), _41234_args_tokens));
	};
	return static_cast<jule::Any>(_24a5527ad_buildFnCall(&(*_self_), _40117_token,_41218_exprTokens,_41234_args_tokens));
}



inline jule::Ptr<_24904c133_UnsafeExpr> _24a552dc9_buildUnsafeExpr(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _42138_tokens) {
	jule::Ptr<_23abd3d83_Token> _42217_token = _42138_tokens[0LL];;
	_42138_tokens=_42138_tokens.slice(1LL);
	jule::I64 _42417_i = 0LL;;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _42517_rangeTokens = _24a55b355_range(_42417_i,jule::Str("{", 1),jule::Str("}", 1),_42138_tokens);;
	if ((_42517_rangeTokens.len() == 0LL)) {
		_24a54d754_pushErr(&(*_self_), _42138_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_24904c133_UnsafeExpr>(_24904c133_UnsafeExpr{._field_Token=_42217_token, ._field_Expr=_24a5578a1_buildFromTokens(&(*_self_), _42517_rangeTokens)});
}



inline jule::Ptr<_2490581d8_FnDecl> _24a5531d7_buildAnonFn(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _43635_tokens) {
	jule::Ptr<_2490581d8_FnDecl> _43717_f = _24a5645b1_buildFn((*_self_)._field_p, _43635_tokens,false,false);;
	if ((!(_24905853a_IsAnon(_43717_f.ptr())))) {
		_24a54d754_pushErr(&(*_self_), _43717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24a54da73_pushSuggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _43717_f;
}



inline jule::Any _24a5534e5_buildUnsafe(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _44535_tokens) {
	{
		auto &_match_expr{ _44535_tokens[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_251389105:;
			{
				return static_cast<jule::Any>(_24a5531d7_buildAnonFn(&(*_self_), _44535_tokens));
			}
		}
		else {
			_case_begin_251389655:;
			{
				return static_cast<jule::Any>(_24a552dc9_buildUnsafeExpr(&(*_self_), _44535_tokens));
			}
		}
		_match_end_251389578:;
	};
}



inline void _24a5538ad_pushRangeLitPart(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _45539_part, jule::Ptr<_23abd3d83_Token> _4569_errorToken, jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>>& _45634_parts) {
	if ((_45539_part.len() == 0LL)) {
		_24a54d754_pushErr(&(*_self_), _4569_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24a54da73_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_45634_parts = jule::alloc_for_append(_45634_parts,1);_45634_parts.__push(_45539_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _24a553bdd_getBraceRangeLitExprParts(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _46648_tokens) {
	if ((_46648_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _47217_parts = nullptr;;
	jule::I64 _47417_last = 0LL;;
	jule::I64 _47517_rangeN = 0LL;;
	_46648_tokens=_46648_tokens.slice(1LL,(_46648_tokens.len() - 1LL));
	{
		auto &expr = _46648_tokens;
		auto it = expr.begin();
		_iter_begin_25138dabb:;
		if (it != expr.end()) {
			jule::I64 _47713_i = it - expr.begin();
			jule::Ptr<_23abd3d83_Token> _47716_token = *it;
			{
				if ((_47716_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _47716_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_25138ee63:;
							{
								(_47517_rangeN)++;
							}
						}
						else {
							_case_begin_25139024e:;
							{
								(_47517_rangeN)--;
							}
						}
						_match_end_25139002e:;
					};
				};
				if (((_47517_rangeN > 0LL) || (_47716_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_25138dabb;
				};
				_24a5538ad_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last,_47713_i),_47716_token,_47217_parts);
				_47417_last=static_cast<jule::I64>((_47713_i + 1LL));
			}
			_iter_next_25138dabb:;
			++it;
			_47713_i++;
			goto _iter_begin_25138dabb;
		}
		_iter_end_25138dabb:;
	};
	if ((_47417_last < _46648_tokens.len())) {
		if ((_47417_last == 0LL)) {
			if ((_46648_tokens.len() > 0LL)) {
				_24a5538ad_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[_47417_last],_47217_parts);
			};
		} else {
			_24a5538ad_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[(_47417_last - 1LL)],_47217_parts);
		};
	};
	return _47217_parts;
}



inline jule::Ptr<_249050642_FieldExprPair> _24a55400c_buildFieldExprPair(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _50841_tokens) {
	if (((_50841_tokens.len() - 2LL) == 0LL)) {
		_24a54d754_pushErr(&(*_self_), _50841_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_249050642_FieldExprPair> _51317_pair = jule::new_ptr<_249050642_FieldExprPair>(_249050642_FieldExprPair{._field_Field=_50841_tokens[0LL], });;
	_50841_tokens=_50841_tokens.slice(2LL);
	_51317_pair.get()._field_Expr=_24a5578a1_buildFromTokens(&(*_self_), _50841_tokens);
	return _51317_pair;
}



inline jule::Ptr<_24904a8e5_Expr> _24a55431a_buildStructLitExpr(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _52142_tokens) {
	jule::Ptr<_23abd3d83_Token> _52217_token = _52142_tokens[0LL];;
	if (((_52217_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && (_52142_tokens.len() > 1LL))) {
		_52217_token=_52142_tokens[1LL];
		if ((_52217_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_24904a8e5_Expr>(_24904a8e5_Expr{._field_Token=_52217_token, ._field_End=_52142_tokens[(_52142_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_24a55400c_buildFieldExprPair(&(*_self_), _52142_tokens))});
		};
	};
	return _24a5578a1_buildFromTokens(&(*_self_), _52142_tokens);
}



inline jule::Slice<jule::Ptr<_24904a8e5_Expr>> _24a554628_buildStructLitExprs(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _53643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _53717_parts = _24a553bdd_getBraceRangeLitExprParts(&(*_self_), _53643_tokens);;
	if ((_53717_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_24904a8e5_Expr>> _54217_pairs = jule::Slice<jule::Ptr<_24904a8e5_Expr>>::alloc(0LL,_53717_parts.len());;
	{
		auto &expr = _53717_parts;
		auto it = expr.begin();
		_iter_begin_25139a1d2:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_23abd3d83_Token>> _54321_part = *it;
			{
				_54217_pairs = jule::alloc_for_append(_54217_pairs,1);_54217_pairs.__push(_24a55431a_buildStructLitExpr(&(*_self_), _54321_part));;
			}
			_iter_next_25139a1d2:;
			++it;
			goto _iter_begin_25139a1d2;
		}
		_iter_end_25139a1d2:;
	};
	return _54217_pairs;
}



inline jule::Ptr<_249050d90_StructLit> _24a554958_buildTypedStructLiteral(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _54946_tokens) {
	jule::I64 _55017_i = 0LL;;
	jule::Ptr<_2490463c4_TypeDecl> _55118_t;;
	jule::Bool _55121_ok;;
	std::tie(_55118_t,_55121_ok) = _24a560469_buildType((*_self_)._field_p, _54946_tokens,(&(_55017_i)),true);
	if ((!(_55121_ok))) {
		return nullptr;
	} else if ((_55017_i >= _54946_tokens.len())) {
		_24a54d754_pushErr(&(*_self_), _54946_tokens[_55017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_54946_tokens=_54946_tokens.slice(_55017_i);
	jule::Ptr<_23abd3d83_Token> _56013_token = _54946_tokens[0LL];;
	if (((_56013_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_56013_token.get()._field_Kind != jule::Str("{", 1)))) {
		_24a54d754_pushErr(&(*_self_), _56013_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_249050d90_StructLit>(_249050d90_StructLit{._field_End=_54946_tokens[(_54946_tokens.len() - 1LL)], ._field_Kind=_55118_t, ._field_Exprs=_24a554628_buildStructLitExprs(&(*_self_), _54946_tokens)});
}



inline jule::Ptr<_24904a8e5_Expr> _24a554c77_buildBraceLitPart(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _57341_tokens) {
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _57418_l;;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _57425_r;;
	std::tie(_57418_l,_57425_r) = _24a55861b_splitDelim(_57341_tokens,static_cast<jule::U64>(11LLU));
	if ((_57418_l != nullptr)) {
		return jule::new_ptr<_24904a8e5_Expr>(_24904a8e5_Expr{._field_Token=_57341_tokens[0LL], ._field_End=_57341_tokens[(_57341_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_249051d2a_KeyValPair>(_249051d2a_KeyValPair{._field_Key=_24a5578a1_buildFromTokens(&(*_self_), _57418_l), ._field_Val=_24a5578a1_buildFromTokens(&(*_self_), _57425_r), ._field_Colon=_57341_tokens[_57418_l.len()]}))});
	};
	return _24a5578a1_buildFromTokens(&(*_self_), _57341_tokens);
}



inline jule::Ptr<_249051313_BraceLit> _24a555085_buildBraceLit(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _59037_tokens) {
	jule::Ptr<_249051313_BraceLit> _59117_lit = jule::new_ptr<_249051313_BraceLit>(_249051313_BraceLit{._field_Token=_59037_tokens[0LL], ._field_End=_59037_tokens[(_59037_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _59617_parts = _24a553bdd_getBraceRangeLitExprParts(&(*_self_), _59037_tokens);;
	if ((_59617_parts == nullptr)) {
		return _59117_lit;
	};
	_59117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_24904a8e5_Expr>>::alloc(0LL,_59617_parts.len());
	{
		auto &expr = _59617_parts;
		auto it = expr.begin();
		_iter_begin_2513a49e4:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_23abd3d83_Token>> _60221_part = *it;
			{
				_59117_lit.get()._field_Exprs = jule::alloc_for_append(_59117_lit.get()._field_Exprs,1);_59117_lit.get()._field_Exprs.__push(_24a554c77_buildBraceLitPart(&(*_self_), _60221_part));;
			}
			_iter_next_2513a49e4:;
			++it;
			goto _iter_begin_2513a49e4;
		}
		_iter_end_2513a49e4:;
	};
	return _59117_lit;
}



inline jule::Any _24a555393_buildBraceRange(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _60939_tokens) {
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _61018_exprTokens;;
	jule::I64 _61030_rangeN;;
	std::tie(_61018_exprTokens,_61030_rangeN) = _24a558e02_getRangeExprTokens(_60939_tokens);
	{
		
		if ((_61018_exprTokens.len() == 0LL)) {
			_case_begin_2513a65b7:;
			{
				return static_cast<jule::Any>(_24a555085_buildBraceLit(&(*_self_), _60939_tokens));
			}
		}
		else if ((_61030_rangeN > 0LL)) {
			_case_begin_2513a663e:;
			{
				_24a54d754_pushErr(&(*_self_), _60939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_2513a650c:;
	};
	jule::Ptr<_23abd3d83_Token> _62113_elseToken = _61018_exprTokens[(_61018_exprTokens.len() - 1LL)];;
	if ((_61018_exprTokens[(_61018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(17LLU))) {
		_61018_exprTokens=_61018_exprTokens.slice(0LL,(_61018_exprTokens.len() - 1LL));
		jule::Any _62421_d = _24a557285_build(&(*_self_), _61018_exprTokens);;
		if ((_62421_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _62421_d };
			
			if (_match_expr.type_is<jule::Ptr<_24904ebb3_FnCallExpr>>()) {
				_case_begin_2513a9e06:;
				{
					_60939_tokens=_60939_tokens.slice((_61018_exprTokens.len() + 1LL));
					jule::I64 _63125_i = 0LL;;
					jule::Slice<jule::Ptr<_23abd3d83_Token>> _63225_rangeTokens = _24a55b355_range(_63125_i,jule::Str("{", 1),jule::Str("}", 1),_60939_tokens);;
					jule::Ptr<_24904ebb3_FnCallExpr> _63325_model = _62421_d.operator jule::Ptr<_24904ebb3_FnCallExpr>();;
					if (_24905028a_Ignored(_63325_model.ptr())) {
						_24a54d754_pushErr(&(*_self_), _62113_elseToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_24a54da73_pushSuggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_63325_model.get()._field_Exception=_24a55eab7_buildScope((*_self_)._field_p, _63225_rangeTokens,_60939_tokens[(_63125_i - 1LL)]);
					return _62421_d;
				}
			}
			else {
				_case_begin_2513a9b09:;
				{
					_24a54d754_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_2513a9983:;
		};
	};
	{
		auto &_match_expr{ _61018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_2513ae2c3:;
			{
				return _24a5534e5_buildUnsafe(&(*_self_), _60939_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_2513ae339:;
			{
				return static_cast<jule::Any>(_24a5531d7_buildAnonFn(&(*_self_), _60939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_2513ae3a0:;
			{
				return static_cast<jule::Any>(_24a554958_buildTypedStructLiteral(&(*_self_), _60939_tokens));
			}
		}
		else {
			_case_begin_2513ac3e2:;
			{
				_24a54d754_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_2513ae01a:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _24a5556a1_getEnumerableParts(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _66141_tokens) {
	_66141_tokens=_66141_tokens.slice(1LL,(_66141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _66318_parts;;
	jule::Slice<_23a8a5ca8_Log> _66325_errors;;
	std::tie(_66318_parts,_66325_errors) = _24a55bdc2_parts(_66141_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_66325_errors);
	return _66318_parts;
}



inline jule::Ptr<_24905229d_SliceExpr> _24a5559ae_buildSlice(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _66833_tokens) {
	jule::Ptr<_24905229d_SliceExpr> _66917_slc = jule::new_ptr<_24905229d_SliceExpr>(_24905229d_SliceExpr{._field_Token=_66833_tokens[0LL], ._field_End=_66833_tokens[(_66833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _67417_parts = _24a5556a1_getEnumerableParts(&(*_self_), _66833_tokens);;
	if ((_67417_parts.len() == 0LL)) {
		return _66917_slc;
	};
	_66917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_24904a8e5_Expr>>::alloc(0LL,_67417_parts.len());
	{
		auto &expr = _67417_parts;
		auto it = expr.begin();
		_iter_begin_2513b5142:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_23abd3d83_Token>> _68021_p = *it;
			{
				if ((_68021_p.len() == 0LL)) {
					goto _iter_next_2513b5142;
				};
				_66917_slc.get()._field_Exprs = jule::alloc_for_append(_66917_slc.get()._field_Exprs,1);_66917_slc.get()._field_Exprs.__push(_24a5578a1_buildFromTokens(&(*_self_), _68021_p));;
			}
			_iter_next_2513b5142:;
			++it;
			goto _iter_begin_2513b5142;
		}
		_iter_end_2513b5142:;
	};
	return _66917_slc;
}



inline jule::Ptr<_249052b3e_IndexingExpr> _24a555e10_buildIndexing(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _69036_exprTokens, jule::Slice<jule::Ptr<_23abd3d83_Token>> _69113_tokens, jule::Ptr<_23abd3d83_Token> _69135_errorToken) {
	jule::Ptr<_23abd3d83_Token> _69217_end = _69113_tokens[(_69113_tokens.len() - 1LL)];;
	_69113_tokens=_69113_tokens.slice(1LL,(_69113_tokens.len() - 1LL));
	if ((_69113_tokens.len() == 0LL)) {
		_24a54d754_pushErr(&(*_self_), _69135_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_24904a8e5_Expr> _69817_expr = _24a5578a1_buildFromTokens(&(*_self_), _69036_exprTokens);;
	if ((_69817_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_24904a8e5_Expr> _70217_index = _24a5578a1_buildFromTokens(&(*_self_), _69113_tokens);;
	if ((_70217_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_249052b3e_IndexingExpr>(_249052b3e_IndexingExpr{._field_Token=_69135_errorToken, ._field_End=_69217_end, ._field_Expr=_69817_expr, ._field_Index=_70217_index});
}



inline jule::Ptr<_249053249_SlicingExpr> _24a5564a4_buildSlicing(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _71436_exprTokens, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _71463_start, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _71514_to, jule::Ptr<_23abd3d83_Token>& _71533_errorToken, jule::Ptr<_23abd3d83_Token> _71557_end) {
	jule::Ptr<_249053249_SlicingExpr> _71617_slc = jule::new_ptr<_249053249_SlicingExpr>(_249053249_SlicingExpr{._field_Token=_71533_errorToken, ._field_End=_71557_end, ._field_Expr=_24a5578a1_buildFromTokens(&(*_self_), _71436_exprTokens), });;
	if ((_71463_start.len() > 0LL)) {
		_71617_slc.get()._field_Start=_24a5578a1_buildFromTokens(&(*_self_), _71463_start);
	};
	if ((_71514_to.len() > 0LL)) {
		_71617_slc.get()._field_To=_24a5578a1_buildFromTokens(&(*_self_), _71514_to);
	};
	return _71617_slc;
}



inline jule::Any _24a5567b2_buildBracketRange(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _73040_tokens) {
	jule::Ptr<_23abd3d83_Token> _73117_errorToken = _73040_tokens[0LL];;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _73218_exprTokens;;
	jule::I64 _73230_rangeN;;
	std::tie(_73218_exprTokens,_73230_rangeN) = _24a558e02_getRangeExprTokens(_73040_tokens);
	if ((_73218_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_24a5559ae_buildSlice(&(*_self_), _73040_tokens));
	} else if ((_73230_rangeN > 0LL)) {
		_24a54d754_pushErr(&(*_self_), _73117_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_73040_tokens=_73040_tokens.slice(_73218_exprTokens.len());
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _74717_splitTokens = _73040_tokens.slice(1LL,(_73040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _74818_start;;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _74829_to;;
	std::tie(_74818_start,_74829_to) = _24a55861b_splitDelim(_74717_splitTokens,static_cast<jule::U64>(11LLU));
	if (((_74818_start != nullptr) || (_74829_to != nullptr))) {
		return static_cast<jule::Any>(_24a5564a4_buildSlicing(&(*_self_), _73218_exprTokens,_74818_start,_74829_to,_73117_errorToken,_73040_tokens[(_73040_tokens.len() - 1LL)]));
	};
	return static_cast<jule::Any>(_24a555e10_buildIndexing(&(*_self_), _73218_exprTokens,_73040_tokens,_73117_errorToken));
}



inline jule::Any _24a556ac0_buildData(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _75533_tokens) {
	{
		auto _match_expr{ _75533_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_2513c2a67:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_2513c2acd:;
			{
				return _24a54e7aa_buildSingle(&(*_self_), _75533_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_2513c2b44:;
			{
				if ((_75533_tokens[0LL].get()._field_Id == static_cast<jule::U64>(30LLU))) {
					return static_cast<jule::Any>(_24a54eab8_buildCppLinkedIdent(&(*_self_), _75533_tokens));
				};
			}
		}
		_match_end_2513c27d1:;
	};
	jule::Ptr<_23abd3d83_Token> _76717_token = _75533_tokens[(_75533_tokens.len() - 1LL)];;
	if (((_76717_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_76717_token.get()._field_Kind == jule::Str("...", 3)))) {
		return static_cast<jule::Any>(_24a550e1b_buildVariadic(&(*_self_), _75533_tokens));
	};
	_76717_token=_75533_tokens[0LL];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_2513c6285:;
			{
				if (((_75533_tokens.len() > 1LL) && (_76717_token.get()._field_Kind == jule::Str("*", 1)))) {
					_76717_token=_75533_tokens[1LL];
					if (((_76717_token.get()._field_Id == static_cast<jule::U64>(1LLU)) || (_76717_token.get()._field_Id == static_cast<jule::U64>(34LLU)))) {
						return static_cast<jule::Any>(_24a550800_buildType(&(*_self_), _75533_tokens));
					};
				};
				return static_cast<jule::Any>(_24a54edc6_buildUnary(&(*_self_), _75533_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_2513c630c:;
			{
				if ((_75533_tokens.len() < 3LL)) {
					goto _match_end_2513c621e;
				};
				if ((_75533_tokens.len() > 3LL)) {
					jule::Ptr<_23abd3d83_Token> _78921_t = _75533_tokens[(_75533_tokens.len() - 1LL)];;
					if (((_78921_t.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_78921_t.get()._field_Kind == jule::Str(")", 1)))) {
						goto _match_end_2513c621e;
					};
				};
				jule::Ptr<_23abd3d83_Token> _79517_next = _75533_tokens[1LL];;
				if (((_79517_next.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_79517_next.get()._field_Kind != jule::Str("]", 1)))) {
					goto _match_end_2513c621e;
				};
				return static_cast<jule::Any>(_24a550800_buildType(&(*_self_), _75533_tokens));
			}
		}
		_match_end_2513c621e:;
	};
	_76717_token=_75533_tokens[(_75533_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_2513c553c:;
			{
				return _24a550b0d_buildSubIdent(&(*_self_), _75533_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_2513cc445:;
			{
				return static_cast<jule::Any>(_24a550800_buildType(&(*_self_), _75533_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_2513cc4ab:;
			{
				return _24a551229_buildOpRight(&(*_self_), _75533_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_2513cc522:;
			{
				{
					auto &_match_expr{ _76717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_2513cded5:;
						{
							return _24a552abb_buildParenthesesRange(&(*_self_), _75533_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_2513ce05c:;
						{
							return _24a555393_buildBraceRange(&(*_self_), _75533_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_2513ce0d4:;
						{
							return _24a5567b2_buildBracketRange(&(*_self_), _75533_tokens);
						}
					}
					_match_end_2513cd8b9:;
				};
			}
		}
		_match_end_2513c685c:;
	};
	if ((_76717_token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		return static_cast<jule::Any>(_24a550800_buildType(&(*_self_), _75533_tokens));
	};
	_24a54d754_pushErr(&(*_self_), _76717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Any _24a556e77_buildBinop(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _83134_tokens, jule::I64 _83152_i) {
	jule::Ptr<_23abd3d83_Token> _83217_op = _83134_tokens[_83152_i];;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _83317_leftTokens = _83134_tokens.slice(0LL,_83152_i);;
	if ((_24a557c03_isTypeOp(_83217_op.get()._field_Kind) && _24a557ede_isTypeRange(_83317_leftTokens))) {
		return static_cast<jule::Any>(_24a550800_buildType(&(*_self_), _83134_tokens));
	};
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _83817_rightTokens = _83134_tokens.slice((_83152_i + 1LL));;
	if ((_83317_leftTokens.len() == 0LL)) {
		_24a54d754_pushErr(&(*_self_), _83134_tokens[_83152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24a54da73_pushSuggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_83817_rightTokens.len() == 0LL)) {
		_24a54d754_pushErr(&(*_self_), _83134_tokens[_83152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24a54da73_pushSuggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return static_cast<jule::Any>(jule::new_ptr<_24904e674_BinopExpr>(_24904e674_BinopExpr{._field_Left=_24a5578a1_buildFromTokens(&(*_self_), _83317_leftTokens), ._field_Right=_24a5578a1_buildFromTokens(&(*_self_), _83817_rightTokens), ._field_Op=_83217_op}));
}



inline jule::Any _24a557285_build(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _85629_tokens) {
	jule::I64 _85713_i = _24a5588b3_findLowestPrecOp(_85629_tokens);;
	if ((_85713_i == -1LL)) {
		return _24a556ac0_buildData(&(*_self_), _85629_tokens);
	};
	return _24a556e77_buildBinop(&(*_self_), _85629_tokens,_85713_i);
}



inline jule::Any _24a557593_buildKind(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _86433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _86518_parts;;
	jule::Slice<_23a8a5ca8_Log> _86525_errors;;
	std::tie(_86518_parts,_86525_errors) = _24a55bdc2_parts(_86433_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_86525_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_86525_errors);
		return nullptr;
	} else if ((_86518_parts.len() > 1LL)) {
		return static_cast<jule::Any>(_24a54dd81_buildTuple(&(*_self_), _86518_parts));
	};
	return _24a557285_build(&(*_self_), _86433_tokens);
}



inline jule::Ptr<_24904a8e5_Expr> _24a5578a1_buildFromTokens(_24a54ce5c_exprBuilder* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _87538_tokens) {
	if ((_87538_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_24904a8e5_Expr>(_24904a8e5_Expr{._field_Token=_87538_tokens[0LL], ._field_End=_87538_tokens[(_87538_tokens.len() - 1LL)], ._field_Kind=_24a557593_buildKind(&(*_self_), _87538_tokens)});
}







std::ostream &operator<<(std::ostream &_Stream, _24a54ce5c_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24a5597b5_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _24a55d423_stop(_24a55d0e3_parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _24a55d687_stopped(_24a55d0e3_parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _24a55da50_pushErr(_24a55d0e3_parser* _self_, jule::Ptr<_23abd3d83_Token> _28126_token, jule::Str _28141_fmt, jule::Slice<jule::Any> _28154_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_24a55c554_compilerErr(_28126_token,_28141_fmt,jule::Any(_28154_args)));;
}



inline void _24a55dd6e_pushSuggestion(_24a55d0e3_parser* _self_, jule::Str _28633_fmt, jule::Slice<jule::Any> _28646_args) {
	{
		_24a55c983_pushSuggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_28633_fmt,jule::Any(_28646_args));
	};
}



inline jule::Ptr<_24904a8e5_Expr> _24a55e17c_buildExpr(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _29034_tokens) {
	jule::Ptr<_24a54ce5c_exprBuilder> _29117_ep = jule::new_ptr<_24a54ce5c_exprBuilder>(_24a54ce5c_exprBuilder{._field_p=_self_});;
	jule::Ptr<_24904a8e5_Expr> _29417_expr = _24a5578a1_buildFromTokens(_29117_ep.ptr(), _29034_tokens);;
	return _29417_expr;
}



inline jule::Ptr<_24900cb2c_Directive> _24a55e48a_buildDirective(_24a55d0e3_parser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _29837_tokens) {
	if ((_29837_tokens.len() == 1LL)) {
		_24a55da50_pushErr(&(*_self_), _29837_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_29837_tokens[1LL].get()._field_Column != (_29837_tokens[0LL].get()._field_Column + 1LL))) {
		_24a55da50_pushErr(&(*_self_), _29837_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_24900cb2c_Directive>(_24900cb2c_Directive{._field_Tag=_29837_tokens[1LL], ._field_Args=_29837_tokens.slice(2LL)});
}



inline void _24a55e710_pushDirective(_24a55d0e3_parser* _self_, jule::Ptr<_24900cb2c_Directive> _31336_d) {
	if ((_31336_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_250d112ca:;
		if (it != expr.end()) {
			jule::Ptr<_24900cb2c_Directive> _31816_pd = *it;
			{
				if ((_31336_d.get()._field_Tag.get()._field_Kind == _31816_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_250d112ca:;
			++it;
			goto _iter_begin_250d112ca;
		}
		_iter_end_250d112ca:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_31336_d);;
}



inline jule::Ptr<_2490566e2_ScopeTree> _24a55eab7_buildScope(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _32635_tokens, jule::Ptr<_23abd3d83_Token> _32657_end) {
	jule::Ptr<_2490566e2_ScopeTree> _32717_s = _24a54004d_newScope();;
	_32717_s.get()._field_End=_32657_end;
	_24a54199a_scopeParser _32917_sp = _24a54199a_scopeParser{._field_p=_self_, };;
	_24a54c533_build(&_32917_sp, _32635_tokens,_32717_s);
	return _32717_s;
}



inline std::tuple<jule::Ptr<_2490463c4_TypeDecl>,jule::Bool> _24a560018__buildType(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _33642_tokens, jule::I64* _33713_i, jule::Bool _33722_err) {
	_24a56dd07_typeBuilder _33817_tb = _24a56dd07_typeBuilder{._field_p=_self_, ._field_tokens=_33642_tokens, ._field_i=_33713_i, ._field_err=_33722_err};;
	jule::Ptr<_2490463c4_TypeDecl> _34418_decl;;
	jule::Bool _34424_ok;;
	std::tie(_34418_decl,_34424_ok) = _24a5720a2_build(&_33817_tb);
	return std::make_tuple(_34418_decl,_34424_ok);
}



inline std::tuple<jule::Ptr<_2490463c4_TypeDecl>,jule::Bool> _24a560469_buildType(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _34941_tokens, jule::I64* _35013_i, jule::Bool _35022_err) {
	jule::Ptr<_23abd3d83_Token> _35113_token = _34941_tokens[(*(_35013_i))];;
	jule::Ptr<_2490463c4_TypeDecl> _35218_t;;
	jule::Bool _35221_ok;;
	std::tie(_35218_t,_35221_ok) = _24a560018__buildType(_self_, _34941_tokens,_35013_i,_35022_err);
	if ((_35022_err && (!(_35221_ok)))) {
		_24a55da50_pushErr(_self_.ptr(), _35113_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_35218_t,_35221_ok);
}



inline jule::Ptr<_24905ca28_TypeAliasDecl> _24a560777_buildTypeAliasDecl(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _35943_tokens) {
	jule::I64 _36017_i = 1LL;;
	if ((_36017_i >= _35943_tokens.len())) {
		_24a55da50_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_24905ca28_TypeAliasDecl> _36517_tad = jule::new_ptr<_24905ca28_TypeAliasDecl>(_24905ca28_TypeAliasDecl{._field_Token=_35943_tokens[1LL], ._field_Ident=_35943_tokens[1LL].get()._field_Kind, });;
	jule::Ptr<_23abd3d83_Token> _36917_token = _35943_tokens[_36017_i];;
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24a55da50_pushErr(_self_.ptr(), _36917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_36017_i)++;
	if ((_36017_i >= _35943_tokens.len())) {
		_24a55da50_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _36517_tad;
	};
	_36917_token=_35943_tokens[_36017_i];
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_24a55da50_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _36517_tad;
	};
	(_36017_i)++;
	if ((_36017_i >= _35943_tokens.len())) {
		_24a55da50_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _36517_tad;
	};
	jule::Ptr<_2490463c4_TypeDecl> _39018_t;;
	jule::Bool _39021_ok;;
	std::tie(_39018_t,_39021_ok) = _24a560469_buildType(_self_, _35943_tokens,(&(_36017_i)),true);
	_36517_tad.get()._field_Kind=_39018_t;
	if ((_39021_ok && (_36017_i < _35943_tokens.len()))) {
		_24a55da50_pushErr(_self_.ptr(), _35943_tokens[_36017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_36517_tad.get()._field_Public=_24a56cc90_isPub(_36517_tad.get()._field_Ident);
	return _36517_tad;
}



inline void _24a560a96_buildVarTypeAndExpr(jule::Ptr<_24a55d0e3_parser> _self_, jule::Ptr<_2490591b7_VarDecl>& _39944_v, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _39962_tokens) {
	jule::I64 _40017_i = 0LL;;
	jule::Ptr<_23abd3d83_Token> _40117_tok = _39962_tokens[_40017_i];;
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_40017_i)++;
		if (((_40017_i >= _39962_tokens.len()) || ((_39962_tokens[_40017_i].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_39962_tokens[_40017_i].get()._field_Kind == jule::Str("=", 1))))) {
			_24a55da50_pushErr(_self_.ptr(), _40117_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_2490463c4_TypeDecl> _40922_t;;
		jule::Bool _40925_ok;;
		std::tie(_40922_t,_40925_ok) = _24a560469_buildType(_self_, _39962_tokens,(&(_40017_i)),true);
		if (_40925_ok) {
			_39944_v.get()._field_Kind=_40922_t;
			if ((_40017_i >= _39962_tokens.len())) {
				return;;
			};
			_40117_tok=_39962_tokens[_40017_i];
		};
	};
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(7LLU))) {
		if ((_40117_tok.get()._field_Kind != jule::Str("=", 1))) {
			_24a55da50_pushErr(_self_.ptr(), _40117_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_23abd3d83_Token>> _42421_exprTokens = _39962_tokens.slice((_40017_i + 1LL));;
		if ((_42421_exprTokens.len() == 0LL)) {
			_24a55da50_pushErr(_self_.ptr(), _40117_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_39944_v.get()._field_Expr=_24a55e17c_buildExpr(_self_, _42421_exprTokens);
	} else {
		_24a55da50_pushErr(_self_.ptr(), _40117_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _24a560db5_buildVarCommon(jule::Ptr<_24a55d0e3_parser> _self_, jule::Ptr<_2490591b7_VarDecl>& _43539_v, jule::Slice<jule::Ptr<_23abd3d83_Token>> _43556_tokens) {
	_43539_v.get()._field_Token=_43556_tokens[0LL];
	if ((_43539_v.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24a55da50_pushErr(_self_.ptr(), _43539_v.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_43539_v.get()._field_Ident=_43539_v.get()._field_Token.get()._field_Kind;
	_43539_v.get()._field_Public=_24a56cc90_isPub(_43539_v.get()._field_Ident);
	_43539_v.get()._field_Kind=nullptr;
	if ((_43556_tokens.len() > 1LL)) {
		_43556_tokens=_43556_tokens.slice(1LL);
		_24a560a96_buildVarTypeAndExpr(_self_, _43539_v,_43556_tokens);
	};
}



inline void _24a56127d_buildVarBegin(_24a55d0e3_parser* _self_, jule::Ptr<_2490591b7_VarDecl>& _45137_v, jule::I64& _45155_i, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _45164_tokens) {
	jule::Ptr<_23abd3d83_Token> _45213_tok = _45164_tokens[_45155_i];;
	{
		auto &_match_expr{ _45213_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_250d2d2d6:;
			{
				_45137_v.get()._field_Statically=true;
				goto _case_begin_250d2d34c;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_250d2d34c:;
			{
				(_45155_i)++;
				if ((_45155_i >= _45164_tokens.len())) {
					_24a55da50_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_45164_tokens[_45155_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_45137_v.get()._field_Mutable=true;
					(_45155_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_250d2c934:;
			{
				(_45155_i)++;
				_45137_v.get()._field_Constant=true;
			}
		}
		else {
			_case_begin_250d2c879:;
			{
				_24a55da50_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_250d2c813:;
	};
	if ((_45155_i >= _45164_tokens.len())) {
		_24a55da50_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_2490591b7_VarDecl> _24a56158b_buildVar(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _48132_tokens) {
	jule::I64 _48217_i = 0LL;;
	jule::Ptr<_2490591b7_VarDecl> _48317_v = jule::new_ptr<_2490591b7_VarDecl>(_2490591b7_VarDecl{._field_Token=_48132_tokens[0LL], });;
	_24a56127d_buildVarBegin(_self_.ptr(), _48317_v,_48217_i,_48132_tokens);
	if ((_48217_i >= _48132_tokens.len())) {
		return nullptr;
	};
	_48132_tokens=_48132_tokens.slice(_48217_i);
	if (((_48132_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_48132_tokens[0LL].get()._field_Kind == jule::Str("&", 1)))) {
		_48317_v.get()._field_Reference=true;
		if ((_48132_tokens.len() == 1LL)) {
			return nullptr;
		};
		_48132_tokens=_48132_tokens.slice(1LL);
	};
	_24a560db5_buildVarCommon(_self_, _48317_v,_48132_tokens);
	return _48317_v;
}



inline jule::Ptr<_2490539a8_GenericDecl> _24a561899_buildGeneric(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _50337_tokens) {
	jule::Ptr<_2490539a8_GenericDecl> _50417_g = jule::new_ptr<_2490539a8_GenericDecl>(_2490539a8_GenericDecl{._field_Token=_50337_tokens[0LL], });;
	if ((_50417_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24a55da50_pushErr(_self_.ptr(), _50417_g.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_50417_g.get()._field_Ident=_50417_g.get()._field_Token.get()._field_Kind;
	if ((_50337_tokens.len() > 1LL)) {
		if ((_50337_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
			_24a55da50_pushErr(_self_.ptr(), _50337_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		if ((_50337_tokens.len() == 2LL)) {
			_24a55da50_pushErr(_self_.ptr(), _50337_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		jule::Slice<jule::Ptr<_23abd3d83_Token>> _52121_constraintTokens = _50337_tokens.slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _52222_parts;;
		jule::Slice<_23a8a5ca8_Log> _52229_errors;;
		std::tie(_52222_parts,_52229_errors) = _24a55b9d7_partsKind(_52121_constraintTokens,jule::Str("|", 1),true);
		if ((_52229_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52229_errors);
			return nullptr;
		};
		_50417_g.get()._field_Constraint=jule::new_ptr<_249053535_Constraint>(_249053535_Constraint{._field_Mask=jule::Slice<jule::Ptr<_2490463c4_TypeDecl>>::alloc(0LL,_52222_parts.len())});
		{
			auto &expr = _52222_parts;
			auto it = expr.begin();
			_iter_begin_250d3aab8:;
			if (it != expr.end()) {
				jule::Slice<jule::Ptr<_23abd3d83_Token>> _52825_part = *it;
				{
					jule::I64 _52925_i = 0LL;;
					jule::Ptr<_2490463c4_TypeDecl> _53026_kind;;
					std::tie(_53026_kind,std::ignore) = _24a560469_buildType(_self_, _52825_part,(&(_52925_i)),true);
					_50417_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_50417_g.get()._field_Constraint.get()._field_Mask,1);_50417_g.get()._field_Constraint.get()._field_Mask.__push(_53026_kind);;
					if ((_52925_i < _52825_part.len())) {
						_24a55da50_pushErr(_self_.ptr(), _52825_part[_52925_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				}
				_iter_next_250d3aab8:;
				++it;
				goto _iter_begin_250d3aab8;
			}
			_iter_end_250d3aab8:;
		};
	};
	return _50417_g;
}



inline jule::Slice<jule::Ptr<_2490539a8_GenericDecl>> _24a561c51_buildGenerics(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _54038_tokens, jule::Ptr<_23abd3d83_Token>& _54057_errorToken) {
	if ((_54038_tokens.len() == 0LL)) {
		_24a55da50_pushErr(_self_.ptr(), _54057_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _54618_parts;;
	jule::Slice<_23a8a5ca8_Log> _54625_errors;;
	std::tie(_54618_parts,_54625_errors) = _24a55bdc2_parts(_54038_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_54625_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_54625_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_2490539a8_GenericDecl>> _55217_generics = jule::Slice<jule::Ptr<_2490539a8_GenericDecl>>::alloc(0LL,_54618_parts.len());;
	{
		auto &expr = _54618_parts;
		auto it = expr.begin();
		_iter_begin_250d4156e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_23abd3d83_Token>> _55321_part = *it;
			{
				_55217_generics = jule::alloc_for_append(_55217_generics,1);_55217_generics.__push(_24a561899_buildGeneric(_self_, _55321_part));;
			}
			_iter_next_250d4156e:;
			++it;
			goto _iter_begin_250d4156e;
		}
		_iter_end_250d4156e:;
	};
	return _55217_generics;
}



inline jule::Ptr<_249056db8_ParamDecl> _24a56205e_buildSelfParam(_24a55d0e3_parser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _56037_tokens) {
	if ((_56037_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_249056db8_ParamDecl> _56517_param = jule::new_ptr<_249056db8_ParamDecl>();;
	jule::I64 _56817_i = 0LL;;
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_56517_param.get()._field_Mutable=true;
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_24a55da50_pushErr(&(*_self_), _56037_tokens[(_56817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Kind == jule::Str("&", 1))) {
		_56517_param.get()._field_Ident=jule::Str("&", 1);
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_24a55da50_pushErr(&(*_self_), _56037_tokens[(_56817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(27LLU))) {
		_56517_param.get()._field_Ident+=jule::Str("self", 4);
		_56517_param.get()._field_Token=_56037_tokens[_56817_i];
		(_56817_i)++;
		if ((_56817_i < _56037_tokens.len())) {
			_24a55da50_pushErr(&(*_self_), _56037_tokens[_56817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _56517_param;
}



inline void _24a562427_paramTypeBegin(_24a55d0e3_parser* _self_, jule::Ptr<_249056db8_ParamDecl>& _59938_param, jule::I64& _59962_i, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _59971_tokens) {
	for (; (_59962_i < _59971_tokens.len()); (_59962_i)++) {
		{
			jule::Ptr<_23abd3d83_Token> _60117_token = _59971_tokens[_59962_i];;
			if ((_60117_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60117_token.get()._field_Kind != jule::Str("...", 3))) {
				return;;
			};
			if (_59938_param.get()._field_Variadic) {
				_24a55da50_pushErr(&(*_self_), _60117_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_250d48554;
			};
			_59938_param.get()._field_Variadic=true;
		}
	_iter_next_250d48554:;
	}
	_iter_end_250d48554:;;
}



inline void _24a562746_buildParamType(jule::Ptr<_24a55d0e3_parser> _self_, jule::Ptr<_249056db8_ParamDecl>& _61639_param, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _61663_tokens) {
	jule::I64 _61717_i = 0LL;;
	_24a562427_paramTypeBegin(_self_.ptr(), _61639_param,_61717_i,_61663_tokens);
	if ((_61717_i >= _61663_tokens.len())) {
		return;;
	};
	std::tie(_61639_param.get()._field_Kind,std::ignore) = _24a560469_buildType(_self_, _61663_tokens,(&(_61717_i)),true);
	if ((_61717_i < _61663_tokens.len())) {
		_24a55da50_pushErr(_self_.ptr(), _61663_tokens[_61717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _24a562a65_buildParamBody(jule::Ptr<_24a55d0e3_parser> _self_, jule::Ptr<_249056db8_ParamDecl>& _62939_param, jule::Slice<jule::Ptr<_23abd3d83_Token>> _62962_tokens) {
	jule::Ptr<_23abd3d83_Token> _63017_tok = _62962_tokens[0LL];;
	_62939_param.get()._field_Ident=_63017_tok.get()._field_Kind;
	if ((_62962_tokens.len() == 1LL)) {
		return;;
	} else if ((_62962_tokens.len() < 3LL)) {
		_24a55da50_pushErr(_self_.ptr(), _63017_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_62962_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_24a562746_buildParamType(_self_, _62939_param,_62962_tokens);
		return;;
	};
	_62962_tokens=_62962_tokens.slice(2LL);
	_24a562746_buildParamType(_self_, _62939_param,_62962_tokens);
}



inline jule::Ptr<_249056db8_ParamDecl> _24a562d73_buildParam(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _64734_tokens) {
	jule::Ptr<_249056db8_ParamDecl> _64817_param = jule::new_ptr<_249056db8_ParamDecl>(_249056db8_ParamDecl{._field_Token=_64734_tokens[0LL], });;
	if ((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_64817_param.get()._field_Mutable=true;
		if ((_64734_tokens.len() == 1LL)) {
			_24a55da50_pushErr(_self_.ptr(), _64734_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_64734_tokens=_64734_tokens.slice(1LL);
		_64817_param.get()._field_Token=_64734_tokens[0LL];
	};
	if ((_64734_tokens.len() >= 3LL)) {
		if (((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_64817_param.get()._field_Token.get()._field_Kind == jule::Str("&", 1)))) {
			if ((_64734_tokens.len() == 1LL)) {
				_24a55da50_pushErr(_self_.ptr(), _64734_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_64734_tokens[1LL].get()._field_Id == static_cast<jule::U64>(2LLU)) && (_64734_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
				_64817_param.get()._field_Reference=true;
				_64734_tokens=_64734_tokens.slice(1LL);
				_64817_param.get()._field_Token=_64734_tokens[0LL];
			};
		};
	};
	if ((_64817_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_64817_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_24a562746_buildParamType(_self_, _64817_param,_64734_tokens);
	} else {
		_24a562a65_buildParamBody(_self_, _64817_param,_64734_tokens);
	};
	return _64817_param;
}



inline void _24a5630e8_checkParams(_24a55d0e3_parser* _self_, jule::Slice<jule::Ptr<_249056db8_ParamDecl>>& _69035_params) {
	{
		auto &expr = _69035_params;
		auto it = expr.begin();
		_iter_begin_250d589d7:;
		if (it != expr.end()) {
			jule::Ptr<_249056db8_ParamDecl> _69121_param = *it;
			{
				if ((_24905722b_IsSelf(_69121_param.ptr()) || (_69121_param.get()._field_Kind != nullptr))) {
					goto _iter_next_250d589d7;
				};
				if ((_69121_param.get()._field_Token == nullptr)) {
					_24a55da50_pushErr(&(*_self_), _69121_param.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_69121_param.get()._field_Kind=jule::new_ptr<_2490463c4_TypeDecl>(_2490463c4_TypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_24904698a_IdentTypeDecl>(_24904698a_IdentTypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Ident=_69121_param.get()._field_Token.get()._field_Kind, }))});
					_69121_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_250d589d7:;
			++it;
			goto _iter_begin_250d589d7;
		}
		_iter_end_250d589d7:;
	};
}



inline jule::Slice<jule::Ptr<_249056db8_ParamDecl>> _24a5634a0_buildParams(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _71036_tokens, jule::Bool _71054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _71118_parts;;
	jule::Slice<_23a8a5ca8_Log> _71125_errs;;
	std::tie(_71118_parts,_71125_errs) = _24a55bdc2_parts(_71036_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71125_errs);
	if ((_71118_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_249056db8_ParamDecl>> _71717_params = nullptr;;
	if ((_71054_method && (_71118_parts.len() > 0LL))) {
		jule::Ptr<_249056db8_ParamDecl> _71921_param = _24a56205e_buildSelfParam(_self_.ptr(), _71118_parts[0LL]);;
		if (((_71921_param != nullptr) && _24905722b_IsSelf(_71921_param.ptr()))) {
			_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_71921_param);;
			_71118_parts=_71118_parts.slice(1LL);
		};
	};
	{
		auto &expr = _71118_parts;
		auto it = expr.begin();
		_iter_begin_250d5e823:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_23abd3d83_Token>> _72621_part = *it;
			{
				jule::Ptr<_249056db8_ParamDecl> _72721_param = _24a562d73_buildParam(_self_, _72621_part);;
				if ((_72721_param != nullptr)) {
					_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_72721_param);;
				};
			}
			_iter_next_250d5e823:;
			++it;
			goto _iter_begin_250d5e823;
		}
		_iter_end_250d5e823:;
	};
	_24a5630e8_checkParams(_self_.ptr(), _71717_params);
	return _71717_params;
}



inline std::tuple<jule::Ptr<_2490494d7_RetTypeDecl>,jule::Bool> _24a563857_buildMultiRetType(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _73742_tokens, jule::I64& _73765_i) {
	jule::Ptr<_2490494d7_RetTypeDecl> _73775_t = jule::Ptr<_2490494d7_RetTypeDecl>();
	jule::Bool _73792_ok = jule::Bool();
	_73775_t=jule::new_ptr<_2490494d7_RetTypeDecl>();
	(_73765_i)++;
	if ((_73765_i >= _73742_tokens.len())) {
		(_73765_i)--;
		std::tie(_73775_t.get()._field_Kind,_73792_ok) = _24a560469_buildType(_self_, _73742_tokens,(&(_73765_i)),false);
		return std::make_tuple(_73775_t,_73792_ok);
	};
	(_73765_i)--;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _74717_rangeTokens = _24a55b355_range(_73765_i,jule::Str("(", 1),jule::Str(")", 1),_73742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _74918_parts;;
	jule::Slice<_23a8a5ca8_Log> _74925_errs;;
	std::tie(_74918_parts,_74925_errs) = _24a55bdc2_parts(_74717_rangeTokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_74925_errs);
	if ((_74918_parts.len() == 0LL)) {
		return std::make_tuple(_73775_t,_73792_ok);
	};
	jule::Slice<jule::Ptr<_2490463c4_TypeDecl>> _75517_types = jule::Slice<jule::Ptr<_2490463c4_TypeDecl>>::alloc(0LL,_74918_parts.len());;
	_73775_t.get()._field_Idents=jule::Slice<jule::Ptr<_23abd3d83_Token>>::alloc(0LL,_74918_parts.len());
	{
		auto &expr = _74918_parts;
		auto it = expr.begin();
		_iter_begin_250d64e22:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_23abd3d83_Token>> _75721_part = *it;
			{
				jule::Ptr<_23abd3d83_Token> _75821_token = _75721_part[0LL];;
				jule::I64 _75921_offset = 0LL;;
				if ((_75721_part.len() > 1LL)) {
					_75821_token=_75721_part[1LL];
					if ((_75821_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_75921_offset=2LL;
						if ((_75721_part.len() < 3LL)) {
							_24a55da50_pushErr(_self_.ptr(), _75821_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_250d64e22;
						};
					};
				};
				_75821_token=_75721_part[0LL];
				if ((_75921_offset != 2LL)) {
					jule::Ptr<_23abd3d83_Token> _77525_newToken = jule::new_ptr<_23abd3d83_Token>((*(_75821_token)));;
					_77525_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					_73775_t.get()._field_Idents = jule::alloc_for_append(_73775_t.get()._field_Idents,1);_73775_t.get()._field_Idents.__push(_77525_newToken);;
				} else {
					_73775_t.get()._field_Idents = jule::alloc_for_append(_73775_t.get()._field_Idents,1);_73775_t.get()._field_Idents.__push(_75821_token);;
				};
				jule::Ptr<_2490463c4_TypeDecl> _78222_tk;;
				std::tie(_78222_tk,std::ignore) = _24a560469_buildType(_self_, _75721_part,(&(_75921_offset)),true);
				if ((_75921_offset < _75721_part.len())) {
					_24a55da50_pushErr(_self_.ptr(), _75721_part[_75921_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_75517_types = jule::alloc_for_append(_75517_types,1);_75517_types.__push(_78222_tk);;
			}
			_iter_next_250d64e22:;
			++it;
			goto _iter_begin_250d64e22;
		}
		_iter_end_250d64e22:;
	};
	if ((_75517_types.len() > 1LL)) {
		_73775_t.get()._field_Kind=jule::new_ptr<_2490463c4_TypeDecl>(_2490463c4_TypeDecl{._field_Token=_73742_tokens[0LL], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_249047e64_TupleTypeDecl>(_249047e64_TupleTypeDecl{._field_Types=_75517_types}))});
	} else {
		_73775_t.get()._field_Kind=_75517_types[0LL];
	};
	_73792_ok=true;
	return std::make_tuple(_73775_t,_73792_ok);
}



inline std::tuple<jule::Ptr<_2490494d7_RetTypeDecl>,jule::Bool> _24a563c0e_buildRetType(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _80537_tokens, jule::I64& _80560_i) {
	jule::Ptr<_2490494d7_RetTypeDecl> _80570_t = jule::Ptr<_2490494d7_RetTypeDecl>();
	jule::Bool _80587_ok = jule::Bool();
	_80570_t=jule::new_ptr<_2490494d7_RetTypeDecl>();
	if ((_80560_i >= _80537_tokens.len())) {
		return std::make_tuple(_80570_t,_80587_ok);
	};
	jule::Ptr<_23abd3d83_Token> _81117_token = _80537_tokens[_80560_i];;
	{
		auto &_match_expr{ _81117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_250d6e239:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("{", 1))) {
					return std::make_tuple(_80570_t,_80587_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_250d6e5be:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("=", 1))) {
					return std::make_tuple(_80570_t,_80587_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_250d6e646:;
			{
				if (((_80560_i + 1LL) >= _80537_tokens.len())) {
					_24a55da50_pushErr(_self_.ptr(), _81117_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_80570_t,_80587_ok);
				};
				(_80560_i)++;
				_81117_token=_80537_tokens[_80560_i];
				if ((_81117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81117_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_250d723c4:;
							{
								std::tie(_80570_t,_80587_ok) = _24a563857_buildMultiRetType(_self_, _80537_tokens,_80560_i);
								return std::make_tuple(_80570_t,_80587_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_250d7244b:;
							{
								_24a55da50_pushErr(_self_.ptr(), _81117_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_80570_t,_80587_ok);
							}
						}
						_match_end_250d721c6:;
					};
				};
				std::tie(_80570_t.get()._field_Kind,_80587_ok) = _24a560469_buildType(_self_, _80537_tokens,(&(_80560_i)),true);
				return std::make_tuple(_80570_t,_80587_ok);
			}
		}
		_match_end_250d6d8a9:;
	};
	(_80560_i)++;
	_24a55da50_pushErr(_self_.ptr(), _81117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_80570_t,_80587_ok);
}



inline jule::Ptr<_2490581d8_FnDecl> _24a564160_buildFnPrototype(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _85041_tokens, jule::I64& _85064_i, jule::Bool _85072_method) {
	jule::Ptr<_2490581d8_FnDecl> _85117_f = jule::new_ptr<_2490581d8_FnDecl>(_2490581d8_FnDecl{._field_Token=_85041_tokens[_85064_i], });;
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		_85117_f.get()._field_Statically=true;
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_24a55da50_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85117_f.get()._field_Token=_85041_tokens[_85064_i];
	};
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_85117_f.get()._field_Unsafety=true;
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_24a55da50_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85117_f.get()._field_Token=_85041_tokens[_85064_i];
	};
	(_85064_i)++;
	if ((_85064_i >= _85041_tokens.len())) {
		_24a55da50_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_23abd3d83_Token> _88413_tok = _85041_tokens[_85064_i];;
	if ((_88413_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_24a55da50_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85117_f.get()._field_Ident=_88413_tok.get()._field_Kind;
	} else {
		_85117_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_23abd3d83_Token> _89613_errorToken = _85041_tokens[_85064_i];;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _89717_genericsTokens = _24a55b355_range(_85064_i,jule::Str("[", 1),jule::Str("]", 1),_85041_tokens);;
	if ((_89717_genericsTokens != nullptr)) {
		_85117_f.get()._field_Generics=_24a561c51_buildGenerics(_self_, _89717_genericsTokens,_89613_errorToken);
	};
	if ((_85041_tokens[_85064_i].get()._field_Kind != jule::Str("(", 1))) {
		_24a55da50_pushErr(_self_.ptr(), _85041_tokens[_85064_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _90717_paramsToks = _24a55b355_range(_85064_i,jule::Str("(", 1),jule::Str(")", 1),_85041_tokens);;
	if ((_90717_paramsToks.len() > 0LL)) {
		_85117_f.get()._field_Params=_24a5634a0_buildParams(_self_, _90717_paramsToks,_85072_method);
	};
	if ((_85064_i < _85041_tokens.len())) {
		jule::Ptr<_23abd3d83_Token> _91317_token = _85041_tokens[_85064_i];;
		if (((_91317_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_91317_token.get()._field_Kind == jule::Str("!", 1)))) {
			_85117_f.get()._field_Exceptional=true;
			(_85064_i)++;
		};
	};
	_85117_f.get()._field_Public=_24a56cc90_isPub(_85117_f.get()._field_Ident);
	std::tie(_85117_f.get()._field_Result,std::ignore) = _24a563c0e_buildRetType(_self_, _85041_tokens,_85064_i);
	return _85117_f;
}



inline jule::Ptr<_2490581d8_FnDecl> _24a5645b1_buildFn(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _92732_tokens, jule::Bool _92750_method, jule::Bool _92764_prototype) {
	jule::I64 _92817_i = 0LL;;
	jule::Ptr<_2490581d8_FnDecl> _92917_f = _24a564160_buildFnPrototype(_self_, _92732_tokens,_92817_i,_92750_method);;
	if (_92764_prototype) {
		if ((_92817_i < _92732_tokens.len())) {
			_24a55da50_pushErr(_self_.ptr(), _92732_tokens[(_92817_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _92917_f;
	} else if ((_92917_f == nullptr)) {
		return _92917_f;
	};
	if ((_92817_i >= _92732_tokens.len())) {
		_24a55d423_stop(_self_.ptr());
		_24a55da50_pushErr(_self_.ptr(), _92917_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _94517_blockTokens = _24a55b355_range(_92817_i,jule::Str("{", 1),jule::Str("}", 1),_92732_tokens);;
	if ((_94517_blockTokens != nullptr)) {
		_92917_f.get()._field_Scope=_24a55eab7_buildScope(_self_, _94517_blockTokens,_92732_tokens[(_92817_i - 1LL)]);
		_92917_f.get()._field_Scope.get()._field_Unsafety=_92917_f.get()._field_Unsafety;
		if ((_92817_i < _92732_tokens.len())) {
			_24a55da50_pushErr(_self_.ptr(), _92732_tokens[_92817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_24a55d423_stop(_self_.ptr());
		_24a55da50_pushErr(_self_.ptr(), _92917_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _92917_f;
}



inline jule::Slice<jule::Ptr<_23abd3d83_Token>> _24a5648be_getUseDeclSelectors(_24a55d0e3_parser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _96142_tokens) {
	jule::I64 _96217_i = 0LL;;
	_96142_tokens=_24a55b355_range(_96217_i,jule::Str("{", 1),jule::Str("}", 1),_96142_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _96418_parts;;
	jule::Slice<_23a8a5ca8_Log> _96425_errs;;
	std::tie(_96418_parts,_96425_errs) = _24a55bdc2_parts(_96142_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_96425_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_96425_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _97017_selectors = jule::Slice<jule::Ptr<_23abd3d83_Token>>::alloc(0LL,_96418_parts.len());;
	{
		auto &expr = _96418_parts;
		auto it = expr.begin();
		_iter_begin_250d8a50d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_23abd3d83_Token>> _97121_part = *it;
			{
				if ((_97121_part.len() > 1LL)) {
					_24a55da50_pushErr(&(*_self_), _97121_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_23abd3d83_Token> _97521_tok = _97121_part[0LL];;
				if (((_97521_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97521_tok.get()._field_Id != static_cast<jule::U64>(27LLU)))) {
					_24a55da50_pushErr(&(*_self_), _97521_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_24a55dd6e_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_250d8a50d;
				};
				_97017_selectors = jule::alloc_for_append(_97017_selectors,1);_97017_selectors.__push(_97521_tok);;
			}
			_iter_next_250d8a50d:;
			++it;
			goto _iter_begin_250d8a50d;
		}
		_iter_end_250d8a50d:;
	};
	return _97017_selectors;
}



inline void _24a564bdd_buildCppUseDecl(_24a55d0e3_parser* _self_, jule::Ptr<_24905de14_UseDecl>& _98639_decl, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _98656_tokens) {
	if ((_98656_tokens.len() > 1LL)) {
		_24a55da50_pushErr(&(*_self_), _98656_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_23abd3d83_Token> _99013_token = _98656_tokens[0LL];;
	if (((_99013_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || ((_99013_token.get()._field_Kind[0LL] != '`') && (_99013_token.get()._field_Kind[0LL] != '\"')))) {
		_24a55da50_pushErr(&(*_self_), _99013_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_98639_decl.get()._field_CppLinked=true;
	_98639_decl.get()._field_LinkPath=_99013_token.get()._field_Kind.slice(1LL,(_99013_token.get()._field_Kind.len() - 1LL));
}



inline void _24a56500c_buildStdUseDecl(_24a55d0e3_parser* _self_, jule::Ptr<_24905de14_UseDecl>& _99939_decl, jule::Slice<jule::Ptr<_23abd3d83_Token>> _99959_tokens) {
	_99939_decl.get()._field_Std=true;
	jule::Ptr<_23abd3d83_Token> _100217_token = _99959_tokens[0LL];;
	if ((_99959_tokens.len() < 3LL)) {
		_24a55da50_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_99959_tokens=_99959_tokens.slice(2LL);
	_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_250d94a78:;
			{
				_24a55da50_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_250d94b00:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("}", 1))) {
					_24a55da50_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_23abd3d83_Token>> _101921_selectors = nullptr;;
				std::tie(_99959_tokens,_101921_selectors) = _24a55b5ec_rangeLast(_99959_tokens);
				_99939_decl.get()._field_Selected=_24a5648be_getUseDeclSelectors(&(*_self_), _101921_selectors);
				if ((_99959_tokens.len() == 0LL)) {
					_24a55da50_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_24a55da50_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_24a55da50_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_250d94b77:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("*", 1))) {
					_24a55da50_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_24a55da50_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_24a55da50_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_24a55da50_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99939_decl.get()._field_Full=true;
			}
		}
		_match_end_250d94a01:;
	};
	_99939_decl.get()._field_LinkPath=(jule::Str("std::", 5) + _24a55cc2a_tokstoa(_99959_tokens));
}



inline void _24a56532b_buildIdentUseDecl(_24a55d0e3_parser* _self_, jule::Ptr<_24905de14_UseDecl>& _106141_decl, jule::Slice<jule::Ptr<_23abd3d83_Token>> _106161_tokens) {
	_106141_decl.get()._field_Std=false;
	jule::Ptr<_23abd3d83_Token> _106417_token = _106161_tokens[(_106161_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_250da0039:;
			{
				_24a55da50_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_250da0831:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("}", 1))) {
					_24a55da50_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_23abd3d83_Token>> _107521_selectors = nullptr;;
				std::tie(_106161_tokens,_107521_selectors) = _24a55b5ec_rangeLast(_106161_tokens);
				_106141_decl.get()._field_Selected=_24a5648be_getUseDeclSelectors(&(*_self_), _107521_selectors);
				if ((_106161_tokens.len() == 0LL)) {
					_24a55da50_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_24a55da50_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_24a55da50_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_250da0897:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("*", 1))) {
					_24a55da50_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_24a55da50_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_24a55da50_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_24a55da50_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106141_decl.get()._field_Full=true;
			}
		}
		_match_end_250da0523:;
	};
	_106141_decl.get()._field_LinkPath=_24a55cc2a_tokstoa(_106161_tokens);
}



inline void _24a56564a_parseUseDecl(_24a55d0e3_parser* _self_, jule::Ptr<_24905de14_UseDecl>& _112436_decl, jule::Slice<jule::Ptr<_23abd3d83_Token>> _112456_tokens) {
	if (_112436_decl.get()._field_CppLinked) {
		_24a564bdd_buildCppUseDecl(&(*_self_), _112436_decl,_112456_tokens);
		return;;
	};
	jule::Ptr<_23abd3d83_Token> _113017_token = _112456_tokens[0LL];;
	if ((_113017_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24a55da50_pushErr(&(*_self_), _113017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_112456_tokens.len() > 2LL) && (_112456_tokens[1LL].get()._field_Id == static_cast<jule::U64>(12LLU)))) {
		_112436_decl.get()._field_Alias=_113017_token.get()._field_Kind;
		if ((_112456_tokens[2LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_24a55da50_pushErr(&(*_self_), _113017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_24a55dd6e_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_112456_tokens=_112456_tokens.slice(2LL);
		_113017_token=_112456_tokens[0LL];
	};
	;
	{
		
		if ((_113017_token.get()._field_Kind == jule::Str("std", 3))) {
			_case_begin_250dacb5c:;
			{
				_24a56500c_buildStdUseDecl(&(*_self_), _112436_decl,_112456_tokens);
			}
		}
		else {
			_case_begin_250db0005:;
			{
				_24a56532b_buildIdentUseDecl(&(*_self_), _112436_decl,_112456_tokens);
			}
		}
		_match_end_250daee8e:;
	};
}



inline jule::Ptr<_24905de14_UseDecl> _24a565a02_buildUseDecl(_24a55d0e3_parser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _115835_tokens, jule::Bool _115853_cpp_linked) {
	jule::Ptr<_24905de14_UseDecl> _115917_decl = jule::new_ptr<_24905de14_UseDecl>(_24905de14_UseDecl{._field_Token=_115835_tokens[0LL], ._field_CppLinked=_115853_cpp_linked, });;
	if ((_115835_tokens.len() < 2LL)) {
		_24a55da50_pushErr(&(*_self_), _115917_decl.get()._field_Token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_115835_tokens=_115835_tokens.slice(1LL);
	_24a56564a_parseUseDecl(&(*_self_), _115917_decl,_115835_tokens);
	return _115917_decl;
}



inline jule::Ptr<_2490463c4_TypeDecl> _24a565da9_buildTypeEnumItemKind(jule::Ptr<_24a55d0e3_parser> _self_, jule::I64& _117246_i, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _117259_tokens) {
	jule::I64 _117317_braceN = 0LL;;
	jule::I64 _117413_exprStart = _117246_i;;
	for (; (_117246_i < _117259_tokens.len()); (_117246_i)++) {
		{
			jule::Ptr<_23abd3d83_Token> _117617_t = _117259_tokens[_117246_i];;
			if ((_117617_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _117617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_251447328:;
						{
							(_117317_braceN)++;
							goto _iter_next_251446b63;
						}
					}
					else {
						_case_begin_251447c30:;
						{
							(_117317_braceN)--;
						}
					}
					_match_end_251447a10:;
				};
			};
			if ((_117317_braceN > 0LL)) {
				goto _iter_next_251446b63;
			};
			if (((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_117246_i + 1LL) >= _117259_tokens.len()))) {
				jule::Slice<jule::Ptr<_23abd3d83_Token>> _119225_kindTokens = nullptr;;
				if ((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_119225_kindTokens=_117259_tokens.slice(_117413_exprStart,_117246_i);
				} else {
					_119225_kindTokens=_117259_tokens.slice(_117413_exprStart);
				};
				jule::I64 _119825_j = 0LL;;
				jule::Ptr<_2490463c4_TypeDecl> _119926_kind;;
				std::tie(_119926_kind,std::ignore) = _24a560469_buildType(_self_, _119225_kindTokens,(&(_119825_j)),true);
				if ((_119825_j < _119225_kindTokens.len())) {
					_24a55da50_pushErr(_self_.ptr(), _119225_kindTokens[_119825_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _119926_kind;
			};
		}
	_iter_next_251446b63:;
	}
	_iter_end_251446b63:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_2490608b6_TypeEnumItemDecl>> _24a5661b7_buildTypeEnumItems(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _120943_tokens) {
	jule::Slice<jule::Ptr<_2490608b6_TypeEnumItemDecl>> _121017_items = jule::Slice<jule::Ptr<_2490608b6_TypeEnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _121117_i = 0LL;;
	for (; (_121117_i < _120943_tokens.len()); (_121117_i)++) {
		{
			jule::Ptr<_23abd3d83_Token> _121321_t = _120943_tokens[_121117_i];;
			jule::Ptr<_2490608b6_TypeEnumItemDecl> _121421_item = jule::new_ptr<_2490608b6_TypeEnumItemDecl>();;
			_121421_item.get()._field_Token=_121321_t;
			if (((_121421_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(2LLU)) && ((_120943_tokens.len() - _121117_i) > 2LL))) {
				_121421_item.get()._field_Ident=_121421_item.get()._field_Token.get()._field_Kind;
				_121321_t=_120943_tokens[(_121117_i + 1LL)];
				if ((_121321_t.get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_121117_i+=2LL;
					if (((_121117_i >= _120943_tokens.len()) || (_120943_tokens[_121117_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
						_24a55da50_pushErr(_self_.ptr(), _121321_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_25144d131;
					};
				};
			};
			_121421_item.get()._field_Kind=_24a565da9_buildTypeEnumItemKind(_self_, _121117_i,_120943_tokens);
			_121017_items = jule::alloc_for_append(_121017_items,1);_121017_items.__push(_121421_item);;
		}
	_iter_next_25144d131:;
	}
	_iter_end_25144d131:;;
	return _121017_items;
}



inline jule::Ptr<_249060ab4_TypeEnumDecl> _24a5664c5_buildTypeEnumDecl(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _123342_tokens) {
	jule::I64 _123417_i = 1LL;;
	jule::Ptr<_249060ab4_TypeEnumDecl> _123517_e = jule::new_ptr<_249060ab4_TypeEnumDecl>(_249060ab4_TypeEnumDecl{._field_Token=_123342_tokens[_123417_i], });;
	if ((_123517_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24a55da50_pushErr(_self_.ptr(), _123517_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Ident=_123517_e.get()._field_Token.get()._field_Kind;
	_123417_i+=3LL;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _124517_itemTokens = _24a55b355_range(_123417_i,jule::Str("{", 1),jule::Str("}", 1),_123342_tokens);;
	if ((_124517_itemTokens == nullptr)) {
		_24a55d423_stop(_self_.ptr());
		_24a55da50_pushErr(_self_.ptr(), _123517_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _123517_e;
	} else if ((_123417_i < _123342_tokens.len())) {
		_24a55da50_pushErr(_self_.ptr(), _123342_tokens[_123417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Public=_24a56cc90_isPub(_123517_e.get()._field_Ident);
	_123517_e.get()._field_End=_123342_tokens[(_123417_i - 1LL)];
	_123517_e.get()._field_Items=_24a5661b7_buildTypeEnumItems(_self_, _124517_itemTokens);
	return _123517_e;
}



inline jule::Ptr<_24904a8e5_Expr> _24a56687c_buildEnumItemExpr(jule::Ptr<_24a55d0e3_parser> _self_, jule::I64& _126042_i, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _126055_tokens) {
	jule::I64 _126117_braceN = 0LL;;
	jule::I64 _126213_exprStart = _126042_i;;
	for (; (_126042_i < _126055_tokens.len()); (_126042_i)++) {
		{
			jule::Ptr<_23abd3d83_Token> _126417_t = _126055_tokens[_126042_i];;
			if ((_126417_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _126417_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_251459879:;
						{
							(_126117_braceN)++;
							goto _iter_next_2514591b4;
						}
					}
					else {
						_case_begin_25145a281:;
						{
							(_126117_braceN)--;
						}
					}
					_match_end_25145a061:;
				};
			};
			if ((_126117_braceN > 0LL)) {
				goto _iter_next_2514591b4;
			};
			if (((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_126042_i + 1LL) >= _126055_tokens.len()))) {
				jule::Slice<jule::Ptr<_23abd3d83_Token>> _128025_exprTokens = nullptr;;
				if ((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart,_126042_i);
				} else {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart);
				};
				return _24a55e17c_buildExpr(_self_, _128025_exprTokens);
			};
		}
	_iter_next_2514591b4:;
	}
	_iter_end_2514591b4:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_24905e387_EnumItemDecl>> _24a566b8a_buildEnumItems(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _129239_tokens) {
	jule::Slice<jule::Ptr<_24905e387_EnumItemDecl>> _129317_items = jule::Slice<jule::Ptr<_24905e387_EnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _129417_i = 0LL;;
	for (; (_129417_i < _129239_tokens.len()); (_129417_i)++) {
		{
			jule::Ptr<_23abd3d83_Token> _129621_t = _129239_tokens[_129417_i];;
			jule::Ptr<_24905e387_EnumItemDecl> _129721_item = jule::new_ptr<_24905e387_EnumItemDecl>();;
			_129721_item.get()._field_Token=_129621_t;
			if ((_129721_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
				_24a55da50_pushErr(_self_.ptr(), _129721_item.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_129721_item.get()._field_Ident=_129721_item.get()._field_Token.get()._field_Kind;
			if ((((_129417_i + 1LL) >= _129239_tokens.len()) || (_129239_tokens[(_129417_i + 1LL)].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				if (((_129417_i + 1LL) < _129239_tokens.len())) {
					(_129417_i)++;
				};
				_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
				goto _iter_next_25145e0ba;
			};
			(_129417_i)++;
			_129621_t=_129239_tokens[_129417_i];
			(_129417_i)++;
			if ((_129621_t.get()._field_Id != static_cast<jule::U64>(11LLU))) {
				_24a55da50_pushErr(_self_.ptr(), _129621_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_25145e0ba;
			};
			if (((_129417_i >= _129239_tokens.len()) || (_129239_tokens[_129417_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_24a55da50_pushErr(_self_.ptr(), _129621_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_25145e0ba;
			};
			_129721_item.get()._field_Expr=_24a56687c_buildEnumItemExpr(_self_, _129417_i,_129239_tokens);
			_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
		}
	_iter_next_25145e0ba:;
	}
	_iter_end_25145e0ba:;;
	return _129317_items;
}



inline jule::Ptr<_24905edb0_EnumDecl> _24a566e98_buildEnumDecl(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _132938_tokens) {
	if ((_132938_tokens.len() < 3LL)) {
		_24a55da50_pushErr(_self_.ptr(), _132938_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_24905edb0_EnumDecl> _133417_e = jule::new_ptr<_24905edb0_EnumDecl>(_24905edb0_EnumDecl{._field_Token=_132938_tokens[1LL], });;
	if ((_133417_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24a55da50_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Ident=_133417_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134217_i = 2LL;;
	if ((_132938_tokens[_134217_i].get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_134217_i)++;
		if ((_134217_i >= _132938_tokens.len())) {
			_24a55da50_pushErr(_self_.ptr(), _132938_tokens[(_134217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _133417_e;
		};
		std::tie(_133417_e.get()._field_Kind,std::ignore) = _24a560469_buildType(_self_, _132938_tokens,(&(_134217_i)),true);
		if ((_134217_i >= _132938_tokens.len())) {
			_24a55d423_stop(_self_.ptr());
			_24a55da50_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _133417_e;
		};
	} else {
		_133417_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _135917_itemTokens = _24a55b355_range(_134217_i,jule::Str("{", 1),jule::Str("}", 1),_132938_tokens);;
	if ((_135917_itemTokens == nullptr)) {
		_24a55d423_stop(_self_.ptr());
		_24a55da50_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _133417_e;
	} else if ((_134217_i < _132938_tokens.len())) {
		_24a55da50_pushErr(_self_.ptr(), _132938_tokens[_134217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Public=_24a56cc90_isPub(_133417_e.get()._field_Ident);
	_133417_e.get()._field_End=_132938_tokens[(_134217_i - 1LL)];
	_133417_e.get()._field_Items=_24a566b8a_buildEnumItems(_self_, _135917_itemTokens);
	return _133417_e;
}



inline jule::Any _24a5672a6_buildNodeEnumDecl(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _137442_tokens) {
	if (((_137442_tokens.len() > 3LL) && (_137442_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		if ((_137442_tokens[3LL].get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return static_cast<jule::Any>(_24a5664c5_buildTypeEnumDecl(_self_, _137442_tokens));
		};
	};
	return static_cast<jule::Any>(_24a566e98_buildEnumDecl(_self_, _137442_tokens));
}



inline jule::Ptr<_249061114_FieldDecl> _24a5675b4_buildField(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _138334_tokens) {
	jule::Ptr<_249061114_FieldDecl> _138417_f = jule::new_ptr<_249061114_FieldDecl>();;
	_138417_f.get()._field_Mutable=(_138334_tokens[0LL].get()._field_Id == static_cast<jule::U64>(35LLU));
	if (_138417_f.get()._field_Mutable) {
		if ((_138334_tokens.len() == 1LL)) {
			_24a55da50_pushErr(_self_.ptr(), _138334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138334_tokens=_138334_tokens.slice(1LL);
	};
	_138417_f.get()._field_Token=_138334_tokens[0LL];
	if ((_138417_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24a55da50_pushErr(_self_.ptr(), _138417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138417_f.get()._field_Ident=_138417_f.get()._field_Token.get()._field_Kind;
	if ((_138334_tokens.len() == 1LL)) {
		_24a55da50_pushErr(_self_.ptr(), _138334_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_138334_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_24a55da50_pushErr(_self_.ptr(), _138334_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138334_tokens=_138334_tokens.slice(2LL);
	jule::I64 _141217_i = 0LL;;
	std::tie(_138417_f.get()._field_Kind,std::ignore) = _24a560469_buildType(_self_, _138334_tokens,(&(_141217_i)),true);
	if ((_141217_i < _138334_tokens.len())) {
		jule::Ptr<_23abd3d83_Token> _141517_token = _138334_tokens[_141217_i];;
		if (((_141517_token.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_141517_token.get()._field_Kind != jule::Str("=", 1)))) {
			_24a55da50_pushErr(_self_.ptr(), _138334_tokens[_141217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_141217_i)++;
		if ((_141217_i >= _138334_tokens.len())) {
			_24a55da50_pushErr(_self_.ptr(), _141517_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138334_tokens=_138334_tokens.slice(_141217_i);
		_138417_f.get()._field_Default=_24a55e17c_buildExpr(_self_, _138334_tokens);
	};
	_138417_f.get()._field_Public=_24a56cc90_isPub(_138417_f.get()._field_Ident);
	return _138417_f;
}



inline jule::Slice<jule::Ptr<_249061114_FieldDecl>> _24a5678c2_buildStructDeclFields(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _143245_tokens) {
	jule::Slice<jule::Ptr<_249061114_FieldDecl>> _143317_fields = nullptr;;
	jule::Slice<jule::Ptr<_24a541170_stmt>> _143417_stmts = _24a541516_splitStmts(_143245_tokens);;
	{
		auto &expr = _143417_stmts;
		auto it = expr.begin();
		_iter_begin_25147d0d9:;
		if (it != expr.end()) {
			jule::Ptr<_24a541170_stmt> _143521_stmt = *it;
			{
				_143245_tokens=_143521_stmt.get()._field_tokens;
				jule::Ptr<_249061114_FieldDecl> _143721_f = _24a5675b4_buildField(_self_, _143245_tokens);;
				_143317_fields = jule::alloc_for_append(_143317_fields,1);_143317_fields.__push(_143721_f);;
			}
			_iter_next_25147d0d9:;
			++it;
			goto _iter_begin_25147d0d9;
		}
		_iter_end_25147d0d9:;
	};
	return _143317_fields;
}



inline jule::Ptr<_249061972_StructDecl> _24a567bd0_buildStructDecl(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _144340_tokens) {
	if ((_144340_tokens.len() < 3LL)) {
		_24a55da50_pushErr(_self_.ptr(), _144340_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _144917_i = 1LL;;
	jule::Ptr<_249061972_StructDecl> _145017_s = jule::new_ptr<_249061972_StructDecl>(_249061972_StructDecl{._field_Token=_144340_tokens[_144917_i], });;
	if ((_145017_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24a55da50_pushErr(_self_.ptr(), _145017_s.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_144917_i)++;
	if ((_144917_i >= _144340_tokens.len())) {
		_24a55da50_pushErr(_self_.ptr(), _144340_tokens[_144917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _145017_s;
	};
	_145017_s.get()._field_Ident=_145017_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_23abd3d83_Token> _146413_errorToken = _144340_tokens[_144917_i];;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _146517_genericsTokens = _24a55b355_range(_144917_i,jule::Str("[", 1),jule::Str("]", 1),_144340_tokens);;
	if ((_146517_genericsTokens != nullptr)) {
		_145017_s.get()._field_Generics=_24a561c51_buildGenerics(_self_, _146517_genericsTokens,_146413_errorToken);
	};
	if ((_144917_i >= _144340_tokens.len())) {
		_24a55da50_pushErr(_self_.ptr(), _144340_tokens[(_144917_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145017_s;
	};
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _147517_bodyTokens = _24a55b355_range(_144917_i,jule::Str("{", 1),jule::Str("}", 1),_144340_tokens);;
	if ((_147517_bodyTokens == nullptr)) {
		_24a55d423_stop(_self_.ptr());
		_24a55da50_pushErr(_self_.ptr(), _145017_s.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145017_s;
	};
	if ((_144917_i < _144340_tokens.len())) {
		_24a55da50_pushErr(_self_.ptr(), _144340_tokens[_144917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_145017_s.get()._field_Public=_24a56cc90_isPub(_145017_s.get()._field_Ident);
	_145017_s.get()._field_Fields=_24a5678c2_buildStructDeclFields(_self_, _147517_bodyTokens);
	_145017_s.get()._field_End=_144340_tokens[(_144917_i - 1LL)];
	return _145017_s;
}



inline void _24a567e55_checkMethodReceiver(_24a55d0e3_parser* _self_, jule::Ptr<_2490581d8_FnDecl>& _149139_f) {
	if (_149139_f.get()._field_Statically) {
		if (((_149139_f.get()._field_Params.len() > 0LL) && _24905722b_IsSelf(_149139_f.get()._field_Params[0LL].ptr()))) {
			_24a55da50_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_149139_f.get()._field_Params.len() == 0LL)) {
		_24a55da50_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_249056db8_ParamDecl> _150313_param = _149139_f.get()._field_Params[0LL];;
	if ((!(_24905722b_IsSelf(_150313_param.ptr())))) {
		_24a55da50_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_2490581d8_FnDecl>> _24a568263_buildTraitMethods(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _151041_tokens) {
	jule::Slice<jule::Ptr<_2490581d8_FnDecl>> _151117_methods = nullptr;;
	jule::Slice<jule::Ptr<_24a541170_stmt>> _151217_stmts = _24a541516_splitStmts(_151041_tokens);;
	{
		auto &expr = _151217_stmts;
		auto it = expr.begin();
		_iter_begin_25148d7ae:;
		if (it != expr.end()) {
			jule::Ptr<_24a541170_stmt> _151321_stmt = *it;
			{
				_151041_tokens=_151321_stmt.get()._field_tokens;
				if ((_151041_tokens.len() == 0LL)) {
					goto _iter_next_25148d7ae;
				};
				jule::Ptr<_2490581d8_FnDecl> _151821_f = _24a5645b1_buildFn(_self_, _151041_tokens,true,true);;
				if ((_151821_f != nullptr)) {
					if (_24905853a_IsAnon(_151821_f.ptr())) {
						_24a55da50_pushErr(_self_.ptr(), _151821_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_24a567e55_checkMethodReceiver(_self_.ptr(), _151821_f);
					if ((_151821_f.get()._field_Generics.len() > 0LL)) {
						_24a55da50_pushErr(_self_.ptr(), _151821_f.get()._field_Token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_151117_methods = jule::alloc_for_append(_151117_methods,1);_151117_methods.__push(_151821_f);;
				};
			}
			_iter_next_25148d7ae:;
			++it;
			goto _iter_begin_25148d7ae;
		}
		_iter_end_25148d7ae:;
	};
	return _151117_methods;
}



inline jule::Ptr<_24906207c_TraitDecl> _24a568571_buildTraitDecl(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _153339_tokens) {
	if ((_153339_tokens.len() < 3LL)) {
		_24a55da50_pushErr(_self_.ptr(), _153339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_24906207c_TraitDecl> _153817_t = jule::new_ptr<_24906207c_TraitDecl>(_24906207c_TraitDecl{._field_Token=_153339_tokens[1LL], });;
	if ((_153817_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24a55da50_pushErr(_self_.ptr(), _153817_t.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Ident=_153817_t.get()._field_Token.get()._field_Kind;
	jule::I64 _154617_i = 2LL;;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _154717_bodyTokens = _24a55b355_range(_154617_i,jule::Str("{", 1),jule::Str("}", 1),_153339_tokens);;
	if ((_154717_bodyTokens == nullptr)) {
		_24a55d423_stop(_self_.ptr());
		_24a55da50_pushErr(_self_.ptr(), _153817_t.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_154617_i < _153339_tokens.len())) {
		_24a55da50_pushErr(_self_.ptr(), _153339_tokens[_154617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Public=_24a56cc90_isPub(_153817_t.get()._field_Ident);
	_153817_t.get()._field_Methods=_24a568263_buildTraitMethods(_self_, _154717_bodyTokens);
	_153817_t.get()._field_End=_153339_tokens[(_154617_i - 1LL)];
	return _153817_t;
}



inline jule::Ptr<_2490581d8_FnDecl> _24a56887e_buildCppLinkFn(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _156338_tokens) {
	_156338_tokens=_156338_tokens.slice(1LL);
	jule::Ptr<_2490581d8_FnDecl> _156517_f = _24a5645b1_buildFn(_self_, _156338_tokens,false,true);;
	if ((_156517_f != nullptr)) {
		if (_24905853a_IsAnon(_156517_f.ptr())) {
			_24a55da50_pushErr(_self_.ptr(), _156517_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_156517_f.get()._field_Public=false;
		_156517_f.get()._field_CppLinked=true;
	};
	return _156517_f;
}



inline jule::Ptr<_2490591b7_VarDecl> _24a568b8c_buildCppLinkVar(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _157639_tokens) {
	_157639_tokens=_157639_tokens.slice(1LL);
	jule::Ptr<_2490591b7_VarDecl> _157817_v = _24a56158b_buildVar(_self_, _157639_tokens);;
	if ((_157817_v != nullptr)) {
		_157817_v.get()._field_Public=false;
		_157817_v.get()._field_CppLinked=true;
		if ((_157817_v.get()._field_Expr != nullptr)) {
			_24a55da50_pushErr(_self_.ptr(), _157817_v.get()._field_Token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _157817_v;
}



inline jule::Ptr<_249061972_StructDecl> _24a568e9a_buildCppLinkStruct(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _158942_tokens) {
	_158942_tokens=_158942_tokens.slice(1LL);
	jule::Ptr<_249061972_StructDecl> _159117_s = _24a567bd0_buildStructDecl(_self_, _158942_tokens);;
	if ((_159117_s != nullptr)) {
		_159117_s.get()._field_Public=false;
		{
			auto &expr = _159117_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_25149e517:;
			if (it != expr.end()) {
				jule::Ptr<_249061114_FieldDecl> _159425_f = *it;
				{
					_159425_f.get()._field_Public=true;
				}
				_iter_next_25149e517:;
				++it;
				goto _iter_begin_25149e517;
			}
			_iter_end_25149e517:;
		};
		_159117_s.get()._field_CppLinked=true;
	};
	return _159117_s;
}



inline jule::Ptr<_24905ca28_TypeAliasDecl> _24a5692a8_buildCppLinkTypeAlias(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _160345_tokens) {
	_160345_tokens=_160345_tokens.slice(1LL);
	jule::Ptr<_24905ca28_TypeAliasDecl> _160517_t = _24a560777_buildTypeAliasDecl(_self_, _160345_tokens);;
	if ((_160517_t != nullptr)) {
		_160517_t.get()._field_Public=false;
		_160517_t.get()._field_CppLinked=true;
	};
	return _160517_t;
}



inline jule::Ptr<_24905de14_UseDecl> _24a5695b6_buildCppLinkUse(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _161339_tokens) {
	if ((_161339_tokens.len() == 1LL)) {
		_24a55da50_pushErr(_self_.ptr(), _161339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_161339_tokens=_161339_tokens.slice(1LL);
	;
	return _24a565a02_buildUseDecl(_self_.ptr(), _161339_tokens,true);
}



inline jule::Any _24a5698c4_buildCppLink(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _162437_tokens) {
	jule::Ptr<_23abd3d83_Token> _162517_token = _162437_tokens[0LL];;
	if ((_162437_tokens.len() == 1LL)) {
		_24a55da50_pushErr(_self_.ptr(), _162517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_162517_token=_162437_tokens[1LL];
	{
		auto &_match_expr{ _162517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_2514a440c:;
			{
				return static_cast<jule::Any>(_24a56887e_buildCppLinkFn(_self_, _162437_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_2514a5595:;
			{
				return static_cast<jule::Any>(_24a568b8c_buildCppLinkVar(_self_, _162437_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_2514a560b:;
			{
				return static_cast<jule::Any>(_24a568e9a_buildCppLinkStruct(_self_, _162437_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_2514a5672:;
			{
				return static_cast<jule::Any>(_24a5692a8_buildCppLinkTypeAlias(_self_, _162437_tokens));
			}
		}
		else {
			_case_begin_2514a5441:;
			{
				_24a55da50_pushErr(_self_.ptr(), _162517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_2514a4330:;
	};
	return nullptr;
}



inline jule::Ptr<_2490581d8_FnDecl> _24a569bd2_getMethod(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _164834_tokens) {
	jule::I64 _164917_i = 0LL;;
	jule::Ptr<_23abd3d83_Token> _165017_token = _164834_tokens[_164917_i];;
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		if (((_164917_i + 1LL) >= _164834_tokens.len())) {
			_24a55da50_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_164917_i)++;
		_165017_token=_164834_tokens[_164917_i];
	};
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_164917_i + 1LL) >= _164834_tokens.len())) {
			_24a55da50_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_164917_i)++;
		_165017_token=_164834_tokens[_164917_i];
	};
	if ((_165017_token.get()._field_Id != static_cast<jule::U64>(32LLU))) {
		_24a55da50_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_2490581d8_FnDecl> _167417_f = _24a5645b1_buildFn(_self_, _164834_tokens,true,false);;
	if (((_167417_f != nullptr) && _24905853a_IsAnon(_167417_f.ptr()))) {
		_24a55da50_pushErr(_self_.ptr(), _167417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _167417_f;
}



inline void _24a56a001_parseImplBody(jule::Ptr<_24a55d0e3_parser> _self_, jule::Ptr<_249062687_Impl>& _168138_ipl, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _168155_tokens) {
	jule::Slice<jule::Ptr<_24a541170_stmt>> _168217_stmts = _24a541516_splitStmts(_168155_tokens);;
	{
		auto &expr = _168217_stmts;
		auto it = expr.begin();
		_iter_begin_2514ae208:;
		if (it != expr.end()) {
			jule::Ptr<_24a541170_stmt> _168321_stmt = *it;
			{
				_168155_tokens=_168321_stmt.get()._field_tokens;
				jule::Ptr<_23abd3d83_Token> _168521_token = _168155_tokens[0LL];;
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(38LLU)) {
						_case_begin_2514aea66:;
						{
							_24a55e710_pushDirective(_self_.ptr(), _24a55e48a_buildDirective(_self_.ptr(), _168155_tokens));
							goto _iter_next_2514ae208;
						}
					}
					_match_end_2514b0418:;
				};
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_2514b15a1:;
						{
							jule::Ptr<_2490591b7_VarDecl> _169425_v = _24a56158b_buildVar(_self_, _168155_tokens);;
							if ((_169425_v != nullptr)) {
								_168138_ipl.get()._field_Statics = jule::alloc_for_append(_168138_ipl.get()._field_Statics,1);_168138_ipl.get()._field_Statics.__push(_169425_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_2514b0616:;
						{
							jule::Ptr<_2490581d8_FnDecl> _170125_f = _24a569bd2_getMethod(_self_, _168155_tokens);;
							if ((_170125_f != nullptr)) {
								_24a567e55_checkMethodReceiver(_self_.ptr(), _170125_f);
								_24a56a892_applyFnMeta(_self_.ptr(), _170125_f);
								_168138_ipl.get()._field_Methods = jule::alloc_for_append(_168138_ipl.get()._field_Methods,1);_168138_ipl.get()._field_Methods.__push(_170125_f);;
							};
						}
					}
					else {
						_case_begin_2514b09ac:;
						{
							_24a55da50_pushErr(_self_.ptr(), _168521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_2514ae208;
						}
					}
					_match_end_2514b0b99:;
				};
			}
			_iter_next_2514ae208:;
			++it;
			goto _iter_begin_2514ae208;
		}
		_iter_end_2514ae208:;
	};
}



inline jule::Ptr<_249062687_Impl> _24a56a30e_buildImpl(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _171433_tokens) {
	jule::Ptr<_23abd3d83_Token> _171517_token = _171433_tokens[0LL];;
	if ((_171433_tokens.len() < 2LL)) {
		_24a55da50_pushErr(_self_.ptr(), _171517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _172117_i = 1LL;;
	jule::Ptr<_2490463c4_TypeDecl> _172318_base;;
	jule::Bool _172328_ok;;
	std::tie(_172318_base,_172328_ok) = _24a560469_buildType(_self_, _171433_tokens,(&(_172117_i)),true);
	if ((!(_172328_ok))) {
		return nullptr;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_24a55da50_pushErr(_self_.ptr(), _171517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_249062687_Impl> _173217_ipl = jule::new_ptr<_249062687_Impl>(_249062687_Impl{._field_Base=_172318_base, });;
	_171517_token=_171433_tokens[_172117_i];
	if ((_171517_token.get()._field_Id != static_cast<jule::U64>(12LLU))) {
		if (((_171517_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_171517_token.get()._field_Kind == jule::Str("{", 1)))) {
			std::tie(_173217_ipl.get()._field_Base,_173217_ipl.get()._field_Dest) = std::make_tuple(_173217_ipl.get()._field_Dest,_173217_ipl.get()._field_Base);
			goto _julec_label_body;
		};
		_24a55d423_stop(_self_.ptr());
		_24a55da50_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_172117_i)++;
	if ((_172117_i >= _171433_tokens.len())) {
		_24a55d423_stop(_self_.ptr());
		_24a55da50_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_173217_ipl.get()._field_Dest,_172328_ok) = _24a560469_buildType(_self_, _171433_tokens,(&(_172117_i)),true);
	if ((!(_172328_ok))) {
		return nullptr;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_24a55d423_stop(_self_.ptr());
		_24a55da50_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _177017_bodyTokens = _24a55b355_range(_172117_i,jule::Str("{", 1),jule::Str("}", 1),_171433_tokens);;
	if ((_177017_bodyTokens == nullptr)) {
		_24a55d423_stop(_self_.ptr());
		_24a55da50_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_172117_i < _171433_tokens.len())) {
		_24a55da50_pushErr(_self_.ptr(), _171433_tokens[_172117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_173217_ipl.get()._field_End=_171433_tokens[(_172117_i - 1LL)];
	_24a56a001_parseImplBody(_self_, _173217_ipl,_177017_bodyTokens);
	return _173217_ipl;
}



inline jule::Any _24a56a61c_buildNodeData(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _178538_tokens) {
	jule::Ptr<_23abd3d83_Token> _178617_token = _178538_tokens[0LL];;
	{
		auto &_match_expr{ _178617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_2514c2b45:;
			{
				jule::Ptr<_2490581d8_FnDecl> _179021_f = _24a5645b1_buildFn(_self_, _178538_tokens,false,false);;
				if ((_179021_f != nullptr)) {
					_179021_f.get()._field_Global=true;
					if (_24905853a_IsAnon(_179021_f.ptr())) {
						_24a55da50_pushErr(_self_.ptr(), _179021_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return static_cast<jule::Any>(_179021_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_2514c2bab:;
			{
				return static_cast<jule::Any>(_24a56158b_buildVar(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_2514c2c22:;
			{
				return static_cast<jule::Any>(_24a560777_buildTypeAliasDecl(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_2514c344d:;
			{
				return _24a5672a6_buildNodeEnumDecl(_self_, _178538_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_2514c34b4:;
			{
				return static_cast<jule::Any>(_24a567bd0_buildStructDecl(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_2514c352a:;
			{
				return static_cast<jule::Any>(_24a568571_buildTraitDecl(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_2514c3591:;
			{
				return static_cast<jule::Any>(_24a56a30e_buildImpl(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_2514c3618:;
			{
				return _24a5698c4_buildCppLink(_self_, _178538_tokens);
			}
		}
		else {
			_case_begin_2514c2a35:;
			{
				_24a55da50_pushErr(_self_.ptr(), _178617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_2514c29d0:;
	};
}



inline void _24a56a892_applyFnMeta(_24a55d0e3_parser* _self_, jule::Ptr<_2490581d8_FnDecl>& _182135_f) {
	_182135_f.get()._field_Directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _24a56ab17_applyMeta(_24a55d0e3_parser* _self_, _24900c731_Node& _182633_node) {
	{
		auto &_match_expr{ _182633_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_2490591b7_VarDecl>>()) {
			_case_begin_2514c9960:;
			{
				jule::Ptr<_2490591b7_VarDecl> _182921_v = _182633_node._field_Data.operator jule::Ptr<_2490591b7_VarDecl>();;
				if ((_182921_v == nullptr)) {
					return;;
				};
				_182921_v.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2490581d8_FnDecl>>()) {
			_case_begin_2514c99d7:;
			{
				jule::Ptr<_2490581d8_FnDecl> _183621_f = _182633_node._field_Data.operator jule::Ptr<_2490581d8_FnDecl>();;
				if ((_183621_f == nullptr)) {
					return;;
				};
				_24a56a892_applyFnMeta(&(*_self_), _183621_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249061972_StructDecl>>()) {
			_case_begin_2514c9a5e:;
			{
				jule::Ptr<_249061972_StructDecl> _184221_sd = _182633_node._field_Data.operator jule::Ptr<_249061972_StructDecl>();;
				if ((_184221_sd == nullptr)) {
					return;;
				};
				_184221_sd.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_2514c9751:;
	};
}



inline void _24a56ad8c_pushUseDecl(jule::Ptr<_24a55d0e3_parser> _self_, jule::Ptr<_24905de14_UseDecl>& _185136_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push(_185136_decl);;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_24a55da50_pushErr(_self_.ptr(), _185136_decl.get()._field_Token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_24a55dd6e_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _24a56b19a_pushMetaNodes(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _185938_tokens) {
	{
		auto &_match_expr{ _185938_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_2514d0bec:;
			{
				;
				jule::Ptr<_24905de14_UseDecl> _186321_decl = _24a565a02_buildUseDecl(_self_.ptr(), _185938_tokens,false);;
				_24a56ad8c_pushUseDecl(_self_, _186321_decl);
				return true;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_2514d0c74:;
			{
				if (((_185938_tokens.len() > 1LL) && (_185938_tokens[1LL].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_24905de14_UseDecl> _186825_decl = _24a5695b6_buildCppLinkUse(_self_, _185938_tokens);;
					_24a56ad8c_pushUseDecl(_self_, _186825_decl);
					return true;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_2514d0ceb:;
			{
				_24a55e710_pushDirective(_self_.ptr(), _24a55e48a_buildDirective(_self_.ptr(), _185938_tokens));
				return true;
			}
		}
		_match_end_2514d0aba:;
	};
	return false;
}



inline _24900c731_Node _24a56b4a8_parseNode(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _187934_st) {
	_24900c731_Node _188017_node = _24900c731_Node{._field_Token=_187934_st[0LL], };;
	if (_24a56b19a_pushMetaNodes(_self_, _187934_st)) {
		return _188017_node;
	};
	jule::Any _188817_data = _24a56a61c_buildNodeData(_self_, _187934_st);;
	if ((_188817_data == nullptr)) {
		return _188017_node;
	};
	_188017_node._field_Data=_188817_data;
	_24a56ab17_applyMeta(_self_.ptr(), _188017_node);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_24a55da50_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _188017_node;
}



inline void _24a56b72d_appendNode(jule::Ptr<_24a55d0e3_parser> _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _190335_st) {
	if ((_190335_st.len() == 0LL)) {
		return;;
	};
	_24900c731_Node _190717_node = _24a56b4a8_parseNode(_self_, _190335_st);;
	if (((_190717_node._field_Data == nullptr) || _24a55d687_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_190717_node);;
}



inline void _24a56bb90_removeRange(_24a55d0e3_parser* _self_, jule::I64 _191430_i, jule::Str _191438_kind, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _191450_tokens, jule::Slice<jule::I64>& _191473_ranges) {
	jule::Str _191513_close = _24a55c169_getCloseKindOfBrace(_191438_kind);;
	for (; (_191430_i >= 0LL); (_191430_i)--) {
		{
			jule::Ptr<_23abd3d83_Token> _191717_tok = _191450_tokens[_191473_ranges[_191430_i]];;
			if ((_191717_tok.get()._field_Kind != _191513_close)) {
				goto _iter_next_2514db103;
			};
			_191473_ranges=jule::append(_191473_ranges.slice(0LL,_191430_i),_191473_ranges.slice((_191430_i + 1LL)));
			goto _iter_end_2514db103;
		}
	_iter_next_2514db103:;
	}
	_iter_end_2514db103:;;
}



inline void _24a56c058_pushWrongOrderCloseErr(_24a55d0e3_parser* _self_, jule::Ptr<_23abd3d83_Token>& _192642_t, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _192654_tokens, jule::Slice<jule::I64>& _192673_ranges) {
	{
		auto &_match_expr{ _192654_tokens[_192673_ranges[(_192673_ranges.len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_2514dd446:;
			{
				_24a55da50_pushErr(&(*_self_), _192642_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_2514dd4bd:;
			{
				_24a55da50_pushErr(&(*_self_), _192642_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_2514dd545:;
			{
				_24a55da50_pushErr(&(*_self_), _192642_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_2514dd314:;
	};
}



inline void _24a56c4ba_pushRangeClose(_24a55d0e3_parser* _self_, jule::Ptr<_23abd3d83_Token> _193733_t, jule::Str _193744_left, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _193756_tokens, jule::Slice<jule::I64>& _193779_ranges) {
	jule::I64 _193813_n = _193779_ranges.len();;
	if ((_193813_n == 0LL)) {
		{
			auto &_match_expr{ _193733_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_2514e134a:;
				{
					_24a55da50_pushErr(&(*_self_), _193733_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_2514e13c2:;
				{
					_24a55da50_pushErr(&(*_self_), _193733_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_2514e1449:;
				{
					_24a55da50_pushErr(&(*_self_), _193733_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_2514e1290:;
		};
		return;;
	} else if ((_193756_tokens[_193779_ranges[(_193813_n - 1LL)]].get()._field_Kind != _193744_left)) {
		_24a56c058_pushWrongOrderCloseErr(&(*_self_), _193733_t,_193756_tokens,_193779_ranges);
	};
	_24a56bb90_removeRange(&(*_self_), static_cast<jule::I64>((_193813_n - 1LL)),_193733_t.get()._field_Kind,_193756_tokens,_193779_ranges);
}



inline void _24a56c740_checkRanges(_24a55d0e3_parser* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _195531_tokens) {
	jule::Slice<jule::I64> _195617_ranges = nullptr;;
	{
		auto &expr = _195531_tokens;
		auto it = expr.begin();
		_iter_begin_2514e49d0:;
		if (it != expr.end()) {
			jule::I64 _195813_i = it - expr.begin();
			jule::Ptr<_23abd3d83_Token> &_195816_token = *it;
			{
				if ((_195816_token.get()._field_Id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_2514e49d0;
				};
				{
					auto &_match_expr{ _195816_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_2514e5c78:;
						{
							_195617_ranges = jule::alloc_for_append(_195617_ranges,1);_195617_ranges.__push(_195813_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_2514e5ddd:;
						{
							_24a56c4ba_pushRangeClose(&(*_self_), _195816_token,jule::Str("(", 1),_195531_tokens,_195617_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_2514e5e54:;
						{
							_24a56c4ba_pushRangeClose(&(*_self_), _195816_token,jule::Str("{", 1),_195531_tokens,_195617_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_2514e5eba:;
						{
							_24a56c4ba_pushRangeClose(&(*_self_), _195816_token,jule::Str("[", 1),_195531_tokens,_195617_ranges);
						}
					}
					_match_end_2514e5b68:;
				};
			}
			_iter_next_2514e49d0:;
			++it;
			_195813_i++;
			goto _iter_begin_2514e49d0;
		}
		_iter_end_2514e49d0:;
	};
	{
		auto &expr = _195617_ranges;
		auto it = expr.begin();
		_iter_begin_2514e4969:;
		if (it != expr.end()) {
			jule::I64 _197616_i = *it;
			{
				jule::Ptr<_23abd3d83_Token> _197717_token = _195531_tokens[_197616_i];;
				{
					auto &_match_expr{ _197717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_2514e894b:;
						{
							_24a55da50_pushErr(&(*_self_), _197717_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_2514e89b2:;
						{
							_24a55da50_pushErr(&(*_self_), _197717_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_2514e8a28:;
						{
							_24a55da50_pushErr(&(*_self_), _197717_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_2514e86d7:;
				};
			}
			_iter_next_2514e4969:;
			++it;
			goto _iter_begin_2514e4969;
		}
		_iter_end_2514e4969:;
	};
}



inline void _24a56c9b5_parse(jule::Ptr<_24a55d0e3_parser> _self_, jule::Ptr<_23abd921d_File>& _198930_f) {
	_self_.get()._field_ast=jule::new_ptr<_24900ba82_Ast>(_24900ba82_Ast{._field_File=_198930_f, });
	_24a56c740_checkRanges(_self_.ptr(), _198930_f.get()._field_Tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_24a541170_stmt>> _199917_stmts = _24a541516_splitStmts(_198930_f.get()._field_Tokens);;
	jule::I64 _200217_i = 0LL;;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_24a541170_stmt> _200421_stmt = _199917_stmts[_200217_i];;
			if ((_200421_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200421_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(38LLU))) {
				goto _iter_end_2514ebde4;
			};
			if ((!(_23a8a7bcd_IsTopDirective(_200421_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_2514ebde4;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_24a55e48a_buildDirective(_self_.ptr(), _200421_stmt.get()._field_tokens));;
		}
	_iter_next_2514ebde4:;
	}
	_iter_end_2514ebde4:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_24a541170_stmt> _202121_stmt = _199917_stmts[_200217_i];;
			_24a56b72d_appendNode(_self_, _202121_stmt.get()._field_tokens);
			if (_24a55d687_stopped(_self_.ptr())) {
				goto _iter_end_25150026b;
			};
		}
	_iter_next_25150026b:;
	}
	_iter_end_25150026b:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_24a55da50_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _24a55d0e3_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _24a56e3ce_pushErr(_24a56dd07_typeBuilder* _self_, jule::Ptr<_23abd3d83_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*_self_)._field_err) {
		_24a55da50_pushErr((*_self_)._field_p.ptr(), _4126_token,_4141_fmt,jule::Slice<jule::Any>());
	};
}



inline void _24a56e6ed_pushSuggestion(_24a56dd07_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*_self_)._field_err) {
		_24a55dd6e_pushSuggestion((*_self_)._field_p.ptr(), _4833_fmt,jule::Any(_4846_args));
	};
}



inline jule::Ptr<_2490463c4_TypeDecl> _24a56e962_buildPrim(_24a56dd07_typeBuilder* _self_) {
	jule::Ptr<_2490463c4_TypeDecl> _5517_t = _24a56d873_buildPrimType((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _5517_t;
}



inline jule::Ptr<_2490463c4_TypeDecl> _24a56ebc6_buildNamespace(_24a56dd07_typeBuilder* _self_) {
	jule::Ptr<_2490463c4_TypeDecl> _6117_t = jule::new_ptr<_2490463c4_TypeDecl>(_2490463c4_TypeDecl{._field_Token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_249047491_NamespaceTypeDecl> _6517_nst = jule::new_ptr<_249047491_NamespaceTypeDecl>();;
	jule::I64 _6617_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_23abd3d83_Token> _6821_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_6617_n & 1LL) == 0LL)) {
				if ((_6821_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
					_24a56e3ce_pushErr(&(*_self_), _6821_token,jule::Str("invalid syntax", 14));
					_24a56e6ed_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_6517_nst.get()._field_Idents = jule::alloc_for_append(_6517_nst.get()._field_Idents,1);_6517_nst.get()._field_Idents.__push(_6821_token);;
			} else if ((_6821_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
				goto _iter_end_2515066b2;
			};
			(_6617_n)++;
		}
	_iter_next_2515066b2:;
	}
	_iter_end_2515066b2:;;
	_6517_nst.get()._field_Idents=_6517_nst.get()._field_Idents.slice(0LL,(_6517_nst.get()._field_Idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_6517_nst.get()._field_Kind=_24a570413_buildIdent(&(*_self_));
	_6117_t.get()._field_Kind=static_cast<jule::Any>(_6517_nst);
	return _6117_t;
}



inline jule::Slice<jule::Ptr<_2490463c4_TypeDecl>> _24a56ee3a_buildGenerics(_24a56dd07_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_23abd3d83_Token> _9413_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_9413_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_9413_token.get()._field_Kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _9917_parts = _24a57019e_identGenerics(&(*_self_));;
	if ((_9917_parts.len() == 0LL)) {
		_24a56e3ce_pushErr(&(*_self_), _9413_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_2490463c4_TypeDecl>> _10517_types = jule::Slice<jule::Ptr<_2490463c4_TypeDecl>>::alloc(0LL,_9917_parts.len());;
	{
		auto &expr = _9917_parts;
		auto it = expr.begin();
		_iter_begin_25150e995:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_23abd3d83_Token>> _10621_part = *it;
			{
				jule::I64 _10721_j = 0LL;;
				jule::Ptr<_2490463c4_TypeDecl> _10822_t;;
				std::tie(_10822_t,std::ignore) = _24a560469_buildType((*_self_)._field_p, _10621_part,(&(_10721_j)),true);
				if ((_10721_j < _10621_part.len())) {
					_24a56e3ce_pushErr(&(*_self_), _10621_part[_10721_j],jule::Str("invalid syntax", 14));
				};
				_10517_types = jule::alloc_for_append(_10517_types,1);_10517_types.__push(_10822_t);;
			}
			_iter_next_25150e995:;
			++it;
			goto _iter_begin_25150e995;
		}
		_iter_end_25150e995:;
	};
	return _10517_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _24a57019e_identGenerics(_24a56dd07_typeBuilder* _self_) {
	jule::I64 _11813_first = (*((*_self_)._field_i));;
	jule::I64 _11917_rangeN = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_23abd3d83_Token> _12117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_12117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _12117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_251513adc:;
						{
							(_11917_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_251513b64:;
						{
							(_11917_rangeN)--;
						}
					}
					_match_end_251513878:;
				};
			};
			if ((_11917_rangeN == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_25151268a;
			};
		}
	_iter_next_25151268a:;
	}
	_iter_end_25151268a:;;
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _13517_tokens = (*_self_)._field_tokens.slice((_11813_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _13618_parts;;
	jule::Slice<_23a8a5ca8_Log> _13625_errors;;
	std::tie(_13618_parts,_13625_errors) = _24a55bdc2_parts(_13517_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_13625_errors);
	};
	return _13618_parts;
}



inline jule::Ptr<_2490463c4_TypeDecl> _24a570413_buildIdent(_24a56dd07_typeBuilder* _self_) {
	jule::Bool _14417_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_14417_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return _24a56ebc6_buildNamespace(&(*_self_));
	};
	jule::Ptr<_23abd3d83_Token> _14817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_24904698a_IdentTypeDecl> _14917_it = jule::new_ptr<_24904698a_IdentTypeDecl>(_24904698a_IdentTypeDecl{._field_Token=_14817_token, ._field_Ident=_14817_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_2490463c4_TypeDecl> _15517_itd = jule::new_ptr<_2490463c4_TypeDecl>(_2490463c4_TypeDecl{._field_Token=_14817_token, ._field_Kind=static_cast<jule::Any>(_14917_it)});;
	if (((!(_14417_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_14917_it.get()._field_Generics=_24a56ee3a_buildGenerics(&(*_self_));
		return _15517_itd;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_24a56e3ce_pushErr(&(*_self_), _14817_token,jule::Str("invalid syntax", 14));
		return _15517_itd;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_24a56e3ce_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _15517_itd;
	};
	jule::Ptr<_2490470d9_SubIdentTypeDecl> _17217_sit = jule::new_ptr<_2490470d9_SubIdentTypeDecl>();;
	_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_14917_it);;
	jule::Ptr<_2490463c4_TypeDecl> _17417_ident = _24a570413_buildIdent(&(*_self_));;
	{
		auto &_match_expr{ _17417_ident.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_24904698a_IdentTypeDecl>>()) {
			_case_begin_25151e9e9:;
			{
				_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_17417_ident.get()._field_Kind.operator jule::Ptr<_24904698a_IdentTypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2490470d9_SubIdentTypeDecl>>()) {
			_case_begin_25151ea60:;
			{
				_17217_sit.get()._field_Idents=jule::append(_17217_sit.get()._field_Idents,_17417_ident.get()._field_Kind.operator jule::Ptr<_2490470d9_SubIdentTypeDecl>().get()._field_Idents);
			}
		}
		_match_end_25151e961:;
	};
	return jule::new_ptr<_2490463c4_TypeDecl>(_2490463c4_TypeDecl{._field_Token=_14817_token, ._field_Kind=static_cast<jule::Any>(_17217_sit)});
}



inline jule::Ptr<_2490463c4_TypeDecl> _24a570677_buildCppLink(_24a56dd07_typeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_24a56e3ce_pushErr(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_2490463c4_TypeDecl> _19317_t = _24a570413_buildIdent(&(*_self_));;
	_19317_t.get()._field_Kind.operator jule::Ptr<_24904698a_IdentTypeDecl>().get()._field_CppLinked=true;
	return _19317_t;
}



inline jule::Ptr<_2490463c4_TypeDecl> _24a5708db_buildFn(_24a56dd07_typeBuilder* _self_) {
	jule::Ptr<_23abd3d83_Token> _19917_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_2490581d8_FnDecl> _20017_f = _24a564160_buildFnPrototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_20017_f == nullptr)) {
		return nullptr;
	};
	if ((!(_24905853a_IsAnon(_20017_f.ptr())))) {
		_24a56e3ce_pushErr(&(*_self_), _20017_f.get()._field_Token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_2490463c4_TypeDecl>(_2490463c4_TypeDecl{._field_Token=_19917_token, ._field_Kind=static_cast<jule::Any>(_20017_f)});
}



inline jule::Ptr<_2490463c4_TypeDecl> _24a570b50_buildPtr(_24a56dd07_typeBuilder* _self_) {
	jule::Ptr<_23abd3d83_Token> _21417_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_24a56e3ce_pushErr(&(*_self_), _21417_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_2490463c4_TypeDecl>(_2490463c4_TypeDecl{._field_Token=_21417_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_249048250_PtrTypeDecl>(_249048250_PtrTypeDecl{._field_Elem=nullptr}))});
	};
	jule::Ptr<_2490463c4_TypeDecl> _23117_elem = _24a571d3d_step(&(*_self_));;
	if ((_23117_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_2490463c4_TypeDecl>(_2490463c4_TypeDecl{._field_Token=_21417_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_249048250_PtrTypeDecl>(_249048250_PtrTypeDecl{._field_Elem=_23117_elem}))});
}



inline jule::Ptr<_2490463c4_TypeDecl> _24a570db4_buildSptr(_24a56dd07_typeBuilder* _self_) {
	jule::Ptr<_23abd3d83_Token> _24517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_24a56e3ce_pushErr(&(*_self_), _24517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_2490463c4_TypeDecl> _25217_elem = _24a571d3d_step(&(*_self_));;
	if ((_25217_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_2490463c4_TypeDecl>(_2490463c4_TypeDecl{._field_Token=_24517_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_24904777c_SptrTypeDecl>(_24904777c_SptrTypeDecl{._field_Elem=_25217_elem}))});
}



inline jule::Ptr<_2490463c4_TypeDecl> _24a571128_buildOp(_24a56dd07_typeBuilder* _self_) {
	jule::Ptr<_23abd3d83_Token> _26617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _26617_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_25152e014:;
			{
				return _24a570b50_buildPtr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_25152e07a:;
			{
				return _24a570db4_buildSptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_25152e0e1:;
			{
				return jule::new_ptr<_2490463c4_TypeDecl>(_2490463c4_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_24904777c_SptrTypeDecl>(_24904777c_SptrTypeDecl{._field_Elem=_24a570db4_buildSptr(&(*_self_))}))});
			}
		}
		else {
			_case_begin_25152de59:;
			{
				_24a56e3ce_pushErr(&(*_self_), _26617_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_25152dde3:;
	};
}



inline jule::Ptr<_2490463c4_TypeDecl> _24a57138c_buildSlc(_24a56dd07_typeBuilder* _self_) {
	jule::Ptr<_23abd3d83_Token> _28517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_2490463c4_TypeDecl> _28717_elem = _24a571d3d_step(&(*_self_));;
	if ((_28717_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_2490463c4_TypeDecl>(_2490463c4_TypeDecl{._field_Token=_28517_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_249047b78_SlcTypeDecl>(_249047b78_SlcTypeDecl{._field_Elem=_28717_elem}))});
}



inline jule::Ptr<_2490463c4_TypeDecl> _24a571601_buildArr(_24a56dd07_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _30017_exprTokens = _24a55b355_range((*((*_self_)._field_i)),jule::Str("[", 1),jule::Str("]", 1),(*_self_)._field_tokens);;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_24a56e3ce_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Ptr<_2490463c4_TypeDecl> _30617_elem = _24a571d3d_step(&(*_self_));;
	if ((_30617_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_2490488d2_ArrTypeDecl> _31117_arrt = jule::new_ptr<_2490488d2_ArrTypeDecl>(_2490488d2_ArrTypeDecl{._field_Elem=_30617_elem, });;
	jule::Ptr<_23abd3d83_Token> _31517_token = _30017_exprTokens[0LL];;
	if ((((_30017_exprTokens.len() == 1LL) && (_31517_token.get()._field_Id == static_cast<jule::U64>(7LLU))) && (_31517_token.get()._field_Kind == jule::Str("...", 3)))) {
	} else {
		_31117_arrt.get()._field_Size=_24a55e17c_buildExpr((*_self_)._field_p, _30017_exprTokens);
	};
	return jule::new_ptr<_2490463c4_TypeDecl>(_2490463c4_TypeDecl{._field_Token=_31517_token, ._field_Kind=static_cast<jule::Any>(_31117_arrt)});
}



inline jule::Ptr<_2490463c4_TypeDecl> _24a571865_buildMap(_24a56dd07_typeBuilder* _self_) {
	jule::Ptr<_23abd3d83_Token> _32917_mapToken = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_24a56e3ce_pushErr(&(*_self_), _32917_mapToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _33717_keyTokens = _24a55b355_range((*((*_self_)._field_i)),jule::Str("[", 1),jule::Str("]", 1),(*_self_)._field_tokens);;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_24a56e3ce_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	} else if ((_33717_keyTokens.len() == 0LL)) {
		_24a56e3ce_pushErr(&(*_self_), _32917_mapToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Ptr<_249049130_MapTypeDecl> _34617_mapt = jule::new_ptr<_249049130_MapTypeDecl>();;
	jule::I64 _34717_j = 0LL;;
	jule::Ptr<_2490463c4_TypeDecl> _34818_keyt;;
	jule::Bool _34828_ok;;
	std::tie(_34818_keyt,_34828_ok) = _24a560469_buildType((*_self_)._field_p, _33717_keyTokens,(&(_34717_j)),(*_self_)._field_err);
	if ((!(_34828_ok))) {
		return nullptr;
	} else if ((_34717_j < _33717_keyTokens.len())) {
		_24a56e3ce_pushErr(&(*_self_), _33717_keyTokens[_34717_j],jule::Str("invalid syntax", 14));
	};
	_34617_mapt.get()._field_Key=_34818_keyt;
	jule::Ptr<_2490463c4_TypeDecl> _35618_valt;;
	std::tie(_35618_valt,_34828_ok) = _24a560469_buildType((*_self_)._field_p, (*_self_)._field_tokens,(*_self_)._field_i,(*_self_)._field_err);
	if ((!(_34828_ok))) {
		return nullptr;
	};
	_34617_mapt.get()._field_Val=_35618_valt;
	return jule::new_ptr<_2490463c4_TypeDecl>(_2490463c4_TypeDecl{._field_Token=_32917_mapToken, ._field_Kind=static_cast<jule::Any>(_34617_mapt)});
}



inline jule::Ptr<_2490463c4_TypeDecl> _24a571ac9_buildEnumerable(_24a56dd07_typeBuilder* _self_) {
	jule::Ptr<_23abd3d83_Token> _36817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_36817_token.get()._field_Id != static_cast<jule::U64>(3LLU))) || (_36817_token.get()._field_Kind != jule::Str("[", 1)))) {
		_24a56e3ce_pushErr(&(*_self_), _36817_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_36817_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_36817_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_36817_token.get()._field_Kind == jule::Str("]", 1)))) {
		return _24a57138c_buildSlc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	return _24a571601_buildArr(&(*_self_));
}



inline jule::Ptr<_2490463c4_TypeDecl> _24a571d3d_step(_24a56dd07_typeBuilder* _self_) {
	jule::Ptr<_23abd3d83_Token> _38513_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _38513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_251544e5e:;
			{
				return _24a56e962_buildPrim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_25154546a:;
			{
				return _24a570413_buildIdent(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_2515454d1:;
			{
				return _24a570677_buildCppLink(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_251545338:;
			{
				return _24a5708db_buildFn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_25154539e:;
			{
				return _24a571128_buildOp(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_251544733:;
			{
				return _24a571ac9_buildEnumerable(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_251544799:;
			{
				return _24a571865_buildMap(&(*_self_));
			}
		}
		else {
			_case_begin_2515446bc:;
			{
				((*((*_self_)._field_i)))++;
				_24a56e3ce_pushErr(&(*_self_), _38513_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_251544656:;
	};
}



inline std::tuple<jule::Ptr<_2490463c4_TypeDecl>,jule::Bool> _24a5720a2_build(_24a56dd07_typeBuilder* _self_) {
	jule::Bool _41044_ok = jule::Bool();
	jule::Ptr<_2490463c4_TypeDecl> _41117_root = _24a571d3d_step(&(*_self_));;
	if ((_41117_root == nullptr)) {
		_41044_ok = false;
		return std::make_tuple(_24a56d60e_buildVoidType(),_41044_ok);
	};
	_41044_ok = true;
	return std::make_tuple(_41117_root,_41044_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _24a56dd07_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _249d9196b_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _249d9331e_pushErr(_249d92cbe_directiveEval* _self_, jule::Ptr<_23abd3d83_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_23a8a5ca8_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_23a8a61e8_Logf(_2137_fmt,jule::Any(_2150_args)), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _249d936c6_splitOperans(_249d92cbe_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>>::alloc(0LL,10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3351_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_23abd3d83_Token> _4017_b = _3351_tokens[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_25156d2ea:;
						{
							(_3717_rangeN)++;
							goto _iter_next_25156c195;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_25156d372:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_25156d130:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_25156c195;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_25156c195:;
	}
	_iter_end_25156c195:;;
	if ((_3817_last < _3351_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last));;
	} else {
		_249d9331e_pushErr(&(*_self_), _3351_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _249d939d4_evalDirectiveIdent(_249d92cbe_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_25157173d:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7333_ident)) {
					return true;
				};
			}
			_iter_next_25157173d:;
			++it;
			goto _iter_begin_25157173d;
		}
		_iter_end_25157173d:;
	};
	return false;
}



inline jule::Bool _249d93ce2_evalDirectivePart(_249d92cbe_directiveEval* _self_, jule::Slice<jule::Ptr<_23abd3d83_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_8740_part[0LL].get()._field_Kind == jule::Str("!", 1)));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_249d9331e_pushErr(&(*_self_), _8740_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _249d939d4_evalDirectiveIdent(&(*_self_), _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _249d94056_eval(_249d92cbe_directiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_Args.len() == 0LL)) {
		_249d9331e_pushErr(&(*_self_), (*_self_)._field_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _11317_logicalOrParts = _249d936c6_splitOperans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_Args);;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logicalOrParts;
		auto it = expr.begin();
		_iter_begin_251578019:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_23abd3d83_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _12021_logicalAndParts = _249d936c6_splitOperans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logicalAndParts;
					auto it = expr.begin();
					_iter_begin_251579a43:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_23abd3d83_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_23abd3d83_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_Kind == jule::Str("(", 1)))) {
								jule::Ptr<_23abd3d83_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_Kind != jule::Str(")", 1)))) {
									_249d9331e_pushErr(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_andPart=_12525_andPart.slice(1LL,(_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _249d93ce2_evalDirectivePart(&(*_self_), _12525_andPart));
						}
						_iter_next_251579a43:;
						++it;
						goto _iter_begin_251579a43;
					}
					_iter_end_251579a43:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_251578019:;
			++it;
			goto _iter_begin_251578019;
		}
		_iter_end_251578019:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _249d92cbe_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_249e8d958_JuleImporter> static__249eea531_New(_249d9196b_CompileInfo _5819_info) {
	jule::Ptr<_249e8d958_JuleImporter> _5917_imp = jule::new_ptr<_249e8d958_JuleImporter>(_249e8d958_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_23a8de9d4_PathStdlib}), });;
	_249d92285_initVars(_5917_imp.get()._field_vars,_5819_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_249c1117b_ImportInfo>> _24a00be16_AllPackages(_249e8d958_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _24a0176c4_SetModPath(_249e8d958_JuleImporter* _self_, jule::Str _7529_path) {
	(*_self_)._field_mod=_7529_path;
}



inline jule::Str _24a03d453_GetModPath(_249e8d958_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _24a101714_ModById(_249e8d958_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*_self_)._field_mods[_8322_id];
}



inline jule::Ptr<_249c1117b_ImportInfo> _24a112ed9_GetImport(_249e8d958_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_251582650:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;
				};
			}
			_iter_next_251582650:;
			++it;
			goto _iter_begin_251582650;
		}
		_iter_end_251582650:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_24900ba82_Ast>>,jule::Slice<_23a8a5ca8_Log>> _24a11db60_ImportPackage(_249e8d958_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	jule::Slice<jule::Ptr<_238ac31c5_DirEntry>> _9717_dirents = ({
		auto except = static__2397e2234_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_23a8a5ca8_Log>::make({_249e87ee6_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))}));
		} jule::Slice<jule::Ptr<_238ac31c5_DirEntry>>();});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _249da3054_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_newMod;
			jule::Slice<_23a8a5ca8_Log> _10525_errs = _249da32da_CheckModuleFile((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_24900ba82_Ast>> _11217_asts = jule::Slice<jule::Ptr<_24900ba82_Ast>>::alloc(0LL,_9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_251586d91:;
		if (it != expr.end()) {
			jule::Ptr<_238ac31c5_DirEntry> _11316_dirent = *it;
			{
				if ((_2389c048a_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_23a82a5e0_HasSuffix(_11316_dirent.get()._field_Name,jule::Str(".jule", 5)))))) {
					goto _iter_next_251586d91;
				};
				jule::Str _11917__path = _23988a9b4_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_23abd921d_File> _12021_file = _23abda74c_NewFileSet(_11917__path);;
				_23abd98a0_Fill(_12021_file.ptr(), _249e6b11c_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_23a8a5ca8_Log> _12221_errors = _23abe6181_Lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_24a4e45eb_FileInfo> _12721_finfo = _24a4e72be_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_Errors);
				};
				if ((!(_249d76d5d_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_251586d91;
				};
				jule::Bool _13718_r;;
				jule::Slice<_23a8a5ca8_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _24a18061c_isPassBuildDirectives(&(*_self_), _12721_finfo.get()._field_Ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_251586d91;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_251586d91:;
			++it;
			goto _iter_begin_251586d91;
		}
		_iter_end_251586d91:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _24a16c95b_Imported(_249e8d958_JuleImporter* _self_, jule::Ptr<_249c1117b_ImportInfo> _15331_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_25158a7ac:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_25158a7ac:;
			++it;
			goto _iter_begin_25158a7ac;
		}
		_iter_end_25158a7ac:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_25158e591:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_25158e591:;
				++it;
				_16217_i++;
				goto _iter_begin_25158e591;
			}
			_iter_end_25158e591:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15331_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_23a8a5ca8_Log>> _24a18061c_isPassBuildDirectives(_249e8d958_JuleImporter* _self_, jule::Ptr<_24900ba82_Ast>& _17945_file) {
	{
		auto &expr = _17945_file.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_251592aa0:;
		if (it != expr.end()) {
			jule::Ptr<_24900cb2c_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_Tag.get()._field_Kind != jule::Str("build", 5))) {
					goto _iter_next_251592aa0;
				};
				_249d92cbe_directiveEval _18421_de = _249d92cbe_directiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _249d94056_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_251592aa0:;
			++it;
			goto _iter_begin_251592aa0;
		}
		_iter_end_251592aa0:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _249e8d958_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24a52c964_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2515bb1e4_isCommonOrdered(jule::Slice<jule::Ptr<_249036b01_Struct>>& _1835_s, jule::Ptr<_249036b01_Struct> _1844_t) {
	jule::Ptr<_249036b01_Struct>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_249036b01_Struct>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_2515bde3e:;
		if (it != expr.end()) {
			jule::Ptr<_249036b01_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_2515bde3e;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_2515bde3e:;
			++it;
			goto _iter_begin_2515bde3e;
		}
		_iter_end_2515bde3e:;
	};
	return false;
}

inline jule::Bool _2515c4a05_isCommonOrdered(jule::Slice<jule::Ptr<_249c3702b_Var>>& _1835_s, jule::Ptr<_249c3702b_Var> _1844_t) {
	jule::Ptr<_249c3702b_Var>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_249c3702b_Var>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_2515c770b:;
		if (it != expr.end()) {
			jule::Ptr<_249c3702b_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_2515c770b;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_2515c770b:;
			++it;
			goto _iter_begin_2515c770b;
		}
		_iter_end_2515c770b:;
	};
	return false;
}



inline void _2515b718a_orderCommon(jule::Slice<jule::Ptr<_249036b01_Struct>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_2515b84aa:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_249036b01_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_2515b84aa:;
			++it;
			_4114_j++;
			goto _iter_begin_2515b84aa;
		}
		_iter_end_2515b84aa:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_2515bb1e4_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_2515bab0b:;
			}
			_iter_end_2515bab0b:;;
		}
	_iter_next_2515b8433:;
	}
	_iter_end_2515b8433:;;
}

inline void _2515b7c5c_orderCommon(jule::Slice<jule::Ptr<_249c3702b_Var>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_2515c1cbb:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_249c3702b_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_2515c1cbb:;
			++it;
			_4114_j++;
			goto _iter_begin_2515c1cbb;
		}
		_iter_end_2515c1cbb:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_2515c4a05_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_2515c441c:;
			}
			_iter_end_2515c441c:;;
		}
	_iter_next_2515c1c44:;
	}
	_iter_end_2515c1c44:;;
}



inline void static__24a371731_orderStructures(jule::Slice<jule::Ptr<_249036b01_Struct>>& _6136_structs) {
	_2515b718a_orderCommon(_6136_structs);
}



inline void static__24a382610_orderVars(jule::Slice<jule::Ptr<_249c3702b_Var>>& _6730_vars) {
	_2515b7c5c_orderCommon(_6730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _249e80e12_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24a63ce1a_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _24a6745e4_optimizeChild(jule::Ptr<_24a67411b_scopeDeadCode> _self_, jule::Ptr<_249be2635_Scope>& _3938_s) {
	jule::Ptr<_24a67411b_scopeDeadCode> _4017_sdc = jule::new_ptr<_24a67411b_scopeDeadCode>(_24a67411b_scopeDeadCode{._field_parent=_self_, ._field_s=_3938_s, ._field_stmts=(&(_3938_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_24a676c34_optimizeStmts(_4017_sdc);
	};
}



inline void _24a67488b_optimizeBodyChildExceptional(jule::Ptr<_24a67411b_scopeDeadCode> _self_, jule::Ptr<_249be2635_Scope>& _5053_s) {
	jule::Ptr<_24a67411b_scopeDeadCode> _5117_sdc = jule::new_ptr<_24a67411b_scopeDeadCode>(_24a67411b_scopeDeadCode{._field_s=_5053_s, ._field_stmts=(&(_5053_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_24a676c34_optimizeStmts(_5117_sdc);
	};
}



inline void _24a674b22_optimizeBodyChild(jule::Ptr<_24a67411b_scopeDeadCode> _self_, jule::Ptr<_249be2635_Scope>& _6142_s) {
	jule::Ptr<_24a67411b_scopeDeadCode> _6217_sdc = jule::new_ptr<_24a67411b_scopeDeadCode>(_24a67411b_scopeDeadCode{._field_s=_6142_s, ._field_stmts=(&(_6142_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_24a676c34_optimizeStmts(_6217_sdc);
	};
}



inline void _24a674d97_optimizeExprModel(jule::Ptr<_24a67411b_scopeDeadCode> _self_, jule::Any& _7142_model) {
	_24a678076_exprDeadCode _7213_edc = static__24a6786a3_new(_self_);;
	_24a67e3bd_optimize(&_7213_edc, _7142_model);
}



inline void _24a675073_eliminateFollowed(_24a67411b_scopeDeadCode* _self_) {
	if (((*((*_self_)._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_24a67411b_scopeDeadCode> _8317_parent = (*_self_)._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL,(_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_25164c5d8:;
	}
	_iter_end_25164c5d8:;;
}



inline void _24a6752e8_pushGoto(jule::Ptr<_24a67411b_scopeDeadCode> _self_, jule::Ptr<_249be5160_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_2516503aa:;
	}
	_iter_end_2516503aa:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_249be5160_GotoSt>>::make({_9232_gt}));
}



inline void _24a67556d_pushLabel(jule::Ptr<_24a67411b_scopeDeadCode> _self_, jule::Ptr<_249be4d74_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_251651d4b;
			};
			(_10317_i)++;
		}
	_iter_next_251651d4b:;
	}
	_iter_end_251651d4b:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_249be4d74_Label>>::make({_10233_l}));
}



inline void _24a6757e3_optimizeRangeIter(jule::Ptr<_24a67411b_scopeDeadCode> _self_, jule::Ptr<_249be42d5_RangeIter> _11541_it) {
	_24a674d97_optimizeExprModel(_self_, _11541_it.get()._field_Expr.get()._field_Model);
	_24a674b22_optimizeBodyChild(_self_, _11541_it.get()._field_Scope);
}



inline void _24a675a68_optimizeWhileIter(jule::Ptr<_24a67411b_scopeDeadCode> _self_, jule::Ptr<_249be3900_WhileIter> _12041_it) {
	_24a674d97_optimizeExprModel(_self_, _12041_it.get()._field_Expr);
	if ((_12041_it.get()._field_Next != nullptr)) {
		_24a676a58_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_24a674b22_optimizeBodyChild(_self_, _12041_it.get()._field_Scope);
}



inline void _24a675cdd_optimizeInfIter(jule::Ptr<_24a67411b_scopeDeadCode> _self_, jule::Ptr<_249be347c_InfIter> _12839_it) {
	_24a674b22_optimizeBodyChild(_self_, _12839_it.get()._field_Scope);
}



inline void _24a676063_optimizeConditional(jule::Ptr<_24a67411b_scopeDeadCode> _self_, jule::Ptr<_249be3191_Conditional> _13243_c) {
	{
		auto &expr = _13243_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_251658737:;
		if (it != expr.end()) {
			jule::Ptr<_249be2a31_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_24a674d97_optimizeExprModel(_self_, _13321_case.get()._field_Expr);
					_24a674b22_optimizeBodyChild(_self_, _13321_case.get()._field_Scope);
				};
			}
			_iter_next_251658737:;
			++it;
			goto _iter_begin_251658737;
		}
		_iter_end_251658737:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_24a6745e4_optimizeChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		} else {
			_24a674b22_optimizeBodyChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _24a6762d8_optimizeMatch(jule::Ptr<_24a67411b_scopeDeadCode> _self_, jule::Ptr<_249be6381_Match> _15037_m) {
	{
		auto &expr = _15037_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_25165b65d:;
		if (it != expr.end()) {
			jule::Ptr<_249be6dcb_Case> _15121_case = *it;
			{
				{
					auto &expr = _15121_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_25165c032:;
					if (it != expr.end()) {
						jule::Ptr<_249c80052_Data> _15225_expr = *it;
						{
							_24a674d97_optimizeExprModel(_self_, _15225_expr.get()._field_Model);
						}
						_iter_next_25165c032:;
						++it;
						goto _iter_begin_25165c032;
					}
					_iter_end_25165c032:;
				};
				_24a674b22_optimizeBodyChild(_self_, _15121_case.get()._field_Scope);
			}
			_iter_next_25165b65d:;
			++it;
			goto _iter_begin_25165b65d;
		}
		_iter_end_25165b65d:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_24a6745e4_optimizeChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		} else {
			_24a674b22_optimizeBodyChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _24a67655d_optimizeAssign(jule::Ptr<_24a67411b_scopeDeadCode> _self_, jule::Ptr<_249be598a_Assign> _16838_assign) {
	_24a674d97_optimizeExprModel(_self_, _16838_assign.get()._field_L.get()._field_Model);
	_24a674d97_optimizeExprModel(_self_, _16838_assign.get()._field_R.get()._field_Model);
}



inline void _24a6767d3_optimizeMultiAssign(jule::Ptr<_24a67411b_scopeDeadCode> _self_, jule::Ptr<_249be5d42_MultiAssign> _17343_assign) {
	{
		auto &expr = _17343_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_2516608b5:;
		if (it != expr.end()) {
			jule::Any _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_24a674d97_optimizeExprModel(_self_, _17421_l);
				};
			}
			_iter_next_2516608b5:;
			++it;
			goto _iter_begin_2516608b5;
		}
		_iter_end_2516608b5:;
	};
	_24a674d97_optimizeExprModel(_self_, _17343_assign.get()._field_R);
}



inline void _24a676a58_optimizeStmt(jule::Ptr<_24a67411b_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type_is<jule::Ptr<_249be2635_Scope>>()) {
			_case_begin_2516620ae:;
			{
				jule::Ptr<_249be2635_Scope> _18521_scope = _18236_st.operator jule::Ptr<_249be2635_Scope>();;
				if (_18521_scope.get()._field_Deferred) {
					_24a677020_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_24a6745e4_optimizeChild(_self_, _18521_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be42d5_RangeIter>>()) {
			_case_begin_251662224:;
			{
				_24a6757e3_optimizeRangeIter(_self_, _18236_st.operator jule::Ptr<_249be42d5_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be3900_WhileIter>>()) {
			_case_begin_25166228a:;
			{
				_24a675a68_optimizeWhileIter(_self_, _18236_st.operator jule::Ptr<_249be3900_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be347c_InfIter>>()) {
			_case_begin_251662312:;
			{
				_24a675cdd_optimizeInfIter(_self_, _18236_st.operator jule::Ptr<_249be347c_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be3191_Conditional>>()) {
			_case_begin_251662389:;
			{
				_24a676063_optimizeConditional(_self_, _18236_st.operator jule::Ptr<_249be3191_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be6381_Match>>()) {
			_case_begin_251662411:;
			{
				_24a6762d8_optimizeMatch(_self_, _18236_st.operator jule::Ptr<_249be6381_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be598a_Assign>>()) {
			_case_begin_251662488:;
			{
				_24a67655d_optimizeAssign(_self_, _18236_st.operator jule::Ptr<_249be598a_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be5d42_MultiAssign>>()) {
			_case_begin_251662510:;
			{
				_24a6767d3_optimizeMultiAssign(_self_, _18236_st.operator jule::Ptr<_249be5d42_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249c80052_Data>>()) {
			_case_begin_251662587:;
			{
				jule::Ptr<_249c80052_Data> _20621_d = _18236_st.operator jule::Ptr<_249c80052_Data>();;
				if (_self_.get()._field_except) {
					goto _match_end_2516621be;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_249bc972c_BuiltinPanicCallExprModel>>()) {
						_case_begin_251668802:;
						{
							_24a675073_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_25166803d:;
						{
							_24a674d97_optimizeExprModel(_self_, _20621_d.get()._field_Model);
						}
					}
					_match_end_251667ed8:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be7904_RetSt>>()) {
			_case_begin_25166260e:;
			{
				_24a675073_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be5160_GotoSt>>()) {
			_case_begin_251662686:;
			{
				_24a6752e8_pushGoto(_self_, _18236_st.operator jule::Ptr<_249be5160_GotoSt>());
				_24a675073_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be4d74_Label>>()) {
			_case_begin_25166270d:;
			{
				_24a67556d_pushLabel(_self_, _18236_st.operator jule::Ptr<_249be4d74_Label>());
			}
		}
		_match_end_2516621be:;
	};
}



inline void _24a676c34_optimizeStmts(jule::Ptr<_24a67411b_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_24a676a58_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_25166a738:;
	}
	_iter_end_25166a738:;;
}







std::ostream &operator<<(std::ostream &_Stream, _24a67411b_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _24a678076_exprDeadCode static__24a6786a3_new(jule::Ptr<_24a67411b_scopeDeadCode>& _5024_s) {
	return _24a678076_exprDeadCode{._field_s=_5024_s};
}



inline void _24a678928_binary(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc63d8_BinopExprModel> _5625_m) {
	_24a67e3bd_optimize(&(*_self_), _5625_m.get()._field_Left.get()._field_Model);
	_24a67e3bd_optimize(&(*_self_), _5625_m.get()._field_Right.get()._field_Model);
}



inline void _24a678b9d_unary(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc65c5_UnaryExprModel> _6124_m) {
	_24a67e3bd_optimize(&(*_self_), _6124_m.get()._field_Expr.get()._field_Model);
}



inline void _24a678e23_structureLit(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc699e_StructLitExprModel> _6531_m) {
	{
		auto &expr = _6531_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_25166dcad:;
		if (it != expr.end()) {
			jule::Ptr<_249bc67b2_StructArgExprModel> _6621_arg = *it;
			{
				_24a67e3bd_optimize(&(*_self_), _6621_arg.get()._field_Expr);
			}
			_iter_next_25166dcad:;
			++it;
			goto _iter_begin_25166dcad;
		}
		_iter_end_25166dcad:;
	};
}



inline void _24a679198_allocStructure(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc6b8b_AllocStructLitExprModel> _7133_m) {
	_24a678e23_structureLit(&(*_self_), _7133_m.get()._field_Lit);
}



inline void _24a67941d_casting(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc6d78_CastingExprModel> _7526_m) {
	_24a67e3bd_optimize(&(*_self_), _7526_m.get()._field_Expr);
}



inline void _24a679693_args(_24a678076_exprDeadCode* _self_, jule::Slice<jule::Any>& _7924_args) {
	{
		auto &expr = _7924_args;
		auto it = expr.begin();
		_iter_begin_251671189:;
		if (it != expr.end()) {
			jule::Any _8021_arg = *it;
			{
				_24a67e3bd_optimize(&(*_self_), _8021_arg);
			}
			_iter_next_251671189:;
			++it;
			goto _iter_begin_251671189;
		}
		_iter_end_251671189:;
	};
}



inline void _24a679918_funcCall(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc7065_FnCallExprModel> _8527_m) {
	_24a67e3bd_optimize(&(*_self_), _8527_m.get()._field_Expr);
	_24a679693_args(&(*_self_), _8527_m.get()._field_Args);
	if ((_8527_m.get()._field_Except != nullptr)) {
		_24a67488b_optimizeBodyChildExceptional((*_self_)._field_s, _8527_m.get()._field_Except);
	};
}



inline void _24a679b8d_slice(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc7252_SliceExprModel> _9324_m) {
	_24a679693_args(&(*_self_), _9324_m.get()._field_Elems);
}



inline void _24a679e13_array(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc86c6_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_24a67e3bd_optimize(&(*_self_), _9724_m.get()._field_Elems[0LL]);
	};
	_24a679693_args(&(*_self_), _9724_m.get()._field_Elems);
}



inline void _24a67a188_indexing(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc743e_IndexingExprModel> _10427_m) {
	_24a67e3bd_optimize(&(*_self_), _10427_m.get()._field_Expr.get()._field_Model);
	_24a67e3bd_optimize(&(*_self_), _10427_m.get()._field_Index.get()._field_Model);
}



inline void _24a67a40d_anonFunc(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc762b_AnonFnExprModel> _10927_m) {
	_24a677020_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _24a67a683_mapExpr(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc7a05_MapExprModel> _11326_m) {
	{
		auto &expr = _11326_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_251677789:;
		if (it != expr.end()) {
			jule::Ptr<_249bc7818_KeyValPairExprModel> _11421_pair = *it;
			{
				_24a67e3bd_optimize(&(*_self_), _11421_pair.get()._field_Key);
				_24a67e3bd_optimize(&(*_self_), _11421_pair.get()._field_Val);
			}
			_iter_next_251677789:;
			++it;
			goto _iter_begin_251677789;
		}
		_iter_end_251677789:;
	};
}



inline void _24a67a908_slicing(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc7be2_SlicingExprModel> _12026_m) {
	_24a67e3bd_optimize(&(*_self_), _12026_m.get()._field_Expr);
	_24a67e3bd_optimize(&(*_self_), _12026_m.get()._field_Left);
	if ((_12026_m.get()._field_Right != nullptr)) {
		_24a67e3bd_optimize(&(*_self_), _12026_m.get()._field_Right);
	};
}



inline void _24a67ab7d_traitSub(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc7dce_TraitSubIdentExprModel> _12827_m) {
	_24a67e3bd_optimize(&(*_self_), _12827_m.get()._field_Expr);
}



inline void _24a67ae03_structureSub(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc82ec_StructSubIdentExprModel> _13231_m) {
	_24a67e3bd_optimize(&(*_self_), _13231_m.get()._field_Expr.get()._field_Model);
}



inline void _24a67b178_commonSub(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc8aa0_CommonSubIdentExprModel> _13628_m) {
	_24a67e3bd_optimize(&(*_self_), _13628_m.get()._field_Expr);
}



inline void _24a67b3ed_tuple(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc8c8c_TupleExprModel> _14024_m) {
	{
		auto &expr = _14024_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_25167c1a6:;
		if (it != expr.end()) {
			jule::Ptr<_249c80052_Data> _14121_d = *it;
			{
				_24a67e3bd_optimize(&(*_self_), _14121_d.get()._field_Model);
			}
			_iter_next_25167c1a6:;
			++it;
			goto _iter_begin_25167c1a6;
		}
		_iter_end_25167c1a6:;
	};
}



inline void _24a67b673_newCall(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc9540_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_24a67e3bd_optimize(&(*_self_), _14626_m.get()._field_Init);
	};
}



inline void _24a67b8e8_outCall(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc8e79_BuiltinOutCallExprModel> _15226_m) {
	_24a67e3bd_optimize(&(*_self_), _15226_m.get()._field_Expr);
}



inline void _24a67bb6d_outlnCall(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc9166_BuiltinOutlnCallExprModel> _15628_m) {
	_24a67e3bd_optimize(&(*_self_), _15628_m.get()._field_Expr);
}



inline void _24a67bde3_panicCall(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc972c_BuiltinPanicCallExprModel> _16028_m) {
	_24a67e3bd_optimize(&(*_self_), _16028_m.get()._field_Expr);
}



inline void _24a67c168_assertCall(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc9919_BuiltinAssertCallExprModel> _16429_m) {
	_24a67e3bd_optimize(&(*_self_), _16429_m.get()._field_Expr);
}



inline void _24a67c3dd_errorCall(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel> _16828_m) {
	_24a67e3bd_optimize(&(*_self_), _16828_m.get()._field_Err);
}



inline void _24a67c663_makeCall(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc9b06_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_24a67e3bd_optimize(&(*_self_), _17227_m.get()._field_Len);
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_24a67e3bd_optimize(&(*_self_), _17227_m.get()._field_Cap);
	};
}



inline void _24a67c8d8_appendCall(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc9ce3_BuiltinAppendCallExprModel> _18129_m) {
	_24a67e3bd_optimize(&(*_self_), _18129_m.get()._field_Dest);
	_24a67e3bd_optimize(&(*_self_), _18129_m.get()._field_Elements);
}



inline void _24a67cb5d_lenCall(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc9ed0_BuiltinLenCallExprModel> _18626_m) {
	_24a67e3bd_optimize(&(*_self_), _18626_m.get()._field_Expr.get()._field_Model);
}



inline void _24a67cdd3_capCall(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bca1bc_BuiltinCapCallExprModel> _19026_m) {
	_24a67e3bd_optimize(&(*_self_), _19026_m.get()._field_Expr.get()._field_Model);
}



inline void _24a67d158_cloneCall(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc9353_BuiltinCloneCallExprModel> _19428_m) {
	_24a67e3bd_optimize(&(*_self_), _19428_m.get()._field_Expr);
}



inline void _24a67d3cd_deleteCall(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bc80bb_BuiltinDeleteCallExprModel> _19829_m) {
	_24a67e3bd_optimize(&(*_self_), _19829_m.get()._field_Dest.get()._field_Model);
	if ((_19829_m.get()._field_Key != nullptr)) {
		_24a67e3bd_optimize(&(*_self_), _19829_m.get()._field_Key.get()._field_Model);
	};
}



inline void _24a67d653_sizeof(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bcac06_SizeofExprModel> _20525_m) {
	_24a67e3bd_optimize(&(*_self_), _20525_m.get()._field_Expr);
}



inline void _24a67d8c8_alignof(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bcade3_AlignofExprModel> _20926_m) {
	_24a67e3bd_optimize(&(*_self_), _20926_m.get()._field_Expr);
}



inline void _24a67db4d_integratedToStr(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bcb2bc_IntegratedToStrExprModel> _21334_m) {
	_24a67e3bd_optimize(&(*_self_), _21334_m.get()._field_Expr);
}



inline void _24a67ddc3_free(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bcb696_FreeExprModel> _21723_m) {
	_24a67e3bd_optimize(&(*_self_), _21723_m.get()._field_Expr);
}



inline void _24a67e148_backendEmit(_24a678076_exprDeadCode* _self_, jule::Ptr<_249bcb4a9_BackendEmitExprModel> _22130_m) {
	_24a679693_args(&(*_self_), _22130_m.get()._field_Exprs);
}



inline void _24a67e3bd_optimize(_24a678076_exprDeadCode* _self_, jule::Any& _22528_model) {
	{
		auto &_match_expr{ _22528_model };
		
		if (_match_expr.type_is<jule::Ptr<_249bc63d8_BinopExprModel>>()) {
			_case_begin_25168a6c0:;
			{
				_24a678928_binary(&(*_self_), _22528_model.operator jule::Ptr<_249bc63d8_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc65c5_UnaryExprModel>>()) {
			_case_begin_25168a747:;
			{
				_24a678b9d_unary(&(*_self_), _22528_model.operator jule::Ptr<_249bc65c5_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc699e_StructLitExprModel>>()) {
			_case_begin_25168a7be:;
			{
				_24a678e23_structureLit(&(*_self_), _22528_model.operator jule::Ptr<_249bc699e_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc6b8b_AllocStructLitExprModel>>()) {
			_case_begin_25168ab87:;
			{
				_24a679198_allocStructure(&(*_self_), _22528_model.operator jule::Ptr<_249bc6b8b_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc6d78_CastingExprModel>>()) {
			_case_begin_25168ac0e:;
			{
				_24a67941d_casting(&(*_self_), _22528_model.operator jule::Ptr<_249bc6d78_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc7065_FnCallExprModel>>()) {
			_case_begin_25168ac86:;
			{
				_24a679918_funcCall(&(*_self_), _22528_model.operator jule::Ptr<_249bc7065_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc7252_SliceExprModel>>()) {
			_case_begin_25168ad0d:;
			{
				_24a679b8d_slice(&(*_self_), _22528_model.operator jule::Ptr<_249bc7252_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc86c6_ArrayExprModel>>()) {
			_case_begin_25168ad85:;
			{
				_24a679e13_array(&(*_self_), _22528_model.operator jule::Ptr<_249bc86c6_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc743e_IndexingExprModel>>()) {
			_case_begin_25168ae0c:;
			{
				_24a67a188_indexing(&(*_self_), _22528_model.operator jule::Ptr<_249bc743e_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc762b_AnonFnExprModel>>()) {
			_case_begin_25168ae84:;
			{
				_24a67a40d_anonFunc(&(*_self_), _22528_model.operator jule::Ptr<_249bc762b_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc7a05_MapExprModel>>()) {
			_case_begin_25168b00b:;
			{
				_24a67a683_mapExpr(&(*_self_), _22528_model.operator jule::Ptr<_249bc7a05_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc7be2_SlicingExprModel>>()) {
			_case_begin_25168b083:;
			{
				_24a67a908_slicing(&(*_self_), _22528_model.operator jule::Ptr<_249bc7be2_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc7dce_TraitSubIdentExprModel>>()) {
			_case_begin_25168b10a:;
			{
				_24a67ab7d_traitSub(&(*_self_), _22528_model.operator jule::Ptr<_249bc7dce_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc82ec_StructSubIdentExprModel>>()) {
			_case_begin_25168b182:;
			{
				_24a67ae03_structureSub(&(*_self_), _22528_model.operator jule::Ptr<_249bc82ec_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc8aa0_CommonSubIdentExprModel>>()) {
			_case_begin_25168b209:;
			{
				_24a67b178_commonSub(&(*_self_), _22528_model.operator jule::Ptr<_249bc8aa0_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc8c8c_TupleExprModel>>()) {
			_case_begin_25168b281:;
			{
				_24a67b3ed_tuple(&(*_self_), _22528_model.operator jule::Ptr<_249bc8c8c_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc8e79_BuiltinOutCallExprModel>>()) {
			_case_begin_25168b308:;
			{
				_24a67b8e8_outCall(&(*_self_), _22528_model.operator jule::Ptr<_249bc8e79_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9166_BuiltinOutlnCallExprModel>>()) {
			_case_begin_25168b380:;
			{
				_24a67bb6d_outlnCall(&(*_self_), _22528_model.operator jule::Ptr<_249bc9166_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9540_BuiltinNewCallExprModel>>()) {
			_case_begin_25168b407:;
			{
				_24a67b673_newCall(&(*_self_), _22528_model.operator jule::Ptr<_249bc9540_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc972c_BuiltinPanicCallExprModel>>()) {
			_case_begin_25168b47e:;
			{
				_24a67bde3_panicCall(&(*_self_), _22528_model.operator jule::Ptr<_249bc972c_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9919_BuiltinAssertCallExprModel>>()) {
			_case_begin_25168b506:;
			{
				_24a67c168_assertCall(&(*_self_), _22528_model.operator jule::Ptr<_249bc9919_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel>>()) {
			_case_begin_25168b57d:;
			{
				_24a67c3dd_errorCall(&(*_self_), _22528_model.operator jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9b06_BuiltinMakeCallExprModel>>()) {
			_case_begin_25168b605:;
			{
				_24a67c663_makeCall(&(*_self_), _22528_model.operator jule::Ptr<_249bc9b06_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9ce3_BuiltinAppendCallExprModel>>()) {
			_case_begin_25168b67c:;
			{
				_24a67c8d8_appendCall(&(*_self_), _22528_model.operator jule::Ptr<_249bc9ce3_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9ed0_BuiltinLenCallExprModel>>()) {
			_case_begin_25168b704:;
			{
				_24a67cb5d_lenCall(&(*_self_), _22528_model.operator jule::Ptr<_249bc9ed0_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bca1bc_BuiltinCapCallExprModel>>()) {
			_case_begin_25168b77b:;
			{
				_24a67cdd3_capCall(&(*_self_), _22528_model.operator jule::Ptr<_249bca1bc_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9353_BuiltinCloneCallExprModel>>()) {
			_case_begin_25168b803:;
			{
				_24a67d158_cloneCall(&(*_self_), _22528_model.operator jule::Ptr<_249bc9353_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc80bb_BuiltinDeleteCallExprModel>>()) {
			_case_begin_25168b87a:;
			{
				_24a67d3cd_deleteCall(&(*_self_), _22528_model.operator jule::Ptr<_249bc80bb_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcac06_SizeofExprModel>>()) {
			_case_begin_25168b902:;
			{
				_24a67d653_sizeof(&(*_self_), _22528_model.operator jule::Ptr<_249bcac06_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcade3_AlignofExprModel>>()) {
			_case_begin_25168b979:;
			{
				_24a67d8c8_alignof(&(*_self_), _22528_model.operator jule::Ptr<_249bcade3_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcb2bc_IntegratedToStrExprModel>>()) {
			_case_begin_25168ba01:;
			{
				_24a67db4d_integratedToStr(&(*_self_), _22528_model.operator jule::Ptr<_249bcb2bc_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcb696_FreeExprModel>>()) {
			_case_begin_25168ba78:;
			{
				_24a67ddc3_free(&(*_self_), _22528_model.operator jule::Ptr<_249bcb696_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcb4a9_BackendEmitExprModel>>()) {
			_case_begin_25168bb00:;
			{
				_24a67e148_backendEmit(&(*_self_), _22528_model.operator jule::Ptr<_249bcb4a9_BackendEmitExprModel>());
			}
		}
		_match_end_25168a8bd:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _24a678076_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _23ac114cb_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _23b73d601_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2487dbd57_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _248c8054d_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _23ac51d57_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_23b0684c0_scopeOptimizer> static__23ac0920a_new(jule::Ptr<_249be2635_Scope> _4523_scope) {
	return jule::new_ptr<_23b0684c0_scopeOptimizer>(_23b0684c0_scopeOptimizer{._field_scope=_4523_scope});
}



inline void _23ac2429c_setCurrentStmt(_23b0684c0_scopeOptimizer* _self_, jule::Any _5137_stmt) {
	(*_self_)._field_scope.get()._field_Stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5137_stmt))))));
}



inline void _23ac321bc_optimizeData(_23b0684c0_scopeOptimizer* _self_, jule::Ptr<_249c80052_Data> _5535_d) {
	{
		auto &_match_expr{ _5535_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_249bc7065_FnCallExprModel>>()) {
			_case_begin_2516ca29d:;
			{
				jule::Ptr<_249bc7065_FnCallExprModel> _5821_m = _5535_d.get()._field_Model.operator jule::Ptr<_249bc7065_FnCallExprModel>();;
				if (_2388e8913_Production) {
					if (((!(_249bcc4ee_IsBuiltin(_5821_m.get()._field_Func.ptr()))) && _23ad4b1c6_isStdPackage(_5821_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("debug", 5)))) {
						_23ac2429c_setCurrentStmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_2516ca08e:;
	};
	static__23ad78ad8_optimize(_5535_d.get()._field_Model);
}



inline void _23ac32db0_optimizeVar(_23b0684c0_scopeOptimizer* _self_, jule::Ptr<_249c3702b_Var> _7034_v) {
	if ((_7034_v.get()._field_Value != nullptr)) {
		static__23ad78ad8_optimize(_7034_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _23ac512da_optimizeConditional(_23b0684c0_scopeOptimizer* _self_, jule::Ptr<_249be3191_Conditional> _7642_c) {
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_2516cd614:;
		if (it != expr.end()) {
			jule::Ptr<_249be2a31_If> _7721_elif = *it;
			{
				static__23ad78ad8_optimize(_7721_elif.get()._field_Expr);
				_23ad46006_optimizeChild(&(*_self_), _7721_elif.get()._field_Scope);
			}
			_iter_next_2516cd614:;
			++it;
			goto _iter_begin_2516cd614;
		}
		_iter_end_2516cd614:;
	};
	if ((_7642_c.get()._field_Default != nullptr)) {
		_23ad46006_optimizeChild(&(*_self_), _7642_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_23ac53243_Cond))) {
		return;;
	};
	jule::Bool _8917_constCase = false;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_2516d0847:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_249be2a31_If> _9221_elif = *it;
			{
				if ((!(_23ad4dd55_isConstantValidConditionalCase(_9221_elif)))) {
					goto _iter_next_2516d0847;
				};
				_8917_constCase=true;
				_7642_c.get()._field_Elifs=_7642_c.get()._field_Elifs.slice(0LL,_9214_i);
				_7642_c.get()._field_Default=jule::new_ptr<_249be2d1c_Else>(_249be2d1c_Else{._field_Scope=_9221_elif.get()._field_Scope});
				goto _iter_end_2516d0847;
			}
			_iter_next_2516d0847:;
			++it;
			_9214_i++;
			goto _iter_begin_2516d0847;
		}
		_iter_end_2516d0847:;
	};
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_249be2a31_If>* _10917_i = (&(_7642_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_249be2a31_If>* _11013_end = (&(_7642_c.get()._field_Elifs[(_7642_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_23ad54344_isUnreachableConditionalCase((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_2516d3e88:;
	}
	_iter_end_2516d3e88:;;
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_constCase))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_2516d5808:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_249be2a31_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_2516d5808:;
			++it;
			_12913_j++;
			goto _iter_begin_2516d5808;
		}
		_iter_end_2516d5808:;
	};
	if ((_12817_only != -1LL)) {
		_23ac2429c_setCurrentStmt(&(*_self_), jule::Any(_7642_c.get()._field_Elifs[_12817_only].get()._field_Scope));
	};
}



inline void _23ac55e9e_buildDefaultConstatTrueCase(_23b0684c0_scopeOptimizer* _self_, jule::Ptr<_249be6dcb_Case> _14550_case, jule::I64& _14568_i, jule::Ptr<_249be6381_Match>& _14581_m) {
	_14550_case.get()._field_Exprs=nullptr;
	jule::I64 _14713_start = _14568_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14550_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_2516d81bd;
			};
			jule::Any &_15322_stmt = _14550_case.get()._field_Scope.get()._field_Stmts[(_14550_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_249be7481_FallSt>>()) {
					_case_begin_2516d8a92:;
					{
						(_14568_i)++;
						if ((_14568_i >= _14581_m.get()._field_Cases.len())) {
							_15322_stmt=static_cast<jule::Any>(_14581_m.get()._field_Default.get()._field_Scope);
							goto _iter_end_2516d81bd;
						};
						_14550_case=_14581_m.get()._field_Cases[_14568_i];
						_15322_stmt=static_cast<jule::Any>(_14550_case.get()._field_Scope);
					}
				}
				else {
					_case_begin_2516da2ad:;
					{
						goto _iter_end_2516d81bd;
					}
				}
				_match_end_2516da1ae:;
			};
		}
	_iter_next_2516d81bd:;
	}
	_iter_end_2516d81bd:;;
	_14581_m.get()._field_Default=_14581_m.get()._field_Cases[_14713_start];
	_14581_m.get()._field_Cases=_14581_m.get()._field_Cases.slice(0LL,_14713_start);
}



inline void _23ac57445_optimizeMatch(_23b0684c0_scopeOptimizer* _self_, jule::Ptr<_249be6381_Match> _17136_m) {
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_2516dc557:;
		if (it != expr.end()) {
			jule::Ptr<_249be6dcb_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_2516dce2b:;
					if (it != expr.end()) {
						jule::Ptr<_249c80052_Data> _17325_expr = *it;
						{
							static__23ad78ad8_optimize(_17325_expr.get()._field_Model);
						}
						_iter_next_2516dce2b:;
						++it;
						goto _iter_begin_2516dce2b;
					}
					_iter_end_2516dce2b:;
				};
				_23ad46006_optimizeChild(&(*_self_), _17221_case.get()._field_Scope);
			}
			_iter_next_2516dc557:;
			++it;
			goto _iter_begin_2516dc557;
		}
		_iter_end_2516dc557:;
	};
	if ((_17136_m.get()._field_Default != nullptr)) {
		_23ad46006_optimizeChild(&(*_self_), _17136_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_23ac53243_Cond))) {
		return;;
	};
	jule::Bool _18617_constCase = false;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_2516ded84:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_249be6dcb_Case> _18925_case = *it;
			{
				if ((!(_23ad530e0_isConstantValidMatchCase(_18925_case)))) {
					goto _iter_next_2516ded84;
				};
				_18617_constCase=true;
				_23ac55e9e_buildDefaultConstatTrueCase(&(*_self_), _18925_case,_18918_i,_17136_m);
				goto _iter_end_2516ded84;
			}
			_iter_next_2516ded84:;
			++it;
			_18918_i++;
			goto _iter_begin_2516ded84;
		}
		_iter_end_2516ded84:;
	};
	if ((_17136_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_249be6dcb_Case>* _20317_i = (&(_17136_m.get()._field_Cases[0LL]));;
	jule::Ptr<_249be6dcb_Case>* _20413_end = (&(_17136_m.get()._field_Cases[(_17136_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_23ad5c24d_isUnreachableMatchCase((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_2516e2ea8:;
	}
	_iter_end_2516e2ea8:;;
	if ((!(_18617_constCase))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_2516e41eb:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_249be6dcb_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_2516e41eb:;
			++it;
			_21913_j++;
			goto _iter_begin_2516e41eb;
		}
		_iter_end_2516e41eb:;
	};
	if ((_21817_only != -1LL)) {
		_23ac2429c_setCurrentStmt(&(*_self_), jule::Any(_17136_m.get()._field_Cases[_21817_only].get()._field_Scope));
	};
}



inline void _23ac584bd_optimizeRangeIter(_23b0684c0_scopeOptimizer* _self_, jule::Ptr<_249be42d5_RangeIter> _23540_it) {
	static__23ad78ad8_optimize(_23540_it.get()._field_Expr.get()._field_Model);
	_23ad46006_optimizeChild(&(*_self_), _23540_it.get()._field_Scope);
}



inline void _23ac5890d_optimizeWhileIter(_23b0684c0_scopeOptimizer* _self_, jule::Ptr<_249be3900_WhileIter> _24040_it) {
	static__23ad78ad8_optimize(_24040_it.get()._field_Expr);
	_23ad415d9_optimizeStmt(&(*_self_), _24040_it.get()._field_Next);
	_23ad46006_optimizeChild(&(*_self_), _24040_it.get()._field_Scope);
}



inline jule::Bool _23ac8bca4_substr(_23b0684c0_scopeOptimizer* _self_, jule::Ptr<_249be598a_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_249bc7be2_SlicingExprModel>>()) {
			_case_begin_2516e8761:;
			{
				jule::Ptr<_249bc7be2_SlicingExprModel> _24921_sem = _24629_a.get()._field_R.get()._field_Model.operator jule::Ptr<_249bc7be2_SlicingExprModel>();;
				if ((_24921_sem.get()._field_Expr == _24629_a.get()._field_L.get()._field_Model)) {
					_23ac2429c_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_248c8054d_MutSlicingExprModel>(_248c8054d_MutSlicingExprModel{._field_Token=_24921_sem.get()._field_Token, ._field_Expr=_24921_sem.get()._field_Expr, ._field_Left=_24921_sem.get()._field_Left, ._field_Right=_24921_sem.get()._field_Right})));
					return true;
				};
			}
		}
		_match_end_2516e870b:;
	};
	return false;
}



inline jule::Bool _23ac8c656_strInsert(_23b0684c0_scopeOptimizer* _self_, jule::Ptr<_249be598a_Assign> _26332_a) {
	{
		auto &_match_expr{ _26332_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_249bc63d8_BinopExprModel>>()) {
			_case_begin_2516eadd4:;
			{
				jule::Ptr<_249bc63d8_BinopExprModel> _26621_m = _26332_a.get()._field_R.get()._field_Model.operator jule::Ptr<_249bc63d8_BinopExprModel>();;
				if ((_26621_m.get()._field_Right.get()._field_Model == _26332_a.get()._field_L.get()._field_Model)) {
					_23ac2429c_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_23ac51d57_StrInsertBeginExprModel>(_23ac51d57_StrInsertBeginExprModel{._field_Dest=_26332_a.get()._field_L.get()._field_Model, ._field_Expr=_26621_m.get()._field_Left.get()._field_Model})));
					return true;
				};
			}
		}
		_match_end_2516eab1a:;
	};
	return false;
}



inline jule::Bool _23aca2ca9_strAssign(_23b0684c0_scopeOptimizer* _self_, jule::Ptr<_249be598a_Assign> _27832_a) {
	if ((_27832_a.get()._field_Op.get()._field_Kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_249cb5263_Prim> _28213_lp = _249cb289d_Prim(_27832_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_249cb8497_IsStr(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_23ac8bca4_substr(&(*_self_), _27832_a) || _23ac8c656_strInsert(&(*_self_), _27832_a)) {
			_case_begin_2516eec40:;
			{
				return true;
			}
		}
		_match_end_2516eeb96:;
	};
	return false;
}



inline void _23ad33774_optimizeAssign(_23b0684c0_scopeOptimizer* _self_, jule::Ptr<_249be598a_Assign> _29437_assign) {
	if ((_23ac1c64c_Copy && _23aca2ca9_strAssign(&(*_self_), _29437_assign))) {
		return;;
	};
	static__23ad78ad8_optimize(_29437_assign.get()._field_L.get()._field_Model);
	static__23ad78ad8_optimize(_29437_assign.get()._field_R.get()._field_Model);
	{
		auto &_match_expr{ _29437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_251701e73:;
			{
				if ((_23ac46236_Math && (_249cb3d00_Struct(_29437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_29437_assign.get()._field_Op.get()._field_Kind=_29437_assign.get()._field_Op.get()._field_Kind.slice(0LL,(_29437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _30725_model = static_cast<jule::Any>(jule::new_ptr<_249bc63d8_BinopExprModel>(_249bc63d8_BinopExprModel{._field_Left=_29437_assign.get()._field_L, ._field_Right=_29437_assign.get()._field_R, ._field_Op=_29437_assign.get()._field_Op}));;
					static__23ad78ad8_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_249bc63d8_BinopExprModel>>()) {
							_case_begin_251704409:;
							{
								_29437_assign.get()._field_R=jule::new_ptr<_249bc61eb_OperandExprModel>((*(_29437_assign.get()._field_R)));
								_29437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_29437_assign.get()._field_R.get()._field_Model=_30725_model;
								return;;
							}
						}
						_match_end_2517042e9:;
					};
					_29437_assign.get()._field_Op.get()._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_251701e1d:;
	};
	if (_23ac0a915_Append) {
		{
			auto &_match_expr{ _29437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_249bc9ce3_BuiltinAppendCallExprModel>>()) {
				_case_begin_251706450:;
				{
					jule::Ptr<_249bc9ce3_BuiltinAppendCallExprModel> _32825_m = _29437_assign.get()._field_R.get()._field_Model.operator jule::Ptr<_249bc9ce3_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_Elements };
						
						if (_match_expr.type_is<jule::Ptr<_249bc7252_SliceExprModel>>()) {
							_case_begin_25170c3e0:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_Dest };
									
									if (_match_expr.type_is<jule::Ptr<_249c3702b_Var>>() || _match_expr.type_is<jule::Ptr<_249bc82ec_StructSubIdentExprModel>>()) {
										_case_begin_25170cc4d:;
										{
											_23ac2429c_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_2487dbd57_PushToSliceExprModel>(_2487dbd57_PushToSliceExprModel{._field_Dest=_32825_m.get()._field_Dest, ._field_Elems=_32825_m.get()._field_Elements.operator jule::Ptr<_249bc7252_SliceExprModel>()})));
										}
									}
									_match_end_25170cbd7:;
								};
							}
						}
						_match_end_25170c1d1:;
					};
				}
			}
			_match_end_251702a56:;
		};
	};
}



inline void _23ad3ba79_optimizeMultiAssign(_23b0684c0_scopeOptimizer* _self_, jule::Ptr<_249be5d42_MultiAssign> _34442_assign) {
	{
		auto &expr = _34442_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_2517023e6:;
		if (it != expr.end()) {
			jule::I64 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__23ad78ad8_optimize(_34521_l);
					_34442_assign.get()._field_L[_34514_i]=_34521_l;
				};
			}
			_iter_next_2517023e6:;
			++it;
			_34514_i++;
			goto _iter_begin_2517023e6;
		}
		_iter_end_2517023e6:;
	};
	static__23ad78ad8_optimize(_34442_assign.get()._field_R);
}



inline void _23ad3ecbe_optimizeRet(_23b0684c0_scopeOptimizer* _self_, jule::Ptr<_249be7904_RetSt> _35434_r) {
	static__23ad78ad8_optimize(_35434_r.get()._field_Expr);
}



inline void _23ad415d9_optimizeStmt(_23b0684c0_scopeOptimizer* _self_, jule::Any _35835_stmt) {
	{
		auto &_match_expr{ _35835_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_249be2635_Scope>>()) {
			_case_begin_251710a75:;
			{
				_23ad46006_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_249be2635_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249c80052_Data>>()) {
			_case_begin_251710adb:;
			{
				_23ac321bc_optimizeData(&(*_self_), _35835_stmt.operator jule::Ptr<_249c80052_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249c3702b_Var>>()) {
			_case_begin_251710b52:;
			{
				_23ac32db0_optimizeVar(&(*_self_), _35835_stmt.operator jule::Ptr<_249c3702b_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be3191_Conditional>>()) {
			_case_begin_251710bc9:;
			{
				_23ac512da_optimizeConditional(&(*_self_), _35835_stmt.operator jule::Ptr<_249be3191_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be42d5_RangeIter>>()) {
			_case_begin_251710c51:;
			{
				_23ac584bd_optimizeRangeIter(&(*_self_), _35835_stmt.operator jule::Ptr<_249be42d5_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be3900_WhileIter>>()) {
			_case_begin_251710cc8:;
			{
				_23ac5890d_optimizeWhileIter(&(*_self_), _35835_stmt.operator jule::Ptr<_249be3900_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be347c_InfIter>>()) {
			_case_begin_251710d50:;
			{
				_23ad46006_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_249be347c_InfIter>().get()._field_Scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be598a_Assign>>()) {
			_case_begin_251710dc7:;
			{
				_23ad33774_optimizeAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_249be598a_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be5d42_MultiAssign>>()) {
			_case_begin_251710e4e:;
			{
				_23ad3ba79_optimizeMultiAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_249be5d42_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be6381_Match>>()) {
			_case_begin_251710ec6:;
			{
				_23ac57445_optimizeMatch(&(*_self_), _35835_stmt.operator jule::Ptr<_249be6381_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be7904_RetSt>>()) {
			_case_begin_25171104d:;
			{
				_23ad3ecbe_optimizeRet(&(*_self_), _35835_stmt.operator jule::Ptr<_249be7904_RetSt>());
			}
		}
		_match_end_25170e49c:;
	};
}



inline void _23ad46006_optimizeChild(_23b0684c0_scopeOptimizer* _self_, jule::Ptr<_249be2635_Scope> _38536_child) {
	jule::Ptr<_23b0684c0_scopeOptimizer> _38617_so = static__23ac0920a_new(_38536_child);;
	_23ad3b7d2_optimize(_38617_so.ptr());
}



inline void _23ad3b7d2_optimize(_23b0684c0_scopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_25171730c:;
		if (it != expr.end()) {
			jule::I64 _39214_i = it - expr.begin();
			jule::Any _39221_stmt = *it;
			{
				(*_self_)._field_i=_39214_i;
				_23ad415d9_optimizeStmt(&(*_self_), _39221_stmt);
			}
			_iter_next_25171730c:;
			++it;
			_39214_i++;
			goto _iter_begin_25171730c;
		}
		_iter_end_25171730c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _23b0684c0_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__23ad78ad8_optimize(jule::Any& _5829_model) {
	if (_24a574a22_exprEnabled) {
		jule::Ptr<_23b5ccd20_exprOptimizer> _6121_exop = jule::new_ptr<_23b5ccd20_exprOptimizer>(_23b5ccd20_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5829_model))))});;
		_23b24c693_do(_6121_exop.ptr());
	};
}



inline jule::Bool _23ad7c339_strCond(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc63d8_BinopExprModel> _6826_m) {
	jule::Ptr<_249cb5263_Prim> _6913_lp = _249cb289d_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_249cb8497_IsStr(_6913_lp.ptr()))))) {
		return false;
	};
	if (((_6826_m.get()._field_Op.get()._field_Kind != jule::Str("==", 2)) && (_6826_m.get()._field_Op.get()._field_Kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_2491152a6_Const>>()) {
			_case_begin_2517221e6:;
			{
				std::tie(_6826_m.get()._field_Left,_6826_m.get()._field_Right) = std::make_tuple(_6826_m.get()._field_Right,_6826_m.get()._field_Left);
				goto _julec_label_opt;
			}
		}
		_match_end_251722191:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_2491152a6_Const>>()) {
			_case_begin_2517239cd:;
			{
				goto _match_end_251722dea;
			}
		}
		else {
			_case_begin_25172334b:;
			{
				return true;
			}
		}
		_match_end_251722dea:;
	};
	_julec_label_opt:;
	jule::Ptr<_2491152a6_Const> _8813_c = _6826_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_2491152a6_Const>();;
	if ((!(_249166824_ReadStr(_8813_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_251724c54:;
			{
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_249bc8aa0_CommonSubIdentExprModel>(_249bc8aa0_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_251724cba:;
			{
				jule::Ptr<_23abd3d83_Token> _10021_op = _6826_m.get()._field_Op;;
				_10021_op.get()._field_Kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_249bc65c5_UnaryExprModel>(_249bc65c5_UnaryExprModel{._field_Expr=jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc8aa0_CommonSubIdentExprModel>(_249bc8aa0_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)})), }), ._field_Op=_10021_op}));
			}
		}
		_match_end_251724490:;
	};
	return true;
}



inline void _23ad7cbec_binary(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc63d8_BinopExprModel> _11625_m) {
	static__23ad78ad8_optimize(_11625_m.get()._field_Left.get()._field_Model);
	static__23ad78ad8_optimize(_11625_m.get()._field_Right.get()._field_Model);
	{
		auto &_match_expr{ _11625_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_2491152a6_Const>>()) {
			_case_begin_25172125b:;
			{
				goto _match_end_251728ad2;
			}
		}
		else {
			_case_begin_251728c25:;
			{
				return;;
			}
		}
		_match_end_251728ad2:;
	};
	if ((_23ac53243_Cond && _23ad7c339_strCond(&(*_self_), _11625_m))) {
		return;;
	};
	if ((!(_23ac46236_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _11625_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_251729de1:;
			{
				jule::Bool _13618_ok;;
				jule::U64 _13622_x;;
				std::tie(_13618_ok,_13622_x) = _23b412acd_checkForBitShiftOpt(_11625_m.get()._field_Left,_11625_m.get()._field_Right);
				if (_13618_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_2491152a6_Const> _13925_c = _11625_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_2491152a6_Const>();;
					_24917646b_SetU64(_13925_c.ptr(), _13622_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_251729e68:;
			{
				jule::Bool _14418_ok;;
				jule::U64 _14422_x;;
				std::tie(_14418_ok,_14422_x) = _23b412acd_checkForBitShiftOpt(_11625_m.get()._field_Left,_11625_m.get()._field_Right);
				if (_14418_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_2491152a6_Const> _14725_c = _11625_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_2491152a6_Const>();;
					_24917646b_SetU64(_14725_c.ptr(), _14422_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_251729ee0:;
			{
				jule::Ptr<_2491152a6_Const> _15221_c = _11625_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_2491152a6_Const>();;
				jule::F64 _15317_d = _24916922d_AsF64(_15221_c.ptr());;
				if ((_15317_d == 2LL)) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_24916a0db_SetI64(_15221_c.ptr(), 1LL);
				};
			}
		}
		_match_end_251729c15:;
	};
	jule::Any _15917_model = jule::Any(jule::new_ptr<_23ac114cb_UnsafeBinopExprModel>(_23ac114cb_UnsafeBinopExprModel{._field_Node=_11625_m}));;
	(*((*_self_)._field_model))=(*(((jule::Any*)((&(_15917_model))))));
}



inline void _23ad84a7d_unary(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc65c5_UnaryExprModel> _16324_m) {
	static__23ad78ad8_optimize(_16324_m.get()._field_Expr.get()._field_Model);
	if ((_23ac5284c_Ptr && (_16324_m.get()._field_Op.get()._field_Kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16324_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_249bc65c5_UnaryExprModel>>()) {
				_case_begin_2517328aa:;
				{
					jule::Ptr<_249bc65c5_UnaryExprModel> _16825_um = _16324_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_249bc65c5_UnaryExprModel>();;
					if ((_16825_um.get()._field_Op.get()._field_Kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16825_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_251732855:;
		};
	};
}



inline void _23ad8c459_structureLit(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc699e_StructLitExprModel> _17631_m) {
	{
		auto &expr = _17631_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_251734626:;
		if (it != expr.end()) {
			jule::Ptr<_249bc67b2_StructArgExprModel> _17721_arg = *it;
			{
				static__23ad78ad8_optimize(_17721_arg.get()._field_Expr);
			}
			_iter_next_251734626:;
			++it;
			goto _iter_begin_251734626;
		}
		_iter_end_251734626:;
	};
}



inline void _23ad8db53_allocStructure(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc6b8b_AllocStructLitExprModel> _18233_m) {
	_23ad8c459_structureLit(&(*_self_), _18233_m.get()._field_Lit);
}



inline void _23ad9b842_casting(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc6d78_CastingExprModel> _18626_m) {
	static__23ad78ad8_optimize(_18626_m.get()._field_Expr);
}



inline void _23adad8dc_args(_23b5ccd20_exprOptimizer* _self_, jule::Slice<jule::Any>& _19024_args) {
	{
		auto &expr = _19024_args;
		auto it = expr.begin();
		_iter_begin_2517362a4:;
		if (it != expr.end()) {
			jule::I64 _19114_i = it - expr.begin();
			jule::Any _19121_arg = *it;
			{
				static__23ad78ad8_optimize(_19121_arg);
				_19024_args[_19114_i]=_19121_arg;
			}
			_iter_next_2517362a4:;
			++it;
			_19114_i++;
			goto _iter_begin_2517362a4;
		}
		_iter_end_2517362a4:;
	};
}



inline void _23ade327e_scope(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249be2635_Scope>& _19725_s) {
	jule::Ptr<_23b0684c0_scopeOptimizer> _19817_scopt = static__23ac0920a_new(_19725_s);;
	_23ad3b7d2_optimize(_19817_scopt.ptr());
}



inline void _23ade6c66_funcCall(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc7065_FnCallExprModel> _20227_m) {
	static__23ad78ad8_optimize(_20227_m.get()._field_Expr);
	_23adad8dc_args(&(*_self_), _20227_m.get()._field_Args);
	if ((_20227_m.get()._field_Except != nullptr)) {
		_23ade327e_scope(&(*_self_), _20227_m.get()._field_Except);
	};
}



inline void _23ae0107d_slice(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc7252_SliceExprModel> _21024_m) {
	_23adad8dc_args(&(*_self_), _21024_m.get()._field_Elems);
}



inline void _23b040bb2_array(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc86c6_ArrayExprModel> _21424_m) {
	if (((_21424_m.get()._field_Elems.len() == 2LL) && (_21424_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _21621_elem = _21424_m.get()._field_Elems[0LL];;
		static__23ad78ad8_optimize(_21621_elem);
		_21424_m.get()._field_Elems[0LL]=_21621_elem;
	};
	_23adad8dc_args(&(*_self_), _21424_m.get()._field_Elems);
}



inline void _23b054bd7_indexing(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc743e_IndexingExprModel> _22327_m) {
	static__23ad78ad8_optimize(_22327_m.get()._field_Expr.get()._field_Model);
	static__23ad78ad8_optimize(_22327_m.get()._field_Index.get()._field_Model);
	if ((!(_23ac4e45e_Access))) {
		return;;
	};
	jule::Bool _22913_array = (_249cb35b3_Arr(_22327_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_22913_array && _249c80915_IsConst(_22327_m.get()._field_Index.ptr()))) {
		jule::Any _23221_model = jule::Any(jule::new_ptr<_23b73d601_UnsafeIndexingExprModel>(_23b73d601_UnsafeIndexingExprModel{._field_Node=_22327_m}));;
		(*((*_self_)._field_model))=(*(((jule::Any*)((&(_23221_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22327_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_249c3702b_Var>>()) {
			_case_begin_251740643:;
			{
				jule::Ptr<_249c3702b_Var> _23817_i = _22327_m.get()._field_Index.get()._field_Model.operator jule::Ptr<_249c3702b_Var>();;
				if ((_23817_i.get()._field_Mutable || (_23817_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_2517405dd;
				};
				{
					auto &_match_expr{ _22327_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_249c3702b_Var>>()) {
						_case_begin_25174204b:;
						{
							jule::Ptr<_249c3702b_Var> _24421_r = _22327_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_249c3702b_Var>();;
							if ((_23817_i.get()._field_IterRelation.get()._field_Range == _24421_r)) {
								jule::Any _24729_model = jule::Any(jule::new_ptr<_23b73d601_UnsafeIndexingExprModel>(_23b73d601_UnsafeIndexingExprModel{._field_Node=_22327_m}));;
								(*((*_self_)._field_model))=(*(((jule::Any*)((&(_24729_model))))));
							};
						}
					}
					_match_end_251741ee6:;
				};
			}
		}
		_match_end_2517405dd:;
	};
}



inline void _23b05ddbc_anonFunc(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc762b_AnonFnExprModel> _25427_m) {
	_23ade327e_scope(&(*_self_), _25427_m.get()._field_Func.get()._field_Scope);
}



inline void _23b064d4b_mapExpr(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc7a05_MapExprModel> _25826_m) {
	{
		auto &expr = _25826_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_2517448ab:;
		if (it != expr.end()) {
			jule::Ptr<_249bc7818_KeyValPairExprModel> _25921_pair = *it;
			{
				static__23ad78ad8_optimize(_25921_pair.get()._field_Key);
				static__23ad78ad8_optimize(_25921_pair.get()._field_Val);
			}
			_iter_next_2517448ab:;
			++it;
			goto _iter_begin_2517448ab;
		}
		_iter_end_2517448ab:;
	};
}



inline void _23b065dc4_slicing(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc7be2_SlicingExprModel> _26526_m) {
	static__23ad78ad8_optimize(_26526_m.get()._field_Expr);
	static__23ad78ad8_optimize(_26526_m.get()._field_Left);
	if ((_26526_m.get()._field_Right != nullptr)) {
		static__23ad78ad8_optimize(_26526_m.get()._field_Right);
	};
}



inline void _23b054621_traitSub(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc7dce_TraitSubIdentExprModel> _27327_m) {
	static__23ad78ad8_optimize(_27327_m.get()._field_Expr);
}



inline void _23b069c74_structureSub(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc82ec_StructSubIdentExprModel> _27731_m) {
	static__23ad78ad8_optimize(_27731_m.get()._field_Expr.get()._field_Model);
}



inline void _23b07c01c_commonSub(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc8aa0_CommonSubIdentExprModel> _28128_m) {
	static__23ad78ad8_optimize(_28128_m.get()._field_Expr);
}



inline void _23b081b26_tuple(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc8c8c_TupleExprModel> _28524_m) {
	{
		auto &expr = _28524_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_2517482b6:;
		if (it != expr.end()) {
			jule::Ptr<_249c80052_Data> _28621_d = *it;
			{
				static__23ad78ad8_optimize(_28621_d.get()._field_Model);
			}
			_iter_next_2517482b6:;
			++it;
			goto _iter_begin_2517482b6;
		}
		_iter_end_2517482b6:;
	};
}



inline void _23b0872ad_newCall(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc9540_BuiltinNewCallExprModel> _29126_m) {
	if ((_29126_m.get()._field_Init != nullptr)) {
		static__23ad78ad8_optimize(_29126_m.get()._field_Init);
	};
}



inline void _23b0886bb_outCall(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc8e79_BuiltinOutCallExprModel> _29726_m) {
	static__23ad78ad8_optimize(_29726_m.get()._field_Expr);
}



inline void _23b089975_outlnCall(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc9166_BuiltinOutlnCallExprModel> _30128_m) {
	static__23ad78ad8_optimize(_30128_m.get()._field_Expr);
}



inline void _23b08b218_panicCall(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc972c_BuiltinPanicCallExprModel> _30528_m) {
	static__23ad78ad8_optimize(_30528_m.get()._field_Expr);
}



inline void _23b08ec55_assertCall(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc9919_BuiltinAssertCallExprModel> _30929_m) {
	static__23ad78ad8_optimize(_30929_m.get()._field_Expr);
}



inline void _23b09baa8_errorCall(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel> _31328_m) {
	static__23ad78ad8_optimize(_31328_m.get()._field_Err);
}



inline void _23b0a84dd_makeCall(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc9b06_BuiltinMakeCallExprModel> _31727_m) {
	if ((_31727_m.get()._field_Len != nullptr)) {
		static__23ad78ad8_optimize(_31727_m.get()._field_Len);
	};
	if ((_31727_m.get()._field_Cap != nullptr)) {
		static__23ad78ad8_optimize(_31727_m.get()._field_Cap);
	};
}



inline void _23b0b3251_appendCall(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc9ce3_BuiltinAppendCallExprModel> _32629_m) {
	static__23ad78ad8_optimize(_32629_m.get()._field_Dest);
	static__23ad78ad8_optimize(_32629_m.get()._field_Elements);
}



inline void _23b0d455d_lenCall(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc9ed0_BuiltinLenCallExprModel> _33126_m) {
	static__23ad78ad8_optimize(_33126_m.get()._field_Expr.get()._field_Model);
}



inline void _23b0d6d02_capCall(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bca1bc_BuiltinCapCallExprModel> _33526_m) {
	static__23ad78ad8_optimize(_33526_m.get()._field_Expr.get()._field_Model);
}



inline void _23b0db411_cloneCall(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc9353_BuiltinCloneCallExprModel> _33928_m) {
	static__23ad78ad8_optimize(_33928_m.get()._field_Expr);
}



inline void _23b0e952e_deleteCall(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bc80bb_BuiltinDeleteCallExprModel> _34329_m) {
	static__23ad78ad8_optimize(_34329_m.get()._field_Dest.get()._field_Model);
	if ((_34329_m.get()._field_Key != nullptr)) {
		static__23ad78ad8_optimize(_34329_m.get()._field_Key.get()._field_Model);
	};
}



inline void _23b10c93d_sizeof(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bcac06_SizeofExprModel> _35025_m) {
	static__23ad78ad8_optimize(_35025_m.get()._field_Expr);
}



inline void _23b145b85_alignof(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bcade3_AlignofExprModel> _35426_m) {
	static__23ad78ad8_optimize(_35426_m.get()._field_Expr);
}



inline void _23b19010d_integratedToStr(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bcb2bc_IntegratedToStrExprModel> _35834_m) {
	static__23ad78ad8_optimize(_35834_m.get()._field_Expr);
}



inline void _23b242b3e_free(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bcb696_FreeExprModel> _36223_m) {
	static__23ad78ad8_optimize(_36223_m.get()._field_Expr);
}



inline void _23b245aed_backendEmit(_23b5ccd20_exprOptimizer* _self_, jule::Ptr<_249bcb4a9_BackendEmitExprModel> _36630_m) {
	_23adad8dc_args(&(*_self_), _36630_m.get()._field_Exprs);
}



inline void _23b24c693_do(_23b5ccd20_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_249bc63d8_BinopExprModel>>()) {
			_case_begin_25175327c:;
			{
				_23ad7cbec_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc63d8_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc65c5_UnaryExprModel>>()) {
			_case_begin_2517532e3:;
			{
				_23ad84a7d_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc65c5_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc699e_StructLitExprModel>>()) {
			_case_begin_251753359:;
			{
				_23ad8c459_structureLit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc699e_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc6b8b_AllocStructLitExprModel>>()) {
			_case_begin_2517533c0:;
			{
				_23ad8db53_allocStructure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc6b8b_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc6d78_CastingExprModel>>()) {
			_case_begin_251753436:;
			{
				_23ad9b842_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc6d78_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc7065_FnCallExprModel>>()) {
			_case_begin_25175349c:;
			{
				_23ade6c66_funcCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc7065_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc7252_SliceExprModel>>()) {
			_case_begin_251753513:;
			{
				_23ae0107d_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc7252_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc86c6_ArrayExprModel>>()) {
			_case_begin_25175358a:;
			{
				_23b040bb2_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc86c6_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc743e_IndexingExprModel>>()) {
			_case_begin_251753612:;
			{
				_23b054bd7_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc743e_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc762b_AnonFnExprModel>>()) {
			_case_begin_251753689:;
			{
				_23b05ddbc_anonFunc(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc762b_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc7a05_MapExprModel>>()) {
			_case_begin_251753711:;
			{
				_23b064d4b_mapExpr(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc7a05_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc7be2_SlicingExprModel>>()) {
			_case_begin_251753788:;
			{
				_23b065dc4_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc7be2_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc7dce_TraitSubIdentExprModel>>()) {
			_case_begin_251753810:;
			{
				_23b054621_traitSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc7dce_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc82ec_StructSubIdentExprModel>>()) {
			_case_begin_251753887:;
			{
				_23b069c74_structureSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc82ec_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc8aa0_CommonSubIdentExprModel>>()) {
			_case_begin_25175390e:;
			{
				_23b07c01c_commonSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc8aa0_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc8c8c_TupleExprModel>>()) {
			_case_begin_251753986:;
			{
				_23b081b26_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc8c8c_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc8e79_BuiltinOutCallExprModel>>()) {
			_case_begin_251753a0d:;
			{
				_23b0886bb_outCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc8e79_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9166_BuiltinOutlnCallExprModel>>()) {
			_case_begin_251753a85:;
			{
				_23b089975_outlnCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc9166_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9540_BuiltinNewCallExprModel>>()) {
			_case_begin_251753b0c:;
			{
				_23b0872ad_newCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc9540_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc972c_BuiltinPanicCallExprModel>>()) {
			_case_begin_251753b84:;
			{
				_23b08b218_panicCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc972c_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9919_BuiltinAssertCallExprModel>>()) {
			_case_begin_251753c0b:;
			{
				_23b08ec55_assertCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc9919_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel>>()) {
			_case_begin_251753c83:;
			{
				_23b09baa8_errorCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9b06_BuiltinMakeCallExprModel>>()) {
			_case_begin_251753d0a:;
			{
				_23b0a84dd_makeCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc9b06_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9ce3_BuiltinAppendCallExprModel>>()) {
			_case_begin_251753d82:;
			{
				_23b0b3251_appendCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc9ce3_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9ed0_BuiltinLenCallExprModel>>()) {
			_case_begin_251753e09:;
			{
				_23b0d455d_lenCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc9ed0_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bca1bc_BuiltinCapCallExprModel>>()) {
			_case_begin_251753e81:;
			{
				_23b0d6d02_capCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bca1bc_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9353_BuiltinCloneCallExprModel>>()) {
			_case_begin_251754008:;
			{
				_23b0db411_cloneCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc9353_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc80bb_BuiltinDeleteCallExprModel>>()) {
			_case_begin_251754080:;
			{
				_23b0e952e_deleteCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bc80bb_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcac06_SizeofExprModel>>()) {
			_case_begin_251754107:;
			{
				_23b10c93d_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bcac06_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcade3_AlignofExprModel>>()) {
			_case_begin_25175417e:;
			{
				_23b145b85_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bcade3_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcb2bc_IntegratedToStrExprModel>>()) {
			_case_begin_251754206:;
			{
				_23b19010d_integratedToStr(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bcb2bc_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcb696_FreeExprModel>>()) {
			_case_begin_25175427d:;
			{
				_23b242b3e_free(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bcb696_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcb4a9_BackendEmitExprModel>>()) {
			_case_begin_251754305:;
			{
				_23b245aed_backendEmit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_249bcb4a9_BackendEmitExprModel>());
			}
		}
		_match_end_251752e6e:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _23b5ccd20_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_24a648497_Optimizer> static__24a5930b2_New(jule::Ptr<_24a1bc659_IR>& _2524_ir) {
	return jule::new_ptr<_24a648497_Optimizer>(_24a648497_Optimizer{._field_ir=_2524_ir});
}



inline void _24a5939a8_optimizeGlobal(_24a648497_Optimizer* _self_, jule::Ptr<_249c3702b_Var>& _3138_v) {
	if ((!(_3138_v.get()._field_CppLinked))) {
		static__23ad78ad8_optimize(_3138_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _24a5a2115_optimizeFunction(_24a648497_Optimizer* _self_, jule::Ptr<_249bcbe38_Fn>& _3740_func) {
	if (_3740_func.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _3740_func.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_25176cede:;
		if (it != expr.end()) {
			jule::Ptr<_249bcc312_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_23b0684c0_scopeOptimizer> _4221_so = static__23ac0920a_new(_4121_ins.get()._field_Scope);;
				_23ad3b7d2_optimize(_4221_so.ptr());
			}
			_iter_next_25176cede:;
			++it;
			goto _iter_begin_25176cede;
		}
		_iter_end_25176cede:;
	};
}



inline void _24a57521a_optimizeStruct(_24a648497_Optimizer* _self_, jule::Ptr<_249036b01_Struct>& _4738_s) {
	if (_4738_s.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _4738_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_25176e353:;
		if (it != expr.end()) {
			jule::Ptr<_249062e4b_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_25176eb8e:;
					if (it != expr.end()) {
						jule::Ptr<_24903e268_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__23ad78ad8_optimize(_5225_f.get()._field_Default.get()._field_Model);
							};
						}
						_iter_next_25176eb8e:;
						++it;
						goto _iter_begin_25176eb8e;
					}
					_iter_end_25176eb8e:;
				};
				{
					auto &expr = _5121_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_251771025:;
					if (it != expr.end()) {
						jule::Ptr<_249bcbe38_Fn> _5725_m = *it;
						{
							_24a5a2115_optimizeFunction(&(*_self_), _5725_m);
						}
						_iter_next_251771025:;
						++it;
						goto _iter_begin_251771025;
					}
					_iter_end_251771025:;
				};
			}
			_iter_next_25176e353:;
			++it;
			goto _iter_begin_25176e353;
		}
		_iter_end_25176e353:;
	};
}



inline void _24a5d1287_optimizeGlobals(_24a648497_Optimizer* _self_, jule::Ptr<_249c140d5_Package>& _6339_p) {
	{
		auto &expr = _6339_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_2517712ab:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_25177207b:;
					if (it != expr.end()) {
						jule::Ptr<_249c3702b_Var> _6525_v = *it;
						{
							_24a5939a8_optimizeGlobal(&(*_self_), _6525_v);
						}
						_iter_next_25177207b:;
						++it;
						goto _iter_begin_25177207b;
					}
					_iter_end_25177207b:;
				};
			}
			_iter_next_2517712ab:;
			++it;
			goto _iter_begin_2517712ab;
		}
		_iter_end_2517712ab:;
	};
}



inline void _24a5d163e_optimizeFunctions(_24a648497_Optimizer* _self_, jule::Ptr<_249c140d5_Package>& _7141_p) {
	{
		auto &expr = _7141_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_2517726ec:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_2517734cd:;
					if (it != expr.end()) {
						jule::Ptr<_249bcbe38_Fn> _7325_func = *it;
						{
							_24a5a2115_optimizeFunction(&(*_self_), _7325_func);
						}
						_iter_next_2517734cd:;
						++it;
						goto _iter_begin_2517734cd;
					}
					_iter_end_2517734cd:;
				};
			}
			_iter_next_2517726ec:;
			++it;
			goto _iter_begin_2517726ec;
		}
		_iter_end_2517726ec:;
	};
}



inline void _24a5d30be_optimizeStructs(_24a648497_Optimizer* _self_, jule::Ptr<_249c140d5_Package>& _7939_p) {
	{
		auto &expr = _7939_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_251773b4e:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_251774930:;
					if (it != expr.end()) {
						jule::Ptr<_249036b01_Struct> _8125_s = *it;
						{
							_24a57521a_optimizeStruct(&(*_self_), _8125_s);
						}
						_iter_next_251774930:;
						++it;
						goto _iter_begin_251774930;
					}
					_iter_end_251774930:;
				};
			}
			_iter_next_251773b4e:;
			++it;
			goto _iter_begin_251773b4e;
		}
		_iter_end_251773b4e:;
	};
}



inline void _24a5de240_optimizePackage(_24a648497_Optimizer* _self_, jule::Ptr<_249c140d5_Package>& _8739_p) {
	_24a5d1287_optimizeGlobals(&(*_self_), _8739_p);
	_24a5d163e_optimizeFunctions(&(*_self_), _8739_p);
	_24a5d30be_optimizeStructs(&(*_self_), _8739_p);
}



inline void _24a5e5ab5_Optimize(_24a648497_Optimizer* _self_) {
	_24a5ede64_detectEnabled();
	if (_23ac21b7e_Deadcode) {
		_24a672bec_EliminateDefines((*_self_)._field_ir);
	};
	if ((_24a575b77_scopeEnabled || _24a574a22_exprEnabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_Used;
			auto it = expr.begin();
			_iter_begin_251776503:;
			if (it != expr.end()) {
				jule::Ptr<_249c1117b_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_24a5de240_optimizePackage(&(*_self_), _10325_u.get()._field_Package);
					};
				}
				_iter_next_251776503:;
				++it;
				goto _iter_begin_251776503;
			}
			_iter_end_251776503:;
		};
		_24a5de240_optimizePackage(&(*_self_), (*_self_)._field_ir.get()._field_Main);
	};
	if (_23ac21b7e_Deadcode) {
		_24a67799e_EliminateScopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _24a648497_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__24a681aa7_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__24a682c1d_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__24a681aa7_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _24a682a31_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__24a6843c3_LogFlat(_23a8a5ca8_Log& _1424_l) {
	jule::outln(_1424_l._field_Text);
}



inline void static__24a6845d2_LogError(_23a8a5ca8_Log& _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1925_l._field_Text);
	static__24a681aa7_Reset();
	if ((_1925_l._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1925_l._field_Path);
	};
	if (((_1925_l._field_Row != 0LL) && (_1925_l._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_249bc2813_Itoa(_1925_l._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_249bc2813_Itoa(_1925_l._field_Column));
	};
	if ((_1925_l._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _23a831e21_TrimLeft(_1925_l._field_Line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1925_l._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_23a831e21_TrimLeft(_3621_line,jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _249bc2813_Itoa(_1925_l._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_23a811c47_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_23a811c47_Repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1925_l._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1925_l._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_23a811c47_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__24a682c1d_Print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1925_l._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__24a6847e1_Log(_23a8a5ca8_Log& _6520_l) {
	{
		auto &_match_expr{ _6520_l._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_2517880b4:;
			{
				static__24a6843c3_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_25178812a:;
			{
				static__24a6845d2_LogError(_6520_l);
			}
		}
		_match_end_251787b52:;
	};
}



inline void static__24a684a00_PrintLogs(jule::Slice<_23a8a5ca8_Log>& _7526_logs) {
	{
		auto &expr = _7526_logs;
		auto it = expr.begin();
		_iter_begin_25177c3b6:;
		if (it != expr.end()) {
			_23a8a5ca8_Log &_7616_l = *it;
			{
				static__24a6847e1_Log(_7616_l);
			}
			_iter_next_25177c3b6:;
			++it;
			goto _iter_begin_25177c3b6;
		}
		_iter_end_25177c3b6:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_249bc2813_Itoa(static_cast<jule::I64>(_7526_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _24a68411a_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _24aca908b_Unix(_24aca8bd4_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _24acab621_unixYearToSeconds(_5717_y,_5617_leap);;
	_6817_t+=_24acab9a6_unixMonthToSeconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_Hour);
	_6817_t+=(60LLU * (*_self_)._field_Minute);
	_6817_t+=(*_self_)._field_Second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _24aca8bd4_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _24aca9377_Time static__24aca971d_Unix(jule::U64 _9120_sec) {
	return _24aca9377_Time{._field_sec=_9120_sec};
}



inline _24aca9377_Time static__24aca991b_Now(void) {
	return static__24aca971d_Unix(static_cast<jule::U64>(_24acab313_unix()));
}



inline jule::U64 _24aca9d6c_Unix(_24aca9377_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _24acaa0d1_Day(_24aca9377_Time* _self_) {
	return _24acab05a_Abs(&(*_self_))._field_Day;
}



inline jule::U64 _24acaa345_Month(_24aca9377_Time* _self_) {
	return _24acab05a_Abs(&(*_self_))._field_Month;
}



inline jule::U64 _24acaa5a9_Year(_24aca9377_Time* _self_) {
	return _24acab05a_Abs(&(*_self_))._field_Year;
}



inline jule::U64 _24acaa81d_Second(_24aca9377_Time* _self_) {
	return _24acab05a_Abs(&(*_self_))._field_Second;
}



inline jule::U64 _24acaaa82_Minute(_24aca9377_Time* _self_) {
	return _24acab05a_Abs(&(*_self_))._field_Minute;
}



inline jule::U64 _24acaace6_Hour(_24aca9377_Time* _self_) {
	return _24acab05a_Abs(&(*_self_))._field_Hour;
}



inline _24aca8bd4_AbsTime _24acab05a_Abs(_24aca9377_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_24aca8277_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_24aca8277_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_2517bc02c:;
	}
	_iter_end_2517bc02c:;;
	_24aca8bd4_AbsTime _17417_t = _24aca8bd4_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _24aca9377_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_24ac041d4_scopeCoder> static__24ac047ab_new(jule::Ptr<_24acb15c1_ObjectCoder>& _5524_oc) {
	return jule::new_ptr<_24ac041d4_scopeCoder>(_24ac041d4_scopeCoder{._field_oc=_5524_oc});
}



inline void _24ac04a31_rangeIndexIter(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be42d5_RangeIter>& _6139_it) {
	jule::Str _6213_begin = static__24ac21740_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	jule::Str _6313_next = static__24ac21c7e_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_24ac88d90_addIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_23ac1c64c_Copy && _24ac0996a_isCopyOptimizable(_6139_it.get()._field_Expr))) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_24ac17b43_model(_self_.get()._field_oc.get()._field_ec, _6139_it.get()._field_Expr.get()._field_Model);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, _6213_begin);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_24ac88d90_addIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_24acb2c21_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_24ac55de5_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_24ac267bc_indent(_self_.get()._field_oc);
	};
	if ((_6139_it.get()._field_KeyB != nullptr)) {
		if (_23ac1c64c_Copy) {
			_6139_it.get()._field_KeyB.get()._field_Reference=_24ac09d00_isIterCopyOptimizable(_6139_it.get()._field_Expr,_6139_it.get()._field_KeyB);
		};
		_24acb2c21_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_24ac55de5_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_24ac267bc_indent(_self_.get()._field_oc);
	};
	_24ac09393_scope(_self_, _6139_it.get()._field_Scope);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, _6313_next);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_24ac267bc_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_24ac55de5_write(_self_.get()._field_oc, static__24ac21498_var(_6139_it.get()._field_KeyA));
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_24ac267bc_indent(_self_.get()._field_oc);
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_24ac55de5_write(_self_.get()._field_oc, _6213_begin);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_24ac89775_doneIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, static__24ac219d7_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it))));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_24ac89775_doneIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _24ac04ca6_rangeHashmapIter(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be42d5_RangeIter>& _12941_it) {
	jule::Str _13013_begin = static__24ac21740_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	jule::Str _13113_next = static__24ac21c7e_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_24ac88d90_addIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_23ac1c64c_Copy && _24ac0996a_isCopyOptimizable(_12941_it.get()._field_Expr))) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_24ac17b43_model(_self_.get()._field_oc.get()._field_ec, _12941_it.get()._field_Expr.get()._field_Model);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, _13013_begin);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_24ac88d90_addIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	if ((_12941_it.get()._field_KeyA != nullptr)) {
		if (_23ac1c64c_Copy) {
			_12941_it.get()._field_KeyA.get()._field_Reference=_24ac09d00_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyA);
		};
		_24acb2c21_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_24ac55de5_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_24ac267bc_indent(_self_.get()._field_oc);
	};
	if ((_12941_it.get()._field_KeyB != nullptr)) {
		if (_23ac1c64c_Copy) {
			_12941_it.get()._field_KeyB.get()._field_Reference=_24ac09d00_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyB);
		};
		_24acb2c21_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_24ac55de5_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_24ac267bc_indent(_self_.get()._field_oc);
	};
	_24ac09393_scope(_self_, _12941_it.get()._field_Scope);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, _13113_next);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_24ac55de5_write(_self_.get()._field_oc, _13013_begin);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_24ac89775_doneIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, static__24ac219d7_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it))));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_24ac89775_doneIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _24ac0502b_ifCase(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be2a31_If> _19530_i) {
	if ((_19530_i.get()._field_Expr != nullptr)) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _19530_i.get()._field_Expr);
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_24ac09393_scope(_self_, _19530_i.get()._field_Scope);
}



inline void _24ac052a1_conditional(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be3191_Conditional> _20435_c) {
	jule::Bool _20517_writed = false;;
	{
		auto &expr = _20435_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_251882a1b:;
		if (it != expr.end()) {
			jule::Ptr<_249be2a31_If> _20621_elif = *it;
			{
				if ((_20621_elif == nullptr)) {
					goto _iter_next_251882a1b;
				};
				if (_20517_writed) {
					_24ac55de5_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_20517_writed=true;
				_24ac0502b_ifCase(_self_, _20621_elif);
			}
			_iter_next_251882a1b:;
			++it;
			goto _iter_begin_251882a1b;
		}
		_iter_end_251882a1b:;
	};
	if ((_20435_c.get()._field_Default != nullptr)) {
		if (_20517_writed) {
			_24ac55de5_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_24ac09393_scope(_self_, _20435_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _24ac05526_infIter(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be347c_InfIter> _22431_it) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_24ac88d90_addIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac09393_scope(_self_, _22431_it.get()._field_Scope);
	_24ac89775_doneIndent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, static__24ac21c7e_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, static__24ac219d7_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _24ac0579b_whileIter(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be3900_WhileIter> _24133_it) {
	if (((_24133_it.get()._field_Expr != nullptr) && (_24133_it.get()._field_Next == nullptr))) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_24133_it.get()._field_Expr != nullptr)) {
			_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		};
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_24133_it.get()._field_Next != nullptr)) {
			_24ac08d98_st(_self_, _24133_it.get()._field_Next);
		};
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_24ac88d90_addIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac09393_scope(_self_, _24133_it.get()._field_Scope);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_24ac89775_doneIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, static__24ac21c7e_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, static__24ac219d7_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _24ac05a21_rangeIter(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be42d5_RangeIter> _27433_it) {
	{
		
		if ((_249cb3827_Slc(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_251894423:;
			{
				_24ac04a31_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_249cb35b3_Arr(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2518940e3:;
			{
				_24ac04a31_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_249cb42c8_Map(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_251894159:;
			{
				_24ac04ca6_rangeHashmapIter(_self_, _27433_it);
			}
		}
		else {
			_case_begin_25189407c:;
			{
				_24ac04a31_rangeIndexIter(_self_, _27433_it);
			}
		}
		_match_end_251893ea0:;
	};
}



inline void _24ac05c96_cont(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be46d1_ContSt> _28724_c) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_24ac55de5_write(_self_.get()._field_oc, static__24ac21c7e_iterNext(_28724_c.get()._field_It));
}



inline void _24ac0601b_label(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be4d74_Label> _29225_l) {
	_24ac55de5_write(_self_.get()._field_oc, static__24ac22026_label(_29225_l.get()._field_Ident));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _24ac06291_gotoSt(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be5160_GotoSt> _29726_gt) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_24ac55de5_write(_self_.get()._field_oc, static__24ac22026_label(_29726_gt.get()._field_Ident));
}



inline void _24ac06516_postfix(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be5517_Postfix> _30231_p) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("(", 1));
	_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _30231_p.get()._field_Expr);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
	_24ac55de5_write(_self_.get()._field_oc, _30231_p.get()._field_Op);
}



inline void _24ac0678b_assign(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be598a_Assign> _30930_a) {
	_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_L.get()._field_Model);
	_24ac55de5_write(_self_.get()._field_oc, _30930_a.get()._field_Op.get()._field_Kind);
	_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_R.get()._field_Model);
}



inline void _24ac06a11_mapLookupAssign(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be5d42_MultiAssign>& _31540_a) {
	jule::Ptr<_249bc743e_IndexingExprModel> _31617_iem = _31540_a.get()._field_R.operator jule::Ptr<_249bc743e_IndexingExprModel>();;
	_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _31617_iem.get()._field_Expr.get()._field_Model);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _31617_iem.get()._field_Index.get()._field_Model);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if ((_31540_a.get()._field_L[0LL] != nullptr)) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _31540_a.get()._field_L[0LL]);
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if ((_31540_a.get()._field_L[1LL] != nullptr)) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _31540_a.get()._field_L[1LL]);
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac06c86_multiAssign(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be5d42_MultiAssign> _33835_a) {
	{
		auto &_match_expr{ _33835_a.get()._field_R };
		
		if (_match_expr.type_is<jule::Ptr<_249bc743e_IndexingExprModel>>()) {
			_case_begin_2518a60d3:;
			{
				_24ac06a11_mapLookupAssign(_self_, _33835_a);
				return;;
			}
		}
		_match_end_2518a5dc4:;
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _33835_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_2518a6600:;
		if (it != expr.end()) {
			jule::I64 _34714_i = it - expr.begin();
			jule::Any _34721_l = *it;
			{
				if ((_34721_l == nullptr)) {
					_24ac55de5_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _34721_l);
				};
				if (((_33835_a.get()._field_L.len() - _34714_i) > 1LL)) {
					_24ac55de5_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_2518a6600:;
			++it;
			_34714_i++;
			goto _iter_begin_2518a6600;
		}
		_iter_end_2518a6600:;
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _33835_a.get()._field_R);
}



inline jule::Fn<void(void)> _24ac07094_matchExpr(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be6381_Match> _36133_m) {
	if ((!(_249c80915_IsConst(_36133_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_24ac55de5_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_2491273d9_IsBool(_36133_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_24915de8c_ReadBool(_36133_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_24ac17b43_model(_self_.get()._field_oc.get()._field_ec, _36133_m.get()._field_Expr.get()._field_Model);
		});
	};
	return nullptr;
}



inline void _24ac073b3_case(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be6381_Match> _37128_m, jule::Ptr<_249be6dcb_Case> _37143_c) {
	if (((_37143_c.get()._field_Exprs.len() != 0LL) && (!(_249be688c_IsGenericTypeMatch(_37128_m.ptr()))))) {
		if (((_37128_m.get()._field_Cases.len() > 0LL) && (_37128_m.get()._field_Cases[0LL] == _37143_c))) {
			_24ac55de5_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_24ac55de5_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _37143_c.get()._field_Exprs;
			auto it = expr.begin();
			_iter_begin_2518ae839:;
			if (it != expr.end()) {
				jule::I64 _37818_i = it - expr.begin();
				jule::Ptr<_249c80052_Data> _37825_expr = *it;
				{
					{
						
						if ((!(_37128_m.get()._field_TypeMatch))) {
							_case_begin_2518b18b3:;
							{
								jule::Fn<void(void)> _38125_caseExpr = _24ac07094_matchExpr(_self_, _37128_m);;
								if (_249c80c23_GoodOperand(_37128_m.get()._field_Expr.ptr(), _37825_expr)) {
									if ((_38125_caseExpr != nullptr)) {
										_38125_caseExpr();
										_24ac55de5_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _37825_expr.get()._field_Model);
								} else {
									_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _37825_expr.get()._field_Model);
									if ((_38125_caseExpr != nullptr)) {
										_24ac55de5_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_38125_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_2518b13da:;
							{
								_24ac55de5_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_24ac55de5_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _37825_expr.get()._field_Model);
								_24ac55de5_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_2518b130d:;
					};
					if (((_37143_c.get()._field_Exprs.len() - _37818_i) > 1LL)) {
						_24ac55de5_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_2518ae839:;
				++it;
				_37818_i++;
				goto _iter_begin_2518ae839;
			}
			_iter_end_2518ae839:;
		};
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_37128_m.get()._field_Default == _37143_c) && (_37128_m.get()._field_Cases.len() != 0LL))) {
		_24ac267bc_indent(_self_.get()._field_oc);
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_24ac88d90_addIndent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, static__24ac22565_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37143_c))));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_37143_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_24ac267bc_indent(_self_.get()._field_oc);
		_24ac09393_scope(_self_, _37143_c.get()._field_Scope);
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_24ac89775_doneIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _24ac07638_matchSt(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be6381_Match> _43031_m) {
	if (((_43031_m.get()._field_Cases.len() == 0LL) && (_43031_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _43513_genericTypeMatch = _249be688c_IsGenericTypeMatch(_43031_m.ptr());;
	if ((_43513_genericTypeMatch && ((_43031_m.get()._field_Default == nullptr) || (_43031_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_24ac88d90_addIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	if (((!(_43513_genericTypeMatch)) && (!(_249c80915_IsConst(_43031_m.get()._field_Expr.ptr()))))) {
		if ((_23ac1c64c_Copy && _24ac0996a_isCopyOptimizable(_43031_m.get()._field_Expr))) {
			_24ac55de5_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_24ac55de5_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _43031_m.get()._field_Expr.get()._field_Model);
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_24ac267bc_indent(_self_.get()._field_oc);
	};
	if ((_43031_m.get()._field_Cases.len() > 0LL)) {
		{
			auto &expr = _43031_m.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_2518c396e:;
			if (it != expr.end()) {
				jule::Ptr<_249be6dcb_Case> _45925_c = *it;
				{
					if ((_45925_c == nullptr)) {
						goto _iter_next_2518c396e;
					};
					_24ac55de5_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_24ac267bc_indent(_self_.get()._field_oc);
					_24ac073b3_case(_self_, _43031_m,_45925_c);
				}
				_iter_next_2518c396e:;
				++it;
				goto _iter_begin_2518c396e;
			}
			_iter_end_2518c396e:;
		};
	};
	if ((_43031_m.get()._field_Default != nullptr)) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_24ac073b3_case(_self_, _43031_m,_43031_m.get()._field_Default);
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, static__24ac222bd_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43031_m))));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_24ac89775_doneIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _24ac078ad_fallSt(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be7481_FallSt> _48626_f) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_24ac55de5_write(_self_.get()._field_oc, static__24ac22565_caseBegin(_48626_f.get()._field_DestCase));
}



inline void _24ac07b33_breakSt(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be4a88_BreakSt> _49127_b) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_49127_b.get()._field_It != 0LLU)) {
		_24ac55de5_write(_self_.get()._field_oc, static__24ac219d7_iterEnd(_49127_b.get()._field_It));
	} else {
		_24ac55de5_write(_self_.get()._field_oc, static__24ac222bd_matchEnd(_49127_b.get()._field_Mtch));
	};
}



inline void _24ac07da8_retWithVars(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be7904_RetSt> _50035_r) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_50035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_50035_r.get()._field_Func.get()._field_Result));
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_50035_r.get()._field_Vars.len() > 1LL)) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _50035_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_2518ce309:;
		if (it != expr.end()) {
			jule::I64 _51014_i = it - expr.begin();
			jule::Ptr<_249c3702b_Var> _51021_v = *it;
			{
				if (_23abd6627_IsIgnoreIdent(_51021_v.get()._field_Ident)) {
					_24ac183b3_initExpr(_self_.get()._field_oc.get()._field_ec, _51021_v.get()._field_Kind.get()._field_Kind);
				} else {
					_24ac55de5_write(_self_.get()._field_oc, static__24ac21498_var(_51021_v));
				};
				if (((_50035_r.get()._field_Vars.len() - _51014_i) > 1LL)) {
					_24ac55de5_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_2518ce309:;
			++it;
			_51014_i++;
			goto _iter_begin_2518ce309;
		}
		_iter_end_2518ce309:;
	};
	if ((_50035_r.get()._field_Vars.len() > 1LL)) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_50035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _24ac0812d_retTuple(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be7904_RetSt> _53032_r) {
	jule::Slice<jule::Ptr<_249c80052_Data>> _53117_datas = _53032_r.get()._field_Expr.operator jule::Ptr<_249bc8c8c_TupleExprModel>().get()._field_Datas;;
	{
		auto &expr = _53032_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_2518d4881:;
		if (it != expr.end()) {
			jule::I64 _53214_i = it - expr.begin();
			jule::Ptr<_249c3702b_Var> _53221_v = *it;
			{
				if (_23abd6627_IsIgnoreIdent(_53221_v.get()._field_Ident)) {
					goto _iter_next_2518d4881;
				};
				jule::Any _53621_model = _53117_datas[_53214_i].get()._field_Model;;
				if ((_53621_model == _53221_v)) {
					goto _iter_next_2518d4881;
				};
				_24ac55de5_write(_self_.get()._field_oc, static__24ac21498_var(_53221_v));
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _53621_model);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_24ac267bc_indent(_self_.get()._field_oc);
			}
			_iter_next_2518d4881:;
			++it;
			_53214_i++;
			goto _iter_begin_2518d4881;
		}
		_iter_end_2518d4881:;
	};
	if (_53032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_53032_r.get()._field_Func.get()._field_Result));
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _53117_datas;
		auto it = expr.begin();
		_iter_begin_2518d97cb:;
		if (it != expr.end()) {
			jule::I64 _55714_i = it - expr.begin();
			jule::Ptr<_249c80052_Data> _55721_d = *it;
			{
				jule::Ptr<_249c3702b_Var> _55821_v = _53032_r.get()._field_Vars[_55714_i];;
				if (_23abd6627_IsIgnoreIdent(_55821_v.get()._field_Ident)) {
					_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _55721_d.get()._field_Model);
				} else {
					_24ac55de5_write(_self_.get()._field_oc, static__24ac21498_var(_55821_v));
				};
				if (((_53117_datas.len() - _55714_i) > 1LL)) {
					_24ac55de5_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_2518d97cb:;
			++it;
			_55714_i++;
			goto _iter_begin_2518d97cb;
		}
		_iter_end_2518d97cb:;
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_53032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _24ac083a3_retWithExprs(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be7904_RetSt> _57536_r) {
	if ((_57536_r.get()._field_Vars.len() > 1LL)) {
		_24ac0812d_retTuple(_self_, _57536_r);
		return;;
	};
	if ((_57536_r.get()._field_Vars.len() > 0LL)) {
		jule::Ptr<_249c3702b_Var> _58321_v = _57536_r.get()._field_Vars[0LL];;
		if (((!(_23abd6627_IsIgnoreIdent(_58321_v.get()._field_Ident))) && (_57536_r.get()._field_Expr != _58321_v))) {
			jule::Str _58521_ident = static__24ac21498_var(_58321_v);;
			_24ac55de5_write(_self_.get()._field_oc, _58521_ident);
			_24ac55de5_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _57536_r.get()._field_Expr);
			_24ac55de5_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_24ac267bc_indent(_self_.get()._field_oc);
			if (_57536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_57536_r.get()._field_Func.get()._field_Result));
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_24ac55de5_write(_self_.get()._field_oc, _58521_ident);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_24ac55de5_write(_self_.get()._field_oc, _58521_ident);
			};
			return;;
		};
	};
	if (_57536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_57536_r.get()._field_Func.get()._field_Result));
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _57536_r.get()._field_Expr);
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _57536_r.get()._field_Expr);
	return;;
}



inline void _24ac08628_retSt(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be7904_RetSt> _61929_r) {
	if (((_61929_r.get()._field_Expr == nullptr) && (_61929_r.get()._field_Vars.len() == 0LL))) {
		if (_61929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_24ac55de5_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_61929_r.get()._field_Expr == nullptr)) {
		_24ac07da8_retWithVars(_self_, _61929_r);
		return;;
	};
	_24ac083a3_retWithExprs(_self_, _61929_r);
}



inline void _24ac08b23_var(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249c3702b_Var> _65427_v) {
	if ((!(_65427_v.get()._field_Constant))) {
		_24acb2d53_var(_self_.get()._field_oc, _65427_v);
	};
}



inline void _24ac08d98_st(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Any _66126_st) {
	if ((_66126_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _66126_st };
		
		if (_match_expr.type_is<jule::Ptr<_249be2635_Scope>>()) {
			_case_begin_251902e87:;
			{
				_24ac09393_scope(_self_, _66126_st.operator jule::Ptr<_249be2635_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249c3702b_Var>>()) {
			_case_begin_25190297b:;
			{
				_24ac08b23_var(_self_, _66126_st.operator jule::Ptr<_249c3702b_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249c80052_Data>>()) {
			_case_begin_2519034b5:;
			{
				_24ac17db8_expr(_self_.get()._field_oc.get()._field_ec, _66126_st.operator jule::Ptr<_249c80052_Data>().get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be3191_Conditional>>()) {
			_case_begin_25190352b:;
			{
				_24ac052a1_conditional(_self_, _66126_st.operator jule::Ptr<_249be3191_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be347c_InfIter>>()) {
			_case_begin_251903592:;
			{
				_24ac05526_infIter(_self_, _66126_st.operator jule::Ptr<_249be347c_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be3900_WhileIter>>()) {
			_case_begin_251903608:;
			{
				_24ac0579b_whileIter(_self_, _66126_st.operator jule::Ptr<_249be3900_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be42d5_RangeIter>>()) {
			_case_begin_25190366e:;
			{
				_24ac05a21_rangeIter(_self_, _66126_st.operator jule::Ptr<_249be42d5_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be46d1_ContSt>>()) {
			_case_begin_2519036d5:;
			{
				_24ac05c96_cont(_self_, _66126_st.operator jule::Ptr<_249be46d1_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be4d74_Label>>()) {
			_case_begin_25190374b:;
			{
				_24ac0601b_label(_self_, _66126_st.operator jule::Ptr<_249be4d74_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be5160_GotoSt>>()) {
			_case_begin_2519037b2:;
			{
				_24ac06291_gotoSt(_self_, _66126_st.operator jule::Ptr<_249be5160_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be5517_Postfix>>()) {
			_case_begin_251903828:;
			{
				_24ac06516_postfix(_self_, _66126_st.operator jule::Ptr<_249be5517_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be598a_Assign>>()) {
			_case_begin_25190388e:;
			{
				_24ac0678b_assign(_self_, _66126_st.operator jule::Ptr<_249be598a_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be5d42_MultiAssign>>()) {
			_case_begin_251903905:;
			{
				_24ac06c86_multiAssign(_self_, _66126_st.operator jule::Ptr<_249be5d42_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be6381_Match>>()) {
			_case_begin_25190397c:;
			{
				_24ac07638_matchSt(_self_, _66126_st.operator jule::Ptr<_249be6381_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be7481_FallSt>>()) {
			_case_begin_251903a04:;
			{
				_24ac078ad_fallSt(_self_, _66126_st.operator jule::Ptr<_249be7481_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be4a88_BreakSt>>()) {
			_case_begin_251903a7b:;
			{
				_24ac07b33_breakSt(_self_, _66126_st.operator jule::Ptr<_249be4a88_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be7904_RetSt>>()) {
			_case_begin_251903b03:;
			{
				_24ac08628_retSt(_self_, _66126_st.operator jule::Ptr<_249be7904_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2487dbd57_PushToSliceExprModel>>()) {
			_case_begin_251903b7a:;
			{
				_24ac15aca_pushToSlice(_self_.get()._field_oc.get()._field_ec, _66126_st.operator jule::Ptr<_2487dbd57_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_248c8054d_MutSlicingExprModel>>()) {
			_case_begin_251903c02:;
			{
				_24ac17648_mutSlicing(_self_.get()._field_oc.get()._field_ec, _66126_st.operator jule::Ptr<_248c8054d_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23ac51d57_StrInsertBeginExprModel>>()) {
			_case_begin_251903c79:;
			{
				_24ac178bd_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _66126_st.operator jule::Ptr<_23ac51d57_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_25190265c:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_251902b68:;
	};
}



inline void _24ac0911d_scopeStmts(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be2635_Scope>& _71135_s) {
	{
		auto &expr = _71135_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_25190e3e4:;
		if (it != expr.end()) {
			jule::Any _71221_st = *it;
			{
				_24ac267bc_indent(_self_.get()._field_oc);
				_24ac08d98_st(_self_, _71221_st);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_25190e3e4:;
			++it;
			goto _iter_begin_25190e3e4;
		}
		_iter_end_25190e3e4:;
	};
}



inline void _24ac09393_scope(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249be2635_Scope> _72029_s) {
	_24ac88d90_addIndent(_self_.get()._field_oc);
	if (_72029_s.get()._field_Deferred) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_24ac0911d_scopeStmts(_self_, _72029_s);
	_24ac89775_doneIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_72029_s.get()._field_Deferred) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _24ac09618_funcScope(jule::Ptr<_24ac041d4_scopeCoder> _self_, jule::Ptr<_249bcc312_FnIns> _73633_f) {
	if ((_73633_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_24ac88d90_addIndent(_self_.get()._field_oc);
	if ((!(_2490aaa43_IsVoid(_73633_f.get()._field_Decl.ptr())))) {
		jule::Slice<jule::Ptr<_249cb078b_TypeKind>> _74321_types = _2490ca227_Types(_73633_f.ptr());;
		{
			auto &expr = _73633_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
			auto it = expr.begin();
			_iter_begin_25191585c:;
			if (it != expr.end()) {
				jule::I64 _74417_i = it - expr.begin();
				jule::Ptr<_23abd3d83_Token> _74420_ident = *it;
				{
					if ((_23abd6627_IsIgnoreIdent(_74420_ident.get()._field_Kind) || _23abd68be_IsAnonIdent(_74420_ident.get()._field_Kind))) {
						goto _iter_next_25191585c;
					};
					_24ac267bc_indent(_self_.get()._field_oc);
					_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_74321_types[_74417_i]));
					_24ac55de5_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_24ac55de5_write(_self_.get()._field_oc, static__24ac1ed8c_toLocal(_74420_ident.get()._field_Row,_74420_ident.get()._field_Column,_74420_ident.get()._field_Kind));
					_24ac55de5_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_24ac183b3_initExpr(_self_.get()._field_oc.get()._field_ec, _74321_types[_74417_i]);
					_24ac55de5_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_25191585c:;
				++it;
				_74417_i++;
				goto _iter_begin_25191585c;
			}
			_iter_end_25191585c:;
		};
	};
	_24ac0911d_scopeStmts(_self_, _73633_f.get()._field_Scope);
	if ((_73633_f.get()._field_Decl.get()._field_Exceptional && _2490aaa43_IsVoid(_73633_f.get()._field_Decl.ptr()))) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_24ac89775_doneIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _24ac041d4_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_24ac0c099_exprCoder> static__24ac0c495_new(jule::Ptr<_24acb15c1_ObjectCoder>& _10224_oc) {
	return jule::new_ptr<_24ac0c099_exprCoder>(_24ac0c099_exprCoder{._field_oc=_10224_oc});
}



inline void _24ac0c71a_string(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_2491152a6_Const>& _10827_c) {
	jule::Str _10913_content = _249166824_ReadStr(_10827_c.ptr());;
	if ((_10913_content.len() == 0LL)) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _11413_bytes = static_cast<jule::Slice<jule::U8>>(_10913_content);;
	jule::Str _11513_len = _249bc26d1_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_11413_bytes.len())),10LL);;
	jule::Str _11613_lit = _24ac190b7_cstrLit(_11413_bytes);;
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("(", 1));
	_24ac55de5_write(_self_.get()._field_oc, _11613_lit);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_24ac55de5_write(_self_.get()._field_oc, _11513_len);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac0c990_boolean(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_2491152a6_Const>& _12528_c) {
	if (_24915de8c_ReadBool(_12528_c.ptr())) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _24ac0cb6b_nilLit(jule::Ptr<_24ac0c099_exprCoder> _self_) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _24ac0ce79_ftoaSpecialCases(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::F64& _13737_x) {
	{
		
		if (_249b17a66_IsNaN(_13737_x)) {
			_case_begin_25193882a:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_249b1ed6a_IsInf(_13737_x,1LL)) {
			_case_begin_2519380bb:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_249b1ed6a_IsInf(_13737_x,-1LL)) {
			_case_begin_251938132:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_251938055:;
			{
				return false;
			}
		}
		_match_end_251937e78:;
	};
	return true;
}



inline void _24ac0d1ee_float32(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_2491152a6_Const>& _15128_c) {
	jule::F64 _15213_x = _24916922d_AsF64(_15128_c.ptr());;
	if (_24ac0ce79_ftoaSpecialCases(_self_, _15213_x)) {
		return;;
	};
	{
		
		if ((_15213_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_25193bd17:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15213_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_25193b6eb:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_25193b025:;
			{
				_24ac55de5_write(_self_.get()._field_oc, _24ac193c5_ftoa(_15213_x,32LL));
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_25193aec0:;
	};
}



inline void _24ac0d474_float64(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_2491152a6_Const>& _17028_c) {
	jule::F64 _17113_x = _24916922d_AsF64(_17028_c.ptr());;
	if (_24ac0ce79_ftoaSpecialCases(_self_, _17113_x)) {
		return;;
	};
	{
		
		if ((_17113_x == jule::MAX_F64)) {
			_case_begin_25193e930:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17113_x == jule::MIN_F64)) {
			_case_begin_251940139:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_25193e38b:;
			{
				_24ac55de5_write(_self_.get()._field_oc, _24ac193c5_ftoa(_17113_x,64LL));
			}
		}
		_match_end_25193e336:;
	};
}



inline void _24ac0d6e9_constant(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_2491152a6_Const> _18832_c) {
	{
		
		if (_24912982b_IsStr(_18832_c.ptr())) {
			_case_begin_251941d0b:;
			{
				_24ac0c71a_string(_self_, _18832_c);
			}
		}
		else if (_2491273d9_IsBool(_18832_c.ptr())) {
			_case_begin_251941899:;
			{
				_24ac0c990_boolean(_self_, _18832_c);
			}
		}
		else if (_2491660d7_IsF64(_18832_c.ptr())) {
			_case_begin_251941910:;
			{
				{
					
					if ((_18832_c.get()._field_Kind == jule::Str("f32", 3))) {
						_case_begin_251943d63:;
						{
							_24ac0d1ee_float32(_self_, _18832_c);
						}
					}
					else {
						_case_begin_2519439bc:;
						{
							_24ac0d474_float64(_self_, _18832_c);
						}
					}
					_match_end_2519438e0:;
				};
			}
		}
		else if (_24916a839_IsI64(_18832_c.ptr())) {
			_case_begin_251941976:;
			{
				_24ac55de5_write(_self_.get()._field_oc, _24ac1966c_itoa(static_cast<jule::I64>(_24915c551_ReadI64(_18832_c.ptr()))));
			}
		}
		else if (_249177a22_IsU64(_18832_c.ptr())) {
			_case_begin_2519419dc:;
			{
				_24ac55de5_write(_self_.get()._field_oc, _24ac19914_utoa(static_cast<jule::U64>(_24915d73e_ReadU64(_18832_c.ptr()))));
			}
		}
		else if (_2491773c3_IsNil(_18832_c.ptr())) {
			_case_begin_251942405:;
			{
				_24ac0cb6b_nilLit(_self_);
			}
		}
		else {
			_case_begin_251941833:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_251941756:;
	};
}



inline void _24ac0dab2_divByZeroBinary(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_23abd3d83_Token>& _21236_op, jule::Ptr<_249bc61eb_OperandExprModel>& _21253_l, jule::Ptr<_249bc61eb_OperandExprModel>& _21280_r) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _21236_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_251947608:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_25194766e:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_25194752b:;
	};
	if ((!(_2388e8913_Production))) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_24ac86420_locInfo(_self_.get()._field_oc, _21236_op);
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_24ac17db8_expr(_self_, _21253_l.get()._field_Model);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(",", 1));
	_24ac17db8_expr(_self_, _21280_r.get()._field_Model);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac0dd37_unsafeBinary(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc63d8_BinopExprModel> _23436_m) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("(", 1));
	_24ac17b43_model(_self_, _23436_m.get()._field_Left.get()._field_Model);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_24ac55de5_write(_self_.get()._field_oc, _23436_m.get()._field_Op.get()._field_Kind);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_24ac17b43_model(_self_, _23436_m.get()._field_Right.get()._field_Model);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac0e0ac_binary(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc63d8_BinopExprModel> _24430_m) {
	{
		auto &_match_expr{ _24430_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_25194e6a9:;
			{
				if ((_249cb3d00_Struct(_24430_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_24ac0dab2_divByZeroBinary(_self_, _24430_m.get()._field_Op,_24430_m.get()._field_Left,_24430_m.get()._field_Right);
					return;;
				};
			}
		}
		_match_end_25194e5dd:;
	};
	_24ac0dd37_unsafeBinary(_self_, _24430_m);
}



inline void _24ac0e332_var(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249c3702b_Var> _25627_m) {
	if (_25627_m.get()._field_CppLinked) {
		jule::Ptr<_24900cb2c_Directive> _25817_d = _24acbcc92_findDirective(_25627_m.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_25817_d != nullptr)) {
			_24ac55de5_write(_self_.get()._field_oc, _24acb486b_concatAllParts(_25817_d.get()._field_Args));
			_24ac55de5_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_24ac55de5_write(_self_.get()._field_oc, static__24ac21498_var(_25627_m));
}



inline void _24ac0e5a7_structureIns(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249062e4b_StructIns> _26736_m) {
	_24ac55de5_write(_self_.get()._field_oc, static__24acb8d26_structureIns(_26736_m));
}



inline void _24ac0e82c_unary(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc65c5_UnaryExprModel> _27129_m) {
	{
		auto &_match_expr{ _27129_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_251954747:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_24ac17db8_expr(_self_, _27129_m.get()._field_Expr.get()._field_Model);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2519547be:;
			{
				if ((_2388e8913_Production || (_249cb2b12_Sptr(_27129_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_25195466a;
				};
				_24ac17db8_expr(_self_, _27129_m.get()._field_Expr.get()._field_Model);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_24ac86420_locInfo(_self_.get()._field_oc, _27129_m.get()._field_Op);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_25195466a:;
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("(", 1));
	_24ac55de5_write(_self_.get()._field_oc, _27129_m.get()._field_Op.get()._field_Kind);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("(", 1));
	_24ac17db8_expr(_self_, _27129_m.get()._field_Expr.get()._field_Model);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _24ac0eaa2_structureLit(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc699e_StructLitExprModel> _29536_m) {
	if (_29536_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_24ac55de5_write(_self_.get()._field_oc, static__24ac20e59_structureIns(_29536_m.get()._field_Strct));
	if (_29536_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_29536_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _29536_m.get()._field_Strct.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_25195c70b:;
			if (it != expr.end()) {
				jule::I64 _30817_i = it - expr.begin();
				jule::Ptr<_24903e268_FieldIns> _30820_f = *it;
				{
					{
						auto &expr = _29536_m.get()._field_Args;
						auto it = expr.begin();
						_iter_begin_25195d4ed:;
						if (it != expr.end()) {
							jule::Ptr<_249bc67b2_StructArgExprModel> _30929_arg = *it;
							{
								if ((_30929_arg.get()._field_Field == _30820_f)) {
									_24ac55de5_write(_self_.get()._field_oc, jule::Str(".", 1));
									_24ac55de5_write(_self_.get()._field_oc, static__24ac21201_field(_30929_arg.get()._field_Field.get()._field_Decl));
									_24ac55de5_write(_self_.get()._field_oc, jule::Str("=", 1));
									_24ac17db8_expr(_self_, _30929_arg.get()._field_Expr);
									if (((_29536_m.get()._field_Strct.get()._field_Fields.len() - _30817_i) > 1LL)) {
										_24ac55de5_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_25195c70b;
								};
							}
							_iter_next_25195d4ed:;
							++it;
							goto _iter_begin_25195d4ed;
						}
						_iter_end_25195d4ed:;
					};
				}
				_iter_next_25195c70b:;
				++it;
				_30817_i++;
				goto _iter_begin_25195c70b;
			}
			_iter_end_25195c70b:;
		};
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _24ac0ed27_allocStructure(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc6b8b_AllocStructLitExprModel> _32638_m) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_24ac55de5_write(_self_.get()._field_oc, static__24ac20e59_structureIns(_32638_m.get()._field_Lit.get()._field_Strct));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_24ac0eaa2_structureLit(_self_, _32638_m.get()._field_Lit);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac1009c_casting(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc6d78_CastingExprModel> _33431_m) {
	{
		
		if (((_249cb289d_Prim(_33431_m.get()._field_Kind.ptr()) != nullptr) && _249cb870b_IsAny(_249cb289d_Prim(_33431_m.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_251964c30:;
			{
				_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_33431_m.get()._field_Kind));
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("(", 1));
				_24ac17b43_model(_self_, _33431_m.get()._field_Expr);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_249cb2d76_Ptr(_33431_m.get()._field_ExprKind.ptr()) != nullptr) || (_249cb2d76_Ptr(_33431_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_251964aed:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("((", 2));
				_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_33431_m.get()._field_Kind));
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_24ac17db8_expr(_self_, _33431_m.get()._field_Expr);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_249cb4064_Trait(_33431_m.get()._field_ExprKind.ptr()) != nullptr) || ((_249cb289d_Prim(_33431_m.get()._field_ExprKind.ptr()) != nullptr) && _249cb870b_IsAny(_249cb289d_Prim(_33431_m.get()._field_ExprKind.ptr()).ptr())) || (_249cb334e_TypeEnum(_33431_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_2519647bd:;
			{
				_24ac17b43_model(_self_, _33431_m.get()._field_Expr);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_2388e8913_Production) {
					_24ac55de5_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_33431_m.get()._field_Kind));
					_24ac55de5_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if ((_249cb2b12_Sptr(_33431_m.get()._field_Kind.ptr()) != nullptr)) {
						_24ac55de5_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_249cb2b12_Sptr(_33431_m.get()._field_Kind.ptr()).get()._field_Elem));
					} else {
						_24ac55de5_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_33431_m.get()._field_Kind));
					};
					_24ac55de5_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_24ac86420_locInfo(_self_.get()._field_oc, _33431_m.get()._field_Token);
					_24ac55de5_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_249cb4064_Trait(_33431_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_251964834:;
			{
				_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_33431_m.get()._field_Kind));
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("(", 1));
				_24ac17db8_expr(_self_, _33431_m.get()._field_Expr);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_24ac55de5_write(_self_.get()._field_oc, _249bc2813_Itoa(static_cast<jule::I64>(_24ac46c1b_findTypeOffset(_self_.get()._field_oc.ptr(), _249cb4064_Trait(_33431_m.get()._field_Kind.ptr()),_33431_m.get()._field_ExprKind))));
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_251964757:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_33431_m.get()._field_Kind));
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_24ac17db8_expr(_self_, _33431_m.get()._field_Expr);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_25196467a:;
	};
}



inline void _24ac10322_args(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Slice<jule::Any> _38528_args) {
	if ((_38528_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _38528_args;
		auto it = expr.begin();
		_iter_begin_25197668c:;
		if (it != expr.end()) {
			jule::I64 _38914_i = it - expr.begin();
			jule::Any _38921_a = *it;
			{
				_24ac17db8_expr(_self_, _38921_a);
				if (((_38528_args.len() - _38914_i) > 1LL)) {
					_24ac55de5_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_25197668c:;
			++it;
			_38914_i++;
			goto _iter_begin_25197668c;
		}
		_iter_end_25197668c:;
	};
}



inline void _24ac10597_modelForCall(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Any _39736_expr) {
	{
		auto &_match_expr{ _39736_expr };
		
		if (_match_expr.type_is<jule::Ptr<_249bcc312_FnIns>>()) {
			_case_begin_251978925:;
			{
				_24ac1337a_funcIns(_self_, _39736_expr.operator jule::Ptr<_249bcc312_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc82ec_StructSubIdentExprModel>>()) {
			_case_begin_25197899c:;
			{
				jule::Ptr<_249bc82ec_StructSubIdentExprModel> _40321_ssie = _39736_expr.operator jule::Ptr<_249bc82ec_StructSubIdentExprModel>();;
				if ((_40321_ssie.get()._field_Method != nullptr)) {
					_24ac1337a_funcIns(_self_, _40321_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_251978815:;
	};
	_24ac17b43_model(_self_, _39736_expr);
}



inline void _24ac1081c_pushCallInf(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc7065_FnCallExprModel>& _41232_m) {
	if ((_2388e8913_Production || ((!(_41232_m.get()._field_Func.get()._field_Anon)) && (!(_24ac1a085_isBuiltinCallHasDebuginf(_41232_m)))))) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_41232_m.get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ _41232_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_249bc82ec_StructSubIdentExprModel>>()) {
				_case_begin_25197c6a4:;
				{
					if (_41232_m.get()._field_Expr.operator jule::Ptr<_249bc82ec_StructSubIdentExprModel>().get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_24ac55de5_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_25197c2db;
				}
			}
			else {
				_case_begin_25197c2db:;
				{
					_24ac55de5_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_25197c253:;
		};
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_24ac86420_locInfo(_self_.get()._field_oc, _41232_m.get()._field_Token);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_41232_m.get()._field_Args.len() != 0LL)) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _24ac10b2a_isWrapped(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc7065_FnCallExprModel>& _43734_m) {
	if ((((!(_249bcc4ee_IsBuiltin(_43734_m.get()._field_Func.ptr()))) && (_43734_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _24909ab54_IsSelf(_43734_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _43734_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_249bc82ec_StructSubIdentExprModel>>()) {
				_case_begin_251981268:;
				{
					jule::Ptr<_249bc82ec_StructSubIdentExprModel> _44125_ssie = _43734_m.get()._field_Expr.operator jule::Ptr<_249bc82ec_StructSubIdentExprModel>();;
					{
						
						if (_24909be1e_IsRef(_43734_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_249cb2b12_Sptr(_44125_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_25198292e:;
							{
								goto _match_end_2519821d1;
							}
						}
						else {
							_case_begin_251982247:;
							{
								if ((_249cb3d00_Struct(_44125_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_44125_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_24ac55de5_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_24ac17b43_model(_self_, _44125_ssie.get()._field_Expr.get()._field_Model);
										_24ac55de5_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_2519821d1:;
					};
				}
			}
			_match_end_251981059:;
		};
	};
	return false;
}



inline void _24ac10da0_pureFuncCall(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc7065_FnCallExprModel>& _46137_m) {
	jule::Bool _46213_wrapped = _24ac10b2a_isWrapped(_self_, _46137_m);;
	if (_46137_m.get()._field_IsCo) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("__JULE_CO(", 10));
	};
	_24ac10597_modelForCall(_self_, _46137_m.get()._field_Expr);
	if ((!(_249bcc4ee_IsBuiltin(_46137_m.get()._field_Func.ptr())))) {
		if ((_46137_m.get()._field_Func.get()._field_Decl.get()._field_CppLinked && (_46137_m.get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_24acbd127_hasDirective(_46137_m.get()._field_Func.get()._field_Decl.get()._field_Directives,jule::Str("cdef", 4))))) {
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _46137_m.get()._field_Func.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_251988b11:;
					if (it != expr.end()) {
						jule::I64 _47126_i = it - expr.begin();
						jule::Ptr<_249cae05e_InsGeneric> _47133_g = *it;
						{
							_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_47133_g.get()._field_Kind));
							if (((_46137_m.get()._field_Func.get()._field_Generics.len() - _47126_i) > 1LL)) {
								_24ac55de5_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_251988b11:;
						++it;
						_47126_i++;
						goto _iter_begin_251988b11;
					}
					_iter_end_251988b11:;
				};
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_24ac1081c_pushCallInf(_self_, _46137_m);
	jule::Bool _48217_locinfo = false;;
	if ((((!(_249bcc4ee_IsBuiltin(_46137_m.get()._field_Func.ptr()))) && (_46137_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _24909ab54_IsSelf(_46137_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _46137_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_249bc82ec_StructSubIdentExprModel>>()) {
				_case_begin_25198cbd1:;
				{
					jule::Ptr<_249bc82ec_StructSubIdentExprModel> _48625_ssie = _46137_m.get()._field_Expr.operator jule::Ptr<_249bc82ec_StructSubIdentExprModel>();;
					{
						
						if (_24909be1e_IsRef(_46137_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_2519907b6:;
							{
								_24ac17b43_model(_self_, _48625_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_249cb2b12_Sptr(_48625_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_25199082c:;
							{
								_24ac17b43_model(_self_, _48625_ssie.get()._field_Expr.get()._field_Model);
								_24ac55de5_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_2388e8913_Production))) {
									_24ac55de5_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_24ac86420_locInfo(_self_.get()._field_oc, _46137_m.get()._field_Token);
									_24ac55de5_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_25198dc15:;
							{
								if ((_249cb3d00_Struct(_48625_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_24ac55de5_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_46213_wrapped) {
									_24ac55de5_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_24ac17b43_model(_self_, _48625_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_25198db9e:;
					};
					if ((_46137_m.get()._field_Args.len() > 0LL)) {
						_24ac55de5_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_249bc7dce_TraitSubIdentExprModel>>()) {
				_case_begin_25198cc47:;
				{
					_24ac17b43_model(_self_, _46137_m.get()._field_Expr.operator jule::Ptr<_249bc7dce_TraitSubIdentExprModel>().get()._field_Expr);
					if ((!(_2388e8913_Production))) {
						_48217_locinfo=true;
					};
					if ((_46137_m.get()._field_Args.len() > 0LL)) {
						_24ac55de5_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_25198ca7c:;
		};
	};
	_24ac10322_args(_self_, _46137_m.get()._field_Args);
	if (_48217_locinfo) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_24ac86420_locInfo(_self_.get()._field_oc, _46137_m.get()._field_Token);
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_46213_wrapped) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
	if (_46137_m.get()._field_IsCo) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _24ac11125_funcCall(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc7065_FnCallExprModel> _54032_m) {
	if (((_249bcc4ee_IsBuiltin(_54032_m.get()._field_Func.ptr()) || (!(_54032_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_54032_m.get()._field_Except != nullptr) && (_54032_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_24ac10da0_pureFuncCall(_self_, _54032_m);
		return;;
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_24ac88d90_addIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_24ac10da0_pureFuncCall(_self_, _54032_m);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_24ac267bc_indent(_self_.get()._field_oc);
	if ((_54032_m.get()._field_Except != nullptr)) {
		if (((_54032_m.get()._field_Func.get()._field_Result == nullptr) || (!(_54032_m.get()._field_Assigned)))) {
			_24ac55de5_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_24ac09393_scope(_self_.get()._field_oc.get()._field_sc, _54032_m.get()._field_Except);
			_24ac55de5_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _56221_forwarded = _24ac19cbb_isForwarded(_54032_m.get()._field_Except);;
			_24ac55de5_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_56221_forwarded) {
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_24ac09393_scope(_self_.get()._field_oc.get()._field_sc, _54032_m.get()._field_Except);
			if (_56221_forwarded) {
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_24ac183b3_initExpr(_self_, _54032_m.get()._field_Func.get()._field_Result);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_24ac55de5_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_24ac89775_doneIndent(_self_.get()._field_oc);
	} else {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_24ac86420_locInfo(_self_.get()._field_oc, _54032_m.get()._field_Token);
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_2490aaa43_IsVoid(_54032_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_24ac267bc_indent(_self_.get()._field_oc);
			_24ac55de5_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_24ac89775_doneIndent(_self_.get()._field_oc);
	};
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _24ac1139a_slice(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc7252_SliceExprModel> _59129_m) {
	if ((_59129_m.get()._field_Elems.len() == 0LL)) {
		_24ac55de5_write(_self_.get()._field_oc, static__24acb7c59_asSlice(_59129_m.get()._field_ElemKind));
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_24ac55de5_write(_self_.get()._field_oc, static__24acb7c59_asSlice(_59129_m.get()._field_ElemKind));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_24ac10322_args(_self_, _59129_m.get()._field_Elems);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _24ac11620_indexing(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc743e_IndexingExprModel> _60332_m) {
	_24ac17b43_model(_self_, _60332_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_2388e8913_Production || (_249cb2d76_Ptr(_60332_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_249cb42c8_Map(_60332_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _24ac1a2b6_isExprComesFromBind(_60332_m.get()._field_Expr)) {
			_case_begin_2519aba9b:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("[", 1));
				_24ac17db8_expr(_self_, _60332_m.get()._field_Index.get()._field_Model);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_2519ab65b:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_24ac86420_locInfo(_self_.get()._field_oc, _60332_m.get()._field_Token);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_24ac17db8_expr(_self_, _60332_m.get()._field_Index.get()._field_Model);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_2519ab5e5:;
	};
}



inline void _24ac11895_unsafeIndexing(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_23b73d601_UnsafeIndexingExprModel> _62338_m) {
	_24ac17b43_model(_self_, _62338_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_2388e8913_Production || (_249cb2d76_Ptr(_62338_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_249cb42c8_Map(_62338_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2519b1991:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("[", 1));
				_24ac17db8_expr(_self_, _62338_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_2519b1551:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_24ac17db8_expr(_self_, _62338_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_2519b14da:;
	};
}



inline void _24ac11b1a_anonFunc(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc762b_AnonFnExprModel> _64032_m) {
	_24ac55de5_write(_self_.get()._field_oc, static__24acba18a_func(_64032_m.get()._field_Func));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_24acb2ade_paramsIns(_self_.get()._field_oc, _64032_m.get()._field_Func.get()._field_Params);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_24ac55de5_write(_self_.get()._field_oc, static__24acb9b4b_funcInsResult(_64032_m.get()._field_Func));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_24ac09618_funcScope(_self_.get()._field_oc.get()._field_sc, _64032_m.get()._field_Func);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac11d90_mapExpr(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc7a05_MapExprModel> _65131_m) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_65131_m.get()._field_KeyKind));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(",", 1));
	_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_65131_m.get()._field_ValKind));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_65131_m.get()._field_Entries.len() > 0LL)) {
		{
			auto &expr = _65131_m.get()._field_Entries;
			auto it = expr.begin();
			_iter_begin_2519badc9:;
			if (it != expr.end()) {
				jule::I64 _65818_i = it - expr.begin();
				jule::Ptr<_249bc7818_KeyValPairExprModel> _65825_pair = *it;
				{
					_24ac55de5_write(_self_.get()._field_oc, jule::Str("{", 1));
					_24ac17db8_expr(_self_, _65825_pair.get()._field_Key);
					_24ac55de5_write(_self_.get()._field_oc, jule::Str(",", 1));
					_24ac17db8_expr(_self_, _65825_pair.get()._field_Val);
					_24ac55de5_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_65131_m.get()._field_Entries.len() - _65818_i) > 1LL)) {
						_24ac55de5_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_2519badc9:;
				++it;
				_65818_i++;
				goto _iter_begin_2519badc9;
			}
			_iter_end_2519badc9:;
		};
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _24ac12115_slicing(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc7be2_SlicingExprModel> _67231_m) {
	_24ac17b43_model(_self_, _67231_m.get()._field_Expr);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_2388e8913_Production))) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_24ac86420_locInfo(_self_.get()._field_oc, _67231_m.get()._field_Token);
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_24ac17db8_expr(_self_, _67231_m.get()._field_Left);
	if ((_67231_m.get()._field_Right != nullptr)) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(",", 1));
		_24ac17db8_expr(_self_, _67231_m.get()._field_Right);
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac1238a_traitSub(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc7dce_TraitSubIdentExprModel> _68832_m) {
	_24ac55de5_write(_self_.get()._field_oc, static__24ac20673_traitDecl(_68832_m.get()._field_Trt));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_24ac17b43_model(_self_, _68832_m.get()._field_Expr);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_24ac55de5_write(_self_.get()._field_oc, static__24ac20134_func(_68832_m.get()._field_Method));
}



inline void _24ac12610_structureSub(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc82ec_StructSubIdentExprModel> _69736_m) {
	_24ac17b43_model(_self_, _69736_m.get()._field_Expr.get()._field_Model);
	if ((_69736_m.get()._field_Field != nullptr)) {
		if ((_249cb2d76_Ptr(_69736_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_24ac55de5_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_249cb2b12_Sptr(_69736_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_24ac55de5_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_2388e8913_Production))) {
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_24ac86420_locInfo(_self_.get()._field_oc, _69736_m.get()._field_Token);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_24ac55de5_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_24ac55de5_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_24ac55de5_write(_self_.get()._field_oc, static__24ac21201_field(_69736_m.get()._field_Field.get()._field_Decl));
	};
}



inline void _24ac12885_commonIdent(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc88b3_CommonIdentExprModel> _71731_m) {
	_24ac55de5_write(_self_.get()._field_oc, _71731_m.get()._field_Ident);
}



inline void _24ac12b0a_commonSub(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc8aa0_CommonSubIdentExprModel> _72133_m) {
	_24ac17b43_model(_self_, _72133_m.get()._field_Expr);
	{
		
		if ((_249cb2d76_Ptr(_72133_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_2519d1e45:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_249cb2b12_Sptr(_72133_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_2519d12a7:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_2388e8913_Production))) {
					_24ac55de5_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_24ac86420_locInfo(_self_.get()._field_oc, _72133_m.get()._field_Token);
					_24ac55de5_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_2519d1a05:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_2519d198e:;
	};
	_24ac55de5_write(_self_.get()._field_oc, _72133_m.get()._field_Ident);
}



inline void _24ac12d80_array(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc86c6_ArrayExprModel> _74029_m) {
	_24ac55de5_write(_self_.get()._field_oc, static__24acb90bd_array(_74029_m.get()._field_Kind));
	if ((_74029_m.get()._field_Elems.len() == 0LL)) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_74029_m.get()._field_Elems.len() == 2LL) && (_74029_m.get()._field_Elems[1LL] == nullptr))) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("(", 1));
		_24ac17db8_expr(_self_, _74029_m.get()._field_Elems[0LL]);
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("({", 2));
	_24ac10322_args(_self_, _74029_m.get()._field_Elems);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _24ac13105_funcInsCommon(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bcc312_FnIns> _76337_m) {
	_24ac55de5_write(_self_.get()._field_oc, static__24acba18a_func(_76337_m));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("(", 1));
	_24ac1337a_funcIns(_self_, _76337_m);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac1337a_funcIns(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bcc312_FnIns> _77031_m) {
	if (((_77031_m.get()._field_Decl != nullptr) && _77031_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_24900cb2c_Directive> _77217_d = _24acbcc92_findDirective(_77031_m.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_77217_d != nullptr)) {
			_24ac55de5_write(_self_.get()._field_oc, _24acb486b_concatAllParts(_77217_d.get()._field_Args));
			_24ac55de5_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_24ac55de5_write(_self_.get()._field_oc, static__24ac203cb_funcIns(_77031_m));
}



inline void _24ac13600_tuple(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc8c8c_TupleExprModel> _78129_m) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _78129_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_2519e033d:;
		if (it != expr.end()) {
			jule::I64 _78314_i = it - expr.begin();
			jule::Ptr<_249c80052_Data> _78321_d = *it;
			{
				_24ac17db8_expr(_self_, _78321_d.get()._field_Model);
				if (((_78129_m.get()._field_Datas.len() - _78314_i) > 1LL)) {
					_24ac55de5_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_2519e033d:;
			++it;
			_78314_i++;
			goto _iter_begin_2519e033d;
		}
		_iter_end_2519e033d:;
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac13875_newCall(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc9540_BuiltinNewCallExprModel> _79231_m) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_79231_m.get()._field_Kind));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_79231_m.get()._field_Init != nullptr)) {
		_24ac17db8_expr(_self_, _79231_m.get()._field_Init);
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac13aea_outCall(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc8e79_BuiltinOutCallExprModel> _80231_m) {
	if ((_80231_m.get()._field_Debug && _2388e8913_Production)) {
		return;;
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_24ac17db8_expr(_self_, _80231_m.get()._field_Expr);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac13d70_outlnCall(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc9166_BuiltinOutlnCallExprModel> _81133_m) {
	if ((_81133_m.get()._field_Debug && _2388e8913_Production)) {
		return;;
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_24ac17db8_expr(_self_, _81133_m.get()._field_Expr);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac140e5_panicCall(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc972c_BuiltinPanicCallExprModel> _82033_m) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_24ac17db8_expr(_self_, _82033_m.get()._field_Expr);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_24ac86420_locInfo(_self_.get()._field_oc, _82033_m.get()._field_Token);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _24ac1436a_assertCall(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc9919_BuiltinAssertCallExprModel> _82834_m) {
	if (_2388e8913_Production) {
		return;;
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_24ac17db8_expr(_self_, _82834_m.get()._field_Expr);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_24ac55de5_write(_self_.get()._field_oc, _24ac190b7_cstrLit(static_cast<jule::Slice<jule::U8>>(_82834_m.get()._field_Log)));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_24ac86420_locInfo(_self_.get()._field_oc, _82834_m.get()._field_Token);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _24ac145e0_errorCall(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel> _84133_m) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_2490aaa43_IsVoid(_84133_m.get()._field_Func.get()._field_Decl.ptr())) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_84133_m.get()._field_Func.get()._field_Result));
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_24ac17db8_expr(_self_, _84133_m.get()._field_Err);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac14865_copyCall(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bca82c_BuiltinCopyCallExprModel> _85432_m) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_24ac17b43_model(_self_, _85432_m.get()._field_Dest.get()._field_Model);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_249cb289d_Prim(_85432_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_24ac17b43_model(_self_, _85432_m.get()._field_Src.get()._field_Model);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_249cb289d_Prim(_85432_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac14ada_lenCall(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc9ed0_BuiltinLenCallExprModel> _87031_m) {
	_24ac17b43_model(_self_, _87031_m.get()._field_Expr.get()._field_Model);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _24ac14d60_capCall(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bca1bc_BuiltinCapCallExprModel> _87531_m) {
	_24ac17b43_model(_self_, _87531_m.get()._field_Expr.get()._field_Model);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _24ac150d5_deleteCall(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc80bb_BuiltinDeleteCallExprModel> _88034_m) {
	_24ac17b43_model(_self_, _88034_m.get()._field_Dest.get()._field_Model);
	if ((_88034_m.get()._field_Key != nullptr)) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_24ac17b43_model(_self_, _88034_m.get()._field_Key.get()._field_Model);
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _24ac1535a_makeCallSlice(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc9b06_BuiltinMakeCallExprModel>& _89138_m) {
	jule::Ptr<_249cb9454_Slc> _89217_slice = _249cb3827_Slc(_89138_m.get()._field_Kind.ptr());;
	_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_89138_m.get()._field_Kind));
	if ((_249cb30da_Enum(_89217_slice.get()._field_Elem.ptr()) != nullptr)) {
		if ((_89138_m.get()._field_Cap != nullptr)) {
			_24ac55de5_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
		} else {
			_24ac55de5_write(_self_.get()._field_oc, jule::Str("::alloc_def(", 12));
		};
	} else {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	};
	_24ac17db8_expr(_self_, _89138_m.get()._field_Len);
	if ((_89138_m.get()._field_Cap != nullptr)) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(",", 1));
		_24ac17db8_expr(_self_, _89138_m.get()._field_Cap);
	};
	if ((_249cb30da_Enum(_89217_slice.get()._field_Elem.ptr()) != nullptr)) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(",", 1));
		_24ac183b3_initExpr(_self_, _89217_slice.get()._field_Elem);
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac155d0_makeCallStr(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc9b06_BuiltinMakeCallExprModel>& _91736_m) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_24ac17db8_expr(_self_, _91736_m.get()._field_Len);
	if ((_91736_m.get()._field_Cap != nullptr)) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_24ac17db8_expr(_self_, _91736_m.get()._field_Cap);
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac15855_makeCall(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc9b06_BuiltinMakeCallExprModel> _92832_m) {
	if ((_249cb3827_Slc(_92832_m.get()._field_Kind.ptr()) != nullptr)) {
		_24ac1535a_makeCallSlice(_self_, _92832_m);
		return;;
	};
	_24ac155d0_makeCallStr(_self_, _92832_m);
}



inline void _24ac15aca_pushToSlice(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_2487dbd57_PushToSliceExprModel> _93635_m) {
	jule::I64 _93713_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_24ac17b43_model(_self_, _93635_m.get()._field_Dest);
	jule::Str _93913_dest = _self_.get()._field_oc.get()._field_Obj.slice(_93713_n);;
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_24ac55de5_write(_self_.get()._field_oc, _93913_dest);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(",", 1));
	_24ac55de5_write(_self_.get()._field_oc, _249bc2813_Itoa(static_cast<jule::I64>(_93635_m.get()._field_Elems.get()._field_Elems.len())));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _93635_m.get()._field_Elems.get()._field_Elems;
		auto it = expr.begin();
		_iter_begin_251a17e48:;
		if (it != expr.end()) {
			jule::Any _94621_e = *it;
			{
				_24ac55de5_write(_self_.get()._field_oc, _93913_dest);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_24ac17b43_model(_self_, _94621_e);
				_24ac55de5_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_251a17e48:;
			++it;
			goto _iter_begin_251a17e48;
		}
		_iter_end_251a17e48:;
	};
}



inline void _24ac15d50_appendCall(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc9ce3_BuiltinAppendCallExprModel> _95534_m) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_24ac17b43_model(_self_, _95534_m.get()._field_Dest);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(",", 1));
	_24ac17b43_model(_self_, _95534_m.get()._field_Elements);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac160c5_cloneCall(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc9353_BuiltinCloneCallExprModel> _96333_m) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_24ac17b43_model(_self_, _96333_m.get()._field_Expr);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac1634a_sizeof(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bcac06_SizeofExprModel> _96930_m) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_24ac17b43_model(_self_, _96930_m.get()._field_Expr);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac165c0_alignof(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bcade3_AlignofExprModel> _97531_m) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_24ac17b43_model(_self_, _97531_m.get()._field_Expr);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _24ac168cd_runeLit(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bcb0d0_RuneExprModel> _98127_m) {
	if ((_98127_m.get()._field_Code <= 127LL)) {
		jule::Str _98321_b = _24ac18a01_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_98127_m.get()._field_Code)));;
		if ((_98321_b == jule::Str("'", 1))) {
			_98321_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _98321_b) + jule::Str("'", 1));
	};
	return _24ac1966c_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_98127_m.get()._field_Code)));
}



inline void _24ac16b53_structureStatic(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bc84d9_StructStaticIdentExprModel> _99239_m) {
	_24ac55de5_write(_self_.get()._field_oc, static__24ac203cb_funcIns(_99239_m.get()._field_Method));
}



inline void _24ac16dc8_integratedToStr(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bcb2bc_IntegratedToStrExprModel> _99639_m) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_24ac17b43_model(_self_, _99639_m.get()._field_Expr);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _24ac1714d_backendEmit(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bcb4a9_BackendEmitExprModel> _100235_m) {
	if ((_100235_m.get()._field_Exprs.len() == 0LL)) {
		_24ac55de5_write(_self_.get()._field_oc, _100235_m.get()._field_Code);
		return;;
	};
	jule::I64 _100713_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _100817_args = jule::Slice<jule::Any>::alloc(_100235_m.get()._field_Exprs.len());;
	{
		auto &expr = _100235_m.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_251a26990:;
		if (it != expr.end()) {
			jule::I64 _100914_i = it - expr.begin();
			jule::Any _100921_expr = *it;
			{
				_24ac17db8_expr(_self_, _100921_expr);
				_100817_args[_100914_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_100713_n));
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL,_100713_n);
			}
			_iter_next_251a26990:;
			++it;
			_100914_i++;
			goto _iter_begin_251a26990;
		}
		_iter_end_251a26990:;
	};
	_24ac55de5_write(_self_.get()._field_oc, _249d6acb9_Format(_100235_m.get()._field_Code,jule::Any(_100817_args)));
}



inline void _24ac173c3_free(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249bcb696_FreeExprModel> _101728_m) {
	_24ac17db8_expr(_self_, _101728_m.get()._field_Expr);
	if (_2388e81d7_RC) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _24ac17648_mutSlicing(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_248c8054d_MutSlicingExprModel> _102634_m) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("(", 1));
	_24ac17b43_model(_self_, _102634_m.get()._field_Expr);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_2388e8913_Production))) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_24ac86420_locInfo(_self_.get()._field_oc, _102634_m.get()._field_Token);
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_24ac17db8_expr(_self_, _102634_m.get()._field_Left);
	if ((_102634_m.get()._field_Right != nullptr)) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str(",", 1));
		_24ac17db8_expr(_self_, _102634_m.get()._field_Right);
	};
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _24ac178bd_strInsertBegin(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_23ac51d57_StrInsertBeginExprModel> _104338_m) {
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("(", 1));
	_24ac17b43_model(_self_, _104338_m.get()._field_Dest);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_24ac17b43_model(_self_, _104338_m.get()._field_Expr);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _24ac17b43_model(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Any _105129_m) {
	{
		auto &_match_expr{ _105129_m };
		
		if (_match_expr.type_is<jule::Ptr<_249cb078b_TypeKind>>()) {
			_case_begin_251a31a55:;
			{
				_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_105129_m.operator jule::Ptr<_249cb078b_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2491152a6_Const>>()) {
			_case_begin_251a3147d:;
			{
				_24ac0d6e9_constant(_self_, _105129_m.operator jule::Ptr<_2491152a6_Const>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249c3702b_Var>>()) {
			_case_begin_251a31758:;
			{
				_24ac0e332_var(_self_, _105129_m.operator jule::Ptr<_249c3702b_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249062e4b_StructIns>>()) {
			_case_begin_251a317be:;
			{
				_24ac0e5a7_structureIns(_self_, _105129_m.operator jule::Ptr<_249062e4b_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcc312_FnIns>>()) {
			_case_begin_251a31835:;
			{
				_24ac13105_funcInsCommon(_self_, _105129_m.operator jule::Ptr<_249bcc312_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23ac114cb_UnsafeBinopExprModel>>()) {
			_case_begin_251a3189b:;
			{
				_24ac0dd37_unsafeBinary(_self_, _105129_m.operator jule::Ptr<_23ac114cb_UnsafeBinopExprModel>().get()._field_Node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc63d8_BinopExprModel>>()) {
			_case_begin_251a32490:;
			{
				_24ac0e0ac_binary(_self_, _105129_m.operator jule::Ptr<_249bc63d8_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc65c5_UnaryExprModel>>()) {
			_case_begin_251a32506:;
			{
				_24ac0e82c_unary(_self_, _105129_m.operator jule::Ptr<_249bc65c5_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc699e_StructLitExprModel>>()) {
			_case_begin_251a3256c:;
			{
				_24ac0eaa2_structureLit(_self_, _105129_m.operator jule::Ptr<_249bc699e_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc6b8b_AllocStructLitExprModel>>()) {
			_case_begin_251a325d3:;
			{
				_24ac0ed27_allocStructure(_self_, _105129_m.operator jule::Ptr<_249bc6b8b_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc6d78_CastingExprModel>>()) {
			_case_begin_251a32649:;
			{
				_24ac1009c_casting(_self_, _105129_m.operator jule::Ptr<_249bc6d78_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc7065_FnCallExprModel>>()) {
			_case_begin_251a326b0:;
			{
				_24ac11125_funcCall(_self_, _105129_m.operator jule::Ptr<_249bc7065_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc7252_SliceExprModel>>()) {
			_case_begin_251a32726:;
			{
				_24ac1139a_slice(_self_, _105129_m.operator jule::Ptr<_249bc7252_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc86c6_ArrayExprModel>>()) {
			_case_begin_251a3278c:;
			{
				_24ac12d80_array(_self_, _105129_m.operator jule::Ptr<_249bc86c6_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23b73d601_UnsafeIndexingExprModel>>()) {
			_case_begin_251a32803:;
			{
				_24ac11895_unsafeIndexing(_self_, _105129_m.operator jule::Ptr<_23b73d601_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc743e_IndexingExprModel>>()) {
			_case_begin_251a3287a:;
			{
				_24ac11620_indexing(_self_, _105129_m.operator jule::Ptr<_249bc743e_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc762b_AnonFnExprModel>>()) {
			_case_begin_251a32902:;
			{
				_24ac11b1a_anonFunc(_self_, _105129_m.operator jule::Ptr<_249bc762b_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc7a05_MapExprModel>>()) {
			_case_begin_251a32979:;
			{
				_24ac11d90_mapExpr(_self_, _105129_m.operator jule::Ptr<_249bc7a05_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc7be2_SlicingExprModel>>()) {
			_case_begin_251a32a01:;
			{
				_24ac12115_slicing(_self_, _105129_m.operator jule::Ptr<_249bc7be2_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc7dce_TraitSubIdentExprModel>>()) {
			_case_begin_251a32a78:;
			{
				_24ac1238a_traitSub(_self_, _105129_m.operator jule::Ptr<_249bc7dce_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc82ec_StructSubIdentExprModel>>()) {
			_case_begin_251a32b00:;
			{
				_24ac12610_structureSub(_self_, _105129_m.operator jule::Ptr<_249bc82ec_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc88b3_CommonIdentExprModel>>()) {
			_case_begin_251a32b77:;
			{
				_24ac12885_commonIdent(_self_, _105129_m.operator jule::Ptr<_249bc88b3_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc8aa0_CommonSubIdentExprModel>>()) {
			_case_begin_251a32bee:;
			{
				_24ac12b0a_commonSub(_self_, _105129_m.operator jule::Ptr<_249bc8aa0_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc8c8c_TupleExprModel>>()) {
			_case_begin_251a32c76:;
			{
				_24ac13600_tuple(_self_, _105129_m.operator jule::Ptr<_249bc8c8c_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc8e79_BuiltinOutCallExprModel>>()) {
			_case_begin_251a32ced:;
			{
				_24ac13aea_outCall(_self_, _105129_m.operator jule::Ptr<_249bc8e79_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9166_BuiltinOutlnCallExprModel>>()) {
			_case_begin_251a32d75:;
			{
				_24ac13d70_outlnCall(_self_, _105129_m.operator jule::Ptr<_249bc9166_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9540_BuiltinNewCallExprModel>>()) {
			_case_begin_251a32dec:;
			{
				_24ac13875_newCall(_self_, _105129_m.operator jule::Ptr<_249bc9540_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc972c_BuiltinPanicCallExprModel>>()) {
			_case_begin_251a32e74:;
			{
				_24ac140e5_panicCall(_self_, _105129_m.operator jule::Ptr<_249bc972c_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9919_BuiltinAssertCallExprModel>>()) {
			_case_begin_251a32eeb:;
			{
				_24ac1436a_assertCall(_self_, _105129_m.operator jule::Ptr<_249bc9919_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel>>()) {
			_case_begin_251a33073:;
			{
				_24ac145e0_errorCall(_self_, _105129_m.operator jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9b06_BuiltinMakeCallExprModel>>()) {
			_case_begin_251a330ea:;
			{
				_24ac15855_makeCall(_self_, _105129_m.operator jule::Ptr<_249bc9b06_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9ce3_BuiltinAppendCallExprModel>>()) {
			_case_begin_251a33172:;
			{
				_24ac15d50_appendCall(_self_, _105129_m.operator jule::Ptr<_249bc9ce3_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9353_BuiltinCloneCallExprModel>>()) {
			_case_begin_251a331e9:;
			{
				_24ac160c5_cloneCall(_self_, _105129_m.operator jule::Ptr<_249bc9353_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bca82c_BuiltinCopyCallExprModel>>()) {
			_case_begin_251a33271:;
			{
				_24ac14865_copyCall(_self_, _105129_m.operator jule::Ptr<_249bca82c_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc9ed0_BuiltinLenCallExprModel>>()) {
			_case_begin_251a332e8:;
			{
				_24ac14ada_lenCall(_self_, _105129_m.operator jule::Ptr<_249bc9ed0_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bca1bc_BuiltinCapCallExprModel>>()) {
			_case_begin_251a33370:;
			{
				_24ac14d60_capCall(_self_, _105129_m.operator jule::Ptr<_249bca1bc_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc80bb_BuiltinDeleteCallExprModel>>()) {
			_case_begin_251a333e7:;
			{
				_24ac150d5_deleteCall(_self_, _105129_m.operator jule::Ptr<_249bc80bb_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcac06_SizeofExprModel>>()) {
			_case_begin_251a3346e:;
			{
				_24ac1634a_sizeof(_self_, _105129_m.operator jule::Ptr<_249bcac06_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcade3_AlignofExprModel>>()) {
			_case_begin_251a334e6:;
			{
				_24ac165c0_alignof(_self_, _105129_m.operator jule::Ptr<_249bcade3_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcb0d0_RuneExprModel>>()) {
			_case_begin_251a3356d:;
			{
				_24ac55de5_write(_self_.get()._field_oc, _24ac168cd_runeLit(_self_, _105129_m.operator jule::Ptr<_249bcb0d0_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc84d9_StructStaticIdentExprModel>>()) {
			_case_begin_251a335e5:;
			{
				_24ac16b53_structureStatic(_self_, _105129_m.operator jule::Ptr<_249bc84d9_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcb2bc_IntegratedToStrExprModel>>()) {
			_case_begin_251a3366c:;
			{
				_24ac16dc8_integratedToStr(_self_, _105129_m.operator jule::Ptr<_249bcb2bc_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcb4a9_BackendEmitExprModel>>()) {
			_case_begin_251a336e4:;
			{
				_24ac1714d_backendEmit(_self_, _105129_m.operator jule::Ptr<_249bcb4a9_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bcb696_FreeExprModel>>()) {
			_case_begin_251a3376b:;
			{
				_24ac173c3_free(_self_, _105129_m.operator jule::Ptr<_249bcb696_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_248c8054d_MutSlicingExprModel>>()) {
			_case_begin_251a337e3:;
			{
				_24ac17648_mutSlicing(_self_, _105129_m.operator jule::Ptr<_248c8054d_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23ac51d57_StrInsertBeginExprModel>>()) {
			_case_begin_251a3386a:;
			{
				_24ac178bd_strInsertBegin(_self_, _105129_m.operator jule::Ptr<_23ac51d57_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_251a31615:;
			{
				_24ac55de5_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_251a31527:;
	};
}



inline void _24ac17db8_expr(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Any _115028_e) {
	_24ac17b43_model(_self_, _115028_e);
}



inline void _24ac1813d_val(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249c810ca_Value> _115427_v) {
	if (_249c80915_IsConst(_115427_v.get()._field_Data.ptr())) {
		_24ac0d6e9_constant(_self_, _115427_v.get()._field_Data.get()._field_Constant);
		return;;
	};
	_24ac17db8_expr(_self_, _115427_v.get()._field_Data.get()._field_Model);
}



inline void _24ac183b3_initExpr(jule::Ptr<_24ac0c099_exprCoder> _self_, jule::Ptr<_249cb078b_TypeKind> _116232_t) {
	if ((_249cb2d76_Ptr(_116232_t.ptr()) != nullptr)) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		return;;
	};
	jule::Ptr<_249bd6a25_Enum> _116717_enm = _249cb30da_Enum(_116232_t.ptr());;
	if ((_116717_enm != nullptr)) {
		_24ac1813d_val(_self_, _116717_enm.get()._field_Items[0LL].get()._field_Value);
		return;;
	};
	_24ac55de5_write(_self_.get()._field_oc, static__24acba432_kind(_116232_t));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _24ac0c099_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__24ac1abbd_cloneFuncDecl(jule::Ptr<_249036b01_Struct>& _1030_s) {
	jule::Str _1117_obj = static__24acb8a7e_structure(_1030_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__24ac1ae65_cloneFuncDef(jule::Ptr<_249036b01_Struct>& _1629_s) {
	jule::Str _1717_obj = static__24acb8a7e_structure(_1629_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _24ac1a8c1_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_24ac1bd45_TestCoder> static__24ac1c2b8_New(jule::Ptr<_24acb15c1_ObjectCoder>& _2824_oc) {
	return jule::new_ptr<_24ac1bd45_TestCoder>(_24ac1bd45_TestCoder{._field_oc=_2824_oc});
}



inline jule::Ptr<_249c1117b_ImportInfo> _24ac1c52c_findTestingPackage(jule::Ptr<_24ac1bd45_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_251a52a54:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_LinkPath == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_251a52a54:;
			++it;
			goto _iter_begin_251a52a54;
		}
		_iter_end_251a52a54:;
	};
	return nullptr;
}



inline void _24ac1c7a2_appendTest(jule::Ptr<_24ac1bd45_TestCoder> _self_, jule::Ptr<_249bcc312_FnIns> _4334_f) {
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac1ce67_callTmReset(_self_);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_24ac55de5_write(_self_.get()._field_oc, _24ac190b7_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, static__24ac203cb_funcIns(_4334_f));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _24ac1ca27_appendPackageTests(jule::Ptr<_24ac1bd45_TestCoder> _self_, jule::Ptr<_249c140d5_Package>& _6043_p) {
	{
		auto &expr = _6043_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_251a59099:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_251a5996d:;
					if (it != expr.end()) {
						jule::Ptr<_249bcbe38_Fn> _6225_f = *it;
						{
							if (_24acbd127_hasDirective(_6225_f.get()._field_Directives,jule::Str("test", 4))) {
								_24ac1c7a2_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_251a5996d:;
						++it;
						goto _iter_begin_251a5996d;
					}
					_iter_end_251a5996d:;
				};
			}
			_iter_next_251a59099:;
			++it;
			goto _iter_begin_251a59099;
		}
		_iter_end_251a59099:;
	};
}



inline jule::Bool _24ac1cc8b_readyTestingPackage(jule::Ptr<_24ac1bd45_TestCoder> _self_) {
	jule::Ptr<_249c1117b_ImportInfo> _7117_p = _24ac1c52c_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_249c125bc_FindStruct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_24903bc9e_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tmFailed=_24903bc9e_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6),false);
	_self_.get()._field_tmSkipped=_24903bc9e_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7),false);
	return true;
}



inline void _24ac1ce67_callTmReset(jule::Ptr<_24ac1bd45_TestCoder> _self_) {
	_24ac55de5_write(_self_.get()._field_oc, static__24ac20134_func(_self_.get()._field_tmReset));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _24ac1d143_callTmFailed(jule::Ptr<_24ac1bd45_TestCoder> _self_) {
	_24ac55de5_write(_self_.get()._field_oc, static__24ac20134_func(_self_.get()._field_tmFailed));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _24ac1d31e_callTmSkipped(jule::Ptr<_24ac1bd45_TestCoder> _self_) {
	_24ac55de5_write(_self_.get()._field_oc, static__24ac20134_func(_self_.get()._field_tmSkipped));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _24ac1d4ea_Serialize(jule::Ptr<_24ac1bd45_TestCoder> _self_) {
	_24acb42a5_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_24acb4173_end(_self_.get()._field_oc);
	});;
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_24ac88d90_addIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	if ((!(_24ac1cc8b_readyTestingPackage(_self_)))) {
		_24ac55de5_write(_self_.get()._field_oc, jule::Str("}", 1));
		_24ac89775_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_24ac55de5_write(_self_.get()._field_oc, static__24acb6b8c_asSptr(static__24acb8d26_structureIns(_self_.get()._field_t)));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_24ac55de5_write(_self_.get()._field_oc, static__24acb8d26_structureIns(_self_.get()._field_t));
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_24ac88d90_addIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_24ac1d143_callTmFailed(_self_);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_24ac1d31e_callTmSkipped(_self_);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_24ac89775_doneIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_24ac1ca27_appendPackageTests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_Main);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_24ac89775_doneIndent(_self_.get()._field_oc);
	_24ac267bc_indent(_self_.get()._field_oc);
	_24ac55de5_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _24ac1bd45_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__24ac1e9a2_toOut(jule::Str& _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_249bc259e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3322_ident;
		return _3521_obj;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, (_3322_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3322_ident;
	return _4217_obj;
}



inline jule::Str static__24ac1ed8c_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str& _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_249bc2813_Itoa(_5423_row);
	_5517_obj+=_249bc2813_Itoa(_5433_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5444_ident;
	return _5517_obj;
}



inline jule::Str static__24ac20134_func(jule::Ptr<_249bcbe38_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_CppLinked) {
			_case_begin_251a73cc8:;
			{
				return _6521_f.get()._field_Ident;
			}
		}
		else if ((_6521_f.get()._field_Ident == jule::Str("main", 4))) {
			_case_begin_251a741e6:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_2490ab25d_IsMethod(_6521_f.ptr())) {
			_case_begin_251a7425c:;
			{
				jule::Str _7221_obj = static__24ac1e9a2_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;
				};
				return _7221_obj;
			}
		}
		else {
			_case_begin_251a73514:;
			{
				return static__24ac1e9a2_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));
			}
		}
		_match_end_251a73415:;
	};
}



inline jule::Str static__24ac203cb_funcIns(jule::Ptr<_249bcc312_FnIns>& _8424_f) {
	if (_249bcc4ee_IsBuiltin(_8424_f.ptr())) {
		return (jule::Str("jule::", 6) + _8424_f.get()._field_Decl.get()._field_Ident);
	};
	if ((_8424_f.get()._field_Decl.get()._field_CppLinked || (_8424_f.get()._field_Generics.len() == 0LL))) {
		return static__24ac20134_func(_8424_f.get()._field_Decl);
	};
	return static__24ac1e9a2_toOut(_8424_f.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8424_f)));
}



inline jule::Str static__24ac20673_traitDecl(jule::Ptr<_249bd48d0_Trait> _9525_t) {
	if (_249bd544c_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);
	};
	return static__24ac1e9a2_toOut(_9525_t.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));
}



inline jule::Str static__24ac2091a_param(jule::Ptr<_249bcbc4b_Param>& _10322_p) {
	if ((_23abd68be_IsAnonIdent(_10322_p.get()._field_Ident) || _23abd6627_IsIgnoreIdent(_10322_p.get()._field_Ident))) {
		return jule::Str();
	};
	if (_24909ab54_IsSelf(_10322_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_10322_p.get()._field_Token == nullptr)) {
		return static__24ac1ed8c_toLocal(0LL,0LL,_10322_p.get()._field_Ident);
	};
	return static__24ac1ed8c_toLocal(_10322_p.get()._field_Token.get()._field_Row,_10322_p.get()._field_Token.get()._field_Column,_10322_p.get()._field_Ident);
}



inline jule::Str static__24ac20bb2_structure(jule::Ptr<_249036b01_Struct>& _11726_s) {
	if (_11726_s.get()._field_CppLinked) {
		if (_24acbd127_hasDirective(_11726_s.get()._field_Directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_Ident;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_Ident);
	};
	return static__24ac1e9a2_toOut(_11726_s.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));
}



inline jule::Str static__24ac20e59_structureIns(jule::Ptr<_249062e4b_StructIns>& _12829_s) {
	if ((_12829_s.get()._field_Decl.get()._field_CppLinked || (_12829_s.get()._field_Generics.len() == 0LL))) {
		return static__24ac20bb2_structure(_12829_s.get()._field_Decl);
	};
	return static__24ac1e9a2_toOut(_12829_s.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12829_s)));
}



inline jule::Str static__24ac21201_field(jule::Ptr<_24902413d_Field>& _13622_f) {
	if (_13622_f.get()._field_Owner.get()._field_CppLinked) {
		return _13622_f.get()._field_Ident;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_Ident);
}



inline jule::Str static__24ac21498_var(jule::Ptr<_249c3702b_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_251a7ea5e:;
			{
				return _14423_v.get()._field_Ident;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("error", 5))) {
			_case_begin_251a7ee7c:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("self", 4))) {
			_case_begin_251a7eee3:;
			{
				if ((_249cb2b12_Sptr(_14423_v.get()._field_Kind.get()._field_Kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_251a7e29a:;
			{
				return static__24ac1ed8c_toLocal(_14423_v.get()._field_Token.get()._field_Row,_14423_v.get()._field_Token.get()._field_Column,_14423_v.get()._field_Ident);
			}
		}
		else {
			_case_begin_251a7e234:;
			{
				return static__24ac1e9a2_toOut(_14423_v.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));
			}
		}
		_match_end_251a7e157:;
	};
}



inline jule::Str static__24ac21740_iterBegin(jule::Uintptr _16325_it) {
	jule::Str _16417_obj = jule::Str::alloc(0LL, 30LL);;
	_16417_obj+=jule::Str("_iter_begin_", 12);
	_16417_obj+=_249bc259e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16325_it)),15LL);
	return _16417_obj;
}



inline jule::Str static__24ac219d7_iterEnd(jule::Uintptr _17123_it) {
	jule::Str _17217_obj = jule::Str::alloc(0LL, 30LL);;
	_17217_obj+=jule::Str("_iter_end_", 10);
	_17217_obj+=_249bc259e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17123_it)),15LL);
	return _17217_obj;
}



inline jule::Str static__24ac21c7e_iterNext(jule::Uintptr _17924_it) {
	jule::Str _18017_obj = jule::Str::alloc(0LL, 30LL);;
	_18017_obj+=jule::Str("_iter_next_", 11);
	_18017_obj+=_249bc259e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17924_it)),15LL);
	return _18017_obj;
}



inline jule::Str static__24ac22026_label(jule::Str& _18722_ident) {
	jule::Str _18817_obj = jule::Str::alloc(0LL, 30LL);;
	_18817_obj+=jule::Str("_julec_label_", 13);
	_18817_obj+=_18722_ident;
	return _18817_obj;
}



inline jule::Str static__24ac222bd_matchEnd(jule::Uintptr _19524_m) {
	jule::Str _19617_obj = jule::Str::alloc(0LL, 30LL);;
	_19617_obj+=jule::Str("_match_end_", 11);
	_19617_obj+=_249bc259e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19524_m)),15LL);
	return _19617_obj;
}



inline jule::Str static__24ac22565_caseBegin(jule::Uintptr _20325_c) {
	jule::Str _20417_obj = jule::Str::alloc(0LL, 30LL);;
	_20417_obj+=jule::Str("_case_begin_", 12);
	_20417_obj+=_249bc259e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20325_c)),15LL);
	return _20417_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _24ac1e496_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24ac272e5_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24acb13d4_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _24acb584a_Str(_24acb5581_customType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _24acb5b58_Equals(jule::Ptr<_24acb5581_customType> _self_, jule::Ptr<_249cb078b_TypeKind> _3922_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _24acb5581_customType _Src) {
	_Stream << _24acb584a_Str(&_Src);
	return _Stream;
}



inline jule::Str static__24acb63a6_toType(jule::Str _6026_id) {
	if ((_6026_id != jule::Str("uintptr", 7))) {
		_6026_id=_249202a14_RealKindOf(_6026_id);
	};
	if (((97LL <= _6026_id[0LL]) && (_6026_id[0LL] <= 122LLU))) {
		_6026_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6026_id);
}



inline jule::Str static__24acb664d_prim(jule::Ptr<_249cb5263_Prim> _7120_p) {
	return static__24acb63a6_toType(_249cb55c6_Str(_7120_p.ptr()));
}



inline jule::Str static__24acb68e5_tuple(jule::Ptr<_249cb9ed2_Tuple> _7625_t) {
	jule::Str _7717_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7625_t.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_2512640bd:;
		if (it != expr.end()) {
			jule::Ptr<_249cb078b_TypeKind> _7821_tk = *it;
			{
				_7717_obj+=static__24acba432_kind(_7821_tk);
				_7717_obj+=jule::Str(",", 1);
			}
			_iter_next_2512640bd:;
			++it;
			goto _iter_begin_2512640bd;
		}
		_iter_end_2512640bd:;
	};
	(_7717_obj).mut_slice(0LL,(_7717_obj.len() - 1LL));;
	_7717_obj+=jule::Str(">", 1);
	return _7717_obj;
}



inline jule::Str static__24acb6b8c_asSptr(jule::Str _8822_elem) {
	jule::Str _8917_obj = jule::Str("jule::Ptr<", 10);;
	_8917_obj+=_8822_elem;
	_8917_obj+=jule::Str(">", 1);
	return _8917_obj;
}



inline jule::Str static__24acb6e34_asPtr(jule::Str _9621_elem) {
	return (_9621_elem + jule::Str("*", 1));
}



inline jule::Str static__24acb71cb_sptr(jule::Ptr<_249cb89e7_Sptr> _10124_sptr) {
	return static__24acb6b8c_asSptr(static__24acba432_kind(_10124_sptr.get()._field_Elem));
}



inline jule::Str static__24acb7473_ptr(jule::Ptr<_249cbc05b_Ptr> _10623_p) {
	;
	if (_249cbca2e_IsUnsafe(_10623_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _11117_elem = static__24acba432_kind(_10623_p.get()._field_Elem);;
	_11117_elem+=jule::Str("*", 1);
	return _11117_elem;
}



inline jule::Str static__24acb771a_enumDecl(jule::Ptr<_249bd6a25_Enum> _11728_e) {
	return static__24acba432_kind(_11728_e.get()._field_Kind.get()._field_Kind);
}



inline jule::Str static__24acb79b2_typeEnumDecl(jule::Ptr<_249bd8120_TypeEnum> _12232_e) {
	return jule::Str("jule::Any", 9);
}



inline jule::Str static__24acb7c59_asSlice(jule::Ptr<_249cb078b_TypeKind> _12627_elem) {
	jule::Str _12717_obj = jule::Str("jule::Slice<", 12);;
	_12717_obj+=static__24acba432_kind(_12627_elem);
	_12717_obj+=jule::Str(">", 1);
	return _12717_obj;
}



inline jule::Str static__24acb8001_slice(jule::Ptr<_249cb9454_Slc> _13425_s) {
	return static__24acb7c59_asSlice(_13425_s.get()._field_Elem);
}



inline jule::Str static__24acb8298_mapType(jule::Ptr<_249cbaa0a_Map> _13927_m) {
	jule::Str _14017_obj = jule::Str("jule::Map<", 10);;
	_14017_obj+=static__24acba432_kind(_13927_m.get()._field_Key);
	_14017_obj+=jule::Str(",", 1);
	_14017_obj+=static__24acba432_kind(_13927_m.get()._field_Val);
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;
}



inline jule::Str static__24acb8540_traitIdent(jule::Str _14826_ident) {
	jule::Str _14917_obj = jule::Str("jule::Trait<", 12);;
	_14917_obj+=_14826_ident;
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;
}



inline jule::Str static__24acb87d7_traitDecl(jule::Ptr<_249bd48d0_Trait> _15625_t) {
	return static__24acb8540_traitIdent(static__24ac20673_traitDecl(_15625_t));
}



inline jule::Str static__24acb8a7e_structure(jule::Ptr<_249036b01_Struct> _16125_s) {
	jule::Str _16217_rep = jule::Str();;
	if ((_16125_s.get()._field_CppLinked && (!(_24acbd127_hasDirective(_16125_s.get()._field_Directives,jule::Str("typedef", 7)))))) {
		_16217_rep+=jule::Str("struct ", 7);
	};
	_16217_rep+=static__24ac20bb2_structure(_16125_s);
	return _16217_rep;
}



inline jule::Str static__24acb8d26_structureIns(jule::Ptr<_249062e4b_StructIns> _17132_s) {
	if (_17132_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _17321_ident = static__24ac20e59_structureIns(_17132_s);;
		if ((_17132_s.get()._field_Generics.len() > 0LL)) {
			_17321_ident+=jule::Str("<", 1);
			{
				auto &expr = _17132_s.get()._field_Generics;
				auto it = expr.begin();
				_iter_begin_25126eace:;
				if (it != expr.end()) {
					jule::Ptr<_249cae05e_InsGeneric> _17629_g = *it;
					{
						_17321_ident+=static__24acba432_kind(_17629_g.get()._field_Kind);
						_17321_ident+=jule::Str(",", 1);
					}
					_iter_next_25126eace:;
					++it;
					goto _iter_begin_25126eace;
				}
				_iter_end_25126eace:;
			};
			(_17321_ident).mut_slice(0LL,(_17321_ident.len() - 1LL));;
			_17321_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_24900cb2c_Directive> _18317_d = _24acbcc92_findDirective(_17132_s.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_18317_d != nullptr)) {
			(_17321_ident).buffer.insert(0, ((_24acb486b_concatAllParts(_18317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _17321_ident;
	};
	return static__24ac20e59_structureIns(_17132_s);
}



inline jule::Str static__24acb90bd_array(jule::Ptr<_249cbb5ee_Arr> _19325_a) {
	jule::Str _19417_obj = jule::Str("jule::Array<", 12);;
	_19417_obj+=static__24acba432_kind(_19325_a.get()._field_Elem);
	_19417_obj+=jule::Str(",", 1);
	_19417_obj+=_249bc2813_Itoa(_19325_a.get()._field_N);
	_19417_obj+=jule::Str(">", 1);
	return _19417_obj;
}



inline jule::Str static__24acb960c_paramIns(jule::Ptr<_249bcc125_ParamIns>& _21929_p) {
	jule::Str _22017_obj = jule::Str();;
	if (_21929_p.get()._field_Decl.get()._field_Variadic) {
		_22017_obj+=jule::Str("jule::Slice<", 12);
		_22017_obj+=static__24acba432_kind(_21929_p.get()._field_Kind);
		_22017_obj+=jule::Str(">", 1);
	} else {
		_22017_obj+=static__24acba432_kind(_21929_p.get()._field_Kind);
	};
	if (_21929_p.get()._field_Decl.get()._field_Reference) {
		_22017_obj+=jule::Str("&", 1);
	};
	return _22017_obj;
}



inline jule::Str static__24acb9b4b_funcInsResult(jule::Ptr<_249bcc312_FnIns>& _24934_f) {
	if (_2490aaa43_IsVoid(_24934_f.get()._field_Decl.ptr())) {
		if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__24acba432_kind(_24934_f.get()._field_Result)) + jule::Str(">", 1));
	};
	return static__24acba432_kind(_24934_f.get()._field_Result);
}



inline jule::Str static__24acb9de3_anonFunc(jule::Ptr<_249bcc312_FnIns> _26228_f) {
	jule::Str _26317_decl = static__24acb9b4b_funcInsResult(_26228_f);;
	_26317_decl+=jule::Str("(", 1);
	if ((_26228_f.get()._field_Params.len() > 0LL)) {
		{
			auto &expr = _26228_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_25127be82:;
			if (it != expr.end()) {
				jule::Ptr<_249bcc125_ParamIns> _26625_param = *it;
				{
					if (_24909ab54_IsSelf(_26625_param.get()._field_Decl.ptr())) {
						goto _iter_next_25127be82;
					};
					_26317_decl+=static__24acb960c_paramIns(_26625_param);
					_26317_decl+=jule::Str(",", 1);
				}
				_iter_next_25127be82:;
				++it;
				goto _iter_begin_25127be82;
			}
			_iter_end_25127be82:;
		};
		(_26317_decl).mut_slice(0LL,(_26317_decl.len() - 1LL));;
	} else {
		_26317_decl+=jule::Str("void", 4);
	};
	_26317_decl+=jule::Str(")", 1);
	return _26317_decl;
}



inline jule::Str static__24acba18a_func(jule::Ptr<_249bcc312_FnIns> _28224_f) {
	jule::Str _28317_obj = jule::Str("jule::Fn<", 9);;
	_28317_obj+=static__24acb9de3_anonFunc(_28224_f);
	_28317_obj+=jule::Str(">", 1);
	return _28317_obj;
}



inline jule::Str static__24acba432_kind(jule::Ptr<_249cb078b_TypeKind> _29024_k) {
	{
		
		if (_249cb144b_CppLinked(_29024_k.ptr())) {
			_case_begin_25127ed75:;
			{
				return _29024_k.get()._field_CppIdent;
			}
		}
		else if ((_249cb289d_Prim(_29024_k.ptr()) != nullptr)) {
			_case_begin_25127eddb:;
			{
				return static__24acb664d_prim(_249cb289d_Prim(_29024_k.ptr()));
			}
		}
		else if ((_249cb453c_Tup(_29024_k.ptr()) != nullptr)) {
			_case_begin_25127ee52:;
			{
				return static__24acb68e5_tuple(_249cb453c_Tup(_29024_k.ptr()));
			}
		}
		else if ((_249cb2b12_Sptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_25127eec9:;
			{
				return static__24acb71cb_sptr(_249cb2b12_Sptr(_29024_k.ptr()));
			}
		}
		else if ((_249cb2d76_Ptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_251280051:;
			{
				return static__24acb7473_ptr(_249cb2d76_Ptr(_29024_k.ptr()));
			}
		}
		else if ((_249cb30da_Enum(_29024_k.ptr()) != nullptr)) {
			_case_begin_2512800c8:;
			{
				return static__24acb771a_enumDecl(_249cb30da_Enum(_29024_k.ptr()));
			}
		}
		else if ((_249cb334e_TypeEnum(_29024_k.ptr()) != nullptr)) {
			_case_begin_251280150:;
			{
				return static__24acb79b2_typeEnumDecl(_249cb334e_TypeEnum(_29024_k.ptr()));
			}
		}
		else if ((_249cb3827_Slc(_29024_k.ptr()) != nullptr)) {
			_case_begin_2512801c7:;
			{
				return static__24acb8001_slice(_249cb3827_Slc(_29024_k.ptr()));
			}
		}
		else if ((_249cb42c8_Map(_29024_k.ptr()) != nullptr)) {
			_case_begin_25128024e:;
			{
				return static__24acb8298_mapType(_249cb42c8_Map(_29024_k.ptr()));
			}
		}
		else if ((_249cb4064_Trait(_29024_k.ptr()) != nullptr)) {
			_case_begin_2512802c6:;
			{
				return static__24acb87d7_traitDecl(_249cb4064_Trait(_29024_k.ptr()));
			}
		}
		else if ((_249cb3d00_Struct(_29024_k.ptr()) != nullptr)) {
			_case_begin_25128034d:;
			{
				return static__24acb8d26_structureIns(_249cb3d00_Struct(_29024_k.ptr()));
			}
		}
		else if ((_249cb35b3_Arr(_29024_k.ptr()) != nullptr)) {
			_case_begin_2512803c5:;
			{
				return static__24acb90bd_array(_249cb35b3_Arr(_29024_k.ptr()));
			}
		}
		else if ((_249cb3a8b_Fn(_29024_k.ptr()) != nullptr)) {
			_case_begin_25128044c:;
			{
				return static__24acba18a_func(_249cb3a8b_Fn(_29024_k.ptr()));
			}
		}
		_match_end_25127eb66:;
	};
	{
		auto &_match_expr{ _29024_k.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_24acb5581_customType>>()) {
			_case_begin_2512881be:;
			{
				return _29024_k.get()._field_Kind.operator jule::Ptr<_24acb5581_customType>().get()._field_kind;
			}
		}
		else {
			_case_begin_251288367:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_251288444:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _24acb5d78_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2511c436e_Name(_2512892e1_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _2511c44a1_What(_2512892e1_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _251289720_Reset(_2512892e1_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _251289852_Short(_2512892e1_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _2512892e1_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _25128cb52_Name(_25128d13b_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _25128d427_What(_25128d13b_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _25128d559_Reset(_25128d13b_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _25128d68b_Short(_25128d13b_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _25128d13b_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _25129178d_Name(_251291c77_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _251292063_What(_251291c77_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _251292195_Reset(_251291c77_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _2512922c7_Short(_251291c77_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _251291c77_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _25129541d_Name(_251295907_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _251295be3_What(_251295907_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _251295d25_Reset(_251295907_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _251295e57_Short(_251295907_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _251295907_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _251299059_Name(_251299543_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _25129982e_What(_251299543_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _251299961_Reset(_251299543_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _251299a93_Short(_251299543_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _251299543_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_24ad00e5c_FlagSet> static__24ad01248_New(void) {
	return jule::new_ptr<_24ad00e5c_FlagSet>(_24ad00e5c_FlagSet{._field_flags=jule::Slice<jule::Trait<_24aac840a_CommonFlag>>::alloc(0LL,20LL)});
}



inline jule::Trait<_24aac840a_CommonFlag> _24ad016cc_FindFlag(_24ad00e5c_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_2512a5494:;
		if (it != expr.end()) {
			jule::Trait<_24aac840a_CommonFlag> _7221_flag = *it;
			{
				if ((_24aac840a_CommonFlag_mptr_data[(_7221_flag).type_offset]._24ab083a2_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;
				};
			}
			_iter_next_2512a5494:;
			++it;
			goto _iter_begin_2512a5494;
		}
		_iter_end_2512a5494:;
	};
	return nullptr;
}



inline jule::Trait<_24aac840a_CommonFlag> _24ad019da_FindFlagShort(_24ad00e5c_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_2512a58e5:;
		if (it != expr.end()) {
			jule::Trait<_24aac840a_CommonFlag> _8221_flag = *it;
			{
				if ((_24aac840a_CommonFlag_mptr_data[(_8221_flag).type_offset]._24a9ce036_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;
				};
			}
			_iter_next_2512a58e5:;
			++it;
			goto _iter_begin_2512a58e5;
		}
		_iter_end_2512a58e5:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_24aac840a_CommonFlag>> _24ad01c4e_Flags(_24ad00e5c_FlagSet* _self_) {
	return (*_self_)._field_flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _24ad0205c_Parse(_24ad00e5c_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_24ad03635_argParser _11617_ap = _24ad03635_argParser{._field_set=(*_self_), ._field_args=_11524_args, };;
	({
		auto except = _24ad04a21_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _24ad02238_Reset(_24ad00e5c_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_2512a8123:;
		if (it != expr.end()) {
			jule::Trait<_24aac840a_CommonFlag> _12616_f = *it;
			{
				_24aac840a_CommonFlag_mptr_data[(_12616_f).type_offset]._24acee4cc_Reset(_12616_f);
			}
			_iter_next_2512a8123:;
			++it;
			goto _iter_begin_2512a8123;
		}
		_iter_end_2512a8123:;
	};
}



inline jule::Ptr<_251299543_Flag> _251b6c630_addFlagCommon(_24ad00e5c_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_251b6e16a:;
			{
				goto _match_end_251b6e0c1;
			}
		}
		_match_end_251b6e0c1:;
	};
	if ((_24ad016cc_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_24ad019da_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_251299543_Flag> _14817_flag = jule::new_ptr<_251299543_Flag>(_251299543_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_24aac840a_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_251295907_Flag> _251b7676b_addFlagCommon(_24ad00e5c_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_251b78350:;
			{
				goto _match_end_251b782a6;
			}
		}
		_match_end_251b782a6:;
	};
	if ((_24ad016cc_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_24ad019da_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_251295907_Flag> _14817_flag = jule::new_ptr<_251295907_Flag>(_251295907_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_24aac840a_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}



inline void _251b6a8d6_AddVar(_24ad00e5c_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_251299543_Flag> _17617_flag = _251b6c630_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _251b74a33_AddVar(_24ad00e5c_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_251295907_Flag> _17617_flag = _251b7676b_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _24ad00e5c_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_24a1bc659_IR>,jule::Slice<_23a8a5ca8_Log>> static__248ea3dae_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	jule::Ptr<_249e8d958_JuleImporter> _2817_importer = static__249eea531_New(_24a34301b_buildCompileInfo());;
	jule::Slice<jule::Ptr<_24900ba82_Ast>> _2918_files;;
	jule::Slice<_23a8a5ca8_Log> _2929_logs;;
	std::tie(_2918_files,_2929_logs) = _24a11db60_ImportPackage(_2817_importer.ptr(), _2721_path,true);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_249c140d5_Package> _3918_pkg;;
	std::tie(_3918_pkg,_2929_logs) = _249ccc8b8_AnalyzePackage(_2918_files,jule::Trait<_249c0d50d_Importer>(_2817_importer, 0),_2732_flags);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Ptr<_24a1bc659_IR> _4417_ir = jule::new_ptr<_24a1bc659_IR>(_24a1bc659_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_24a00be16_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_24a33783a_getAllUniquePasses(_4417_ir.get()._field_Main,_4417_ir.get()._field_Used);
	return std::make_tuple(_4417_ir,nullptr);
}



inline void _249d77501_appendStructs(_24a1bc659_IR* _self_, jule::Ptr<_249c140d5_Package>& _5633_p, jule::Slice<jule::Ptr<_249036b01_Struct>>& _5657_buffer) {
	{
		auto &expr = _5633_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_2515adda7:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _5721_f = *it;
			{
				{
					auto &expr = _5721_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_2515ae5a0:;
					if (it != expr.end()) {
						jule::Ptr<_249036b01_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								_5657_buffer = jule::alloc_for_append(_5657_buffer,1);_5657_buffer.__push(_5825_s);;
							};
						}
						_iter_next_2515ae5a0:;
						++it;
						goto _iter_begin_2515ae5a0;
					}
					_iter_end_2515ae5a0:;
				};
			}
			_iter_next_2515adda7:;
			++it;
			goto _iter_begin_2515adda7;
		}
		_iter_end_2515adda7:;
	};
}



inline jule::Slice<jule::Ptr<_249036b01_Struct>> _24a1939a4_GetAllStructures(_24a1bc659_IR* _self_) {
	jule::Slice<jule::Ptr<_249036b01_Struct>> _6917_buffer = nullptr;;
	_249d77501_appendStructs(&(*_self_), (*_self_)._field_Main,_6917_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_2515ae44b:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_249d77501_appendStructs(&(*_self_), _7121_u.get()._field_Package,_6917_buffer);
				};
			}
			_iter_next_2515ae44b:;
			++it;
			goto _iter_begin_2515ae44b;
		}
		_iter_end_2515ae44b:;
	};
	return _6917_buffer;
}



inline void _24a1a7732_appendGlobals(_24a1bc659_IR* _self_, jule::Ptr<_249c140d5_Package>& _7933_p, jule::Slice<jule::Ptr<_249c3702b_Var>>& _7957_buffer) {
	{
		auto &expr = _7933_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_2515b2240:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_2515b2927:;
					if (it != expr.end()) {
						jule::Ptr<_249c3702b_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								_7957_buffer = jule::alloc_for_append(_7957_buffer,1);_7957_buffer.__push(_8125_v);;
							};
						}
						_iter_next_2515b2927:;
						++it;
						goto _iter_begin_2515b2927;
					}
					_iter_end_2515b2927:;
				};
			}
			_iter_next_2515b2240:;
			++it;
			goto _iter_begin_2515b2240;
		}
		_iter_end_2515b2240:;
	};
}



inline jule::Slice<jule::Ptr<_249c3702b_Var>> _24a1ae409_GetAllGlobals(_24a1bc659_IR* _self_) {
	jule::Slice<jule::Ptr<_249c3702b_Var>> _9217_buffer = nullptr;;
	_24a1a7732_appendGlobals(&(*_self_), (*_self_)._field_Main,_9217_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_2515b4220:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_24a1a7732_appendGlobals(&(*_self_), _9421_u.get()._field_Package,_9217_buffer);
				};
			}
			_iter_next_2515b4220:;
			++it;
			goto _iter_begin_2515b4220;
		}
		_iter_end_2515b4220:;
	};
	return _9217_buffer;
}



inline void _24a310307_Order(_24a1bc659_IR* _self_) {
	(*_self_)._field_Ordered._field_Structs=_24a1939a4_GetAllStructures(&(*_self_));
	(*_self_)._field_Ordered._field_Globals=_24a1ae409_GetAllGlobals(&(*_self_));
	static__24a371731_orderStructures((*_self_)._field_Ordered._field_Structs);
	static__24a382610_orderVars((*_self_)._field_Ordered._field_Globals);
}







std::ostream &operator<<(std::ostream &_Stream, _24a1bc659_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _249027262_Str(_249062e4b_StructIns* _self_) {
	jule::Str _24917_kind = jule::Str();;
	_24917_kind+=(*_self_)._field_Decl.get()._field_Ident;
	if (((*_self_)._field_Generics.len() > 0LL)) {
		_24917_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_Generics;
			auto it = expr.begin();
			_iter_begin_24e76786a:;
			if (it != expr.end()) {
				jule::Ptr<_249cae05e_InsGeneric> &_25320_g = *it;
				{
					_24917_kind+=_249cb0b87_Str(_25320_g.get()._field_Kind.ptr());
					_24917_kind+=jule::Str(",", 1);
				}
				_iter_next_24e76786a:;
				++it;
				goto _iter_begin_24e76786a;
			}
			_iter_end_24e76786a:;
		};
		(_24917_kind).mut_slice(0LL,(_24917_kind.len() - 1LL));;
		_24917_kind+=jule::Str("]", 1);
	};
	return _24917_kind;
}



inline jule::Bool _2490387d4_Equals(jule::Ptr<_249062e4b_StructIns> _self_, jule::Ptr<_249cb078b_TypeKind> _26422_other) {
	jule::Ptr<_249062e4b_StructIns> _26513_s = _249cb3d00_Struct(_26422_other.ptr());;
	if ((_26513_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Decl != _26513_s.get()._field_Decl)) {
		return false;
	};
	if ((_self_.get()._field_Generics.len() != _26513_s.get()._field_Generics.len())) {
		return false;
	};
	jule::I64 _27817_i = 0LL;;
	for (; (_27817_i < _self_.get()._field_Generics.len()); (_27817_i)++) {
		{
			if ((!(_249cb0e95_Equals(_self_.get()._field_Generics[_27817_i].get()._field_Kind, _26513_s.get()._field_Generics[_27817_i].get()._field_Kind)))) {
				return false;
			};
		}
	_iter_next_24e76b42e:;
	}
	_iter_end_24e76b42e:;;
	return true;
}



inline jule::Bool _24903994a_Same(_249062e4b_StructIns* _self_, jule::Ptr<_249062e4b_StructIns> _29219_s) {
	if ((((*_self_)._field_Decl != _29219_s.get()._field_Decl) || (_29219_s.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_24e76db90:;
		if (it != expr.end()) {
			jule::I64 _29613_i = it - expr.begin();
			jule::Ptr<_249cae05e_InsGeneric> &_29616_g = *it;
			{
				if ((!(_249cb0e95_Equals(_29616_g.get()._field_Kind, _29219_s.get()._field_Generics[_29613_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_24e76db90:;
			++it;
			_29613_i++;
			goto _iter_begin_24e76db90;
		}
		_iter_end_24e76db90:;
	};
	return true;
}



inline jule::Ptr<_249bcbe38_Fn> _24903bc9e_FindMethod(_249062e4b_StructIns* _self_, jule::Str _30629_ident, jule::Bool _30641_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_24e7709a5:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> _30721_f = *it;
			{
				if (((_30721_f.get()._field_Statically == _30641_statically) && (_30721_f.get()._field_Ident == _30629_ident))) {
					return _30721_f;
				};
			}
			_iter_next_24e7709a5:;
			++it;
			goto _iter_begin_24e7709a5;
		}
		_iter_end_24e7709a5:;
	};
	return nullptr;
}



inline jule::Ptr<_24903e268_FieldIns> _24903d0be_FindField(_249062e4b_StructIns* _self_, jule::Str _31728_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_24e771ce7:;
		if (it != expr.end()) {
			jule::Ptr<_24903e268_FieldIns> _31821_f = *it;
			{
				if ((_31821_f.get()._field_Decl.get()._field_Ident == _31728_ident)) {
					return _31821_f;
				};
			}
			_iter_next_24e771ce7:;
			++it;
			goto _iter_begin_24e771ce7;
		}
		_iter_end_24e771ce7:;
	};
	return nullptr;
}



inline jule::Ptr<_249c3702b_Var> _249040ad8_FindStatic(_249062e4b_StructIns* _self_, jule::Str _32829_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_24e77238b:;
		if (it != expr.end()) {
			jule::Ptr<_249c3702b_Var> _32921_v = *it;
			{
				if ((_32921_v.get()._field_Ident == _32829_ident)) {
					return _32921_v;
				};
			}
			_iter_next_24e77238b:;
			++it;
			goto _iter_begin_24e77238b;
		}
		_iter_end_24e77238b:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _249062e4b_StructIns _Src) {
	_Stream << _249027262_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_24a63d1d4_ObjectDeadCode> static__24a63d635_new(jule::Ptr<_24a1bc659_IR>& _3424_ir) {
	return jule::new_ptr<_24a63d1d4_ObjectDeadCode>(_24a63d1d4_ObjectDeadCode{._field_ir=_3424_ir});
}



inline jule::Bool _251601757_isLive(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_, jule::Ptr<_249bd48d0_Trait>& _4030_t) {
	jule::Slice<jule::Ptr<_249bd48d0_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_25160387a:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_25160379d:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_2516038e1:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_2516038e1:;
			++it;
			_5213_i++;
			goto _iter_begin_2516038e1;
		}
		_iter_end_2516038e1:;
	};
	return false;
}

inline jule::Bool _251606be1_isLive(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_, jule::Ptr<_249bcc312_FnIns>& _4030_t) {
	jule::Slice<jule::Ptr<_249bcc312_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_2516091dd:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_251609342:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_251609188:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_251609188:;
			++it;
			_5213_i++;
			goto _iter_begin_251609188;
		}
		_iter_end_251609188:;
	};
	return false;
}

inline jule::Bool _25161149d_isLive(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_, jule::Ptr<_249062e4b_StructIns>& _4030_t) {
	jule::Slice<jule::Ptr<_249062e4b_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_2516135c1:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_25161355a:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_251613cdb:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_251613cdb:;
			++it;
			_5213_i++;
			goto _iter_begin_251613cdb;
		}
		_iter_end_251613cdb:;
	};
	return false;
}

inline jule::Bool _25161620b_isLive(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_, jule::Ptr<_249c3702b_Var>& _4030_t) {
	jule::Slice<jule::Ptr<_249c3702b_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_251618120:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_25161820d:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_251618054:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_251618054:;
			++it;
			_5213_i++;
			goto _iter_begin_251618054;
		}
		_iter_end_251618054:;
	};
	return false;
}



inline void _251601d40_pushLive(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_, jule::Ptr<_249bd48d0_Trait> _6035_t) {
	{
		
{
			_case_begin_251605bbd:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_251605a8b:;
	};
}

inline void _25160b0be_pushLive(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_, jule::Ptr<_249bcc312_FnIns> _6035_t) {
	{
		
{
			_case_begin_25160bcd4:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_25160bc7e:;
	};
}

inline void _25160e413_pushLive(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_, jule::Ptr<_249062e4b_StructIns> _6035_t) {
	{
		
{
			_case_begin_251610bc8:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_251610b0c:;
	};
}

inline void _251619c59_pushLive(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_, jule::Ptr<_249c3702b_Var> _6035_t) {
	{
		
{
			_case_begin_25161a7d7:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_25161a919:;
	};
}



inline void _24a670db5_setReferencesAsLive(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_, jule::Ptr<_249bcccd5_ReferenceStack>& _7344_rs) {
	if ((_7344_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _249bcd104_Len(_7344_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _249bcd236_At(_7344_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type_is<jule::Ptr<_249bd48d0_Trait>>()) {
					_case_begin_251600712:;
					{
						jule::Ptr<_249bd48d0_Trait> _8225_t = _7921_ref.operator jule::Ptr<_249bd48d0_Trait>();;
						if (_251601757_isLive(_self_, _8225_t)) {
							goto _iter_next_2515eea52;
						};
						_251601d40_pushLive(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_25160544d:;
							if (it != expr.end()) {
								jule::Ptr<_249bcbe38_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_25160599d:;
										if (it != expr.end()) {
											jule::Ptr<_249bcc312_FnIns> _8833_mins = *it;
											{
												if (_251606be1_isLive(_self_, _8833_mins)) {
													goto _iter_next_25160599d;
												};
												_25160b0be_pushLive(_self_, _8833_mins);
												_24a670db5_setReferencesAsLive(_self_, _8833_mins.get()._field_Refers);
											}
											_iter_next_25160599d:;
											++it;
											goto _iter_begin_25160599d;
										}
										_iter_end_25160599d:;
									};
								}
								_iter_next_25160544d:;
								++it;
								goto _iter_begin_25160544d;
							}
							_iter_end_25160544d:;
						};
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_249bcc312_FnIns>>()) {
					_case_begin_251600778:;
					{
						jule::Ptr<_249bcc312_FnIns> _9725_f = _7921_ref.operator jule::Ptr<_249bcc312_FnIns>();;
						if (_251606be1_isLive(_self_, _9725_f)) {
							goto _match_end_251600657;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_25161149d_isLive(_self_, _9725_f.get()._field_Owner)))) {
								_25160e413_pushLive(_self_, _9725_f.get()._field_Owner);
								_24a670db5_setReferencesAsLive(_self_, _9725_f.get()._field_Owner.get()._field_Refers);
							};
						};
						_25160b0be_pushLive(_self_, _9725_f);
						_24a670db5_setReferencesAsLive(_self_, _9725_f.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_249c3702b_Var>>()) {
					_case_begin_2516008ee:;
					{
						jule::Ptr<_249c3702b_Var> _11025_v = _7921_ref.operator jule::Ptr<_249c3702b_Var>();;
						if (_25161620b_isLive(_self_, _11025_v)) {
							goto _match_end_251600657;
						};
						_251619c59_pushLive(_self_, _11025_v);
						_24a670db5_setReferencesAsLive(_self_, _11025_v.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_249062e4b_StructIns>>()) {
					_case_begin_251600965:;
					{
						jule::Ptr<_249062e4b_StructIns> _11725_s = _7921_ref.operator jule::Ptr<_249062e4b_StructIns>();;
						if (_25161149d_isLive(_self_, _11725_s)) {
							goto _match_end_251600657;
						};
						_25160e413_pushLive(_self_, _11725_s);
						_24a670db5_setReferencesAsLive(_self_, _11725_s.get()._field_Refers);
						{
							auto &expr = _11725_s.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_25161dd29:;
							if (it != expr.end()) {
								jule::Ptr<_249bcbe38_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_25161e8c9:;
										if (it != expr.end()) {
											jule::Ptr<_249bcc312_FnIns> _12433_mins = *it;
											{
												if (_251606be1_isLive(_self_, _12433_mins)) {
													goto _iter_next_25161e8c9;
												};
												_25160b0be_pushLive(_self_, _12433_mins);
												_24a670db5_setReferencesAsLive(_self_, _12433_mins.get()._field_Refers);
											}
											_iter_next_25161e8c9:;
											++it;
											goto _iter_begin_25161e8c9;
										}
										_iter_end_25161e8c9:;
									};
								}
								_iter_next_25161dd29:;
								++it;
								goto _iter_begin_25161dd29;
							}
							_iter_end_25161dd29:;
						};
					}
				}
				_match_end_251600657:;
			};
		}
	_iter_next_2515eea52:;
	}
	_iter_end_2515eea52:;;
}



inline void _24a67113a_inits(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_, jule::Ptr<_249c140d5_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_2515eee81:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_25162215c:;
					if (it != expr.end()) {
						jule::Ptr<_249bcbe38_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_Ident == jule::Str("init", 4))) {
								jule::Ptr<_249bcc312_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_24a670db5_setReferencesAsLive(_self_, _14029_ins.get()._field_Refers);
							};
						}
						_iter_next_25162215c:;
						++it;
						goto _iter_begin_25162215c;
					}
					_iter_end_25162215c:;
				};
			}
			_iter_next_2515eee81:;
			++it;
			goto _iter_begin_2515eee81;
		}
		_iter_end_2515eee81:;
	};
}



inline void _24a6713b0_collectLivePackage(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_, jule::Ptr<_249c140d5_Package>& _14843_pkg) {
	_24a67113a_inits(_self_, _14843_pkg);
	if (_2388e7dda_Test) {
		{
			auto &expr = _14843_pkg.get()._field_Files;
			auto it = expr.begin();
			_iter_begin_251624879:;
			if (it != expr.end()) {
				jule::Ptr<_249c7a228_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_Funcs;
						auto it = expr.begin();
						_iter_begin_25162524d:;
						if (it != expr.end()) {
							jule::Ptr<_249bcbe38_Fn> _15529_f = *it;
							{
								if (_24a6733c3_hasDirective(_15529_f.get()._field_Directives,jule::Str("test", 4))) {
									jule::Ptr<_249bcc312_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_24a670db5_setReferencesAsLive(_self_, _15733_ins.get()._field_Refers);
								};
							}
							_iter_next_25162524d:;
							++it;
							goto _iter_begin_25162524d;
						}
						_iter_end_25162524d:;
					};
				}
				_iter_next_251624879:;
				++it;
				goto _iter_begin_251624879;
			}
			_iter_end_251624879:;
		};
	};
}



inline void _24a67158b_collectLive(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_25162457c:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_24a6713b0_collectLivePackage(_self_, _16721_used.get()._field_Package);
				};
			}
			_iter_next_25162457c:;
			++it;
			goto _iter_begin_25162457c;
		}
		_iter_end_25162457c:;
	};
	_24a6713b0_collectLivePackage(_self_, _self_.get()._field_ir.get()._field_Main);
	jule::Ptr<_249bcbe38_Fn> _17517_main = _249c15889_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_249bcc312_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_24a670db5_setReferencesAsLive(_self_, _17617_ins.get()._field_Refers);
}



inline void _24a671811_removeDeadGlobals(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_249c3702b_Var>>& _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18142_vars.len())) {
		{
			jule::Ptr<_249c3702b_Var> _18417_v = _18142_vars[_18217_i];;
			if (_25161620b_isLive(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_25162a62c;
			};
			_18142_vars=jule::append(_18142_vars.slice(0LL,_18217_i),_18142_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_25162a62c:;
	}
	_iter_end_25162a62c:;;
}



inline void _24a671a86_removeDeadFns(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_249bcbe38_Fn>>& _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19338_funcs.len())) {
		{
			jule::Ptr<_249bcbe38_Fn> _19621_f = _19338_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_249bcc312_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_251606be1_isLive(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_25162de05;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL,_19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_25162de05:;
			}
			_iter_end_25162de05:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				_19338_funcs=jule::append(_19338_funcs.slice(0LL,_19417_i),_19338_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_25162ab38;
			};
			(_19417_i)++;
		}
	_iter_next_25162ab38:;
	}
	_iter_end_25162ab38:;;
}



inline void _24a671d0b_removeDeadStructs(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_249036b01_Struct>>& _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21442_structs.len())) {
		{
			jule::Ptr<_249036b01_Struct> _21721_s = _21442_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_249062e4b_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_24a671a86_removeDeadFns(_self_, _22025_ins.get()._field_Methods);
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _25161149d_isLive(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_251633448;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL,_21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_251633448:;
			}
			_iter_end_251633448:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				_21442_structs=jule::append(_21442_structs.slice(0LL,_21517_i),_21442_structs.slice((_21517_i + 1LL)));
				goto _iter_next_2516321e4;
			};
			(_21517_i)++;
		}
	_iter_next_2516321e4:;
	}
	_iter_end_2516321e4:;;
}



inline void _24a672081_removeDeadTraits(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_249bd48d0_Trait>>& _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23641_traits.len())) {
		{
			jule::Ptr<_249bd48d0_Trait> _23921_t = _23641_traits[_23717_i];;
			if ((!(_251601757_isLive(_self_, _23921_t)))) {
				_23641_traits=jule::append(_23641_traits.slice(0LL,_23717_i),_23641_traits.slice((_23717_i + 1LL)));
				goto _iter_next_25163723d;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_249036b01_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_251637e0e;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL,_24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_251637e0e:;
			}
			_iter_end_251637e0e:;;
			(_23717_i)++;
		}
	_iter_next_25163723d:;
	}
	_iter_end_25163723d:;;
}



inline void _24a672306_removeDeadsFile(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_, jule::Ptr<_249c7a228_SymbolTable>& _25740_file) {
	_24a671a86_removeDeadFns(_self_, _25740_file.get()._field_Funcs);
	_24a671d0b_removeDeadStructs(_self_, _25740_file.get()._field_Structs);
	_24a672081_removeDeadTraits(_self_, _25740_file.get()._field_Traits);
	_24a671811_removeDeadGlobals(_self_, _25740_file.get()._field_Vars);
}



inline void _24a67257b_removeDeadsPackage(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_, jule::Ptr<_249c140d5_Package>& _26443_pkg) {
	{
		auto &expr = _26443_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_25163ce36:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _26521_file = *it;
			{
				_24a672306_removeDeadsFile(_self_, _26521_file);
			}
			_iter_next_25163ce36:;
			++it;
			goto _iter_begin_25163ce36;
		}
		_iter_end_25163ce36:;
	};
}



inline void _24a672757_removeDeads(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_25163d651:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_24a67257b_removeDeadsPackage(_self_, _27121_used.get()._field_Package);
				};
			}
			_iter_next_25163d651:;
			++it;
			goto _iter_begin_25163d651;
		}
		_iter_end_25163d651:;
	};
	_24a67257b_removeDeadsPackage(_self_, _self_.get()._field_ir.get()._field_Main);
}



inline void _24a672933_elimanate(jule::Ptr<_24a63d1d4_ObjectDeadCode> _self_) {
	_24a67158b_collectLive(_self_);
	_24a672757_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _24a63d1d4_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_24acb15c1_ObjectCoder> static__24ac51792_New(jule::Ptr<_24a1bc659_IR>& _7224_ir, _24ac272e5_SerializationInfo _7233_info) {
	jule::Ptr<_24acb15c1_ObjectCoder> _7317_oc = jule::new_ptr<_24acb15c1_ObjectCoder>(_24acb15c1_ObjectCoder{._field_ir=_7224_ir, ._field_info=_7233_info, });;
	_7317_oc.get()._field_ec=static__24ac0c495_new(_7317_oc);
	_7317_oc.get()._field_sc=static__24ac047ab_new(_7317_oc);
	return _7317_oc;
}



inline void _24ac55de5_write(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Str _8225_s) {
	_self_.get()._field_Obj+=_8225_s;
}



inline void _24ac88d90_addIndent(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	;
	_self_.get()._field_indentBuffer+=jule::Str("\t", 1);
}



inline void _24ac89775_doneIndent(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL,(_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _24ac267bc_indent(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _24ac46c1b_findTypeOffset(_24acb15c1_ObjectCoder* _self_, jule::Ptr<_249bd48d0_Trait> _10229_t, jule::Ptr<_249cb078b_TypeKind> _10244_k) {
	if ((_10229_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_249062e4b_StructIns> _10617_s = nullptr;;
	if ((_249cb2b12_Sptr(_10244_k.ptr()) != nullptr)) {
		_10244_k=_249cb2b12_Sptr(_10244_k.ptr()).get()._field_Elem;
	};
	if ((_249cb3d00_Struct(_10244_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10617_s=_249cb3d00_Struct(_10244_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_251a95c95:;
		if (it != expr.end()) {
			jule::Ptr<_24acb13d4_traitHash> &_11416_hash = *it;
			{
				if (((_11416_hash.get()._field_t == _10229_t) && (_11416_hash.get()._field_s == _10617_s))) {
					return _11416_hash.get()._field_i;
				};
			}
			_iter_next_251a95c95:;
			++it;
			goto _iter_begin_251a95c95;
		}
		_iter_end_251a95c95:;
	};
	return -1LL;
}



inline void _24ac86420_locInfo(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_23abd3d83_Token>& _12328_t) {
	jule::Str &_12414_loc = _12328_t.get()._field_File.get()._field_Path;;
	if (_2388e8913_Production) {
		{
			
			if (_23a82a128_HasPrefix(_12414_loc,_23a8de9d4_PathStdlib)) {
				_case_begin_251a985b1:;
				{
					_24ac55de5_write(_self_, _24ac18c98_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_239877bc1_Dir(_23a8de9d4_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_23a82a128_HasPrefix(_12414_loc,_self_.get()._field_ir.get()._field_Root)) {
				_case_begin_251a98380:;
				{
					_24ac55de5_write(_self_, _24ac18c98_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_239877bc1_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_251a97ec8:;
				{
					_24ac55de5_write(_self_, _24ac18c98_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
				}
			}
			_match_end_251a97deb:;
		};
	} else {
		_24ac55de5_write(_self_, _24ac18c98_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
	};
	_24ac55de5_write(_self_, jule::Str(":", 1));
	_24ac55de5_write(_self_, _249bc2813_Itoa(_12328_t.get()._field_Row));
	_24ac55de5_write(_self_, jule::Str(":", 1));
	_24ac55de5_write(_self_, _249bc2813_Itoa(_12328_t.get()._field_Column));
}



inline void _24ac8694d_head(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	_24aca9377_Time _15013_time = static__24aca991b_Now();;
	_24aca8bd4_AbsTime _15113_abs = _24acab05a_Abs(&_15013_time);;
	_24ac55de5_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_24ac55de5_write(_self_, jule::Str("// JuleC version: ", 18));
	_24ac55de5_write(_self_, jule::Str("jule0.0.12 @master", 18));
	_24ac55de5_write(_self_, jule::Str("\n", 1));
	_24ac55de5_write(_self_, jule::Str("// Date: ", 9));
	_24ac55de5_write(_self_, _249bc259e_FmtUint(_15113_abs._field_Day,10LL));
	_24ac55de5_write(_self_, jule::Str("/", 1));
	_24ac55de5_write(_self_, _249bc259e_FmtUint(_15113_abs._field_Month,10LL));
	_24ac55de5_write(_self_, jule::Str("/", 1));
	_24ac55de5_write(_self_, _249bc259e_FmtUint(_15113_abs._field_Year,10LL));
	_24ac55de5_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_24ac55de5_write(_self_, _self_.get()._field_info._field_Compiler);
	_24ac55de5_write(_self_, jule::Str(" ", 1));
	_24ac55de5_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_24ac55de5_write(_self_, jule::Str("\n\n", 2));
	if (_2388e8913_Production) {
		_24ac55de5_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_2388e81d7_RC))) {
		_24ac55de5_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_2388e8605_Safety))) {
		_24ac55de5_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_24ac55de5_write(_self_, jule::Str("\n\n#include \"", 12));
	_24ac55de5_write(_self_, _23a8ee890_PathApi);
	_24ac55de5_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _24ac274d2_links(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_251aa4ea2:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _18316_used = *it;
			{
				{
					
					if ((!(_18316_used.get()._field_CppLinked))) {
						_case_begin_251aa62d3:;
						{
							goto _iter_next_251aa4ea2;
						}
					}
					else if (_23a899186_IsStdHeaderPath(_18316_used.get()._field_Path)) {
						_case_begin_251aa5e3c:;
						{
							_24ac55de5_write(_self_, jule::Str("#include ", 9));
							_24ac55de5_write(_self_, _18316_used.get()._field_Path);
							_24ac55de5_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_251aa5a96:;
						{
							_24ac55de5_write(_self_, jule::Str("#include \"", 10));
							_24ac55de5_write(_self_, _18316_used.get()._field_Path);
							_24ac55de5_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_251aa59b9:;
				};
			}
			_iter_next_251aa4ea2:;
			++it;
			goto _iter_begin_251aa4ea2;
		}
		_iter_end_251aa4ea2:;
	};
}



inline void _24ac4a549_prepareStructures(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_251aa734a:;
		if (it != expr.end()) {
			jule::Ptr<_249036b01_Struct> _20021_s = *it;
			{
				if ((_20021_s.get()._field_Token != nullptr)) {
					_24acb464b_prepareStructure(_20021_s);
				};
			}
			_iter_next_251aa734a:;
			++it;
			goto _iter_begin_251aa734a;
		}
		_iter_end_251aa734a:;
	};
}



inline void _24ac52386_iterPackages(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_249c140d5_Package>&)> _20732_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_251aa95c2:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _20821_used = *it;
			{
				if ((!(_20821_used.get()._field_CppLinked))) {
					_20732_f(_20821_used.get()._field_Package);
				};
			}
			_iter_next_251aa95c2:;
			++it;
			goto _iter_begin_251aa95c2;
		}
		_iter_end_251aa95c2:;
	};
	_20732_f(_self_.get()._field_ir.get()._field_Main);
}



inline void _24ac52919_buildTraitMap(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	_24ac52386_iterPackages(_self_, jule::Fn<void(jule::Ptr<_249c140d5_Package>&)>([=](jule::Ptr<_249c140d5_Package>& _21735_pkg) mutable -> void {
		_24acb4519_iterFiles(_21735_pkg,jule::Fn<void(jule::Ptr<_249c7a228_SymbolTable>&)>([=](jule::Ptr<_249c7a228_SymbolTable>& _21836_file) mutable -> void {
			{
				auto &expr = _21836_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_251aacb58:;
				if (it != expr.end()) {
					jule::Ptr<_249bd48d0_Trait> _21929_t = *it;
					{
						if ((_21929_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_21929_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_24acb13d4_traitHash>(_24acb13d4_traitHash{._field_t=_21929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_251aacb58;
						};
						jule::I64 _23129_i = 0LL;;
						{
							auto &expr = _21929_t.get()._field_Implemented;
							auto it = expr.begin();
							_iter_begin_251aaedd0:;
							if (it != expr.end()) {
								jule::Ptr<_249036b01_Struct> _23233_s = *it;
								{
									{
										auto &expr = _23233_s.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_251ab0694:;
										if (it != expr.end()) {
											jule::Ptr<_249062e4b_StructIns> _23337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_24acb13d4_traitHash>(_24acb13d4_traitHash{._field_t=_21929_t, ._field_s=_23337_ins, ._field_i=_23129_i}));;
												(_23129_i)++;
											}
											_iter_next_251ab0694:;
											++it;
											goto _iter_begin_251ab0694;
										}
										_iter_end_251ab0694:;
									};
								}
								_iter_next_251aaedd0:;
								++it;
								goto _iter_begin_251aaedd0;
							}
							_iter_end_251aaedd0:;
						};
					}
					_iter_next_251aacb58:;
					++it;
					goto _iter_begin_251aacb58;
				}
				_iter_end_251aacb58:;
			};
		}));
	}));
}



inline void _24ac537d8_traitDecls(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	_24ac52386_iterPackages(_self_, jule::Fn<void(jule::Ptr<_249c140d5_Package>&)>([=](jule::Ptr<_249c140d5_Package>& _24835_pkg) mutable -> void {
		_24acb4519_iterFiles(_24835_pkg,jule::Fn<void(jule::Ptr<_249c7a228_SymbolTable>&)>([=](jule::Ptr<_249c7a228_SymbolTable>& _24936_file) mutable -> void {
			{
				auto &expr = _24936_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_251ab2a09:;
				if (it != expr.end()) {
					jule::Ptr<_249bd48d0_Trait> _25029_t = *it;
					{
						if ((_25029_t.get()._field_Token == nullptr)) {
							return;;
						};
						_24ac267bc_indent(_self_);
						_24ac55de5_write(_self_, jule::Str("struct ", 7));
						_24ac55de5_write(_self_, static__24ac20673_traitDecl(_25029_t));
						_24ac55de5_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_251ab2a09:;
					++it;
					goto _iter_begin_251ab2a09;
				}
				_iter_end_251ab2a09:;
			};
		}));
	}));
}



inline void _24ac53e9d_structurePlainDecl(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_249036b01_Struct>& _26343_s) {
	{
		auto &expr = _26343_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_251ab2597:;
		if (it != expr.end()) {
			jule::Ptr<_249062e4b_StructIns> _26421_ins = *it;
			{
				_24ac55de5_write(_self_, jule::Str("struct ", 7));
				_24ac55de5_write(_self_, static__24ac20e59_structureIns(_26421_ins));
				_24ac55de5_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_251ab2597:;
			++it;
			goto _iter_begin_251ab2597;
		}
		_iter_end_251ab2597:;
	};
}



inline void _24ac54663_structurePlainDecls(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_251ab5e6e:;
		if (it != expr.end()) {
			jule::Ptr<_249036b01_Struct> _27221_s = *it;
			{
				if ((_27221_s.get()._field_Token != nullptr)) {
					_24ac53e9d_structurePlainDecl(_self_, _27221_s);
				};
			}
			_iter_next_251ab5e6e:;
			++it;
			goto _iter_begin_251ab5e6e;
		}
		_iter_end_251ab5e6e:;
	};
}



inline void _24ac8ec20_fieldDecl(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_24903e268_FieldIns>& _27934_f) {
	_24ac55de5_write(_self_, static__24acba432_kind(_27934_f.get()._field_Kind));
	_24ac55de5_write(_self_, jule::Str(" ", 1));
	_24ac55de5_write(_self_, static__24ac21201_field(_27934_f.get()._field_Decl));
	_24ac55de5_write(_self_, jule::Str(" = ", 3));
	if ((_27934_f.get()._field_Default == nullptr)) {
		_24ac183b3_initExpr(_self_.get()._field_ec, _27934_f.get()._field_Kind);
	} else {
		_24ac17db8_expr(_self_.get()._field_ec, _27934_f.get()._field_Default.get()._field_Model);
	};
	_24ac55de5_write(_self_, jule::Str(";", 1));
}



inline void _24ac54d28_structureDestructor(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_249062e4b_StructIns>& _29444_s) {
	;
	jule::Ptr<_249bcbe38_Fn> _29713_disposeMethod = _24903bc9e_FindMethod(_29444_s.ptr(), jule::Str("Dispose", 7),false);;
	jule::Bool _29817_disposed = static__249c3844a_Dispose(_29713_disposeMethod);;
	if ((!(_29817_disposed))) {
		return;;
	};
	_24ac55de5_write(_self_, jule::Str("~", 1));
	_24ac55de5_write(_self_, static__24ac20e59_structureIns(_29444_s));
	_24ac55de5_write(_self_, jule::Str("(void) { ", 9));
	_24ac55de5_write(_self_, static__24ac20134_func(_29713_disposeMethod));
	_24ac55de5_write(_self_, jule::Str("(this); }", 9));
}



inline void _24ac888ea_structureDeriveDefsDecls(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_249062e4b_StructIns>& _31045_s) {
	if (_2490237be_IsDerives(_31045_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_24ac267bc_indent(_self_);
		_24ac55de5_write(_self_, static__24ac1abbd_cloneFuncDecl(_31045_s.get()._field_Decl));
		_24ac55de5_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _24ac4b913_structureOperatorEq(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Str& _31840_ident, jule::Ptr<_249062e4b_StructIns>& _31857_s) {
	if ((_31857_s.get()._field_Operators._field_Eq != nullptr)) {
		_24acb1c97_structureOperator(_self_, _31840_ident,_31857_s.get()._field_Operators._field_Eq,jule::Str("==", 2));
		return;;
	};
	_24ac267bc_indent(_self_);
	if (_23ac5242e_Inline) {
		_24ac55de5_write(_self_, jule::Str("inline ", 7));
	};
	_24ac55de5_write(_self_, jule::Str("bool operator==(", 16));
	_24ac55de5_write(_self_, _31840_ident);
	_24ac55de5_write(_self_, jule::Str(" _other) {", 10));
	if ((_31857_s.get()._field_Fields.len() > 0LL)) {
		_24ac88d90_addIndent(_self_);
		_24ac55de5_write(_self_, jule::Str("\n", 1));
		_24ac267bc_indent(_self_);
		_24ac55de5_write(_self_, jule::Str("return ", 7));
		_24ac88d90_addIndent(_self_);
		jule::Bool _33821_writed = false;;
		{
			auto &expr = _31857_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_2511bd5ee:;
			if (it != expr.end()) {
				jule::Ptr<_24903e268_FieldIns> _33925_f = *it;
				{
					jule::Ptr<_249062e4b_StructIns> _34121_strct = _249cb3d00_Struct(_33925_f.get()._field_Kind.ptr());;
					if ((((_34121_strct != nullptr) && (_34121_strct.get()._field_Decl != nullptr)) && _34121_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_2511bd5ee;
					};
					if (_33821_writed) {
						_24ac55de5_write(_self_, jule::Str(" &&", 3));
					};
					_33821_writed=true;
					_24ac55de5_write(_self_, jule::Str("\n", 1));
					_24ac267bc_indent(_self_);
					_24ac55de5_write(_self_, jule::Str("this->", 6));
					jule::Str _35321_fIdent = static__24ac21201_field(_33925_f.get()._field_Decl);;
					_24ac55de5_write(_self_, _35321_fIdent);
					_24ac55de5_write(_self_, jule::Str(" == _other.", 11));
					_24ac55de5_write(_self_, _35321_fIdent);
				}
				_iter_next_2511bd5ee:;
				++it;
				goto _iter_begin_2511bd5ee;
			}
			_iter_end_2511bd5ee:;
		};
		_24ac89775_doneIndent(_self_);
		if ((!(_33821_writed))) {
			_24ac55de5_write(_self_, jule::Str("true", 4));
		};
		_24ac55de5_write(_self_, jule::Str(";\n", 2));
		_24ac89775_doneIndent(_self_);
		_24ac267bc_indent(_self_);
		_24ac55de5_write(_self_, jule::Str("}", 1));
	} else {
		_24ac55de5_write(_self_, jule::Str(" return true; }", 15));
	};
	_24ac55de5_write(_self_, jule::Str("\n\n", 2));
}



inline void _24acb1b65_structureOperatorNotEq(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Str& _37243_ident, jule::Ptr<_249062e4b_StructIns>& _37260_s) {
	_24ac267bc_indent(_self_);
	if (_23ac5242e_Inline) {
		_24ac55de5_write(_self_, jule::Str("inline ", 7));
	};
	_24ac55de5_write(_self_, jule::Str("bool operator!=(", 16));
	_24ac55de5_write(_self_, _37243_ident);
	_24ac55de5_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _24acb1c97_structureOperator(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Str& _38338_ident, jule::Ptr<_249bcc312_FnIns>& _38355_f, jule::Str _38366_op) {
	if ((_38355_f == nullptr)) {
		return;;
	};
	jule::Bool _38813_unary = (_38355_f.get()._field_Params.len() == 1LL);;
	jule::Bool _38913_assignment = _2490aaa43_IsVoid(_38355_f.get()._field_Decl.ptr());;
	_24ac267bc_indent(_self_);
	if (_23ac5242e_Inline) {
		_24ac55de5_write(_self_, jule::Str("inline ", 7));
	};
	if (_38913_assignment) {
		_24ac55de5_write(_self_, _38338_ident);
		_24ac55de5_write(_self_, jule::Str("&", 1));
	} else {
		if ((_249cb289d_Prim(_38355_f.get()._field_Result.ptr()) == nullptr)) {
			_24ac55de5_write(_self_, _38338_ident);
		} else {
			_24ac55de5_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_24ac55de5_write(_self_, jule::Str(" operator", 9));
	_24ac55de5_write(_self_, _38366_op);
	_24ac55de5_write(_self_, jule::Str("(", 1));
	if ((!(_38813_unary))) {
		jule::Ptr<_249bcc125_ParamIns> _41121_p = _38355_f.get()._field_Params[1LL];;
		_24ac55de5_write(_self_, static__24acb960c_paramIns(_41121_p));
		_24ac55de5_write(_self_, jule::Str(" _other", 7));
	};
	_24ac55de5_write(_self_, jule::Str(") { ", 4));
	if ((!(_38913_assignment))) {
		_24ac55de5_write(_self_, jule::Str("return ", 7));
	};
	_24ac55de5_write(_self_, static__24ac203cb_funcIns(_38355_f));
	if ((!(_38813_unary))) {
		_24ac55de5_write(_self_, jule::Str("(this, _other); ", 16));
		if (_38913_assignment) {
			_24ac55de5_write(_self_, jule::Str("return *this; ", 14));
		};
		_24ac55de5_write(_self_, jule::Str("}", 1));
	} else {
		_24ac55de5_write(_self_, jule::Str("(this); }", 9));
	};
	_24ac55de5_write(_self_, jule::Str("\n\n", 2));
}



inline void _24acb1dc9_structureOperators(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_249062e4b_StructIns>& _43243_s) {
	jule::Str _43313_ident = static__24ac20e59_structureIns(_43243_s);;
	_24ac4b913_structureOperatorEq(_self_, _43313_ident,_43243_s);
	_24acb1b65_structureOperatorNotEq(_self_, _43313_ident,_43243_s);
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Gt,jule::Str(">", 1));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_GtEq,jule::Str(">=", 2));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Lt,jule::Str("<", 1));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_LtEq,jule::Str("<=", 2));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Shl,jule::Str("<<", 2));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Shr,jule::Str(">>", 2));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Add,jule::Str("+", 1));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Sub,jule::Str("-", 1));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Div,jule::Str("/", 1));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Mul,jule::Str("*", 1));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Mod,jule::Str("%", 1));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitAnd,jule::Str("&", 1));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitOr,jule::Str("|", 1));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitXor,jule::Str("^", 1));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Neg,jule::Str("-", 1));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Pos,jule::Str("+", 1));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitNot,jule::Str("~", 1));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_AddAssign,jule::Str("+=", 2));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_SubAssign,jule::Str("-=", 2));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_DivAssign,jule::Str("/=", 2));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_MulAssign,jule::Str("*=", 2));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ModAssign,jule::Str("%=", 2));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ShlAssign,jule::Str("<<=", 3));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ShrAssign,jule::Str(">>=", 3));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitOrAssign,jule::Str("|=", 2));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitAndAssign,jule::Str("&=", 2));
	_24acb1c97_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitXorAssign,jule::Str("^=", 2));
}



inline void _24acb200b_structureInsDecl(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_249062e4b_StructIns>& _47141_s) {
	if ((_47141_s.get()._field_Methods.len() > 0LL)) {
		{
			auto &expr = _47141_s.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_2511dd7c8:;
			if (it != expr.end()) {
				jule::Ptr<_249bcbe38_Fn> _47325_m = *it;
				{
					_24acb2616_funcDecl(_self_, _47325_m,false);
				}
				_iter_next_2511dd7c8:;
				++it;
				goto _iter_begin_2511dd7c8;
			}
			_iter_end_2511dd7c8:;
		};
	};
	_24ac55de5_write(_self_, jule::Str("struct ", 7));
	jule::Str _47913_outIdent = static__24ac20e59_structureIns(_47141_s);;
	_24ac55de5_write(_self_, _47913_outIdent);
	_24ac55de5_write(_self_, jule::Str(" {\n", 3));
	_24ac88d90_addIndent(_self_);
	{
		auto &expr = _47141_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_2511e038a:;
		if (it != expr.end()) {
			jule::Ptr<_24903e268_FieldIns> _48521_f = *it;
			{
				_24ac267bc_indent(_self_);
				_24ac8ec20_fieldDecl(_self_, _48521_f);
				_24ac55de5_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_2511e038a:;
			++it;
			goto _iter_begin_2511e038a;
		}
		_iter_end_2511e038a:;
	};
	_24ac267bc_indent(_self_);
	_24ac54d28_structureDestructor(_self_, _47141_s);
	_24ac55de5_write(_self_, jule::Str("\n\n", 2));
	_24ac267bc_indent(_self_);
	_24ac55de5_write(_self_, _47913_outIdent);
	_24ac55de5_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_24ac888ea_structureDeriveDefsDecls(_self_, _47141_s);
	_24acb1dc9_structureOperators(_self_, _47141_s);
	_24ac55de5_write(_self_, jule::Str("\n", 1));
	_24ac89775_doneIndent(_self_);
	_24ac267bc_indent(_self_);
	_24ac55de5_write(_self_, jule::Str("};", 2));
}



inline void _24acb213d_structureDecl(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_249036b01_Struct>& _51038_s) {
	{
		auto &expr = _51038_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_2511e515e:;
		if (it != expr.end()) {
			jule::Ptr<_249062e4b_StructIns> _51121_ins = *it;
			{
				_24acb200b_structureInsDecl(_self_, _51121_ins);
			}
			_iter_next_2511e515e:;
			++it;
			goto _iter_begin_2511e515e;
		}
		_iter_end_2511e515e:;
	};
}



inline void _24acb2270_structureDecls(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_2511e5879:;
		if (it != expr.end()) {
			jule::Ptr<_249036b01_Struct> _51721_s = *it;
			{
				if ((_51721_s.get()._field_Token != nullptr)) {
					_24acb213d_structureDecl(_self_, _51721_s);
					_24ac55de5_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_2511e5879:;
			++it;
			goto _iter_begin_2511e5879;
		}
		_iter_end_2511e5879:;
	};
}



inline void _24acb23a2_paramsDecls(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Slice<jule::Ptr<_249bcc125_ParamIns>>& _52536_params) {
	if ((_52536_params.len() == 0LL)) {
		_24ac55de5_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_24ac55de5_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _52536_params;
		auto it = expr.begin();
		_iter_begin_2511e8481:;
		if (it != expr.end()) {
			jule::I64 _53214_i = it - expr.begin();
			jule::Ptr<_249bcc125_ParamIns> _53221_p = *it;
			{
				_24ac55de5_write(_self_, static__24acb960c_paramIns(_53221_p));
				if (((_52536_params.len() - _53214_i) > 1LL)) {
					_24ac55de5_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_2511e8481:;
			++it;
			_53214_i++;
			goto _iter_begin_2511e8481;
		}
		_iter_end_2511e8481:;
	};
	_24ac55de5_write(_self_, jule::Str(")", 1));
}



inline void _24acb24d4_funcHead(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_249bcc312_FnIns>& _54233_f, jule::Bool _54244_ptr) {
	if ((((!(_54244_ptr)) && _23ac5242e_Inline) && (!(_2490ab978_IsEntryPoint(_54233_f.get()._field_Decl.ptr()))))) {
		_24ac55de5_write(_self_, jule::Str("inline ", 7));
	};
	_24ac55de5_write(_self_, static__24acb9b4b_funcInsResult(_54233_f));
	if (_54244_ptr) {
		_24ac55de5_write(_self_, jule::Str("(*", 2));
		_24ac55de5_write(_self_, static__24ac203cb_funcIns(_54233_f));
		_24ac55de5_write(_self_, jule::Str(")", 1));
	} else {
		_24ac55de5_write(_self_, jule::Str(" ", 1));
		_24ac55de5_write(_self_, static__24ac203cb_funcIns(_54233_f));
	};
}



inline void _24acb2616_funcDecl(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_249bcbe38_Fn>& _55733_f, jule::Bool _55741_ptr) {
	{
		auto &expr = _55733_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_2511edc8e:;
		if (it != expr.end()) {
			jule::Ptr<_249bcc312_FnIns> _55821_c = *it;
			{
				_24ac267bc_indent(_self_);
				_24acb24d4_funcHead(_self_, _55821_c,_55741_ptr);
				_24acb23a2_paramsDecls(_self_, _55821_c.get()._field_Params);
				_24ac55de5_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_2511edc8e:;
			++it;
			goto _iter_begin_2511edc8e;
		}
		_iter_end_2511edc8e:;
	};
}



inline void _24acb2748_funcDecls(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	_24ac52386_iterPackages(_self_, jule::Fn<void(jule::Ptr<_249c140d5_Package>&)>([=](jule::Ptr<_249c140d5_Package>& _56735_pkg) mutable -> void {
		_24acb4519_iterFiles(_56735_pkg,jule::Fn<void(jule::Ptr<_249c7a228_SymbolTable>&)>([=](jule::Ptr<_249c7a228_SymbolTable>& _56836_file) mutable -> void {
			{
				auto &expr = _56836_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_2512025de:;
				if (it != expr.end()) {
					jule::Ptr<_249bcbe38_Fn> _56929_f = *it;
					{
						if (((!(_56929_f.get()._field_CppLinked)) && (_56929_f.get()._field_Token != nullptr))) {
							_24acb2616_funcDecl(_self_, _56929_f,false);
						};
					}
					_iter_next_2512025de:;
					++it;
					goto _iter_begin_2512025de;
				}
				_iter_end_2512025de:;
			};
		}));
	}));
}



inline void _24acb287a_traitDataTypes(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	_24ac52386_iterPackages(_self_, jule::Fn<void(jule::Ptr<_249c140d5_Package>&)>([=](jule::Ptr<_249c140d5_Package>& _57935_pkg) mutable -> void {
		_24acb4519_iterFiles(_57935_pkg,jule::Fn<void(jule::Ptr<_249c7a228_SymbolTable>&)>([=](jule::Ptr<_249c7a228_SymbolTable>& _58036_file) mutable -> void {
			{
				auto &expr = _58036_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_251205559:;
				if (it != expr.end()) {
					jule::Ptr<_249bd48d0_Trait> _58129_t = *it;
					{
						if ((_58129_t.get()._field_Token == nullptr)) {
							return;;
						};
						_24ac55de5_write(_self_, jule::Str("struct ", 7));
						_24ac55de5_write(_self_, static__24ac20673_traitDecl(_58129_t));
						_24ac55de5_write(_self_, jule::Str("MptrData", 8));
						_24ac55de5_write(_self_, jule::Str(" {\n", 3));
						_24ac88d90_addIndent(_self_);
						{
							auto &expr = _58129_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_25120769e:;
							if (it != expr.end()) {
								jule::Ptr<_249bcbe38_Fn> _59033_m = *it;
								{
									jule::Ptr<_249bcc312_FnIns> _59133_ins = _59033_m.get()._field_Instances[0LL];;
									jule::Ptr<_249bcc125_ParamIns> _59233_p = _59133_ins.get()._field_Params[0LL];;
									_59233_p.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_58129_t, 2)});
									{
										auto expr = _59133_ins.get()._field_Params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_2512099c0:;
										if (it != expr.end()) {
											jule::I64 _59630_i = it - expr.begin();
											jule::Ptr<_249bcc125_ParamIns> _59637_ip = *it;
											{
												if (_23abd68be_IsAnonIdent(_59637_ip.get()._field_Decl.get()._field_Ident)) {
													_59637_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _249bc2813_Itoa(_59630_i));
												};
											}
											_iter_next_2512099c0:;
											++it;
											_59630_i++;
											goto _iter_begin_2512099c0;
										}
										_iter_end_2512099c0:;
									};
									if ((!(_2388e8913_Production))) {
										_59133_ins.get()._field_Params = jule::alloc_for_append(_59133_ins.get()._field_Params,1);_59133_ins.get()._field_Params.__push(jule::new_ptr<_249bcc125_ParamIns>(_249bcc125_ParamIns{._field_Decl=jule::new_ptr<_249bcbc4b_Param>(_249bcbc4b_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(jule::new_ptr<_24acb5581_customType>(_24acb5581_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_24acb2616_funcDecl(_self_, _59033_m,true);
								}
								_iter_next_25120769e:;
								++it;
								goto _iter_begin_25120769e;
							}
							_iter_end_25120769e:;
						};
						_24ac89775_doneIndent(_self_);
						_24ac267bc_indent(_self_);
						_24ac55de5_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_251205559:;
					++it;
					goto _iter_begin_251205559;
				}
				_iter_end_251205559:;
			};
		}));
	}));
}



inline void _24acb29ac_paramIns(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_249bcc125_ParamIns>& _62333_p) {
	_24ac55de5_write(_self_, static__24acb960c_paramIns(_62333_p));
	_24ac55de5_write(_self_, jule::Str(" ", 1));
	_24ac55de5_write(_self_, static__24ac2091a_param(_62333_p.get()._field_Decl));
}



inline void _24acb2ade_paramsIns(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Slice<jule::Ptr<_249bcc125_ParamIns>>& _62934_params) {
	if ((_62934_params.len() == 0LL)) {
		_24ac55de5_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_24ac55de5_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _62934_params;
		auto it = expr.begin();
		_iter_begin_25120ea4c:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_249bcc125_ParamIns> _63521_p = *it;
			{
				_24acb29ac_paramIns(_self_, _63521_p);
				if (((_62934_params.len() - _63514_i) > 1LL)) {
					_24ac55de5_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_25120ea4c:;
			++it;
			_63514_i++;
			goto _iter_begin_25120ea4c;
		}
		_iter_end_25120ea4c:;
	};
	_24ac55de5_write(_self_, jule::Str(")", 1));
}



inline void _24acb2c21_varInitExpr(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_249c3702b_Var>& _64436_v, jule::Fn<void(void)> _64445_init) {
	if (_64436_v.get()._field_Statically) {
		_24ac55de5_write(_self_, jule::Str("static ", 7));
	};
	_24ac55de5_write(_self_, static__24acba432_kind(_64436_v.get()._field_Kind.get()._field_Kind));
	_24ac55de5_write(_self_, jule::Str(" ", 1));
	if (_64436_v.get()._field_Reference) {
		_24ac55de5_write(_self_, jule::Str("&", 1));
	};
	_24ac55de5_write(_self_, static__24ac21498_var(_64436_v));
	if ((_64445_init != nullptr)) {
		_24ac55de5_write(_self_, jule::Str(" = ", 3));
		_64445_init();
	};
	_24ac55de5_write(_self_, jule::Str(";", 1));
}



inline void _24acb2d53_var(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_249c3702b_Var> _66227_v) {
	if (_23abd6627_IsIgnoreIdent(_66227_v.get()._field_Ident)) {
		return;;
	};
	if (((_66227_v.get()._field_Value != nullptr) && (_66227_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_66227_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			_24acb2c21_varInitExpr(_self_, _66227_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_24ac1813d_val(_self_.get()._field_ec, _66227_v.get()._field_Value);
			}));
			return;;
		};
		_24acb2c21_varInitExpr(_self_, _66227_v,nullptr);
		return;;
	};
	_24acb2c21_varInitExpr(_self_, _66227_v,jule::Fn<void(void)>([=](void) mutable -> void {
		_24ac183b3_initExpr(_self_.get()._field_ec, _66227_v.get()._field_Kind.get()._field_Kind);
	}));
}



inline void _24acb2e85_func(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_249bcbe38_Fn>& _67729_f) {
	{
		auto &expr = _67729_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_2512192b5:;
		if (it != expr.end()) {
			jule::Ptr<_249bcc312_FnIns> _67821_ins = *it;
			{
				_24acb24d4_funcHead(_self_, _67821_ins,false);
				_24acb2ade_paramsIns(_self_, _67821_ins.get()._field_Params);
				_24ac55de5_write(_self_, jule::Str(" ", 1));
				_24ac09618_funcScope(_self_.get()._field_sc, _67821_ins);
				if ((_67821_ins.get()._field_Scope != nullptr)) {
					_24ac55de5_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_2512192b5:;
			++it;
			goto _iter_begin_2512192b5;
		}
		_iter_end_2512192b5:;
	};
}



inline void _24acb30b7_traitWrappers(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_2512198d1:;
		if (it != expr.end()) {
			jule::Ptr<_24acb13d4_traitHash> _69021_hash = *it;
			{
				{
					auto &expr = _69021_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_25121c076:;
					if (it != expr.end()) {
						jule::Ptr<_249bcbe38_Fn> _69125_m = *it;
						{
							jule::Str _69221_ident = _69125_m.get()._field_Ident;;
							_69125_m.get()._field_Instances[0LL].get()._field_Scope=nullptr;
							_69125_m.get()._field_Ident=((_69221_ident + jule::Str("_", 1)) + _249bc2813_Itoa(_69021_hash.get()._field_i));
							_24acb2e85_func(_self_, _69125_m);
							_69125_m.get()._field_Ident=_69221_ident;
							if ((_69021_hash.get()._field_s == nullptr)) {
								if (_2388e8913_Production) {
									_24ac55de5_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_24ac55de5_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_25121c076;
							};
							jule::Bool _70821_ptr = (!(_24909be1e_IsRef(_69125_m.get()._field_Params[0LL].ptr())));;
							jule::Ptr<_249bcbe38_Fn> _71025_sm = _24903bc9e_FindMethod(_69021_hash.get()._field_s.ptr(), _69125_m.get()._field_Ident,false);;
							if (((_71025_sm == nullptr) || (_71025_sm.get()._field_Instances.len() == 0LL))) {
								goto _iter_next_25121c076;
							};
							_24ac88d90_addIndent(_self_);
							_24ac55de5_write(_self_, jule::Str("{\n", 2));
							_24ac267bc_indent(_self_);
							if ((_71025_sm.get()._field_Exceptional || (!(_2490aaa43_IsVoid(_71025_sm.ptr()))))) {
								_24ac55de5_write(_self_, jule::Str("return ", 7));
							};
							_24ac55de5_write(_self_, static__24ac20134_func(_71025_sm));
							_24ac55de5_write(_self_, jule::Str("(", 1));
							if (_70821_ptr) {
								_24ac55de5_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_24ac55de5_write(_self_, static__24acb8d26_structureIns(_69021_hash.get()._field_s));
								_24ac55de5_write(_self_, jule::Str(">(", 2));
								if ((!(_2388e8913_Production))) {
									_24ac55de5_write(_self_, jule::Str("_00___file", 10));
								};
								_24ac55de5_write(_self_, jule::Str(")", 1));
							} else {
								_24ac55de5_write(_self_, jule::Str("_self_.data.as<", 15));
								_24ac55de5_write(_self_, static__24acb8a7e_structure(_71025_sm.get()._field_Owner));
								_24ac55de5_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _69125_m.get()._field_Params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_2512210ad:;
								if (it != expr.end()) {
									jule::Ptr<_249bcbc4b_Param> _73624_mp = *it;
									{
										_24ac55de5_write(_self_, jule::Str(", ", 2));
										_24ac55de5_write(_self_, static__24ac2091a_param(_73624_mp));
									}
									_iter_next_2512210ad:;
									++it;
									goto _iter_begin_2512210ad;
								}
								_iter_end_2512210ad:;
							};
							_24ac55de5_write(_self_, jule::Str(");\n}\n", 5));
							_24ac89775_doneIndent(_self_);
						}
						_iter_next_25121c076:;
						++it;
						goto _iter_begin_25121c076;
					}
					_iter_end_25121c076:;
				};
			}
			_iter_next_2512198d1:;
			++it;
			goto _iter_begin_2512198d1;
		}
		_iter_end_2512198d1:;
	};
}



inline void _24acb31e9_traitDatas(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	jule::Ptr<_249bd48d0_Trait> _74717_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_251228c75:;
		if (it != expr.end()) {
			jule::Ptr<_24acb13d4_traitHash> _74821_hash = *it;
			{
				jule::Str _74917_ident = static__24ac20673_traitDecl(_74821_hash.get()._field_t);;
				if ((_74821_hash.get()._field_t != _74717_old)) {
					if ((_74717_old != nullptr)) {
						_24ac89775_doneIndent(_self_);
						_24ac267bc_indent(_self_);
						_24ac55de5_write(_self_, jule::Str("};\n", 3));
					};
					_24ac55de5_write(_self_, jule::Str("static ", 7));
					_24ac55de5_write(_self_, _74917_ident);
					_24ac55de5_write(_self_, jule::Str("MptrData ", 9));
					_24ac55de5_write(_self_, _74917_ident);
					_24ac55de5_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_74717_old=_74821_hash.get()._field_t;
					_24ac88d90_addIndent(_self_);
				};
				_24ac267bc_indent(_self_);
				_24ac55de5_write(_self_, jule::Str("{\n", 2));
				_24ac88d90_addIndent(_self_);
				{
					auto &expr = _74821_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_25122cebb:;
					if (it != expr.end()) {
						jule::Ptr<_249bcbe38_Fn> _76725_m = *it;
						{
							jule::Str _76821_mIdent = static__24ac20134_func(_76725_m);;
							_24ac267bc_indent(_self_);
							_24ac55de5_write(_self_, jule::Str(".", 1));
							_24ac55de5_write(_self_, _76821_mIdent);
							_24ac55de5_write(_self_, jule::Str("=", 1));
							_24ac55de5_write(_self_, _76821_mIdent);
							_24ac55de5_write(_self_, jule::Str("_", 1));
							_24ac55de5_write(_self_, _249bc2813_Itoa(_74821_hash.get()._field_i));
							_24ac55de5_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_25122cebb:;
						++it;
						goto _iter_begin_25122cebb;
					}
					_iter_end_25122cebb:;
				};
				_24ac89775_doneIndent(_self_);
				_24ac267bc_indent(_self_);
				_24ac55de5_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_251228c75:;
			++it;
			goto _iter_begin_251228c75;
		}
		_iter_end_251228c75:;
	};
	if ((_74717_old != nullptr)) {
		_24ac89775_doneIndent(_self_);
		_24ac267bc_indent(_self_);
		_24ac55de5_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _24acb332b_globals(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Globals;
		auto it = expr.begin();
		_iter_begin_251232bd5:;
		if (it != expr.end()) {
			jule::Ptr<_249c3702b_Var> _79021_v = *it;
			{
				_24ac55de5_write(_self_, static__24acba432_kind(_79021_v.get()._field_Kind.get()._field_Kind));
				_24ac55de5_write(_self_, jule::Str(" ", 1));
				if (_79021_v.get()._field_Reference) {
					_24ac55de5_write(_self_, jule::Str("&", 1));
				};
				_24ac55de5_write(_self_, static__24ac21498_var(_79021_v));
				_24ac55de5_write(_self_, jule::Str(" = ", 3));
				_24ac1813d_val(_self_.get()._field_ec, _79021_v.get()._field_Value);
				_24ac55de5_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_251232bd5:;
			++it;
			goto _iter_begin_251232bd5;
		}
		_iter_end_251232bd5:;
	};
}



inline void _24acb345d_decls(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	_24ac537d8_traitDecls(_self_);
	_24ac54663_structurePlainDecls(_self_);
	_24acb2270_structureDecls(_self_);
	_24acb2748_funcDecls(_self_);
	_24ac55de5_write(_self_, jule::Str("\n\n", 2));
	_24acb287a_traitDataTypes(_self_);
	_24ac55de5_write(_self_, jule::Str("\n\n", 2));
	_24acb30b7_traitWrappers(_self_);
	_24ac55de5_write(_self_, jule::Str("\n\n", 2));
	_24acb31e9_traitDatas(_self_);
	_24ac55de5_write(_self_, jule::Str("\n\n", 2));
	_24acb332b_globals(_self_);
}



inline void _24acb3590_structureMethods(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_249062e4b_StructIns>& _81841_s) {
	{
		auto &expr = _81841_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_251238e50:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> _81921_f = *it;
			{
				_24acb2e85_func(_self_, _81921_f);
				_24ac55de5_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_251238e50:;
			++it;
			goto _iter_begin_251238e50;
		}
		_iter_end_251238e50:;
	};
}



inline void _24acb36c2_structureDeriveDefs(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_249062e4b_StructIns>& _82544_s) {
	if (_2490237be_IsDerives(_82544_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_24ac55de5_write(_self_, static__24ac1ae65_cloneFuncDef(_82544_s.get()._field_Decl));
		_24ac55de5_write(_self_, jule::Str("{\n", 2));
		_24ac88d90_addIndent(_self_);
		_24ac267bc_indent(_self_);
		_24ac55de5_write(_self_, static__24acb8d26_structureIns(_82544_s));
		_24ac55de5_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _82544_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_25123bcbb:;
			if (it != expr.end()) {
				jule::Ptr<_24903e268_FieldIns> _83320_f = *it;
				{
					jule::Str _83421_ident = static__24ac21201_field(_83320_f.get()._field_Decl);;
					_24ac267bc_indent(_self_);
					_24ac55de5_write(_self_, jule::Str("clone.", 6));
					_24ac55de5_write(_self_, _83421_ident);
					_24ac55de5_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_24ac55de5_write(_self_, _83421_ident);
					_24ac55de5_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_25123bcbb:;
				++it;
				goto _iter_begin_25123bcbb;
			}
			_iter_end_25123bcbb:;
		};
		_24ac267bc_indent(_self_);
		_24ac55de5_write(_self_, jule::Str("return clone;\n", 14));
		_24ac89775_doneIndent(_self_);
		_24ac55de5_write(_self_, jule::Str("}", 1));
	};
}



inline void _24acb3804_structureOstream(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_249062e4b_StructIns>& _84941_s) {
	_24ac267bc_indent(_self_);
	_24ac55de5_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_24ac55de5_write(_self_, static__24ac20e59_structureIns(_84941_s));
	_24ac55de5_write(_self_, jule::Str(" _Src) {\n", 9));
	_24ac88d90_addIndent(_self_);
	_24ac267bc_indent(_self_);
	jule::Ptr<_249bcbe38_Fn> _85717_fts = _24903bc9e_FindMethod(_84941_s.ptr(), jule::Str("Str", 3),false);;
	if (static__249c386e2_Str(_85717_fts)) {
		_24ac55de5_write(_self_, jule::Str("_Stream << ", 11));
		_24ac55de5_write(_self_, static__24ac20134_func(_85717_fts));
		_24ac55de5_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_24ac55de5_write(_self_, jule::Str("_Stream << \"", 12));
		_24ac55de5_write(_self_, _84941_s.get()._field_Decl.get()._field_Ident);
		_24ac55de5_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _84941_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_251244ba3:;
			if (it != expr.end()) {
				jule::I64 _86718_i = it - expr.begin();
				jule::Ptr<_24903e268_FieldIns> _86725_f = *it;
				{
					_24ac267bc_indent(_self_);
					_24ac55de5_write(_self_, jule::Str("_Stream << \"", 12));
					_24ac55de5_write(_self_, _86725_f.get()._field_Decl.get()._field_Ident);
					_24ac55de5_write(_self_, jule::Str(":", 1));
					jule::Ptr<_249062e4b_StructIns> _87421_strct = _249cb3d00_Struct(_86725_f.get()._field_Kind.ptr());;
					if ((((_87421_strct != nullptr) && (_87421_strct.get()._field_Decl != nullptr)) && _87421_strct.get()._field_Decl.get()._field_CppLinked)) {
						_24ac55de5_write(_self_, jule::Str(" cpp.", 5));
						_24ac55de5_write(_self_, static__24ac21201_field(_86725_f.get()._field_Decl));
						_24ac55de5_write(_self_, jule::Str("\"", 1));
					} else {
						_24ac55de5_write(_self_, jule::Str("\" << _Src.", 10));
						_24ac55de5_write(_self_, static__24ac21201_field(_86725_f.get()._field_Decl));
					};
					if (((_86718_i + 1LL) < _84941_s.get()._field_Fields.len())) {
						_24ac55de5_write(_self_, jule::Str(" << \", \"", 8));
					};
					_24ac55de5_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_251244ba3:;
				++it;
				_86718_i++;
				goto _iter_begin_251244ba3;
			}
			_iter_end_251244ba3:;
		};
		_24ac267bc_indent(_self_);
		_24ac55de5_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_24ac267bc_indent(_self_);
	_24ac55de5_write(_self_, jule::Str("return _Stream;\n", 16));
	_24ac89775_doneIndent(_self_);
	_24ac55de5_write(_self_, jule::Str("}", 1));
}



inline void _24acb3936_structureIns(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_249062e4b_StructIns>& _90037_s) {
	_24acb3590_structureMethods(_self_, _90037_s);
	_24ac55de5_write(_self_, jule::Str("\n\n", 2));
	_24acb36c2_structureDeriveDefs(_self_, _90037_s);
	_24ac55de5_write(_self_, jule::Str("\n\n", 2));
	_24acb3804_structureOstream(_self_, _90037_s);
}



inline void _24acb3a68_structure(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_249036b01_Struct>& _90834_s) {
	{
		auto &expr = _90834_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_25124dbac:;
		if (it != expr.end()) {
			jule::Ptr<_249062e4b_StructIns> _90921_ins = *it;
			{
				_24acb3936_structureIns(_self_, _90921_ins);
				_24ac55de5_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_25124dbac:;
			++it;
			goto _iter_begin_25124dbac;
		}
		_iter_end_25124dbac:;
	};
}



inline void _24acb3b9a_structures(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_25124ed67:;
		if (it != expr.end()) {
			jule::Ptr<_249036b01_Struct> _91621_s = *it;
			{
				if ((_91621_s.get()._field_Token != nullptr)) {
					_24acb3a68_structure(_self_, _91621_s);
					_24ac55de5_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_25124ed67:;
			++it;
			goto _iter_begin_25124ed67;
		}
		_iter_end_25124ed67:;
	};
}



inline void _24acb3ccc_funcs(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	_24ac52386_iterPackages(_self_, jule::Fn<void(jule::Ptr<_249c140d5_Package>&)>([=](jule::Ptr<_249c140d5_Package>& _92535_pkg) mutable -> void {
		_24acb4519_iterFiles(_92535_pkg,jule::Fn<void(jule::Ptr<_249c7a228_SymbolTable>&)>([=](jule::Ptr<_249c7a228_SymbolTable>& _92636_file) mutable -> void {
			{
				auto &expr = _92636_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_251253486:;
				if (it != expr.end()) {
					jule::Ptr<_249bcbe38_Fn> _92729_f = *it;
					{
						if (((!(_2388e7dda_Test)) && _24acbd127_hasDirective(_92729_f.get()._field_Directives,jule::Str("test", 4)))) {
							goto _iter_next_251253486;
						};
						if (((!(_92729_f.get()._field_CppLinked)) && (_92729_f.get()._field_Token != nullptr))) {
							_24acb2e85_func(_self_, _92729_f);
							_24ac55de5_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_251253486:;
					++it;
					goto _iter_begin_251253486;
				}
				_iter_end_251253486:;
			};
		}));
	}));
}



inline void _24acb3e0e_pushInit(jule::Ptr<_24acb15c1_ObjectCoder> _self_, jule::Ptr<_249c140d5_Package>& _94033_pkg) {
	_24acb4519_iterFiles(_94033_pkg,jule::Fn<void(jule::Ptr<_249c7a228_SymbolTable>&)>([=](jule::Ptr<_249c7a228_SymbolTable>& _94132_file) mutable -> void {
		{
			auto &expr = _94132_file.get()._field_Funcs;
			auto it = expr.begin();
			_iter_begin_251256027:;
			if (it != expr.end()) {
				jule::Ptr<_249bcbe38_Fn> _94220_f = *it;
				{
					if ((_94220_f.get()._field_Ident == jule::Str("init", 4))) {
						_24ac267bc_indent(_self_);
						_24ac55de5_write(_self_, static__24ac20134_func(_94220_f));
						_24ac55de5_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_251256027:;
				++it;
				goto _iter_begin_251256027;
			}
			_iter_end_251256027:;
		};
	}));
}



inline void _24acb4041_initCaller(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	_24ac55de5_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_24ac88d90_addIndent(_self_);
	_24ac52386_iterPackages(_self_, jule::Fn<void(jule::Ptr<_249c140d5_Package>&)>([=](jule::Ptr<_249c140d5_Package>& _95535_pkg) mutable -> void {
		_24acb3e0e_pushInit(_self_, _95535_pkg);
	}));
	_24ac89775_doneIndent(_self_);
	_24ac55de5_write(_self_, jule::Str("\n}", 2));
}



inline void _24acb4173_end(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	_24ac55de5_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_2388e7dda_Test) {
		_24ac55de5_write(_self_, jule::Str("test_point();", 13));
	} else {
		_24ac55de5_write(_self_, jule::Str("entry_point();", 14));
	};
	_24ac55de5_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _24acb42a5_serializeHead(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	_24ac4a549_prepareStructures(_self_);
	_24ac52919_buildTraitMap(_self_);
	_24ac8694d_head(_self_);
	_24ac274d2_links(_self_);
	_24ac55de5_write(_self_, jule::Str("\n", 1));
	_24acb345d_decls(_self_);
	_24ac55de5_write(_self_, jule::Str("\n", 1));
	_24acb3b9a_structures(_self_);
	_24acb3ccc_funcs(_self_);
	_24acb4041_initCaller(_self_);
	_24ac55de5_write(_self_, jule::Str("\n\n", 2));
}



inline void _24acb43d7_Serialize(jule::Ptr<_24acb15c1_ObjectCoder> _self_) {
	_24acb42a5_serializeHead(_self_);
	_24acb4173_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _24acb15c1_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _2512ade92_parseInteger(_24ad03635_argParser* _self_, jule::Str& _19031_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19039_parser) {
	jule::I64 _19083_x = jule::I64();
	jule::Bool _19089_ok = jule::Bool();
	{
		
		if (_19031_s.empty()) {
			_case_begin_2512b1c20:;
			{
				_19083_x = 0LL;
				_19089_ok = false;
				return std::make_tuple(_19083_x,_19089_ok);
			}
		}
		else if (_23a82a128_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_2512b1cb9:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),16LL);
			}
		}
		else if (_23a82a128_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_2512b1acc:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),2LL);
			}
		}
		else if (_23a82a128_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_2512b2193:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),8LL);
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_2512b2270:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_2512b1736:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s,10LL);
			}
		}
		_match_end_2512b1659:;
	};
	return std::make_tuple(_19083_x,_19089_ok);
}

inline std::tuple<jule::U64,jule::Bool> _2512b75b6_parseInteger(_24ad03635_argParser* _self_, jule::Str& _19031_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19039_parser) {
	jule::U64 _19083_x = jule::U64();
	jule::Bool _19089_ok = jule::Bool();
	{
		
		if (_19031_s.empty()) {
			_case_begin_2512ba300:;
			{
				_19083_x = 0LLU;
				_19089_ok = false;
				return std::make_tuple(_19083_x,_19089_ok);
			}
		}
		else if (_23a82a128_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_2512ba399:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),16LL);
			}
		}
		else if (_23a82a128_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_2512ba1ac:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),2LL);
			}
		}
		else if (_23a82a128_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_2512ba773:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),8LL);
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_2512ba850:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_2512b9d16:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s,10LL);
			}
		}
		_match_end_2512b9c39:;
	};
	return std::make_tuple(_19083_x,_19089_ok);
}



inline jule::Str _24ad03e2c_getData(_24ad03635_argParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _24ad0416e_processFlag(_24ad03635_argParser* _self_, jule::Trait<_24aac840a_CommonFlag>& _21735_flag) {
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_251295907_Flag>>()) {
			_case_begin_2512aad07:;
			{
				jule::Ptr<_251295907_Flag> _22021_bf = _21735_flag.operator jule::Ptr<_251295907_Flag>();;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_2512aac80:;
	};
	jule::Str _22513_data = _24ad03e2c_getData(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _24aac840a_CommonFlag_mptr_data[(_21735_flag).type_offset]._24ab083a2_Name(_21735_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_2512892e1_Flag>>()) {
			_case_begin_2512ac578:;
			{
				jule::Ptr<_2512892e1_Flag> _23221_intf = _21735_flag.operator jule::Ptr<_2512892e1_Flag>();;
				jule::Bool _23332_ok;;
				std::tie((*(_23221_intf.get()._field_data)),_23332_ok) = _2512ade92_parseInteger(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _2498cb5e9_ParseInt(_23370_s,_23378_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _24aac840a_CommonFlag_mptr_data[(_21735_flag).type_offset]._24ab083a2_Name(_21735_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_25128d13b_Flag>>()) {
			_case_begin_2512ad03a:;
			{
				jule::Ptr<_25128d13b_Flag> _24021_uintf = _21735_flag.operator jule::Ptr<_25128d13b_Flag>();;
				jule::Bool _24133_ok;;
				std::tie((*(_24021_uintf.get()._field_data)),_24133_ok) = _2512b75b6_parseInteger(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _249849b0b_ParseUint(_24171_s,_24179_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _24aac840a_CommonFlag_mptr_data[(_21735_flag).type_offset]._24ab083a2_Name(_21735_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_251291c77_Flag>>()) {
			_case_begin_2512ad0a1:;
			{
				jule::Ptr<_251291c77_Flag> _24821_ff = _21735_flag.operator jule::Ptr<_251291c77_Flag>();;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _249a3a0a4_ParseFloat(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _24aac840a_CommonFlag_mptr_data[(_21735_flag).type_offset]._24ab083a2_Name(_21735_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_251299543_Flag>>()) {
			_case_begin_2512ad117:;
			{
				(*(_21735_flag.operator jule::Ptr<_251299543_Flag>().get()._field_data))=_22513_data;
			}
		}
		_match_end_2512ace19:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _24ad043e4_singleDash(_24ad03635_argParser* _self_, jule::Str& _25730_arg) {
	if ((_25730_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25730_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25730_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_2512c2e51:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_24aac840a_CommonFlag> _26321_flag = _24ad019da_FindFlagShort(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25730_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _24ad0416e_processFlag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_2512c2e51:;
			++it;
			goto _iter_begin_2512c2e51;
		}
		_iter_end_2512c2e51:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _24ad04669_doubleDash(_24ad03635_argParser* _self_, jule::Str& _27230_arg) {
	if ((_27230_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27230_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_24aac840a_CommonFlag> _27617_flag = _24ad016cc_FindFlag(&(*_self_)._field_set, _27230_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27230_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _24ad0416e_processFlag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _24ad04845_tryArg(_24ad03635_argParser* _self_) {
	jule::Str _28413_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _24ad04669_doubleDash(&(*_self_), _28413_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _24ad043e4_singleDash(&(*_self_), _28413_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28413_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _24ad04a21_parse(_24ad03635_argParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _24ad04845_tryArg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_2512cb5ca:;
	}
	_iter_end_2512cb5ca:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _24ad03635_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _239727873_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _23975200c_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();
	};
	{
		return static_cast<jule::Str>(_6924_s);
	};
}



inline jule::I64 _23897c090_GetLastErrno(void) {
	return errno;
}



inline jule::I64 _239758ee2_Stat(jule::U8* _4816_path, struct stat* _4833_stat) {
	return static_cast<jule::I64>(stat(((char*)(_4816_path)), _4833_stat));
}



inline jule::I64 _2397593cc_Open(jule::U8* _5316_path, jule::I64 _5329_flag, jule::I64 _5340_mode) {
	return static_cast<jule::I64>(open(((char*)(_5316_path)),_5329_flag,_5340_mode));
}



inline jule::U8* _23975971d_Getcwd(jule::U8* _5918_buff, jule::U64 _5931_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5918_buff)),_5931_bufflen)));
}



inline DIR* _239759be6_Opendir(jule::U8* _6419_path) {
	return opendir(((char*)(_6419_path)));
}



inline struct dirent* _239759e8d_Readdir(DIR* _6723_dir) {
	return readdir(_6723_dir);
}



inline jule::I64 _23975a235_Closedir(DIR* _7024_dir) {
	return static_cast<jule::I64>(closedir(_7024_dir));
}



inline jule::I64 _23975aab5_Mkdir(jule::U8* _7917_path, jule::I64 _7930_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_7917_path)),_7930_mode));
}



inline jule::I64 _23975ad5c_Rmdir(jule::U8* _8417_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_8417_path))));
}



inline jule::I64 _23975b104_Unlink(jule::U8* _8718_path) {
	return static_cast<jule::I64>(unlink(((char*)(_8718_path))));
}



inline jule::I64 _239789c26_Seek(jule::I64 _269_handle, jule::I64 _2622_offset, jule::I64 _2635_origin) {
	return static_cast<jule::I64>(lseek(_269_handle,_2622_offset,_2635_origin));
}



inline jule::I64 _23978a111_Read(jule::I64 _3116_handle, void* _3133_buff, jule::U64 _3148_n) {
	return static_cast<jule::I64>(read(_3116_handle,_3133_buff,_3148_n));
}



inline jule::I64 _23978a485_Close(jule::I64 _3610_handle) {
	return static_cast<jule::I64>(close(_3610_handle));
}



inline jule::I64 _23978a870_Write(jule::I64 _3917_handle, void* _3930_buff, jule::U64 _3945_n) {
	return static_cast<jule::I64>(write(_3917_handle,_3930_buff,_3945_n));
}



inline void _23978aa7e_Exit(jule::I64 _449_code) {
	exit(_449_code);
}



inline jule::I64 _2397ee098_getLastOsError(void) {
	jule::I64 _309_err = _23897c090_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_24ad89369:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_24ad88bb5:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_24ad88c3c:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_24ad88cb4:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_24ad8904a:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_24ad890b1:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_24ad89127:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else {
			_case_begin_24ad88a1c:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_24ad889b7:;
	};
}



inline jule::Slice<jule::Str> _239824e59_Args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _2398253cc_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _239826323_getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _239826323_getwd(void) {
	jule::U8* _1113_buff = _23975971d_Getcwd(nullptr,0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(_2397ee098_getLastOsError());
	};
	jule::Str _159_pwd = _23975200c_BytePtrToStr(_1113_buff);;
	{
		_239727873_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_159_pwd);
}



inline jule::Bool _23a6c06b6_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_23a73ea10__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);
	};
	return _23a7484b9_isExcludingLatin(_23a6ca638_Letter,_7613_r);
}



inline jule::Bool _23a7478d6_is16(jule::Slice<_23a745d24_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_24c27cc34:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_23a745d24_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_24c27cc34:;
				++it;
				_19313_i++;
				goto _iter_begin_24c27cc34;
			}
			_iter_end_24c27cc34:;
		};
		return false;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_23a745d24_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_24c27c45e:;
	}
	_iter_end_24c27c45e:;;
	return false;
}



inline jule::Bool _23a747c27_is32(jule::Slice<_23a746297_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_24c2812ed:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_23a746297_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_24c2812ed:;
				++it;
				_23013_i++;
				goto _iter_begin_24c2812ed;
			}
			_iter_end_24c2812ed:;
		};
		return false;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_23a746297_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_24c2825a7:;
	}
	_iter_end_24c2825a7:;;
	return false;
}



inline jule::Bool _23a7484b9_isExcludingLatin(jule::Ptr<_23a74671a_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_23a745d24_Range16> &_28014_R16 = _27821_rangeTab.get()._field_R16;;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if (((_28014_R16.len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>(_28014_R16[(_28014_R16.len() - 1LL)]._field_Hi)))) {
			return _23a7478d6_is16(_28014_R16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));
		};
	};
	jule::Slice<_23a746297_Range32> &_28710_R32 = _27821_rangeTab.get()._field_R32;;
	if (((_28710_R32.len() > 0LL) && (_27844_r >= static_cast<jule::I32>(_28710_R32[0LL]._field_Lo)))) {
		return _23a747c27_is32(_28710_R32,static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));
	};
	return false;
}



inline jule::Bool _23a748761_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_23a73ea10__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);
	};
	return _23a7484b9_isExcludingLatin(_23a6d26c8_Upper,_29512_r);
}



inline std::tuple<jule::I32,jule::I64> _23a8099cb_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	jule::I32 _18228_r = jule::I32();
	jule::I64 _18237_size = jule::I64();
	if ((_18215_p.len() < 1LL)) {
		_18228_r = 65533LL;
		_18237_size = 0LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _23a808876_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18228_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_23a808de8_acceptRange _1969_accept = _23a80925b_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18228_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18237_size = 2LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18228_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18237_size = 3LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	_18228_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18237_size = 4LL;
	return std::make_tuple(_18228_r,_18237_size);
}



inline std::tuple<jule::I32,jule::I64> _23a809cea_DecodeRuneStr(jule::Str _22918_s) {
	jule::I32 _22928_r = jule::I32();
	jule::I64 _22937_size = jule::I64();
	if ((_22918_s.len() < 1LL)) {
		_22928_r = 65533LL;
		_22937_size = 0LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _23a808876_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		_22928_r = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_23a808de8_acceptRange _2439_accept = _23a80925b_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	if ((_2429_sz <= 2LL)) {
		_22928_r = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		_22937_size = 2LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	if ((_2429_sz <= 3LL)) {
		_22928_r = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		_22937_size = 3LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	_22928_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	_22937_size = 4LL;
	return std::make_tuple(_22928_r,_22937_size);
}



inline std::tuple<jule::I32,jule::I64> _23a80a092_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	jule::I32 _27632_r = jule::I32();
	jule::I64 _27641_size = jule::I64();
	if ((_27619_p.len() == 0LL)) {
		_27632_r = 65533LL;
		_27641_size = 0LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	_27632_r=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((_27632_r < 128LL)) {
		_27641_size = 1LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_23a80b967_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_24c2d2173;
			};
		}
	_iter_next_24c2d2173:;
	}
	_iter_end_24c2d2173:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27632_r,_27641_size) = _23a8099cb_DecodeRune(_27619_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27641_size) != _2809_end)) {
		_27632_r = 65533LL;
		_27641_size = 1LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	return std::make_tuple(_27632_r,_27641_size);
}



inline jule::Slice<jule::U8> _23a80ad40_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));
	};
	return _23a80b181_appendRuneNonASCII(_40519_p,_40530_r);
}



inline jule::Slice<jule::U8> _23a80b181_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_24c2e870b:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_24c2e8a6e:;
			{
				_41242_r=128LL;
				goto _case_begin_24c2e7056;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_24c2e7056:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_24c2e6572:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		_match_end_24c2e651c:;
	};
}



inline jule::I64 _23a80b6c0_RuneCountStr(jule::Str _47317_s) {
	jule::I64 _47327_n = jule::I64();
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (_47327_n)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_24c3030c8;
			};
			jule::U8 _48213_x = _23a808876_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_24c3030c8;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_24c3030c8;
			};
			_23a808de8_acceptRange _49213_accept = _23a80925b_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_24c3030c8:;
	}
	_iter_end_24c3030c8:;;
	return _47327_n;
}



inline jule::Bool _23a80b967_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);
}



inline jule::Slice<jule::U8> _23a829457_Stobs(jule::Str& _911_s) {
	return _911_s.fake_slice();
}



inline void _23a829aa6_PushToStrBuffer(jule::Str& _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		(_2825_s).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline jule::I64 _23a828885_FindLastByte(jule::Slice<jule::U8> _2617_s, jule::U8 _2628_b) {
	jule::U8* _279_first = (&(_2617_s[0LL]));;
	jule::U8* _2813_it = (&(_2617_s[(_2617_s.len() - 1LL)]));;
	for (; (_2813_it >= _279_first); (_2813_it)--) {
		{
			{
				if (((*(_2813_it)) == _2628_b)) {
					return static_cast<jule::I64>(((jule::I64)((_2813_it - _279_first))));
				};
			};
		}
	_iter_next_24c32b134:;
	}
	_iter_end_24c32b134:;;
	return -1LL;
}



inline jule::I64 _23a829eb3_FindLastByteStr(jule::Str& _4521_s, jule::U8 _4529_b) {
	return static_cast<jule::I64>(_23a828885_FindLastByte(_23a829457_Stobs(_4521_s),_4529_b));
}



inline jule::Str _23a811c47_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_24c34118d:;
	}
	_iter_end_24c34118d:;;
	return _2013_ss;
}



inline jule::Bool _23a80d150_hasPrefix(jule::Str& _2715_s, jule::Str& _2724_sub, jule::I64 _2738_start) {
	if (((_2724_sub.len() == 0LL) || ((_2715_s.len() - _2738_start) < _2724_sub.len()))) {
		return false;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < _2724_sub.len()); std::tie(_3213_i,_2738_start) = std::make_tuple(static_cast<jule::I64>((_3213_i + 1LL)),static_cast<jule::I64>((_2738_start + 1LL)))) {
		{
			if ((_2715_s[_2738_start] != _2724_sub[_3213_i])) {
				return false;
			};
		}
	_iter_next_24c344526:;
	}
	_iter_end_24c344526:;;
	return true;
}



inline jule::Bool _23a82a128_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _23a80d150_hasPrefix(_4214_s,_4222_sub,0LL);
}



inline jule::Bool _23a82a2d2_hasSuffix(jule::Str& _4615_s, jule::Str& _4624_sub, jule::I64 _4638_start) {
	if (((_4624_sub.len() == 0LL) || ((_4615_s.len() - _4638_start) < _4624_sub.len()))) {
		return false;
	};
	_4638_start=static_cast<jule::I64>((_4615_s.len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < _4624_sub.len()); (_5213_i)++) {
		{
			if ((_4615_s[((_4638_start - _5213_i) - 1LL)] != _4624_sub[((_4624_sub.len() - _5213_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_24c3466d2:;
	}
	_iter_end_24c3466d2:;;
	return true;
}



inline jule::Bool _23a82a5e0_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _23a82a2d2_hasSuffix(_6214_s,_6222_sub,0LL);
}



inline jule::I64 _23a82a9ca_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_23a80d150_hasPrefix(_7011_s,_7019_sub,_7033_i)) {
				return _7033_i;
			};
		}
	_iter_next_24c34ac25:;
	}
	_iter_end_24c34ac25:;;
	return -1LL;
}



inline jule::I64 _23a82b316_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); std::tie(_10017_k,_10117_z) = std::make_tuple(static_cast<jule::I64>((_10017_k + 1LL)),static_cast<jule::I64>((_10117_z + 1LL)))) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_24c34c84d;
					};
				}
			_iter_next_24c34ede4:;
			}
			_iter_end_24c34ede4:;;
			return _9413_j;
		}
	_iter_next_24c34c84d:;
	}
	_iter_end_24c34c84d:;;
	return -1LL;
}



inline jule::I64 _23a82b657_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_23a82b316_FindLastAt(_11513_s,_11521_sub,static_cast<jule::I64>((_11513_s.len() - 1LL))));
}



inline jule::I64 _23a82c900_findRune(jule::Slice<jule::U8>& _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < _17114_s.len())) {
		{
			jule::I32 _17414_br;;
			jule::I64 _17418_n;;
			std::tie(_17414_br,_17418_n) = _23a8099cb_DecodeRune(_17114_s.slice(_17213_i));
			if ((_17125_r == _17414_br)) {
				return _17213_i;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_24c357d64:;
	}
	_iter_end_24c357d64:;;
	return -1LL;
}



inline jule::I64 _23a82d23b_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_23a829eb3_FindLastByteStr(_19317_s,_19325_b));
}



inline jule::I64 _23a82e050_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _23a829457_Stobs(_22812_s);;
	jule::Slice<jule::U8> _23013_rb = _23a829457_Stobs(_22820_runes);;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r;;
			jule::I64 _23317_n;;
			std::tie(_23314_r,_23317_n) = _23a8099cb_DecodeRune(_2299_sb.slice(_23113_i));
			if ((_23a82c900_findRune(_23013_rb,_23314_r) != -1LL)) {
				return _23113_i;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_24c35e101:;
	}
	_iter_end_24c35e101:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _23a82e77b_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL,_26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _23a82a9ca_FindAt(_26210_s,_26218_sub,_27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_24c366119;
			};
			_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i,_27613_j));;
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_24c366119:;
	}
	_iter_end_24c366119:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i));;
	};
	return _26713_parts;
}



inline jule::Bool _23a82eabc_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_23a82a9ca_FindAt(_29013_s,_29021_sub,0LL) != -1LL);
}



inline jule::Bool _23a830590_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_23a82e050_FindAny(_30616_s,_30624_runes) != -1LL);
}



inline jule::I64 _23a8308d1_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _23a82a9ca_FindAt(_31210_s,_31218_sub,_31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_24c36bd56;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_24c36bd56:;
	}
	_iter_end_24c36bd56:;;
	return _31613_n;
}



inline jule::Str _23a830d65_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;
	};
	jule::I64 _3379_m = _23a8308d1_Count(_33212_s,_33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _23a82a9ca_FindAt(_33212_s,_33220_sub,_34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_24c36e2ba;
			};
			_34513_ss+=_33212_s.slice(_34613_i,_34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_24c36e2ba:;
	}
	_iter_end_24c36e2ba:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;
}



inline void _23a82cdc8_trimLeft(jule::Slice<jule::U8>& _38818_s, jule::Slice<jule::U8>& _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < _38818_s.len())) {
		{
			jule::I32 _39114_r;;
			jule::I64 _39117_n;;
			std::tie(_39114_r,_39117_n) = _23a8099cb_DecodeRune(_38818_s.slice(_38913_i));
			if ((_23a82c900_findRune(_38830_cutset,_39114_r) == -1LL)) {
				_38818_s=_38818_s.slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_24c3761c3:;
	}
	_iter_end_24c3761c3:;;
	_38818_s=nullptr;
}



inline jule::Str _23a831e21_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _23a829457_Stobs(_40313_s);;
	jule::Slice<jule::U8> _4059_bcutset = _23a829457_Stobs(_40321_cutset);;
	_23a82cdc8_trimLeft(_40413_bytes,_4059_bcutset);
	return static_cast<jule::Str>(_40413_bytes);
}



inline void _23a8321c9_trimRight(jule::Slice<jule::U8>& _41019_s, jule::Slice<jule::U8>& _41031_cutset) {
	jule::I64 _41113_i = _41019_s.len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r;;
			jule::I64 _41317_n;;
			std::tie(_41314_r,_41317_n) = _23a80a092_DecodeLastRune(_41019_s.slice(0LL,_41113_i));
			if ((_23a82c900_findRune(_41031_cutset,_41314_r) == -1LL)) {
				_41019_s=_41019_s.slice(0LL,_41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_24c37947e:;
	}
	_iter_end_24c37947e:;;
	_41019_s=nullptr;
}



inline jule::Str _23a83285b_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _23a829457_Stobs(_4349_s);;
	jule::Slice<jule::U8> _4369_bcutset = _23a829457_Stobs(_43417_cutset);;
	_23a82cdc8_trimLeft(_43513_bytes,_4369_bcutset);
	_23a8321c9_trimRight(_43513_bytes,_4369_bcutset);
	return static_cast<jule::Str>(_43513_bytes);
}



inline jule::Str _23a832b9c_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_24c383c2a:;
			{
				return jule::Str();
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_24c383c91:;
			{
				return _4449_parts[0LL];
			}
		}
		_match_end_24c383a0a:;
	};
	jule::Str _45113_s = _4449_parts[0LL];;
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		_iter_begin_24c382b80:;
		if (it != expr.end()) {
			jule::Str &_45212_part = *it;
			{
				_45113_s+=_44423_sep;
				_45113_s+=_45212_part;
			}
			_iter_next_24c382b80:;
			++it;
			goto _iter_begin_24c382b80;
		}
		_iter_end_24c382b80:;
	};
	return _45113_s;
}



inline jule::Str _2398827ad_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _23987a685_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _2398a5616_IsPathSep(_1099_originalPath[0LL])) && _2398a5616_IsPathSep(_1099_originalPath[1LL]))) {
			return _239886031_FromSlash(_1099_originalPath);
		};
		return (_1099_originalPath + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _2398a5616_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_2398636b2_lazyBuff _12713_out = _2398636b2_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0LL;;
	jule::I64 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_23986a642_append(&_12713_out, 47LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_2398a5616_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_24c39703a:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _2398a5616_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_24c394972:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _2398a5616_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_24c397a1e:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_24c39ab54:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_2398a5616_IsPathSep(static_cast<jule::U8>(_239869e38_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_24c39b6d2:;
									}
									_iter_end_24c39b6d2:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_24c39abba:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_23986a642_append(&_12713_out, 47LLU);
									};
									_23986a642_append(&_12713_out, '.');
									_23986a642_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_24c39aa88:;
						};
					}
				}
				else {
					_case_begin_24c392101:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_23986a642_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_2398a5616_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_23986a642_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_24c396248:;
						}
						_iter_end_24c396248:;;
					}
				}
				_match_end_24c392024:;
			};
		}
	_iter_next_24c39295e:;
	}
	_iter_end_24c39295e:;;
	if ((_12713_out._field_w == 0LL)) {
		_23986a642_append(&_12713_out, '.');
	};
	return _239886031_FromSlash(_23986d8ba_string(&_12713_out));
}



inline jule::Str _239886031_FromSlash(jule::Str _21114_path) {
	{
		return _21114_path;
	};
}



inline jule::Str _23988a9b4_Join(jule::Slice<jule::Str> _2259_elem) {
	return _23988212b_join(_2259_elem);
}



inline jule::Str _23989348e_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_2398a5616_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);
			};
		}
	_iter_next_24c3a0cbe:;
	}
	_iter_end_24c3a0cbe:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _239894ea7_Abs(jule::Str _2458_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _23987e37b_abs(_2458_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _239872baa_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25413_path.len() > 0LL) && _2398a5616_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL,(_25413_path.len() - 1LL));;
		}
	_iter_next_24c3a3387:;
	}
	_iter_end_24c3a3387:;;
	(_25413_path).mut_slice(_23987b631_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_2398a5616_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_24c3a4b91:;
	}
	_iter_end_24c3a4b91:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return static_cast<jule::Str>(47LL);
	};
	return _25413_path;
}



inline jule::Str _239877bc1_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _23987b631_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_2398a5616_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_24c3a7116:;
	}
	_iter_end_24c3a7116:;;
	jule::Str _2919_dir = _2398827ad_Clean(_2858_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _23987b631_VolumeName(jule::Str _30315_path) {
	return _239886031_FromSlash(_30315_path.slice(0LL,_23987a685_volumeNameLen(_30315_path)));
}



inline jule::Bool _2398a5616_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);
}



inline jule::Bool _2398a9230_IsAbs(jule::Str _5310_path) {
	return _23a82a128_HasPrefix(_5310_path,jule::Str("/", 1));
}



inline jule::I64 _23987a685_volumeNameLen(jule::Str _5918_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _23987e37b_abs(jule::Str _638_path) {
	jule::Bool _6326_ok = jule::Bool();
	if (_2398a9230_IsAbs(_638_path)) {
		_6326_ok = true;
		return std::make_tuple(_2398827ad_Clean(_638_path),_6326_ok);
	};
	jule::Str _679_wd = ({
		auto except = _2398253cc_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			_6326_ok = false;
			return std::make_tuple(jule::Str(),_6326_ok);
		} jule::Str();});
	});;
	_6326_ok = true;
	return std::make_tuple(_23988212b_join(jule::Slice<jule::Str>::make({_679_wd,_638_path})),_6326_ok);
}



inline jule::Str _23988212b_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto &expr = _739_elem;
		auto it = expr.begin();
		_iter_begin_24c3b2b27:;
		if (it != expr.end()) {
			jule::I64 _749_i = it - expr.begin();
			jule::Str &_7412_e = *it;
			{
				if ((!(_7412_e.empty()))) {
					return _2398827ad_Clean(_23a832b9c_Join(_739_elem.slice(_749_i),static_cast<jule::Str>(47LL)));
				};
			}
			_iter_next_24c3b2b27:;
			++it;
			_749_i++;
			goto _iter_begin_24c3b2b27;
		}
		_iter_end_24c3b2b27:;
	};
	return jule::Str();
}



inline jule::I64 _23899973e_getLastFsError(void) {
	jule::I64 _729_err = _23897c090_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_24c3c1680:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_24c3c0a36:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_24c3c1570:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_24c3c0ecb:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_24c3c1042:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_24c3c10a8:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_24c3c111e:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_24c3c17c3:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_24c3c1839:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_24c3c18b1:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_24c3c1938:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_24c3c19b0:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_24c3c1a37:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_24c3c1aae:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_24c3c1b36:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_24c3c1bad:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_24c3c1c35:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_24c3c1cac:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_24c3c1d34:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_24c3c1dab:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_24c3c1e33:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_24c3c1eaa:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_24c3c2032:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_24c3c20a9:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_24c3c2131:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_24c3c21a8:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_24c3c2230:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_24c3c22a7:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_24c3c0d33:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_24c3c0ccd:;
	};
}



inline jule::I64 _23a900cae_getLastProcessError(void) {
	jule::I64 _429_err = _23897c090_GetLastErrno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_24c3eaab6:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_24c3e9e6c:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_24c3ea412:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_24c3ea478:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_24c3ea500:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_24c3ea577:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_24c3ea7a8:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_24c3ea830:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_24c3ea8a7:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 67LL) {
			_case_begin_24c3ea92e:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_24c3ea9a6:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_24c3ea269:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_24c3ea214:;
	};
}



inline jule::Slice<char*> _23a904015_strSliceToCstrSlice(jule::Slice<jule::Str> _2024_s) {
	jule::Slice<char*> _2113_cs = jule::Slice<char*>::alloc(0LL,(_2024_s.len() + 1LL));;
	{
		auto &expr = _2024_s;
		auto it = expr.begin();
		_iter_begin_24c407b17:;
		if (it != expr.end()) {
			jule::I64 _229_i = it - expr.begin();
			{
				_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(((char*)((&(_2024_s[_229_i][0LL])))));;
			}
			_iter_next_24c407b17:;
			++it;
			_229_i++;
			goto _iter_begin_24c407b17;
		}
		_iter_end_24c407b17:;
	};
	_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(nullptr);;
	return _2113_cs;
}



inline jule::I64 _23a904466_execvp(jule::Str _2911_file, jule::Slice<jule::Str> _2922_argv) {
	jule::Slice<char*> _309_cargv = _23a904015_strSliceToCstrSlice(_2922_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&(_2911_file[0LL])))), (char*const*)(&(_309_cargv[0LL]))));
	};
}



inline jule::I64 _23a904851_execve(jule::Str _3611_file, jule::Slice<jule::Str> _3622_argv, jule::Slice<jule::Str> _3635_env) {
	jule::Slice<char*> _379_cargv = _23a904015_strSliceToCstrSlice(_3622_argv);;
	jule::Slice<char*> _389_cenv = _23a904015_strSliceToCstrSlice(_3635_env);;
	{
		return static_cast<jule::I64>(execve(((char*)((&(_3611_file[0LL])))), (char*const*)(&(_379_cargv[0LL])), (char*const*)((&(_389_cenv[0LL])))));
	};
}



inline void _23a905467_Exit(jule::I64 _129_code) {
	_23978aa7e_Exit(_129_code);
}



inline jule::Str _23a905665_Executable(void) {
	return jule::executable();
}



inline jule::Bool _23a899186_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));
}



inline jule::Bool _23a8992b8_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto &expr = _238902389_CppHeaderExts;
		auto it = expr.begin();
		_iter_begin_24c44114a:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3121_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_24c44114a:;
			++it;
			goto _iter_begin_24c44114a;
		}
		_iter_end_24c44114a:;
	};
	return false;
}



inline jule::Bool _23a89951b_IsValidCppExt(jule::Str _4218_ext) {
	if ((_4218_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _23a897a69_CppExts;
		auto it = expr.begin();
		_iter_begin_24c4432e5:;
		if (it != expr.end()) {
			jule::Str &_4612_e = *it;
			{
				if ((_4218_ext == _4612_e)) {
					return true;
				};
			}
			_iter_next_24c4432e5:;
			++it;
			goto _iter_begin_24c4432e5;
		}
		_iter_end_24c4432e5:;
	};
	{
		auto &expr = _23a899098_ObjectiveCppExts;
		auto it = expr.begin();
		_iter_begin_24c4434b0:;
		if (it != expr.end()) {
			jule::Str &_5112_e = *it;
			{
				if ((_4218_ext == _5112_e)) {
					return true;
				};
			}
			_iter_next_24c4434b0:;
			++it;
			goto _iter_begin_24c4434b0;
		}
		_iter_end_24c4434b0:;
	};
	return false;
}



inline jule::Str _23a8a61e8_Logf(jule::Str _2959_fmt, jule::Slice<jule::Any> _29522_args) {
	return _23a8a6b11_applyFmt(_2959_fmt,jule::Any(_29522_args));
}



inline jule::Str _23a8a64d4_argToStr(jule::Any _29913_arg) {
	{
		auto &_match_expr{ _29913_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_24c445847:;
			{
				return _29913_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_24c445292:;
			{
				return static_cast<jule::Str>(_29913_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_24c445308:;
			{
				return static_cast<jule::Str>(_29913_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_24c44522b:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_24c4451c6:;
	};
}



inline jule::I64 _23a8a677b_findNextFmt(jule::Str _31216_fmt) {
	{
		auto &expr = _31216_fmt;
		auto it = expr.begin();
		_iter_begin_24c445dca:;
		if (it != expr.end()) {
			jule::I64 _3139_i = it - expr.begin();
			jule::U8 &_31312_b = *it;
			{
				if ((_31312_b == '@')) {
					return _3139_i;
				};
			}
			_iter_next_24c445dca:;
			++it;
			_3139_i++;
			goto _iter_begin_24c445dca;
		}
		_iter_end_24c445dca:;
	};
	return -1LL;
}



inline jule::Str _23a8a6b11_applyFmt(jule::Str _32117_fmt, jule::Slice<jule::Any> _32127_args) {
	jule::Str _32213_s = jule::Str();;
	{
		auto &expr = _32127_args;
		auto it = expr.begin();
		_iter_begin_24c448075:;
		if (it != expr.end()) {
			jule::Any &_32312_arg = *it;
			{
				jule::I64 _32413_i = _23a8a677b_findNextFmt(_32117_fmt);;
				if ((_32413_i == -1LL)) {
					goto _iter_end_24c448075;
				};
				_32213_s+=_32117_fmt.slice(0LL,_32413_i);
				_32213_s+=_23a8a64d4_argToStr(jule::Any(_32312_arg));
				(_32117_fmt).mut_slice((_32413_i + 1LL));;
			}
			_iter_next_24c448075:;
			++it;
			goto _iter_begin_24c448075;
		}
		_iter_end_24c448075:;
	};
	_32213_s+=_32117_fmt;
	return _32213_s;
}



inline jule::Bool _23a8a7bcd_IsTopDirective(jule::Str _2819_directive) {
	return ((_2819_directive == jule::Str("pass", 4)) || (_2819_directive == jule::Str("build", 5)));
}



inline jule::Bool _23a8a910d_IsWindows(jule::Str _3714_os) {
	return (_3714_os == jule::Str("windows", 7));
}



inline jule::Bool _23a8a93b6_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == jule::Str("darwin", 6));
}



inline jule::Bool _23a8a965d_IsLinux(jule::Str _4312_os) {
	return (_4312_os == jule::Str("linux", 5));
}



inline jule::Bool _23a8a997c_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == jule::Str("i386", 4));
}



inline jule::Bool _23a8a9c24_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == jule::Str("amd64", 5));
}



inline jule::Bool _23a8a9ebb_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == jule::Str("arm64", 5));
}



inline jule::Bool _23a8aa263_IsUnix(jule::Str _5511_os) {
	return (_23a8a93b6_IsDarwin(_5511_os) || _23a8a965d_IsLinux(_5511_os));
}



inline jule::Bool _23a8aa5d7_Is32Bit(jule::Str _5812_arch) {
	return _23a8a997c_IsI386(_5812_arch);
}



inline jule::Bool _23a8aa87e_Is64Bit(jule::Str _6112_arch) {
	return (_23a8a9c24_IsAmd64(_6112_arch) || _23a8a9ebb_IsArm64(_6112_arch));
}



inline void _23a8b799b_init(void) {
	jule::Str _2513_path = _23a905665_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_23a8e4115_PathWd=({
			auto except = _2398253cc_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_23a8e1893_PathExec=_239877bc1_Dir(_2513_path);
		_23a8de9d4_PathStdlib=_23988a9b4_Join(jule::Slice<jule::Str>::make({_23a8e1893_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_23a8ee890_PathApi=_23988a9b4_Join(jule::Slice<jule::Str>::make({_23a8e1893_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _23abd458c_IsUnaryOp(jule::Str _31214_kind) {
	{
		auto &expr = _23ab31b49_UnaryOps;
		auto it = expr.begin();
		_iter_begin_24c496634:;
		if (it != expr.end()) {
			jule::Str &_31312_op = *it;
			{
				if ((_31214_kind == _31312_op)) {
					return true;
				};
			}
			_iter_next_24c496634:;
			++it;
			goto _iter_begin_24c496634;
		}
		_iter_end_24c496634:;
	};
	return false;
}



inline jule::Bool _23abd4878_IsBinOp(jule::Str _32212_kind) {
	{
		auto &expr = _23ab31e8a_BinOps;
		auto it = expr.begin();
		_iter_begin_24c49706e:;
		if (it != expr.end()) {
			jule::Str &_32312_op = *it;
			{
				if ((_32212_kind == _32312_op)) {
					return true;
				};
			}
			_iter_next_24c49706e:;
			++it;
			goto _iter_begin_24c49706e;
		}
		_iter_end_24c49706e:;
	};
	return false;
}



inline jule::Bool _23abd4e3e_IsStr(jule::Str _34210_k) {
	return ((!(_34210_k.empty())) && ((_34210_k[0LL] == '\"') || _23abd51d6_IsRawStr(_34210_k)));
}



inline jule::Bool _23abd51d6_IsRawStr(jule::Str _34513_k) {
	return ((!(_34513_k.empty())) && (_34513_k[0LL] == '`'));
}



inline jule::Bool _23abd547d_IsRune(jule::Str _34911_k) {
	return ((!(_34911_k.empty())) && (_34911_k[0LL] == '\''));
}



inline jule::Bool _23abd5a99_IsBool(jule::Str _35511_k) {
	return ((_35511_k == jule::Str("true", 4)) || (_35511_k == jule::Str("false", 5)));
}



inline jule::Bool _23abd5d41_IsFloat(jule::Str _35812_k) {
	if (_23a82a128_HasPrefix(_35812_k,jule::Str("0x", 2))) {
		return _23a830590_ContainsAny(_35812_k,jule::Str(".pP", 3));
	};
	return _23a830590_ContainsAny(_35812_k,jule::Str(".eE", 3));
}



inline jule::Bool _23abd60d8_IsNum(jule::Str _36610_k) {
	if (_36610_k.empty()) {
		return false;
	};
	jule::U8 _3719_b = _36610_k[0LL];;
	return ((_3719_b == '.') || (('0' <= _3719_b) && (_3719_b <= '9')));
}



inline jule::Bool _23abd6627_IsIgnoreIdent(jule::Str _38118_ident) {
	return (_38118_ident == jule::Str("_", 1));
}



inline jule::Bool _23abd68be_IsAnonIdent(jule::Str _38416_ident) {
	return (_38416_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _23abd6e0d_IsSpace(jule::I32 _39712_r) {
	{
		auto &expr = _23ab318d5_Spaces;
		auto it = expr.begin();
		_iter_begin_24c4a1463:;
		if (it != expr.end()) {
			jule::I32 &_39812_cr = *it;
			{
				if ((_39712_r == _39812_cr)) {
					return true;
				};
			}
			_iter_next_24c4a1463:;
			++it;
			goto _iter_begin_24c4a1463;
		}
		_iter_end_24c4a1463:;
	};
	return false;
}



inline jule::Bool _23abd735e_IsLetter(jule::I32 _40713_r) {
	return _23a6c06b6_IsLetter(_40713_r);
}



inline jule::Bool _23abd789d_IsDecimal(jule::U8 _42714_b) {
	return (('0' <= _42714_b) && (_42714_b <= '9'));
}



inline jule::Bool _23abd7b45_IsBinary(jule::U8 _43013_b) {
	return ((_43013_b == '0') || (_43013_b == '1'));
}



inline jule::Bool _23abd7ddc_IsOctal(jule::U8 _43312_b) {
	return (('0' <= _43312_b) && (_43312_b <= '7'));
}



inline jule::Bool _23abd8184_IsHex(jule::U8 _43610_b) {
	{
		
		if ((('0' <= _43610_b) && (_43610_b <= '9'))) {
			_case_begin_24c4a64e0:;
			{
				return true;
			}
		}
		else if ((('a' <= _43610_b) && (_43610_b <= 'f'))) {
			_case_begin_24c4a5cd6:;
			{
				return true;
			}
		}
		else if ((('A' <= _43610_b) && (_43610_b <= 'F'))) {
			_case_begin_24c4a5d4c:;
			{
				return true;
			}
		}
		else {
			_case_begin_24c4a5c70:;
			{
				return false;
			}
		}
		_match_end_24c4a5bb5:;
	};
}



inline jule::Bool _23abd842b_IsAssign(jule::U64 _45113_id) {
	return (((((((_45113_id == static_cast<jule::U64>(2LLU)) || (_45113_id == static_cast<jule::U64>(30LLU))) || (_45113_id == static_cast<jule::U64>(33LLU))) || (_45113_id == static_cast<jule::U64>(20LLU))) || (_45113_id == static_cast<jule::U64>(27LLU))) || (_45113_id == static_cast<jule::U64>(3LLU))) || (_45113_id == static_cast<jule::U64>(7LLU)));
}



inline jule::Bool _23abd86c3_IsPostfixOp(jule::Str _46216_kind) {
	{
		auto &expr = _23abcd355_PostfixOps;
		auto it = expr.begin();
		_iter_begin_24c4a7bd9:;
		if (it != expr.end()) {
			jule::Str &_46312_op = *it;
			{
				if ((_46216_kind == _46312_op)) {
					return true;
				};
			}
			_iter_next_24c4a7bd9:;
			++it;
			goto _iter_begin_24c4a7bd9;
		}
		_iter_end_24c4a7bd9:;
	};
	return false;
}



inline jule::Bool _23abd896a_IsAssignOp(jule::Str _47215_kind) {
	if (_23abd86c3_IsPostfixOp(_47215_kind)) {
		return true;
	};
	{
		auto &expr = _23abcd696_AssignOps;
		auto it = expr.begin();
		_iter_begin_24c4aadc9:;
		if (it != expr.end()) {
			jule::Str &_47612_op = *it;
			{
				if ((_47215_kind == _47612_op)) {
					return true;
				};
			}
			_iter_next_24c4aadc9:;
			++it;
			goto _iter_begin_24c4aadc9;
		}
		_iter_end_24c4aadc9:;
	};
	return false;
}



inline jule::Ptr<_23abd921d_File> _23abda74c_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_23abd921d_File>(_23abd921d_File{._field_Path=_6315_path, });
}



inline _23a8a5ca8_Log _23abdc078_makeErr(jule::I64 _11112_row, jule::I64 _11122_col, jule::Ptr<_23abd921d_File>& _11133_f, jule::Str _11143_fmt, jule::Slice<jule::Any> _11156_args) {
	return _23a8a5ca8_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_11112_row, ._field_Column=_11122_col, ._field_Path=_11133_f.get()._field_Path, ._field_Text=_23a8a61e8_Logf(_11143_fmt,jule::Any(_11156_args)), };
}



inline jule::Bool _23abdc40d_bytesHasPrefix(jule::Slice<jule::U8>& _12120_bytes, jule::Str _12135_prefix) {
	if ((_12120_bytes.len() < _12135_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12135_prefix;
		auto it = expr.begin();
		_iter_begin_24c4b6654:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12120_bytes[_1259_i] != _12135_prefix[_1259_i])) {
					return false;
				};
			}
			_iter_next_24c4b6654:;
			++it;
			_1259_i++;
			goto _iter_begin_24c4b6654;
		}
		_iter_end_24c4b6654:;
	};
	return true;
}



inline jule::Str _23abdc74e_floatFmtE(jule::Slice<jule::U8>& _13315_txt, jule::I64 _13332_i) {
	jule::Str _13342_lit = jule::Str();
	(_13332_i)++;
	if ((_13332_i >= _13315_txt.len())) {
		return _13342_lit;
	};
	jule::U8 _13913_b = _13315_txt[_13332_i];;
	if ((_13913_b == '_')) {
		return _13342_lit;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13332_i)++;
		if ((_13332_i >= _13315_txt.len())) {
			return _13342_lit;
		};
		if ((_13315_txt[_13332_i] == '_')) {
			return _13342_lit;
		};
	};
	jule::I64 _1539_first = _13332_i;;
	for (; (_13332_i < _13315_txt.len()); (_13332_i)++) {
		{
			_13913_b=_13315_txt[_13332_i];
			if (((_13913_b != '_') && (!(_23abd789d_IsDecimal(_13913_b))))) {
				goto _iter_end_24c4ba724;
			};
		}
	_iter_next_24c4ba724:;
	}
	_iter_end_24c4ba724:;;
	if ((_13332_i == _1539_first)) {
		_13342_lit = jule::Str();
		return _13342_lit;
	};
	_13342_lit = static_cast<jule::Str>(_13315_txt.slice(0LL,_13332_i));
	return _13342_lit;
}



inline jule::Str _23abdcad4_floatFmtP(jule::Slice<jule::U8>& _16715_txt, jule::I64 _16728_i) {
	return _23abdc74e_floatFmtE(_16715_txt,_16728_i);
}



inline jule::Str _23abdce25_floatFmtDotnp(jule::Slice<jule::U8>& _17119_txt, jule::I64 _17136_i) {
	if ((_17119_txt[_17136_i] != '.')) {
		return jule::Str();
	};
	(_17136_i)++;
	_julec_label_loop:;
	for (; (_17136_i < _17119_txt.len()); (_17136_i)++) {
		{
			jule::U8 _17913_b = _17119_txt[_17136_i];;
			{
				
				if ((_17913_b == '_') || _23abd789d_IsDecimal(_17913_b)) {
					_case_begin_24c4bdb9a:;
					{
						goto _iter_next_24c4bc6d2;
					}
				}
				else if (_23abde6c9_isFloatFmtP(_17913_b,_17136_i)) {
					_case_begin_24c4bdc11:;
					{
						return _23abdcad4_floatFmtP(_17119_txt,_17136_i);
					}
				}
				else {
					_case_begin_24c4bdb34:;
					{
						goto _iter_end_24c4bc6d2;
					}
				}
				_match_end_24c4bdabd:;
			};
		}
	_iter_next_24c4bc6d2:;
	}
	_iter_end_24c4bc6d2:;;
	return jule::Str();
}



inline jule::Str _23abdd266_floatFmtDotfp(jule::Slice<jule::U8>& _19219_txt, jule::I64 _19236_i) {
	_19236_i+=2LL;
	return _23abdc74e_floatFmtE(_19219_txt,_19236_i);
}



inline jule::Str _23abdd5a7_floatFmtDotp(jule::Slice<jule::U8>& _19718_txt, jule::I64 _19735_i) {
	(_19735_i)++;
	return _23abdc74e_floatFmtE(_19718_txt,_19735_i);
}



inline jule::Str _23abdda08_floatNum(jule::Slice<jule::U8>& _20214_txt, jule::I64 _20231_i) {
	jule::Str _20241_lit = jule::Str();
	(_20231_i)++;
	if ((_20231_i >= _20214_txt.len())) {
		_20241_lit = static_cast<jule::Str>(_20214_txt);
		return _20241_lit;
	};
	if ((_20214_txt[_20231_i] == '_')) {
		(_20231_i)--;
		_20241_lit = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
		return _20241_lit;
	};
	for (; (_20231_i < _20214_txt.len()); (_20231_i)++) {
		{
			jule::U8 _21213_b = _20214_txt[_20231_i];;
			if (((_20231_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				_20241_lit = _23abdc74e_floatFmtE(_20214_txt,_20231_i);
				return _20241_lit;
			};
			if (((_21213_b != '_') && (!(_23abd789d_IsDecimal(_21213_b))))) {
				goto _iter_end_24c4c24ea;
			};
		}
	_iter_next_24c4c24ea:;
	}
	_iter_end_24c4c24ea:;;
	if ((_20231_i == 1LL)) {
		return _20241_lit;
	};
	_20241_lit = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
	return _20241_lit;
}



inline jule::Str _23abddca0_commonNum(jule::Slice<jule::U8>& _22715_txt) {
	jule::Str _22730_lit = jule::Str();
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22715_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22715_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_24c4c6037:;
					{
						_22730_lit = _23abdda08_floatNum(_22715_txt,_22813_i);
						return _22730_lit;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_24c4c60ae:;
					{
						goto _iter_next_24c4c5256;
					}
				}
				else if (_23abde388_isFloatFmtE(_23113_b,_22813_i)) {
					_case_begin_24c4c6136:;
					{
						_22730_lit = _23abdc74e_floatFmtE(_22715_txt,_22813_i);
						return _22730_lit;
					}
				}
				else if ((!(_23abd789d_IsDecimal(_23113_b)))) {
					_case_begin_24c4c61ad:;
					{
						goto _iter_end_24c4c5256;
					}
				}
				_match_end_24c4c5e5a:;
			};
		}
	_iter_next_24c4c5256:;
	}
	_iter_end_24c4c5256:;;
	if ((_22813_i == 0LL)) {
		return _22730_lit;
	};
	_22730_lit = static_cast<jule::Str>(_22715_txt.slice(0LL,_22813_i));
	return _22730_lit;
}



inline jule::Str _23abde047_binaryNum(jule::Slice<jule::U8>& _25015_txt) {
	jule::Str _25030_lit = jule::Str();
	if ((!(_23abdc40d_bytesHasPrefix(_25015_txt,jule::Str("0b", 2))))) {
		_25030_lit = jule::Str();
		return _25030_lit;
	};
	if ((_25015_txt.len() < 2LL)) {
		return _25030_lit;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25015_txt.len()); (_25913_i)++) {
		{
			if (((_25015_txt[_25913_i] != '_') && (!(_23abd7b45_IsBinary(_25015_txt[_25913_i]))))) {
				goto _iter_end_24c4c99ec;
			};
		}
	_iter_next_24c4c99ec:;
	}
	_iter_end_24c4c99ec:;;
	if ((_25913_i == 2LL)) {
		return _25030_lit;
	};
	_25030_lit = static_cast<jule::Str>(_25015_txt.slice(0LL,_25913_i));
	return _25030_lit;
}



inline jule::Bool _23abde388_isFloatFmtE(jule::U8 _27216_b, jule::I64 _27225_i) {
	return ((_27225_i > 0LL) && ((_27216_b == 'e') || (_27216_b == 'E')));
}



inline jule::Bool _23abde6c9_isFloatFmtP(jule::U8 _27616_b, jule::I64 _27625_i) {
	return ((_27625_i > 0LL) && ((_27616_b == 'p') || (_27616_b == 'P')));
}



inline jule::Bool _23abdea1a_isFloatFmtDotnp(jule::Slice<jule::U8>& _28021_txt, jule::I64 _28038_i) {
	if ((_28021_txt[_28038_i] != '.')) {
		return false;
	};
	(_28038_i)++;
	_julec_label_loop:;
	for (; (_28038_i < _28021_txt.len()); (_28038_i)++) {
		{
			jule::U8 _28713_b = _28021_txt[_28038_i];;
			{
				
				if ((_28713_b == '_') || _23abd789d_IsDecimal(_28713_b)) {
					_case_begin_24c4ce5c3:;
					{
						goto _iter_next_24c4cd0d8;
					}
				}
				else if (_23abde6c9_isFloatFmtP(_28713_b,_28038_i)) {
					_case_begin_24c4ce639:;
					{
						return true;
					}
				}
				else {
					_case_begin_24c4ce55c:;
					{
						goto _iter_end_24c4cd0d8;
					}
				}
				_match_end_24c4ce4e6:;
			};
		}
	_iter_next_24c4cd0d8:;
	}
	_iter_end_24c4cd0d8:;;
	return false;
}



inline jule::Bool _23abded5b_isFloatFmtDotp(jule::Slice<jule::U8>& _30120_txt, jule::I64 _30133_i) {
	{
		
		if ((_30120_txt.len() < 3LL)) {
			_case_begin_24c4d14e8:;
			{
				goto _case_begin_24c4d0c89;
			}
		}
		else if ((_30120_txt[_30133_i] != '.')) {
			_case_begin_24c4d0c89:;
			{
				goto _case_begin_24c4d0d00;
			}
		}
		else if (((_30120_txt[(_30133_i + 1LL)] != 'p') && (_30120_txt[(_30133_i + 1LL)] != 'P'))) {
			_case_begin_24c4d0d00:;
			{
				return false;
			}
		}
		else {
			_case_begin_24c4d0c23:;
			{
				return true;
			}
		}
		_match_end_24c4d0b46:;
	};
}



inline jule::Bool _23abe019c_isFloatFmtDotfp(jule::Slice<jule::U8>& _31421_txt, jule::I64 _31434_i) {
	{
		
		if ((_31421_txt.len() < 4LL)) {
			_case_begin_24c4d39d4:;
			{
				goto _case_begin_24c4d32a8;
			}
		}
		else if ((_31421_txt[_31434_i] != '.')) {
			_case_begin_24c4d32a8:;
			{
				goto _case_begin_24c4d331e;
			}
		}
		else if (((_31421_txt[(_31434_i + 1LL)] != 'f') && (_31421_txt[(_31434_i + 1LL)] != 'F'))) {
			_case_begin_24c4d331e:;
			{
				goto _case_begin_24c4d3385;
			}
		}
		else if (((_31421_txt[(_31434_i + 2LL)] != 'p') && (_31421_txt[(_31434_i + 1LL)] != 'P'))) {
			_case_begin_24c4d3385:;
			{
				return false;
			}
		}
		else {
			_case_begin_24c4d2cd0:;
			{
				return true;
			}
		}
		_match_end_24c4d2c03:;
	};
}



inline jule::Str _23abe05ed_octalNum(jule::Slice<jule::U8>& _32914_txt) {
	jule::Str _32929_lit = jule::Str();
	if ((_32914_txt[0LL] != '0')) {
		_32929_lit = jule::Str();
		return _32929_lit;
	};
	if ((_32914_txt.len() < 2LL)) {
		return _32929_lit;
	};
	jule::I64 _33713_octalStart = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32914_txt[1LL] == 'o')) {
		if ((_32914_txt.len() < 3LL)) {
			return _32929_lit;
		};
		(_33713_octalStart)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octalStart;;
	for (; (_34813_i < _32914_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32914_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					_32929_lit = jule::Str();
					return _32929_lit;
				};
				_32929_lit = _23abdda08_floatNum(_32914_txt,_34813_i);
				return _32929_lit;
			};
			if (_23abde388_isFloatFmtE(_35013_b,_34813_i)) {
				_32929_lit = _23abdc74e_floatFmtE(_32914_txt,_34813_i);
				return _32929_lit;
			};
			if (((_35013_b != '_') && (!(_23abd7ddc_IsOctal(_35013_b))))) {
				goto _iter_end_24c4ddd96;
			};
		}
	_iter_next_24c4ddd96:;
	}
	_iter_end_24c4ddd96:;;
	if ((_34813_i == _33713_octalStart)) {
		return _32929_lit;
	};
	_32929_lit = static_cast<jule::Str>(_32914_txt.slice(0LL,_34813_i));
	return _32929_lit;
}



inline jule::Str _23abe0895_hexNum(jule::Slice<jule::U8>& _37112_txt) {
	jule::Str _37127_lit = jule::Str();
	if ((_37112_txt.len() < 3LL)) {
		return _37127_lit;
	};
	if (((_37112_txt[0LL] != '0') || ((_37112_txt[1LL] != 'x') && (_37112_txt[1LL] != 'X')))) {
		return _37127_lit;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37112_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37112_txt[_38013_i];;
			{
				
				if (_23abded5b_isFloatFmtDotp(_37112_txt,_38013_i)) {
					_case_begin_24c4e49a1:;
					{
						_37127_lit = _23abdd5a7_floatFmtDotp(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (_23abe019c_isFloatFmtDotfp(_37112_txt,_38013_i)) {
					_case_begin_24c4e4a28:;
					{
						_37127_lit = _23abdd266_floatFmtDotfp(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (_23abde6c9_isFloatFmtP(_38313_b,_38013_i)) {
					_case_begin_24c4e4aa0:;
					{
						_37127_lit = _23abdcad4_floatFmtP(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (_23abdea1a_isFloatFmtDotnp(_37112_txt,_38013_i)) {
					_case_begin_24c4e4b27:;
					{
						_37127_lit = _23abdce25_floatFmtDotnp(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (((_38313_b != '_') && (!(_23abd8184_IsHex(_38313_b))))) {
					_case_begin_24c4e4b9e:;
					{
						goto _iter_end_24c4e3b15;
					}
				}
				_match_end_24c4e48b3:;
			};
		}
	_iter_next_24c4e3b15:;
	}
	_iter_end_24c4e3b15:;;
	if ((_38013_i == 2LL)) {
		return _37127_lit;
	};
	_37127_lit = static_cast<jule::Str>(_37112_txt.slice(0LL,_38013_i));
	return _37127_lit;
}



inline jule::Str _23abe0bd6_hexEscape(jule::Slice<jule::U8>& _40415_txt, jule::I64 _40428_n) {
	jule::Str _40438_seq = jule::Str();
	if ((_40415_txt.len() < _40428_n)) {
		return _40438_seq;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40428_n); (_41013_i)++) {
		{
			if ((!(_23abd8184_IsHex(_40415_txt[_41013_i])))) {
				return _40438_seq;
			};
		}
	_iter_next_24c4e78c7:;
	}
	_iter_end_24c4e78c7:;;
	_40438_seq=static_cast<jule::Str>(_40415_txt.slice(0LL,_40428_n));
	return _40438_seq;
}



inline jule::Str _23abe0e7d_bigUnicodePointEscape(jule::Slice<jule::U8>& _42227_txt) {
	return _23abe0bd6_hexEscape(_42227_txt,10LL);
}



inline jule::Str _23abe1247_littleUnicodePointEscape(jule::Slice<jule::U8>& _42730_txt) {
	return _23abe0bd6_hexEscape(_42730_txt,6LL);
}



inline jule::Str _23abe1401_hexByteEscape(jule::Slice<jule::U8>& _43219_txt) {
	return _23abe0bd6_hexEscape(_43219_txt,4LL);
}



inline jule::Str _23abe1687_byteEscape(jule::Slice<jule::U8>& _43716_txt) {
	jule::Str _43731_seq = jule::Str();
	if ((_43716_txt.len() < 4LL)) {
		return _43731_seq;
	};
	if ((((!(_23abd7ddc_IsOctal(_43716_txt[1LL]))) || (!(_23abd7ddc_IsOctal(_43716_txt[2LL])))) || (!(_23abd7ddc_IsOctal(_43716_txt[3LL]))))) {
		return _43731_seq;
	};
	_43731_seq = static_cast<jule::Str>(_43716_txt.slice(0LL,4LL));
	return _43731_seq;
}



inline jule::Slice<_23a8a5ca8_Log> _23abe6181_Lex(jule::Ptr<_23abd921d_File> _82612_f, jule::I64 _82622_mode) {
	if ((_82612_f == nullptr)) {
		return nullptr;
	};
	_23abe1d6e_lex _83113_lex = _23abe1d6e_lex{._field_mode=_82622_mode, ._field_file=_82612_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_23abe4910_newLine(&_83113_lex);
	_23abe290d_lex(&_83113_lex);
	if ((_83113_lex._field_errors.len() > 0LL)) {
		return _83113_lex._field_errors;
	};
	_82612_f.get()._field_Tokens=_83113_lex._field_tokens;
	return nullptr;
}



inline jule::I64 _249b7ee63_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _249b87674_Len64(_6119_x)));
}



inline jule::I64 _249b80eb9_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_249b81b57_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));
}



inline jule::I64 _249b818b0_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_249b80617__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _249b81b57_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_249b80c66__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _249b873cc_Len32(jule::U32 _35214_x) {
	jule::I64 _35224_n = jule::I64();
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		_35224_n=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		_35224_n+=8LL;
	};
	_35224_n = static_cast<jule::I64>((_35224_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return _35224_n;
}



inline jule::I64 _249b87674_Len64(jule::U64 _36614_x) {
	jule::I64 _36624_n = jule::I64();
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		_36624_n=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		_36624_n+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		_36624_n+=8LL;
	};
	_36624_n = static_cast<jule::I64>((_36624_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return _36624_n;
}



inline std::tuple<jule::U64,jule::U64> _249b88334_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	jule::U64 _41540_sum = jule::U64();
	jule::U64 _41550_carryout = jule::U64();
	_41540_sum=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	_41550_carryout=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(_41540_sum)))) >> 63LLU));
	return std::make_tuple(_41540_sum,_41550_carryout);
}



inline std::tuple<jule::U64,jule::U64> _249b899b7_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	jule::U64 _49928_hi = jule::U64();
	jule::U64 _49937_lo = jule::U64();
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49928_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49937_lo=static_cast<jule::U64>((_49910_x * _49918_y));
	return std::make_tuple(_49928_hi,_49937_lo);
}



inline jule::U32 _249aa6340_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));
}



inline jule::F32 _249aa662b_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));
}



inline jule::U64 _249aa68c3_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));
}



inline jule::F64 _249aa6be2_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));
}



inline std::tuple<jule::F64,jule::I64> _249aa92ee_Frexp(jule::F64 _4714_f) {
	jule::F64 _4724_frac = jule::F64();
	jule::I64 _4735_exp = jule::I64();
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_24c6d7127:;
			{
				_4724_frac = _4714_f;
				_4735_exp = 0LL;
				return std::make_tuple(_4724_frac,_4735_exp);
			}
		}
		else if (_249b1ed6a_IsInf(_4714_f,0LL) || _249b17a66_IsNaN(_4714_f)) {
			_case_begin_24c6d719e:;
			{
				_4724_frac = _4714_f;
				_4735_exp = 0LL;
				return std::make_tuple(_4724_frac,_4735_exp);
			}
		}
		_match_end_24c6d7039:;
	};
	std::tie(_4714_f,_4735_exp) = _249b21476_normalize(_4714_f);
	jule::U64 _5613_x = _249aa68c3_F64Bits(_4714_f);;
	_4735_exp+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4724_frac=static_cast<jule::F64>(_249aa6be2_F64FromBits(_5613_x));
	return std::make_tuple(_4724_frac,_4735_exp);
}



inline jule::F64 _249b16b31_NaN(void) {
	return static_cast<jule::F64>(_249aa6be2_F64FromBits(9221120237041090561LLU));
}



inline jule::Bool _249b17a66_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);
}



inline jule::F64 _249b19507_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_249aa6be2_F64FromBits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_249aa6be2_F64FromBits(18442240474082181120LLU));
}



inline jule::Bool _249b1ed6a_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I64> _249b21476_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	;
	if ((_249b3ce21_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _249b31640_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_249b17a66_IsNaN(_1118_x) || _249b1ed6a_IsInf(_1118_x,1LL)) {
			_case_begin_24c72d2a0:;
			{
				return _1118_x;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_24c72d327:;
			{
				return static_cast<jule::F64>(_249b16b31_NaN());
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_24c72d39e:;
			{
				return static_cast<jule::F64>(_249b19507_Inf(-1LL));
			}
		}
		_match_end_24c72d1d4:;
	};
	jule::F64 _13314_f1;;
	jule::I64 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _249aa92ee_Frexp(_1118_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _249b3ce21_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_249aa6be2_F64FromBits(static_cast<jule::U64>((_249aa68c3_F64Bits(_438_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _249b93361_Modf(jule::F64 _449_f) {
	jule::F64 _4419_integer = jule::F64();
	jule::F64 _4433_frac = jule::F64();
	;
	jule::F64 _469_absF = _249b3ce21_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_24c7a546a:;
		}
		_iter_end_24c7a546a:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4419_integer = _4713_i;
	_4433_frac = static_cast<jule::F64>((_449_f - _4713_i));
	return std::make_tuple(_4419_integer,_4433_frac);
}



inline jule::F64 _249b93b25_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac;;
	jule::I64 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _249aa92ee_Frexp(_449_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_249b31640_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _249602be4_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_24961739b_genericFtoa(jule::Slice<jule::U8>::alloc(0LL,_24979b8a4_max(static_cast<jule::I64>((_7832_prec + 4LL)),24LL)),_7813_f,_7821_fmt,_7832_prec,_7843_bit_size));
}



inline jule::Slice<jule::U8> _24961739b_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_24979546e_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_24ca19e60:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_249aa6340_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_24979546e_floatInfo>)((&(_2495e2b6d_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_24ca19712:;
			{
				_8313_bits=static_cast<jule::U64>(_249aa68c3_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_24979546e_floatInfo>)((&(_2495e8107_f64info))));
			}
		}
		else {
			_case_begin_24ca19602:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_24ca198bb:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_24ca1e2b6:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_24ca210cb:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_24ca21296:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_24ca20075:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));
						}
					}
					_match_end_24ca1ee98:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_24ca19aca:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_24ca1a0c5:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_24ca1d958:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _2496a932d_fmtB(_8220_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _249772c43_fmtX(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_2398213c8_decimalSlice _13213_digs = _2398213c8_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_2497461de_ryuFtoaShortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_24ca25476:;
				{
					_8258_prec=static_cast<jule::I64>(_24979b8a4_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_24ca25531:;
				{
					_8258_prec=static_cast<jule::I64>(_24979b8a4_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_24ca25597:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_24ca2472d:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_24ca27d2a:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_24ca272ad:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_24ca2781e:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_24ca277b9:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_249a91869_ryuFtoaFixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_249a981ab_ryuFtoaFixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _24967002a_bigFtoa(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _249696925_fmtDigits(_8220_dst,_1359_shortest,_969_neg,_13213_digs,_8258_prec,_8243_fmt);
}



inline jule::Slice<jule::U8> _24967002a_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _24979546e_floatInfo& _18327_flt) {
	_249bc09dc_decimal _18413_d = _249bc09dc_decimal{};;
	_249bc0bc9_assign(&_18413_d, _1835_mant);
	_249bc0d0b_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_2398213c8_decimalSlice _18713_digs = _2398213c8_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_249698ae2_roundShortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_2398213c8_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_24ca2ce40:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_24ca30915:;
				{
					_18233_prec=static_cast<jule::I64>(_24979b8a4_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_24ca3097b:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_24ca30849:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_24ca32351:;
				{
					_249bc11a2_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_24ca323b7:;
				{
					_249bc11a2_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_24ca3242d:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_249bc11a2_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_24ca32296:;
		};
		_18713_digs=_2398213c8_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _249696925_fmtDigits(_18216_dst,_1889_shortest,_18255_neg,_18713_digs,_18233_prec,_18244_fmt);
}



inline jule::Slice<jule::U8> _249696925_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _2398213c8_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_24ca36003:;
			{
				return _2496a7bde_fmtE(_21918_dst,_21947_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_24ca36069:;
			{
				return _2496a8393_fmtF(_21918_dst,_21947_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_24ca360d0:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _2496a7bde_fmtE(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _2496a8393_fmtF(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>(_24979b8a4_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_24ca35dc1:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));
}



inline void _249698ae2_roundShortest(_249bc09dc_decimal& _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _24979546e_floatInfo& _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		_25723_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25757_flt._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * (_25723_d._field_dp - _25723_d._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)))))) {
		return;;
	};
	_249bc09dc_decimal _28713_upper = _249bc09dc_decimal{};;
	_249bc0bc9_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_249bc0d0b_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << _25757_flt._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_249bc09dc_decimal _30613_lower = _249bc09dc_decimal{};;
	_249bc0bc9_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_249bc0d0b_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25723_d._field_dp);;
			if ((_33513_mi >= _25723_d._field_nd)) {
				goto _iter_end_24ca44a39;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25723_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_24ca4a204:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_24ca4a27b:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_24ca4a303:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_24ca4a138:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_24ca4d69c:;
					{
						_249bc11a2_round(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_24ca4d724:;
					{
						_249bc0e3d_roundDown(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_24ca4d79b:;
					{
						_249bc1070_roundUp(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_24ca4d603:;
			};
		}
	_iter_next_24ca44a39:;
	}
	_iter_end_24ca44a39:;;
}



inline jule::Slice<jule::U8> _2496a7bde_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _2398213c8_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _2497964c5_min(_39637_d._field_nd,static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_24ca53dde:;
		}
		_iter_end_24ca53dde:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_24ca55eac:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_24ca57486:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_24ca55e46:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_24ca55c8c:;
	};
	return _39613_dst;
}



inline jule::Slice<jule::U8> _2496a8393_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _2398213c8_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _2497964c5_min(_45137_d._field_nd,_45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_24ca5a632:;
		}
		_iter_end_24ca5a632:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_24ca5bb72:;
		}
		_iter_end_24ca5bb72:;;
	};
	return _45113_dst;
}



inline jule::Slice<jule::U8> _2496a932d_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _24979546e_floatInfo& _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	std::tie(_48413_dst,std::ignore) = _249bc2ba9_fmtBits(_48413_dst,_48437_mant,10LL,false,true);
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>(_48463_flt._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	std::tie(_48413_dst,std::ignore) = _249bc2ba9_fmtBits(_48413_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)),10LL,(_48452_exp < 0LL),true);
	return _48413_dst;
}



inline jule::Slice<jule::U8> _249772c43_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _24979546e_floatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_24ca62628:;
	}
	_iter_end_24ca62628:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_24ca6d26b:;
		}
		_iter_end_24ca6d26b:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_24ca6ec84:;
		}
		_iter_end_24ca6ec84:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _249807624_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_24ca726d2:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_24ca725a0:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_24ca7299b:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_24ca714e4:;
	};
	return _50613_dst;
}



inline jule::I64 _2497964c5_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I64 _24979b8a4_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _249807624_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));
}



inline std::tuple<jule::U64,jule::I64> _249827567_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	if (_5118_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_24ca79de3:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_24ca79c8e:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_249807624_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_24ca7bcb3:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_249807624_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_24ca7bac6:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_249807624_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_24ca7bb3c:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_24ca7b730:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_24ca7b653:;
					};
				};
			}
		}
		else {
			_case_begin_24ca78e7a:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_24ca78e25:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_24ca8204e:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_24ca81e72:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_24ca81834:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_24ca8169c:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_24ca818de:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_24ca831c6:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_24ca83171:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5118_s;
		auto it = expr.begin();
		_iter_begin_24ca8431a:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_24ca85c45:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _249807624_lower(_10912_c)) && (_249807624_lower(_10912_c) <= 'z'))) {
						_case_begin_24ca858b0:;
						{
							_11017_d=static_cast<jule::U8>(((_249807624_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_24ca85926:;
						{
							goto _iter_next_24ca8431a;
						}
					}
					else {
						_case_begin_24ca8542b:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_24ca853b5:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_24ca8431a:;
			++it;
			goto _iter_begin_24ca8431a;
		}
		_iter_end_24ca8431a:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _249849b0b_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un;;
	jule::I64 _14714_err;;
	std::tie(_14710_un,_14714_err) = _249827567_parseUint(_14618_s,_14630_base,_14645_bit_size);
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _2498cb5e9_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I64 _18718_err;;
	std::tie(_18714_un,_18718_err) = _249827567_parseUint(_17217_s,_17225_base,_17240_bitSize);
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _2499967a2_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	jule::F64 _4157_f = jule::F64();
	jule::Bool _4165_ok = jule::Bool();
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			_4157_f=static_cast<jule::F64>(_249aa6be2_F64FromBits(9223372036854775808LLU));
		};
		_4165_ok = true;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::I64 _579_clz = _249b7ee63_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi;;
	jule::U64 _6323_xLo;;
	std::tie(_6314_xHi,_6323_xLo) = _249b899b7_Mul64(_4122_man,_24968300a_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi;;
		jule::U64 _6719_yLo;;
		std::tie(_6714_yHi,_6719_yLo) = _249b899b7_Mul64(_4122_man,_24968300a_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
		jule::U64 _6818_mergedHi = _6314_xHi;;
		jule::U64 _6828_mergedLo = (_6323_xLo + _6714_yHi);;
		std::tie(_6818_mergedHi,_6828_mergedLo) = std::make_tuple(_6314_xHi,(_6323_xLo + _6714_yHi));
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			_4157_f = 0LL;
			_4165_ok = false;
			return std::make_tuple(_4157_f,_4165_ok);
		};
		std::tie(_6314_xHi,_6323_xLo) = std::make_tuple(_6818_mergedHi,_6828_mergedLo);
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	_4157_f = static_cast<jule::F64>(_249aa6be2_F64FromBits(_10313_retBits));
	_4165_ok = true;
	return std::make_tuple(_4157_f,_4165_ok);
}



inline std::tuple<jule::F32,jule::Bool> _2499d9a9d_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	jule::F32 _11057_f = jule::F32();
	jule::Bool _11065_ok = jule::Bool();
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			_11057_f=static_cast<jule::F32>(_249aa662b_F32FromBits(2147483648LLU));
		};
		_11065_ok = true;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		_11057_f = 0.0f;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::I64 _1329_clz = _249b7ee63_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _249b899b7_Mul64(_11022_man,_24968300a_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _249b899b7_Mul64(_11022_man,_24968300a_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			_11057_f = 0.0f;
			_11065_ok = false;
			return std::make_tuple(_11057_f,_11065_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		_11057_f = 0.0f;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		_11057_f = 0.0f;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	_11057_f = static_cast<jule::F32>(_249aa662b_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	_11065_ok = true;
	return std::make_tuple(_11057_f,_11065_ok);
}



inline jule::I64 _2497a66d3_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_24caaec6e:;
	}
	_iter_end_24caaec6e:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _2495e3c4b_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_24cab4636:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_24cab46ad;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_24cab46ad:;
			{
				jule::I64 _8317_caseN = _2497a66d3_commonPrefixLenIgnoreCase(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					_6826_f = static_cast<jule::F64>(_249b19507_Inf(_7213_sign));
					_6834_n = static_cast<jule::I64>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_24cab4735:;
			{
				if ((_2497a66d3_commonPrefixLenIgnoreCase(_6816_s,jule::Str("NaN", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_249b16b31_NaN());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_24cab456a:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _249a38415_readFloat(jule::Str _10314_s) {
	jule::U64 _10324_mantissa = jule::U64();
	jule::I64 _10339_exp = jule::I64();
	jule::Bool _10349_neg = jule::Bool();
	jule::Bool _10360_trunc = jule::Bool();
	jule::Bool _10373_hex = jule::Bool();
	jule::I64 _10384_i = jule::I64();
	jule::Bool _10392_ok = jule::Bool();
	if ((_10384_i >= _10314_s.len())) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	{
		
		if ((_10314_s[_10384_i] == '+')) {
			_case_begin_24cabae23:;
			{
				(_10384_i)++;
			}
		}
		else if ((_10314_s[_10384_i] == '-')) {
			_case_begin_24cabae89:;
			{
				_10349_neg=true;
				(_10384_i)++;
			}
		}
		_match_end_24cababe2:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((_10384_i + 2LL) < _10314_s.len()) && (_10314_s[_10384_i] == '0')) && (_249807624_lower(_10314_s[(_10384_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		_10384_i+=2LL;
		_11913_expChar='p';
		_10373_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (_10384_i < _10314_s.len()); (_10384_i)++) {
		{
			jule::U8 _13313_c = _10314_s[_10384_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_24cac2776:;
					{
						goto _iter_next_24cac1b0a;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_24cac27ed:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_24cac1b0a;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_24cac2875:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_24cac1b0a;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=_11713_base;
							_10324_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							_10360_trunc=true;
						};
						goto _iter_next_24cac1b0a;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _249807624_lower(_13313_c))) && (_249807624_lower(_13313_c) <= 'f'))) {
					_case_begin_24cac28ec:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=16LLU;
							_10324_mantissa+=static_cast<jule::U64>(((_249807624_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							_10360_trunc=true;
						};
						goto _iter_next_24cac1b0a;
					}
				}
				_match_end_24cac2699:;
			};
			goto _iter_end_24cac1b0a;
		}
	_iter_next_24cac1b0a:;
	}
	_iter_end_24cac1b0a:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((_10384_i < _10314_s.len()) && (_249807624_lower(_10314_s[_10384_i]) == _11913_expChar))) {
		(_10384_i)++;
		if ((_10384_i >= _10314_s.len())) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[_10384_i] == '+')) {
			(_10384_i)++;
		} else if ((_10314_s[_10384_i] == '-')) {
			(_10384_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10384_i >= _10314_s.len()) || (_10314_s[_10384_i] < '0')) || (_10314_s[_10384_i] > '9'))) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((_10384_i < _10314_s.len()) && ((('0' <= _10314_s[_10384_i]) && (_10314_s[_10384_i] <= '9')) || (_10314_s[_10384_i] == '_'))); (_10384_i)++) {
			{
				if ((_10314_s[_10384_i] == '_')) {
					goto _iter_next_24cacc74d;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[_10384_i])) - '0'));
				};
			}
		_iter_next_24cacc74d:;
		}
		_iter_end_24cacc74d:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((_10324_mantissa != 0LLU)) {
		_10339_exp=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	_10392_ok=true;
	return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
}



inline std::tuple<jule::F64,jule::Bool> _24967d1d1_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _2495e8107_f64info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_24cad85e4:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_24cad866b:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_2496d62b1_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _2496d62b1_f64pow10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_24cad86e3:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_2496d62b1_f64pow10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_24cad8539:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _2496ccc25_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _2495e2b6d_f32info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_24caddb05:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_24caddb7c:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_2496ed031_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000.0f) || (_51562_f < -10000000.0f))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _2496ed031_f32pow10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_24caddc04:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_2496ed031_f32pow10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_24cadda4a:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _2498512e9_atofHex(jule::Str _55112_s, _24979546e_floatInfo& _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << _55121_flt._field_expbits)) + _55121_flt._field_bias) - 2LL);;
	jule::I64 _5539_minExp = (_55121_flt._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>(_55121_flt._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> (_55121_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_24cae41d2:;
	}
	_iter_end_24cae41d2:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + _55121_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_24cae6217:;
	}
	_iter_end_24cae6217:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_24cae63e3:;
	}
	_iter_end_24cae63e3:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + _55121_flt._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> _55121_flt._field_mantbits) == 0LLU)) {
		_55160_exp=_55121_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55121_flt._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << _55121_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - _55121_flt._field_bias) & static_cast<jule::I64>(((1LL << _55121_flt._field_expbits) - 1LL)))) << _55121_flt._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << _55121_flt._field_mantbits) << _55121_flt._field_expbits);
	};
	if ((_55121_flt == _2495e2b6d_f32info)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_249aa662b_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_249aa6be2_F64FromBits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _2498cbc15_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I64 _61629_n = jule::I64();
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I64 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _2495e3c4b_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I64 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I64 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _249a38415_readFloat(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0.0f;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _2498512e9_atofHex(_61611_s.slice(0LL,_61629_n),_2495e2b6d_f32info,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _2496ccc25_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _2499d9a9d_eiselLemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_fUp = 0.0f;;
			std::tie(_65321_fUp,_62450_ok) = _2499d9a9d_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_fUp))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_249bc09dc_decimal _66213_d = _249bc09dc_decimal{};;
	if ((!(_2496a74c4_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0.0f;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _249617e3a_floatBits(&_66213_d, _2495e2b6d_f32info);
	_61621_f=static_cast<jule::F32>(_249aa662b_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _249927634_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I64 _67429_n = jule::I64();
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I64 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _2495e3c4b_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I64 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I64 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _249a38415_readFloat(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _2498512e9_atofHex(_67411_s.slice(0LL,_67429_n),_2495e8107_f64info,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _24967d1d1_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _2499967a2_eiselLemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_fUp = 0LL;;
			std::tie(_71021_fUp,_68250_ok) = _2499967a2_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_fUp))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_249bc09dc_decimal _71913_d = _249bc09dc_decimal{};;
	if ((!(_2496a74c4_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _249617e3a_floatBits(&_71913_d, _2495e8107_f64info);
	_67421_f=static_cast<jule::F64>(_249aa6be2_F64FromBits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _2499653a8_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I64 _73317_n;;
		jule::I64 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _2498cbc15_atof32(_73121_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I64 _73713_n;;
	jule::I64 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _249927634_atof64(_73121_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _249a3a0a4_ParseFloat(jule::Str _76515_s, jule::I64 _76523_bit_size) {
	jule::F64 _76610_f;;
	jule::I64 _76613_n;;
	jule::I64 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _2499653a8_parseFloatPrefix(_76515_s,_76523_bit_size);
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _249a91869_ryuFtoaFixed32(_2398213c8_decimalSlice& _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		std::tie(_4924_d._field_nd,_4924_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _249b873cc_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_2497c338c_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I64 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _249bbebc8_mult64bitPow10(_4945_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _249bbee3c_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extraMask)));
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_24965d0b2_formatDecimal(_4924_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_roundUp,_4966_prec);
	_4924_d._field_dp-=_749_q;
}



inline void _249a981ab_ryuFtoaFixed64(_2398213c8_decimalSlice& _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		std::tie(_12124_d._field_nd,_12124_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _249b87674_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_2497c338c_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I64 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _249bbed0a_mult128bitPow10(_12145_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _249bbee3c_divisibleByPow5(_12145_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extraMask)));
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_24965d0b2_formatDecimal(_12124_d,_15314_di,(!(_15329_d0)),_17113_roundUp,_12166_prec);
	_12124_d._field_dp-=_1469_q;
}



inline void _24965d0b2_formatDecimal(_2398213c8_decimalSlice& _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _249795958_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20044_m / 10LLU);;
			jule::U64 _20417_b = (_20044_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20044_m / 10LLU),(_20044_m % 10LL));
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_24cb31e34:;
	}
	_iter_end_24cb31e34:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	_20023_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_24cb35bb3:;
	}
	_iter_end_24cb35bb3:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20023_d._field_d[(_20023_d._field_nd - 1LL)] == '0')) {
		{
			(_20023_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_24cb3b614:;
	}
	_iter_end_24cb3b614:;;
	_20023_d._field_dp=static_cast<jule::I64>((_20023_d._field_nd + _20213_trimmed));
}



inline void _2497461de_ryuFtoaShortest(_2398213c8_decimalSlice& _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _24979546e_floatInfo& _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		std::tie(_26125_d._field_nd,_26125_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26157_exp <= 0LL) && (_249b81b57_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_249bbe964_ryuDigits(_26125_d,_26146_mant,_26146_mant,_26146_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I64 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _249bbe722_computeBounds(_26146_mant,_26157_exp,_26168_flt);
	if ((_27326_e2 == 0LL)) {
		_249bbe964_ryuDigits(_26125_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_2497c338c_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26168_flt == _2495e2b6d_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _249bbebc8_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _249bbebc8_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _249bbebc8_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _249bbed0a_mult128bitPow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _249bbed0a_mult128bitPow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _249bbed0a_mult128bitPow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_249bbee3c_divisibleByPow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_249bbee3c_divisibleByPow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_249bbee3c_divisibleByPow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extraMask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extraMask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extraMask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_249bbe964_ryuDigits(_26125_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26125_d._field_dp-=_2799_q;
}



inline jule::I64 _2497c338c_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));
}



inline jule::I64 _249bbe5e0_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _249bbe722_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _24979546e_floatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I64 _39662_e2 = jule::I64();
	if (((_39518_mant != (1LLU << _3966_flt._field_mantbits)) || (_39529_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU)),static_cast<jule::U64>((2LL * _39518_mant)),static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU)),static_cast<jule::U64>((4LL * _39518_mant)),static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _249bbe964_ryuDigits(_2398213c8_decimalSlice& _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _249bc006e_divmod1e9(_40936_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _249bc006e_divmod1e9(_40948_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _249bc006e_divmod1e9(_40962_upper);
	if ((_41210_uhi == 0LLU)) {
		_249bbea96_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_249bbea96_ryuDigits32(_40919_d,_41014_lhi,_41110_chi,_41210_uhi,_40978_c0,_40992_cup,8LL);
		_40919_d._field_dp+=9LL;
	} else {
		_40919_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40919_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_24cb5d4c1:;
		}
		_iter_end_24cb5d4c1:;;
		_40919_d._field_d=_40919_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40919_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_249bbea96_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,static_cast<jule::I64>((_40919_d._field_nd + 8LL)));
	};
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[(_40919_d._field_nd - 1LL)] == '0'))) {
		{
			(_40919_d._field_nd)--;
		}
	_iter_next_24cb6112d:;
	}
	_iter_end_24cb6112d:;;
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[0LL] == '0'))) {
		{
			(_40919_d._field_nd)--;
			(_40919_d._field_dp)--;
			_40919_d._field_d=_40919_d._field_d.slice(1LL);
		}
	_iter_next_24cb5d1c4:;
	}
	_iter_end_24cb5d1c4:;;
}



inline void _249bbea96_ryuDigits32(_2398213c8_decimalSlice& _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45421_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45458_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45458_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45458_central / 10LLU),(_45458_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_24cb6465e;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45442_lower,_45458_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_24cb6465e:;
	}
	_iter_end_24cb6465e:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45421_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45421_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45421_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_24cb6b2ae:;
	}
	_iter_end_24cb6b2ae:;;
	if ((_51013_n == _45421_d._field_nd)) {
		_45421_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45421_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45421_d._field_dp=static_cast<jule::I64>((_45421_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _249bbebc8_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	jule::U32 _53450_resM = jule::U32();
	jule::I64 _53461_resE = jule::I64();
	jule::Bool _53472_exact = jule::Bool();
	if ((_53440_q == 0LL)) {
		_53450_resM = static_cast<jule::U32>((_53419_m << 6LLU));
		_53461_resE = static_cast<jule::I64>((_53431_e2 - 6LL));
		_53472_exact = true;
		return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _24968300a_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _249b899b7_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)),_54313_pow);
	_53431_e2+=((_249bbe5e0_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	_53450_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53461_resE = _53431_e2;
	_53472_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _249bbed0a_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	jule::U64 _56251_resM = jule::U64();
	jule::I64 _56262_resE = jule::I64();
	jule::Bool _56273_exact = jule::Bool();
	if ((_56241_q == 0LL)) {
		_56251_resM = static_cast<jule::U64>((_56220_m << 8LLU));
		_56262_resE = static_cast<jule::I64>((_56232_e2 - 8LL));
		_56273_exact = true;
		return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _24968300a_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_249bbe5e0_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _249b899b7_Mul64(_56220_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _249b899b7_Mul64(_56220_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _249b88334_Add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56251_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56262_resE = _56232_e2;
	_56273_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
}



inline jule::Bool _249bbee3c_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;
			};
			_58624_m/=5LLU;
		}
	_iter_next_24cb7c567:;
	}
	_iter_end_24cb7c567:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _249bc006e_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
}



inline void _249bc1548_trim(_249bc09dc_decimal& _45314_a) {
	while (((_45314_a._field_nd > 0LL) && (_45314_a._field_d[(_45314_a._field_nd - 1LL)] == '0'))) {
		{
			(_45314_a._field_nd)--;
		}
	_iter_next_24cb812d5:;
	}
	_iter_end_24cb812d5:;;
	if ((_45314_a._field_nd == 0LL)) {
		_45314_a._field_dp=0LL;
	};
}



inline void _249bc167a_rightShift(_249bc09dc_decimal& _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= _46320_a._field_nd)) {
				if ((_46813_n == 0LLU)) {
					_46320_a._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_24cb84bce:;
				}
				_iter_end_24cb84bce:;;
				goto _iter_end_24cb836d3;
			};
			jule::U64 _48213_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_24cb836d3:;
	}
	_iter_end_24cb836d3:;;
	_46320_a._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < _46320_a._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_24cb8464b:;
	}
	_iter_end_24cb8464b:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				_46320_a._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_24cb88b6c:;
	}
	_iter_end_24cb88b6c:;;
	_46320_a._field_nd=_46513_w;
	_249bc1548_trim(_46320_a);
}



inline jule::Bool _249bc17ac_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);
			};
		}
	_iter_next_24cb8c522:;
	}
	_iter_end_24cb8c522:;;
	return false;
}



inline void _249bc18de_leftShift(_249bc09dc_decimal& _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _249797493_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_249bc17ac_prefixIsLessThan(_53119_a._field_d,_53119_a._field_nd,_249797493_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = _53119_a._field_nd;;
	jule::I64 _53813_w = (_53119_a._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>(_53119_a._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_24cb910a3:;
	}
	_iter_end_24cb910a3:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_24cb9398a:;
	}
	_iter_end_24cb9398a:;;
	_53119_a._field_nd+=_53213_delta;
	if ((_53119_a._field_nd >= 800LL)) {
		_53119_a._field_nd=800LL;
	};
	_53119_a._field_dp+=_53213_delta;
	_249bc1548_trim(_53119_a);
}



inline jule::Bool _249bc1a21_shouldRoundUp(_249bc09dc_decimal& _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= _57819_a._field_nd))) {
		return false;
	};
	if (((_57819_a._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == _57819_a._field_nd))) {
		if (_57819_a._field_trunc) {
			return true;
		};
		return ((_57831_nd > 0LL) && (((_57819_a._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_57819_a._field_d[_57831_nd] >= '5');
}



inline jule::Str _249bc259e_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _249bc2945_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _249bc2ba9_fmtBits(nullptr,_6012_i,_6020_base,false,false);
	return _6413_s;
}



inline jule::Str _249bc26d1_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _249bc2945_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _249bc2ba9_fmtBits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)),_7119_base,(_7111_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _249bc2813_Itoa(jule::I64 _809_i) {
	return _249bc26d1_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)),10LL);
}



inline jule::Str _249bc2945_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _249bc2a77_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _249bc2ba9_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	jule::Slice<jule::U8> _10180_d = jule::Slice<jule::U8>();
	jule::Str _10191_s = jule::Str();
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_24cbdab7a:;
		}
		_iter_end_24cbdab7a:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_249bc2a77_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_249b80eb9_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_24cbda42c:;
		}
		_iter_end_24cbda42c:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_24cbe7c97:;
		}
		_iter_end_24cbe7c97:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		_10180_d=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10180_d,_10191_s);
	};
	_10191_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10180_d,_10191_s);
}



inline jule::Str _249202a14_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_24cc10a18:;
			{
				return _2491d0abe_SysInt;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_24cc143bd:;
			{
				return _2491d10ec_SysUint;
			}
		}
		else {
			_case_begin_24cc12982:;
			{
				return _4515_kind;
			}
		}
		_match_end_24cc112bb:;
	};
}



inline jule::I64 _249209246_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_24cc15d4d:;
			{
				return 8LLU;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_24cc155cd:;
			{
				return 16LLU;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_24cc15644:;
			{
				return 32LLU;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_24cc156aa:;
			{
				return 64LLU;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_24cc15721:;
			{
				return _24917dac2_BitSize;
			}
		}
		else {
			_case_begin_24cc15567:;
			{
				return -1LL;
			}
		}
		_match_end_24cc15424:;
	};
}



inline jule::Str _24922d4ce_IntFromBits(jule::I64 _8616_bits) {
	{
		auto &_match_expr{ _8616_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_24cc181a2:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_24cc17536:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_24cc1759c:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_24cc17613:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_24cc174c0:;
			{
				return jule::Str();
			}
		}
		_match_end_24cc17aa8:;
	};
}



inline jule::Str _2492403e2_UintFromBits(jule::I64 _10417_bits) {
	{
		auto &_match_expr{ _10417_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_24cc1989b:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_24cc19181:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_24cc191e7:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_24cc1925d:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_24cc1902c:;
			{
				return jule::Str();
			}
		}
		_match_end_24cc18dc8:;
	};
}



inline jule::Str _24926987d_FloatFromBits(jule::I64 _12218_bits) {
	{
		auto &_match_expr{ _12218_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_24cc1b073:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_24cc1a87a:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_24cc1a726:;
			{
				return jule::Str();
			}
		}
		_match_end_24cc1a5c2:;
	};
}



inline jule::Bool _249406135_CheckBitFloat(jule::Str _15018_val, jule::I64 _15028_bit) {
	({
		auto except = _249a3a0a4_ParseFloat(_15018_val,_15028_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _249425d25_BitsizeOfFloat(jule::F64 _16019_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16019_x) && (_16019_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_24cc21661:;
			{
				return 32LLU;
			}
		}
		else {
			_case_begin_24cc20682:;
			{
				return 64LLU;
			}
		}
		_match_end_24cc205c7:;
	};
}



inline jule::I64 _2494cc34e_BitsizeOfInt(jule::I64 _17617_x) {
	{
		
		if (((-128LL <= _17617_x) && (_17617_x <= 127LL))) {
			_case_begin_24cc21c05:;
			{
				return 8LLU;
			}
		}
		else if (((-32768LL <= _17617_x) && (_17617_x <= 32767LL))) {
			_case_begin_24cc21c6b:;
			{
				return 16LLU;
			}
		}
		else if (((-2147483648LL <= _17617_x) && (_17617_x <= 2147483647LL))) {
			_case_begin_24cc21cd2:;
			{
				return 32LLU;
			}
		}
		else {
			_case_begin_24cc21a29:;
			{
				return 64LLU;
			}
		}
		_match_end_24cc2194c:;
	};
}



inline jule::I64 _2494e50e2_BitsizeOfUint(jule::U64 _19618_x) {
	{
		
		if ((_19618_x <= 255LLU)) {
			_case_begin_24cc24862:;
			{
				return 8LLU;
			}
		}
		else if ((_19618_x <= 65535LLU)) {
			_case_begin_24cc248c8:;
			{
				return 16LLU;
			}
		}
		else if ((_19618_x <= 4294967295LLU)) {
			_case_begin_24cc2493e:;
			{
				return 32LLU;
			}
		}
		else {
			_case_begin_24cc23be6:;
			{
				return 64LLU;
			}
		}
		_match_end_24cc243ab:;
	};
}



inline void _2494e581d_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _23a8de64e_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_24cc258a7:;
				{
					_24917dac2_BitSize=64LLU;
					_2491d0abe_SysInt=jule::Str("i64", 3);
					_2491d10ec_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_24cc2591d:;
				{
					_24917dac2_BitSize=32LLU;
					_2491d0abe_SysInt=jule::Str("i32", 3);
					_2491d10ec_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_24cc257ec:;
		};
	};
}



inline void _249502dd0_init(void) {
	_2494e581d_UpdateTarget();
}



inline jule::F64 _24957c4a9_Min(jule::Str _6112_k) {
	_6112_k=_249202a14_RealKindOf(_6112_k);
	{
		auto &_match_expr{ _6112_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_24cc2827d:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_24cc282e4:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_24cc2835a:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_24cc283c1:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_24cc28536:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_24cc2859c:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_24cc25dc4:;
			{
				return 0LL;
			}
		}
		_match_end_24cc260d3:;
	};
}



inline jule::F64 _2495852d6_Max(jule::Str _8312_k) {
	_8312_k=_249202a14_RealKindOf(_8312_k);
	{
		auto &_match_expr{ _8312_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_24cc2a22a:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_24cc2a291:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_24cc2a307:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_24cc2a36d:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_24cc2a5e3:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_24cc2a659:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_24cc2a6c0:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_24cc2a736:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_24cc2a79c:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_24cc2a813:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_24cc2a0b5:;
			{
				return 0LL;
			}
		}
		_match_end_24cc29dd9:;
	};
}



inline jule::Bool _249591e19_IsI8Compatible(jule::Str _623_k) {
	return (_623_k == jule::Str("i8", 2));
}



inline jule::Bool _24959d651_IsI16Compatible(jule::Str _1124_k) {
	return ((_1124_k == jule::Str("i8", 2)) || (_1124_k == jule::Str("i16", 3)));
}



inline jule::Bool _2495c3ab6_IsI32Compatible(jule::Str _1724_k) {
	return ((((_1724_k == jule::Str("i8", 2)) || (_1724_k == jule::Str("i16", 3))) || (_1724_k == jule::Str("i32", 3))) || (_1724_k == jule::Str("u8", 2)));
}



inline jule::Bool _2495ca183_IsI64Compatible(jule::Str _2524_k) {
	return ((((_2524_k == jule::Str("i8", 2)) || (_2524_k == jule::Str("i16", 3))) || (_2524_k == jule::Str("i32", 3))) || (_2524_k == jule::Str("i64", 3)));
}



inline jule::Bool _249181047_IsU8Compatible(jule::Str _3323_k) {
	return (_3323_k == jule::Str("u8", 2));
}



inline jule::Bool _2491cec99_IsU16Compatible(jule::Str _3824_k) {
	return ((_3824_k == jule::Str("u8", 2)) || (_3824_k == jule::Str("u16", 3)));
}



inline jule::Bool _24925723e_IsU32Compatible(jule::Str _4324_k) {
	return (((_4324_k == jule::Str("u8", 2)) || (_4324_k == jule::Str("u16", 3))) || (_4324_k == jule::Str("u32", 3)));
}



inline jule::Bool _249257cab_IsU64Compatible(jule::Str _5024_k) {
	return ((((_5024_k == jule::Str("u8", 2)) || (_5024_k == jule::Str("u16", 3))) || (_5024_k == jule::Str("u32", 3))) || (_5024_k == jule::Str("u64", 3)));
}



inline jule::Bool _249447808_IsF32Compatible(jule::Str _5824_k) {
	return (_5824_k == jule::Str("f32", 3));
}



inline jule::Bool _24944893b_IsF64Compatible(jule::Str _6324_k) {
	return (_6324_k == jule::Str("f64", 3));
}



inline jule::Bool _249453902_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_24cc34597:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_24cc34a5e:;
			{
				return (_7036_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_24cc34ac5:;
			{
				return (_7036_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_24cc3480b:;
			{
				return (_7036_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_24cc34872:;
			{
				return _249591e19_IsI8Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_24cc348d8:;
			{
				return _24959d651_IsI16Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_24cc3494e:;
			{
				return _2495c3ab6_IsI32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_24cc34b4c:;
			{
				return _2495ca183_IsI64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_24cc34bb3:;
			{
				return _249181047_IsU8Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_24cc34c29:;
			{
				return _2491cec99_IsU16Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_24cc34c90:;
			{
				return _24925723e_IsU32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_24cc34d06:;
			{
				return _249257cab_IsU64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_24cc34d6c:;
			{
				return _249447808_IsF32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_24cc34dd3:;
			{
				return _24944893b_IsF64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_24cc34e49:;
			{
				return (_7036_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_24cc34eb0:;
			{
				return (_7036_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_24cc34399:;
			{
				return false;
			}
		}
		_match_end_24cc33b7e:;
	};
}



inline jule::Bool _249458a5b_IsI16Greater(jule::Str _11021_k) {
	return (_11021_k == jule::Str("i8", 2));
}



inline jule::Bool _2495c4028_IsI32Greater(jule::Str _11521_k) {
	return ((_11521_k == jule::Str("i8", 2)) || (_11521_k == jule::Str("i16", 3)));
}



inline jule::Bool _2491d1d45_IsI64Greater(jule::Str _12021_k) {
	return (((_12021_k == jule::Str("i8", 2)) || (_12021_k == jule::Str("i16", 3))) || (_12021_k == jule::Str("i32", 3)));
}



inline jule::Bool _249405992_IsU16Greater(jule::Str _12721_k) {
	return (_12721_k == jule::Str("u8", 2));
}



inline jule::Bool _249bc366b_IsU32Greater(jule::Str _13221_k) {
	return ((_13221_k == jule::Str("u8", 2)) || (_13221_k == jule::Str("u16", 3)));
}



inline jule::Bool _249bc379d_IsU64Greater(jule::Str _13821_k) {
	return (((_13821_k == jule::Str("u8", 2)) || (_13821_k == jule::Str("u16", 3))) || (_13821_k == jule::Str("u32", 3)));
}



inline jule::Bool _249bc38d0_IsF32Greater(jule::Str _14517_k) {
	return (_14517_k != jule::Str("f64", 3));
}



inline jule::Bool _249bc3a12_IsF64Greater(jule::Str _15017_k) {
	return true;
}



inline jule::Bool _249bc3b44_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_24cc3d46e:;
			{
				return _249bc4084_IsSigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_24cc3d4d5:;
			{
				return _249bc41b6_IsUnsigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_24cc3d54b:;
			{
				return _249bc41b6_IsUnsigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_24cc3d5b2:;
			{
				return _249458a5b_IsI16Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_24cc3d826:;
			{
				return _2495c4028_IsI32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_24cc3d88c:;
			{
				return _2491d1d45_IsI64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_24cc3d903:;
			{
				return _249405992_IsU16Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_24cc3d969:;
			{
				return _249bc366b_IsU32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_24cc3d9e1:;
			{
				return _249bc379d_IsU64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_24cc3db9a:;
			{
				return _249bc38d0_IsF32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_24cc3dc22:;
			{
				return _249bc3a12_IsF64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_24cc3dc99:;
			{
				return true;
			}
		}
		else {
			_case_begin_24cc3d408:;
			{
				return false;
			}
		}
		_match_end_24cc3d34d:;
	};
}



inline jule::Bool _249bc4084_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == jule::Str("i8", 2)) || (_2717_k == jule::Str("i16", 3))) || (_2717_k == jule::Str("i32", 3))) || (_2717_k == jule::Str("i64", 3))) || (_2717_k == jule::Str("int", 3)));
}



inline jule::Bool _249bc41b6_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == jule::Str("u8", 2)) || (_3619_k == jule::Str("u16", 3))) || (_3619_k == jule::Str("u32", 3))) || (_3619_k == jule::Str("u64", 3))) || (_3619_k == jule::Str("uint", 4))) || (_3619_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _249bc42e8_IsInt(jule::Str _4610_k) {
	return (_249bc4084_IsSigInt(_4610_k) || _249bc41b6_IsUnsigInt(_4610_k));
}



inline jule::Bool _249bc442a_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == jule::Str("f32", 3)) || (_5112_k == jule::Str("f64", 3)));
}



inline jule::Bool _249bc455c_IsNum(jule::Str _5610_k) {
	return (_249bc42e8_IsInt(_5610_k) || _249bc442a_IsFloat(_5610_k));
}



inline jule::Bool _249bc468e_IsSigNum(jule::Str _6113_k) {
	return (_249bc4084_IsSigInt(_6113_k) || _249bc442a_IsFloat(_6113_k));
}



inline void _249bc5e87_lshiftUnsig(_2491152a6_Const& _59021_c, _2491152a6_Const& _59032_x) {
	jule::U64 _5919_l = _24915c3a8_AsU64(&_59021_c);;
	jule::U64 _5929_r = _24915c3a8_AsU64(&_59032_x);;
	_24917646b_SetU64(&_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _249bc60b9_rshiftUnsig(_2491152a6_Const& _59621_c, _2491152a6_Const& _59632_x) {
	jule::U64 _5979_l = _24915c3a8_AsU64(&_59621_c);;
	jule::U64 _5989_r = _24915c3a8_AsU64(&_59632_x);;
	_24917646b_SetU64(&_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _249c50572_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);
}



inline jule::I32 _249c506a4_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_249c68502_runeFromEsqSeq(_1811_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _23a8099cb_DecodeRune(_1811_bytes);
	};
	return _2313_r;
}



inline jule::Str _249c67b94_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);
}



inline jule::Str _249c67e4c_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,_4210_bytes.len());;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_249c68843_strEsqSeq(_4210_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I64 _5421_size;;
				std::tie(_5418_r,_5421_size) = _23a8099cb_DecodeRune(_4210_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_23a80ad40_AppendRune(_4713_s,_5418_r);
			};
		}
	_iter_next_24ccb3868:;
	}
	_iter_end_24ccb3868:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _249c681e4_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	jule::U8 _6238_seq = jule::U8();
	jule::Bool _6249_ok = jule::Bool();
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6238_seq,_6249_ok);
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_24ccb86c5:;
			{
				_6238_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_24ccb874c:;
			{
				_6238_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_24ccb87c4:;
			{
				_6238_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_24ccb884b:;
			{
				_6238_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_24ccb88c3:;
			{
				_6238_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_24ccb894a:;
			{
				_6238_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_24ccb89c2:;
			{
				_6238_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_24ccb8a49:;
			{
				_6238_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_24ccb8ac1:;
			{
				_6238_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_24ccb8b48:;
			{
				_6238_seq='\v';
			}
		}
		_match_end_24ccb85a4:;
	};
	_6249_ok=(_6238_seq != 0LLU);
	return std::make_tuple(_6238_seq,_6249_ok);
}



inline jule::I32 _249c68502_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64& _9239_i) {
	jule::U8 _9310_b;;
	jule::Bool _9313_ok;;
	std::tie(_9310_b,_9313_ok) = _249c681e4_tryBtoaCommonEsq(_9219_bytes.slice(_9239_i));
	(_9239_i)++;
	if (_9313_ok) {
		(_9239_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));
	};
	{
		auto &_match_expr{ _9219_bytes[_9239_i] };
		
		if (_match_expr == 'u') {
			_case_begin_24ccbe786:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _249849b0b_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				_9239_i+=5LL;
				return _10313_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_24ccbd0c0:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _249849b0b_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				_9239_i+=9LL;
				return _10813_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_24ccbe80d:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice((_9239_i + 1LL),(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _249849b0b_ParseUint(static_cast<jule::Str>(_11313_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_24ccbd5ed:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice(_9239_i,(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _249849b0b_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));
			}
		}
		_match_end_24ccbd4dd:;
	};
}



inline jule::Slice<jule::U8> _249c68843_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64& _12434_i) {
	jule::I32 _1259_r = _249c68502_runeFromEsqSeq(_12414_bytes,_12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));
}



inline jule::I64 _249d63a3c_findFormatPrefix(jule::Slice<jule::U8>& _1022_bytes, jule::I64& _1038_start) {
	jule::I64 _1113_i = _1038_start;;
	while ((_1113_i < _1022_bytes.len())) {
		{
			jule::I32 _1314_r;;
			jule::I64 _1317_size;;
			std::tie(_1314_r,_1317_size) = _23a8099cb_DecodeRune(_1022_bytes.slice(_1113_i));
			if ((_1314_r == '{')) {
				return _1113_i;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_24cd0889c:;
	}
	_iter_end_24cd0889c:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _249d69834_getFormatRange(jule::I64& _2724_i, jule::Slice<jule::U8>& _2737_bytes) {
	jule::I64 _289_start = _2724_i;;
	jule::I64 _2913_braces = 0LL;;
	while ((_2724_i < _2737_bytes.len())) {
		{
			jule::I32 _3114_r;;
			jule::I64 _3117_size;;
			std::tie(_3114_r,_3117_size) = _23a8099cb_DecodeRune(_2737_bytes.slice(_2724_i));
			_2724_i+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_24cd0b680:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_24cd0b6e6:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return _2737_bytes.slice(_289_start,_2724_i);
						};
					}
				}
				_match_end_24cd0b2d9:;
			};
		}
	_iter_next_24cd0a805:;
	}
	_iter_end_24cd0a805:;;
	return nullptr;
}



inline void _249d69adc_FmtByDefault(jule::Str& _4722_buf, jule::Any& _4733_arg) {
	if ((_4733_arg == nullptr)) {
		_4722_buf+=jule::Str("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ _4733_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_24cd0d3a7:;
			{
				_4722_buf+=_249602be4_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>(_4733_arg.operator jule::F32())),'g',-1LL,32LL);
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_24cd0d72b:;
			{
				_4722_buf+=_249602be4_FmtFloat(static_cast<jule::F64>(_4733_arg.operator jule::F64()),'g',-1LL,64LL);
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_24cd0d561:;
			{
				_4722_buf+=_249bc26d1_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I8()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_24cd0d808:;
			{
				_4722_buf+=_249bc26d1_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I16()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_24cd0bb03:;
			{
				_4722_buf+=_249bc26d1_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I32()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_24cd0d275:;
			{
				_4722_buf+=_249bc26d1_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I64()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_24cd0d2db:;
			{
				_4722_buf+=_249bc259e_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U8()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_24cd0d880:;
			{
				_4722_buf+=_249bc259e_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U16()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_24cd0d8e6:;
			{
				_4722_buf+=_249bc259e_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U32()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_24cd0d95c:;
			{
				_4722_buf+=_249bc259e_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U64()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_24cd0d9c3:;
			{
				_4722_buf+=_4733_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_24cd0da39:;
			{
				if (_4733_arg.operator jule::Bool()) {
					_4722_buf+=jule::Str("true", 4);
				} else {
					_4722_buf+=jule::Str("false", 5);
				};
			}
		}
		else {
			_case_begin_24cd0c719:;
			{
				_4722_buf+=jule::to_str(_4733_arg);
			}
		}
		_match_end_24cd0c6b4:;
	};
}



inline void _249d69eb6_applyFmtByDefault(jule::Str& _8627_buf, jule::I64& _8642_j, jule::Slice<jule::Any>& _8651_args) {
	jule::Any _879_arg = _8651_args[_8642_j];;
	(_8642_j)++;
	_249d69adc_FmtByDefault(_8627_buf,_879_arg);
}



inline void _249d6a3b2_applyFmt(jule::Slice<jule::U8>& _9418_fmt, jule::Str& _9436_buf, jule::I64& _9451_j, jule::Slice<jule::Any>& _9460_args) {
	if ((_9418_fmt.len() == 2LL)) {
		_249d69eb6_applyFmtByDefault(_9436_buf,_9451_j,_9460_args);
		return;;
	};
	if (((_9418_fmt.len() == 4LL) && (_9418_fmt == jule::Slice<jule::U8>::make({'{','{','}','}'})))) {
		_9436_buf+=jule::Str("{}", 2);
		return;;
	};
	_23a829aa6_PushToStrBuffer(_9436_buf,_9418_fmt);
}



inline jule::Str _249d6a6c0_Format(jule::Str& _10912_fmt, jule::Slice<jule::Any> _10922_args) {
	if ((_10922_args.len() == 0LL)) {
		return _10912_fmt;
	};
	jule::Slice<jule::U8> _11313_fmtBytes = _23a829457_Stobs(_10912_fmt);;
	jule::Str _11413_buf = jule::Str::alloc(0LL, _10912_fmt.len());;
	jule::I64 _11513_j = 0LL;;
	jule::I64 _11613_last = 0LL;;
	jule::I64 _11713_i = _249d63a3c_findFormatPrefix(_11313_fmtBytes,_11613_last);;
	for (; (_11713_i != -1LL); _11713_i=static_cast<jule::I64>(_249d63a3c_findFormatPrefix(_11313_fmtBytes,_11713_i))) {
		{
			_23a829aa6_PushToStrBuffer(_11413_buf,_11313_fmtBytes.slice(_11613_last,_11713_i));
			jule::Slice<jule::U8> _12017_format = _249d69834_getFormatRange(_11713_i,_11313_fmtBytes);;
			if ((_12017_format == nullptr)) {
				goto _iter_next_24cd19759;
			};
			_249d6a3b2_applyFmt(_12017_format,_11413_buf,_11513_j,_10922_args);
			if ((_11513_j >= _10922_args.len())) {
				_23a829aa6_PushToStrBuffer(_11413_buf,_11313_fmtBytes.slice(_11713_i));
				_11613_last=static_cast<jule::I64>(_11313_fmtBytes.len());
				goto _iter_end_24cd19759;
			};
			_11613_last=_11713_i;
		}
	_iter_next_24cd19759:;
	}
	_iter_end_24cd19759:;;
	if ((_11613_last < _11313_fmtBytes.len())) {
		_23a829aa6_PushToStrBuffer(_11413_buf,_11313_fmtBytes.slice(_11613_last));
	};
	return _11413_buf;
}



inline jule::Str _249d6acb9_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _249d6a6c0_Format(_3011_fmt,jule::Any(_3021_args));
}



inline jule::Bool _249bcc9c7_parameterUsesGenerics(jule::Ptr<_249bcbc4b_Param>& _37427_p, jule::Slice<jule::Ptr<_2490539a8_GenericDecl>>& _37439_generics) {
	if (_24909ab54_IsSelf(_37427_p.ptr())) {
		return false;
	};
	return _249cc7154_kindUsesGenerics(_37427_p.get()._field_Kind.get()._field_Decl.get()._field_Kind,_37439_generics);
}



inline jule::Ptr<_249cb48e4_TypeSymbol> _249bcd7b9_buildType(jule::Ptr<_2490463c4_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_249cb48e4_TypeSymbol>(_249cb48e4_TypeSymbol{._field_Decl=_9418_t, });
}



inline jule::Ptr<_249c810ca_Value> _249bcd8eb_buildExpr(jule::Ptr<_24904a8e5_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_249c810ca_Value>(_249c810ca_Value{._field_Expr=_10318_expr, });
}



inline jule::Ptr<_249caea98_TypeAlias> _249bcda2d_buildTypeAlias(jule::Ptr<_24905ca28_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_249caea98_TypeAlias>(_249caea98_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_249bcd7b9_buildType(_11223_decl.get()._field_Kind), });
}



inline jule::Ptr<_24902413d_Field> _249bcdb60_buildField(jule::Ptr<_249061114_FieldDecl> _12319_decl) {
	return jule::new_ptr<_24902413d_Field>(_24902413d_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_249bcd7b9_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});
}



inline jule::Slice<jule::Ptr<_24902413d_Field>> _249bcdc92_buildFields(jule::Slice<jule::Ptr<_249061114_FieldDecl>>& _13421_decls) {
	jule::Slice<jule::Ptr<_24902413d_Field>> _13513_fields = jule::Slice<jule::Ptr<_24902413d_Field>>::alloc(0LL,_13421_decls.len());;
	{
		auto &expr = _13421_decls;
		auto it = expr.begin();
		_iter_begin_24e7a1bb2:;
		if (it != expr.end()) {
			jule::Ptr<_249061114_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_249bcdb60_buildField(_13617_decl));;
			}
			_iter_next_24e7a1bb2:;
			++it;
			goto _iter_begin_24e7a1bb2;
		}
		_iter_end_24e7a1bb2:;
	};
	return _13513_fields;
}



inline jule::Ptr<_249036b01_Struct> _249bcddc4_buildStruct(jule::Ptr<_249061972_StructDecl> _14220_decl) {
	return jule::new_ptr<_249036b01_Struct>(_249036b01_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_249bcdc92_buildFields(_14220_decl.get()._field_Fields), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });
}



inline jule::Ptr<_249bcbc4b_Param> _249bce006_buildParam(jule::Ptr<_249056db8_ParamDecl> _15419_decl) {
	return jule::new_ptr<_249bcbc4b_Param>(_249bcbc4b_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_249bcd7b9_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});
}



inline jule::Slice<jule::Ptr<_249bcbc4b_Param>> _249bce138_buildParams(jule::Slice<jule::Ptr<_249056db8_ParamDecl>>& _16521_decls) {
	jule::Slice<jule::Ptr<_249bcbc4b_Param>> _16613_params = jule::Slice<jule::Ptr<_249bcbc4b_Param>>::alloc(0LL,_16521_decls.len());;
	{
		auto &expr = _16521_decls;
		auto it = expr.begin();
		_iter_begin_24e7a4c2b:;
		if (it != expr.end()) {
			jule::Ptr<_249056db8_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_249bce006_buildParam(_16717_decl));;
			}
			_iter_next_24e7a4c2b:;
			++it;
			goto _iter_begin_24e7a4c2b;
		}
		_iter_end_24e7a4c2b:;
	};
	return _16613_params;
}



inline jule::Ptr<_249bcba5e_RetType> _249bce26a_buildRetType(jule::Ptr<_2490494d7_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_249bcba5e_RetType>(_249bcba5e_RetType{._field_Kind=_249bcd7b9_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});
}



inline jule::Ptr<_249bcbe38_Fn> _249bce39c_buildFn(jule::Ptr<_2490581d8_FnDecl> _18316_decl) {
	return jule::new_ptr<_249bcbe38_Fn>(_249bcbe38_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_249bce26a_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_249bce138_buildParams(_18316_decl.get()._field_Params), });
}



inline jule::Slice<jule::Ptr<_249bcbe38_Fn>> _249bce4ce_buildMethods(jule::Slice<jule::Ptr<_2490581d8_FnDecl>>& _20122_decls) {
	jule::Slice<jule::Ptr<_249bcbe38_Fn>> _20213_methods = jule::Slice<jule::Ptr<_249bcbe38_Fn>>::alloc(0LL,_20122_decls.len());;
	{
		auto &expr = _20122_decls;
		auto it = expr.begin();
		_iter_begin_24e7a8adc:;
		if (it != expr.end()) {
			jule::Ptr<_2490581d8_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_249bce39c_buildFn(_20317_decl));;
			}
			_iter_next_24e7a8adc:;
			++it;
			goto _iter_begin_24e7a8adc;
		}
		_iter_end_24e7a8adc:;
	};
	return _20213_methods;
}



inline jule::Ptr<_249bd48d0_Trait> _249bce611_buildTrait(jule::Ptr<_24906207c_TraitDecl> _20919_decl) {
	return jule::new_ptr<_249bd48d0_Trait>(_249bd48d0_Trait{._field_Token=_20919_decl.get()._field_Token, ._field_Ident=_20919_decl.get()._field_Ident, ._field_Public=_20919_decl.get()._field_Public, ._field_Methods=_249bce4ce_buildMethods(_20919_decl.get()._field_Methods), });
}



inline jule::Ptr<_249bd6030_EnumItem> _249bce743_buildEnumItem(jule::Ptr<_24905e387_EnumItemDecl> _21822_decl) {
	return jule::new_ptr<_249bd6030_EnumItem>(_249bd6030_EnumItem{._field_Token=_21822_decl.get()._field_Token, ._field_Ident=_21822_decl.get()._field_Ident, ._field_Value=_249bcd8eb_buildExpr(_21822_decl.get()._field_Expr)});
}



inline jule::Slice<jule::Ptr<_249bd6030_EnumItem>> _249bce875_buildEnumItems(jule::Slice<jule::Ptr<_24905e387_EnumItemDecl>>& _22624_decls) {
	jule::Slice<jule::Ptr<_249bd6030_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_249bd6030_EnumItem>>::alloc(0LL,_22624_decls.len());;
	{
		auto &expr = _22624_decls;
		auto it = expr.begin();
		_iter_begin_24e7ab31a:;
		if (it != expr.end()) {
			jule::Ptr<_24905e387_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_249bce743_buildEnumItem(_22817_decl));;
			}
			_iter_next_24e7ab31a:;
			++it;
			goto _iter_begin_24e7ab31a;
		}
		_iter_end_24e7ab31a:;
	};
	return _22713_items;
}



inline jule::Ptr<_249bd6a25_Enum> _249bce9a7_buildEnum(jule::Ptr<_24905edb0_EnumDecl> _23418_decl) {
	return jule::new_ptr<_249bd6a25_Enum>(_249bd6a25_Enum{._field_Token=_23418_decl.get()._field_Token, ._field_Public=_23418_decl.get()._field_Public, ._field_Ident=_23418_decl.get()._field_Ident, ._field_Kind=_249bcd7b9_buildType(_23418_decl.get()._field_Kind), ._field_Items=_249bce875_buildEnumItems(_23418_decl.get()._field_Items)});
}



inline jule::Ptr<_249bd7a59_TypeEnumItem> _249bced1a_buildTypeEnumItem(jule::Ptr<_2490608b6_TypeEnumItemDecl> _24426_decl) {
	return jule::new_ptr<_249bd7a59_TypeEnumItem>(_249bd7a59_TypeEnumItem{._field_Token=_24426_decl.get()._field_Token, ._field_Ident=_24426_decl.get()._field_Ident, ._field_Kind=_249bcd7b9_buildType(_24426_decl.get()._field_Kind)});
}



inline jule::Slice<jule::Ptr<_249bd7a59_TypeEnumItem>> _249bcee4c_buildTypeEnumItems(jule::Slice<jule::Ptr<_2490608b6_TypeEnumItemDecl>>& _25228_decls) {
	jule::Slice<jule::Ptr<_249bd7a59_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_249bd7a59_TypeEnumItem>>::alloc(0LL,_25228_decls.len());;
	{
		auto &expr = _25228_decls;
		auto it = expr.begin();
		_iter_begin_24e7adcac:;
		if (it != expr.end()) {
			jule::Ptr<_2490608b6_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_249bced1a_buildTypeEnumItem(_25417_decl));;
			}
			_iter_next_24e7adcac:;
			++it;
			goto _iter_begin_24e7adcac;
		}
		_iter_end_24e7adcac:;
	};
	return _25313_items;
}



inline jule::Ptr<_249bd8120_TypeEnum> _249bd007e_buildTypeEnum(jule::Ptr<_249060ab4_TypeEnumDecl> _26022_decl) {
	return jule::new_ptr<_249bd8120_TypeEnum>(_249bd8120_TypeEnum{._field_Token=_26022_decl.get()._field_Token, ._field_Public=_26022_decl.get()._field_Public, ._field_Ident=_26022_decl.get()._field_Ident, ._field_Items=_249bcee4c_buildTypeEnumItems(_26022_decl.get()._field_Items)});
}



inline jule::Ptr<_249c3702b_Var> _249bd01b1_buildVar(jule::Ptr<_2490591b7_VarDecl> _26917_decl) {
	return jule::new_ptr<_249c3702b_Var>(_249c3702b_Var{._field_Token=_26917_decl.get()._field_Token, ._field_Ident=_26917_decl.get()._field_Ident, ._field_CppLinked=_26917_decl.get()._field_CppLinked, ._field_Constant=_26917_decl.get()._field_Constant, ._field_Mutable=_26917_decl.get()._field_Mutable, ._field_Public=_26917_decl.get()._field_Public, ._field_Statically=_26917_decl.get()._field_Statically, ._field_Reference=_26917_decl.get()._field_Reference, ._field_Kind=_249bcd7b9_buildType(_26917_decl.get()._field_Kind), ._field_Value=_249bcd8eb_buildExpr(_26917_decl.get()._field_Expr), ._field_Refers=static__249bccec2_new(), ._field_Directives=_26917_decl.get()._field_Directives, });
}



inline jule::Slice<jule::Ptr<_249c3702b_Var>> _249bd02e3_buildVars(jule::Slice<jule::Ptr<_2490591b7_VarDecl>> _28618_decls) {
	jule::Slice<jule::Ptr<_249c3702b_Var>> _28713_vars = jule::Slice<jule::Ptr<_249c3702b_Var>>::alloc(0LL,_28618_decls.len());;
	{
		auto &expr = _28618_decls;
		auto it = expr.begin();
		_iter_begin_24e7b2332:;
		if (it != expr.end()) {
			jule::Ptr<_2490591b7_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_249bd01b1_buildVar(_28817_decl));;
			}
			_iter_next_24e7b2332:;
			++it;
			goto _iter_begin_24e7b2332;
		}
		_iter_end_24e7b2332:;
	};
	return _28713_vars;
}



inline jule::Ptr<_249bdc5ca_Impl> _249bd0425_buildImpl(jule::Ptr<_249062687_Impl> _29418_decl) {
	return jule::new_ptr<_249bdc5ca_Impl>(_249bdc5ca_Impl{._field_Base=_29418_decl.get()._field_Base, ._field_Dest=_29418_decl.get()._field_Dest, ._field_Methods=_249bce4ce_buildMethods(_29418_decl.get()._field_Methods), ._field_Statics=_249bd02e3_buildVars(_29418_decl.get()._field_Statics)});
}



inline jule::Bool _249bdb970_matchConstraint(jule::Str& _14221_c, jule::Ptr<_249cb078b_TypeKind>& _14234_g) {
	{
		auto &_match_expr{ _14221_c };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_24e827ee1:;
			{
				jule::Ptr<_249cb5263_Prim> _14513_prim = _249cb289d_Prim(_14234_g.ptr());;
				if ((_14513_prim == nullptr)) {
					return false;
				};
				return _249bc468e_IsSigNum(_14513_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_24e828057:;
			{
				jule::Ptr<_249cb5263_Prim> _15113_prim = _249cb289d_Prim(_14234_g.ptr());;
				if ((_15113_prim == nullptr)) {
					return false;
				};
				return _249bc41b6_IsUnsigInt(_15113_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_24e8280bd:;
			{
				jule::Ptr<_249cb5263_Prim> _15713_prim = _249cb289d_Prim(_14234_g.ptr());;
				if ((_15713_prim == nullptr)) {
					return false;
				};
				return _249bc442a_IsFloat(_15713_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_24e828134:;
			{
				jule::Ptr<_249cb5263_Prim> _16313_prim = _249cb289d_Prim(_14234_g.ptr());;
				if ((_16313_prim == nullptr)) {
					return false;
				};
				return _249bc455c_IsNum(_16313_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_24e8282aa:;
			{
				return _249cb1b88_Mutable(_14234_g.ptr());
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_24e828321:;
			{
				return (!(_249cb1b88_Mutable(_14234_g.ptr())));
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_24e828387:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_24e8283ed:;
			{
				jule::Ptr<_249cb5263_Prim> _17513_prim = _249cb289d_Prim(_14234_g.ptr());;
				if ((_17513_prim != nullptr)) {
					return (_249bc455c_IsNum(_17513_prim.get()._field_Kind) || _249cb8497_IsStr(_17513_prim.ptr()));
				};
				if ((_249cb2d76_Ptr(_14234_g.ptr()) != nullptr)) {
					return true;
				};
				jule::Ptr<_249062e4b_StructIns> _18213_s = _249cb3d00_Struct(_14234_g.ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));
				};
				jule::Ptr<_249bd6a25_Enum> _18913_enm = _249cb30da_Enum(_14234_g.ptr());;
				if ((_18913_enm != nullptr)) {
					return _249bc455c_IsNum(_249cb0b87_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));
				};
				return false;
			}
		}
		else {
			_case_begin_24e827386:;
			{
				return false;
			}
		}
		_match_end_24e827232:;
	};
}



inline jule::Bool _249bdbc5b_isBuiltinConstraint(jule::Str& _19925_ident) {
	{
		auto &expr = _249bd9de1_builtinConstraints;
		auto it = expr.begin();
		_iter_begin_24e832d64:;
		if (it != expr.end()) {
			jule::Str &_20012_bc = *it;
			{
				if ((_19925_ident == _20012_bc)) {
					return true;
				};
			}
			_iter_next_24e832d64:;
			++it;
			goto _iter_begin_24e832d64;
		}
		_iter_end_24e832d64:;
	};
	return false;
}



inline jule::Ptr<_249be9296_scopeChecker> _249bde665_newScopeCheckerBase(jule::Ptr<_249c192c7_Sema>& _5929_s, jule::Ptr<_249bcc312_FnIns> _5943_owner) {
	return jule::new_ptr<_249be9296_scopeChecker>(_249be9296_scopeChecker{._field_s=_5929_s, ._field_owner=_5943_owner, ._field_table=jule::new_ptr<_249c7a228_SymbolTable>(), });
}



inline jule::Ptr<_249be9296_scopeChecker> _249bde9ea_newScopeChecker(jule::Ptr<_249c192c7_Sema>& _6725_s, jule::Ptr<_249bcc312_FnIns> _6739_owner) {
	jule::Ptr<_249be9296_scopeChecker> _6813_base = _249bde665_newScopeCheckerBase(_6725_s,_6739_owner);;
	_6813_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_249be800e_scopeLabel>>>(nullptr);
	_6813_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_249be8482_scopeGoto>>>(nullptr);
	return _6813_base;
}



inline jule::Ptr<_249be800e_scopeLabel> _249bded3b_findLabelParent(jule::Str _7720_ident, jule::Ptr<_249be9296_scopeChecker> _7736_scope) {
	jule::Ptr<_249be800e_scopeLabel> _7813_label = _249becc39_findLabelScope(_7736_scope, _7720_ident);;
	while ((_7813_label == nullptr)) {
		{
			if (((_7736_scope.get()._field_parent == nullptr) || (_7736_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_7736_scope=_7736_scope.get()._field_parent;
			_7813_label=_249becc39_findLabelScope(_7736_scope, _7720_ident);
		}
	_iter_next_24e8498e7:;
	}
	_iter_end_24e8498e7:;;
	return _7813_label;
}



inline jule::Bool _249be01c1_modelIsGotoScope(jule::Any _9121_Model, jule::Ptr<_249be2635_Scope>& _9134_sc) {
	{
		auto &_match_expr{ _9121_Model };
		
		if (_match_expr.type_is<jule::Ptr<_249bc7065_FnCallExprModel>>()) {
			_case_begin_24e84b245:;
			{
				jule::Ptr<_249bc7065_FnCallExprModel> _9413_fcem = _9121_Model.operator jule::Ptr<_249bc7065_FnCallExprModel>();;
				if ((_9413_fcem.get()._field_Except == _9134_sc)) {
					return true;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249c80052_Data>>()) {
			_case_begin_24e84b2bc:;
			{
				jule::Ptr<_249c80052_Data> _9913_d = _9121_Model.operator jule::Ptr<_249c80052_Data>();;
				return _249be01c1_modelIsGotoScope(jule::Any(_9913_d.get()._field_Model),_9134_sc);
			}
		}
		_match_end_24e849c27:;
	};
	return false;
}



inline jule::Bool _249be0512_stmtIsGotoScope(jule::Any& _10521_stmt, jule::Ptr<_249be2635_Scope>& _10534_sc) {
	{
		auto &_match_expr{ _10521_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_249be2635_Scope>>()) {
			_case_begin_24e84d489:;
			{
				return (_10521_stmt.operator jule::Ptr<_249be2635_Scope>() == _10534_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be347c_InfIter>>()) {
			_case_begin_24e84d500:;
			{
				return (_10521_stmt.operator jule::Ptr<_249be347c_InfIter>().get()._field_Scope == _10534_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be42d5_RangeIter>>()) {
			_case_begin_24e84d566:;
			{
				jule::Ptr<_249be42d5_RangeIter> _11213_it = _10521_stmt.operator jule::Ptr<_249be42d5_RangeIter>();;
				return ((_11213_it.get()._field_Scope == _10534_sc) || _249be01c1_modelIsGotoScope(jule::Any(_11213_it.get()._field_Expr.get()._field_Model),_10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be3900_WhileIter>>()) {
			_case_begin_24e84d5cc:;
			{
				jule::Ptr<_249be3900_WhileIter> _11513_it = _10521_stmt.operator jule::Ptr<_249be3900_WhileIter>();;
				return (((_11513_it.get()._field_Scope == _10534_sc) || _249be01c1_modelIsGotoScope(jule::Any(_11513_it.get()._field_Expr),_10534_sc)) || _249be01c1_modelIsGotoScope(jule::Any(_11513_it.get()._field_Next),_10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be6381_Match>>()) {
			_case_begin_24e84d753:;
			{
				jule::Ptr<_249be6381_Match> _12013_m = _10521_stmt.operator jule::Ptr<_249be6381_Match>();;
				{
					auto &expr = _12013_m.get()._field_Cases;
					auto it = expr.begin();
					_iter_begin_24e852537:;
					if (it != expr.end()) {
						jule::Ptr<_249be6dcb_Case> &_12116_c = *it;
						{
							if ((_12116_c.get()._field_Scope == _10534_sc)) {
								return true;
							};
							{
								auto &expr = _12116_c.get()._field_Exprs;
								auto it = expr.begin();
								_iter_begin_24e8533d4:;
								if (it != expr.end()) {
									jule::Ptr<_249c80052_Data> &_12520_expr = *it;
									{
										if (_249be01c1_modelIsGotoScope(jule::Any(_12520_expr.get()._field_Model),_10534_sc)) {
											return true;
										};
									}
									_iter_next_24e8533d4:;
									++it;
									goto _iter_begin_24e8533d4;
								}
								_iter_end_24e8533d4:;
							};
						}
						_iter_next_24e852537:;
						++it;
						goto _iter_begin_24e852537;
					}
					_iter_end_24e852537:;
				};
				return ((_12013_m.get()._field_Default != nullptr) && (_12013_m.get()._field_Default.get()._field_Scope == _10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249be3191_Conditional>>()) {
			_case_begin_24e84d7b9:;
			{
				jule::Ptr<_249be3191_Conditional> _13313_c = _10521_stmt.operator jule::Ptr<_249be3191_Conditional>();;
				{
					auto &expr = _13313_c.get()._field_Elifs;
					auto it = expr.begin();
					_iter_begin_24e854c98:;
					if (it != expr.end()) {
						jule::Ptr<_249be2a31_If> &_13416_elif = *it;
						{
							if (((_13416_elif.get()._field_Scope == _10534_sc) || _249be01c1_modelIsGotoScope(jule::Any(_13416_elif.get()._field_Expr),_10534_sc))) {
								return true;
							};
						}
						_iter_next_24e854c98:;
						++it;
						goto _iter_begin_24e854c98;
					}
					_iter_end_24e854c98:;
				};
				return ((_13313_c.get()._field_Default != nullptr) && (_13313_c.get()._field_Default.get()._field_Scope == _10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249c80052_Data>>()) {
			_case_begin_24e84d830:;
			{
				jule::Ptr<_249c80052_Data> _14113_d = _10521_stmt.operator jule::Ptr<_249c80052_Data>();;
				return _249be01c1_modelIsGotoScope(jule::Any(_14113_d.get()._field_Model),_10534_sc);
			}
		}
		else {
			_case_begin_24e84b751:;
			{
				return false;
			}
		}
		_match_end_24e84b652:;
	};
}



inline jule::I64 _249be0853_countMatchType(jule::Ptr<_249be6381_Match>& _14820_m, jule::Ptr<_249cb078b_TypeKind>& _14832_t) {
	jule::I64 _14913_n = 0LL;;
	jule::Str _1509_kind = _249cb0b87_Str(_14832_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14820_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_24e857608:;
		if (it != expr.end()) {
			jule::Ptr<_249be6dcb_Case> &_15212_c = *it;
			{
				if ((_15212_c == nullptr)) {
					goto _iter_next_24e857608;
				};
				{
					auto &expr = _15212_c.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_24e858b8c:;
					if (it != expr.end()) {
						jule::Ptr<_249c80052_Data> &_15716_expr = *it;
						{
							if ((_15716_expr == nullptr)) {
								goto _iter_end_24e857608;
							};
							if ((_1509_kind == _249cb0b87_Str(_15716_expr.get()._field_Model.operator jule::Ptr<_249cb078b_TypeKind>().ptr()))) {
								(_14913_n)++;
							};
						}
						_iter_next_24e858b8c:;
						++it;
						goto _iter_begin_24e858b8c;
					}
					_iter_end_24e858b8c:;
				};
			}
			_iter_next_24e857608:;
			++it;
			goto _iter_begin_24e857608;
		}
		_iter_end_24e857608:;
	};
	return _14913_n;
}



inline jule::Slice<jule::Ptr<_249c80052_Data>> _249be0aea_getDatasFromTupleData(jule::Ptr<_249c80052_Data>& _17231_d) {
	if ((_249cb453c_Tup(_17231_d.get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17231_d.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_249bc8c8c_TupleExprModel>>()) {
				_case_begin_24e85cb2a:;
				{
					return _17231_d.get()._field_Model.operator jule::Ptr<_249bc8c8c_TupleExprModel>().get()._field_Datas;
				}
			}
			else {
				_case_begin_24e85a452:;
				{
					jule::Ptr<_249cb9ed2_Tuple> _17821_t = _249cb453c_Tup(_17231_d.get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_249c80052_Data>> _17921_r = jule::Slice<jule::Ptr<_249c80052_Data>>::alloc(0LL,_17821_t.get()._field_Types.len());;
					{
						auto &expr = _17821_t.get()._field_Types;
						auto it = expr.begin();
						_iter_begin_24e85b585:;
						if (it != expr.end()) {
							jule::Ptr<_249cb078b_TypeKind> _18025_kind = *it;
							{
								_17921_r = jule::alloc_for_append(_17921_r,1);_17921_r.__push(jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=_18025_kind, ._field_Mutable=true, }));;
							}
							_iter_next_24e85b585:;
							++it;
							goto _iter_begin_24e85b585;
						}
						_iter_end_24e85b585:;
					};
					return _17921_r;
				}
			}
			_match_end_24e85a62d:;
		};
	} else {
		return jule::Slice<jule::Ptr<_249c80052_Data>>::make({_17231_d});
	};
}



inline jule::Bool _249be1436_checkMut(jule::Ptr<_249c192c7_Sema>& _20718_s, jule::Ptr<_249c80052_Data>& _20729_left, jule::Ptr<_249c80052_Data> _20746_right, jule::Ptr<_23abd3d83_Token> _20760_op) {
	jule::Bool _20774_ok = jule::Bool();
	{
		
		if ((!(_20729_left.get()._field_Mutable))) {
			_case_begin_24e861304:;
			{
				_249c1be89_pushErr(_20718_s.ptr(), _20760_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_20774_ok = false;
				return _20774_ok;
			}
		}
		else if ((((_20746_right != nullptr) && (!(_20746_right.get()._field_Mutable))) && _249cb1b88_Mutable(_20746_right.get()._field_Kind.ptr()))) {
			_case_begin_24e861436:;
			{
				if (((_20760_op.get()._field_Kind != jule::Str("=", 1)) && (_249cb3d00_Struct(_20746_right.get()._field_Kind.ptr()) != nullptr))) {
					_20774_ok = true;
					return _20774_ok;
				};
				_249c1be89_pushErr(_20718_s.ptr(), _20760_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_20746_right.get()._field_Kind.ptr()))}));
				_20774_ok = false;
				return _20774_ok;
			}
		}
		else {
			_case_begin_24e860bc7:;
			{
				_20774_ok = true;
				return _20774_ok;
			}
		}
		_match_end_24e860aea:;
	};
}



inline jule::Bool _249be18ba_checkAssign(jule::Ptr<_249c192c7_Sema>& _22621_s, jule::Ptr<_249c80052_Data>& _22636_left, jule::Ptr<_249c80052_Data> _22653_right, jule::Ptr<_23abd3d83_Token> _22667_op) {
	jule::Bool _22681_ok = jule::Bool();
	jule::Ptr<_249bcc312_FnIns> _2279_f = _249cb3a8b_Fn(_22636_left.get()._field_Kind.ptr());;
	if ((((_2279_f != nullptr) && (_2279_f.get()._field_Decl != nullptr)) && _2279_f.get()._field_Decl.get()._field_Global)) {
		_249c1be89_pushErr(_22621_s.ptr(), _22667_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_22681_ok = false;
		return _22681_ok;
	};
	{
		
		if (_249c80915_IsConst(_22636_left.ptr())) {
			_case_begin_24e86687b:;
			{
				_249c1be89_pushErr(_22621_s.ptr(), _22667_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_249c1c2a8_pushSugggestion(_22621_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else if ((!(_22636_left.get()._field_Lvalue))) {
			_case_begin_24e86697a:;
			{
				_249c1be89_pushErr(_22621_s.ptr(), _22667_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else if ((!(_249be1436_checkMut(_22621_s,_22636_left,_22653_right,_22667_op)))) {
			_case_begin_24e866a02:;
			{
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else {
			_case_begin_24e86622c:;
			{
				_22681_ok = true;
				return _22681_ok;
			}
		}
		_match_end_24e8660c8:;
	};
}



inline jule::Bool _249be1b62_isValidAstStForNextSt(jule::Any& _24831_n) {
	{
		auto &_match_expr{ _24831_n };
		
		if (_match_expr.type_is<jule::Ptr<_24905514c_AssignSt>>()) {
			_case_begin_24e868dde:;
			{
				return (!(_24831_n.operator jule::Ptr<_24905514c_AssignSt>().get()._field_Declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904a8e5_Expr>>()) {
			_case_begin_24e868e55:;
			{
				return true;
			}
		}
		else {
			_case_begin_24e86852b:;
			{
				return false;
			}
		}
		_match_end_24e868a37:;
	};
}



inline jule::Bool _249be1e09_isValidStForNextSt(jule::Any& _25924_st) {
	{
		auto &_match_expr{ _25924_st };
		
		if (_match_expr.type_is<jule::Ptr<_249be5517_Postfix>>() || _match_expr.type_is<jule::Ptr<_249be598a_Assign>>() || _match_expr.type_is<jule::Ptr<_249be5d42_MultiAssign>>()) {
			_case_begin_24e86a055:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249c80052_Data>>()) {
			_case_begin_24e86a0bb:;
			{
				{
					auto &_match_expr{ _25924_st.operator jule::Ptr<_249c80052_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_249bc7065_FnCallExprModel>>()) {
						_case_begin_24e86b463:;
						{
							return true;
						}
					}
					else {
						_case_begin_24e86ac7b:;
						{
							return false;
						}
					}
					_match_end_24e86aa39:;
				};
			}
		}
		else {
			_case_begin_24e869197:;
			{
				return false;
			}
		}
		_match_end_24e869131:;
	};
}



inline jule::Bool _249be21a1_stmtIsDef(jule::Any& _27715_st) {
	{
		auto &_match_expr{ _27715_st };
		
		if (_match_expr.type_is<jule::Ptr<_249c3702b_Var>>()) {
			_case_begin_24e86ba29:;
			{
				return true;
			}
		}
		else {
			_case_begin_24e86a40c:;
			{
				return false;
			}
		}
		_match_end_24e86a3a7:;
	};
}



inline jule::Ptr<_249c3702b_Var> _249c0d893_findVarInPackage(jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>& _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto &expr = _4626_files;
		auto it = expr.begin();
		_iter_begin_24e9bc5c5:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_249c3702b_Var> _4817_v = _249c7ae0a_FindVar(_4717_f.ptr(), _4649_ident,_4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_24e9bc5c5:;
			++it;
			goto _iter_begin_24e9bc5c5;
		}
		_iter_end_24e9bc5c5:;
	};
	return nullptr;
}



inline jule::Ptr<_249caea98_TypeAlias> _249c0dcc2_findTypeAliasInPackage(jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>& _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto &expr = _5832_files;
		auto it = expr.begin();
		_iter_begin_24e9bd53d:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_249caea98_TypeAlias> _6017_ta = _249c7b2b2_FindTypeAlias(_5917_f.ptr(), _5855_ident,_5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_24e9bd53d:;
			++it;
			goto _iter_begin_24e9bd53d;
		}
		_iter_end_24e9bd53d:;
	};
	return nullptr;
}



inline jule::Ptr<_249036b01_Struct> _249c0e1ac_findStructInPackage(jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>& _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto &expr = _7029_files;
		auto it = expr.begin();
		_iter_begin_24e9beb9e:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_249036b01_Struct> _7217_s = _249c7b669_FindStruct(_7117_f.ptr(), _7052_ident,_7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_24e9beb9e:;
			++it;
			goto _iter_begin_24e9beb9e;
		}
		_iter_end_24e9beb9e:;
	};
	return nullptr;
}



inline jule::Ptr<_249bcbe38_Fn> _249c0e61e_findFnInPackage(jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>& _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto &expr = _8225_files;
		auto it = expr.begin();
		_iter_begin_24e9c1310:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_249bcbe38_Fn> _8417_f = _249c7ba21_FindFn(_8317_file.ptr(), _8248_ident,_8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_24e9c1310:;
			++it;
			goto _iter_begin_24e9c1310;
		}
		_iter_end_24e9c1310:;
	};
	return nullptr;
}



inline jule::Ptr<_249bd48d0_Trait> _249c0e92c_findTraitInPackage(jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>& _9428_files, jule::Str _9451_ident) {
	{
		auto &expr = _9428_files;
		auto it = expr.begin();
		_iter_begin_24e9c2179:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_249bd48d0_Trait> _9617_t = _249c7bd2e_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_24e9c2179:;
			++it;
			goto _iter_begin_24e9c2179;
		}
		_iter_end_24e9c2179:;
	};
	return nullptr;
}



inline jule::Ptr<_249bd6a25_Enum> _249c0ec6d_findEnumInPackage(jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>& _10627_files, jule::Str _10650_ident) {
	{
		auto &expr = _10627_files;
		auto it = expr.begin();
		_iter_begin_24e9c43bd:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_249bd6a25_Enum> _10817_e = _249c7c13c_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_24e9c43bd:;
			++it;
			goto _iter_begin_24e9c43bd;
		}
		_iter_end_24e9c43bd:;
	};
	return nullptr;
}



inline jule::Ptr<_249bd8120_TypeEnum> _249c100ae_findTypeEnumInPackage(jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>& _11831_files, jule::Str _11854_ident) {
	{
		auto &expr = _11831_files;
		auto it = expr.begin();
		_iter_begin_24e9c5842:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_249bd8120_TypeEnum> _12017_e = _249c7c44a_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;
				};
			}
			_iter_next_24e9c5842:;
			++it;
			goto _iter_begin_24e9c5842;
		}
		_iter_end_24e9c5842:;
	};
	return nullptr;
}



inline jule::Any _249c105a9_defByIdentPackage(jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>& _12927_files, jule::Str& _12951_ident, jule::Bool _12963_cppLinked) {
	{
		auto &expr = _12927_files;
		auto it = expr.begin();
		_iter_begin_24e9c6ed6:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _249c7d2c5_defByIdent(_13017_file.ptr(), _12951_ident,_12963_cppLinked);;
				if ((_13117_def != nullptr)) {
					return jule::Any(_13117_def);
				};
			}
			_iter_next_24e9c6ed6:;
			++it;
			goto _iter_begin_24e9c6ed6;
		}
		_iter_end_24e9c6ed6:;
	};
	return nullptr;
}



inline jule::Bool _249c166ae_isStdPackage(jule::Str _36117_f, jule::Str _36125_p) {
	return _23a82a128_HasPrefix(_36117_f,_23988a9b4_Join(jule::Slice<jule::Str>::make({_23a8de9d4_PathStdlib,_36125_p})));
}



inline jule::Bool _249c17418_isValidModelForRef(jule::Any& _1228_m) {
	{
		auto &_match_expr{ _1228_m };
		
		if (_match_expr.type_is<jule::Ptr<_249c3702b_Var>>()) {
			_case_begin_24e9d98bc:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc82ec_StructSubIdentExprModel>>()) {
			_case_begin_24e9d9328:;
			{
				jule::Ptr<_249bc82ec_StructSubIdentExprModel> _1717_model = _1228_m.operator jule::Ptr<_249bc82ec_StructSubIdentExprModel>();;
				return _249c17418_isValidModelForRef(_1717_model.get()._field_Expr.get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc7dce_TraitSubIdentExprModel>>()) {
			_case_begin_24e9d938e:;
			{
				jule::Ptr<_249bc7dce_TraitSubIdentExprModel> _2017_model = _1228_m.operator jule::Ptr<_249bc7dce_TraitSubIdentExprModel>();;
				return _249c17418_isValidModelForRef(_2017_model.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc65c5_UnaryExprModel>>()) {
			_case_begin_24e9d9405:;
			{
				jule::Ptr<_249bc65c5_UnaryExprModel> _2317_unary = _1228_m.operator jule::Ptr<_249bc65c5_UnaryExprModel>();;
				if ((_2317_unary.get()._field_Op.get()._field_Kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_249cb2d76_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_249cb2b12_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;
				};
				return _249c17418_isValidModelForRef(_2317_unary.get()._field_Expr.get()._field_Model);
			}
		}
		else {
			_case_begin_24e9d8b52:;
			{
				return false;
			}
		}
		_match_end_24e9d8e1b:;
	};
}



inline _23a8a5ca8_Log _249c178ad_compilerErr(jule::Ptr<_23abd3d83_Token>& _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_23a8a5ca8_Log _4213_log = _23a8a5ca8_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_4117_token.get()._field_Row, ._field_Column=_4117_token.get()._field_Column, ._field_Path=_4117_token.get()._field_File.get()._field_Path, ._field_Text=_23a8a61e8_Logf(_4144_fmt,jule::Any(_4157_args)), };;
	if (_4132_line) {
		_4213_log._field_Line=_23abda3ea_GetRow(_4117_token.get()._field_File.ptr(), _4117_token.get()._field_Row);
	};
	return _4213_log;
}



inline jule::Bool _249c17bee_impIsLookupable(jule::Ptr<_249c1117b_ImportInfo>& _5521_i, jule::Str _5537_ident) {
	if (_5521_i.get()._field_CppLinked) {
		return false;
	};
	if ((!(_5521_i.get()._field_ImportAll))) {
		if ((_5521_i.get()._field_Selected.len() > 0LL)) {
			return _249c13a52_existIdent(_5521_i.ptr(), _5537_ident);
		};
	};
	return _5521_i.get()._field_ImportAll;
}



inline void _249c17eeb_appendRetVars(jule::Slice<jule::Ptr<_249c3702b_Var>>& _6723_dest, jule::Ptr<_249bcc312_FnIns>& _6742_f) {
	if ((_2490aaa43_IsVoid(_6742_f.get()._field_Decl.ptr()) || (_6742_f.get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_249cb078b_TypeKind>> _7213_types = _2490ca227_Types(_6742_f.ptr());;
	{
		auto &expr = _6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_24e9e3167:;
		if (it != expr.end()) {
			jule::I64 _7310_i = it - expr.begin();
			jule::Ptr<_23abd3d83_Token> _7317_ident = *it;
			{
				if ((_23abd6627_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _23abd68be_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_24e9e3167;
				};
				_6723_dest = jule::alloc_for_append(_6723_dest,1);_6723_dest.__push(jule::new_ptr<_249c3702b_Var>(_249c3702b_Var{._field_Scope=_6742_f.get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_249cb48e4_TypeSymbol>(_249cb48e4_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_249c810ca_Value>(_249c810ca_Value{._field_Data=jule::new_ptr<_249c80052_Data>()}), }));;
			}
			_iter_next_24e9e3167:;
			++it;
			_7310_i++;
			goto _iter_begin_24e9e3167;
		}
		_iter_end_24e9e3167:;
	};
}



inline void _249c182a4_appendParamVars(jule::Slice<jule::Ptr<_249c3702b_Var>>& _9325_dest, jule::Ptr<_249bcc312_FnIns>& _9344_f) {
	if ((_9344_f.get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9344_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_24e9e4c90:;
		if (it != expr.end()) {
			jule::Ptr<_249bcc125_ParamIns> _9817_p = *it;
			{
				if ((_23abd6627_IsIgnoreIdent(_9817_p.get()._field_Decl.get()._field_Ident) || _23abd68be_IsAnonIdent(_9817_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_24e9e4c90;
				};
				jule::Ptr<_249c3702b_Var> _10317_v = jule::new_ptr<_249c3702b_Var>(_249c3702b_Var{._field_Scope=_9344_f.get()._field_Scope, ._field_Token=_9817_p.get()._field_Decl.get()._field_Token, ._field_Ident=_9817_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_9817_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_9817_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_249cb48e4_TypeSymbol>(), ._field_Value=jule::new_ptr<_249c810ca_Value>(_249c810ca_Value{._field_Data=jule::new_ptr<_249c80052_Data>()}), });;
				{
					
					if (_24909ab54_IsSelf(_9817_p.get()._field_Decl.ptr())) {
						_case_begin_24e9e90e6:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_249cb035c_Kind>(_9344_f.get()._field_Owner, 0)});
							_10317_v.get()._field_Reference=(!(_24909be1e_IsRef(_9817_p.get()._field_Decl.ptr())));
							if (_24909be1e_IsRef(_9817_p.get()._field_Decl.ptr())) {
								_10317_v.get()._field_Ident=_10317_v.get()._field_Ident.slice(1LL);
								_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_249cb035c_Kind>(jule::new_ptr<_249cb89e7_Sptr>(_249cb89e7_Sptr{._field_Elem=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_CppIdent=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_9817_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_24e9e9338:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_249cb035c_Kind>(jule::new_ptr<_249cb9454_Slc>(_249cb9454_Slc{._field_Elem=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_CppIdent=_9817_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_9817_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_24e9e692e:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=_9817_p.get()._field_Kind;
						}
					}
					_match_end_24e9e8a52:;
				};
				_9325_dest = jule::alloc_for_append(_9325_dest,1);_9325_dest.__push(_10317_v);;
			}
			_iter_next_24e9e4c90:;
			++it;
			goto _iter_begin_24e9e4c90;
		}
		_iter_end_24e9e4c90:;
	};
}



inline void _249c1857e_appendGenericTypeAliases(jule::Slice<jule::Ptr<_249caea98_TypeAlias>>& _15334_dest, jule::Ptr<_249bcc312_FnIns>& _15359_f) {
	jule::I64 _15413_size = _15359_f.get()._field_Generics.len();;
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_15413_size+=_15359_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15413_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15359_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_24e9ee607:;
		if (it != expr.end()) {
			jule::I64 _16310_i = it - expr.begin();
			jule::Ptr<_249cae05e_InsGeneric> _16317_g = *it;
			{
				jule::Ptr<_2490539a8_GenericDecl> _16417_decl = _15359_f.get()._field_Decl.get()._field_Generics[_16310_i];;
				_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_249caea98_TypeAlias>(_249caea98_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16417_decl.get()._field_Token, ._field_Ident=_16417_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_249cb48e4_TypeSymbol>(_249cb48e4_TypeSymbol{._field_Kind=_16317_g.get()._field_Kind}), }));;
			}
			_iter_next_24e9ee607:;
			++it;
			_16310_i++;
			goto _iter_begin_24e9ee607;
		}
		_iter_end_24e9ee607:;
	};
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_249062e4b_StructIns> _17617_owner = _15359_f.get()._field_Owner;;
		{
			auto &expr = _17617_owner.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_24ea02132:;
			if (it != expr.end()) {
				jule::I64 _17714_i = it - expr.begin();
				jule::Ptr<_249cae05e_InsGeneric> _17721_g = *it;
				{
					jule::Ptr<_2490539a8_GenericDecl> _17821_decl = _17617_owner.get()._field_Decl.get()._field_Generics[_17714_i];;
					_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_249caea98_TypeAlias>(_249caea98_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_17821_decl.get()._field_Token, ._field_Ident=_17821_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_249cb48e4_TypeSymbol>(_249cb48e4_TypeSymbol{._field_Kind=_17721_g.get()._field_Kind}), }));;
				}
				_iter_next_24ea02132:;
				++it;
				_17714_i++;
				goto _iter_begin_24ea02132;
			}
			_iter_end_24ea02132:;
		};
	};
}



inline jule::Ptr<_249c7a228_SymbolTable> _249c188d1_findFile(jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>& _19118_files, jule::Ptr<_23abd921d_File>& _19142_handler) {
	{
		auto &expr = _19118_files;
		auto it = expr.begin();
		_iter_begin_24ea02a6c:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _19217_fl = *it;
			{
				if ((_19217_fl.get()._field_File == _19142_handler)) {
					return _19217_fl;
				};
			}
			_iter_next_24ea02a6c:;
			++it;
			goto _iter_begin_24ea02a6c;
		}
		_iter_end_24ea02a6c:;
	};
	return nullptr;
}



inline void _249c18d43_pushSugggestion(_23a8a5ca8_Log* _20031_log, jule::Str _20042_fmt, jule::Slice<jule::Any> _20055_args) {
	_20031_log->_field_Suggestion=_23a8a61e8_Logf(_20042_fmt,jule::Any(_20055_args));
}



inline jule::Bool _249c5901a_traitHasReferenceReceiver(jule::Ptr<_249bd48d0_Trait>& _2631_t) {
	{
		auto &expr = _2631_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_24ed82847:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_Statically) {
					goto _iter_next_24ed82847;
				};
				jule::Ptr<_249bcbc4b_Param> _3313_p = _2712_f.get()._field_Params[0LL];;
				if ((_24909be1e_IsRef(_3313_p.ptr()) && _24909ab54_IsSelf(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_24ed82847:;
			++it;
			goto _iter_begin_24ed82847;
		}
		_iter_end_24ed82847:;
	};
	return false;
}



inline jule::Bool _249c50990_floatAssignable(jule::Str _4120_kind, jule::Ptr<_249c80052_Data>& _4132_d) {
	jule::Str _429_value = _249602be4_FmtFloat(static_cast<jule::F64>(_24916922d_AsF64(_4132_d.get()._field_Constant.ptr())),'g',-1LL,64LL);;
	return _249406135_CheckBitFloat(_429_value,static_cast<jule::I64>(_249209246_BitsizeOf(_4120_kind)));
}



inline jule::Bool _249c50ac2_sigAssignable(jule::Str _4618_kind, jule::Ptr<_249c80052_Data>& _4630_d) {
	jule::F64 _479_min = _24957c4a9_Min(_4618_kind);;
	jule::F64 _489_max = _2495852d6_Max(_4618_kind);;
	{
		
		if (_2491660d7_IsF64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_24ed8b91c:;
			{
				jule::F64 _5113_x = _2491673a2_ReadF64(_4630_d.get()._field_Constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _249b93361_Modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_249177a22_IsU64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_24ed8b983:;
			{
				jule::F64 _5813_x = _24916922d_AsF64(_4630_d.get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_24916a839_IsI64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_24ed8b9e9:;
			{
				jule::F64 _6313_x = _24916922d_AsF64(_4630_d.get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_24ed8b7b8:;
	};
	return false;
}



inline jule::Bool _249c67886_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_249c80052_Data>& _6932_d) {
	jule::F64 _709_max = _2495852d6_Max(_6920_kind);;
	if ((_6932_d.get()._field_IsRune && (_6920_kind == jule::Str("u8", 2)))) {
		return _249c50572_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_24915c551_ReadI64(_6932_d.get()._field_Constant.ptr()))));
	};
	{
		
		if (_2491660d7_IsF64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_24ed91ed8:;
			{
				jule::F64 _7713_x = _2491673a2_ReadF64(_6932_d.get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _249b93361_Modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_249177a22_IsU64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_24ed92060:;
			{
				jule::F64 _8713_x = _24916922d_AsF64(_6932_d.get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_24916a839_IsI64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_24ed920d7:;
			{
				jule::F64 _9213_x = _24916922d_AsF64(_6932_d.get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_24ed91d40:;
	};
	return false;
}



inline jule::Bool _249c679b8_intAssignable(jule::Str _9818_kind, jule::Ptr<_249c80052_Data>& _9830_d) {
	{
		
		if (_249bc4084_IsSigInt(_9818_kind)) {
			_case_begin_24ed96e77:;
			{
				return _249c50ac2_sigAssignable(_9818_kind,_9830_d);
			}
		}
		else if (_249bc41b6_IsUnsigInt(_9818_kind)) {
			_case_begin_24ed96729:;
			{
				return _249c67886_unsigAssignable(_9818_kind,_9830_d);
			}
		}
		else {
			_case_begin_24ed927e1:;
			{
				return false;
			}
		}
		_match_end_24ed92714:;
	};
}



inline jule::Ptr<_249cb078b_TypeKind> _249c7929e_lenKind(void) {
	return jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("int", 3)), 6)});
}



inline jule::Ptr<_24900cb2c_Directive> _249ca9e39_findDirective(jule::Slice<jule::Ptr<_24900cb2c_Directive>>& _403923_directives, jule::Str _403954_d) {
	{
		auto &expr = _403923_directives;
		auto it = expr.begin();
		_iter_begin_24eebc278:;
		if (it != expr.end()) {
			jule::Ptr<_24900cb2c_Directive> _404017_dr = *it;
			{
				if ((_404017_dr.get()._field_Tag.get()._field_Kind == _403954_d)) {
					return _404017_dr;
				};
			}
			_iter_next_24eebc278:;
			++it;
			goto _iter_begin_24eebc278;
		}
		_iter_end_24eebc278:;
	};
	return nullptr;
}



inline jule::Any _249caa2be_findBuiltinsImport(jule::Str _404823_ident, jule::Ptr<_249c1117b_ImportInfo> _404835_imp) {
	return jule::Any(_249cde4ac_findPackageBuiltinDef(_404835_imp.get()._field_LinkPath,_404823_ident));
}



inline void _249caa4cd_fitBitsize(jule::Ptr<_249c80052_Data>& _405520_d) {
	jule::Ptr<_249cb5263_Prim> _405613_prim = _249cb289d_Prim(_405520_d.get()._field_Kind.ptr());;
	jule::I64 _40579_z = _249209246_BitsizeOf(_249cb55c6_Str(_405613_prim.ptr()));;
	if ((_40579_z == 64LLU)) {
		return;;
	};
	jule::I64 _406213_k = 0LL;;
	{
		
		if (_24916a839_IsI64(_405520_d.get()._field_Constant.ptr())) {
			_case_begin_24eec0303:;
			{
				_406213_k=static_cast<jule::I64>(_2494cc34e_BitsizeOfInt(static_cast<jule::I64>(_24915c551_ReadI64(_405520_d.get()._field_Constant.ptr()))));
				if ((_406213_k > _40579_z)) {
					_405613_prim.get()._field_Kind=_24922d4ce_IntFromBits(_406213_k);
				};
			}
		}
		else if (_249177a22_IsU64(_405520_d.get()._field_Constant.ptr())) {
			_case_begin_24eec037a:;
			{
				_406213_k=static_cast<jule::I64>(_2494e50e2_BitsizeOfUint(static_cast<jule::U64>(_24915d73e_ReadU64(_405520_d.get()._field_Constant.ptr()))));
				if ((_406213_k > _40579_z)) {
					_405613_prim.get()._field_Kind=_2492403e2_UintFromBits(_406213_k);
				};
			}
		}
		else if (_2491660d7_IsF64(_405520_d.get()._field_Constant.ptr())) {
			_case_begin_24eec0402:;
			{
				_406213_k=static_cast<jule::I64>(_249425d25_BitsizeOfFloat(static_cast<jule::F64>(_2491673a2_ReadF64(_405520_d.get()._field_Constant.ptr()))));
				if ((_406213_k > _40579_z)) {
					_405613_prim.get()._field_Kind=_24926987d_FloatFromBits(_406213_k);
				};
			}
		}
		_match_end_24eec0237:;
	};
}



inline void _249caa7ca_makeStructLitAlloc(jule::Ptr<_249c80052_Data>& _408228_d, jule::Ptr<_249bc699e_StructLitExprModel>& _408243_lit) {
	_408228_d.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(jule::new_ptr<_249cb89e7_Sptr>(_249cb89e7_Sptr{._field_Elem=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_408243_lit.get()._field_Strct, 0)})}), 7)});
	_408228_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc6b8b_AllocStructLitExprModel>(_249bc6b8b_AllocStructLitExprModel{._field_Lit=_408243_lit}));
}



inline jule::Ptr<_249c3702b_Var> _249caab1b_buildErrorVar(jule::Ptr<_249be2635_Scope>& _409323_s, jule::Ptr<_24904ebb3_FnCallExpr>& _409339_fc) {
	return jule::new_ptr<_249c3702b_Var>(_249c3702b_Var{._field_Scope=_409323_s, ._field_Token=_409339_fc.get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_249cb48e4_TypeSymbol>(_249cb48e4_TypeSymbol{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_249c810ca_Value>(_249c810ca_Value{._field_Data=jule::new_ptr<_249c80052_Data>()}), });
}



inline jule::Any _249caae5c_findBuiltinsSema(jule::Str _411221_ident, jule::Ptr<_249c192c7_Sema> _411237_s) {
	{
		auto &expr = _411237_s.get()._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_24eec524d:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _411317_imp = *it;
			{
				if ((_411317_imp.get()._field_ImportAll || _249c13a52_existIdent(_411317_imp.ptr(), _411221_ident))) {
					jule::Any _411521_def = _249caa2be_findBuiltinsImport(_411221_ident,_411317_imp);;
					if ((_411521_def != nullptr)) {
						return jule::Any(_411521_def);
					};
				};
			}
			_iter_next_24eec524d:;
			++it;
			goto _iter_begin_24eec524d;
		}
		_iter_end_24eec524d:;
	};
	jule::Str _412313_ppath = _23abd9b14_Dir(_411237_s.get()._field_file.get()._field_File.ptr());;
	if (_23a82a128_HasPrefix(_412313_ppath,_23a8de9d4_PathStdlib)) {
		(_412313_ppath).mut_slice(_23a8de9d4_PathStdlib.len());;
		_412313_ppath=(jule::Str("std", 3) + _23a830d65_Replace(_412313_ppath,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
		return jule::Any(_249cde4ac_findPackageBuiltinDef(_412313_ppath,_411221_ident));
	};
	return nullptr;
}



inline jule::Bool _249cab204_isOkForShifting(jule::Ptr<_249c80052_Data>& _413725_d) {
	if (_249c80915_IsConst(_413725_d.ptr())) {
		{
			
			if (_24916a839_IsI64(_413725_d.get()._field_Constant.ptr())) {
				_case_begin_24eeca396:;
				{
					return (_24915c551_ReadI64(_413725_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else if (_249177a22_IsU64(_413725_d.get()._field_Constant.ptr())) {
				_case_begin_24eec9b37:;
				{
					return true;
				}
			}
			else if (_2491660d7_IsF64(_413725_d.get()._field_Constant.ptr())) {
				_case_begin_24eec9b9d:;
				{
					return (_2491673a2_ReadF64(_413725_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_24eec9ac1:;
				{
					return false;
				}
			}
			_match_end_24eec99e4:;
		};
	};
	jule::Ptr<_249cb5263_Prim> _41509_prim = _249cb289d_Prim(_413725_d.get()._field_Kind.ptr());;
	return ((_41509_prim != nullptr) && _249bc42e8_IsInt(_249cb55c6_Str(_41509_prim.ptr())));
}



inline jule::Bool _249cab5ab_isInstancedStruct(jule::Ptr<_249062e4b_StructIns> _415422_s) {
	return (_415422_s.get()._field_Decl.get()._field_Generics.len() == _415422_s.get()._field_Generics.len());
}



inline jule::Bool _249cab91e_isPtrArithmeticCompatible(jule::Ptr<_249c80052_Data>& _415835_l, jule::Ptr<_249c80052_Data>& _415850_r) {
	jule::Ptr<_249cbc05b_Ptr> _41599_ptr = _249cb2d76_Ptr(_415850_r.get()._field_Kind.ptr());;
	if ((_41599_ptr != nullptr)) {
		return _249cb0e95_Equals(_249cb2d76_Ptr(_415835_l.get()._field_Kind.ptr()).get()._field_Elem, _41599_ptr.get()._field_Elem);
	};
	if (_249c80915_IsConst(_415850_r.ptr())) {
		return _249c679b8_intAssignable(jule::Str("int", 3),_415850_r);
	};
	_249c68bea_typeCompatibilityChecker _416613_tcc = _249c68bea_typeCompatibilityChecker{._field_dest=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=_415850_r.get()._field_Kind, };;
	return _249c6a2d4_check(&_416613_tcc);
}



inline void _249cabb61_applyCastKindModel(jule::Ptr<_249c80052_Data>& _417528_d, jule::Ptr<_249cb078b_TypeKind>& _417543_t) {
	_417528_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc6d78_CastingExprModel>(_249bc6d78_CastingExprModel{._field_Expr=_417528_d.get()._field_Model, ._field_Kind=_417543_t, ._field_ExprKind=_417528_d.get()._field_Kind}));
}



inline void _249cabe19_applyCastKind(jule::Ptr<_249c80052_Data>& _418323_d, jule::Ptr<_249cb078b_TypeKind>& _418338_t) {
	_249cabb61_applyCastKindModel(_418323_d,_418338_t);
	_418323_d.get()._field_Kind=_418338_t;
}



inline jule::Ptr<_249c80052_Data> _249cac117_buildVoidData(void) {
	return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("void", 4)), 6)}), });
}



inline jule::Str _249cac3d1_checkDataForIntegerIndexing(jule::Ptr<_249c80052_Data>& _419637_d) {
	jule::Str _419649_err_fmt = jule::Str();
	if ((_419637_d == nullptr)) {
		_419649_err_fmt = jule::Str();
		return _419649_err_fmt;
	};
	{
		
		if ((_249cb289d_Prim(_419637_d.get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_24eed304c:;
			{
				_419649_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _419649_err_fmt;
			}
		}
		else if ((!(_249bc42e8_IsInt(_249cb55c6_Str(_249cb289d_Prim(_419637_d.get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_24eed30b3:;
			{
				_419649_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _419649_err_fmt;
			}
		}
		else if (_249c80915_IsConst(_419637_d.ptr())) {
			_case_begin_24eed313a:;
			{
				if ((_24916922d_AsF64(_419637_d.get()._field_Constant.ptr()) < 0LL)) {
					_419649_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _419649_err_fmt;
				};
			}
		}
		else if ((_249cb289d_Prim(_419637_d.get()._field_Kind.ptr()) == nullptr) || _249c80915_IsConst(_419637_d.ptr()) || (_249202a14_RealKindOf(_249cb55c6_Str(_249cb289d_Prim(_419637_d.get()._field_Kind.ptr()).ptr())) != _249202a14_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_24eed31b2:;
			{
				jule::Ptr<_249cb078b_TypeKind> _421317_t = jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("int", 3)), 6)});;
				_249cabe19_applyCastKind(_419637_d,_421317_t);
			}
		}
		_match_end_24eed2a1e:;
	};
	_419649_err_fmt = jule::Str();
	return _419649_err_fmt;
}



inline void _249cac69a_applyCastModelByEnum(jule::Ptr<_249c80052_Data>& _422230_d, jule::Ptr<_249bd6a25_Enum> _422244_e) {
	if ((_422244_e == nullptr)) {
		return;;
	};
	jule::Ptr<_249cb5263_Prim> _42269_p = _249cb289d_Prim(_422244_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_249cb8497_IsStr(_42269_p.ptr())) {
		return;;
	};
	_249cabb61_applyCastKindModel(_422230_d,_422244_e.get()._field_Kind.get()._field_Kind);
}



inline void _249cac953_castConstByType(jule::Str& _423321_t, jule::Ptr<_249c80052_Data>& _423334_d) {
	{
		
		if (_249bc4084_IsSigInt(_423321_t)) {
			_case_begin_24eed8ea9:;
			{
				{
					auto _match_expr{ _249209246_BitsizeOf(_249202a14_RealKindOf(_423321_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_24eed9bd0:;
						{
							_24916a0db_SetI64(_423334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_249168260_AsI64(_423334_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_24eed9c46:;
						{
							_24916a0db_SetI64(_423334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_249168260_AsI64(_423334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_24eed9cac:;
						{
							_24916a0db_SetI64(_423334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_249168260_AsI64(_423334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_24eed9d23:;
						{
							_24916a0db_SetI64(_423334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_249168260_AsI64(_423334_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_24eed9240:;
				};
			}
		}
		else if (_249bc41b6_IsUnsigInt(_423321_t)) {
			_case_begin_24eed9031:;
			{
				{
					auto _match_expr{ _249209246_BitsizeOf(_249202a14_RealKindOf(_423321_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_24eedd695:;
						{
							_24917646b_SetU64(_423334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_24915c3a8_AsU64(_423334_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_24eedd70b:;
						{
							_24917646b_SetU64(_423334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_24915c3a8_AsU64(_423334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_24eedd772:;
						{
							_24917646b_SetU64(_423334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_24915c3a8_AsU64(_423334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_24eedd7d8:;
						{
							_24917646b_SetU64(_423334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_24915c3a8_AsU64(_423334_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_24eedba5b:;
				};
			}
		}
		else if (_249bc442a_IsFloat(_423321_t)) {
			_case_begin_24eed90a8:;
			{
				{
					auto _match_expr{ _249209246_BitsizeOf(_249202a14_RealKindOf(_423321_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_24eede94e:;
						{
							_24917b828_SetF64(_423334_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_24916922d_AsF64(_423334_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_24eee6eb7:;
						{
							_24917b828_SetF64(_423334_d.get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_24916922d_AsF64(_423334_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_24eee0521:;
				};
			}
		}
		_match_end_24eed8d77:;
	};
}



inline void _249cace5e_updateModelToGenericIns(jule::Any& _426733_m, jule::Ptr<_249bcc312_FnIns>& _426752_f) {
	{
		auto &_match_expr{ _426733_m };
		
		if (_match_expr.type_is<jule::Ptr<_249bcc312_FnIns>>()) {
			_case_begin_24eee8293:;
			{
				_426733_m=static_cast<jule::Any>(_426752_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc82ec_StructSubIdentExprModel>>()) {
			_case_begin_24eee8309:;
			{
				_426733_m.operator jule::Ptr<_249bc82ec_StructSubIdentExprModel>().get()._field_Method=_426752_f;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc84d9_StructStaticIdentExprModel>>()) {
			_case_begin_24eee8370:;
			{
				_426733_m.operator jule::Ptr<_249bc84d9_StructStaticIdentExprModel>().get()._field_Method=_426752_f;
			}
		}
		_match_end_24eed962a:;
	};
}



inline jule::Bool _249cad1a1_pushSubIdentFromExpr(jule::Any _427829_expr, jule::Ptr<_2490470d9_SubIdentTypeDecl>& _427850_t) {
	{
		auto &_match_expr{ _427829_expr };
		
		if (_match_expr.type_is<jule::Ptr<_24904c95d_IdentExpr>>()) {
			_case_begin_24eeeabbe:;
			{
				jule::Ptr<_24904c95d_IdentExpr> _428117_e = _427829_expr.operator jule::Ptr<_24904c95d_IdentExpr>();;
				_427850_t.get()._field_Idents = jule::alloc_for_append(_427850_t.get()._field_Idents,1);_427850_t.get()._field_Idents.__push(jule::new_ptr<_24904698a_IdentTypeDecl>(_24904698a_IdentTypeDecl{._field_Token=_428117_e.get()._field_Token, ._field_Ident=_428117_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_24904e201_SubIdentExpr>>()) {
			_case_begin_24eeeac35:;
			{
				jule::Ptr<_24904e201_SubIdentExpr> _428717_e = _427829_expr.operator jule::Ptr<_24904e201_SubIdentExpr>();;
				if ((!(_249cad1a1_pushSubIdentFromExpr(_428717_e.get()._field_Expr.get()._field_Kind,_427850_t)))) {
					return false;
				};
				_427850_t.get()._field_Idents = jule::alloc_for_append(_427850_t.get()._field_Idents,1);_427850_t.get()._field_Idents.__push(jule::new_ptr<_24904698a_IdentTypeDecl>(_24904698a_IdentTypeDecl{._field_Token=_428717_e.get()._field_Ident, ._field_Ident=_428717_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_24eeea54d:;
			{
				return false;
			}
		}
		_match_end_24eeea4e8:;
	};
	return true;
}



inline jule::Bool _249cc7154_kindUsesGenerics(jule::Any& _157222_k, jule::Slice<jule::Ptr<_2490539a8_GenericDecl>>& _157240_generics) {
	{
		auto &expr = _157240_generics;
		auto it = expr.begin();
		_iter_begin_250eccb17:;
		if (it != expr.end()) {
			jule::Ptr<_2490539a8_GenericDecl> &_157312_g = *it;
			{
				if (static__249cc6c58_exist(_157312_g.get()._field_Ident,_157222_k)) {
					return true;
				};
			}
			_iter_next_250eccb17:;
			++it;
			goto _iter_begin_250eccb17;
		}
		_iter_end_250eccb17:;
	};
	return false;
}



inline jule::Bool _249cc74d9_hasDirective(jule::Slice<jule::Ptr<_24900cb2c_Directive>>& _158222_directives, jule::Str _158253_tag) {
	{
		auto &expr = _158222_directives;
		auto it = expr.begin();
		_iter_begin_250ecd1ab:;
		if (it != expr.end()) {
			jule::Ptr<_24900cb2c_Directive> _158317_dr = *it;
			{
				if ((_158317_dr.get()._field_Tag.get()._field_Kind == _158253_tag)) {
					return true;
				};
			}
			_iter_next_250ecd1ab:;
			++it;
			goto _iter_begin_250ecd1ab;
		}
		_iter_end_250ecd1ab:;
	};
	return false;
}



inline jule::Bool _249cc7781_canGetPtr(jule::Ptr<_249c80052_Data>& _159119_d) {
	if (((!(_159119_d.get()._field_Lvalue)) || _249c80915_IsConst(_159119_d.ptr()))) {
		return false;
	};
	{
		
		if (((_249cb3a8b_Fn(_159119_d.get()._field_Kind.ptr()) != nullptr) || (_249cb30da_Enum(_159119_d.get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_250ed0ab5:;
			{
				return false;
			}
		}
		else {
			_case_begin_250ed0312:;
			{
				return true;
			}
		}
		_match_end_250ed02ac:;
	};
}



inline jule::Bool _249cc7aa0_isValidForSptrType(jule::Ptr<_249cb078b_TypeKind>& _160428_t) {
	jule::Ptr<_249062e4b_StructIns> _160513_s = _249cb3d00_Struct(_160428_t.ptr());;
	if ((((_160513_s != nullptr) && (_160513_s.get()._field_Decl != nullptr)) && _160513_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;
	};
	return true;
}



inline jule::Bool _249cc7d47_isValidForRef(jule::Ptr<_249cb078b_TypeKind>& _161323_t) {
	return (_249cb3a8b_Fn(_161323_t.ptr()) == nullptr);
}



inline jule::Bool _249cc8111_isBuiltinStrConvertable(jule::Ptr<_249cb078b_TypeKind>& _161633_t) {
	return (((!(_249cb1924_Void(_161633_t.ptr()))) && (_249cb3a8b_Fn(_161633_t.ptr()) == nullptr)) && (_249cb453c_Tup(_161633_t.ptr()) == nullptr));
}



inline jule::Str _249cc8386_buildLinkPathByTokens(jule::Slice<jule::Ptr<_23abd3d83_Token>>& _162027_tokens) {
	jule::Str _162113_s = _162027_tokens[0LL].get()._field_Kind;;
	{
		auto expr = _162027_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_250ed4cc8:;
		if (it != expr.end()) {
			jule::Ptr<_23abd3d83_Token> &_162212_token = *it;
			{
				_162113_s+=jule::Str("::", 2);
				_162113_s+=_162212_token.get()._field_Kind;
			}
			_iter_next_250ed4cc8:;
			++it;
			goto _iter_begin_250ed4cc8;
		}
		_iter_end_250ed4cc8:;
	};
	return _162113_s;
}



inline jule::Ptr<_249cb5263_Prim> _249cc873d_buildPrimType(jule::Str _162918_kind) {
	return jule::new_ptr<_249cb5263_Prim>(_249cb5263_Prim{._field_Kind=_162918_kind});
}



inline jule::Ptr<_249036b01_Struct> _249cc89d5_getStructFromKind(jule::Ptr<_249cb078b_TypeKind> _163526_k) {
	{
		
		if ((_163526_k == nullptr)) {
			_case_begin_250ed60b5:;
			{
				return nullptr;
			}
		}
		else if ((_249cb3d00_Struct(_163526_k.ptr()) != nullptr)) {
			_case_begin_250ed612b:;
			{
				return _249cb3d00_Struct(_163526_k.ptr()).get()._field_Decl;
			}
		}
		else if ((_249cb2b12_Sptr(_163526_k.ptr()) != nullptr)) {
			_case_begin_250ed6192:;
			{
				return _249cc89d5_getStructFromKind(_249cb2b12_Sptr(_163526_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_249cb3827_Slc(_163526_k.ptr()) != nullptr)) {
			_case_begin_250ed6208:;
			{
				return _249cc89d5_getStructFromKind(_249cb3827_Slc(_163526_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_249cb35b3_Arr(_163526_k.ptr()) != nullptr)) {
			_case_begin_250ed64d3:;
			{
				return _249cc89d5_getStructFromKind(_249cb35b3_Arr(_163526_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_249cb2d76_Ptr(_163526_k.ptr()) != nullptr)) {
			_case_begin_250ed6549:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_250ed604e:;
			{
				return nullptr;
			}
		}
		_match_end_250ed5cda:;
	};
}



inline jule::Bool _249cc8c7c_isPrim(jule::Str _165811_kind) {
	return ((((((((((((((((_165811_kind == jule::Str("i8", 2)) || (_165811_kind == jule::Str("i16", 3))) || (_165811_kind == jule::Str("i32", 3))) || (_165811_kind == jule::Str("i64", 3))) || (_165811_kind == jule::Str("u8", 2))) || (_165811_kind == jule::Str("u16", 3))) || (_165811_kind == jule::Str("u32", 3))) || (_165811_kind == jule::Str("u64", 3))) || (_165811_kind == jule::Str("f32", 3))) || (_165811_kind == jule::Str("f64", 3))) || (_165811_kind == jule::Str("int", 3))) || (_165811_kind == jule::Str("uint", 4))) || (_165811_kind == jule::Str("uintptr", 7))) || (_165811_kind == jule::Str("bool", 4))) || (_165811_kind == jule::Str("str", 3))) || (_165811_kind == jule::Str("any", 3)));
}



inline void _249cc9035_applyImplicitCast(jule::Ptr<_249cb078b_TypeKind>& _167727_dest, jule::Ptr<_249c80052_Data>& _167749_d) {
	if (_249cb16b0_IsNil(_167749_d.get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_249cb5263_Prim> _16819_destPrim = _249cb289d_Prim(_167727_dest.ptr());;
	jule::Ptr<_249cb5263_Prim> _16829_prim = _249cb289d_Prim(_167749_d.get()._field_Kind.ptr());;
	if ((_16819_destPrim != nullptr)) {
		if (_249cb870b_IsAny(_16819_destPrim.ptr())) {
			_249cabe19_applyCastKind(_167749_d,_167727_dest);
			return;;
		};
		if (((((((!(_249cb144b_CppLinked(_167749_d.get()._field_Kind.ptr()))) && (!(_167749_d.get()._field_Kind.get()._field_Variadic))) && (!(_167749_d.get()._field_Lvalue))) && (!(_249c80915_IsConst(_167749_d.ptr())))) && (_16829_prim != nullptr)) && _249bc455c_IsNum(_16829_prim.get()._field_Kind))) {
			_249cabe19_applyCastKind(_167749_d,_167727_dest);
		};
		return;;
	};
	if (((_249cb4064_Trait(_167727_dest.ptr()) != nullptr) && (_249cb4064_Trait(_167749_d.get()._field_Kind.ptr()) == nullptr))) {
		_249cabb61_applyCastKindModel(_167749_d,_167727_dest);
		return;;
	};
	if (((_249cb334e_TypeEnum(_167727_dest.ptr()) != nullptr) && (_249cb334e_TypeEnum(_167749_d.get()._field_Kind.ptr()) == nullptr))) {
		_249cabb61_applyCastKindModel(_167749_d,_167727_dest);
		return;;
	};
}



inline std::tuple<jule::Ptr<_249c7a228_SymbolTable>,jule::Slice<_23a8a5ca8_Log>> _249ccc09e_buildSymbols(jule::Ptr<_24900ba82_Ast>& _1622_ast, jule::Trait<_249c0d50d_Importer>& _1638_importer, jule::Ptr<_249bd0557_symbolBuilder> _1662_owner) {
	jule::Ptr<_249bd0557_symbolBuilder> _1713_sb = jule::new_ptr<_249bd0557_symbolBuilder>(_249bd0557_symbolBuilder{._field_owner=_1662_owner, ._field_importer=_1638_importer, ._field_ast=_1622_ast, });;
	_249bd3da7_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1713_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1713_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_249c140d5_Package>,jule::Slice<_23a8a5ca8_Log>> _249ccc4cd_analyzePackage(jule::Slice<jule::Ptr<_24900ba82_Ast>>& _3024_files, jule::Trait<_249c0d50d_Importer>& _3044_importer, jule::I64& _3065_flags) {
	jule::Slice<jule::Ptr<_249c7a228_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_249c7a228_SymbolTable>>::alloc(0LL,_3024_files.len());;
	{
		auto &expr = _3024_files;
		auto it = expr.begin();
		_iter_begin_2510eacbd:;
		if (it != expr.end()) {
			jule::Ptr<_24900ba82_Ast> _3317_f = *it;
			{
				jule::Ptr<_249c7a228_SymbolTable> _3418_table;;
				jule::Slice<_23a8a5ca8_Log> _3429_errors;;
				std::tie(_3418_table,_3429_errors) = _249ccc09e_buildSymbols(_3317_f,_3044_importer,nullptr);
				if ((_3429_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3429_errors);
				};
				_3213_tables = jule::alloc_for_append(_3213_tables,1);_3213_tables.__push(_3418_table);;
			}
			_iter_next_2510eacbd:;
			++it;
			goto _iter_begin_2510eacbd;
		}
		_iter_end_2510eacbd:;
	};
	jule::Ptr<_249c192c7_Sema> _4113_sema = jule::new_ptr<_249c192c7_Sema>(_249c192c7_Sema{._field_flags=_3065_flags});;
	_249c3404a_check(_4113_sema, _3213_tables);
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4113_sema.get()._field_errors);
	};
	jule::Ptr<_249c140d5_Package> _4913_pkg = jule::new_ptr<_249c140d5_Package>(_249c140d5_Package{._field_Files=_4113_sema.get()._field_files});;
	return std::make_tuple(_4913_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_249c140d5_Package>,jule::Slice<_23a8a5ca8_Log>> _249ccc8b8_AnalyzePackage(jule::Slice<jule::Ptr<_24900ba82_Ast>> _7323_files, jule::Trait<_249c0d50d_Importer> _7342_importer, jule::I64 _7362_flags) {
	if ((_7323_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_249c140d5_Package> _7714_package;;
	jule::Slice<_23a8a5ca8_Log> _7727_logs;;
	std::tie(_7714_package,_7727_logs) = _249ccc4cd_analyzePackage(_7323_files,_7342_importer,_7362_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_249bcc312_FnIns> _249cd89e5_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_251105943:;
			{
				static jule::Ptr<_249bcc312_FnIns> _2620_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d6be1e_builtinCallerOut), });;
				return _2620_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_2511059a9:;
			{
				static jule::Ptr<_249bcc312_FnIns> _2920_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d6c309_builtinCallerOutln), });;
				return _2920_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_251105beb:;
			{
				static jule::Ptr<_249bcc312_FnIns> _3220_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d6c6e4_builtinCallerNew), });;
				return _3220_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_251105c62:;
			{
				static jule::Ptr<_249bcc312_FnIns> _3520_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d6cace_builtinCallerPanic), });;
				return _3520_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_251105cc8:;
			{
				static jule::Ptr<_249bcc312_FnIns> _3820_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d6d1ea_builtinCallerMake), });;
				return _3820_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_251105d3e:;
			{
				static jule::Ptr<_249bcc312_FnIns> _4120_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d6d5d5_builtinCallerAppend), });;
				return _4120_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_251105da5:;
			{
				static jule::Ptr<_249bcc312_FnIns> _4420_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d6e3d8_builtinCallerCopy), });;
				return _4420_f;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_251105e2c:;
			{
				static jule::Ptr<_249bcc312_FnIns> _4720_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d705d7_builtinCallerLen), });;
				return _4720_f;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_251105ed7:;
			{
				static jule::Ptr<_249bcc312_FnIns> _5020_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d71154_builtinCallerCap), });;
				return _5020_f;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_25110604d:;
			{
				static jule::Ptr<_249bcc312_FnIns> _5320_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d719c3_builtinCallerDelete), });;
				return _5320_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_2511060b4:;
			{
				static jule::Ptr<_249bcc312_FnIns> _5620_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d71dad_builtinCallerClone), });;
				return _5620_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_25110612a:;
			{
				static jule::Ptr<_249bcc312_FnIns> _5920_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d72474_builtinCallerAssert), });;
				return _5920_f;
			}
		}
		else {
			_case_begin_251105745:;
			{
				return nullptr;
			}
		}
		_match_end_251105679:;
	};
}



inline jule::Ptr<_249caea98_TypeAlias> _249cdacb1_findBuiltinTypeAlias(jule::Str _6625_ident) {
	{
		auto &_match_expr{ _6625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_25110dac2:;
			{
				static jule::Ptr<_249caea98_TypeAlias> _6920_t = jule::new_ptr<_249caea98_TypeAlias>(_249caea98_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_249cb48e4_TypeSymbol>(_249cb48e4_TypeSymbol{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _6920_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_25110db38:;
			{
				static jule::Ptr<_249caea98_TypeAlias> _7920_t = jule::new_ptr<_249caea98_TypeAlias>(_249caea98_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_249cb48e4_TypeSymbol>(_249cb48e4_TypeSymbol{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _7920_t;
			}
		}
		else {
			_case_begin_25110da28:;
			{
				return nullptr;
			}
		}
		_match_end_25110d275:;
	};
}



inline jule::Any _249cdb872_findBuiltinDef(jule::Str _9319_ident) {
	jule::Ptr<_249bcc312_FnIns> _9413_f = _249cd89e5_findBuiltinFn(_9319_ident);;
	if ((_9413_f != nullptr)) {
		return jule::Any(_9413_f);
	};
	jule::Ptr<_249caea98_TypeAlias> _9813_ta = _249cdacb1_findBuiltinTypeAlias(_9319_ident);;
	if ((_9813_ta != nullptr)) {
		return jule::Any(_9813_ta);
	};
	return nullptr;
}



inline jule::Any _249cdc389_findBuiltinDefStdDebug(jule::Str _10527_ident) {
	{
		auto &_match_expr{ _10527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_251112796:;
			{
				static jule::Ptr<_249bcc312_FnIns> _10820_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d73db0_builtinCallerStdDebugOut), });;
				return jule::Any(_10820_f);
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_25111280c:;
			{
				static jule::Ptr<_249bcc312_FnIns> _11120_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d7429a_builtinCallerStdDebugOutln), });;
				return jule::Any(_11120_f);
			}
		}
		else {
			_case_begin_251112730:;
			{
				return nullptr;
			}
		}
		_match_end_2511122ce:;
	};
}



inline jule::Any _249ce0128_findBuiltinDefStdMem(jule::Str _11825_ident) {
	{
		auto &_match_expr{ _11825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_2511143be:;
			{
				static jule::Ptr<_249bcc312_FnIns> _12120_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d727d7_builtinCallerStdMemSizeOf), });;
				return jule::Any(_12120_f);
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_251114435:;
			{
				static jule::Ptr<_249bcc312_FnIns> _12420_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d72c05_builtinCallerStdMemAlignOf), });;
				return jule::Any(_12420_f);
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_25111449b:;
			{
				static jule::Ptr<_249bcc312_FnIns> _12720_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d73123_builtinCallerStdMemFree), });;
				return jule::Any(_12720_f);
			}
		}
		else {
			_case_begin_251112c08:;
			{
				return nullptr;
			}
		}
		_match_end_25111390c:;
	};
}



inline jule::Any _249cde314_findBuiltinDefStdJuleIntegrated(jule::Str _13436_ident) {
	{
		auto &_match_expr{ _13436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_251116954:;
			{
				static jule::Ptr<_249bcc312_FnIns> _13720_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d73552_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_13720_f);
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_2511169ba:;
			{
				static jule::Ptr<_249bcc312_FnIns> _14020_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_Decl=jule::new_ptr<_249bcbe38_Fn>(_249bcbe38_Fn{._field_Generics=jule::Slice<jule::Ptr<_2490539a8_GenericDecl>>::alloc(1LL), }), ._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d73970_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_14020_f);
			}
		}
		else {
			_case_begin_2511149c9:;
			{
				return nullptr;
			}
		}
		_match_end_251116811:;
	};
}



inline jule::Any _249cde4ac_findPackageBuiltinDef(jule::Str _15226_link_path, jule::Str _15242_ident) {
	{
		auto &_match_expr{ _15226_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_251118b65:;
			{
				return jule::Any(_249cdc389_findBuiltinDefStdDebug(_15242_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_251118bcb:;
			{
				return jule::Any(_249ce0128_findBuiltinDefStdMem(_15242_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_251118c42:;
			{
				return jule::Any(_249cde314_findBuiltinDefStdJuleIntegrated(_15242_ident));
			}
		}
		else {
			_case_begin_251118989:;
			{
				return nullptr;
			}
		}
		_match_end_2511188ce:;
	};
}



inline jule::Ptr<_249c80052_Data> _249d6ae84_builtinCallerCommonPlain(jule::Ptr<_249c81ac0_Eval>& _16534_e, jule::Ptr<_24904ebb3_FnCallExpr>& _16549_fc, jule::Ptr<_249c80052_Data>& _16571_d) {
	jule::Ptr<_249bcc312_FnIns> _16613_f = _249cb3a8b_Fn(_16571_d.get()._field_Kind.ptr());;
	_249c71a38_fnCallArgChecker _16813_fcac = _249c71a38_fnCallArgChecker{._field_e=_16534_e, ._field_args=_16549_fc.get()._field_Args, ._field_errorToken=_16549_fc.get()._field_Token, ._field_f=_16613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_249c73e03_check(&_16813_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_249bc7065_FnCallExprModel> _17913_model = jule::new_ptr<_249bc7065_FnCallExprModel>(_249bc7065_FnCallExprModel{._field_Token=_16549_fc.get()._field_Token, ._field_Func=_16613_f, ._field_Expr=_16571_d.get()._field_Model, ._field_Args=_16813_fcac._field_argModels, });;
	if ((_16613_f.get()._field_Result == nullptr)) {
		_16571_d=_249cac117_buildVoidData();
	} else {
		_16571_d=jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=_16613_f.get()._field_Result, });
	};
	_16571_d.get()._field_Model=static_cast<jule::Any>(_17913_model);
	return _16571_d;
}



inline jule::Ptr<_249c80052_Data> _249d6b308_builtinCallerCommon(jule::Ptr<_249c81ac0_Eval>& _19829_e, jule::Ptr<_24904ebb3_FnCallExpr>& _19844_fc, jule::Ptr<_249c80052_Data>& _19866_d) {
	return _249d6ae84_builtinCallerCommonPlain(_19829_e,_19844_fc,_19866_d);
}



inline jule::Ptr<_249c80052_Data> _249d6b6e3_builtinCallerCommonMut(jule::Ptr<_249c81ac0_Eval>& _20232_e, jule::Ptr<_24904ebb3_FnCallExpr>& _20247_fc, jule::Ptr<_249c80052_Data>& _20269_d) {
	if ((!(_20269_d.get()._field_Mutable))) {
		_249c820cb_pushErr(_20232_e.ptr(), _20247_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _249d6b308_builtinCallerCommon(_20232_e,_20247_fc,_20269_d);
}



inline jule::Ptr<_249c80052_Data> _249d6ba34_builtinCallerError(jule::Ptr<_249c81ac0_Eval>& _20928_e, jule::Ptr<_24904ebb3_FnCallExpr>& _20943_fc) {
	if ((_20943_fc.get()._field_Args.len() < 1LL)) {
		_249c820cb_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_20943_fc.get()._field_Args.len() > 1LL)) {
		_249c820cb_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249c80052_Data> _21713_expr = _249ca1e86_evalExpr(_20928_e, _20943_fc.get()._field_Args[0LL]);;
	if ((_21713_expr == nullptr)) {
		return nullptr;
	};
	if (_249c8043c_IsNil(_21713_expr.ptr())) {
		_249c820cb_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249c80052_Data> _22613_d = _249cac117_buildVoidData();;
	_22613_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bcaa19_BuiltinErrorCallExprModel>(_249bcaa19_BuiltinErrorCallExprModel{._field_Err=_21713_expr.get()._field_Model}));
	return _22613_d;
}



inline jule::Ptr<_249c80052_Data> _249d6be1e_builtinCallerOut(jule::Ptr<_249c81ac0_Eval>& _23426_e, jule::Ptr<_24904ebb3_FnCallExpr>& _23441_fc, jule::Ptr<_249c80052_Data>& ) {
	if ((_23441_fc.get()._field_Args.len() < 1LL)) {
		_249c820cb_pushErr(_23426_e.ptr(), _23441_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_23441_fc.get()._field_Args.len() > 1LL)) {
		_249c820cb_pushErr(_23426_e.ptr(), _23441_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249c80052_Data> _24313_expr = _249ca1e86_evalExpr(_23426_e, _23441_fc.get()._field_Args[0LL]);;
	if ((_24313_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_249cc8111_isBuiltinStrConvertable(_24313_expr.get()._field_Kind)))) {
		_249c820cb_pushErr(_23426_e.ptr(), _23441_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_249c80052_Data> _25313_d = _249cac117_buildVoidData();;
	_25313_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc8e79_BuiltinOutCallExprModel>(_249bc8e79_BuiltinOutCallExprModel{._field_Expr=_24313_expr.get()._field_Model, }));
	return _25313_d;
}



inline jule::Ptr<_249c80052_Data> _249d6c309_builtinCallerOutln(jule::Ptr<_249c81ac0_Eval>& _25828_e, jule::Ptr<_24904ebb3_FnCallExpr>& _25843_fc, jule::Ptr<_249c80052_Data>& _25865_d) {
	_25865_d=_249d6be1e_builtinCallerOut(_25828_e,_25843_fc,_25865_d);
	if ((_25865_d == nullptr)) {
		return nullptr;
	};
	_25865_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc9166_BuiltinOutlnCallExprModel>(_249bc9166_BuiltinOutlnCallExprModel{._field_Expr=_25865_d.get()._field_Model.operator jule::Ptr<_249bc8e79_BuiltinOutCallExprModel>().get()._field_Expr, }));
	return _25865_d;
}



inline jule::Ptr<_249c80052_Data> _249d6c6e4_builtinCallerNew(jule::Ptr<_249c81ac0_Eval>& _27026_e, jule::Ptr<_24904ebb3_FnCallExpr>& _27041_fc, jule::Ptr<_249c80052_Data>& _27063_d) {
	if ((_27041_fc.get()._field_Args.len() < 1LL)) {
		_249c820cb_pushErr(_27026_e.ptr(), _27041_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_27041_fc.get()._field_Args.len() > 2LL)) {
		_249c820cb_pushErr(_27026_e.ptr(), _27041_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249c80052_Data> _27913_t = _249ca186a_evalExprKind(_27026_e, _27041_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_27913_t == nullptr)) {
		return nullptr;
	};
	if ((!(_27913_t.get()._field_Decl))) {
		_249c820cb_pushErr(_27026_e.ptr(), _27041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_249cc7aa0_isValidForSptrType(_27913_t.get()._field_Kind)))) {
		jule::Ptr<_249062e4b_StructIns> _29017_s = _249cb3d00_Struct(_27913_t.get()._field_Kind.ptr());;
		if ((((_29017_s != nullptr) && (_29017_s.get()._field_Decl != nullptr)) && _29017_s.get()._field_Decl.get()._field_CppLinked)) {
			_249c820cb_pushErr(_27026_e.ptr(), _27041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_27063_d.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(jule::new_ptr<_249cb89e7_Sptr>(_249cb89e7_Sptr{._field_Elem=_27913_t.get()._field_Kind}), 7)});
	if ((_27041_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_249cb078b_TypeKind> _30417_old = _27026_e.get()._field_prefix;;
		_27026_e.get()._field_prefix=_27913_t.get()._field_Kind;
		jule::Ptr<_249c80052_Data> _30717_init = _249ca1e86_evalExpr(_27026_e, _27041_fc.get()._field_Args[1LL]);;
		_27026_e.get()._field_prefix=_30417_old;
		if ((_30717_init != nullptr)) {
			jule::Ptr<_23abd3d83_Token> _31221_token = _27041_fc.get()._field_Args[1LL].get()._field_Token;;
			;
			_249c26aa9_checkValidityForInitExpr(_27026_e.get()._field_s, (!(_27026_e.get()._field_immutable)),false,_27913_t.get()._field_Kind,_30717_init,_31221_token);
			_249c23d70_checkAssignType(_27026_e.get()._field_s, false,_27913_t.get()._field_Kind,_30717_init,_31221_token);
			_27063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc9540_BuiltinNewCallExprModel>(_249bc9540_BuiltinNewCallExprModel{._field_Kind=_27913_t.get()._field_Kind, ._field_Init=_30717_init.get()._field_Model}));
		};
	} else {
		_27063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc9540_BuiltinNewCallExprModel>(_249bc9540_BuiltinNewCallExprModel{._field_Kind=_27913_t.get()._field_Kind, }));
	};
	return _27063_d;
}



inline jule::Ptr<_249c80052_Data> _249d6cace_builtinCallerPanic(jule::Ptr<_249c81ac0_Eval>& _33228_e, jule::Ptr<_24904ebb3_FnCallExpr>& _33243_fc, jule::Ptr<_249c80052_Data>& ) {
	if ((_33243_fc.get()._field_Args.len() < 1LL)) {
		_249c820cb_pushErr(_33228_e.ptr(), _33243_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_33243_fc.get()._field_Args.len() > 1LL)) {
		_249c820cb_pushErr(_33228_e.ptr(), _33243_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249c80052_Data> _34113_expr = _249ca1e86_evalExpr(_33228_e, _33243_fc.get()._field_Args[0LL]);;
	if ((_34113_expr == nullptr)) {
		return nullptr;
	};
	if (((_249cb289d_Prim(_34113_expr.get()._field_Kind.ptr()) == nullptr) || (!(_249cb8497_IsStr(_249cb289d_Prim(_34113_expr.get()._field_Kind.ptr()).ptr()))))) {
		_249c820cb_pushErr(_33228_e.ptr(), _33243_fc.get()._field_Token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249c80052_Data> _35013_d = _249cac117_buildVoidData();;
	_35013_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc972c_BuiltinPanicCallExprModel>(_249bc972c_BuiltinPanicCallExprModel{._field_Token=_33243_fc.get()._field_Token, ._field_Expr=_34113_expr.get()._field_Model}));
	return _35013_d;
}



inline jule::Ptr<_249c80052_Data> _249d6d1ea_builtinCallerMake(jule::Ptr<_249c81ac0_Eval>& _35827_e, jule::Ptr<_24904ebb3_FnCallExpr>& _35842_fc, jule::Ptr<_249c80052_Data>& _35864_d) {
	if ((_35842_fc.get()._field_Args.len() < 2LL)) {
		if ((_35842_fc.get()._field_Args.len() == 1LL)) {
			_249c820cb_pushErr(_35827_e.ptr(), _35842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_249c820cb_pushErr(_35827_e.ptr(), _35842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	jule::Ptr<_249c80052_Data> _36813_t = _249ca186a_evalExprKind(_35827_e, _35842_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_36813_t == nullptr)) {
		return nullptr;
	};
	if ((!(_36813_t.get()._field_Decl))) {
		_249c820cb_pushErr(_35827_e.ptr(), _35842_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_35842_fc.get()._field_Args.len() > 3LL)) {
		_249c820cb_pushErr(_35827_e.ptr(), _35842_fc.get()._field_Args[3LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
		return nullptr;
	};
	_35864_d.get()._field_Kind=_36813_t.get()._field_Kind;
	jule::Ptr<_249c80052_Data> _38413_lenExpr = _249ca1e86_evalExpr(_249c23567_evalp(_35827_e.get()._field_s, _35827_e.get()._field_lookup,_36813_t.get()._field_Kind), _35842_fc.get()._field_Args[1LL]);;
	if ((_38413_lenExpr == nullptr)) {
		return nullptr;
	};
	_249c8a6bc_checkIntegerIndexingByData(_35827_e.ptr(), _38413_lenExpr,_35842_fc.get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_249bc9b06_BuiltinMakeCallExprModel> _39113_model = jule::new_ptr<_249bc9b06_BuiltinMakeCallExprModel>(_249bc9b06_BuiltinMakeCallExprModel{._field_Kind=_36813_t.get()._field_Kind, ._field_Len=_38413_lenExpr.get()._field_Model, });;
	_35864_d.get()._field_Model=static_cast<jule::Any>(_39113_model);
	if ((_35842_fc.get()._field_Args.len() == 3LL)) {
		jule::Ptr<_249c80052_Data> _39717_capExpr = _249ca1e86_evalExpr(_249c23567_evalp(_35827_e.get()._field_s, _35827_e.get()._field_lookup,_36813_t.get()._field_Kind), _35842_fc.get()._field_Args[2LL]);;
		if ((_39717_capExpr == nullptr)) {
			return _35864_d;
		};
		_249c8a6bc_checkIntegerIndexingByData(_35827_e.ptr(), _39717_capExpr,_35842_fc.get()._field_Args[2LL].get()._field_Token);
		_39113_model.get()._field_Cap=_39717_capExpr.get()._field_Model;
	};
	return _35864_d;
}



inline jule::Ptr<_249c80052_Data> _249d6d5d5_builtinCallerAppend(jule::Ptr<_249c81ac0_Eval>& _40729_e, jule::Ptr<_24904ebb3_FnCallExpr>& _40744_fc, jule::Ptr<_249c80052_Data>& _40766_d) {
	if ((_40744_fc.get()._field_Args.len() < 2LL)) {
		if ((_40744_fc.get()._field_Args.len() == 1LL)) {
			_249c820cb_pushErr(_40729_e.ptr(), _40744_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_249c820cb_pushErr(_40729_e.ptr(), _40744_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_249c80052_Data> _41713_t = _249ca1e86_evalExpr(_40729_e, _40744_fc.get()._field_Args[0LL]);;
	if ((_41713_t == nullptr)) {
		return nullptr;
	};
	if ((_249cb3827_Slc(_41713_t.get()._field_Kind.ptr()) == nullptr)) {
		_249c820cb_pushErr(_40729_e.ptr(), _40744_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_249bcc312_FnIns> _42713_f = jule::new_ptr<_249bcc312_FnIns>(_249bcc312_FnIns{._field_Params=jule::Slice<jule::Ptr<_249bcc125_ParamIns>>::make({jule::new_ptr<_249bcc125_ParamIns>(_249bcc125_ParamIns{._field_Decl=jule::new_ptr<_249bcbc4b_Param>(_249bcbc4b_Param{._field_Mutable=true, }), ._field_Kind=_41713_t.get()._field_Kind}),jule::new_ptr<_249bcc125_ParamIns>(_249bcc125_ParamIns{._field_Decl=jule::new_ptr<_249bcbc4b_Param>(_249bcbc4b_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_249cb3827_Slc(_41713_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41713_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_249c80052_Data>(jule::Ptr<_249c81ac0_Eval>&,jule::Ptr<_24904ebb3_FnCallExpr>&,jule::Ptr<_249c80052_Data>&)>(_249d6ae84_builtinCallerCommonPlain), });;
	_40766_d.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_42713_f, 1)});
	_40766_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc88b3_CommonIdentExprModel>(_249bc88b3_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}));
	_40766_d=_249d6ae84_builtinCallerCommonPlain(_40729_e,_40744_fc,_40766_d);
	if ((_40766_d != nullptr)) {
		jule::Ptr<_249bc7065_FnCallExprModel> _45517_model = _40766_d.get()._field_Model.operator jule::Ptr<_249bc7065_FnCallExprModel>();;
		_40766_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc9ce3_BuiltinAppendCallExprModel>(_249bc9ce3_BuiltinAppendCallExprModel{._field_Dest=_45517_model.get()._field_Args[0LL], ._field_Elements=_45517_model.get()._field_Args[1LL]}));
	};
	return _40766_d;
}



inline jule::Ptr<_249c80052_Data> _249d6da69_callerCopySlice(jule::Ptr<_249c80052_Data>& _46425_dest, jule::Ptr<_249c81ac0_Eval>& _46443_e, jule::Ptr<_24904ebb3_FnCallExpr>& _46458_fc, jule::Ptr<_249c80052_Data>& _46480_d) {
	if ((!(_46425_dest.get()._field_Mutable))) {
		_249c820cb_pushErr(_46443_e.ptr(), _46458_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249c80052_Data> _46913_src = _249ca1e86_evalExpr(_46443_e, _46458_fc.get()._field_Args[1LL]);;
	if ((_46913_src == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_249cb9454_Slc> _47313_slc = _249cb3827_Slc(_46913_src.get()._field_Kind.ptr());;
	if ((_47313_slc != nullptr)) {
		if (((!(_46913_src.get()._field_Mutable)) && _249cb1b88_Mutable(_47313_slc.get()._field_Elem.ptr()))) {
			_249c820cb_pushErr(_46443_e.ptr(), _46458_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_249cb0e95_Equals(_46425_dest.get()._field_Kind, _46913_src.get()._field_Kind)))) {
			_249c820cb_pushErr(_46443_e.ptr(), _46458_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_46425_dest.get()._field_Kind.ptr())),jule::Any(_249cb0b87_Str(_46913_src.get()._field_Kind.ptr()))}));
		};
	} else {
		jule::Ptr<_249cb5263_Prim> _48313_destPrim = _249cb289d_Prim(_249cb3827_Slc(_46425_dest.get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_249cb5263_Prim> _48413_prim = _249cb289d_Prim(_46913_src.get()._field_Kind.ptr());;
		if (((((_48313_destPrim == nullptr) || (_48413_prim == nullptr)) || (!(_249cb8497_IsStr(_48413_prim.ptr())))) || (!(_249cb6a6c_IsU8(_48313_destPrim.ptr()))))) {
			_249c820cb_pushErr(_46443_e.ptr(), _46458_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_46425_dest.get()._field_Kind.ptr())),jule::Any(_249cb0b87_Str(_46913_src.get()._field_Kind.ptr()))}));
		};
	};
	_46480_d.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("int", 3)), 6)});
	_46480_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bca82c_BuiltinCopyCallExprModel>(_249bca82c_BuiltinCopyCallExprModel{._field_Dest=_46425_dest, ._field_Src=_46913_src}));
	return _46480_d;
}



inline jule::Ptr<_249c80052_Data> _249d6deed_callerCopyStr(jule::Ptr<_249c80052_Data>& _49823_dest, jule::Ptr<_249c81ac0_Eval>& _49841_e, jule::Ptr<_24904ebb3_FnCallExpr>& _49856_fc, jule::Ptr<_249c80052_Data>& _49878_d) {
	if ((!(_49823_dest.get()._field_Mutable))) {
		_249c820cb_pushErr(_49841_e.ptr(), _49856_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249c80052_Data> _50313_src = _249ca1e86_evalExpr(_49841_e, _49856_fc.get()._field_Args[1LL]);;
	if ((_50313_src == nullptr)) {
		return nullptr;
	};
	{
		
		if ((_249cb289d_Prim(_50313_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_25115cd85:;
			{
				if (_249cb8497_IsStr(_249cb289d_Prim(_50313_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_249cb3827_Slc(_50313_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_25115cdeb:;
			{
				jule::Ptr<_249cb9454_Slc> _51317_slc = _249cb3827_Slc(_50313_src.get()._field_Kind.ptr());;
				if (((_249cb289d_Prim(_51317_slc.get()._field_Elem.ptr()) != nullptr) && _249cb6a6c_IsU8(_249cb289d_Prim(_51317_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_25115d193:;
	};
	_249c820cb_pushErr(_49841_e.ptr(), _49856_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_49823_dest.get()._field_Kind.ptr())),jule::Any(_249cb0b87_Str(_50313_src.get()._field_Kind.ptr()))}));
	_julec_label_end:;
	_49878_d.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("int", 3)), 6)});
	_49878_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bca82c_BuiltinCopyCallExprModel>(_249bca82c_BuiltinCopyCallExprModel{._field_Dest=_49823_dest, ._field_Src=_50313_src}));
	return _49878_d;
}



inline jule::Ptr<_249c80052_Data> _249d6e3d8_builtinCallerCopy(jule::Ptr<_249c81ac0_Eval>& _52827_e, jule::Ptr<_24904ebb3_FnCallExpr>& _52842_fc, jule::Ptr<_249c80052_Data>& _52864_d) {
	if ((_52842_fc.get()._field_Args.len() < 2LL)) {
		if ((_52842_fc.get()._field_Args.len() == 1LL)) {
			_249c820cb_pushErr(_52827_e.ptr(), _52842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_249c820cb_pushErr(_52827_e.ptr(), _52842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_52842_fc.get()._field_Args.len() > 2LL)) {
		_249c820cb_pushErr(_52827_e.ptr(), _52842_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249c80052_Data> _54113_dest = _249ca1e86_evalExpr(_52827_e, _52842_fc.get()._field_Args[0LL]);;
	{
		
		if ((_54113_dest == nullptr)) {
			_case_begin_251168038:;
			{
				return nullptr;
			}
		}
		else if ((_249cb3827_Slc(_54113_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_25116809e:;
			{
				return _249d6da69_callerCopySlice(_54113_dest,_52827_e,_52842_fc,_52864_d);
			}
		}
		else if (((_249cb289d_Prim(_54113_dest.get()._field_Kind.ptr()) != nullptr) && _249cb8497_IsStr(_249cb289d_Prim(_54113_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_251168115:;
			{
				return _249d6deed_callerCopyStr(_54113_dest,_52827_e,_52842_fc,_52864_d);
			}
		}
		else {
			_case_begin_251167e7d:;
			{
				_249c820cb_pushErr(_52827_e.ptr(), _52842_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_251167e28:;
	};
}



inline jule::Ptr<_249c80052_Data> _249d6e729_callerLenSlice(jule::Ptr<_249c80052_Data>& _55524_expr, jule::Ptr<_249c80052_Data>& _55542_d) {
	_55542_d.get()._field_Kind=_249c7929e_lenKind();
	_55542_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc9ed0_BuiltinLenCallExprModel>(_249bc9ed0_BuiltinLenCallExprModel{._field_Expr=_55524_expr}));
	return _55542_d;
}



inline jule::Ptr<_249c80052_Data> _249d6ea6a_callerLenMap(jule::Ptr<_249c80052_Data>& _56322_expr, jule::Ptr<_249c80052_Data>& _56340_d) {
	_56340_d.get()._field_Kind=_249c7929e_lenKind();
	_56340_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc9ed0_BuiltinLenCallExprModel>(_249bc9ed0_BuiltinLenCallExprModel{._field_Expr=_56322_expr}));
	return _56340_d;
}



inline jule::Ptr<_249c80052_Data> _249d6edab_callerLenArr(jule::Ptr<_249c80052_Data>& _57122_expr, jule::Ptr<_249c80052_Data>& _57140_d) {
	_57140_d.get()._field_Kind=_249c7929e_lenKind();
	_57140_d.get()._field_Constant=static__2491257e4_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_249cb35b3_Arr(_57122_expr.get()._field_Kind.ptr()).get()._field_N)));
	_57140_d.get()._field_Model=static_cast<jule::Any>(_57140_d.get()._field_Constant);
	return _57140_d;
}



inline jule::Ptr<_249c80052_Data> _249d701ec_callerLenStr(jule::Ptr<_249c80052_Data>& _57822_expr, jule::Ptr<_249c80052_Data>& _57840_d) {
	_57840_d.get()._field_Kind=_249c7929e_lenKind();
	if (_249c80915_IsConst(_57822_expr.ptr())) {
		_57840_d.get()._field_Constant=static__2491257e4_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_249166824_ReadStr(_57822_expr.get()._field_Constant.ptr()).len())));
		_57840_d.get()._field_Model=static_cast<jule::Any>(_57840_d.get()._field_Constant);
	} else {
		_57840_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc9ed0_BuiltinLenCallExprModel>(_249bc9ed0_BuiltinLenCallExprModel{._field_Expr=_57822_expr}));
	};
	return _57840_d;
}



inline jule::Ptr<_249c80052_Data> _249d705d7_builtinCallerLen(jule::Ptr<_249c81ac0_Eval>& _59126_e, jule::Ptr<_24904ebb3_FnCallExpr>& _59141_fc, jule::Ptr<_249c80052_Data>& _59163_d) {
	if ((_59141_fc.get()._field_Args.len() < 1LL)) {
		_249c820cb_pushErr(_59126_e.ptr(), _59141_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3))}));
		return nullptr;
	};
	if ((_59141_fc.get()._field_Args.len() > 1LL)) {
		_249c820cb_pushErr(_59126_e.ptr(), _59141_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249c80052_Data> _59913_dest = _249ca1e86_evalExpr(_59126_e, _59141_fc.get()._field_Args[0LL]);;
	{
		
		if ((_59913_dest == nullptr)) {
			_case_begin_251173a49:;
			{
				return nullptr;
			}
		}
		else if (_59913_dest.get()._field_Decl) {
			_case_begin_251173ab0:;
			{
				_249c820cb_pushErr(_59126_e.ptr(), _59141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_249cb3827_Slc(_59913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_251173b26:;
			{
				return _249d6e729_callerLenSlice(_59913_dest,_59163_d);
			}
		}
		else if ((_249cb35b3_Arr(_59913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_25117485d:;
			{
				return _249d6edab_callerLenArr(_59913_dest,_59163_d);
			}
		}
		else if ((_249cb42c8_Map(_59913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2511748c4:;
			{
				return _249d6ea6a_callerLenMap(_59913_dest,_59163_d);
			}
		}
		else if (((_249cb289d_Prim(_59913_dest.get()._field_Kind.ptr()) != nullptr) && _249cb8497_IsStr(_249cb289d_Prim(_59913_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_25117493a:;
			{
				return _249d701ec_callerLenStr(_59913_dest,_59163_d);
			}
		}
		else {
			_case_begin_25117395b:;
			{
				_249c820cb_pushErr(_59126_e.ptr(), _59141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_251173906:;
	};
}



inline jule::Ptr<_249c80052_Data> _249d70928_callerCapSlice(jule::Ptr<_249c80052_Data>& _62024_expr, jule::Ptr<_249c80052_Data>& _62042_d) {
	_62042_d.get()._field_Kind=_249c7929e_lenKind();
	_62042_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bca1bc_BuiltinCapCallExprModel>(_249bca1bc_BuiltinCapCallExprModel{._field_Expr=_62024_expr}));
	return _62042_d;
}



inline jule::Ptr<_249c80052_Data> _249d70c69_callerCapStr(jule::Ptr<_249c80052_Data>& _62822_expr, jule::Ptr<_249c80052_Data>& _62840_d) {
	_62840_d.get()._field_Kind=_249c7929e_lenKind();
	if (_249c80915_IsConst(_62822_expr.ptr())) {
		_62840_d.get()._field_Constant=static__2491257e4_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_249166824_ReadStr(_62822_expr.get()._field_Constant.ptr()).cap())));
		_62840_d.get()._field_Model=static_cast<jule::Any>(_62840_d.get()._field_Constant);
	} else {
		_62840_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bca1bc_BuiltinCapCallExprModel>(_249bca1bc_BuiltinCapCallExprModel{._field_Expr=_62822_expr}));
	};
	return _62840_d;
}



inline jule::Ptr<_249c80052_Data> _249d71154_builtinCallerCap(jule::Ptr<_249c81ac0_Eval>& _64126_e, jule::Ptr<_24904ebb3_FnCallExpr>& _64141_fc, jule::Ptr<_249c80052_Data>& _64163_d) {
	if ((_64141_fc.get()._field_Args.len() < 1LL)) {
		_249c820cb_pushErr(_64126_e.ptr(), _64141_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3))}));
		return nullptr;
	};
	if ((_64141_fc.get()._field_Args.len() > 1LL)) {
		_249c820cb_pushErr(_64126_e.ptr(), _64141_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249c80052_Data> _64913_dest = _249ca1e86_evalExpr(_64126_e, _64141_fc.get()._field_Args[0LL]);;
	{
		
		if ((_64913_dest == nullptr)) {
			_case_begin_251184351:;
			{
				return nullptr;
			}
		}
		else if (_64913_dest.get()._field_Decl) {
			_case_begin_2511843b7:;
			{
				_249c820cb_pushErr(_64126_e.ptr(), _64141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_249cb3827_Slc(_64913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_25118442d:;
			{
				return _249d70928_callerCapSlice(_64913_dest,_64163_d);
			}
		}
		else if (((_249cb289d_Prim(_64913_dest.get()._field_Kind.ptr()) != nullptr) && _249cb8497_IsStr(_249cb289d_Prim(_64913_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_251185187:;
			{
				return _249d70c69_callerCapStr(_64913_dest,_64163_d);
			}
		}
		else {
			_case_begin_251184285:;
			{
				_249c820cb_pushErr(_64126_e.ptr(), _64141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_251184230:;
	};
}



inline jule::Ptr<_249c80052_Data> _249d715d8_callerDeleteMap(jule::Ptr<_249c81ac0_Eval>& _66625_e, jule::Ptr<_24904ebb3_FnCallExpr>& _66640_fc, jule::Ptr<_249c80052_Data>& _66662_expr, jule::Ptr<_249c80052_Data>& _66680_d) {
	if ((!(_66662_expr.get()._field_Mutable))) {
		_249c820cb_pushErr(_66625_e.ptr(), _66640_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	_66680_d=_249cac117_buildVoidData();
	jule::Ptr<_249bc80bb_BuiltinDeleteCallExprModel> _67113_model = jule::new_ptr<_249bc80bb_BuiltinDeleteCallExprModel>(_249bc80bb_BuiltinDeleteCallExprModel{._field_Dest=_66662_expr, });;
	if ((_66640_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_249c80052_Data> _67517_key = _249ca1e86_evalExpr(_66625_e, _66640_fc.get()._field_Args[1LL]);;
		{
			
			if ((_67517_key == nullptr)) {
				_case_begin_25118c139:;
				{
					return nullptr;
				}
			}
			else if (_67517_key.get()._field_Decl) {
				_case_begin_25118c337:;
				{
					_249c820cb_pushErr(_66625_e.ptr(), _66640_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			else {
				_case_begin_25118a91d:;
				{
					;
					jule::Ptr<_249cb078b_TypeKind> _68421_keyType = _249cb42c8_Map(_66662_expr.get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_249c23d70_checkAssignType(_66625_e.get()._field_s, false,_68421_keyType,_67517_key,_66640_fc.get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;
					};
				}
			}
			_match_end_25118a8a7:;
		};
		_67113_model.get()._field_Key=_67517_key;
	};
	_66680_d.get()._field_Model=static_cast<jule::Any>(_67113_model);
	return _66680_d;
}



inline jule::Ptr<_249c80052_Data> _249d719c3_builtinCallerDelete(jule::Ptr<_249c81ac0_Eval>& _69529_e, jule::Ptr<_24904ebb3_FnCallExpr>& _69544_fc, jule::Ptr<_249c80052_Data>& _69566_d) {
	if ((_69544_fc.get()._field_Args.len() < 1LL)) {
		_249c820cb_pushErr(_69529_e.ptr(), _69544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3))}));
		return nullptr;
	};
	if ((_69544_fc.get()._field_Args.len() > 2LL)) {
		_249c820cb_pushErr(_69529_e.ptr(), _69544_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249c80052_Data> _70313_dest = _249ca1e86_evalExpr(_69529_e, _69544_fc.get()._field_Args[0LL]);;
	{
		
		if ((_70313_dest == nullptr)) {
			_case_begin_2511921c7:;
			{
				return nullptr;
			}
		}
		else if (_70313_dest.get()._field_Decl) {
			_case_begin_25119223d:;
			{
				_249c820cb_pushErr(_69529_e.ptr(), _69544_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_249cb42c8_Map(_70313_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2511922a4:;
			{
				return _249d715d8_callerDeleteMap(_69529_e,_69544_fc,_70313_dest,_69566_d);
			}
		}
		else {
			_case_begin_25119211c:;
			{
				_249c820cb_pushErr(_69529_e.ptr(), _69544_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_2511920b7:;
	};
}



inline jule::Ptr<_249c80052_Data> _249d71dad_builtinCallerClone(jule::Ptr<_249c81ac0_Eval>& _71828_e, jule::Ptr<_24904ebb3_FnCallExpr>& _71843_fc, jule::Ptr<_249c80052_Data>& ) {
	if ((_71843_fc.get()._field_Args.len() < 1LL)) {
		_249c820cb_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_71843_fc.get()._field_Args.len() > 1LL)) {
		_249c820cb_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249c80052_Data> _72713_d = _249ca186a_evalExprKind(_71828_e, _71843_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_72713_d == nullptr)) {
		return nullptr;
	};
	if ((!(_249cb23c5_SupportsCloning(_72713_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_249cb3827_Slc(_72713_d.get()._field_Kind.ptr()) != nullptr) || (_249cb42c8_Map(_72713_d.get()._field_Kind.ptr()) != nullptr) || (_249cb35b3_Arr(_72713_d.get()._field_Kind.ptr()) != nullptr) || (_249cb2b12_Sptr(_72713_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_251198aa2:;
				{
					{
						_249c820cb_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_72713_d.get()._field_Kind.ptr()))}));
					};
				}
			}
			else if ((_249cb3d00_Struct(_72713_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_251198453:;
				{
					{
						_249c820cb_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_72713_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_2511983dc:;
				{
					{
						_249c820cb_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_249cb0b87_Str(_72713_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_251197c27:;
		};
	};
	_72713_d.get()._field_Mutable=true;
	_72713_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bc9353_BuiltinCloneCallExprModel>(_249bc9353_BuiltinCloneCallExprModel{._field_Expr=_72713_d.get()._field_Model}));
	return _72713_d;
}



inline jule::Ptr<_249c80052_Data> _249d72474_builtinCallerAssert(jule::Ptr<_249c81ac0_Eval>& _76029_e, jule::Ptr<_24904ebb3_FnCallExpr>& _76044_fc, jule::Ptr<_249c80052_Data>& ) {
	if ((_76044_fc.get()._field_Args.len() < 1LL)) {
		_249c820cb_pushErr(_76029_e.ptr(), _76044_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_76044_fc.get()._field_Args.len() > 2LL)) {
		_249c820cb_pushErr(_76029_e.ptr(), _76044_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249c80052_Data> _76913_expr = _249ca1e86_evalExpr(_76029_e, _76044_fc.get()._field_Args[0LL]);;
	if ((_76913_expr == nullptr)) {
		return nullptr;
	};
	if (((_249cb289d_Prim(_76913_expr.get()._field_Kind.ptr()) == nullptr) || (!(_249cb8233_IsBool(_249cb289d_Prim(_76913_expr.get()._field_Kind.ptr()).ptr()))))) {
		_249c820cb_pushErr(_76029_e.ptr(), _76044_fc.get()._field_Token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249bc9919_BuiltinAssertCallExprModel> _77813_model = jule::new_ptr<_249bc9919_BuiltinAssertCallExprModel>(_249bc9919_BuiltinAssertCallExprModel{._field_Token=_76044_fc.get()._field_Token, ._field_Expr=_76913_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if ((_76044_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_249c80052_Data> _78617_log = _249ca1e86_evalExpr(_76029_e, _76044_fc.get()._field_Args[1LL]);;
		if ((_78617_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_249c80915_IsConst(_78617_log.ptr()))) || (_249cb289d_Prim(_78617_log.get()._field_Kind.ptr()) == nullptr)) || (!(_249cb8497_IsStr(_249cb289d_Prim(_78617_log.get()._field_Kind.ptr()).ptr()))))) {
			_249c820cb_pushErr(_76029_e.ptr(), _76044_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_249cb0b87_Str(_78617_log.get()._field_Kind.ptr()))}));
			return nullptr;
		};
		_77813_model.get()._field_Log=_249166824_ReadStr(_78617_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_249c80052_Data> _79913_d = _249cac117_buildVoidData();;
	_79913_d.get()._field_Model=static_cast<jule::Any>(_77813_model);
	return _79913_d;
}



inline jule::Ptr<_249c80052_Data> _249d727d7_builtinCallerStdMemSizeOf(jule::Ptr<_249c81ac0_Eval>& _80435_e, jule::Ptr<_24904ebb3_FnCallExpr>& _80450_fc, jule::Ptr<_249c80052_Data>& ) {
	jule::Ptr<_249c80052_Data> _80513_result = jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_80450_fc.get()._field_Args.len() < 1LL)) {
		_249c820cb_pushErr(_80435_e.ptr(), _80450_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _80513_result;
	};
	if ((_80450_fc.get()._field_Args.len() > 1LL)) {
		_249c820cb_pushErr(_80435_e.ptr(), _80450_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249c80052_Data> _81713_d = _249ca186a_evalExprKind(_80435_e, _80450_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_81713_d == nullptr)) {
		return _80513_result;
	};
	_80513_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bcac06_SizeofExprModel>(_249bcac06_SizeofExprModel{._field_Expr=_81713_d.get()._field_Model}));
	return _80513_result;
}



inline jule::Ptr<_249c80052_Data> _249d72c05_builtinCallerStdMemAlignOf(jule::Ptr<_249c81ac0_Eval>& _82636_e, jule::Ptr<_24904ebb3_FnCallExpr>& _82651_fc, jule::Ptr<_249c80052_Data>& ) {
	jule::Ptr<_249c80052_Data> _82713_result = jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_82651_fc.get()._field_Args.len() < 1LL)) {
		_249c820cb_pushErr(_82636_e.ptr(), _82651_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _82713_result;
	};
	if ((_82651_fc.get()._field_Args.len() > 1LL)) {
		_249c820cb_pushErr(_82636_e.ptr(), _82651_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249c80052_Data> _83913_d = _249ca186a_evalExprKind(_82636_e, _82651_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_83913_d == nullptr)) {
		return _82713_result;
	};
	_82713_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bcade3_AlignofExprModel>(_249bcade3_AlignofExprModel{._field_Expr=_83913_d.get()._field_Model}));
	return _82713_result;
}



inline jule::Ptr<_249c80052_Data> _249d73123_builtinCallerStdMemFree(jule::Ptr<_249c81ac0_Eval>& _84833_e, jule::Ptr<_24904ebb3_FnCallExpr>& _84848_fc, jule::Ptr<_249c80052_Data>& ) {
	if ((_84848_fc.get()._field_Args.len() < 1LL)) {
		_249c820cb_pushErr(_84833_e.ptr(), _84848_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_84848_fc.get()._field_Args.len() > 1LL)) {
		_249c820cb_pushErr(_84833_e.ptr(), _84848_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249c80052_Data> _85713_d = _249ca186a_evalExprKind(_84833_e, _84848_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_85713_d == nullptr)) {
		return nullptr;
	};
	if ((!(_249cb2161_PerformsRC(_85713_d.get()._field_Kind.ptr())))) {
		_249c820cb_pushErr(_84833_e.ptr(), _84848_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249c80052_Data> _86613_result = _249cac117_buildVoidData();;
	_86613_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bcb696_FreeExprModel>(_249bcb696_FreeExprModel{._field_Expr=_85713_d.get()._field_Model}));
	return _86613_result;
}



inline jule::Ptr<_249c80052_Data> _249d73552_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_249c81ac0_Eval>& _87145_e, jule::Ptr<_24904ebb3_FnCallExpr>& _87160_fc, jule::Ptr<_249c80052_Data>& ) {
	if ((_87160_fc.get()._field_Args.len() < 1LL)) {
		_249c820cb_pushErr(_87145_e.ptr(), _87160_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_87160_fc.get()._field_Args.len() > 1LL)) {
		_249c820cb_pushErr(_87145_e.ptr(), _87160_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_249c80052_Data> _88013_d = _249ca186a_evalExprKind(_87145_e, _87160_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_88013_d == nullptr)) {
		return nullptr;
	};
	if ((!(_249cc8111_isBuiltinStrConvertable(_88013_d.get()._field_Kind)))) {
		_249c820cb_pushErr(_87145_e.ptr(), _87160_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_249c80052_Data>(_249c80052_Data{._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(_249cc873d_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_249bcb2bc_IntegratedToStrExprModel>(_249bcb2bc_IntegratedToStrExprModel{._field_Expr=_88013_d.get()._field_Model})), });
}



inline jule::Ptr<_249c80052_Data> _249d73970_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_249c81ac0_Eval>& _89844_e, jule::Ptr<_24904ebb3_FnCallExpr>& _89859_fc, jule::Ptr<_249c80052_Data>& _89881_d) {
	if ((!(_249c82a16_isUnsafe(_89844_e.ptr())))) {
		_249c820cb_pushErr(_89844_e.ptr(), _89859_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_89859_fc.get()._field_Args.len() < 1LL)) {
		_249c820cb_pushErr(_89844_e.ptr(), _89859_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_249c80052_Data> _90813_argd = _249ca1e86_evalExpr(_89844_e, _89859_fc.get()._field_Args[0LL]);;
	if ((_90813_argd == nullptr)) {
		return nullptr;
	};
	if (((_249cb289d_Prim(_90813_argd.get()._field_Kind.ptr()) == nullptr) || (!(_249cb8497_IsStr(_249cb289d_Prim(_90813_argd.get()._field_Kind.ptr()).ptr()))))) {
		_249c820cb_pushErr(_89844_e.ptr(), _89859_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_249cb0b87_Str(_90813_argd.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	if (((!(_249c80915_IsConst(_90813_argd.ptr()))) || (!(_24912982b_IsStr(_90813_argd.get()._field_Constant.ptr()))))) {
		_249c820cb_pushErr(_89844_e.ptr(), _89859_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_249c80052_Data> _92313_r = _249cac117_buildVoidData();;
	jule::Ptr<_249bcc312_FnIns> _92513_f = _249cb3a8b_Fn(_89881_d.get()._field_Kind.ptr());;
	if ((_92513_f.get()._field_Generics.len() > 0LL)) {
		_92313_r.get()._field_Kind=_92513_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_249bcb4a9_BackendEmitExprModel> _93013_model = jule::new_ptr<_249bcb4a9_BackendEmitExprModel>(_249bcb4a9_BackendEmitExprModel{._field_Code=_249166824_ReadStr(_90813_argd.get()._field_Constant.ptr()), });;
	if ((_89859_fc.get()._field_Args.len() > 1LL)) {
		_93013_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL,(_89859_fc.get()._field_Args.len() - 1LL));
		{
			auto expr = _89859_fc.get()._field_Args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_24eb0392b:;
			if (it != expr.end()) {
				jule::Ptr<_24904a8e5_Expr> _93621_arg = *it;
				{
					_90813_argd=_249ca186a_evalExprKind(_89844_e, _93621_arg.get()._field_Kind);
					if ((_90813_argd == nullptr)) {
						return nullptr;
					};
					_93013_model.get()._field_Exprs = jule::alloc_for_append(_93013_model.get()._field_Exprs,1);_93013_model.get()._field_Exprs.__push(_90813_argd.get()._field_Model);;
				}
				_iter_next_24eb0392b:;
				++it;
				goto _iter_begin_24eb0392b;
			}
			_iter_end_24eb0392b:;
		};
	};
	_92313_r.get()._field_Model=static_cast<jule::Any>(_93013_model);
	return _92313_r;
}



inline jule::Ptr<_249c80052_Data> _249d73db0_builtinCallerStdDebugOut(jule::Ptr<_249c81ac0_Eval>& _94934_e, jule::Ptr<_24904ebb3_FnCallExpr>& _94949_fc, jule::Ptr<_249c80052_Data>& _94971_d) {
	_94971_d=_249d6be1e_builtinCallerOut(_94934_e,_94949_fc,_94971_d);
	if ((_94971_d == nullptr)) {
		return nullptr;
	};
	_94971_d.get()._field_Model.operator jule::Ptr<_249bc8e79_BuiltinOutCallExprModel>().get()._field_Debug=true;
	return _94971_d;
}



inline jule::Ptr<_249c80052_Data> _249d7429a_builtinCallerStdDebugOutln(jule::Ptr<_249c81ac0_Eval>& _95836_e, jule::Ptr<_24904ebb3_FnCallExpr>& _95851_fc, jule::Ptr<_249c80052_Data>& _95873_d) {
	_95873_d=_249d6c309_builtinCallerOutln(_95836_e,_95851_fc,_95873_d);
	if ((_95873_d == nullptr)) {
		return nullptr;
	};
	_95873_d.get()._field_Model.operator jule::Ptr<_249bc9166_BuiltinOutlnCallExprModel>().get()._field_Debug=true;
	return _95873_d;
}



inline jule::Bool _249da2e22_FindModuleFile(jule::Slice<jule::Ptr<_238ac31c5_DirEntry>>& _1220_dirents) {
	{
		auto &expr = _1220_dirents;
		auto it = expr.begin();
		_iter_begin_24eb09c2e:;
		if (it != expr.end()) {
			jule::Ptr<_238ac31c5_DirEntry> &_1312_d = *it;
			{
				if (((!(_2389c048a_IsDir(_1312_d.get()._field_Stat.ptr()))) && (_1312_d.get()._field_Name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_24eb09c2e:;
			++it;
			goto _iter_begin_24eb09c2e;
		}
		_iter_end_24eb09c2e:;
	};
	return false;
}



inline jule::Str _249da3054_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_238ac31c5_DirEntry>> _2617_dirents = ({
				auto except = static__2397e2234_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_24eb0ab42;
				} jule::Slice<jule::Ptr<_238ac31c5_DirEntry>>();});
			});;
			jule::Bool _3013_exist = _249da2e22_FindModuleFile(_2617_dirents);;
			if (_3013_exist) {
				return _2427_path;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_239877bc1_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_24eb0ab42;
			};
		}
	_iter_next_24eb0ab42:;
	}
	_iter_end_24eb0ab42:;;
	return jule::Str();
}



inline jule::Slice<_23a8a5ca8_Log> _249da32da_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__2389ba95d_Read(_23988a9b4_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_23a8a5ca8_Log>::make({_23a8a5ca8_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});
		} jule::Slice<jule::U8>();});
	});;
	jule::Str _539_s = _23a83285b_Trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_23a8a5ca8_Log>::make({_23a8a5ca8_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});
	};
	return nullptr;
}



inline jule::Ptr<_24a4e45eb_FileInfo> _24a4e72be_ParseFile(jule::Ptr<_23abd921d_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_24a4e45eb_FileInfo> _2713_finf = jule::new_ptr<_24a4e45eb_FileInfo>();;
	std::tie(_2713_finf.get()._field_Ast,_2713_finf.get()._field_Errors) = _24a53e646_parseFileset(_2318_f);
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;
}



inline std::tuple<jule::Ptr<_24900ba82_Ast>,jule::Slice<_23a8a5ca8_Log>> _24a53e646_parseFileset(jule::Ptr<_23abd921d_File> _5521_f) {
	jule::Ptr<_24a55d0e3_parser> _5613_p = jule::new_ptr<_24a55d0e3_parser>();;
	_24a56c9b5_parse(_5613_p, _5521_f);
	return std::make_tuple(_5613_p.get()._field_ast,_5613_p.get()._field_errors);
}



inline jule::Ptr<_2490566e2_ScopeTree> _24a54004d_newScope(void) {
	return jule::new_ptr<_2490566e2_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _24a54035b_isSt(jule::Ptr<_23abd3d83_Token> _509_current, jule::Ptr<_23abd3d83_Token> _5026_prev) {
	jule::Bool _5042_ok = jule::Bool();
	jule::Bool _5052_terminated = jule::Bool();
	_5042_ok=((_509_current.get()._field_Id == static_cast<jule::U64>(5LLU)) || (_5026_prev.get()._field_Row < _509_current.get()._field_Row));
	_5052_terminated=(_509_current.get()._field_Id == static_cast<jule::U64>(5LLU));
	return std::make_tuple(_5042_ok,_5052_terminated);
}



inline jule::Bool _24a54069c_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_23abd3d83_Token>>& _5626_tokens, jule::I64& _5645_i) {
	if (((_5645_i > 1LL) && (_5626_tokens[(_5645_i - 2LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return false;
	};
	{
		jule::Ptr<_23abd3d83_Token> _6213_prev = _5626_tokens[(_5645_i - 1LL)];;
		return ((_6213_prev.get()._field_Id == static_cast<jule::U64>(20LLU)) || (((_6213_prev.get()._field_Id == static_cast<jule::U64>(7LLU)) && _23abd4878_IsBinOp(_6213_prev.get()._field_Kind)) && (_6213_prev.get()._field_Row < _5626_tokens[_5645_i].get()._field_Row)));
	};
}



inline std::tuple<jule::I64,jule::Bool> _24a540a32_nextStPos(jule::Slice<jule::Ptr<_23abd3d83_Token>>& _7115_tokens, jule::I64 _7133_start) {
	jule::I64 _7213_braceN = 0LL;;
	jule::I64 _7313_i = _7133_start;;
	for (; (_7313_i < _7115_tokens.len()); (_7313_i)++) {
		{
			jule::Bool _7517_ok = false;;
			jule::Bool _7617_terminated = false;;
			jule::Ptr<_23abd3d83_Token> _7713_tok = _7115_tokens[_7313_i];;
			{
				auto &_match_expr{ _7713_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_24eb91821:;
					{
						{
							auto &_match_expr{ _7713_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_24eb93999:;
								{
									if (((_7213_braceN == 0LL) && (_7313_i > _7133_start))) {
										if ((!(_24a54069c_prevIsIncompleteExpr(_7115_tokens,_7313_i)))) {
											std::tie(_7517_ok,_7617_terminated) = _24a54035b_isSt(_7713_tok,_7115_tokens[(_7313_i - 1LL)]);
											if (_7517_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7213_braceN)++;
								}
							}
							else {
								_case_begin_24eb922b1:;
								{
									(_7213_braceN)--;
									if (((_7213_braceN == 0LL) && ((_7313_i + 1LL) < _7115_tokens.len()))) {
										std::tie(_7517_ok,_7617_terminated) = _24a54035b_isSt(_7115_tokens[(_7313_i + 1LL)],_7713_tok);
										if (_7517_ok) {
											(_7313_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_24eb920e6:;
						};
						goto _iter_next_24eb8ee90;
					}
				}
				_match_end_24eb916cd:;
			};
			if ((_7213_braceN != 0LL)) {
				goto _iter_next_24eb8ee90;
			};
			if ((_7313_i > _7133_start)) {
				if (_24a54069c_prevIsIncompleteExpr(_7115_tokens,_7313_i)) {
					goto _iter_next_24eb8ee90;
				};
				std::tie(_7517_ok,_7617_terminated) = _24a54035b_isSt(_7713_tok,_7115_tokens[(_7313_i - 1LL)]);
			} else {
				std::tie(_7517_ok,_7617_terminated) = _24a54035b_isSt(_7713_tok,_7713_tok);
			};
			if ((!(_7517_ok))) {
				goto _iter_next_24eb8ee90;
			};
			_julec_label_return:;
			if (_7617_terminated) {
				(_7313_i)++;
			};
			return std::make_tuple(_7313_i,_7617_terminated);
		}
	_iter_next_24eb8ee90:;
	}
	_iter_end_24eb8ee90:;;
	return std::make_tuple(_7313_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_23abd3d83_Token>>,jule::Bool> _24a540d73_skipSt(jule::I64& _13316_i, jule::Slice<jule::Ptr<_23abd3d83_Token>> _13328_tokens) {
	jule::I64 _1349_start = _13316_i;;
	jule::Bool _13513_terminated = false;;
	std::tie(_13316_i,_13513_terminated) = _24a540a32_nextStPos(_13328_tokens,_1349_start);
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _13713_stTokens = _13328_tokens.slice(_1349_start,_13316_i);;
	if (_13513_terminated) {
		if ((_13713_stTokens.len() == 1LL)) {
			std::tie(_13713_stTokens,_13513_terminated) = _24a540d73_skipSt(_13316_i,_13328_tokens);
			return std::make_tuple(_13713_stTokens,_13513_terminated);
		};
		_13713_stTokens=_13713_stTokens.slice(0LL,(_13713_stTokens.len() - 1LL));
	};
	return std::make_tuple(_13713_stTokens,_13513_terminated);
}



inline jule::Slice<jule::Ptr<_24a541170_stmt>> _24a541516_splitStmts(jule::Slice<jule::Ptr<_23abd3d83_Token>>& _15520_tokens) {
	jule::Slice<jule::Ptr<_24a541170_stmt>> _15613_stmts = jule::Slice<jule::Ptr<_24a541170_stmt>>::alloc(0LL,20LL);;
	jule::I64 _15713_pos = 0LL;;
	while ((_15713_pos < _15520_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_23abd3d83_Token>> _15918_stmt;;
			jule::Bool _15924_terminated;;
			std::tie(_15918_stmt,_15924_terminated) = _24a540d73_skipSt(_15713_pos,_15520_tokens);
			_15613_stmts = jule::alloc_for_append(_15613_stmts,1);_15613_stmts.__push(jule::new_ptr<_24a541170_stmt>(_24a541170_stmt{._field_tokens=_15918_stmt, ._field_terminated=_15924_terminated}));;
		}
	_iter_next_24eb9c035:;
	}
	_iter_end_24eb9c035:;;
	return _15613_stmts;
}



inline jule::Bool _24a557c03_isTypeOp(jule::Str& _88814_kind) {
	return (((_88814_kind == jule::Str("&", 1)) || (_88814_kind == jule::Str("&&", 2))) || (_88814_kind == jule::Str("*", 1)));
}



inline jule::Bool _24a557ede_isTypeRange(jule::Slice<jule::Ptr<_23abd3d83_Token>>& _89521_tokens) {
	jule::Bool _89613_op = false;;
	{
		auto &expr = _89521_tokens;
		auto it = expr.begin();
		_iter_begin_2513257ab:;
		if (it != expr.end()) {
			jule::I64 _8979_i = it - expr.begin();
			jule::Ptr<_23abd3d83_Token> _89712_token = *it;
			{
				if ((_89712_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					if ((_89712_token.get()._field_Kind == jule::Str("[", 1))) {
						if (_89613_op) {
							return true;
						};
						jule::I64 _90325_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_23abd3d83_Token>> _90425_lTokens = _89521_tokens.slice(_8979_i);;
						{
							auto &expr = _90425_lTokens;
							auto it = expr.begin();
							_iter_begin_251326bec:;
							if (it != expr.end()) {
								jule::Ptr<_23abd3d83_Token> _90524_lToken = *it;
								{
									{
										auto &_match_expr{ _90524_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U64>(3LLU)) {
											_case_begin_25132855b:;
											{
												{
													auto &_match_expr{ _90524_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_251328e41:;
														{
															(_90325_rangeN)++;
															goto _iter_next_251326bec;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_251328eb8:;
														{
															(_90325_rangeN)--;
															goto _iter_next_251326bec;
														}
													}
													_match_end_251328c43:;
												};
											}
										}
										_match_end_251328308:;
									};
									if ((_90325_rangeN == 0LL)) {
										return _24a557c03_isTypeOp(_90524_lToken.get()._field_Kind);
									};
								}
								_iter_next_251326bec:;
								++it;
								goto _iter_begin_251326bec;
							}
							_iter_end_251326bec:;
						};
						return true;
					};
				};
				if ((!(_24a557c03_isTypeOp(_89712_token.get()._field_Kind)))) {
					return false;
				};
				_89613_op=true;
			}
			_iter_next_2513257ab:;
			++it;
			_8979_i++;
			goto _iter_begin_2513257ab;
		}
		_iter_end_2513257ab:;
	};
	return true;
}



inline jule::Slice<jule::Ptr<_23abd3d83_Token>> _24a558286_getBlockExpr(jule::Slice<jule::Ptr<_23abd3d83_Token>>& _93322_tokens) {
	jule::I64 _93413_braceN = 0LL;;
	jule::I64 _93513_skipToNextBraceClose = 0LL;;
	{
		auto &expr = _93322_tokens;
		auto it = expr.begin();
		_iter_begin_25132ab02:;
		if (it != expr.end()) {
			jule::I64 _9369_i = it - expr.begin();
			jule::Ptr<_23abd3d83_Token> _93612_tok = *it;
			{
				{
					auto &_match_expr{ _93612_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_25132b9d2:;
						{
							(_93513_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_25132ba59:;
						{
							{
								auto &_match_expr{ _93612_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_25132c86d:;
									{
										if (((_93413_braceN > 0LL) || (_93513_skipToNextBraceClose > 0LL))) {
											if ((_93513_skipToNextBraceClose > 0LL)) {
												(_93513_skipToNextBraceClose)--;
											};
											(_93413_braceN)++;
											goto _match_end_25132ca27;
										};
										return _93322_tokens.slice(0LL,_9369_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_25132d088:;
									{
										(_93413_braceN)++;
									}
								}
								else {
									_case_begin_25132cb15:;
									{
										(_93413_braceN)--;
									}
								}
								_match_end_25132ca27:;
							};
						}
					}
					_match_end_25132a4c5:;
				};
			}
			_iter_next_25132ab02:;
			++it;
			_9369_i++;
			goto _iter_begin_25132ab02;
		}
		_iter_end_25132ab02:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_23abd3d83_Token>>,jule::Slice<jule::Ptr<_23abd3d83_Token>>> _24a55861b_splitDelim(jule::Slice<jule::Ptr<_23abd3d83_Token>>& _96420_tokens, jule::U64 _96438_delim) {
	jule::I64 _96513_rangeN = 0LL;;
	{
		auto &expr = _96420_tokens;
		auto it = expr.begin();
		_iter_begin_25132e94c:;
		if (it != expr.end()) {
			jule::I64 _9669_i = it - expr.begin();
			jule::Ptr<_23abd3d83_Token> _96612_token = *it;
			{
				{
					auto &_match_expr{ _96612_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_2513305b8:;
						{
							{
								auto &_match_expr{ _96612_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_251330c5b:;
									{
										(_96513_rangeN)++;
										goto _iter_next_25132e94c;
									}
								}
								else {
									_case_begin_251330ee2:;
									{
										(_96513_rangeN)--;
									}
								}
								_match_end_251330d27:;
							};
						}
					}
					else if (_match_expr == _96438_delim) {
						_case_begin_251330640:;
						{
							if ((_96513_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_23abd3d83_Token>> _98025_l = _96420_tokens.slice(0LL,_9669_i);;
								jule::Slice<jule::Ptr<_23abd3d83_Token>> _98125_r = _96420_tokens.slice((_9669_i + 1LL));;
								return std::make_tuple(_98025_l,_98125_r);
							};
						}
					}
					_match_end_251330354:;
				};
			}
			_iter_next_25132e94c:;
			++it;
			_9669_i++;
			goto _iter_begin_25132e94c;
		}
		_iter_end_25132e94c:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _24a5588b3_findLowestPrecOp(jule::Slice<jule::Ptr<_23abd3d83_Token>>& _99122_tokens) {
	jule::U8 _99613_prec = 255LLU;;
	jule::I64 _99713_precPos = -1LL;;
	jule::I64 _99913_braceN = 0LL;;
	jule::Bool _100013_skipToNextBraceOpen = false;;
	{
		auto &expr = _99122_tokens;
		auto it = expr.begin();
		_iter_begin_2513341e3:;
		if (it != expr.end()) {
			jule::I64 _10019_i = it - expr.begin();
			jule::Ptr<_23abd3d83_Token> &_100112_token = *it;
			{
				{
					
					if ((_100112_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
						_case_begin_25133503a:;
						{
							{
								auto &_match_expr{ _100112_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_251335bd9:;
									{
										_100013_skipToNextBraceOpen=false;
										goto _case_begin_251336459;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_251336459:;
									{
										(_99913_braceN)++;
									}
								}
								else {
									_case_begin_251335e70:;
									{
										(_99913_braceN)--;
									}
								}
								_match_end_251335ca5:;
							};
							goto _iter_next_2513341e3;
						}
					}
					else if (_100013_skipToNextBraceOpen) {
						_case_begin_2513350b2:;
						{
							goto _iter_next_2513341e3;
						}
					}
					else if ((_100112_token.get()._field_Id == static_cast<jule::U64>(16LLU))) {
						_case_begin_251335139:;
						{
							_100013_skipToNextBraceOpen=true;
							goto _iter_next_2513341e3;
						}
					}
					else if ((_10019_i == 0LL)) {
						_case_begin_2513351b1:;
						{
							goto _iter_next_2513341e3;
						}
					}
					else if ((_100112_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_251335238:;
						{
							goto _iter_next_2513341e3;
						}
					}
					else if ((_99913_braceN > 0LL)) {
						_case_begin_2513352b0:;
						{
							goto _iter_next_2513341e3;
						}
					}
					_match_end_251334dc5:;
				};
				jule::Ptr<_23abd3d83_Token> _102813_left = _99122_tokens[(_10019_i - 1LL)];;
				if (((_102813_left.get()._field_Id == static_cast<jule::U64>(7LLU)) || (_102813_left.get()._field_Id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_2513341e3;
				};
				if ((((_10019_i > 1LL) && (_102813_left.get()._field_Id == static_cast<jule::U64>(3LLU))) && (_102813_left.get()._field_Kind == jule::Str("]", 1)))) {
					jule::Ptr<_23abd3d83_Token> _103617_lleft = _99122_tokens[(_10019_i - 2LL)];;
					if (((_103617_lleft.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_103617_lleft.get()._field_Kind == jule::Str("[", 1)))) {
						if (((_100112_token.get()._field_Kind == jule::Str("&", 1)) || (_100112_token.get()._field_Kind == jule::Str("*", 1)))) {
							goto _iter_next_2513341e3;
						};
					};
				};
				jule::U8 _104513_p = _23abd423a_Prec(_100112_token.ptr());;
				if (((_104513_p != 0LLU) && (_104513_p <= _99613_prec))) {
					_99613_prec=_104513_p;
					_99713_precPos=_10019_i;
				};
			}
			_iter_next_2513341e3:;
			++it;
			_10019_i++;
			goto _iter_begin_2513341e3;
		}
		_iter_end_2513341e3:;
	};
	return _99713_precPos;
}



inline jule::Ptr<_24904c95d_IdentExpr> _24a558b5a_buildIdentExpr(jule::Ptr<_23abd3d83_Token>& _105424_token) {
	return jule::new_ptr<_24904c95d_IdentExpr>(_24904c95d_IdentExpr{._field_Token=_105424_token, ._field_Ident=_105424_token.get()._field_Kind, ._field_CppLinked=false});
}



inline std::tuple<jule::Slice<jule::Ptr<_23abd3d83_Token>>,jule::I64> _24a558e02_getRangeExprTokens(jule::Slice<jule::Ptr<_23abd3d83_Token>>& _106228_tokens) {
	jule::I64 _106313_rangeN = 0LL;;
	jule::I64 _106413_i = (_106228_tokens.len() - 1LL);;
	for (; (_106413_i >= 0LL); (_106413_i)--) {
		{
			jule::Ptr<_23abd3d83_Token> _106613_tok = _106228_tokens[_106413_i];;
			if ((_106613_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _106613_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_25133e3a7:;
						{
							(_106313_rangeN)++;
						}
					}
					else {
						_case_begin_25133ecae:;
						{
							(_106313_rangeN)--;
						}
					}
					_match_end_25133ea8e:;
				};
			};
			if ((_106313_rangeN == 0LL)) {
				return std::make_tuple(_106228_tokens.slice(0LL,_106413_i),_106313_rangeN);
			};
		}
	_iter_next_25133da05:;
	}
	_iter_end_25133da05:;;
	return std::make_tuple(nullptr,_106313_rangeN);
}



inline jule::Bool _24a559b5b_checkAssignTokens(jule::Slice<jule::Ptr<_23abd3d83_Token>>& _1623_tokens) {
	if (((_1623_tokens.len() == 0LL) || (!(_23abd842b_IsAssign(_1623_tokens[0LL].get()._field_Id))))) {
		return false;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto &expr = _1623_tokens;
		auto it = expr.begin();
		_iter_begin_250cd62b1:;
		if (it != expr.end()) {
			jule::Ptr<_23abd3d83_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_250cd6dd8:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_250cd71c4:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_250cd6ea4:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_250cd62b1;
				} else if (((_2112_t.get()._field_Id == static_cast<jule::U64>(7LLU)) && _23abd896a_IsAssignOp(_2112_t.get()._field_Kind))) {
					return true;
				};
			}
			_iter_next_250cd62b1:;
			++it;
			goto _iter_begin_250cd62b1;
		}
		_iter_end_250cd62b1:;
	};
	return false;
}



inline _23a8a5ca8_Log _24a55ad7c_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_23abd921d_File>& _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _23a8a5ca8_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=_5233_f.get()._field_Path, ._field_Text=_23a8a61e8_Logf(_5243_fmt,jule::Any(_5256_args)), };
}



inline jule::Slice<jule::Ptr<_23abd3d83_Token>> _24a55b355_range(jule::I64& _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_23abd3d83_Token>>& _7163_tokens) {
	if ((_7115_i >= _7163_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_23abd3d83_Token> _759_tok = _7163_tokens[_7115_i];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;
	};
	(_7115_i)++;
	jule::I64 _8013_rangeN = 1LL;;
	jule::I64 _819_start = _7115_i;;
	for (; ((_8013_rangeN != 0LL) && (_7115_i < _7163_tokens.len())); (_7115_i)++) {
		{
			jule::Ptr<_23abd3d83_Token> _8313_token = _7163_tokens[_7115_i];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_250cdd708:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_250cdd780:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_250cdd494:;
				};
			};
		}
	_iter_next_250cdb7b1:;
	}
	_iter_end_250cdb7b1:;;
	return _7163_tokens.slice(_819_start,(_7115_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_23abd3d83_Token>>,jule::Slice<jule::Ptr<_23abd3d83_Token>>> _24a55b5ec_rangeLast(jule::Slice<jule::Ptr<_23abd3d83_Token>>& _10319_tokens) {
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _10339_cutted = jule::Slice<jule::Ptr<_23abd3d83_Token>>();
	jule::Slice<jule::Ptr<_23abd3d83_Token>> _10357_cut = jule::Slice<jule::Ptr<_23abd3d83_Token>>();
	if ((_10319_tokens.len() == 0LL)) {
		_10339_cutted = _10319_tokens;
		_10357_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10357_cut);
	} else if ((_10319_tokens[(_10319_tokens.len() - 1LL)].get()._field_Id != static_cast<jule::U64>(3LLU))) {
		_10339_cutted = _10319_tokens;
		_10357_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10357_cut);
	};
	jule::I64 _10913_braceN = 0LL;;
	jule::I64 _11013_i = (_10319_tokens.len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_23abd3d83_Token> _11213_token = _10319_tokens[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_250ce2201:;
						{
							(_10913_braceN)++;
							goto _iter_next_250cde8a2;
						}
					}
					else {
						_case_begin_250ce2b3b:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_250ce291b:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				_10339_cutted = _10319_tokens.slice(0LL,_11013_i);
				_10357_cut = _10319_tokens.slice(_11013_i);
				return std::make_tuple(_10339_cutted,_10357_cut);
			};
		}
	_iter_next_250cde8a2:;
	}
	_iter_end_250cde8a2:;;
	_10339_cutted = _10319_tokens;
	_10357_cut = nullptr;
	return std::make_tuple(_10339_cutted,_10357_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>>,jule::Slice<_23a8a5ca8_Log>> _24a55b9d7_partsKind(jule::Slice<jule::Ptr<_23abd3d83_Token>>& _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	if ((_13219_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _13713_parts = nullptr;;
	jule::Slice<_23a8a5ca8_Log> _13813_errors = nullptr;;
	jule::I64 _14013_rangeN = 0LL;;
	jule::I64 _14113_last = 0LL;;
	{
		auto &expr = _13219_tokens;
		auto it = expr.begin();
		_iter_begin_250ce6700:;
		if (it != expr.end()) {
			jule::I64 _1429_i = it - expr.begin();
			jule::Ptr<_23abd3d83_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_250ce7756:;
							{
								(_14013_rangeN)++;
								goto _iter_next_250ce6700;
							}
						}
						else {
							_case_begin_250ce7a42:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_250ce7822:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_250ce6700;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_23a8a5ca8_Log _16121_err = _24a55ad7c_makeErr(_14212_token.get()._field_Row,_14212_token.get()._field_Column,_14212_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_13813_errors = jule::alloc_for_append(_13813_errors,1);_13813_errors.__push(_16121_err);;
					};
					_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(_13219_tokens.slice(_14113_last,_1429_i));;
					_14113_last=static_cast<jule::I64>((_1429_i + 1LL));
				};
			}
			_iter_next_250ce6700:;
			++it;
			_1429_i++;
			goto _iter_begin_250ce6700;
		}
		_iter_end_250ce6700:;
	};
	if ((_14113_last < _13219_tokens.len())) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(_13219_tokens.slice(_14113_last));;
	} else if ((!(_13254_expr_must))) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(jule::Slice<jule::Ptr<_23abd3d83_Token>>());;
	};
	return std::make_tuple(_13713_parts,_13813_errors);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>>,jule::Slice<_23a8a5ca8_Log>> _24a55bdc2_parts(jule::Slice<jule::Ptr<_23abd3d83_Token>>& _18415_tokens, jule::U64 _18433_id, jule::Bool _18446_expr_must) {
	if ((_18415_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_23abd3d83_Token>>> _18913_parts = nullptr;;
	jule::Slice<_23a8a5ca8_Log> _19013_errors = nullptr;;
	jule::I64 _19213_rangeN = 0LL;;
	jule::I64 _19313_last = 0LL;;
	{
		auto &expr = _18415_tokens;
		auto it = expr.begin();
		_iter_begin_250ced6a2:;
		if (it != expr.end()) {
			jule::I64 _1949_i = it - expr.begin();
			jule::Ptr<_23abd3d83_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_250cee708:;
							{
								(_19213_rangeN)++;
								goto _iter_next_250ced6a2;
							}
						}
						else {
							_case_begin_250cee9e4:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_250cee7c4:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_250ced6a2;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_23a8a5ca8_Log _21321_err = _24a55ad7c_makeErr(_19412_token.get()._field_Row,_19412_token.get()._field_Column,_19412_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_19013_errors = jule::alloc_for_append(_19013_errors,1);_19013_errors.__push(_21321_err);;
					};
					_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(_18415_tokens.slice(_19313_last,_1949_i));;
					_19313_last=static_cast<jule::I64>((_1949_i + 1LL));
				};
			}
			_iter_next_250ced6a2:;
			++it;
			_1949_i++;
			goto _iter_begin_250ced6a2;
		}
		_iter_end_250ced6a2:;
	};
	if ((_19313_last < _18415_tokens.len())) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(_18415_tokens.slice(_19313_last));;
	} else if ((!(_18446_expr_must))) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(jule::Slice<jule::Ptr<_23abd3d83_Token>>());;
	};
	return std::make_tuple(_18913_parts,_19013_errors);
}



inline jule::Str _24a55c169_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_250d03971:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_250cee098:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_250cee10e:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_250cee032:;
			{
				return jule::Str();
			}
		}
		_match_end_250d03157:;
	};
}



inline _23a8a5ca8_Log _24a55c554_compilerErr(jule::Ptr<_23abd3d83_Token>& _24317_token, jule::Str& _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _23a8a5ca8_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_24317_token.get()._field_Row, ._field_Column=_24317_token.get()._field_Column, ._field_Path=_24317_token.get()._field_File.get()._field_Path, ._field_Text=_23a8a61e8_Logf(_24333_fmt,jule::Any(_24346_args)), ._field_Line=_23abda3ea_GetRow(_24317_token.get()._field_File.ptr(), _24317_token.get()._field_Row), };
}



inline void _24a55c983_pushSuggestion(_23a8a5ca8_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_23a8a61e8_Logf(_25441_fmt,jule::Any(_25454_args));
}



inline jule::Str _24a55cc2a_tokstoa(jule::Slice<jule::Ptr<_23abd3d83_Token>>& _25813_tokens) {
	jule::I64 _25913_n = 0LL;;
	{
		auto &expr = _25813_tokens;
		auto it = expr.begin();
		_iter_begin_250d06aa6:;
		if (it != expr.end()) {
			jule::Ptr<_23abd3d83_Token> &_26012_token = *it;
			{
				_25913_n+=_26012_token.get()._field_Kind.len();
			}
			_iter_next_250d06aa6:;
			++it;
			goto _iter_begin_250d06aa6;
		}
		_iter_end_250d06aa6:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto &expr = _25813_tokens;
		auto it = expr.begin();
		_iter_begin_250d07469:;
		if (it != expr.end()) {
			jule::Ptr<_23abd3d83_Token> &_26412_token = *it;
			{
				_26313_s+=_26412_token.get()._field_Kind;
			}
			_iter_next_250d07469:;
			++it;
			goto _iter_begin_250d07469;
		}
		_iter_end_250d07469:;
	};
	return _26313_s;
}



inline jule::Bool _24a56cc90_isPub(jule::Str& _203511_ident) {
	jule::I32 _203610_r;;
	std::tie(_203610_r,std::ignore) = _23a809cea_DecodeRuneStr(_203511_ident);
	return _23a748761_IsUpper(_203610_r);
}



inline jule::Ptr<_2490463c4_TypeDecl> _24a56d60e_buildVoidType(void) {
	return jule::new_ptr<_2490463c4_TypeDecl>();
}



inline jule::Ptr<_2490463c4_TypeDecl> _24a56d873_buildPrimType(jule::Ptr<_23abd3d83_Token> _2322_t) {
	return jule::new_ptr<_2490463c4_TypeDecl>(_2490463c4_TypeDecl{._field_Token=_2322_t, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_24904698a_IdentTypeDecl>(_24904698a_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }))});
}



inline std::tuple<jule::Bool,jule::Bool> _249d76ae9_checkOs(jule::Str _912_arg) {
	jule::Bool _924_ok = jule::Bool();
	jule::Bool _934_exist = jule::Bool();
	_924_ok=false;
	_934_exist=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_251557878:;
			{
				_924_ok=_23a8a910d_IsWindows(_23a900176_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_251557449:;
			{
				_924_ok=_23a8a93b6_IsDarwin(_23a900176_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_251557229:;
			{
				_924_ok=_23a8a965d_IsLinux(_23a900176_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_251557290:;
			{
				_924_ok=_23a8aa263_IsUnix(_23a900176_Os);
			}
		}
		else {
			_case_begin_251556976:;
			{
				_924_ok=true;
				_934_exist=false;
			}
		}
		_match_end_251556dd8:;
	};
	return std::make_tuple(_924_ok,_934_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _249d76c2b_checkArch(jule::Str _2814_arg) {
	jule::Bool _2826_ok = jule::Bool();
	jule::Bool _2836_exist = jule::Bool();
	_2826_ok=false;
	_2836_exist=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_25155a0a6:;
			{
				_2826_ok=_23a8a997c_IsI386(_23a8de64e_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_251559b77:;
			{
				_2826_ok=_23a8a9c24_IsAmd64(_23a8de64e_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_251559957:;
			{
				_2826_ok=_23a8a9ebb_IsArm64(_23a8de64e_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_2515599bd:;
			{
				_2826_ok=_23a8aa87e_Is64Bit(_23a8de64e_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_251559a34:;
			{
				_2826_ok=_23a8aa5d7_Is32Bit(_23a8de64e_Arch);
			}
		}
		else {
			_case_begin_2515591b5:;
			{
				_2826_ok=true;
				_2836_exist=false;
			}
		}
		_match_end_251559616:;
	};
	return std::make_tuple(_2826_ok,_2836_exist);
}



inline jule::Bool _249d76d5d_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_239872baa_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL,(_529_n - _23989348e_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _23a82d23b_FindLastByte(_5029_p,'_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok;;
		jule::Bool _6726_exist;;
		std::tie(_6718_ok,_6726_exist) = _249d76ae9_checkOs(_5029_p);
		if (_6726_exist) {
			return _6718_ok;
		};
		std::tie(_6718_ok,_6726_exist) = _249d76c2b_checkArch(_5029_p);
		return ((!(_6726_exist)) || _6718_ok);
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL,_6413_i);;
	_6413_i=static_cast<jule::I64>(_23a82d23b_FindLastByte(_5029_p,'_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok;;
		jule::Bool _8826_exist;;
		std::tie(_8818_ok,_8826_exist) = _249d76ae9_checkOs(_5813_a1);
		if (_8826_exist) {
			return _8818_ok;
		};
		std::tie(_8818_ok,_8826_exist) = _249d76c2b_checkArch(_5813_a1);
		return ((!(_8826_exist)) || _8818_ok);
	};
	jule::Bool _9614_ok;;
	jule::Bool _9622_exist;;
	std::tie(_9614_ok,_9622_exist) = _249d76c2b_checkArch(_5813_a1);
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;
		};
		std::tie(_9614_ok,_9622_exist) = _249d76ae9_checkOs(_6113_a2);
		return ((!(_9622_exist)) || _9614_ok);
	};
	std::tie(_9614_ok,_9622_exist) = _249d76ae9_checkOs(_5813_a1);
	return ((!(_9622_exist)) || _9614_ok);
}



inline void _249d91c79_setOsVars(jule::Slice<jule::Str>& _3619_vars) {
	_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(_23a900176_Os);;
	if (_23a8aa263_IsUnix(_23a900176_Os)) {
		_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _249d91ecc_setArchVars(jule::Slice<jule::Str>& _4421_vars) {
	_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(_23a8de64e_Arch);;
	if (_23a8aa87e_Is64Bit(_23a8de64e_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x64", 3));;
	};
	if (_23a8aa5d7_Is32Bit(_23a8de64e_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _249d92285_initVars(jule::Slice<jule::Str>& _5518_vars, _249d9196b_CompileInfo& _5532_info) {
	_249d91c79_setOsVars(_5518_vars);
	_249d91ecc_setArchVars(_5518_vars);
	if (_5532_info._field_Prod) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("production", 10));;
	};
	if (_5532_info._field_Test) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5532_info._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_25156636a:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_2515663d1:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_2515660b2:;
	};
	{
		auto &_match_expr{ _5532_info._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_2515679dc:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_251567a53:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_251567ab9:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_251567987:;
	};
}



inline jule::Slice<jule::U8> _249e6b11c_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__2389ba95d_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_23a905467_Exit(1LL);
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _23a8a5ca8_Log _249e87ee6_flatCompilerErr(jule::Str _4120_text) {
	return _23a8a5ca8_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };
}



inline void _24a319ad6_pushPasses(jule::Ptr<_249c140d5_Package>& _11120_p, jule::Slice<jule::Str>& _11144_passes) {
	{
		auto &expr = _11120_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_2515a2582:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11217_f.get()._field_Passes;
					auto it = expr.begin();
					_iter_begin_2515a3264:;
					if (it != expr.end()) {
						_249bcd5cc_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_2515a3264;
							};
							{
								auto &expr = _11144_passes;
								auto it = expr.begin();
								_iter_begin_2515a4155:;
								if (it != expr.end()) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_2515a3264;
										};
									}
									_iter_next_2515a4155:;
									++it;
									goto _iter_begin_2515a4155;
								}
								_iter_end_2515a4155:;
							};
							_11144_passes = jule::alloc_for_append(_11144_passes,1);_11144_passes.__push(_11416_pass._field_Text);;
						}
						_iter_next_2515a3264:;
						++it;
						goto _iter_begin_2515a3264;
					}
					_iter_end_2515a3264:;
				};
			}
			_iter_next_2515a2582:;
			++it;
			goto _iter_begin_2515a2582;
		}
		_iter_end_2515a2582:;
	};
}



inline jule::Slice<jule::Str> _24a33783a_getAllUniquePasses(jule::Ptr<_249c140d5_Package>& _12828_pkg, jule::Slice<jule::Ptr<_249c1117b_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_24a319ad6_pushPasses(_12828_pkg,_12913_passes);
	{
		auto &expr = _12853_uses;
		auto it = expr.begin();
		_iter_begin_2515a57b6:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_24a319ad6_pushPasses(_13217_u.get()._field_Package,_12913_passes);
				};
			}
			_iter_next_2515a57b6:;
			++it;
			goto _iter_begin_2515a57b6;
		}
		_iter_end_2515a57b6:;
	};
	return _12913_passes;
}



inline _249d9196b_CompileInfo _24a34301b_buildCompileInfo(void) {
	_249d9196b_CompileInfo _14213_info = _249d9196b_CompileInfo{._field_Prod=_2388e8913_Production, ._field_Test=_2388e7dda_Test, };;
	{
		auto &_match_expr{ _2388e7192_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_2515a6d39:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_2515a6db1:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_2515a6cb2:;
	};
	{
		auto &_match_expr{ _2388e766a_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_2515a79e9:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_2515a6597:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2515a72ac:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_2515a76db:;
	};
	return _14213_info;
}



inline void _24a672bec_EliminateDefines(jule::Ptr<_24a1bc659_IR>& _28526_ir) {
	jule::Ptr<_24a63d1d4_ObjectDeadCode> _28613_ocd = static__24a63d635_new(_28526_ir);;
	_24a672933_elimanate(_28613_ocd);
}



inline jule::Ptr<_24900cb2c_Directive> _24a673082_findDirective(jule::Slice<jule::Ptr<_24900cb2c_Directive>>& _29123_directives, jule::Str _29154_tag) {
	{
		auto &expr = _29123_directives;
		auto it = expr.begin();
		_iter_begin_2515ec423:;
		if (it != expr.end()) {
			jule::Ptr<_24900cb2c_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;
				};
			}
			_iter_next_2515ec423:;
			++it;
			goto _iter_begin_2515ec423;
		}
		_iter_end_2515ec423:;
	};
	return nullptr;
}



inline jule::Bool _24a6733c3_hasDirective(jule::Slice<jule::Ptr<_24900cb2c_Directive>>& _30118_directives, jule::Str _30149_tag) {
	return (_24a673082_findDirective(_30118_directives,_30149_tag) != nullptr);
}



inline void _24a677020_eliminateDeadCodeOfScope(jule::Ptr<_249be2635_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_249be4d74_Label>> _2429_labels = jule::Slice<jule::Ptr<_249be4d74_Label>>::alloc(0LL,16LLU);;
	jule::Slice<jule::Ptr<_249be5160_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_249be5160_GotoSt>>::alloc(0LL,16LLU);;
	jule::Ptr<_24a67411b_scopeDeadCode> _24413_sdc = jule::new_ptr<_24a67411b_scopeDeadCode>(_24a67411b_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_249be4d74_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_249be5160_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_24a676c34_optimizeStmts(_24413_sdc);
	};
}



inline void _24a6772a6_eliminateScopeFunctions(jule::Slice<jule::Ptr<_249bcbe38_Fn>>& _25433_funcs) {
	{
		auto &expr = _25433_funcs;
		auto it = expr.begin();
		_iter_begin_2516435ce:;
		if (it != expr.end()) {
			jule::Ptr<_249bcbe38_Fn> _25517_func = *it;
			{
				{
					auto &expr = _25517_func.get()._field_Instances;
					auto it = expr.begin();
					_iter_begin_251643c3e:;
					if (it != expr.end()) {
						jule::Ptr<_249bcc312_FnIns> _25621_ins = *it;
						{
							_24a677020_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_251643c3e:;
						++it;
						goto _iter_begin_251643c3e;
					}
					_iter_end_251643c3e:;
				};
			}
			_iter_next_2516435ce:;
			++it;
			goto _iter_begin_2516435ce;
		}
		_iter_end_2516435ce:;
	};
}



inline void _24a6774e8_eliminateFunctionsScopePackage(jule::Ptr<_249c140d5_Package>& _26240_pkg) {
	{
		auto &expr = _26240_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_251644190:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _26317_f = *it;
			{
				_24a6772a6_eliminateScopeFunctions(_26317_f.get()._field_Funcs);
			}
			_iter_next_251644190:;
			++it;
			goto _iter_begin_251644190;
		}
		_iter_end_251644190:;
	};
}



inline void _24a677790_eliminateScopePackage(jule::Ptr<_249c140d5_Package>& _26831_pkg) {
	_24a6774e8_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _24a67799e_EliminateScopes(jule::Ptr<_24a1bc659_IR>& _27325_ir) {
	jule::I64 _27413_i = (_27325_ir.get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_249c1117b_ImportInfo> _27617_u = _27325_ir.get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_24a677790_eliminateScopePackage(_27617_u.get()._field_Package);
			};
		}
	_iter_next_251645e1c:;
	}
	_iter_end_251645e1c:;;
	_24a677790_eliminateScopePackage(_27325_ir.get()._field_Main);
}



inline jule::Bool _23ad4b1c6_isStdPackage(jule::Str _39917_f, jule::Str _39925_p) {
	return _23a82a128_HasPrefix(_39917_f,_23988a9b4_Join(jule::Slice<jule::Str>::make({_23a8de9d4_PathStdlib,_39925_p})));
}



inline jule::Bool _23ad4dd55_isConstantValidConditionalCase(jule::Ptr<_249be2a31_If>& _40336_i) {
	{
		auto &_match_expr{ _40336_i.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_2491152a6_Const>>()) {
			_case_begin_2516c1d33:;
			{
				jule::Ptr<_2491152a6_Const> _40613_c = _40336_i.get()._field_Expr.operator jule::Ptr<_2491152a6_Const>();;
				return (_2491273d9_IsBool(_40613_c.ptr()) && _24915de8c_ReadBool(_40613_c.ptr()));
			}
		}
		_match_end_2516c2482:;
	};
	return false;
}



inline jule::Bool _23ad50461_isUnreachableExpr(jule::Any& _41223_expr) {
	{
		auto &_match_expr{ _41223_expr };
		
		if (_match_expr.type_is<jule::Ptr<_2491152a6_Const>>()) {
			_case_begin_2516c2817:;
			{
				jule::Ptr<_2491152a6_Const> _41513_c = _41223_expr.operator jule::Ptr<_2491152a6_Const>();;
				return (_2491273d9_IsBool(_41513_c.ptr()) && (!(_24915de8c_ReadBool(_41513_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc63d8_BinopExprModel>>()) {
			_case_begin_2516c288e:;
			{
				jule::Ptr<_249bc63d8_BinopExprModel> _41813_m = _41223_expr.operator jule::Ptr<_249bc63d8_BinopExprModel>();;
				if ((_41813_m.get()._field_Op.get()._field_Kind == jule::Str("&&", 2))) {
					return (_23ad50461_isUnreachableExpr(_41813_m.get()._field_Left.get()._field_Model) || _23ad50461_isUnreachableExpr(_41813_m.get()._field_Right.get()._field_Model));
				};
			}
		}
		_match_end_2516c3483:;
	};
	return false;
}



inline jule::Bool _23ad530e0_isConstantValidMatchCase(jule::Ptr<_249be6dcb_Case>& _42730_case) {
	{
		auto &expr = _42730_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_2516c3a27:;
		if (it != expr.end()) {
			jule::Ptr<_249c80052_Data> &_42812_expr = *it;
			{
				if (((_249c80915_IsConst(_42812_expr.ptr()) && _2491273d9_IsBool(_42812_expr.get()._field_Constant.ptr())) && _24915de8c_ReadBool(_42812_expr.get()._field_Constant.ptr()))) {
					return true;
				};
			}
			_iter_next_2516c3a27:;
			++it;
			goto _iter_begin_2516c3a27;
		}
		_iter_end_2516c3a27:;
	};
	return false;
}



inline jule::Bool _23ad54344_isUnreachableConditionalCase(jule::Ptr<_249be2a31_If>& _43634_i) {
	return _23ad50461_isUnreachableExpr(_43634_i.get()._field_Expr);
}



inline jule::Bool _23ad5c24d_isUnreachableMatchCase(jule::Ptr<_249be6dcb_Case>& _44028_case) {
	{
		auto &expr = _44028_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_2516c783e:;
		if (it != expr.end()) {
			jule::Ptr<_249c80052_Data> &_44112_expr = *it;
			{
				if ((!(_23ad50461_isUnreachableExpr(_44112_expr.get()._field_Model)))) {
					return false;
				};
			}
			_iter_next_2516c783e:;
			++it;
			goto _iter_begin_2516c783e;
		}
		_iter_end_2516c783e:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _23b412acd_checkForBitShiftOpt(jule::Ptr<_249bc61eb_OperandExprModel>& _45125_l, jule::Ptr<_249bc61eb_OperandExprModel>& _45148_r) {
	jule::Bool _45172_ok = jule::Bool();
	jule::U64 _45182_x = jule::U64();
	if (((!(_249bc42e8_IsInt(_249cb0b87_Str(_45125_l.get()._field_Kind.ptr())))) || (!(_249bc42e8_IsInt(_249cb0b87_Str(_45148_r.get()._field_Kind.ptr())))))) {
		_45172_ok = false;
		_45182_x = 0LLU;
		return std::make_tuple(_45172_ok,_45182_x);
	};
	{
		auto &_match_expr{ _45148_r.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_2491152a6_Const>>()) {
			_case_begin_2517195b7:;
			{
				goto _match_end_25171a2cc;
			}
		}
		else {
			_case_begin_25171a332:;
			{
				_45172_ok = false;
				_45182_x = 0LLU;
				return std::make_tuple(_45172_ok,_45182_x);
			}
		}
		_match_end_25171a2cc:;
	};
	_45182_x=static_cast<jule::U64>(_24915c3a8_AsU64(_45148_r.get()._field_Model.operator jule::Ptr<_2491152a6_Const>().ptr()));
	if (((_45182_x == 0LLU) || ((_45182_x & 1LL) != 0LLU))) {
		_45172_ok = false;
		_45182_x = 0LLU;
		return std::make_tuple(_45172_ok,_45182_x);
	};
	jule::F64 _4659_j = _249b93b25_Log2(static_cast<jule::F64>(static_cast<jule::F64>(_45182_x)));;
	jule::U64 _4669_z = static_cast<jule::U64>(_4659_j);;
	if ((static_cast<jule::F64>(_4669_z) != _4659_j)) {
		_45172_ok = false;
		_45182_x = 0LLU;
		return std::make_tuple(_45172_ok,_45182_x);
	};
	_45172_ok = true;
	_45182_x = _4669_z;
	return std::make_tuple(_45172_ok,_45182_x);
}



inline void _23b416c25_PushOptLevel(jule::I64 _3217_level) {
	_23ac1c64c_Copy=(_3217_level >= static_cast<jule::I64>(1LL));
	_23ac21b7e_Deadcode=(_3217_level >= static_cast<jule::I64>(1LL));
	_23ac0a915_Append=(_3217_level >= static_cast<jule::I64>(1LL));
	_23ac46236_Math=(_3217_level >= static_cast<jule::I64>(1LL));
	_23ac4e45e_Access=(_3217_level >= static_cast<jule::I64>(1LL));
	_23ac5242e_Inline=(_3217_level >= static_cast<jule::I64>(1LL));
	_23ac5284c_Ptr=(_3217_level >= static_cast<jule::I64>(1LL));
	_23ac53243_Cond=(_3217_level >= static_cast<jule::I64>(1LL));
}



inline void _24a5ede64_detectEnabled(void) {
	_24a574a22_exprEnabled=(((_23ac5284c_Ptr || _23ac46236_Math) || _23ac4e45e_Access) || _23ac53243_Cond);
	_24a575b77_scopeEnabled=((_23ac53243_Cond || _23ac0a915_Append) || _23ac1c64c_Copy);
}



inline void _24a68546d_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_23a905467_Exit(1LL);
}



inline jule::U64 _24acab313_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _24acab621_unixYearToSeconds(jule::U64 _20122_y, jule::Bool& _20140_leap) {
	if (((_20122_y - 2LLU) <= 136LLU)) {
		jule::U64 _20317_leaps = ((_20122_y - 68LLU) >> 2LLU);;
		_20140_leap=(((_20122_y - 68LLU) & 3LLU) == 0LLU);
		if (_20140_leap) {
			(_20317_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_20122_y - 70LLU)) + (86400LLU * _20317_leaps)));
	};
	jule::U64 _21113_leaps = 0LLU;;
	jule::U64 _21213_centuries = 0LLU;;
	jule::U64 _21313_cycles = ((_20122_y - 100LLU) / 400LLU);;
	jule::U64 _21413_rem = ((_20122_y - 100LLU) % 400LL);;
	if ((_21413_rem < 0LLU)) {
		(_21313_cycles)--;
		_21413_rem+=400LLU;
	};
	if ((_21413_rem == 0LLU)) {
		_20140_leap=true;
		_21213_centuries=0LLU;
		_21113_leaps=0LLU;
	} else {
		if ((_21413_rem >= 200LLU)) {
			if ((_21413_rem >= 300LLU)) {
				_21213_centuries=3LLU;
				_21413_rem-=300LLU;
			} else {
				_21213_centuries=2LLU;
				_21413_rem-=200LLU;
			};
		} else {
			if ((_21413_rem >= 100LLU)) {
				_21213_centuries=1LLU;
				_21413_rem-=100LLU;
			} else {
				_21213_centuries=0LLU;
			};
		};
		if ((_21413_rem == 0LLU)) {
			_20140_leap=false;
			_21113_leaps=0LLU;
		} else {
			_21113_leaps=static_cast<jule::U64>((_21413_rem >> 2LLU));
			_21413_rem%=4LL;
			_20140_leap=(_21413_rem == 0LLU);
		};
	};
	_21113_leaps+=((97LLU * _21313_cycles) + (24LLU * _21213_centuries));
	if (_20140_leap) {
		(_21113_leaps)++;
	};
	return static_cast<jule::U64>((((((_20122_y - 100LLU) * 31536000LLU) + (_21113_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _24acab9a6_unixMonthToSeconds(jule::U64 _25823_m, jule::Bool _25836_leap) {
	jule::U64 _26013_t = 0LLU;;
	{
		auto &_match_expr{ _25823_m };
		
		if (_match_expr == 1LL) {
			_case_begin_2517a7523:;
			{
				_26013_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_2517a76aa:;
			{
				_26013_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_2517a7721:;
			{
				_26013_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_2517a7787:;
			{
				_26013_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_2517a77ed:;
			{
				_26013_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_2517a7864:;
			{
				_26013_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_2517a78ca:;
			{
				_26013_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_2517a7941:;
			{
				_26013_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_2517a79a7:;
			{
				_26013_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_2517a7a2e:;
			{
				_26013_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_2517a7aa6:;
			{
				_26013_t=28857600LLU;
			}
		}
		_match_end_2517a74bd:;
	};
	if ((_25836_leap && (_25823_m >= 2LLU))) {
		_26013_t+=86400LLU;
	};
	return _26013_t;
}



inline jule::Bool _24ac0996a_isCopyOptimizable(jule::Ptr<_249c80052_Data>& _77123_expr) {
	if ((!(_77123_expr.get()._field_Lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _77123_expr.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_249bc7be2_SlicingExprModel>>()) {
			_case_begin_251851a40:;
			{
				return false;
			}
		}
		_match_end_2518519da:;
	};
	return true;
}



inline jule::Bool _24ac09d00_isIterCopyOptimizable(jule::Ptr<_249c80052_Data>& _78227_expr, jule::Ptr<_249c3702b_Var>& _78241_v) {
	if (((!(_78227_expr.get()._field_Lvalue)) && (!(_249cb1b88_Mutable(_78227_expr.get()._field_Kind.ptr()))))) {
		return true;
	};
	return ((!(_78241_v.get()._field_Mutable)) && (!(_78227_expr.get()._field_Mutable)));
}



inline jule::Str _24ac18715_decomposeCommonEsq(jule::U8 _117723_b) {
	{
		auto &_match_expr{ _117723_b };
		
		if (_match_expr == '\\') {
			_case_begin_25191c0b1:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_25191c127:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_25191c18d:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_25191c204:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_25191c457:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_25191c4bd:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_25191c534:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_25191c59a:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_25191c611:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_25191c7cb:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_25191c028:;
			{
				return jule::Str();
			}
		}
		_match_end_25191be6d:;
	};
}



inline jule::Str _24ac18a01_sbtoa(jule::U8 _120410_b) {
	if ((_120410_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_120410_b < 128LLU)) {
		jule::Str _120913_seq = _24ac18715_decomposeCommonEsq(_120410_b);;
		if ((!(_120913_seq.empty()))) {
			return _120913_seq;
		};
		if (((32LL <= _120410_b) && (_120410_b <= 126LLU))) {
			return static_cast<jule::Str>(_120410_b);
		};
	};
	jule::Str _12179_seq = _249bc259e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_120410_b)),8LL);;
	if ((_12179_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _12179_seq);
	};
	return (jule::Str("\\", 1) + _12179_seq);
}



inline jule::Str _24ac18c98_cstrBytes(jule::Slice<jule::U8> _122414_bytes) {
	jule::Str _122513_lit = jule::Str::alloc(0LL, _122414_bytes.len());;
	{
		auto &expr = _122414_bytes;
		auto it = expr.begin();
		_iter_begin_251923c88:;
		if (it != expr.end()) {
			jule::U8 &_122612_b = *it;
			{
				_122513_lit+=_24ac18a01_sbtoa(_122612_b);
			}
			_iter_next_251923c88:;
			++it;
			goto _iter_begin_251923c88;
		}
		_iter_end_251923c88:;
	};
	return _122513_lit;
}



inline jule::Str _24ac190b7_cstrLit(jule::Slice<jule::U8> _123212_bytes) {
	return ((jule::Str("\"", 1) + _24ac18c98_cstrBytes(_123212_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _24ac193c5_ftoa(jule::F64 _12369_f, jule::I64 _123617_bitsize) {
	if ((_123617_bitsize != 32LL)) {
		if ((_12369_f == static_cast<jule::F64>(static_cast<jule::I64>(_12369_f)))) {
			return _24ac1966c_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12369_f)));
		};
		if ((_12369_f == static_cast<jule::F64>(static_cast<jule::U64>(_12369_f)))) {
			return _24ac19914_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12369_f)));
		};
	};
	jule::Str _124513_m = _249602be4_FmtFloat(_12369_f,'f',-1LL,_123617_bitsize);;
	if ((!(_23a82eabc_Contains(_124513_m,jule::Str(".", 1))))) {
		_124513_m+=jule::Str(".0", 2);
	};
	return _124513_m;
}



inline jule::Str _24ac1966c_itoa(jule::I64 _12529_x) {
	{
		
		if ((_12529_x == jule::MAX_I64)) {
			_case_begin_2519277a3:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12529_x == jule::MIN_I64)) {
			_case_begin_251927819:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_25192764e:;
	};
	jule::Str _12609_fmt = _249bc26d1_FmtInt(_12529_x,10LL);;
	if (_23a8aa87e_Is64Bit(jule::Str("amd64", 5))) {
		return (_12609_fmt + jule::Str("LL", 2));
	};
	return (_12609_fmt + jule::Str("L", 1));
}



inline jule::Str _24ac19914_utoa(jule::U64 _12679_x) {
	{
		
		if ((_12679_x == jule::MAX_U64)) {
			_case_begin_25192973e:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_251929651:;
	};
	jule::Str _12739_fmt = _249bc259e_FmtUint(_12679_x,10LL);;
	if (_23a8aa87e_Is64Bit(jule::Str("amd64", 5))) {
		return (_12739_fmt + jule::Str("LLU", 3));
	};
	return (_12739_fmt + jule::Str("LU", 2));
}



inline jule::Bool _24ac19cbb_isForwarded(jule::Ptr<_249be2635_Scope>& _128017_s) {
	jule::Any _12819_last = _128017_s.get()._field_Stmts[(_128017_s.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _12819_last };
		
		if (_match_expr.type_is<jule::Ptr<_249c80052_Data>>()) {
			_case_begin_25192c2e1:;
			{
				{
					auto &_match_expr{ _12819_last.operator jule::Ptr<_249c80052_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_249bcaa19_BuiltinErrorCallExprModel>>()) {
						_case_begin_25192cec3:;
						{
							return true;
						}
					}
					else {
						_case_begin_25192c7db:;
						{
							return false;
						}
					}
					_match_end_25192be6c:;
				};
			}
		}
		else {
			_case_begin_25192bb4d:;
			{
				return true;
			}
		}
		_match_end_25192bae8:;
	};
}



inline jule::Bool _24ac1a085_isBuiltinCallHasDebuginf(jule::Ptr<_249bc7065_FnCallExprModel>& _129530_m) {
	if ((!(_249bcc4ee_IsBuiltin(_129530_m.get()._field_Func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _129530_m.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_249bc8aa0_CommonSubIdentExprModel>>()) {
			_case_begin_25192dd81:;
			{
				jule::Ptr<_249bc8aa0_CommonSubIdentExprModel> _130113_csie = _129530_m.get()._field_Expr.operator jule::Ptr<_249bc8aa0_CommonSubIdentExprModel>();;
				return (_130113_csie.get()._field_Ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_25192d688:;
			{
				return false;
			}
		}
		_match_end_25192cdc4:;
	};
}



inline jule::Bool _24ac1a2b6_isExprComesFromBind(jule::Ptr<_249c80052_Data>& _130825_d) {
	{
		auto &_match_expr{ _130825_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_249c3702b_Var>>()) {
			_case_begin_25193028e:;
			{
				return _130825_d.get()._field_Model.operator jule::Ptr<_249c3702b_Var>().get()._field_CppLinked;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_249bc82ec_StructSubIdentExprModel>>()) {
			_case_begin_251930305:;
			{
				return _130825_d.get()._field_Model.operator jule::Ptr<_249bc82ec_StructSubIdentExprModel>().get()._field_Owner.get()._field_Decl.get()._field_CppLinked;
			}
		}
		else {
			_case_begin_25192db72:;
			{
				return false;
			}
		}
		_match_end_25192ecc7:;
	};
}



inline void _24acb4519_iterFiles(jule::Ptr<_249c140d5_Package>& _100219_pkg, jule::Fn<void(jule::Ptr<_249c7a228_SymbolTable>&)> _100234_f) {
	{
		auto &expr = _100219_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_251a88518:;
		if (it != expr.end()) {
			jule::Ptr<_249c7a228_SymbolTable> _100317_file = *it;
			{
				_100234_f(_100317_file);
			}
			_iter_next_251a88518:;
			++it;
			goto _iter_begin_251a88518;
		}
		_iter_end_251a88518:;
	};
}



inline void _24acb464b_prepareStructure(jule::Ptr<_249036b01_Struct>& _100826_s) {
	{
		auto &expr = _100826_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_251a88caa:;
		if (it != expr.end()) {
			jule::Ptr<_249062e4b_StructIns> _100917_ins = *it;
			{
				{
					auto &expr = _100917_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_251a8996a:;
					if (it != expr.end()) {
						jule::Ptr<_249bcbe38_Fn> _101021_m = *it;
						{
							if (_101021_m.get()._field_Statically) {
								goto _iter_next_251a8996a;
							};
							{
								auto &expr = _101021_m.get()._field_Instances;
								auto it = expr.begin();
								_iter_begin_251a8a7b2:;
								if (it != expr.end()) {
									jule::Ptr<_249bcc312_FnIns> _101425_mins = *it;
									{
										jule::Ptr<_249bcc125_ParamIns> _101525_p = _101425_mins.get()._field_Params[0LL];;
										if ((!(_24909be1e_IsRef(_101525_p.get()._field_Decl.ptr())))) {
											_101525_p.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(jule::new_ptr<_24acb5581_customType>(_24acb5581_customType{._field_kind=static__24acb6e34_asPtr(static__24acba432_kind(_101525_p.get()._field_Kind))}), 13)});
										} else {
											_101525_p.get()._field_Kind=jule::new_ptr<_249cb078b_TypeKind>(_249cb078b_TypeKind{._field_Kind=jule::Trait<_249cb035c_Kind>(jule::new_ptr<_24acb5581_customType>(_24acb5581_customType{._field_kind=static__24acba432_kind(_101525_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_251a8a7b2:;
									++it;
									goto _iter_begin_251a8a7b2;
								}
								_iter_end_251a8a7b2:;
							};
						}
						_iter_next_251a8996a:;
						++it;
						goto _iter_begin_251a8996a;
					}
					_iter_end_251a8996a:;
				};
			}
			_iter_next_251a88caa:;
			++it;
			goto _iter_begin_251a88caa;
		}
		_iter_end_251a88caa:;
	};
}



inline jule::Str _24acb486b_concatAllParts(jule::Slice<jule::Ptr<_23abd3d83_Token>> _103519_parts) {
	jule::I64 _103613_n = 0LL;;
	{
		auto &expr = _103519_parts;
		auto it = expr.begin();
		_iter_begin_251a8a0a8:;
		if (it != expr.end()) {
			jule::Ptr<_23abd3d83_Token> &_103712_part = *it;
			{
				_103613_n+=_103712_part.get()._field_Kind.len();
			}
			_iter_next_251a8a0a8:;
			++it;
			goto _iter_begin_251a8a0a8;
		}
		_iter_end_251a8a0a8:;
	};
	if ((_103613_n == 0LL)) {
		return jule::Str();
	};
	jule::Str _104313_s = jule::Str::alloc(0LL, _103613_n);;
	{
		auto &expr = _103519_parts;
		auto it = expr.begin();
		_iter_begin_251a8d6d8:;
		if (it != expr.end()) {
			jule::Ptr<_23abd3d83_Token> &_104412_p = *it;
			{
				_104313_s+=_104412_p.get()._field_Kind;
			}
			_iter_next_251a8d6d8:;
			++it;
			goto _iter_begin_251a8d6d8;
		}
		_iter_end_251a8d6d8:;
	};
	return _104313_s;
}



inline jule::Ptr<_24900cb2c_Directive> _24acbcc92_findDirective(jule::Slice<jule::Ptr<_24900cb2c_Directive>>& _32923_directives, jule::Str _32954_tag) {
	{
		auto &expr = _32923_directives;
		auto it = expr.begin();
		_iter_begin_25125e6d4:;
		if (it != expr.end()) {
			jule::Ptr<_24900cb2c_Directive> _33017_dr = *it;
			{
				if ((_33017_dr.get()._field_Tag.get()._field_Kind == _32954_tag)) {
					return _33017_dr;
				};
			}
			_iter_next_25125e6d4:;
			++it;
			goto _iter_begin_25125e6d4;
		}
		_iter_end_25125e6d4:;
	};
	return nullptr;
}



inline jule::Bool _24acbd127_hasDirective(jule::Slice<jule::Ptr<_24900cb2c_Directive>>& _33918_directives, jule::Str _33949_tag) {
	return (_24acbcc92_findDirective(_33918_directives,_33949_tag) != nullptr);
}



inline void _238975a17_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _23a870118_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_238975a17_printErrorMessage((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _23a8790bc_HelpMap[0LL][0LL].len();;
	{
		auto &expr = _23a8790bc_HelpMap;
		auto it = expr.begin();
		_iter_begin_251b350ed:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_251b350ed:;
			++it;
			goto _iter_begin_251b350ed;
		}
		_iter_end_251b350ed:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _23a8790bc_HelpMap;
		auto it = expr.begin();
		_iter_begin_251b36bd2:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_23a811c47_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_251b36bd2:;
			++it;
			_519_i++;
			goto _iter_begin_251b36bd2;
		}
		_iter_end_251b36bd2:;
	};
	jule::outln(_4913_s);
}



inline void _23a88378b_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_238975a17_printErrorMessage((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.12 @master", 18));
}



inline void _23a883ed9_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _23a88588c_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _23a8860da_tool(jule::Slice<jule::Str>& _9410_args) {
	if ((_9410_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9410_args.len() > 3LL)) {
		_238975a17_printErrorMessage((jule::Str("invalid command: ", 17) + _9410_args[3LL]));
		return;;
	};
	jule::Str _1059_cmd = _9410_args[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_251b3e69b:;
			{
				_23a883ed9_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_251b3e35a:;
			{
				_23a88588c_toolDistarch();
			}
		}
		else {
			_case_begin_251b3c985:;
			{
				_238975a17_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_251b3e2e4:;
	};
}



inline void _23a886838_julenv(jule::Slice<jule::Str>& _11712_args) {
	if ((_11712_args.len() > 2LL)) {
		_238975a17_printErrorMessage((jule::Str("invalid command: ", 17) + _11712_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.12 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: linux", 23));
	jule::outln((jule::Str("default compiler: ", 18) + _2388e7192_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _2388e766a_CppStd));
}



inline void _23a87101a_mod(jule::Slice<jule::Str>& _1309_args) {
	if ((_1309_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1309_args.len() > 3LL)) {
		_238975a17_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1309_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_251b44151:;
			{
				({
					auto except = static__2389bb794_Write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_238975a17_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_251b427c0:;
			{
				_238975a17_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[2LL]));
			}
		}
		_match_end_251b43c11:;
	};
}



inline jule::Bool _23a898053_processCommand(jule::Slice<jule::Str>& _15320_args) {
	{
		auto &_match_expr{ _15320_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_251b460cb:;
			{
				_23a870118_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_251b4552b:;
			{
				_23a88378b_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_251b45592:;
			{
				_23a8860da_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_251b45608:;
			{
				_23a886838_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_251b4566e:;
			{
				_23a87101a_mod(_15320_args);
			}
		}
		else {
			_case_begin_251b454b5:;
			{
				return false;
			}
		}
		_match_end_251b4540a:;
	};
	return true;
}



inline void _2398005a5_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _239824e59_Args();;
	if ((_18913_args.len() < 2LL)) {
		_2398005a5_showInfo();
		return;;
	};
	if (_23a898053_processCommand(_18913_args)) {
		return;;
	};
	_24ad0557c_compileCommand(_18913_args);
}



inline void _24a751825_init(void) {
	_2388e7192_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_238993eec_File> _24a7137c6_openOutput(jule::Str& _4316_path) {
	jule::Str _449_dir = _239877bc1_Dir(_4316_path);;
	({
		auto except = static__2389b50d9_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__2397ee9d3_Create(_449_dir);
				if (!except.ok()) {
					_24a68546d_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__2389b9b9e_Create(_4316_path);
		(except.ok()) ? (except.result) : ({
			_24a68546d_Throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _24acc5d77_clearObjects(void) {
	({
		auto except = static__23899b9d8_Remove(_24a899c7b_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__2397cab79_Remove(_24acbdcc6_OutDir);
}



inline void _24acc7928_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_23a901540_Cmd> _7313_cmd = static__23a90196e_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=jule::Slice<jule::Str>::make({_7214_compiler});
	_7313_cmd.get()._field_Args=jule::append(_7313_cmd.get()._field_Args,_23a82e77b_Split(_7229_compilerCmd,jule::Str(" ", 1),-1LL));
	jule::I64 _769_status = ({
		auto except = _23a901bd3_Spawn(_7313_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_251b4d4ce:;
					{
						static__24a682c1d_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_251b4de19:;
					{
						static__24a682c1d_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_251b4d754:;
					{
						static__24a682c1d_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_251b4d7ba:;
					{
						static__24a682c1d_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_251b4d622:;
					{
						static__24a682c1d_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_251b4d567:;
			};
			_24a68546d_Throw(jule::Str());
			0LL;
		});
	});;
	if ((_769_status != 0LL)) {
		jule::Str _9313_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _2388e7192_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__24a682c1d_Print(jule::Str("\033[31m", 5),_9313_errorMessage);
		_24a68546d_Throw(jule::Str());
	};
	_24acc5d77_clearObjects();
}



inline jule::Bool _24acd3b10_isCppSourceFile(jule::Str _10420_path) {
	jule::I64 _1059_offset = _23a82d23b_FindLastByte(_10420_path,'.');;
	if ((_1059_offset == -1LL)) {
		return false;
	};
	return _23a89951b_IsValidCppExt(_10420_path.slice(_1059_offset));
}



inline void _24ab12334_pushCompCmdClang(jule::Str& _11226_cmd) {
	_11226_cmd+=jule::Str("-Wno-everything ", 16);
	_11226_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _2388e766a_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_251b53b22:;
			{
				_11226_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_251b53b88:;
			{
				_11226_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_251b53cdc:;
			{
				_11226_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_251b539bd:;
	};
	_11226_cmd+=jule::Str(" ", 1);
	if (_2388e8913_Production) {
		_11226_cmd+=jule::Str("-O3 ", 4);
		_11226_cmd+=jule::Str("-flto ", 6);
		_11226_cmd+=jule::Str("-DNDEBUG ", 9);
		_11226_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11226_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _24acbe37b_pushCompCmdGcc(jule::Str& _13824_cmd) {
	_13824_cmd+=jule::Str("-w ", 3);
	_13824_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _2388e766a_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_251b565b4:;
			{
				_13824_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_251b5662a:;
			{
				_13824_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_251b5677e:;
			{
				_13824_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_251b56482:;
	};
	_13824_cmd+=jule::Str(" ", 1);
	if (_2388e8913_Production) {
		_13824_cmd+=jule::Str("-O3 ", 4);
		_13824_cmd+=jule::Str("-DNDEBUG ", 9);
		_13824_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_13824_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _24ace7a36_genCompileCmd(jule::Str _16418_sourcePath, jule::Ptr<_24a1bc659_IR>& _16436_ir) {
	jule::Str &_16510_compiler = _2388e7406_CompilerPath;;
	jule::Str _16613_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _2388e7192_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_251b59199:;
			{
				_24acbe37b_pushCompCmdGcc(_16613_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_251b59441:;
			{
				_24ab12334_pushCompCmdClang(_16613_cmd);
			}
		}
		_match_end_251b59364:;
	};
	{
		auto &expr = _16436_ir.get()._field_Passes;
		auto it = expr.begin();
		_iter_begin_251b5a2cc:;
		if (it != expr.end()) {
			jule::Str &_17612_pass = *it;
			{
				_16613_cmd+=_17612_pass;
				_16613_cmd+=jule::Str(" ", 1);
			}
			_iter_next_251b5a2cc:;
			++it;
			goto _iter_begin_251b5a2cc;
		}
		_iter_end_251b5a2cc:;
	};
	{
		auto &expr = _16436_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_251b594c9:;
		if (it != expr.end()) {
			jule::Ptr<_249c1117b_ImportInfo> &_18212_u = *it;
			{
				if ((_18212_u.get()._field_CppLinked && _24acd3b10_isCppSourceFile(_18212_u.get()._field_Path))) {
					_16613_cmd+=_18212_u.get()._field_Path;
					_16613_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_251b594c9:;
			++it;
			goto _iter_begin_251b594c9;
		}
		_iter_end_251b594c9:;
	};
	if ((!(_24acc9ad4_Out.empty()))) {
		_16613_cmd+=jule::Str("-o ", 3);
		_16613_cmd+=_24acc9ad4_Out;
		_16613_cmd+=jule::Str(" ", 1);
	};
	_16613_cmd+=_16418_sourcePath;
	return std::make_tuple(_16510_compiler,_16613_cmd);
}



inline jule::Str _24a899c7b_getCompilePath(void) {
	return _23988a9b4_Join(jule::Slice<jule::Str>::make({_24acbdcc6_OutDir,_24acc80dd_OutName}));
}



inline void _24a714d38_applyTargetIndependentOptimizations(jule::Ptr<_24a1bc659_IR>& _20545_ir) {
	jule::Ptr<_24a648497_Optimizer> _20713_opt = static__24a5930b2_New(_20545_ir);;
	_24a5e5ab5_Optimize(_20713_opt.ptr());
}



inline void _24aacb7c6_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _2388e7192_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_251b5d214:;
			{
				_24a68546d_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_251b5d9a6:;
			{
				if (_2388e7406_CompilerPath.empty()) {
					_2388e7406_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_251b5da1c:;
			{
				if (_2388e7406_CompilerPath.empty()) {
					_2388e7406_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_251b5d940:;
			{
				_24a68546d_Throw((jule::Str("invalid option value for --compiler: ", 37) + _2388e7192_Compiler));
			}
		}
		_match_end_251b5d313:;
	};
}



inline void _24acce8b9_checkTargetArch(jule::Str _22820_arch) {
	if ((((_22820_arch != jule::Str("amd64", 5)) && (_22820_arch != jule::Str("arm64", 5))) && (_22820_arch != jule::Str("i386", 4)))) {
		_24a68546d_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22820_arch));
	};
}



inline void _24acbd5cd_checkTargetOs(jule::Str _23618_os) {
	if ((((_23618_os != jule::Str("windows", 7)) && (_23618_os != jule::Str("linux", 5))) && (_23618_os != jule::Str("darwin", 6)))) {
		_24a68546d_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23618_os));
	};
}



inline void _24acbd710_checkTargetFlag(jule::Str& _24421_target) {
	if (_24421_target.empty()) {
		_24a68546d_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2499_parts = _23a82e77b_Split(_24421_target,jule::Str("-", 1),-1LL);;
	if ((_2499_parts.len() != 2LL)) {
		_24a68546d_Throw((jule::Str("--target: undefined platform target format: ", 44) + _24421_target));
	};
	jule::Str _25410_os = _2499_parts[0LL];;
	jule::Str _25414_arch = _2499_parts[1LL];;
	std::tie(_25410_os,_25414_arch) = std::make_tuple(_2499_parts[0LL],_2499_parts[1LL]);
	if ((_25410_os != jule::Str("native", 6))) {
		_24acbd5cd_checkTargetOs(_25410_os);
		_23a900176_Os=_25410_os;
	};
	if ((_25414_arch != jule::Str("native", 6))) {
		_24acce8b9_checkTargetArch(_25414_arch);
		_23a8de64e_Arch=_25414_arch;
	};
	_2494e581d_UpdateTarget();
}



inline void _24ad04c41_checkOptFlag(jule::Str& _26718_opt) {
	if (_26718_opt.empty()) {
		_24a68546d_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _26718_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_251b66b8a:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_251b671da:;
			{
				_23b416c25_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_251b66a25:;
			{
				_24a68546d_Throw((jule::Str("--opt: invalid optimization level: ", 35) + _26718_opt));
			}
		}
		_match_end_251b669c0:;
	};
}



inline void _24ad050a4_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _2388e766a_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_251b67251:;
			{
				goto _match_end_251b67d34;
			}
		}
		else {
			_case_begin_251b67dde:;
			{
				_24a68546d_Throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _2388e766a_CppStd));
			}
		}
		_match_end_251b67d34:;
	};
}



inline jule::Slice<jule::Str> _24ad051d6_checkFlags(jule::Slice<jule::Str>& _29216_args) {
	jule::Str _29313_opt = jule::Str("L0", 2);;
	jule::Str _29413_target = jule::Str("native-native", 13);;
	jule::Ptr<_24ad00e5c_FlagSet> _29613_fs = static__24ad01248_New();;
	_251b6a8d6_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_251b6a8d6_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_251b6a8d6_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_24acc9ad4_Out)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_251b74a33_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2388e78ce_Shadowing)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_251b74a33_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2388e7b43_Transpilation)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_251b6a8d6_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2388e7192_Compiler)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_251b6a8d6_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2388e7406_CompilerPath)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_251b74a33_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2388e8913_Production)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_251b74a33_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2388e81d7_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_251b74a33_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2388e8605_Safety)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_251b6a8d6_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2388e766a_CppStd)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_251b74a33_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23ac1c64c_Copy)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_251b74a33_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23ac21b7e_Deadcode)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_251b74a33_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23ac0a915_Append)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_251b74a33_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23ac46236_Math)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_251b74a33_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23ac4e45e_Access)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_251b74a33_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23ac5242e_Inline)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_251b74a33_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23ac5284c_Ptr)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_251b74a33_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23ac53243_Cond)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _24ad0205c_Parse(_29613_fs.ptr(), _29216_args);
		(except.ok()) ? (except.result) : ({
			_24a68546d_Throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_24aacb7c6_checkCompilerFlag();
	_24ad050a4_checkCppStdFlag();
	_24acbd710_checkTargetFlag(_29413_target);
	_24ad04c41_checkOptFlag(_29313_opt);
	return _31813_content;
}



inline void _24ad05318_setupSemaFlags(jule::I64& _33124_flags) {
	if (_2388e78ce_Shadowing) {
		_33124_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_24a1bc659_IR> _24ad0544a_buildIr(jule::Slice<jule::Str>& _33713_args) {
	jule::Slice<jule::Str> _3389_content = _24ad051d6_checkFlags(_33713_args);;
	jule::I64 _34013_semaFlags = static_cast<jule::I64>(0LL);;
	_24ad05318_setupSemaFlags(_34013_semaFlags);
	if ((_3389_content.len() == 0LL)) {
		_24a68546d_Throw(_23a8a61e8_Logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_24a68546d_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok;;
	std::tie(_34814_path,_34820_ok) = _239894ea7_Abs(_3389_content[0LL]);
	if ((!(_34820_ok))) {
		_24a68546d_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_2389b2d0c_Status> _3549_inf = ({
		auto except = static__2389b50d9_Of(_23a8de9d4_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_24a68546d_Throw(_23a8a61e8_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
		} jule::Ptr<_2389b2d0c_Status>();});
	});;
	if ((!(_2389c048a_IsDir(_3549_inf.ptr())))) {
		_24a68546d_Throw(_23a8a61e8_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_24a1bc659_IR> _36214_ir;;
	jule::Slice<_23a8a5ca8_Log> _36218_logs;;
	std::tie(_36214_ir,_36218_logs) = static__248ea3dae_Build(_34814_path,_34013_semaFlags);
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_24a68546d_Throw(_23a8a61e8_Logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_34814_path)})));
	};
	if ((_36218_logs != nullptr)) {
		static__24a684a00_PrintLogs(_36218_logs);
		_24a68546d_Throw(jule::Str());
	};
	return _36214_ir;
}



inline void _24ad0557c_compileCommand(jule::Slice<jule::Str>& _37724_args) {
	_37724_args=_37724_args.slice(1LL);
	if ((_37724_args[0LL] == jule::Str("test", 4))) {
		_2388e7dda_Test=true;
		_37724_args=_37724_args.slice(1LL);
	};
	jule::Ptr<_24a1bc659_IR> _38313_ir = _24ad0544a_buildIr(_37724_args);;
	;
	if ((!(_2388e7dda_Test))) {
		jule::Ptr<_249bcbe38_Fn> _38817_main = _249c15889_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
		if ((_38817_main == nullptr)) {
			_24a68546d_Throw(_23a8a61e8_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_24a714d38_applyTargetIndependentOptimizations(_38313_ir);
	_24a310307_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	std::tie(_39910_compiler,_39920_compilerCmd) = _24ace7a36_genCompileCmd(_24a899c7b_getCompilePath(),_38313_ir);
	jule::Ptr<_24acb15c1_ObjectCoder> _40113_oc = static__24ac51792_New(_38313_ir,_24ac272e5_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_2388e7dda_Test) {
		jule::Ptr<_24ac1bd45_TestCoder> _40617_tc = static__24ac1c2b8_New(_40113_oc);;
		_24ac1d4ea_Serialize(_40617_tc);
	} else {
		_24acb43d7_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _24a899c7b_getCompilePath();;
	jule::Ptr<_238993eec_File> _41313_file = _24a7137c6_openOutput(_4129_path);;
	({
		auto except = _23899c698_Write(_41313_file.ptr(), static_cast<jule::Slice<jule::U8>>(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_24a68546d_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _2389bdd07_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_2388e7b43_Transpilation))) {
		_24acc7928_compileIr(_39910_compiler,_39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_23a8b799b_init();
	_249502dd0_init();
	_24a751825_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}